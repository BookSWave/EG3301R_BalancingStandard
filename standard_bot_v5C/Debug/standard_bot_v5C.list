
standard_bot_v5C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026534  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000f20  080266c8  080266c8  000366c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080275e8  080275e8  00040324  2**0
                  CONTENTS
  4 .ARM          00000008  080275e8  080275e8  000375e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080275f0  080275f0  00040324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080275f0  080275f0  000375f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080275f4  080275f4  000375f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000324  20000000  080275f8  00040000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000f264  20000328  0802791c  00040328  2**3
                  ALLOC
 10 ._user_heap_stack 00006004  2000f58c  0802791c  0004f58c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00040324  2**0
                  CONTENTS, READONLY
 12 .debug_info   000417b5  00000000  00000000  00040354  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000abd9  00000000  00000000  00081b09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002db8  00000000  00000000  0008c6e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000028f8  00000000  00000000  0008f4a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00038208  00000000  00000000  00091d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0004fd50  00000000  00000000  000c9fa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f5809  00000000  00000000  00119cf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0020f4f9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d3d4  00000000  00000000  0020f54c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  0021c920  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  0021c9ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000328 	.word	0x20000328
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080266ac 	.word	0x080266ac

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000032c 	.word	0x2000032c
 80001cc:	080266ac 	.word	0x080266ac

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000c9c:	f000 b9aa 	b.w	8000ff4 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	; (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	; (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9d08      	ldr	r5, [sp, #32]
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	468e      	mov	lr, r1
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d14d      	bne.n	8000dce <__udivmoddi4+0xaa>
 8000d32:	428a      	cmp	r2, r1
 8000d34:	4694      	mov	ip, r2
 8000d36:	d969      	bls.n	8000e0c <__udivmoddi4+0xe8>
 8000d38:	fab2 f282 	clz	r2, r2
 8000d3c:	b152      	cbz	r2, 8000d54 <__udivmoddi4+0x30>
 8000d3e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d42:	f1c2 0120 	rsb	r1, r2, #32
 8000d46:	fa20 f101 	lsr.w	r1, r0, r1
 8000d4a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d4e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d52:	4094      	lsls	r4, r2
 8000d54:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d58:	0c21      	lsrs	r1, r4, #16
 8000d5a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d5e:	fa1f f78c 	uxth.w	r7, ip
 8000d62:	fb08 e316 	mls	r3, r8, r6, lr
 8000d66:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d6a:	fb06 f107 	mul.w	r1, r6, r7
 8000d6e:	4299      	cmp	r1, r3
 8000d70:	d90a      	bls.n	8000d88 <__udivmoddi4+0x64>
 8000d72:	eb1c 0303 	adds.w	r3, ip, r3
 8000d76:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000d7a:	f080 811f 	bcs.w	8000fbc <__udivmoddi4+0x298>
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	f240 811c 	bls.w	8000fbc <__udivmoddi4+0x298>
 8000d84:	3e02      	subs	r6, #2
 8000d86:	4463      	add	r3, ip
 8000d88:	1a5b      	subs	r3, r3, r1
 8000d8a:	b2a4      	uxth	r4, r4
 8000d8c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d90:	fb08 3310 	mls	r3, r8, r0, r3
 8000d94:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d98:	fb00 f707 	mul.w	r7, r0, r7
 8000d9c:	42a7      	cmp	r7, r4
 8000d9e:	d90a      	bls.n	8000db6 <__udivmoddi4+0x92>
 8000da0:	eb1c 0404 	adds.w	r4, ip, r4
 8000da4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000da8:	f080 810a 	bcs.w	8000fc0 <__udivmoddi4+0x29c>
 8000dac:	42a7      	cmp	r7, r4
 8000dae:	f240 8107 	bls.w	8000fc0 <__udivmoddi4+0x29c>
 8000db2:	4464      	add	r4, ip
 8000db4:	3802      	subs	r0, #2
 8000db6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dba:	1be4      	subs	r4, r4, r7
 8000dbc:	2600      	movs	r6, #0
 8000dbe:	b11d      	cbz	r5, 8000dc8 <__udivmoddi4+0xa4>
 8000dc0:	40d4      	lsrs	r4, r2
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	e9c5 4300 	strd	r4, r3, [r5]
 8000dc8:	4631      	mov	r1, r6
 8000dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dce:	428b      	cmp	r3, r1
 8000dd0:	d909      	bls.n	8000de6 <__udivmoddi4+0xc2>
 8000dd2:	2d00      	cmp	r5, #0
 8000dd4:	f000 80ef 	beq.w	8000fb6 <__udivmoddi4+0x292>
 8000dd8:	2600      	movs	r6, #0
 8000dda:	e9c5 0100 	strd	r0, r1, [r5]
 8000dde:	4630      	mov	r0, r6
 8000de0:	4631      	mov	r1, r6
 8000de2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de6:	fab3 f683 	clz	r6, r3
 8000dea:	2e00      	cmp	r6, #0
 8000dec:	d14a      	bne.n	8000e84 <__udivmoddi4+0x160>
 8000dee:	428b      	cmp	r3, r1
 8000df0:	d302      	bcc.n	8000df8 <__udivmoddi4+0xd4>
 8000df2:	4282      	cmp	r2, r0
 8000df4:	f200 80f9 	bhi.w	8000fea <__udivmoddi4+0x2c6>
 8000df8:	1a84      	subs	r4, r0, r2
 8000dfa:	eb61 0303 	sbc.w	r3, r1, r3
 8000dfe:	2001      	movs	r0, #1
 8000e00:	469e      	mov	lr, r3
 8000e02:	2d00      	cmp	r5, #0
 8000e04:	d0e0      	beq.n	8000dc8 <__udivmoddi4+0xa4>
 8000e06:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e0a:	e7dd      	b.n	8000dc8 <__udivmoddi4+0xa4>
 8000e0c:	b902      	cbnz	r2, 8000e10 <__udivmoddi4+0xec>
 8000e0e:	deff      	udf	#255	; 0xff
 8000e10:	fab2 f282 	clz	r2, r2
 8000e14:	2a00      	cmp	r2, #0
 8000e16:	f040 8092 	bne.w	8000f3e <__udivmoddi4+0x21a>
 8000e1a:	eba1 010c 	sub.w	r1, r1, ip
 8000e1e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e22:	fa1f fe8c 	uxth.w	lr, ip
 8000e26:	2601      	movs	r6, #1
 8000e28:	0c20      	lsrs	r0, r4, #16
 8000e2a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e2e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e32:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e36:	fb0e f003 	mul.w	r0, lr, r3
 8000e3a:	4288      	cmp	r0, r1
 8000e3c:	d908      	bls.n	8000e50 <__udivmoddi4+0x12c>
 8000e3e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e42:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000e46:	d202      	bcs.n	8000e4e <__udivmoddi4+0x12a>
 8000e48:	4288      	cmp	r0, r1
 8000e4a:	f200 80cb 	bhi.w	8000fe4 <__udivmoddi4+0x2c0>
 8000e4e:	4643      	mov	r3, r8
 8000e50:	1a09      	subs	r1, r1, r0
 8000e52:	b2a4      	uxth	r4, r4
 8000e54:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e58:	fb07 1110 	mls	r1, r7, r0, r1
 8000e5c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e60:	fb0e fe00 	mul.w	lr, lr, r0
 8000e64:	45a6      	cmp	lr, r4
 8000e66:	d908      	bls.n	8000e7a <__udivmoddi4+0x156>
 8000e68:	eb1c 0404 	adds.w	r4, ip, r4
 8000e6c:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000e70:	d202      	bcs.n	8000e78 <__udivmoddi4+0x154>
 8000e72:	45a6      	cmp	lr, r4
 8000e74:	f200 80bb 	bhi.w	8000fee <__udivmoddi4+0x2ca>
 8000e78:	4608      	mov	r0, r1
 8000e7a:	eba4 040e 	sub.w	r4, r4, lr
 8000e7e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e82:	e79c      	b.n	8000dbe <__udivmoddi4+0x9a>
 8000e84:	f1c6 0720 	rsb	r7, r6, #32
 8000e88:	40b3      	lsls	r3, r6
 8000e8a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e8e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e92:	fa20 f407 	lsr.w	r4, r0, r7
 8000e96:	fa01 f306 	lsl.w	r3, r1, r6
 8000e9a:	431c      	orrs	r4, r3
 8000e9c:	40f9      	lsrs	r1, r7
 8000e9e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000ea2:	fa00 f306 	lsl.w	r3, r0, r6
 8000ea6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eaa:	0c20      	lsrs	r0, r4, #16
 8000eac:	fa1f fe8c 	uxth.w	lr, ip
 8000eb0:	fb09 1118 	mls	r1, r9, r8, r1
 8000eb4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eb8:	fb08 f00e 	mul.w	r0, r8, lr
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	fa02 f206 	lsl.w	r2, r2, r6
 8000ec2:	d90b      	bls.n	8000edc <__udivmoddi4+0x1b8>
 8000ec4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ec8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000ecc:	f080 8088 	bcs.w	8000fe0 <__udivmoddi4+0x2bc>
 8000ed0:	4288      	cmp	r0, r1
 8000ed2:	f240 8085 	bls.w	8000fe0 <__udivmoddi4+0x2bc>
 8000ed6:	f1a8 0802 	sub.w	r8, r8, #2
 8000eda:	4461      	add	r1, ip
 8000edc:	1a09      	subs	r1, r1, r0
 8000ede:	b2a4      	uxth	r4, r4
 8000ee0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ee4:	fb09 1110 	mls	r1, r9, r0, r1
 8000ee8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000eec:	fb00 fe0e 	mul.w	lr, r0, lr
 8000ef0:	458e      	cmp	lr, r1
 8000ef2:	d908      	bls.n	8000f06 <__udivmoddi4+0x1e2>
 8000ef4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ef8:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000efc:	d26c      	bcs.n	8000fd8 <__udivmoddi4+0x2b4>
 8000efe:	458e      	cmp	lr, r1
 8000f00:	d96a      	bls.n	8000fd8 <__udivmoddi4+0x2b4>
 8000f02:	3802      	subs	r0, #2
 8000f04:	4461      	add	r1, ip
 8000f06:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f0a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f0e:	eba1 010e 	sub.w	r1, r1, lr
 8000f12:	42a1      	cmp	r1, r4
 8000f14:	46c8      	mov	r8, r9
 8000f16:	46a6      	mov	lr, r4
 8000f18:	d356      	bcc.n	8000fc8 <__udivmoddi4+0x2a4>
 8000f1a:	d053      	beq.n	8000fc4 <__udivmoddi4+0x2a0>
 8000f1c:	b15d      	cbz	r5, 8000f36 <__udivmoddi4+0x212>
 8000f1e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f22:	eb61 010e 	sbc.w	r1, r1, lr
 8000f26:	fa01 f707 	lsl.w	r7, r1, r7
 8000f2a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f2e:	40f1      	lsrs	r1, r6
 8000f30:	431f      	orrs	r7, r3
 8000f32:	e9c5 7100 	strd	r7, r1, [r5]
 8000f36:	2600      	movs	r6, #0
 8000f38:	4631      	mov	r1, r6
 8000f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f3e:	f1c2 0320 	rsb	r3, r2, #32
 8000f42:	40d8      	lsrs	r0, r3
 8000f44:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f48:	fa21 f303 	lsr.w	r3, r1, r3
 8000f4c:	4091      	lsls	r1, r2
 8000f4e:	4301      	orrs	r1, r0
 8000f50:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f54:	fa1f fe8c 	uxth.w	lr, ip
 8000f58:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f5c:	fb07 3610 	mls	r6, r7, r0, r3
 8000f60:	0c0b      	lsrs	r3, r1, #16
 8000f62:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f66:	fb00 f60e 	mul.w	r6, r0, lr
 8000f6a:	429e      	cmp	r6, r3
 8000f6c:	fa04 f402 	lsl.w	r4, r4, r2
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x260>
 8000f72:	eb1c 0303 	adds.w	r3, ip, r3
 8000f76:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000f7a:	d22f      	bcs.n	8000fdc <__udivmoddi4+0x2b8>
 8000f7c:	429e      	cmp	r6, r3
 8000f7e:	d92d      	bls.n	8000fdc <__udivmoddi4+0x2b8>
 8000f80:	3802      	subs	r0, #2
 8000f82:	4463      	add	r3, ip
 8000f84:	1b9b      	subs	r3, r3, r6
 8000f86:	b289      	uxth	r1, r1
 8000f88:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f8c:	fb07 3316 	mls	r3, r7, r6, r3
 8000f90:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f94:	fb06 f30e 	mul.w	r3, r6, lr
 8000f98:	428b      	cmp	r3, r1
 8000f9a:	d908      	bls.n	8000fae <__udivmoddi4+0x28a>
 8000f9c:	eb1c 0101 	adds.w	r1, ip, r1
 8000fa0:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000fa4:	d216      	bcs.n	8000fd4 <__udivmoddi4+0x2b0>
 8000fa6:	428b      	cmp	r3, r1
 8000fa8:	d914      	bls.n	8000fd4 <__udivmoddi4+0x2b0>
 8000faa:	3e02      	subs	r6, #2
 8000fac:	4461      	add	r1, ip
 8000fae:	1ac9      	subs	r1, r1, r3
 8000fb0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fb4:	e738      	b.n	8000e28 <__udivmoddi4+0x104>
 8000fb6:	462e      	mov	r6, r5
 8000fb8:	4628      	mov	r0, r5
 8000fba:	e705      	b.n	8000dc8 <__udivmoddi4+0xa4>
 8000fbc:	4606      	mov	r6, r0
 8000fbe:	e6e3      	b.n	8000d88 <__udivmoddi4+0x64>
 8000fc0:	4618      	mov	r0, r3
 8000fc2:	e6f8      	b.n	8000db6 <__udivmoddi4+0x92>
 8000fc4:	454b      	cmp	r3, r9
 8000fc6:	d2a9      	bcs.n	8000f1c <__udivmoddi4+0x1f8>
 8000fc8:	ebb9 0802 	subs.w	r8, r9, r2
 8000fcc:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fd0:	3801      	subs	r0, #1
 8000fd2:	e7a3      	b.n	8000f1c <__udivmoddi4+0x1f8>
 8000fd4:	4646      	mov	r6, r8
 8000fd6:	e7ea      	b.n	8000fae <__udivmoddi4+0x28a>
 8000fd8:	4620      	mov	r0, r4
 8000fda:	e794      	b.n	8000f06 <__udivmoddi4+0x1e2>
 8000fdc:	4640      	mov	r0, r8
 8000fde:	e7d1      	b.n	8000f84 <__udivmoddi4+0x260>
 8000fe0:	46d0      	mov	r8, sl
 8000fe2:	e77b      	b.n	8000edc <__udivmoddi4+0x1b8>
 8000fe4:	3b02      	subs	r3, #2
 8000fe6:	4461      	add	r1, ip
 8000fe8:	e732      	b.n	8000e50 <__udivmoddi4+0x12c>
 8000fea:	4630      	mov	r0, r6
 8000fec:	e709      	b.n	8000e02 <__udivmoddi4+0xde>
 8000fee:	4464      	add	r4, ip
 8000ff0:	3802      	subs	r0, #2
 8000ff2:	e742      	b.n	8000e7a <__udivmoddi4+0x156>

08000ff4 <__aeabi_idiv0>:
 8000ff4:	4770      	bx	lr
 8000ff6:	bf00      	nop

08000ff8 <get_CRC8_check_sum>:
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @param[in]      ucCRC8:��ʼCRC8
  * @retval         �������CRC8
  */
uint8_t get_CRC8_check_sum(unsigned char *pch_message,unsigned int dw_length,unsigned char ucCRC8)
{
 8000ff8:	b480      	push	{r7}
 8000ffa:	b087      	sub	sp, #28
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	60f8      	str	r0, [r7, #12]
 8001000:	60b9      	str	r1, [r7, #8]
 8001002:	4613      	mov	r3, r2
 8001004:	71fb      	strb	r3, [r7, #7]
    unsigned char uc_index;
    while (dw_length--)
 8001006:	e00a      	b.n	800101e <get_CRC8_check_sum+0x26>
    {
        uc_index = ucCRC8^(*pch_message++);
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	1c5a      	adds	r2, r3, #1
 800100c:	60fa      	str	r2, [r7, #12]
 800100e:	781a      	ldrb	r2, [r3, #0]
 8001010:	79fb      	ldrb	r3, [r7, #7]
 8001012:	4053      	eors	r3, r2
 8001014:	75fb      	strb	r3, [r7, #23]
        ucCRC8 = CRC8_table[uc_index];
 8001016:	7dfb      	ldrb	r3, [r7, #23]
 8001018:	4a07      	ldr	r2, [pc, #28]	; (8001038 <get_CRC8_check_sum+0x40>)
 800101a:	5cd3      	ldrb	r3, [r2, r3]
 800101c:	71fb      	strb	r3, [r7, #7]
    while (dw_length--)
 800101e:	68bb      	ldr	r3, [r7, #8]
 8001020:	1e5a      	subs	r2, r3, #1
 8001022:	60ba      	str	r2, [r7, #8]
 8001024:	2b00      	cmp	r3, #0
 8001026:	d1ef      	bne.n	8001008 <get_CRC8_check_sum+0x10>
    }
    return(ucCRC8);
 8001028:	79fb      	ldrb	r3, [r7, #7]
}
 800102a:	4618      	mov	r0, r3
 800102c:	371c      	adds	r7, #28
 800102e:	46bd      	mov	sp, r7
 8001030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001034:	4770      	bx	lr
 8001036:	bf00      	nop
 8001038:	080268b8 	.word	0x080268b8

0800103c <verify_CRC8_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         ����߼�
  */
uint32_t verify_CRC8_check_sum(unsigned char *pch_message, unsigned int dw_length)
{
 800103c:	b580      	push	{r7, lr}
 800103e:	b084      	sub	sp, #16
 8001040:	af00      	add	r7, sp, #0
 8001042:	6078      	str	r0, [r7, #4]
 8001044:	6039      	str	r1, [r7, #0]
    unsigned char ucExpected = 0;
 8001046:	2300      	movs	r3, #0
 8001048:	73fb      	strb	r3, [r7, #15]
    if ((pch_message == 0) || (dw_length <= 2))
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	2b00      	cmp	r3, #0
 800104e:	d002      	beq.n	8001056 <verify_CRC8_check_sum+0x1a>
 8001050:	683b      	ldr	r3, [r7, #0]
 8001052:	2b02      	cmp	r3, #2
 8001054:	d801      	bhi.n	800105a <verify_CRC8_check_sum+0x1e>
    {
        return 0;
 8001056:	2300      	movs	r3, #0
 8001058:	e013      	b.n	8001082 <verify_CRC8_check_sum+0x46>
    }
    ucExpected = get_CRC8_check_sum (pch_message, dw_length - 1, CRC8_INIT);
 800105a:	683b      	ldr	r3, [r7, #0]
 800105c:	3b01      	subs	r3, #1
 800105e:	22ff      	movs	r2, #255	; 0xff
 8001060:	4619      	mov	r1, r3
 8001062:	6878      	ldr	r0, [r7, #4]
 8001064:	f7ff ffc8 	bl	8000ff8 <get_CRC8_check_sum>
 8001068:	4603      	mov	r3, r0
 800106a:	73fb      	strb	r3, [r7, #15]
    return ( ucExpected == pch_message[dw_length - 1] );
 800106c:	683b      	ldr	r3, [r7, #0]
 800106e:	3b01      	subs	r3, #1
 8001070:	687a      	ldr	r2, [r7, #4]
 8001072:	4413      	add	r3, r2
 8001074:	781b      	ldrb	r3, [r3, #0]
 8001076:	7bfa      	ldrb	r2, [r7, #15]
 8001078:	429a      	cmp	r2, r3
 800107a:	bf0c      	ite	eq
 800107c:	2301      	moveq	r3, #1
 800107e:	2300      	movne	r3, #0
 8001080:	b2db      	uxtb	r3, r3
}
 8001082:	4618      	mov	r0, r3
 8001084:	3710      	adds	r7, #16
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}

0800108a <append_CRC8_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         none
  */
void append_CRC8_check_sum(unsigned char *pch_message, unsigned int dw_length)
{
 800108a:	b580      	push	{r7, lr}
 800108c:	b084      	sub	sp, #16
 800108e:	af00      	add	r7, sp, #0
 8001090:	6078      	str	r0, [r7, #4]
 8001092:	6039      	str	r1, [r7, #0]
    unsigned char ucCRC = 0;
 8001094:	2300      	movs	r3, #0
 8001096:	73fb      	strb	r3, [r7, #15]
    if ((pch_message == 0) || (dw_length <= 2))
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	2b00      	cmp	r3, #0
 800109c:	d012      	beq.n	80010c4 <append_CRC8_check_sum+0x3a>
 800109e:	683b      	ldr	r3, [r7, #0]
 80010a0:	2b02      	cmp	r3, #2
 80010a2:	d90f      	bls.n	80010c4 <append_CRC8_check_sum+0x3a>
    {
        return;
    }
    ucCRC = get_CRC8_check_sum((unsigned char *)pch_message, dw_length - 1, CRC8_INIT);
 80010a4:	683b      	ldr	r3, [r7, #0]
 80010a6:	3b01      	subs	r3, #1
 80010a8:	22ff      	movs	r2, #255	; 0xff
 80010aa:	4619      	mov	r1, r3
 80010ac:	6878      	ldr	r0, [r7, #4]
 80010ae:	f7ff ffa3 	bl	8000ff8 <get_CRC8_check_sum>
 80010b2:	4603      	mov	r3, r0
 80010b4:	73fb      	strb	r3, [r7, #15]
    pch_message[dw_length - 1] = ucCRC;
 80010b6:	683b      	ldr	r3, [r7, #0]
 80010b8:	3b01      	subs	r3, #1
 80010ba:	687a      	ldr	r2, [r7, #4]
 80010bc:	4413      	add	r3, r2
 80010be:	7bfa      	ldrb	r2, [r7, #15]
 80010c0:	701a      	strb	r2, [r3, #0]
 80010c2:	e000      	b.n	80010c6 <append_CRC8_check_sum+0x3c>
        return;
 80010c4:	bf00      	nop
}
 80010c6:	3710      	adds	r7, #16
 80010c8:	46bd      	mov	sp, r7
 80010ca:	bd80      	pop	{r7, pc}

080010cc <get_CRC16_check_sum>:
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @param[in]      wCRC:��ʼCRC16
  * @retval         �������CRC16
  */
uint16_t get_CRC16_check_sum(uint8_t *pch_message,uint32_t dw_length,uint16_t wCRC)
{
 80010cc:	b480      	push	{r7}
 80010ce:	b087      	sub	sp, #28
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	60f8      	str	r0, [r7, #12]
 80010d4:	60b9      	str	r1, [r7, #8]
 80010d6:	4613      	mov	r3, r2
 80010d8:	80fb      	strh	r3, [r7, #6]
    uint8_t chData;
    if (pch_message == NULL)
 80010da:	68fb      	ldr	r3, [r7, #12]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d113      	bne.n	8001108 <get_CRC16_check_sum+0x3c>
    {
        return 0xFFFF;
 80010e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80010e4:	e016      	b.n	8001114 <get_CRC16_check_sum+0x48>
    }
    while(dw_length--)
    {
        chData = *pch_message++;
 80010e6:	68fb      	ldr	r3, [r7, #12]
 80010e8:	1c5a      	adds	r2, r3, #1
 80010ea:	60fa      	str	r2, [r7, #12]
 80010ec:	781b      	ldrb	r3, [r3, #0]
 80010ee:	75fb      	strb	r3, [r7, #23]
        (wCRC) = ((uint16_t)(wCRC) >> 8) ^ wCRC_table[((uint16_t)(wCRC) ^ (uint16_t)(chData)) & 0x00ff];
 80010f0:	88fb      	ldrh	r3, [r7, #6]
 80010f2:	0a1b      	lsrs	r3, r3, #8
 80010f4:	b29a      	uxth	r2, r3
 80010f6:	88f9      	ldrh	r1, [r7, #6]
 80010f8:	7dfb      	ldrb	r3, [r7, #23]
 80010fa:	404b      	eors	r3, r1
 80010fc:	b2db      	uxtb	r3, r3
 80010fe:	4908      	ldr	r1, [pc, #32]	; (8001120 <get_CRC16_check_sum+0x54>)
 8001100:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001104:	4053      	eors	r3, r2
 8001106:	80fb      	strh	r3, [r7, #6]
    while(dw_length--)
 8001108:	68bb      	ldr	r3, [r7, #8]
 800110a:	1e5a      	subs	r2, r3, #1
 800110c:	60ba      	str	r2, [r7, #8]
 800110e:	2b00      	cmp	r3, #0
 8001110:	d1e9      	bne.n	80010e6 <get_CRC16_check_sum+0x1a>
    }
    return wCRC;
 8001112:	88fb      	ldrh	r3, [r7, #6]
}
 8001114:	4618      	mov	r0, r3
 8001116:	371c      	adds	r7, #28
 8001118:	46bd      	mov	sp, r7
 800111a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111e:	4770      	bx	lr
 8001120:	080269b8 	.word	0x080269b8

08001124 <verify_CRC16_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         ����߼�
  */
uint32_t verify_CRC16_check_sum(uint8_t *pchMessage, uint32_t dwLength)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b084      	sub	sp, #16
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	6039      	str	r1, [r7, #0]
    uint16_t wExpected = 0;
 800112e:	2300      	movs	r3, #0
 8001130:	81fb      	strh	r3, [r7, #14]
    if ((pchMessage == NULL) || (dwLength <= 2))
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	2b00      	cmp	r3, #0
 8001136:	d002      	beq.n	800113e <verify_CRC16_check_sum+0x1a>
 8001138:	683b      	ldr	r3, [r7, #0]
 800113a:	2b02      	cmp	r3, #2
 800113c:	d801      	bhi.n	8001142 <verify_CRC16_check_sum+0x1e>
    {
        return 0;
 800113e:	2300      	movs	r3, #0
 8001140:	e020      	b.n	8001184 <verify_CRC16_check_sum+0x60>
    }
    wExpected = get_CRC16_check_sum(pchMessage, dwLength - 2, CRC16_INIT);
 8001142:	683b      	ldr	r3, [r7, #0]
 8001144:	3b02      	subs	r3, #2
 8001146:	4a11      	ldr	r2, [pc, #68]	; (800118c <verify_CRC16_check_sum+0x68>)
 8001148:	8812      	ldrh	r2, [r2, #0]
 800114a:	4619      	mov	r1, r3
 800114c:	6878      	ldr	r0, [r7, #4]
 800114e:	f7ff ffbd 	bl	80010cc <get_CRC16_check_sum>
 8001152:	4603      	mov	r3, r0
 8001154:	81fb      	strh	r3, [r7, #14]
    return ((wExpected & 0xff) == pchMessage[dwLength - 2] && ((wExpected >> 8) & 0xff) == pchMessage[dwLength - 1]);
 8001156:	89fb      	ldrh	r3, [r7, #14]
 8001158:	b2db      	uxtb	r3, r3
 800115a:	683a      	ldr	r2, [r7, #0]
 800115c:	3a02      	subs	r2, #2
 800115e:	6879      	ldr	r1, [r7, #4]
 8001160:	440a      	add	r2, r1
 8001162:	7812      	ldrb	r2, [r2, #0]
 8001164:	4293      	cmp	r3, r2
 8001166:	d10c      	bne.n	8001182 <verify_CRC16_check_sum+0x5e>
 8001168:	89fb      	ldrh	r3, [r7, #14]
 800116a:	0a1b      	lsrs	r3, r3, #8
 800116c:	b29b      	uxth	r3, r3
 800116e:	b2db      	uxtb	r3, r3
 8001170:	683a      	ldr	r2, [r7, #0]
 8001172:	3a01      	subs	r2, #1
 8001174:	6879      	ldr	r1, [r7, #4]
 8001176:	440a      	add	r2, r1
 8001178:	7812      	ldrb	r2, [r2, #0]
 800117a:	4293      	cmp	r3, r2
 800117c:	d101      	bne.n	8001182 <verify_CRC16_check_sum+0x5e>
 800117e:	2301      	movs	r3, #1
 8001180:	e000      	b.n	8001184 <verify_CRC16_check_sum+0x60>
 8001182:	2300      	movs	r3, #0
}
 8001184:	4618      	mov	r0, r3
 8001186:	3710      	adds	r7, #16
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}
 800118c:	20000000 	.word	0x20000000

08001190 <append_CRC16_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         none
  */
void append_CRC16_check_sum(uint8_t * pchMessage,uint32_t dwLength)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	b084      	sub	sp, #16
 8001194:	af00      	add	r7, sp, #0
 8001196:	6078      	str	r0, [r7, #4]
 8001198:	6039      	str	r1, [r7, #0]
    uint16_t wCRC = 0;
 800119a:	2300      	movs	r3, #0
 800119c:	81fb      	strh	r3, [r7, #14]
    if ((pchMessage == NULL) || (dwLength <= 2))
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d01d      	beq.n	80011e0 <append_CRC16_check_sum+0x50>
 80011a4:	683b      	ldr	r3, [r7, #0]
 80011a6:	2b02      	cmp	r3, #2
 80011a8:	d91a      	bls.n	80011e0 <append_CRC16_check_sum+0x50>
    {
        return;
    }
    wCRC = get_CRC16_check_sum ( (uint8_t *)pchMessage, dwLength-2, CRC16_INIT );
 80011aa:	683b      	ldr	r3, [r7, #0]
 80011ac:	3b02      	subs	r3, #2
 80011ae:	4a0e      	ldr	r2, [pc, #56]	; (80011e8 <append_CRC16_check_sum+0x58>)
 80011b0:	8812      	ldrh	r2, [r2, #0]
 80011b2:	4619      	mov	r1, r3
 80011b4:	6878      	ldr	r0, [r7, #4]
 80011b6:	f7ff ff89 	bl	80010cc <get_CRC16_check_sum>
 80011ba:	4603      	mov	r3, r0
 80011bc:	81fb      	strh	r3, [r7, #14]
    pchMessage[dwLength-2] = (uint8_t)(wCRC & 0x00ff);
 80011be:	683b      	ldr	r3, [r7, #0]
 80011c0:	3b02      	subs	r3, #2
 80011c2:	687a      	ldr	r2, [r7, #4]
 80011c4:	4413      	add	r3, r2
 80011c6:	89fa      	ldrh	r2, [r7, #14]
 80011c8:	b2d2      	uxtb	r2, r2
 80011ca:	701a      	strb	r2, [r3, #0]
    pchMessage[dwLength-1] = (uint8_t)((wCRC >> 8)& 0x00ff);
 80011cc:	89fb      	ldrh	r3, [r7, #14]
 80011ce:	0a1b      	lsrs	r3, r3, #8
 80011d0:	b299      	uxth	r1, r3
 80011d2:	683b      	ldr	r3, [r7, #0]
 80011d4:	3b01      	subs	r3, #1
 80011d6:	687a      	ldr	r2, [r7, #4]
 80011d8:	4413      	add	r3, r2
 80011da:	b2ca      	uxtb	r2, r1
 80011dc:	701a      	strb	r2, [r3, #0]
 80011de:	e000      	b.n	80011e2 <append_CRC16_check_sum+0x52>
        return;
 80011e0:	bf00      	nop
}
 80011e2:	3710      	adds	r7, #16
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	20000000 	.word	0x20000000

080011ec <buzzer>:

#include "board_lib.h"
#include "bsp_buzzer.h"

void buzzer(uint16_t freq)
{
 80011ec:	b480      	push	{r7}
 80011ee:	b083      	sub	sp, #12
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	4603      	mov	r3, r0
 80011f4:	80fb      	strh	r3, [r7, #6]
	if (freq == 0)
 80011f6:	88fb      	ldrh	r3, [r7, #6]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d104      	bne.n	8001206 <buzzer+0x1a>
	{
		htim4.Instance->CCR3 = 0;
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <buzzer+0x40>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	2200      	movs	r2, #0
 8001202:	63da      	str	r2, [r3, #60]	; 0x3c
	else
	{
		__HAL_TIM_SET_PRESCALER(&htim4, (84 * 500/freq));
		htim4.Instance->CCR3 = 500;
	}
}
 8001204:	e00c      	b.n	8001220 <buzzer+0x34>
		__HAL_TIM_SET_PRESCALER(&htim4, (84 * 500/freq));
 8001206:	88fb      	ldrh	r3, [r7, #6]
 8001208:	f24a 4210 	movw	r2, #42000	; 0xa410
 800120c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001210:	4b06      	ldr	r3, [pc, #24]	; (800122c <buzzer+0x40>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	629a      	str	r2, [r3, #40]	; 0x28
		htim4.Instance->CCR3 = 500;
 8001216:	4b05      	ldr	r3, [pc, #20]	; (800122c <buzzer+0x40>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800121e:	63da      	str	r2, [r3, #60]	; 0x3c
}
 8001220:	bf00      	nop
 8001222:	370c      	adds	r7, #12
 8001224:	46bd      	mov	sp, r7
 8001226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122a:	4770      	bx	lr
 800122c:	20001584 	.word	0x20001584

08001230 <HAL_CAN_RxFifo0MsgPendingCallback>:
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0
 8001236:	6078      	str	r0, [r7, #4]
 8001238:	6878      	ldr	r0, [r7, #4]
 800123a:	f003 ff6d 	bl	8005118 <can_ISR>
 800123e:	bf00      	nop
 8001240:	3708      	adds	r7, #8
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}

08001246 <HAL_CAN_RxFifo1MsgPendingCallback>:
 8001246:	b580      	push	{r7, lr}
 8001248:	b082      	sub	sp, #8
 800124a:	af00      	add	r7, sp, #0
 800124c:	6078      	str	r0, [r7, #4]
 800124e:	6878      	ldr	r0, [r7, #4]
 8001250:	f003 ff62 	bl	8005118 <can_ISR>
 8001254:	bf00      	nop
 8001256:	3708      	adds	r7, #8
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}

0800125c <can1_get_msg>:
 800125c:	b580      	push	{r7, lr}
 800125e:	b084      	sub	sp, #16
 8001260:	af00      	add	r7, sp, #0
 8001262:	60f8      	str	r0, [r7, #12]
 8001264:	60b9      	str	r1, [r7, #8]
 8001266:	607a      	str	r2, [r7, #4]
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	68ba      	ldr	r2, [r7, #8]
 800126c:	2100      	movs	r1, #0
 800126e:	68f8      	ldr	r0, [r7, #12]
 8001270:	f00e fef1 	bl	8010056 <HAL_CAN_GetRxMessage>
 8001274:	2300      	movs	r3, #0
 8001276:	4618      	mov	r0, r3
 8001278:	3710      	adds	r7, #16
 800127a:	46bd      	mov	sp, r7
 800127c:	bd80      	pop	{r7, pc}

0800127e <can2_get_msg>:
 800127e:	b580      	push	{r7, lr}
 8001280:	b084      	sub	sp, #16
 8001282:	af00      	add	r7, sp, #0
 8001284:	60f8      	str	r0, [r7, #12]
 8001286:	60b9      	str	r1, [r7, #8]
 8001288:	607a      	str	r2, [r7, #4]
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	68ba      	ldr	r2, [r7, #8]
 800128e:	2101      	movs	r1, #1
 8001290:	68f8      	ldr	r0, [r7, #12]
 8001292:	f00e fee0 	bl	8010056 <HAL_CAN_GetRxMessage>
 8001296:	2300      	movs	r3, #0
 8001298:	4618      	mov	r0, r3
 800129a:	3710      	adds	r7, #16
 800129c:	46bd      	mov	sp, r7
 800129e:	bd80      	pop	{r7, pc}

080012a0 <can_start>:
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b08e      	sub	sp, #56	; 0x38
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	60f8      	str	r0, [r7, #12]
 80012a8:	60b9      	str	r1, [r7, #8]
 80012aa:	607a      	str	r2, [r7, #4]
 80012ac:	f107 0310 	add.w	r3, r7, #16
 80012b0:	2228      	movs	r2, #40	; 0x28
 80012b2:	2100      	movs	r1, #0
 80012b4:	4618      	mov	r0, r3
 80012b6:	f01e f95c 	bl	801f572 <memset>
 80012ba:	2301      	movs	r3, #1
 80012bc:	633b      	str	r3, [r7, #48]	; 0x30
 80012be:	2300      	movs	r3, #0
 80012c0:	62bb      	str	r3, [r7, #40]	; 0x28
 80012c2:	2301      	movs	r3, #1
 80012c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80012c6:	68bb      	ldr	r3, [r7, #8]
 80012c8:	0c1b      	lsrs	r3, r3, #16
 80012ca:	613b      	str	r3, [r7, #16]
 80012cc:	68bb      	ldr	r3, [r7, #8]
 80012ce:	b29b      	uxth	r3, r3
 80012d0:	617b      	str	r3, [r7, #20]
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	0c1b      	lsrs	r3, r3, #16
 80012d6:	61bb      	str	r3, [r7, #24]
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	b29b      	uxth	r3, r3
 80012dc:	61fb      	str	r3, [r7, #28]
 80012de:	68fb      	ldr	r3, [r7, #12]
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4a18      	ldr	r2, [pc, #96]	; (8001344 <can_start+0xa4>)
 80012e4:	4293      	cmp	r3, r2
 80012e6:	d111      	bne.n	800130c <can_start+0x6c>
 80012e8:	2300      	movs	r3, #0
 80012ea:	627b      	str	r3, [r7, #36]	; 0x24
 80012ec:	2300      	movs	r3, #0
 80012ee:	623b      	str	r3, [r7, #32]
 80012f0:	f107 0310 	add.w	r3, r7, #16
 80012f4:	4619      	mov	r1, r3
 80012f6:	68f8      	ldr	r0, [r7, #12]
 80012f8:	f00e fcae 	bl	800fc58 <HAL_CAN_ConfigFilter>
 80012fc:	68f8      	ldr	r0, [r7, #12]
 80012fe:	f00e fd8b 	bl	800fe18 <HAL_CAN_Start>
 8001302:	2102      	movs	r1, #2
 8001304:	68f8      	ldr	r0, [r7, #12]
 8001306:	f00e ffb8 	bl	801027a <HAL_CAN_ActivateNotification>
 800130a:	e017      	b.n	800133c <can_start+0x9c>
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a0d      	ldr	r2, [pc, #52]	; (8001348 <can_start+0xa8>)
 8001312:	4293      	cmp	r3, r2
 8001314:	d112      	bne.n	800133c <can_start+0x9c>
 8001316:	2301      	movs	r3, #1
 8001318:	623b      	str	r3, [r7, #32]
 800131a:	230e      	movs	r3, #14
 800131c:	637b      	str	r3, [r7, #52]	; 0x34
 800131e:	230e      	movs	r3, #14
 8001320:	627b      	str	r3, [r7, #36]	; 0x24
 8001322:	f107 0310 	add.w	r3, r7, #16
 8001326:	4619      	mov	r1, r3
 8001328:	68f8      	ldr	r0, [r7, #12]
 800132a:	f00e fc95 	bl	800fc58 <HAL_CAN_ConfigFilter>
 800132e:	68f8      	ldr	r0, [r7, #12]
 8001330:	f00e fd72 	bl	800fe18 <HAL_CAN_Start>
 8001334:	2110      	movs	r1, #16
 8001336:	68f8      	ldr	r0, [r7, #12]
 8001338:	f00e ff9f 	bl	801027a <HAL_CAN_ActivateNotification>
 800133c:	bf00      	nop
 800133e:	3738      	adds	r7, #56	; 0x38
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	40006400 	.word	0x40006400
 8001348:	40006800 	.word	0x40006800

0800134c <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 800134c:	b580      	push	{r7, lr}
 800134e:	b084      	sub	sp, #16
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
	remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 8001354:	4b71      	ldr	r3, [pc, #452]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001356:	781b      	ldrb	r3, [r3, #0]
 8001358:	b21a      	sxth	r2, r3
 800135a:	4b70      	ldr	r3, [pc, #448]	; (800151c <dbus_remote_ISR+0x1d0>)
 800135c:	785b      	ldrb	r3, [r3, #1]
 800135e:	021b      	lsls	r3, r3, #8
 8001360:	b21b      	sxth	r3, r3
 8001362:	4313      	orrs	r3, r2
 8001364:	b21b      	sxth	r3, r3
 8001366:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800136a:	b21a      	sxth	r2, r3
 800136c:	4b6c      	ldr	r3, [pc, #432]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800136e:	801a      	strh	r2, [r3, #0]
	remote_cmd.right_x -= JOYSTICK_OFFSET;
 8001370:	4b6b      	ldr	r3, [pc, #428]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001372:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001376:	b29b      	uxth	r3, r3
 8001378:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800137c:	b29b      	uxth	r3, r3
 800137e:	b21a      	sxth	r2, r3
 8001380:	4b67      	ldr	r3, [pc, #412]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001382:	801a      	strh	r2, [r3, #0]
	remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001384:	4b65      	ldr	r3, [pc, #404]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001386:	785b      	ldrb	r3, [r3, #1]
 8001388:	08db      	lsrs	r3, r3, #3
 800138a:	b2db      	uxtb	r3, r3
 800138c:	b21a      	sxth	r2, r3
 800138e:	4b63      	ldr	r3, [pc, #396]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001390:	789b      	ldrb	r3, [r3, #2]
 8001392:	015b      	lsls	r3, r3, #5
 8001394:	b21b      	sxth	r3, r3
 8001396:	4313      	orrs	r3, r2
 8001398:	b21b      	sxth	r3, r3
 800139a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800139e:	b21a      	sxth	r2, r3
 80013a0:	4b5f      	ldr	r3, [pc, #380]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013a2:	805a      	strh	r2, [r3, #2]
	remote_cmd.right_y -= JOYSTICK_OFFSET;
 80013a4:	4b5e      	ldr	r3, [pc, #376]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80013aa:	b29b      	uxth	r3, r3
 80013ac:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80013b0:	b29b      	uxth	r3, r3
 80013b2:	b21a      	sxth	r2, r3
 80013b4:	4b5a      	ldr	r3, [pc, #360]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013b6:	805a      	strh	r2, [r3, #2]
	remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 80013b8:	4b58      	ldr	r3, [pc, #352]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013ba:	789b      	ldrb	r3, [r3, #2]
 80013bc:	099b      	lsrs	r3, r3, #6
 80013be:	b2db      	uxtb	r3, r3
 80013c0:	b21a      	sxth	r2, r3
 80013c2:	4b56      	ldr	r3, [pc, #344]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013c4:	78db      	ldrb	r3, [r3, #3]
 80013c6:	009b      	lsls	r3, r3, #2
 80013c8:	b21b      	sxth	r3, r3
 80013ca:	4313      	orrs	r3, r2
 80013cc:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 80013ce:	4b53      	ldr	r3, [pc, #332]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013d0:	791b      	ldrb	r3, [r3, #4]
 80013d2:	029b      	lsls	r3, r3, #10
 80013d4:	b21b      	sxth	r3, r3
 80013d6:	4313      	orrs	r3, r2
 80013d8:	b21b      	sxth	r3, r3
 80013da:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013de:	b21a      	sxth	r2, r3
	remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 80013e0:	4b4f      	ldr	r3, [pc, #316]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013e2:	809a      	strh	r2, [r3, #4]
	remote_cmd.left_x -= JOYSTICK_OFFSET;
 80013e4:	4b4e      	ldr	r3, [pc, #312]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013e6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80013ea:	b29b      	uxth	r3, r3
 80013ec:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	b21a      	sxth	r2, r3
 80013f4:	4b4a      	ldr	r3, [pc, #296]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013f6:	809a      	strh	r2, [r3, #4]
	remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 80013f8:	4b48      	ldr	r3, [pc, #288]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013fa:	791b      	ldrb	r3, [r3, #4]
 80013fc:	085b      	lsrs	r3, r3, #1
 80013fe:	b2db      	uxtb	r3, r3
 8001400:	b21a      	sxth	r2, r3
 8001402:	4b46      	ldr	r3, [pc, #280]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001404:	795b      	ldrb	r3, [r3, #5]
 8001406:	01db      	lsls	r3, r3, #7
 8001408:	b21b      	sxth	r3, r3
 800140a:	4313      	orrs	r3, r2
 800140c:	b21b      	sxth	r3, r3
 800140e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001412:	b21a      	sxth	r2, r3
 8001414:	4b42      	ldr	r3, [pc, #264]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001416:	80da      	strh	r2, [r3, #6]
	remote_cmd.left_y -= JOYSTICK_OFFSET;
 8001418:	4b41      	ldr	r3, [pc, #260]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800141a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800141e:	b29b      	uxth	r3, r3
 8001420:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001424:	b29b      	uxth	r3, r3
 8001426:	b21a      	sxth	r2, r3
 8001428:	4b3d      	ldr	r3, [pc, #244]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800142a:	80da      	strh	r2, [r3, #6]
	//Left switch position
	remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 800142c:	4b3b      	ldr	r3, [pc, #236]	; (800151c <dbus_remote_ISR+0x1d0>)
 800142e:	795b      	ldrb	r3, [r3, #5]
 8001430:	091b      	lsrs	r3, r3, #4
 8001432:	b2db      	uxtb	r3, r3
 8001434:	109b      	asrs	r3, r3, #2
 8001436:	b25b      	sxtb	r3, r3
 8001438:	f003 0303 	and.w	r3, r3, #3
 800143c:	b25a      	sxtb	r2, r3
 800143e:	4b38      	ldr	r3, [pc, #224]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001440:	721a      	strb	r2, [r3, #8]
	remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 8001442:	4b36      	ldr	r3, [pc, #216]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001444:	795b      	ldrb	r3, [r3, #5]
 8001446:	091b      	lsrs	r3, r3, #4
 8001448:	b2db      	uxtb	r3, r3
 800144a:	b25b      	sxtb	r3, r3
 800144c:	f003 0303 	and.w	r3, r3, #3
 8001450:	b25a      	sxtb	r2, r3
 8001452:	4b33      	ldr	r3, [pc, #204]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001454:	725a      	strb	r2, [r3, #9]
	remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 8001456:	4b31      	ldr	r3, [pc, #196]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001458:	799b      	ldrb	r3, [r3, #6]
 800145a:	b21a      	sxth	r2, r3
 800145c:	4b2f      	ldr	r3, [pc, #188]	; (800151c <dbus_remote_ISR+0x1d0>)
 800145e:	79db      	ldrb	r3, [r3, #7]
 8001460:	021b      	lsls	r3, r3, #8
 8001462:	b21b      	sxth	r3, r3
 8001464:	4313      	orrs	r3, r2
 8001466:	b21a      	sxth	r2, r3
 8001468:	4b2d      	ldr	r3, [pc, #180]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800146a:	815a      	strh	r2, [r3, #10]
	remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 800146c:	4b2b      	ldr	r3, [pc, #172]	; (800151c <dbus_remote_ISR+0x1d0>)
 800146e:	7a1b      	ldrb	r3, [r3, #8]
 8001470:	b21a      	sxth	r2, r3
 8001472:	4b2a      	ldr	r3, [pc, #168]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001474:	7a5b      	ldrb	r3, [r3, #9]
 8001476:	021b      	lsls	r3, r3, #8
 8001478:	b21b      	sxth	r3, r3
 800147a:	4313      	orrs	r3, r2
 800147c:	b21a      	sxth	r2, r3
 800147e:	4b28      	ldr	r3, [pc, #160]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001480:	819a      	strh	r2, [r3, #12]
	remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 8001482:	4b26      	ldr	r3, [pc, #152]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001484:	7a9b      	ldrb	r3, [r3, #10]
 8001486:	b21a      	sxth	r2, r3
 8001488:	4b24      	ldr	r3, [pc, #144]	; (800151c <dbus_remote_ISR+0x1d0>)
 800148a:	7adb      	ldrb	r3, [r3, #11]
 800148c:	021b      	lsls	r3, r3, #8
 800148e:	b21b      	sxth	r3, r3
 8001490:	4313      	orrs	r3, r2
 8001492:	b21a      	sxth	r2, r3
 8001494:	4b22      	ldr	r3, [pc, #136]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001496:	81da      	strh	r2, [r3, #14]
	remote_cmd.mouse_left = (remote_raw_data[12]);
 8001498:	4b20      	ldr	r3, [pc, #128]	; (800151c <dbus_remote_ISR+0x1d0>)
 800149a:	7b1b      	ldrb	r3, [r3, #12]
 800149c:	b25a      	sxtb	r2, r3
 800149e:	4b20      	ldr	r3, [pc, #128]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014a0:	761a      	strb	r2, [r3, #24]
	remote_cmd.mouse_right = (remote_raw_data[13]);
 80014a2:	4b1e      	ldr	r3, [pc, #120]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014a4:	7b5b      	ldrb	r3, [r3, #13]
 80014a6:	b25a      	sxtb	r2, r3
 80014a8:	4b1d      	ldr	r3, [pc, #116]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014aa:	765a      	strb	r2, [r3, #25]
	remote_cmd.keyboard_keys = (remote_raw_data[14]);
 80014ac:	4b1b      	ldr	r3, [pc, #108]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014ae:	7b9b      	ldrb	r3, [r3, #14]
 80014b0:	b29a      	uxth	r2, r3
 80014b2:	4b1b      	ldr	r3, [pc, #108]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014b4:	835a      	strh	r2, [r3, #26]
	remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 80014b6:	4b19      	ldr	r3, [pc, #100]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014b8:	7c1b      	ldrb	r3, [r3, #16]
 80014ba:	b21a      	sxth	r2, r3
 80014bc:	4b17      	ldr	r3, [pc, #92]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014be:	7c5b      	ldrb	r3, [r3, #17]
 80014c0:	021b      	lsls	r3, r3, #8
 80014c2:	b21b      	sxth	r3, r3
 80014c4:	4313      	orrs	r3, r2
 80014c6:	b21a      	sxth	r2, r3
 80014c8:	4b15      	ldr	r3, [pc, #84]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014ca:	839a      	strh	r2, [r3, #28]
	remote_cmd.side_dial -= JOYSTICK_OFFSET;
 80014cc:	4b14      	ldr	r3, [pc, #80]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014ce:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80014d2:	b29b      	uxth	r3, r3
 80014d4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80014d8:	b29b      	uxth	r3, r3
 80014da:	b21a      	sxth	r2, r3
 80014dc:	4b10      	ldr	r3, [pc, #64]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014de:	839a      	strh	r2, [r3, #28]
	remote_cmd.last_time = HAL_GetTick();
 80014e0:	f00e f82c 	bl	800f53c <HAL_GetTick>
 80014e4:	4603      	mov	r3, r0
 80014e6:	4a0e      	ldr	r2, [pc, #56]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014e8:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014ea:	2300      	movs	r3, #0
 80014ec:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014ee:	4b0d      	ldr	r3, [pc, #52]	; (8001524 <dbus_remote_ISR+0x1d8>)
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	f107 020c 	add.w	r2, r7, #12
 80014f6:	4611      	mov	r1, r2
 80014f8:	4618      	mov	r0, r3
 80014fa:	f01c f925 	bl	801d748 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014fe:	68fb      	ldr	r3, [r7, #12]
 8001500:	2b00      	cmp	r3, #0
 8001502:	d007      	beq.n	8001514 <dbus_remote_ISR+0x1c8>
 8001504:	4b08      	ldr	r3, [pc, #32]	; (8001528 <dbus_remote_ISR+0x1dc>)
 8001506:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	f3bf 8f4f 	dsb	sy
 8001510:	f3bf 8f6f 	isb	sy
}
 8001514:	bf00      	nop
 8001516:	3710      	adds	r7, #16
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}
 800151c:	20000344 	.word	0x20000344
 8001520:	20000358 	.word	0x20000358
 8001524:	20000490 	.word	0x20000490
 8001528:	e000ed04 	.word	0xe000ed04

0800152c <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 800152c:	b580      	push	{r7, lr}
 800152e:	b08c      	sub	sp, #48	; 0x30
 8001530:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 8001532:	4b4d      	ldr	r3, [pc, #308]	; (8001668 <dbus_remote_start+0x13c>)
 8001534:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 8001536:	4b4d      	ldr	r3, [pc, #308]	; (800166c <dbus_remote_start+0x140>)
 8001538:	62fb      	str	r3, [r7, #44]	; 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 800153a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800153c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8001540:	b2db      	uxtb	r3, r3
 8001542:	2b20      	cmp	r3, #32
 8001544:	f040 808b 	bne.w	800165e <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	2b00      	cmp	r3, #0
 800154c:	d101      	bne.n	8001552 <dbus_remote_start+0x26>
			return HAL_ERROR;
 800154e:	2301      	movs	r3, #1
 8001550:	e086      	b.n	8001660 <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 8001552:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001554:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001558:	2b01      	cmp	r3, #1
 800155a:	d101      	bne.n	8001560 <dbus_remote_start+0x34>
 800155c:	2302      	movs	r3, #2
 800155e:	e07f      	b.n	8001660 <dbus_remote_start+0x134>
 8001560:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001562:	2201      	movs	r2, #1
 8001564:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001568:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800156a:	2201      	movs	r2, #1
 800156c:	631a      	str	r2, [r3, #48]	; 0x30
		huart->pRxBuffPtr = pData;
 800156e:	68fa      	ldr	r2, [r7, #12]
 8001570:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001572:	629a      	str	r2, [r3, #40]	; 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001574:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001576:	2212      	movs	r2, #18
 8001578:	859a      	strh	r2, [r3, #44]	; 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 800157a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800157c:	2200      	movs	r2, #0
 800157e:	641a      	str	r2, [r3, #64]	; 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 8001580:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001582:	2222      	movs	r2, #34	; 0x22
 8001584:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001588:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800158a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800158c:	4a38      	ldr	r2, [pc, #224]	; (8001670 <dbus_remote_start+0x144>)
 800158e:	63da      	str	r2, [r3, #60]	; 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 8001590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001594:	2200      	movs	r2, #0
 8001596:	651a      	str	r2, [r3, #80]	; 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001598:	f107 030c 	add.w	r3, r7, #12
 800159c:	62bb      	str	r3, [r7, #40]	; 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800159e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015a0:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80015a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	3304      	adds	r3, #4
 80015a8:	4619      	mov	r1, r3
 80015aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80015ac:	681a      	ldr	r2, [r3, #0]
 80015ae:	2312      	movs	r3, #18
 80015b0:	f00f fa66 	bl	8010a80 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 80015b4:	2300      	movs	r3, #0
 80015b6:	60bb      	str	r3, [r7, #8]
 80015b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	60bb      	str	r3, [r7, #8]
 80015c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	685b      	ldr	r3, [r3, #4]
 80015c6:	60bb      	str	r3, [r7, #8]
 80015c8:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 80015ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015cc:	2200      	movs	r2, #0
 80015ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80015d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	68da      	ldr	r2, [r3, #12]
 80015d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80015e0:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80015e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	695a      	ldr	r2, [r3, #20]
 80015e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	f042 0201 	orr.w	r2, r2, #1
 80015f0:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	695a      	ldr	r2, [r3, #20]
 80015f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001600:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8001602:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001604:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001606:	2b01      	cmp	r3, #1
 8001608:	d125      	bne.n	8001656 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 800160a:	2300      	movs	r3, #0
 800160c:	607b      	str	r3, [r7, #4]
 800160e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	607b      	str	r3, [r7, #4]
 8001616:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	685b      	ldr	r3, [r3, #4]
 800161c:	607b      	str	r3, [r7, #4]
 800161e:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001620:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	330c      	adds	r3, #12
 8001626:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001628:	697b      	ldr	r3, [r7, #20]
 800162a:	e853 3f00 	ldrex	r3, [r3]
 800162e:	613b      	str	r3, [r7, #16]
   return(result);
 8001630:	693b      	ldr	r3, [r7, #16]
 8001632:	f043 0310 	orr.w	r3, r3, #16
 8001636:	627b      	str	r3, [r7, #36]	; 0x24
 8001638:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	330c      	adds	r3, #12
 800163e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001640:	623a      	str	r2, [r7, #32]
 8001642:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001644:	69f9      	ldr	r1, [r7, #28]
 8001646:	6a3a      	ldr	r2, [r7, #32]
 8001648:	e841 2300 	strex	r3, r2, [r1]
 800164c:	61bb      	str	r3, [r7, #24]
   return(result);
 800164e:	69bb      	ldr	r3, [r7, #24]
 8001650:	2b00      	cmp	r3, #0
 8001652:	d1e5      	bne.n	8001620 <dbus_remote_start+0xf4>
 8001654:	e001      	b.n	800165a <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001656:	2301      	movs	r3, #1
 8001658:	e002      	b.n	8001660 <dbus_remote_start+0x134>
		}
		return HAL_OK;
 800165a:	2300      	movs	r3, #0
 800165c:	e000      	b.n	8001660 <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800165e:	2302      	movs	r3, #2
	}
}
 8001660:	4618      	mov	r0, r3
 8001662:	3730      	adds	r7, #48	; 0x30
 8001664:	46bd      	mov	sp, r7
 8001666:	bd80      	pop	{r7, pc}
 8001668:	20000344 	.word	0x20000344
 800166c:	200016a0 	.word	0x200016a0
 8001670:	0800134d 	.word	0x0800134d

08001674 <laser_on>:
 */
#include "board_lib.h"
#include "bsp_gpio.h"

void laser_on()
{ //set to reset for open day
 8001674:	b580      	push	{r7, lr}
 8001676:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LASER_GPIO_GPIO_Port, LASER_GPIO_Pin, GPIO_PIN_RESET);
 8001678:	2200      	movs	r2, #0
 800167a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800167e:	4802      	ldr	r0, [pc, #8]	; (8001688 <laser_on+0x14>)
 8001680:	f00f fefa 	bl	8011478 <HAL_GPIO_WritePin>
}
 8001684:	bf00      	nop
 8001686:	bd80      	pop	{r7, pc}
 8001688:	40020800 	.word	0x40020800

0800168c <laser_off>:

void laser_off()
{
 800168c:	b580      	push	{r7, lr}
 800168e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LASER_GPIO_GPIO_Port, LASER_GPIO_Pin, GPIO_PIN_RESET);
 8001690:	2200      	movs	r2, #0
 8001692:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001696:	4802      	ldr	r0, [pc, #8]	; (80016a0 <laser_off+0x14>)
 8001698:	f00f feee 	bl	8011478 <HAL_GPIO_WritePin>
}
 800169c:	bf00      	nop
 800169e:	bd80      	pop	{r7, pc}
 80016a0:	40020800 	.word	0x40020800

080016a4 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 80016a4:	b480      	push	{r7}
 80016a6:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 80016a8:	f3bf 8f4f 	dsb	sy
}
 80016ac:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 80016ae:	4b06      	ldr	r3, [pc, #24]	; (80016c8 <__NVIC_SystemReset+0x24>)
 80016b0:	68db      	ldr	r3, [r3, #12]
 80016b2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 80016b6:	4904      	ldr	r1, [pc, #16]	; (80016c8 <__NVIC_SystemReset+0x24>)
 80016b8:	4b04      	ldr	r3, [pc, #16]	; (80016cc <__NVIC_SystemReset+0x28>)
 80016ba:	4313      	orrs	r3, r2
 80016bc:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80016be:	f3bf 8f4f 	dsb	sy
}
 80016c2:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 80016c4:	bf00      	nop
 80016c6:	e7fd      	b.n	80016c4 <__NVIC_SystemReset+0x20>
 80016c8:	e000ed00 	.word	0xe000ed00
 80016cc:	05fa0004 	.word	0x05fa0004

080016d0 <inv_sqrt>:
 * @brief  fast inverse square-root, to calculate 1/Sqrt(x)
 * @param  x: the number need to be calculated
 * @retval 1/Sqrt(x)
 * @usage  call in imu_ahrs_update() function
 */
float inv_sqrt(float x) {
 80016d0:	b480      	push	{r7}
 80016d2:	b087      	sub	sp, #28
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	ed87 0a01 	vstr	s0, [r7, #4]
	float halfx = 0.5f * x;
 80016da:	edd7 7a01 	vldr	s15, [r7, #4]
 80016de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80016e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016e6:	edc7 7a05 	vstr	s15, [r7, #20]
	float y = x;
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	613b      	str	r3, [r7, #16]
	long i = *(long*) &y;
 80016ee:	f107 0310 	add.w	r3, r7, #16
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	60fb      	str	r3, [r7, #12]

	i = 0x5f3759df - (i >> 1);
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	105a      	asrs	r2, r3, #1
 80016fa:	4b12      	ldr	r3, [pc, #72]	; (8001744 <inv_sqrt+0x74>)
 80016fc:	1a9b      	subs	r3, r3, r2
 80016fe:	60fb      	str	r3, [r7, #12]
	y = *(float*) &i;
 8001700:	f107 030c 	add.w	r3, r7, #12
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	613b      	str	r3, [r7, #16]
	y = y * (1.5f - (halfx * y * y));
 8001708:	ed97 7a04 	vldr	s14, [r7, #16]
 800170c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001710:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001714:	edd7 7a04 	vldr	s15, [r7, #16]
 8001718:	ee67 7a27 	vmul.f32	s15, s14, s15
 800171c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8001720:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001724:	edd7 7a04 	vldr	s15, [r7, #16]
 8001728:	ee67 7a27 	vmul.f32	s15, s14, s15
 800172c:	edc7 7a04 	vstr	s15, [r7, #16]

	return y;
 8001730:	693b      	ldr	r3, [r7, #16]
 8001732:	ee07 3a90 	vmov	s15, r3
}
 8001736:	eeb0 0a67 	vmov.f32	s0, s15
 800173a:	371c      	adds	r7, #28
 800173c:	46bd      	mov	sp, r7
 800173e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001742:	4770      	bx	lr
 8001744:	5f3759df 	.word	0x5f3759df

08001748 <gyro_write_byte>:

void gyro_write_byte(uint8_t const reg, uint8_t const data) {
 8001748:	b580      	push	{r7, lr}
 800174a:	b086      	sub	sp, #24
 800174c:	af02      	add	r7, sp, #8
 800174e:	4603      	mov	r3, r0
 8001750:	460a      	mov	r2, r1
 8001752:	71fb      	strb	r3, [r7, #7]
 8001754:	4613      	mov	r3, r2
 8001756:	71bb      	strb	r3, [r7, #6]
	BMI_GYRO_NSS_LOW;
 8001758:	2200      	movs	r2, #0
 800175a:	2101      	movs	r1, #1
 800175c:	4811      	ldr	r0, [pc, #68]	; (80017a4 <gyro_write_byte+0x5c>)
 800175e:	f00f fe8b 	bl	8011478 <HAL_GPIO_WritePin>
	uint8_t tx, rx;
	tx = reg;
 8001762:	79fb      	ldrb	r3, [r7, #7]
 8001764:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 8001766:	f107 020e 	add.w	r2, r7, #14
 800176a:	f107 010f 	add.w	r1, r7, #15
 800176e:	2364      	movs	r3, #100	; 0x64
 8001770:	9300      	str	r3, [sp, #0]
 8001772:	2301      	movs	r3, #1
 8001774:	480c      	ldr	r0, [pc, #48]	; (80017a8 <gyro_write_byte+0x60>)
 8001776:	f013 fd0f 	bl	8015198 <HAL_SPI_TransmitReceive>
	tx = data;
 800177a:	79bb      	ldrb	r3, [r7, #6]
 800177c:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800177e:	f107 020e 	add.w	r2, r7, #14
 8001782:	f107 010f 	add.w	r1, r7, #15
 8001786:	2364      	movs	r3, #100	; 0x64
 8001788:	9300      	str	r3, [sp, #0]
 800178a:	2301      	movs	r3, #1
 800178c:	4806      	ldr	r0, [pc, #24]	; (80017a8 <gyro_write_byte+0x60>)
 800178e:	f013 fd03 	bl	8015198 <HAL_SPI_TransmitReceive>
	BMI_GYRO_NSS_HIGH;
 8001792:	2201      	movs	r2, #1
 8001794:	2101      	movs	r1, #1
 8001796:	4803      	ldr	r0, [pc, #12]	; (80017a4 <gyro_write_byte+0x5c>)
 8001798:	f00f fe6e 	bl	8011478 <HAL_GPIO_WritePin>
	return;
 800179c:	bf00      	nop
}
 800179e:	3710      	adds	r7, #16
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd80      	pop	{r7, pc}
 80017a4:	40020400 	.word	0x40020400
 80017a8:	20001394 	.word	0x20001394

080017ac <gyro_read_byte>:

uint8_t gyro_read_byte(uint8_t const reg) {
 80017ac:	b580      	push	{r7, lr}
 80017ae:	b086      	sub	sp, #24
 80017b0:	af02      	add	r7, sp, #8
 80017b2:	4603      	mov	r3, r0
 80017b4:	71fb      	strb	r3, [r7, #7]
	BMI_GYRO_NSS_LOW;
 80017b6:	2200      	movs	r2, #0
 80017b8:	2101      	movs	r1, #1
 80017ba:	4811      	ldr	r0, [pc, #68]	; (8001800 <gyro_read_byte+0x54>)
 80017bc:	f00f fe5c 	bl	8011478 <HAL_GPIO_WritePin>
	uint8_t rx, tx;
	tx = reg | 0x80;
 80017c0:	79fb      	ldrb	r3, [r7, #7]
 80017c2:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80017c6:	b2db      	uxtb	r3, r3
 80017c8:	73bb      	strb	r3, [r7, #14]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80017ca:	f107 020f 	add.w	r2, r7, #15
 80017ce:	f107 010e 	add.w	r1, r7, #14
 80017d2:	2364      	movs	r3, #100	; 0x64
 80017d4:	9300      	str	r3, [sp, #0]
 80017d6:	2301      	movs	r3, #1
 80017d8:	480a      	ldr	r0, [pc, #40]	; (8001804 <gyro_read_byte+0x58>)
 80017da:	f013 fcdd 	bl	8015198 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 80017de:	f107 010f 	add.w	r1, r7, #15
 80017e2:	2364      	movs	r3, #100	; 0x64
 80017e4:	2201      	movs	r2, #1
 80017e6:	4807      	ldr	r0, [pc, #28]	; (8001804 <gyro_read_byte+0x58>)
 80017e8:	f013 fbc5 	bl	8014f76 <HAL_SPI_Receive>
	BMI_GYRO_NSS_HIGH;
 80017ec:	2201      	movs	r2, #1
 80017ee:	2101      	movs	r1, #1
 80017f0:	4803      	ldr	r0, [pc, #12]	; (8001800 <gyro_read_byte+0x54>)
 80017f2:	f00f fe41 	bl	8011478 <HAL_GPIO_WritePin>
	return rx;
 80017f6:	7bfb      	ldrb	r3, [r7, #15]
}
 80017f8:	4618      	mov	r0, r3
 80017fa:	3710      	adds	r7, #16
 80017fc:	46bd      	mov	sp, r7
 80017fe:	bd80      	pop	{r7, pc}
 8001800:	40020400 	.word	0x40020400
 8001804:	20001394 	.word	0x20001394

08001808 <gyro_read_bytes>:

uint8_t gyro_read_bytes(uint8_t const reg, uint8_t *pData, uint8_t len) {
 8001808:	b580      	push	{r7, lr}
 800180a:	b086      	sub	sp, #24
 800180c:	af02      	add	r7, sp, #8
 800180e:	4603      	mov	r3, r0
 8001810:	6039      	str	r1, [r7, #0]
 8001812:	71fb      	strb	r3, [r7, #7]
 8001814:	4613      	mov	r3, r2
 8001816:	71bb      	strb	r3, [r7, #6]
	uint8_t tx, rx;
	BMI_GYRO_NSS_LOW;
 8001818:	2200      	movs	r2, #0
 800181a:	2101      	movs	r1, #1
 800181c:	4811      	ldr	r0, [pc, #68]	; (8001864 <gyro_read_bytes+0x5c>)
 800181e:	f00f fe2b 	bl	8011478 <HAL_GPIO_WritePin>
	tx = reg | 0x80;
 8001822:	79fb      	ldrb	r3, [r7, #7]
 8001824:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001828:	b2db      	uxtb	r3, r3
 800182a:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800182c:	f107 020e 	add.w	r2, r7, #14
 8001830:	f107 010f 	add.w	r1, r7, #15
 8001834:	2364      	movs	r3, #100	; 0x64
 8001836:	9300      	str	r3, [sp, #0]
 8001838:	2301      	movs	r3, #1
 800183a:	480b      	ldr	r0, [pc, #44]	; (8001868 <gyro_read_bytes+0x60>)
 800183c:	f013 fcac 	bl	8015198 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, pData, len, 100);
 8001840:	79bb      	ldrb	r3, [r7, #6]
 8001842:	b29a      	uxth	r2, r3
 8001844:	2364      	movs	r3, #100	; 0x64
 8001846:	6839      	ldr	r1, [r7, #0]
 8001848:	4807      	ldr	r0, [pc, #28]	; (8001868 <gyro_read_bytes+0x60>)
 800184a:	f013 fb94 	bl	8014f76 <HAL_SPI_Receive>
	BMI_GYRO_NSS_HIGH;
 800184e:	2201      	movs	r2, #1
 8001850:	2101      	movs	r1, #1
 8001852:	4804      	ldr	r0, [pc, #16]	; (8001864 <gyro_read_bytes+0x5c>)
 8001854:	f00f fe10 	bl	8011478 <HAL_GPIO_WritePin>
	return 0;
 8001858:	2300      	movs	r3, #0
}
 800185a:	4618      	mov	r0, r3
 800185c:	3710      	adds	r7, #16
 800185e:	46bd      	mov	sp, r7
 8001860:	bd80      	pop	{r7, pc}
 8001862:	bf00      	nop
 8001864:	40020400 	.word	0x40020400
 8001868:	20001394 	.word	0x20001394

0800186c <accel_write_byte>:
		return 1;
	}
	return 0;
}

void accel_write_byte(uint8_t const reg, uint8_t const data) {
 800186c:	b580      	push	{r7, lr}
 800186e:	b086      	sub	sp, #24
 8001870:	af02      	add	r7, sp, #8
 8001872:	4603      	mov	r3, r0
 8001874:	460a      	mov	r2, r1
 8001876:	71fb      	strb	r3, [r7, #7]
 8001878:	4613      	mov	r3, r2
 800187a:	71bb      	strb	r3, [r7, #6]
	uint8_t tx, rx;
	BMI_ACCEL_NSS_LOW;
 800187c:	2200      	movs	r2, #0
 800187e:	2110      	movs	r1, #16
 8001880:	4811      	ldr	r0, [pc, #68]	; (80018c8 <accel_write_byte+0x5c>)
 8001882:	f00f fdf9 	bl	8011478 <HAL_GPIO_WritePin>
	tx = reg;
 8001886:	79fb      	ldrb	r3, [r7, #7]
 8001888:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800188a:	f107 020e 	add.w	r2, r7, #14
 800188e:	f107 010f 	add.w	r1, r7, #15
 8001892:	2364      	movs	r3, #100	; 0x64
 8001894:	9300      	str	r3, [sp, #0]
 8001896:	2301      	movs	r3, #1
 8001898:	480c      	ldr	r0, [pc, #48]	; (80018cc <accel_write_byte+0x60>)
 800189a:	f013 fc7d 	bl	8015198 <HAL_SPI_TransmitReceive>
	tx = data;
 800189e:	79bb      	ldrb	r3, [r7, #6]
 80018a0:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80018a2:	f107 020e 	add.w	r2, r7, #14
 80018a6:	f107 010f 	add.w	r1, r7, #15
 80018aa:	2364      	movs	r3, #100	; 0x64
 80018ac:	9300      	str	r3, [sp, #0]
 80018ae:	2301      	movs	r3, #1
 80018b0:	4806      	ldr	r0, [pc, #24]	; (80018cc <accel_write_byte+0x60>)
 80018b2:	f013 fc71 	bl	8015198 <HAL_SPI_TransmitReceive>
	BMI_ACCEL_NSS_HIGH;
 80018b6:	2201      	movs	r2, #1
 80018b8:	2110      	movs	r1, #16
 80018ba:	4803      	ldr	r0, [pc, #12]	; (80018c8 <accel_write_byte+0x5c>)
 80018bc:	f00f fddc 	bl	8011478 <HAL_GPIO_WritePin>
	return;
 80018c0:	bf00      	nop
}
 80018c2:	3710      	adds	r7, #16
 80018c4:	46bd      	mov	sp, r7
 80018c6:	bd80      	pop	{r7, pc}
 80018c8:	40020000 	.word	0x40020000
 80018cc:	20001394 	.word	0x20001394

080018d0 <accel_read_byte>:

uint8_t accel_read_byte(uint8_t const reg) {
 80018d0:	b580      	push	{r7, lr}
 80018d2:	b086      	sub	sp, #24
 80018d4:	af02      	add	r7, sp, #8
 80018d6:	4603      	mov	r3, r0
 80018d8:	71fb      	strb	r3, [r7, #7]
	uint8_t tx, rx;
	BMI_ACCEL_NSS_LOW;
 80018da:	2200      	movs	r2, #0
 80018dc:	2110      	movs	r1, #16
 80018de:	4816      	ldr	r0, [pc, #88]	; (8001938 <accel_read_byte+0x68>)
 80018e0:	f00f fdca 	bl	8011478 <HAL_GPIO_WritePin>
	tx = reg | 0x80;
 80018e4:	79fb      	ldrb	r3, [r7, #7]
 80018e6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80018ea:	b2db      	uxtb	r3, r3
 80018ec:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80018ee:	f107 020e 	add.w	r2, r7, #14
 80018f2:	f107 010f 	add.w	r1, r7, #15
 80018f6:	2364      	movs	r3, #100	; 0x64
 80018f8:	9300      	str	r3, [sp, #0]
 80018fa:	2301      	movs	r3, #1
 80018fc:	480f      	ldr	r0, [pc, #60]	; (800193c <accel_read_byte+0x6c>)
 80018fe:	f013 fc4b 	bl	8015198 <HAL_SPI_TransmitReceive>
	tx = 0x55;
 8001902:	2355      	movs	r3, #85	; 0x55
 8001904:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001906:	f107 010e 	add.w	r1, r7, #14
 800190a:	2364      	movs	r3, #100	; 0x64
 800190c:	2201      	movs	r2, #1
 800190e:	480b      	ldr	r0, [pc, #44]	; (800193c <accel_read_byte+0x6c>)
 8001910:	f013 fb31 	bl	8014f76 <HAL_SPI_Receive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001914:	f107 010e 	add.w	r1, r7, #14
 8001918:	2364      	movs	r3, #100	; 0x64
 800191a:	2201      	movs	r2, #1
 800191c:	4807      	ldr	r0, [pc, #28]	; (800193c <accel_read_byte+0x6c>)
 800191e:	f013 fb2a 	bl	8014f76 <HAL_SPI_Receive>
	BMI_ACCEL_NSS_HIGH;
 8001922:	2201      	movs	r2, #1
 8001924:	2110      	movs	r1, #16
 8001926:	4804      	ldr	r0, [pc, #16]	; (8001938 <accel_read_byte+0x68>)
 8001928:	f00f fda6 	bl	8011478 <HAL_GPIO_WritePin>
	return rx;
 800192c:	7bbb      	ldrb	r3, [r7, #14]
}
 800192e:	4618      	mov	r0, r3
 8001930:	3710      	adds	r7, #16
 8001932:	46bd      	mov	sp, r7
 8001934:	bd80      	pop	{r7, pc}
 8001936:	bf00      	nop
 8001938:	40020000 	.word	0x40020000
 800193c:	20001394 	.word	0x20001394

08001940 <accel_read_bytes>:

uint8_t accel_read_bytes(uint8_t reg, uint8_t pData[], uint8_t len) {
 8001940:	b580      	push	{r7, lr}
 8001942:	b086      	sub	sp, #24
 8001944:	af02      	add	r7, sp, #8
 8001946:	4603      	mov	r3, r0
 8001948:	6039      	str	r1, [r7, #0]
 800194a:	71fb      	strb	r3, [r7, #7]
 800194c:	4613      	mov	r3, r2
 800194e:	71bb      	strb	r3, [r7, #6]
	BMI_ACCEL_NSS_LOW;
 8001950:	2200      	movs	r2, #0
 8001952:	2110      	movs	r1, #16
 8001954:	4814      	ldr	r0, [pc, #80]	; (80019a8 <accel_read_bytes+0x68>)
 8001956:	f00f fd8f 	bl	8011478 <HAL_GPIO_WritePin>
	uint8_t tx, rx;
	tx = reg | 0x80;
 800195a:	79fb      	ldrb	r3, [r7, #7]
 800195c:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001960:	b2db      	uxtb	r3, r3
 8001962:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 8001964:	f107 020e 	add.w	r2, r7, #14
 8001968:	f107 010f 	add.w	r1, r7, #15
 800196c:	2364      	movs	r3, #100	; 0x64
 800196e:	9300      	str	r3, [sp, #0]
 8001970:	2301      	movs	r3, #1
 8001972:	480e      	ldr	r0, [pc, #56]	; (80019ac <accel_read_bytes+0x6c>)
 8001974:	f013 fc10 	bl	8015198 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001978:	f107 010e 	add.w	r1, r7, #14
 800197c:	2364      	movs	r3, #100	; 0x64
 800197e:	2201      	movs	r2, #1
 8001980:	480a      	ldr	r0, [pc, #40]	; (80019ac <accel_read_bytes+0x6c>)
 8001982:	f013 faf8 	bl	8014f76 <HAL_SPI_Receive>
	HAL_SPI_Receive(&IMU_HSPI, pData, len, 100);
 8001986:	79bb      	ldrb	r3, [r7, #6]
 8001988:	b29a      	uxth	r2, r3
 800198a:	2364      	movs	r3, #100	; 0x64
 800198c:	6839      	ldr	r1, [r7, #0]
 800198e:	4807      	ldr	r0, [pc, #28]	; (80019ac <accel_read_bytes+0x6c>)
 8001990:	f013 faf1 	bl	8014f76 <HAL_SPI_Receive>
	BMI_ACCEL_NSS_HIGH;
 8001994:	2201      	movs	r2, #1
 8001996:	2110      	movs	r1, #16
 8001998:	4803      	ldr	r0, [pc, #12]	; (80019a8 <accel_read_bytes+0x68>)
 800199a:	f00f fd6d 	bl	8011478 <HAL_GPIO_WritePin>
	return 0;
 800199e:	2300      	movs	r3, #0
}
 80019a0:	4618      	mov	r0, r3
 80019a2:	3710      	adds	r7, #16
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bd80      	pop	{r7, pc}
 80019a8:	40020000 	.word	0x40020000
 80019ac:	20001394 	.word	0x20001394

080019b0 <gyro_init>:
		return 1;
	}
	return 0;
}

uint8_t gyro_init() {
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b082      	sub	sp, #8
 80019b4:	af00      	add	r7, sp, #0
	gyro_write_byte(BMI088_GYRO_SOFTRESET, BMI088_GYRO_SOFTRESET_VALUE);
 80019b6:	21b6      	movs	r1, #182	; 0xb6
 80019b8:	2014      	movs	r0, #20
 80019ba:	f7ff fec5 	bl	8001748 <gyro_write_byte>
	HAL_Delay(10);
 80019be:	200a      	movs	r0, #10
 80019c0:	f00d fdc8 	bl	800f554 <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_LPM1, BMI088_GYRO_NORMAL_MODE);
 80019c4:	2100      	movs	r1, #0
 80019c6:	2011      	movs	r0, #17
 80019c8:	f7ff febe 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 80019cc:	2002      	movs	r0, #2
 80019ce:	f00d fdc1 	bl	800f554 <HAL_Delay>
	int16_t gyro_id = gyro_read_byte(BMI088_GYRO_CHIP_ID);
 80019d2:	2000      	movs	r0, #0
 80019d4:	f7ff feea 	bl	80017ac <gyro_read_byte>
 80019d8:	4603      	mov	r3, r0
 80019da:	80fb      	strh	r3, [r7, #6]
	if (gyro_id != BMI088_GYRO_CHIP_ID_VALUE) {
 80019dc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019e0:	2b0f      	cmp	r3, #15
 80019e2:	d001      	beq.n	80019e8 <gyro_init+0x38>
		NVIC_SystemReset();
 80019e4:	f7ff fe5e 	bl	80016a4 <__NVIC_SystemReset>
		return 1;
	}
	HAL_Delay(2);
 80019e8:	2002      	movs	r0, #2
 80019ea:	f00d fdb3 	bl	800f554 <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_RANGE, BMI088_GYRO_500);
 80019ee:	2102      	movs	r1, #2
 80019f0:	200f      	movs	r0, #15
 80019f2:	f7ff fea9 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 80019f6:	2002      	movs	r0, #2
 80019f8:	f00d fdac 	bl	800f554 <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_BANDWIDTH,
 80019fc:	2182      	movs	r1, #130	; 0x82
 80019fe:	2010      	movs	r0, #16
 8001a00:	f7ff fea2 	bl	8001748 <gyro_write_byte>
			(BMI088_GYRO_BANDWIDTH_MUST_Set | BMI088_GYRO_1000_116_HZ));
	HAL_Delay(2);
 8001a04:	2002      	movs	r0, #2
 8001a06:	f00d fda5 	bl	800f554 <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_INT3_INT4_IO_CONF,
 8001a0a:	2101      	movs	r1, #1
 8001a0c:	2016      	movs	r0, #22
 8001a0e:	f7ff fe9b 	bl	8001748 <gyro_write_byte>
			(BMI088_GYRO_INT3_GPIO_HIGH | BMI088_GYRO_INT3_GPIO_PP));
	HAL_Delay(2);
 8001a12:	2002      	movs	r0, #2
 8001a14:	f00d fd9e 	bl	800f554 <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_INT3_INT4_IO_MAP, BMI088_GYRO_DRDY_IO_INT3);
 8001a18:	2101      	movs	r1, #1
 8001a1a:	2018      	movs	r0, #24
 8001a1c:	f7ff fe94 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 8001a20:	2002      	movs	r0, #2
 8001a22:	f00d fd97 	bl	800f554 <HAL_Delay>

	return 0;
 8001a26:	2300      	movs	r3, #0
	//blah
}
 8001a28:	4618      	mov	r0, r3
 8001a2a:	3708      	adds	r7, #8
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bd80      	pop	{r7, pc}

08001a30 <accel_init>:

uint8_t accel_init() {
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b082      	sub	sp, #8
 8001a34:	af00      	add	r7, sp, #0
	uint8_t accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a36:	2000      	movs	r0, #0
 8001a38:	f7ff ff4a 	bl	80018d0 <accel_read_byte>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a40:	2002      	movs	r0, #2
 8001a42:	f00d fd87 	bl	800f554 <HAL_Delay>
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a46:	2000      	movs	r0, #0
 8001a48:	f7ff ff42 	bl	80018d0 <accel_read_byte>
 8001a4c:	4603      	mov	r3, r0
 8001a4e:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a50:	2002      	movs	r0, #2
 8001a52:	f00d fd7f 	bl	800f554 <HAL_Delay>
	accel_write_byte(BMI088_ACC_SOFTRESET, BMI088_ACC_SOFTRESET_VALUE);
 8001a56:	21b6      	movs	r1, #182	; 0xb6
 8001a58:	207e      	movs	r0, #126	; 0x7e
 8001a5a:	f7ff ff07 	bl	800186c <accel_write_byte>
	HAL_Delay(10);
 8001a5e:	200a      	movs	r0, #10
 8001a60:	f00d fd78 	bl	800f554 <HAL_Delay>

	//Attempt to read...twice because once doesn't cause it to initiate
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a64:	2000      	movs	r0, #0
 8001a66:	f7ff ff33 	bl	80018d0 <accel_read_byte>
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a6e:	2002      	movs	r0, #2
 8001a70:	f00d fd70 	bl	800f554 <HAL_Delay>
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a74:	2000      	movs	r0, #0
 8001a76:	f7ff ff2b 	bl	80018d0 <accel_read_byte>
 8001a7a:	4603      	mov	r3, r0
 8001a7c:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a7e:	2002      	movs	r0, #2
 8001a80:	f00d fd68 	bl	800f554 <HAL_Delay>
	if (accel_id != BMI088_ACC_CHIP_ID_VALUE) {
 8001a84:	79fb      	ldrb	r3, [r7, #7]
 8001a86:	2b1e      	cmp	r3, #30
 8001a88:	d001      	beq.n	8001a8e <accel_init+0x5e>
		//add in an error code for this someday
		return 1;
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	e023      	b.n	8001ad6 <accel_init+0xa6>
	}

	accel_write_byte(BMI088_ACC_PWR_CTRL, BMI088_ACC_ENABLE_ACC_ON);
 8001a8e:	2104      	movs	r1, #4
 8001a90:	207d      	movs	r0, #125	; 0x7d
 8001a92:	f7ff feeb 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001a96:	2002      	movs	r0, #2
 8001a98:	f00d fd5c 	bl	800f554 <HAL_Delay>
	accel_write_byte(BMI088_ACC_PWR_CONF, BMI088_ACC_PWR_ACTIVE_MODE);
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	207c      	movs	r0, #124	; 0x7c
 8001aa0:	f7ff fee4 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001aa4:	2002      	movs	r0, #2
 8001aa6:	f00d fd55 	bl	800f554 <HAL_Delay>

	//set accelerometer to normal from suspend
	accel_write_byte(BMI088_ACC_CONF,
 8001aaa:	21a8      	movs	r1, #168	; 0xa8
 8001aac:	2040      	movs	r0, #64	; 0x40
 8001aae:	f7ff fedd 	bl	800186c <accel_write_byte>
			(BMI088_ACC_NORMAL | BMI088_ACC_100_HZ | BMI088_ACC_CONF_MUST_Set));
	HAL_Delay(2);
 8001ab2:	2002      	movs	r0, #2
 8001ab4:	f00d fd4e 	bl	800f554 <HAL_Delay>

	accel_write_byte(BMI088_ACC_RANGE, BMI088_ACC_RANGE_6G);
 8001ab8:	2101      	movs	r1, #1
 8001aba:	2041      	movs	r0, #65	; 0x41
 8001abc:	f7ff fed6 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001ac0:	2002      	movs	r0, #2
 8001ac2:	f00d fd47 	bl	800f554 <HAL_Delay>

	accel_write_byte(BMI088_INT1_IO_CTRL,
 8001ac6:	2108      	movs	r1, #8
 8001ac8:	2053      	movs	r0, #83	; 0x53
 8001aca:	f7ff fecf 	bl	800186c <accel_write_byte>
			(BMI088_ACC_INT1_IO_ENABLE | BMI088_ACC_INT1_GPIO_PP | BMI088_ACC_INT1_GPIO_LOW));
	HAL_Delay(2);
 8001ace:	2002      	movs	r0, #2
 8001ad0:	f00d fd40 	bl	800f554 <HAL_Delay>
	return 0;
 8001ad4:	2300      	movs	r3, #0
}
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	3708      	adds	r7, #8
 8001ada:	46bd      	mov	sp, r7
 8001adc:	bd80      	pop	{r7, pc}
	...

08001ae0 <mag_read_single_reg>:
	}
	float temperature = temp_int11 * 0.125 / temp_buff[1] + 23;
	return temperature;
}

uint8_t mag_read_single_reg(uint8_t reg) {
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b088      	sub	sp, #32
 8001ae4:	af04      	add	r7, sp, #16
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	71fb      	strb	r3, [r7, #7]
	uint8_t data = 0;
 8001aea:	2300      	movs	r3, #0
 8001aec:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Read(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 5);
 8001aee:	79fb      	ldrb	r3, [r7, #7]
 8001af0:	b29a      	uxth	r2, r3
 8001af2:	2305      	movs	r3, #5
 8001af4:	9302      	str	r3, [sp, #8]
 8001af6:	2301      	movs	r3, #1
 8001af8:	9301      	str	r3, [sp, #4]
 8001afa:	f107 030f 	add.w	r3, r7, #15
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	2301      	movs	r3, #1
 8001b02:	211c      	movs	r1, #28
 8001b04:	4803      	ldr	r0, [pc, #12]	; (8001b14 <mag_read_single_reg+0x34>)
 8001b06:	f00f ff27 	bl	8011958 <HAL_I2C_Mem_Read>
	return data;
 8001b0a:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b0c:	4618      	mov	r0, r3
 8001b0e:	3710      	adds	r7, #16
 8001b10:	46bd      	mov	sp, r7
 8001b12:	bd80      	pop	{r7, pc}
 8001b14:	20001270 	.word	0x20001270

08001b18 <mag_write_single_reg>:

void mag_write_single_reg(uint8_t reg, uint8_t data) {
 8001b18:	b580      	push	{r7, lr}
 8001b1a:	b086      	sub	sp, #24
 8001b1c:	af04      	add	r7, sp, #16
 8001b1e:	4603      	mov	r3, r0
 8001b20:	460a      	mov	r2, r1
 8001b22:	71fb      	strb	r3, [r7, #7]
 8001b24:	4613      	mov	r3, r2
 8001b26:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Mem_Write(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 5);
 8001b28:	79fb      	ldrb	r3, [r7, #7]
 8001b2a:	b29a      	uxth	r2, r3
 8001b2c:	2305      	movs	r3, #5
 8001b2e:	9302      	str	r3, [sp, #8]
 8001b30:	2301      	movs	r3, #1
 8001b32:	9301      	str	r3, [sp, #4]
 8001b34:	1dbb      	adds	r3, r7, #6
 8001b36:	9300      	str	r3, [sp, #0]
 8001b38:	2301      	movs	r3, #1
 8001b3a:	211c      	movs	r1, #28
 8001b3c:	4803      	ldr	r0, [pc, #12]	; (8001b4c <mag_write_single_reg+0x34>)
 8001b3e:	f00f fe11 	bl	8011764 <HAL_I2C_Mem_Write>
}
 8001b42:	bf00      	nop
 8001b44:	3708      	adds	r7, #8
 8001b46:	46bd      	mov	sp, r7
 8001b48:	bd80      	pop	{r7, pc}
 8001b4a:	bf00      	nop
 8001b4c:	20001270 	.word	0x20001270

08001b50 <mag_read_multi_reg_dma>:

void mag_read_multi_reg(uint8_t reg, uint16_t len, uint8_t *data) {
	HAL_I2C_Mem_Read(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, data, len, 10);
}

void mag_read_multi_reg_dma(uint8_t reg, uint16_t len, uint8_t *data) {
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b084      	sub	sp, #16
 8001b54:	af02      	add	r7, sp, #8
 8001b56:	4603      	mov	r3, r0
 8001b58:	603a      	str	r2, [r7, #0]
 8001b5a:	71fb      	strb	r3, [r7, #7]
 8001b5c:	460b      	mov	r3, r1
 8001b5e:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Mem_Read_DMA(&hi2c3, IST8310_ADDRESS << 1, reg,
 8001b60:	79fb      	ldrb	r3, [r7, #7]
 8001b62:	b29a      	uxth	r2, r3
 8001b64:	88bb      	ldrh	r3, [r7, #4]
 8001b66:	9301      	str	r3, [sp, #4]
 8001b68:	683b      	ldr	r3, [r7, #0]
 8001b6a:	9300      	str	r3, [sp, #0]
 8001b6c:	2301      	movs	r3, #1
 8001b6e:	211c      	movs	r1, #28
 8001b70:	4803      	ldr	r0, [pc, #12]	; (8001b80 <mag_read_multi_reg_dma+0x30>)
 8001b72:	f010 f917 	bl	8011da4 <HAL_I2C_Mem_Read_DMA>
	I2C_MEMADD_SIZE_8BIT, data, len);
}
 8001b76:	bf00      	nop
 8001b78:	3708      	adds	r7, #8
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}
 8001b7e:	bf00      	nop
 8001b80:	20001270 	.word	0x20001270
 8001b84:	00000000 	.word	0x00000000

08001b88 <gyro_offset_cali>:
void reset_imu_data() {

}

//find the offset of the gyro
void gyro_offset_cali() {
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
	int32_t gyro_x_total = 0;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	60fb      	str	r3, [r7, #12]
	int32_t gyro_y_total = 0;
 8001b92:	2300      	movs	r3, #0
 8001b94:	60bb      	str	r3, [r7, #8]
	int32_t gyro_z_total = 0;
 8001b96:	2300      	movs	r3, #0
 8001b98:	607b      	str	r3, [r7, #4]
	for (uint16_t i = 0; i < 100; i++) {
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	807b      	strh	r3, [r7, #2]
 8001b9e:	e031      	b.n	8001c04 <gyro_offset_cali+0x7c>
		gyro_read_bytes(BMI088_GYRO_X_L, gyro_buff, 6);
 8001ba0:	2206      	movs	r2, #6
 8001ba2:	4935      	ldr	r1, [pc, #212]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001ba4:	2002      	movs	r0, #2
 8001ba6:	f7ff fe2f 	bl	8001808 <gyro_read_bytes>
		gyro_x_total += (int16_t)(gyro_buff[1] << 8 | gyro_buff[0]);
 8001baa:	4b33      	ldr	r3, [pc, #204]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bac:	785b      	ldrb	r3, [r3, #1]
 8001bae:	021b      	lsls	r3, r3, #8
 8001bb0:	b21a      	sxth	r2, r3
 8001bb2:	4b31      	ldr	r3, [pc, #196]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bb4:	781b      	ldrb	r3, [r3, #0]
 8001bb6:	b21b      	sxth	r3, r3
 8001bb8:	4313      	orrs	r3, r2
 8001bba:	b21b      	sxth	r3, r3
 8001bbc:	461a      	mov	r2, r3
 8001bbe:	68fb      	ldr	r3, [r7, #12]
 8001bc0:	4413      	add	r3, r2
 8001bc2:	60fb      	str	r3, [r7, #12]
		gyro_y_total += (int16_t)(gyro_buff[3] << 8 | gyro_buff[2]);
 8001bc4:	4b2c      	ldr	r3, [pc, #176]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bc6:	78db      	ldrb	r3, [r3, #3]
 8001bc8:	021b      	lsls	r3, r3, #8
 8001bca:	b21a      	sxth	r2, r3
 8001bcc:	4b2a      	ldr	r3, [pc, #168]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bce:	789b      	ldrb	r3, [r3, #2]
 8001bd0:	b21b      	sxth	r3, r3
 8001bd2:	4313      	orrs	r3, r2
 8001bd4:	b21b      	sxth	r3, r3
 8001bd6:	461a      	mov	r2, r3
 8001bd8:	68bb      	ldr	r3, [r7, #8]
 8001bda:	4413      	add	r3, r2
 8001bdc:	60bb      	str	r3, [r7, #8]
		gyro_z_total += (int16_t)(gyro_buff[5] << 8 | gyro_buff[4]);
 8001bde:	4b26      	ldr	r3, [pc, #152]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001be0:	795b      	ldrb	r3, [r3, #5]
 8001be2:	021b      	lsls	r3, r3, #8
 8001be4:	b21a      	sxth	r2, r3
 8001be6:	4b24      	ldr	r3, [pc, #144]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001be8:	791b      	ldrb	r3, [r3, #4]
 8001bea:	b21b      	sxth	r3, r3
 8001bec:	4313      	orrs	r3, r2
 8001bee:	b21b      	sxth	r3, r3
 8001bf0:	461a      	mov	r2, r3
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	4413      	add	r3, r2
 8001bf6:	607b      	str	r3, [r7, #4]
		HAL_Delay(2);
 8001bf8:	2002      	movs	r0, #2
 8001bfa:	f00d fcab 	bl	800f554 <HAL_Delay>
	for (uint16_t i = 0; i < 100; i++) {
 8001bfe:	887b      	ldrh	r3, [r7, #2]
 8001c00:	3301      	adds	r3, #1
 8001c02:	807b      	strh	r3, [r7, #2]
 8001c04:	887b      	ldrh	r3, [r7, #2]
 8001c06:	2b63      	cmp	r3, #99	; 0x63
 8001c08:	d9ca      	bls.n	8001ba0 <gyro_offset_cali+0x18>
	}
	imu_data.gx_offset = gyro_x_total / 100 + 0.06; //added offset
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	4a1b      	ldr	r2, [pc, #108]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c0e:	fb82 1203 	smull	r1, r2, r2, r3
 8001c12:	1152      	asrs	r2, r2, #5
 8001c14:	17db      	asrs	r3, r3, #31
 8001c16:	1ad3      	subs	r3, r2, r3
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f7fe fc83 	bl	8000524 <__aeabi_i2d>
 8001c1e:	a314      	add	r3, pc, #80	; (adr r3, 8001c70 <gyro_offset_cali+0xe8>)
 8001c20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c24:	f7fe fb32 	bl	800028c <__adddf3>
 8001c28:	4602      	mov	r2, r0
 8001c2a:	460b      	mov	r3, r1
 8001c2c:	4610      	mov	r0, r2
 8001c2e:	4619      	mov	r1, r3
 8001c30:	f7fe ff92 	bl	8000b58 <__aeabi_d2iz>
 8001c34:	4603      	mov	r3, r0
 8001c36:	b21a      	sxth	r2, r3
 8001c38:	4b11      	ldr	r3, [pc, #68]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c3a:	865a      	strh	r2, [r3, #50]	; 0x32
	imu_data.gy_offset = gyro_y_total / 100;
 8001c3c:	68bb      	ldr	r3, [r7, #8]
 8001c3e:	4a0f      	ldr	r2, [pc, #60]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c40:	fb82 1203 	smull	r1, r2, r2, r3
 8001c44:	1152      	asrs	r2, r2, #5
 8001c46:	17db      	asrs	r3, r3, #31
 8001c48:	1ad3      	subs	r3, r2, r3
 8001c4a:	b21a      	sxth	r2, r3
 8001c4c:	4b0c      	ldr	r3, [pc, #48]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c4e:	869a      	strh	r2, [r3, #52]	; 0x34
	imu_data.gz_offset = gyro_z_total / 100;
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	4a0a      	ldr	r2, [pc, #40]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c54:	fb82 1203 	smull	r1, r2, r2, r3
 8001c58:	1152      	asrs	r2, r2, #5
 8001c5a:	17db      	asrs	r3, r3, #31
 8001c5c:	1ad3      	subs	r3, r2, r3
 8001c5e:	b21a      	sxth	r2, r3
 8001c60:	4b07      	ldr	r3, [pc, #28]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c62:	86da      	strh	r2, [r3, #54]	; 0x36

}
 8001c64:	bf00      	nop
 8001c66:	3710      	adds	r7, #16
 8001c68:	46bd      	mov	sp, r7
 8001c6a:	bd80      	pop	{r7, pc}
 8001c6c:	f3af 8000 	nop.w
 8001c70:	eb851eb8 	.word	0xeb851eb8
 8001c74:	3faeb851 	.word	0x3faeb851
 8001c78:	20000384 	.word	0x20000384
 8001c7c:	51eb851f 	.word	0x51eb851f
 8001c80:	20000394 	.word	0x20000394

08001c84 <imu_init>:

void imu_init() {
 8001c84:	b580      	push	{r7, lr}
 8001c86:	af00      	add	r7, sp, #0
	//trigger NSS low and high for both to initialise both gyro and accel into SPI mode
	BMI_ACCEL_NSS_LOW;
 8001c88:	2200      	movs	r2, #0
 8001c8a:	2110      	movs	r1, #16
 8001c8c:	480f      	ldr	r0, [pc, #60]	; (8001ccc <imu_init+0x48>)
 8001c8e:	f00f fbf3 	bl	8011478 <HAL_GPIO_WritePin>
	BMI_GYRO_NSS_LOW;
 8001c92:	2200      	movs	r2, #0
 8001c94:	2101      	movs	r1, #1
 8001c96:	480e      	ldr	r0, [pc, #56]	; (8001cd0 <imu_init+0x4c>)
 8001c98:	f00f fbee 	bl	8011478 <HAL_GPIO_WritePin>
	HAL_Delay(100);
 8001c9c:	2064      	movs	r0, #100	; 0x64
 8001c9e:	f00d fc59 	bl	800f554 <HAL_Delay>
	BMI_ACCEL_NSS_HIGH;
 8001ca2:	2201      	movs	r2, #1
 8001ca4:	2110      	movs	r1, #16
 8001ca6:	4809      	ldr	r0, [pc, #36]	; (8001ccc <imu_init+0x48>)
 8001ca8:	f00f fbe6 	bl	8011478 <HAL_GPIO_WritePin>
	BMI_GYRO_NSS_HIGH;
 8001cac:	2201      	movs	r2, #1
 8001cae:	2101      	movs	r1, #1
 8001cb0:	4807      	ldr	r0, [pc, #28]	; (8001cd0 <imu_init+0x4c>)
 8001cb2:	f00f fbe1 	bl	8011478 <HAL_GPIO_WritePin>
	gyro_init();
 8001cb6:	f7ff fe7b 	bl	80019b0 <gyro_init>
	accel_init();
 8001cba:	f7ff feb9 	bl	8001a30 <accel_init>
	ist8310_init();
 8001cbe:	f000 f907 	bl	8001ed0 <ist8310_init>
	gyro_offset_cali();
 8001cc2:	f7ff ff61 	bl	8001b88 <gyro_offset_cali>

}
 8001cc6:	bf00      	nop
 8001cc8:	bd80      	pop	{r7, pc}
 8001cca:	bf00      	nop
 8001ccc:	40020000 	.word	0x40020000
 8001cd0:	40020400 	.word	0x40020400

08001cd4 <imu_start_ints>:

void imu_start_ints() {
 8001cd4:	b580      	push	{r7, lr}
 8001cd6:	af00      	add	r7, sp, #0
	gyro_write_byte(BMI088_GYRO_CTRL, BMI088_DRDY_ON);
 8001cd8:	2180      	movs	r1, #128	; 0x80
 8001cda:	2015      	movs	r0, #21
 8001cdc:	f7ff fd34 	bl	8001748 <gyro_write_byte>
	vTaskDelay(10);
 8001ce0:	200a      	movs	r0, #10
 8001ce2:	f01a fed5 	bl	801ca90 <vTaskDelay>
	accel_write_byte(BMI088_INT_MAP_DATA, BMI088_ACC_INT1_DRDY_INTERRUPT);
 8001ce6:	2104      	movs	r1, #4
 8001ce8:	2058      	movs	r0, #88	; 0x58
 8001cea:	f7ff fdbf 	bl	800186c <accel_write_byte>
	vTaskDelay(10);
 8001cee:	200a      	movs	r0, #10
 8001cf0:	f01a fece 	bl	801ca90 <vTaskDelay>
	mag_write_single_reg(0x0B, 0x08); //enable drdy pin, pull to low on drdy
 8001cf4:	2108      	movs	r1, #8
 8001cf6:	200b      	movs	r0, #11
 8001cf8:	f7ff ff0e 	bl	8001b18 <mag_write_single_reg>
	imu_init_status = 1;
 8001cfc:	4b02      	ldr	r3, [pc, #8]	; (8001d08 <imu_start_ints+0x34>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	701a      	strb	r2, [r3, #0]
}
 8001d02:	bf00      	nop
 8001d04:	bd80      	pop	{r7, pc}
 8001d06:	bf00      	nop
 8001d08:	200003cc 	.word	0x200003cc

08001d0c <accel_get_data>:

void accel_get_data() {
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	af00      	add	r7, sp, #0
	accel_read_bytes(BMI088_ACCEL_XOUT_L, accel_buff, 6);
 8001d10:	2206      	movs	r2, #6
 8001d12:	4903      	ldr	r1, [pc, #12]	; (8001d20 <accel_get_data+0x14>)
 8001d14:	2012      	movs	r0, #18
 8001d16:	f7ff fe13 	bl	8001940 <accel_read_bytes>
//	if (rx_status == HAL_OK) {
//		spi_rdy = 0;
//		accel_rx = 1;
//	}
	//imu_data.temp = get_bmi_temp();
}
 8001d1a:	bf00      	nop
 8001d1c:	bd80      	pop	{r7, pc}
 8001d1e:	bf00      	nop
 8001d20:	2000037c 	.word	0x2000037c

08001d24 <accel_process_data>:

void accel_process_data() {
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b082      	sub	sp, #8
 8001d28:	af00      	add	r7, sp, #0
	int16_t accel_data;
	accel_data = (accel_buff[1] << 8 | accel_buff[0]);
 8001d2a:	4b28      	ldr	r3, [pc, #160]	; (8001dcc <accel_process_data+0xa8>)
 8001d2c:	785b      	ldrb	r3, [r3, #1]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b26      	ldr	r3, [pc, #152]	; (8001dcc <accel_process_data+0xa8>)
 8001d34:	781b      	ldrb	r3, [r3, #0]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.ax = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d3c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d40:	ee07 3a90 	vmov	s15, r3
 8001d44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d48:	ed9f 7a21 	vldr	s14, [pc, #132]	; 8001dd0 <accel_process_data+0xac>
 8001d4c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d50:	4b20      	ldr	r3, [pc, #128]	; (8001dd4 <accel_process_data+0xb0>)
 8001d52:	edc3 7a04 	vstr	s15, [r3, #16]
	accel_data = (accel_buff[3] << 8 | accel_buff[2]);
 8001d56:	4b1d      	ldr	r3, [pc, #116]	; (8001dcc <accel_process_data+0xa8>)
 8001d58:	78db      	ldrb	r3, [r3, #3]
 8001d5a:	021b      	lsls	r3, r3, #8
 8001d5c:	b21a      	sxth	r2, r3
 8001d5e:	4b1b      	ldr	r3, [pc, #108]	; (8001dcc <accel_process_data+0xa8>)
 8001d60:	789b      	ldrb	r3, [r3, #2]
 8001d62:	b21b      	sxth	r3, r3
 8001d64:	4313      	orrs	r3, r2
 8001d66:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.ay = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d68:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d6c:	ee07 3a90 	vmov	s15, r3
 8001d70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d74:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001dd0 <accel_process_data+0xac>
 8001d78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d7c:	4b15      	ldr	r3, [pc, #84]	; (8001dd4 <accel_process_data+0xb0>)
 8001d7e:	edc3 7a05 	vstr	s15, [r3, #20]
	accel_data = (accel_buff[5] << 8 | accel_buff[4]);
 8001d82:	4b12      	ldr	r3, [pc, #72]	; (8001dcc <accel_process_data+0xa8>)
 8001d84:	795b      	ldrb	r3, [r3, #5]
 8001d86:	021b      	lsls	r3, r3, #8
 8001d88:	b21a      	sxth	r2, r3
 8001d8a:	4b10      	ldr	r3, [pc, #64]	; (8001dcc <accel_process_data+0xa8>)
 8001d8c:	791b      	ldrb	r3, [r3, #4]
 8001d8e:	b21b      	sxth	r3, r3
 8001d90:	4313      	orrs	r3, r2
 8001d92:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.az = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d94:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d98:	ee07 3a90 	vmov	s15, r3
 8001d9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001da0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8001dd0 <accel_process_data+0xac>
 8001da4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001da8:	4b0a      	ldr	r3, [pc, #40]	; (8001dd4 <accel_process_data+0xb0>)
 8001daa:	edc3 7a06 	vstr	s15, [r3, #24]
	imu_data.accel_data.last_accel_update = HAL_GetTick();
 8001dae:	f00d fbc5 	bl	800f53c <HAL_GetTick>
 8001db2:	4603      	mov	r3, r0
 8001db4:	4a07      	ldr	r2, [pc, #28]	; (8001dd4 <accel_process_data+0xb0>)
 8001db6:	61d3      	str	r3, [r2, #28]

	//send data into the imu processing task
	accel_data_ready(imu_data.accel_data);
 8001db8:	4b06      	ldr	r3, [pc, #24]	; (8001dd4 <accel_process_data+0xb0>)
 8001dba:	3310      	adds	r3, #16
 8001dbc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001dbe:	f006 f8bf 	bl	8007f40 <accel_data_ready>
}
 8001dc2:	bf00      	nop
 8001dc4:	3708      	adds	r7, #8
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	bd80      	pop	{r7, pc}
 8001dca:	bf00      	nop
 8001dcc:	2000037c 	.word	0x2000037c
 8001dd0:	3aeb3333 	.word	0x3aeb3333
 8001dd4:	20000394 	.word	0x20000394

08001dd8 <gyro_get_data>:

void gyro_get_data() {
 8001dd8:	b580      	push	{r7, lr}
 8001dda:	af00      	add	r7, sp, #0
	gyro_read_bytes(BMI088_GYRO_X_L, gyro_buff, 6);
 8001ddc:	2206      	movs	r2, #6
 8001dde:	4903      	ldr	r1, [pc, #12]	; (8001dec <gyro_get_data+0x14>)
 8001de0:	2002      	movs	r0, #2
 8001de2:	f7ff fd11 	bl	8001808 <gyro_read_bytes>
//	if (rx_status == HAL_OK) {
//		spi_rdy = 0;
//		gyro_rx = 1;
//	}
}
 8001de6:	bf00      	nop
 8001de8:	bd80      	pop	{r7, pc}
 8001dea:	bf00      	nop
 8001dec:	20000384 	.word	0x20000384

08001df0 <gyro_process_data>:

void gyro_process_data() {
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b082      	sub	sp, #8
 8001df4:	af00      	add	r7, sp, #0
	int16_t gyro_data;
	gyro_data = (gyro_buff[1] << 8 | gyro_buff[0]);
 8001df6:	4b33      	ldr	r3, [pc, #204]	; (8001ec4 <gyro_process_data+0xd4>)
 8001df8:	785b      	ldrb	r3, [r3, #1]
 8001dfa:	021b      	lsls	r3, r3, #8
 8001dfc:	b21a      	sxth	r2, r3
 8001dfe:	4b31      	ldr	r3, [pc, #196]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e00:	781b      	ldrb	r3, [r3, #0]
 8001e02:	b21b      	sxth	r3, r3
 8001e04:	4313      	orrs	r3, r2
 8001e06:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gx_offset;
 8001e08:	88fa      	ldrh	r2, [r7, #6]
 8001e0a:	4b2f      	ldr	r3, [pc, #188]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e0c:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	; 0x32
 8001e10:	b29b      	uxth	r3, r3
 8001e12:	1ad3      	subs	r3, r2, r3
 8001e14:	b29b      	uxth	r3, r3
 8001e16:	80fb      	strh	r3, [r7, #6]
	//convert raw data into radians/s
	imu_data.gyro_data.gx = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e18:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e1c:	ee07 3a90 	vmov	s15, r3
 8001e20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e24:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8001ecc <gyro_process_data+0xdc>
 8001e28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e2c:	4b26      	ldr	r3, [pc, #152]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e2e:	edc3 7a00 	vstr	s15, [r3]
	gyro_data = (gyro_buff[3] << 8 | gyro_buff[2]);
 8001e32:	4b24      	ldr	r3, [pc, #144]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e34:	78db      	ldrb	r3, [r3, #3]
 8001e36:	021b      	lsls	r3, r3, #8
 8001e38:	b21a      	sxth	r2, r3
 8001e3a:	4b22      	ldr	r3, [pc, #136]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e3c:	789b      	ldrb	r3, [r3, #2]
 8001e3e:	b21b      	sxth	r3, r3
 8001e40:	4313      	orrs	r3, r2
 8001e42:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gy_offset;
 8001e44:	88fa      	ldrh	r2, [r7, #6]
 8001e46:	4b20      	ldr	r3, [pc, #128]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e48:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	; 0x34
 8001e4c:	b29b      	uxth	r3, r3
 8001e4e:	1ad3      	subs	r3, r2, r3
 8001e50:	b29b      	uxth	r3, r3
 8001e52:	80fb      	strh	r3, [r7, #6]

	//convert raw data into radians/s
	imu_data.gyro_data.gy = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e54:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e58:	ee07 3a90 	vmov	s15, r3
 8001e5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e60:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001ecc <gyro_process_data+0xdc>
 8001e64:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e68:	4b17      	ldr	r3, [pc, #92]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e6a:	edc3 7a01 	vstr	s15, [r3, #4]
	gyro_data = (gyro_buff[5] << 8 | gyro_buff[4]);
 8001e6e:	4b15      	ldr	r3, [pc, #84]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e70:	795b      	ldrb	r3, [r3, #5]
 8001e72:	021b      	lsls	r3, r3, #8
 8001e74:	b21a      	sxth	r2, r3
 8001e76:	4b13      	ldr	r3, [pc, #76]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e78:	791b      	ldrb	r3, [r3, #4]
 8001e7a:	b21b      	sxth	r3, r3
 8001e7c:	4313      	orrs	r3, r2
 8001e7e:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gz_offset;
 8001e80:	88fa      	ldrh	r2, [r7, #6]
 8001e82:	4b11      	ldr	r3, [pc, #68]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e84:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	; 0x36
 8001e88:	b29b      	uxth	r3, r3
 8001e8a:	1ad3      	subs	r3, r2, r3
 8001e8c:	b29b      	uxth	r3, r3
 8001e8e:	80fb      	strh	r3, [r7, #6]

	//convert raw data into radians/s
	imu_data.gyro_data.gz = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e90:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e94:	ee07 3a90 	vmov	s15, r3
 8001e98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e9c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8001ecc <gyro_process_data+0xdc>
 8001ea0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ea4:	4b08      	ldr	r3, [pc, #32]	; (8001ec8 <gyro_process_data+0xd8>)
 8001ea6:	edc3 7a02 	vstr	s15, [r3, #8]
	imu_data.gyro_data.last_gyro_update = HAL_GetTick();
 8001eaa:	f00d fb47 	bl	800f53c <HAL_GetTick>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	4a05      	ldr	r2, [pc, #20]	; (8001ec8 <gyro_process_data+0xd8>)
 8001eb2:	60d3      	str	r3, [r2, #12]
	//send data into the imu processing task
	gyro_data_ready(imu_data.gyro_data);
 8001eb4:	4b04      	ldr	r3, [pc, #16]	; (8001ec8 <gyro_process_data+0xd8>)
 8001eb6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001eb8:	f006 f816 	bl	8007ee8 <gyro_data_ready>
}
 8001ebc:	bf00      	nop
 8001ebe:	3708      	adds	r7, #8
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	bd80      	pop	{r7, pc}
 8001ec4:	20000384 	.word	0x20000384
 8001ec8:	20000394 	.word	0x20000394
 8001ecc:	398ba058 	.word	0x398ba058

08001ed0 <ist8310_init>:

uint8_t ist8310_init() {
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	b082      	sub	sp, #8
 8001ed4:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(IST_RST_GPIO_Port, IST_RST_Pin, GPIO_PIN_RESET);
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	2140      	movs	r1, #64	; 0x40
 8001eda:	481d      	ldr	r0, [pc, #116]	; (8001f50 <ist8310_init+0x80>)
 8001edc:	f00f facc 	bl	8011478 <HAL_GPIO_WritePin>
	HAL_Delay(2);
 8001ee0:	2002      	movs	r0, #2
 8001ee2:	f00d fb37 	bl	800f554 <HAL_Delay>
	HAL_GPIO_WritePin(IST_RST_GPIO_Port, IST_RST_Pin, GPIO_PIN_SET);
 8001ee6:	2201      	movs	r2, #1
 8001ee8:	2140      	movs	r1, #64	; 0x40
 8001eea:	4819      	ldr	r0, [pc, #100]	; (8001f50 <ist8310_init+0x80>)
 8001eec:	f00f fac4 	bl	8011478 <HAL_GPIO_WritePin>
	HAL_Delay(2);
 8001ef0:	2002      	movs	r0, #2
 8001ef2:	f00d fb2f 	bl	800f554 <HAL_Delay>

	uint8_t ist_id = mag_read_single_reg(IST8310_WHO_AM_I);
 8001ef6:	2000      	movs	r0, #0
 8001ef8:	f7ff fdf2 	bl	8001ae0 <mag_read_single_reg>
 8001efc:	4603      	mov	r3, r0
 8001efe:	71fb      	strb	r3, [r7, #7]
	if (ist_id != IST8310_DEVICE_ID_A) {
 8001f00:	79fb      	ldrb	r3, [r7, #7]
 8001f02:	2b10      	cmp	r3, #16
 8001f04:	d00a      	beq.n	8001f1c <ist8310_init+0x4c>
		//reset mag values
		imu_data.mag_data.mx = 0;
 8001f06:	4b13      	ldr	r3, [pc, #76]	; (8001f54 <ist8310_init+0x84>)
 8001f08:	2200      	movs	r2, #0
 8001f0a:	841a      	strh	r2, [r3, #32]
		imu_data.mag_data.my = 0;
 8001f0c:	4b11      	ldr	r3, [pc, #68]	; (8001f54 <ist8310_init+0x84>)
 8001f0e:	2200      	movs	r2, #0
 8001f10:	845a      	strh	r2, [r3, #34]	; 0x22
		imu_data.mag_data.mz = 0;
 8001f12:	4b10      	ldr	r3, [pc, #64]	; (8001f54 <ist8310_init+0x84>)
 8001f14:	2200      	movs	r2, #0
 8001f16:	849a      	strh	r2, [r3, #36]	; 0x24
		return 0;
 8001f18:	2300      	movs	r3, #0
 8001f1a:	e015      	b.n	8001f48 <ist8310_init+0x78>
	}
	HAL_Delay(2);
 8001f1c:	2002      	movs	r0, #2
 8001f1e:	f00d fb19 	bl	800f554 <HAL_Delay>
	mag_write_single_reg(0x41, 0x09); //average over 2 data
 8001f22:	2109      	movs	r1, #9
 8001f24:	2041      	movs	r0, #65	; 0x41
 8001f26:	f7ff fdf7 	bl	8001b18 <mag_write_single_reg>
	HAL_Delay(2);
 8001f2a:	2002      	movs	r0, #2
 8001f2c:	f00d fb12 	bl	800f554 <HAL_Delay>
	mag_write_single_reg(0x42, 0xC0); //set to C0
 8001f30:	21c0      	movs	r1, #192	; 0xc0
 8001f32:	2042      	movs	r0, #66	; 0x42
 8001f34:	f7ff fdf0 	bl	8001b18 <mag_write_single_reg>
	HAL_Delay(2);
 8001f38:	2002      	movs	r0, #2
 8001f3a:	f00d fb0b 	bl	800f554 <HAL_Delay>
	mag_write_single_reg(0x0A, 0x0B); //100Hz
 8001f3e:	210b      	movs	r1, #11
 8001f40:	200a      	movs	r0, #10
 8001f42:	f7ff fde9 	bl	8001b18 <mag_write_single_reg>
	//mag_en_flag = 1;

	return 0;
 8001f46:	2300      	movs	r3, #0
}
 8001f48:	4618      	mov	r0, r3
 8001f4a:	3708      	adds	r7, #8
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	bd80      	pop	{r7, pc}
 8001f50:	40021800 	.word	0x40021800
 8001f54:	20000394 	.word	0x20000394

08001f58 <ist8310_get_data>:

void ist8310_get_data() {
 8001f58:	b580      	push	{r7, lr}
 8001f5a:	af00      	add	r7, sp, #0
	//fun
	mag_read_multi_reg_dma(IST8310_R_XL, 5, ist_read_buffer);
 8001f5c:	4a05      	ldr	r2, [pc, #20]	; (8001f74 <ist8310_get_data+0x1c>)
 8001f5e:	2105      	movs	r1, #5
 8001f60:	2003      	movs	r0, #3
 8001f62:	f7ff fdf5 	bl	8001b50 <mag_read_multi_reg_dma>
	imu_data.mag_data.last_mag_update = HAL_GetTick();
 8001f66:	f00d fae9 	bl	800f53c <HAL_GetTick>
 8001f6a:	4603      	mov	r3, r0
 8001f6c:	4a02      	ldr	r2, [pc, #8]	; (8001f78 <ist8310_get_data+0x20>)
 8001f6e:	6293      	str	r3, [r2, #40]	; 0x28

}
 8001f70:	bf00      	nop
 8001f72:	bd80      	pop	{r7, pc}
 8001f74:	2000038c 	.word	0x2000038c
 8001f78:	20000394 	.word	0x20000394

08001f7c <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	b082      	sub	sp, #8
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	4603      	mov	r3, r0
 8001f84:	80fb      	strh	r3, [r7, #6]
	if (imu_init_status == 1) {
 8001f86:	4b13      	ldr	r3, [pc, #76]	; (8001fd4 <HAL_GPIO_EXTI_Callback+0x58>)
 8001f88:	781b      	ldrb	r3, [r3, #0]
 8001f8a:	2b01      	cmp	r3, #1
 8001f8c:	d11e      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
		if (hspi1.State == HAL_SPI_STATE_READY) {
 8001f8e:	4b12      	ldr	r3, [pc, #72]	; (8001fd8 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001f90:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8001f94:	b2db      	uxtb	r3, r3
 8001f96:	2b01      	cmp	r3, #1
 8001f98:	d10d      	bne.n	8001fb6 <HAL_GPIO_EXTI_Callback+0x3a>
			if (GPIO_Pin == GYRO_INT_Pin) {
 8001f9a:	88fb      	ldrh	r3, [r7, #6]
 8001f9c:	2b20      	cmp	r3, #32
 8001f9e:	d103      	bne.n	8001fa8 <HAL_GPIO_EXTI_Callback+0x2c>
				gyro_get_data();
 8001fa0:	f7ff ff1a 	bl	8001dd8 <gyro_get_data>
				gyro_process_data();
 8001fa4:	f7ff ff24 	bl	8001df0 <gyro_process_data>
				//ist8310_get_data();
			}
			if (GPIO_Pin == ACC_INT_Pin) {
 8001fa8:	88fb      	ldrh	r3, [r7, #6]
 8001faa:	2b10      	cmp	r3, #16
 8001fac:	d103      	bne.n	8001fb6 <HAL_GPIO_EXTI_Callback+0x3a>
				accel_get_data();
 8001fae:	f7ff fead 	bl	8001d0c <accel_get_data>
				accel_process_data();
 8001fb2:	f7ff feb7 	bl	8001d24 <accel_process_data>
			}
		}
		if (GPIO_Pin == IST_INT_Pin) {
 8001fb6:	88fb      	ldrh	r3, [r7, #6]
 8001fb8:	2b08      	cmp	r3, #8
 8001fba:	d107      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
			if (hi2c3.State == HAL_I2C_STATE_READY) {
 8001fbc:	4b07      	ldr	r3, [pc, #28]	; (8001fdc <HAL_GPIO_EXTI_Callback+0x60>)
 8001fbe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001fc2:	b2db      	uxtb	r3, r3
 8001fc4:	2b20      	cmp	r3, #32
 8001fc6:	d101      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
				ist8310_get_data();
 8001fc8:	f7ff ffc6 	bl	8001f58 <ist8310_get_data>
			}
		}
	}
}
 8001fcc:	bf00      	nop
 8001fce:	3708      	adds	r7, #8
 8001fd0:	46bd      	mov	sp, r7
 8001fd2:	bd80      	pop	{r7, pc}
 8001fd4:	200003cc 	.word	0x200003cc
 8001fd8:	20001394 	.word	0x20001394
 8001fdc:	20001270 	.word	0x20001270

08001fe0 <HAL_I2C_MemRxCpltCallback>:
	spi_rdy = 1;
	spi_timeout = HAL_GetTick();
}
*/

void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b084      	sub	sp, #16
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	6078      	str	r0, [r7, #4]
	int16_t mag_buffer[3];
	mag_buffer[0] = ist_read_buffer[1] << 8 | ist_read_buffer[0];
 8001fe8:	4b19      	ldr	r3, [pc, #100]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001fea:	785b      	ldrb	r3, [r3, #1]
 8001fec:	021b      	lsls	r3, r3, #8
 8001fee:	b21a      	sxth	r2, r3
 8001ff0:	4b17      	ldr	r3, [pc, #92]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ff2:	781b      	ldrb	r3, [r3, #0]
 8001ff4:	b21b      	sxth	r3, r3
 8001ff6:	4313      	orrs	r3, r2
 8001ff8:	b21b      	sxth	r3, r3
 8001ffa:	813b      	strh	r3, [r7, #8]
	mag_buffer[1] = ist_read_buffer[3] << 8 | ist_read_buffer[2];
 8001ffc:	4b14      	ldr	r3, [pc, #80]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ffe:	78db      	ldrb	r3, [r3, #3]
 8002000:	021b      	lsls	r3, r3, #8
 8002002:	b21a      	sxth	r2, r3
 8002004:	4b12      	ldr	r3, [pc, #72]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8002006:	789b      	ldrb	r3, [r3, #2]
 8002008:	b21b      	sxth	r3, r3
 800200a:	4313      	orrs	r3, r2
 800200c:	b21b      	sxth	r3, r3
 800200e:	817b      	strh	r3, [r7, #10]
	mag_buffer[2] = ist_read_buffer[5] << 8 | ist_read_buffer[4];
 8002010:	4b0f      	ldr	r3, [pc, #60]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8002012:	795b      	ldrb	r3, [r3, #5]
 8002014:	021b      	lsls	r3, r3, #8
 8002016:	b21a      	sxth	r2, r3
 8002018:	4b0d      	ldr	r3, [pc, #52]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 800201a:	791b      	ldrb	r3, [r3, #4]
 800201c:	b21b      	sxth	r3, r3
 800201e:	4313      	orrs	r3, r2
 8002020:	b21b      	sxth	r3, r3
 8002022:	81bb      	strh	r3, [r7, #12]

	imu_data.mag_data.mx = mag_buffer[0];
 8002024:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002028:	4b0a      	ldr	r3, [pc, #40]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800202a:	841a      	strh	r2, [r3, #32]
	imu_data.mag_data.my = mag_buffer[1];
 800202c:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8002030:	4b08      	ldr	r3, [pc, #32]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 8002032:	845a      	strh	r2, [r3, #34]	; 0x22
	imu_data.mag_data.mz = mag_buffer[2];
 8002034:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002038:	4b06      	ldr	r3, [pc, #24]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800203a:	849a      	strh	r2, [r3, #36]	; 0x24
	mag_data_ready(imu_data.mag_data);
 800203c:	4b05      	ldr	r3, [pc, #20]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800203e:	3320      	adds	r3, #32
 8002040:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002044:	f005 ffa8 	bl	8007f98 <mag_data_ready>
}
 8002048:	bf00      	nop
 800204a:	3710      	adds	r7, #16
 800204c:	46bd      	mov	sp, r7
 800204e:	bd80      	pop	{r7, pc}
 8002050:	2000038c 	.word	0x2000038c
 8002054:	20000394 	.word	0x20000394

08002058 <led_green_off>:
 8002058:	b480      	push	{r7}
 800205a:	af00      	add	r7, sp, #0
 800205c:	4b04      	ldr	r3, [pc, #16]	; (8002070 <led_green_off+0x18>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	2200      	movs	r2, #0
 8002062:	639a      	str	r2, [r3, #56]	; 0x38
 8002064:	bf00      	nop
 8002066:	46bd      	mov	sp, r7
 8002068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206c:	4770      	bx	lr
 800206e:	bf00      	nop
 8002070:	200015cc 	.word	0x200015cc

08002074 <led_on>:
 8002074:	b580      	push	{r7, lr}
 8002076:	af00      	add	r7, sp, #0
 8002078:	2100      	movs	r1, #0
 800207a:	480c      	ldr	r0, [pc, #48]	; (80020ac <led_on+0x38>)
 800207c:	f013 fd2e 	bl	8015adc <HAL_TIM_PWM_Start>
 8002080:	2104      	movs	r1, #4
 8002082:	480a      	ldr	r0, [pc, #40]	; (80020ac <led_on+0x38>)
 8002084:	f013 fd2a 	bl	8015adc <HAL_TIM_PWM_Start>
 8002088:	2108      	movs	r1, #8
 800208a:	4808      	ldr	r0, [pc, #32]	; (80020ac <led_on+0x38>)
 800208c:	f013 fd26 	bl	8015adc <HAL_TIM_PWM_Start>
 8002090:	4b06      	ldr	r3, [pc, #24]	; (80020ac <led_on+0x38>)
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	22ff      	movs	r2, #255	; 0xff
 8002096:	63da      	str	r2, [r3, #60]	; 0x3c
 8002098:	4b04      	ldr	r3, [pc, #16]	; (80020ac <led_on+0x38>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	22ff      	movs	r2, #255	; 0xff
 800209e:	639a      	str	r2, [r3, #56]	; 0x38
 80020a0:	4b02      	ldr	r3, [pc, #8]	; (80020ac <led_on+0x38>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	22ff      	movs	r2, #255	; 0xff
 80020a6:	635a      	str	r2, [r3, #52]	; 0x34
 80020a8:	bf00      	nop
 80020aa:	bd80      	pop	{r7, pc}
 80020ac:	200015cc 	.word	0x200015cc

080020b0 <led_toggle>:
 80020b0:	b480      	push	{r7}
 80020b2:	af00      	add	r7, sp, #0
 80020b4:	bf00      	nop
 80020b6:	46bd      	mov	sp, r7
 80020b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020bc:	4770      	bx	lr
	...

080020c0 <status_led>:
 80020c0:	b480      	push	{r7}
 80020c2:	b083      	sub	sp, #12
 80020c4:	af00      	add	r7, sp, #0
 80020c6:	4603      	mov	r3, r0
 80020c8:	460a      	mov	r2, r1
 80020ca:	80fb      	strh	r3, [r7, #6]
 80020cc:	4613      	mov	r3, r2
 80020ce:	717b      	strb	r3, [r7, #5]
 80020d0:	797b      	ldrb	r3, [r7, #5]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	f040 808f 	bne.w	80021f6 <status_led+0x136>
 80020d8:	88fb      	ldrh	r3, [r7, #6]
 80020da:	3b01      	subs	r3, #1
 80020dc:	2b08      	cmp	r3, #8
 80020de:	f200 808c 	bhi.w	80021fa <status_led+0x13a>
 80020e2:	a201      	add	r2, pc, #4	; (adr r2, 80020e8 <status_led+0x28>)
 80020e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80020e8:	0800210d 	.word	0x0800210d
 80020ec:	08002127 	.word	0x08002127
 80020f0:	08002141 	.word	0x08002141
 80020f4:	0800215b 	.word	0x0800215b
 80020f8:	08002175 	.word	0x08002175
 80020fc:	0800218f 	.word	0x0800218f
 8002100:	080021a9 	.word	0x080021a9
 8002104:	080021c3 	.word	0x080021c3
 8002108:	080021dd 	.word	0x080021dd
 800210c:	4b3e      	ldr	r3, [pc, #248]	; (8002208 <status_led+0x148>)
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	22ff      	movs	r2, #255	; 0xff
 8002112:	63da      	str	r2, [r3, #60]	; 0x3c
 8002114:	4b3c      	ldr	r3, [pc, #240]	; (8002208 <status_led+0x148>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	2200      	movs	r2, #0
 800211a:	639a      	str	r2, [r3, #56]	; 0x38
 800211c:	4b3a      	ldr	r3, [pc, #232]	; (8002208 <status_led+0x148>)
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	2200      	movs	r2, #0
 8002122:	635a      	str	r2, [r3, #52]	; 0x34
 8002124:	e06a      	b.n	80021fc <status_led+0x13c>
 8002126:	4b38      	ldr	r3, [pc, #224]	; (8002208 <status_led+0x148>)
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	2200      	movs	r2, #0
 800212c:	63da      	str	r2, [r3, #60]	; 0x3c
 800212e:	4b36      	ldr	r3, [pc, #216]	; (8002208 <status_led+0x148>)
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	22ff      	movs	r2, #255	; 0xff
 8002134:	639a      	str	r2, [r3, #56]	; 0x38
 8002136:	4b34      	ldr	r3, [pc, #208]	; (8002208 <status_led+0x148>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	2200      	movs	r2, #0
 800213c:	635a      	str	r2, [r3, #52]	; 0x34
 800213e:	e05d      	b.n	80021fc <status_led+0x13c>
 8002140:	4b31      	ldr	r3, [pc, #196]	; (8002208 <status_led+0x148>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	2200      	movs	r2, #0
 8002146:	63da      	str	r2, [r3, #60]	; 0x3c
 8002148:	4b2f      	ldr	r3, [pc, #188]	; (8002208 <status_led+0x148>)
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	2200      	movs	r2, #0
 800214e:	639a      	str	r2, [r3, #56]	; 0x38
 8002150:	4b2d      	ldr	r3, [pc, #180]	; (8002208 <status_led+0x148>)
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	22ff      	movs	r2, #255	; 0xff
 8002156:	635a      	str	r2, [r3, #52]	; 0x34
 8002158:	e050      	b.n	80021fc <status_led+0x13c>
 800215a:	4b2b      	ldr	r3, [pc, #172]	; (8002208 <status_led+0x148>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	22ff      	movs	r2, #255	; 0xff
 8002160:	63da      	str	r2, [r3, #60]	; 0x3c
 8002162:	4b29      	ldr	r3, [pc, #164]	; (8002208 <status_led+0x148>)
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	2200      	movs	r2, #0
 8002168:	639a      	str	r2, [r3, #56]	; 0x38
 800216a:	4b27      	ldr	r3, [pc, #156]	; (8002208 <status_led+0x148>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	22ff      	movs	r2, #255	; 0xff
 8002170:	635a      	str	r2, [r3, #52]	; 0x34
 8002172:	e043      	b.n	80021fc <status_led+0x13c>
 8002174:	4b24      	ldr	r3, [pc, #144]	; (8002208 <status_led+0x148>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	2200      	movs	r2, #0
 800217a:	63da      	str	r2, [r3, #60]	; 0x3c
 800217c:	4b22      	ldr	r3, [pc, #136]	; (8002208 <status_led+0x148>)
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	2200      	movs	r2, #0
 8002182:	639a      	str	r2, [r3, #56]	; 0x38
 8002184:	4b20      	ldr	r3, [pc, #128]	; (8002208 <status_led+0x148>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	2200      	movs	r2, #0
 800218a:	635a      	str	r2, [r3, #52]	; 0x34
 800218c:	e036      	b.n	80021fc <status_led+0x13c>
 800218e:	4b1e      	ldr	r3, [pc, #120]	; (8002208 <status_led+0x148>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	2200      	movs	r2, #0
 8002194:	63da      	str	r2, [r3, #60]	; 0x3c
 8002196:	4b1c      	ldr	r3, [pc, #112]	; (8002208 <status_led+0x148>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	2200      	movs	r2, #0
 800219c:	639a      	str	r2, [r3, #56]	; 0x38
 800219e:	4b1a      	ldr	r3, [pc, #104]	; (8002208 <status_led+0x148>)
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	2200      	movs	r2, #0
 80021a4:	635a      	str	r2, [r3, #52]	; 0x34
 80021a6:	e029      	b.n	80021fc <status_led+0x13c>
 80021a8:	4b17      	ldr	r3, [pc, #92]	; (8002208 <status_led+0x148>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	2200      	movs	r2, #0
 80021ae:	63da      	str	r2, [r3, #60]	; 0x3c
 80021b0:	4b15      	ldr	r3, [pc, #84]	; (8002208 <status_led+0x148>)
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	2200      	movs	r2, #0
 80021b6:	639a      	str	r2, [r3, #56]	; 0x38
 80021b8:	4b13      	ldr	r3, [pc, #76]	; (8002208 <status_led+0x148>)
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	2200      	movs	r2, #0
 80021be:	635a      	str	r2, [r3, #52]	; 0x34
 80021c0:	e01c      	b.n	80021fc <status_led+0x13c>
 80021c2:	4b11      	ldr	r3, [pc, #68]	; (8002208 <status_led+0x148>)
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	2200      	movs	r2, #0
 80021c8:	63da      	str	r2, [r3, #60]	; 0x3c
 80021ca:	4b0f      	ldr	r3, [pc, #60]	; (8002208 <status_led+0x148>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	2200      	movs	r2, #0
 80021d0:	639a      	str	r2, [r3, #56]	; 0x38
 80021d2:	4b0d      	ldr	r3, [pc, #52]	; (8002208 <status_led+0x148>)
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	2200      	movs	r2, #0
 80021d8:	635a      	str	r2, [r3, #52]	; 0x34
 80021da:	e00f      	b.n	80021fc <status_led+0x13c>
 80021dc:	4b0a      	ldr	r3, [pc, #40]	; (8002208 <status_led+0x148>)
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	2200      	movs	r2, #0
 80021e2:	63da      	str	r2, [r3, #60]	; 0x3c
 80021e4:	4b08      	ldr	r3, [pc, #32]	; (8002208 <status_led+0x148>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	2200      	movs	r2, #0
 80021ea:	639a      	str	r2, [r3, #56]	; 0x38
 80021ec:	4b06      	ldr	r3, [pc, #24]	; (8002208 <status_led+0x148>)
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	2200      	movs	r2, #0
 80021f2:	635a      	str	r2, [r3, #52]	; 0x34
 80021f4:	e002      	b.n	80021fc <status_led+0x13c>
 80021f6:	bf00      	nop
 80021f8:	e000      	b.n	80021fc <status_led+0x13c>
 80021fa:	bf00      	nop
 80021fc:	bf00      	nop
 80021fe:	370c      	adds	r7, #12
 8002200:	46bd      	mov	sp, r7
 8002202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002206:	4770      	bx	lr
 8002208:	200015cc 	.word	0x200015cc

0800220c <micros_tick>:
#include "robot_config.h"

uint32_t gv_curr_micros = 0;
uint32_t gv_overflow_times = 0;

void micros_tick(){
 800220c:	b480      	push	{r7}
 800220e:	af00      	add	r7, sp, #0
	if (gv_curr_micros == 4294967295) //2^32 - 1
 8002210:	4b09      	ldr	r3, [pc, #36]	; (8002238 <micros_tick+0x2c>)
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002218:	d104      	bne.n	8002224 <micros_tick+0x18>
		gv_overflow_times ++;
 800221a:	4b08      	ldr	r3, [pc, #32]	; (800223c <micros_tick+0x30>)
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	3301      	adds	r3, #1
 8002220:	4a06      	ldr	r2, [pc, #24]	; (800223c <micros_tick+0x30>)
 8002222:	6013      	str	r3, [r2, #0]
	gv_curr_micros ++;
 8002224:	4b04      	ldr	r3, [pc, #16]	; (8002238 <micros_tick+0x2c>)
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	3301      	adds	r3, #1
 800222a:	4a03      	ldr	r2, [pc, #12]	; (8002238 <micros_tick+0x2c>)
 800222c:	6013      	str	r3, [r2, #0]
}
 800222e:	bf00      	nop
 8002230:	46bd      	mov	sp, r7
 8002232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002236:	4770      	bx	lr
 8002238:	200003d0 	.word	0x200003d0
 800223c:	200003d4 	.word	0x200003d4

08002240 <start_micros_timer>:

void start_micros_timer()
{
 8002240:	b580      	push	{r7, lr}
 8002242:	af00      	add	r7, sp, #0
	configASSERT(TIMER_FREQ <= 1000000);
	__HAL_TIM_SET_AUTORELOAD(&htim3, (999999/TIMER_FREQ) + 1);
 8002244:	4b09      	ldr	r3, [pc, #36]	; (800226c <start_micros_timer+0x2c>)
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	2264      	movs	r2, #100	; 0x64
 800224a:	62da      	str	r2, [r3, #44]	; 0x2c
 800224c:	4b07      	ldr	r3, [pc, #28]	; (800226c <start_micros_timer+0x2c>)
 800224e:	2264      	movs	r2, #100	; 0x64
 8002250:	60da      	str	r2, [r3, #12]
	htim3.Instance->DIER |= TIM_DIER_UIE; //enable update interrupt
 8002252:	4b06      	ldr	r3, [pc, #24]	; (800226c <start_micros_timer+0x2c>)
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	68da      	ldr	r2, [r3, #12]
 8002258:	4b04      	ldr	r3, [pc, #16]	; (800226c <start_micros_timer+0x2c>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f042 0201 	orr.w	r2, r2, #1
 8002260:	60da      	str	r2, [r3, #12]
	HAL_TIM_Base_Start(&htim3);
 8002262:	4802      	ldr	r0, [pc, #8]	; (800226c <start_micros_timer+0x2c>)
 8002264:	f013 faba 	bl	80157dc <HAL_TIM_Base_Start>
}
 8002268:	bf00      	nop
 800226a:	bd80      	pop	{r7, pc}
 800226c:	2000153c 	.word	0x2000153c

08002270 <get_microseconds>:



uint32_t get_microseconds()
{
 8002270:	b480      	push	{r7}
 8002272:	af00      	add	r7, sp, #0
	return gv_curr_micros;
 8002274:	4b03      	ldr	r3, [pc, #12]	; (8002284 <get_microseconds+0x14>)
 8002276:	681b      	ldr	r3, [r3, #0]
}
 8002278:	4618      	mov	r0, r3
 800227a:	46bd      	mov	sp, r7
 800227c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	200003d0 	.word	0x200003d0

08002288 <queue_init>:
 8002288:	b480      	push	{r7}
 800228a:	b085      	sub	sp, #20
 800228c:	af00      	add	r7, sp, #0
 800228e:	6078      	str	r0, [r7, #4]
 8002290:	2300      	movs	r3, #0
 8002292:	723b      	strb	r3, [r7, #8]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d104      	bne.n	80022a4 <queue_init+0x1c>
 800229a:	2304      	movs	r3, #4
 800229c:	723b      	strb	r3, [r7, #8]
 800229e:	68bb      	ldr	r3, [r7, #8]
 80022a0:	60fb      	str	r3, [r7, #12]
 80022a2:	e015      	b.n	80022d0 <queue_init+0x48>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	2200      	movs	r2, #0
 80022a8:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2200      	movs	r2, #0
 80022b0:	f8a3 2100 	strh.w	r2, [r3, #256]	; 0x100
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	2200      	movs	r2, #0
 80022b8:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	2200      	movs	r2, #0
 80022c0:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2200      	movs	r2, #0
 80022c8:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 80022cc:	68bb      	ldr	r3, [r7, #8]
 80022ce:	60fb      	str	r3, [r7, #12]
 80022d0:	2300      	movs	r3, #0
 80022d2:	89ba      	ldrh	r2, [r7, #12]
 80022d4:	f362 030f 	bfi	r3, r2, #0, #16
 80022d8:	89fa      	ldrh	r2, [r7, #14]
 80022da:	f362 431f 	bfi	r3, r2, #16, #16
 80022de:	4618      	mov	r0, r3
 80022e0:	3714      	adds	r7, #20
 80022e2:	46bd      	mov	sp, r7
 80022e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e8:	4770      	bx	lr

080022ea <queue_append_byte>:
 80022ea:	b580      	push	{r7, lr}
 80022ec:	b084      	sub	sp, #16
 80022ee:	af00      	add	r7, sp, #0
 80022f0:	6078      	str	r0, [r7, #4]
 80022f2:	460b      	mov	r3, r1
 80022f4:	70fb      	strb	r3, [r7, #3]
 80022f6:	2300      	movs	r3, #0
 80022f8:	723b      	strb	r3, [r7, #8]
 80022fa:	f00d f91f 	bl	800f53c <HAL_GetTick>
 80022fe:	4603      	mov	r3, r0
 8002300:	461a      	mov	r2, r3
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 800230e:	4619      	mov	r1, r3
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	78fa      	ldrb	r2, [r7, #3]
 8002314:	545a      	strb	r2, [r3, r1]
 8002316:	2301      	movs	r3, #1
 8002318:	817b      	strh	r3, [r7, #10]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 8002320:	2bfe      	cmp	r3, #254	; 0xfe
 8002322:	d805      	bhi.n	8002330 <queue_append_byte+0x46>
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 800232a:	3301      	adds	r3, #1
 800232c:	b29a      	uxth	r2, r3
 800232e:	e000      	b.n	8002332 <queue_append_byte+0x48>
 8002330:	2200      	movs	r2, #0
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	f8a3 2100 	strh.w	r2, [r3, #256]	; 0x100
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 800233e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002342:	d918      	bls.n	8002376 <queue_append_byte+0x8c>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	f44f 7280 	mov.w	r2, #256	; 0x100
 800234a:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002354:	2bff      	cmp	r3, #255	; 0xff
 8002356:	d005      	beq.n	8002364 <queue_append_byte+0x7a>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800235e:	3301      	adds	r3, #1
 8002360:	b29a      	uxth	r2, r3
 8002362:	e000      	b.n	8002366 <queue_append_byte+0x7c>
 8002364:	2200      	movs	r2, #0
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 800236c:	2301      	movs	r3, #1
 800236e:	723b      	strb	r3, [r7, #8]
 8002370:	68bb      	ldr	r3, [r7, #8]
 8002372:	60fb      	str	r3, [r7, #12]
 8002374:	e009      	b.n	800238a <queue_append_byte+0xa0>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 800237c:	3301      	adds	r3, #1
 800237e:	b29a      	uxth	r2, r3
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 8002386:	68bb      	ldr	r3, [r7, #8]
 8002388:	60fb      	str	r3, [r7, #12]
 800238a:	2300      	movs	r3, #0
 800238c:	89ba      	ldrh	r2, [r7, #12]
 800238e:	f362 030f 	bfi	r3, r2, #0, #16
 8002392:	89fa      	ldrh	r2, [r7, #14]
 8002394:	f362 431f 	bfi	r3, r2, #16, #16
 8002398:	4618      	mov	r0, r3
 800239a:	3710      	adds	r7, #16
 800239c:	46bd      	mov	sp, r7
 800239e:	bd80      	pop	{r7, pc}

080023a0 <queue_pop_element>:
 80023a0:	b480      	push	{r7}
 80023a2:	b085      	sub	sp, #20
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	d101      	bne.n	80023b6 <queue_pop_element+0x16>
 80023b2:	2300      	movs	r3, #0
 80023b4:	e024      	b.n	8002400 <queue_pop_element+0x60>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023bc:	461a      	mov	r2, r3
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	5c9b      	ldrb	r3, [r3, r2]
 80023c2:	73fb      	strb	r3, [r7, #15]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023ca:	3301      	adds	r3, #1
 80023cc:	b29a      	uxth	r2, r3
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023da:	2bff      	cmp	r3, #255	; 0xff
 80023dc:	d803      	bhi.n	80023e6 <queue_pop_element+0x46>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	f8b3 2102 	ldrh.w	r2, [r3, #258]	; 0x102
 80023e4:	e000      	b.n	80023e8 <queue_pop_element+0x48>
 80023e6:	2200      	movs	r2, #0
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80023f4:	3b01      	subs	r3, #1
 80023f6:	b29a      	uxth	r2, r3
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 80023fe:	7bfb      	ldrb	r3, [r7, #15]
 8002400:	4618      	mov	r0, r3
 8002402:	3714      	adds	r7, #20
 8002404:	46bd      	mov	sp, r7
 8002406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240a:	4770      	bx	lr

0800240c <queue_pop_elements>:
 800240c:	b580      	push	{r7, lr}
 800240e:	b088      	sub	sp, #32
 8002410:	af00      	add	r7, sp, #0
 8002412:	60f8      	str	r0, [r7, #12]
 8002414:	60b9      	str	r1, [r7, #8]
 8002416:	4613      	mov	r3, r2
 8002418:	80fb      	strh	r3, [r7, #6]
 800241a:	88fb      	ldrh	r3, [r7, #6]
 800241c:	461a      	mov	r2, r3
 800241e:	68b9      	ldr	r1, [r7, #8]
 8002420:	68f8      	ldr	r0, [r7, #12]
 8002422:	f000 f82d 	bl	8002480 <queue_peek_number>
 8002426:	4603      	mov	r3, r0
 8002428:	61bb      	str	r3, [r7, #24]
 800242a:	8b7b      	ldrh	r3, [r7, #26]
 800242c:	4619      	mov	r1, r3
 800242e:	68f8      	ldr	r0, [r7, #12]
 8002430:	f000 f87c 	bl	800252c <queue_remove_number>
 8002434:	4603      	mov	r3, r0
 8002436:	617b      	str	r3, [r7, #20]
 8002438:	69bb      	ldr	r3, [r7, #24]
 800243a:	61fb      	str	r3, [r7, #28]
 800243c:	2300      	movs	r3, #0
 800243e:	8bba      	ldrh	r2, [r7, #28]
 8002440:	f362 030f 	bfi	r3, r2, #0, #16
 8002444:	8bfa      	ldrh	r2, [r7, #30]
 8002446:	f362 431f 	bfi	r3, r2, #16, #16
 800244a:	4618      	mov	r0, r3
 800244c:	3720      	adds	r7, #32
 800244e:	46bd      	mov	sp, r7
 8002450:	bd80      	pop	{r7, pc}

08002452 <queue_peek>:
 8002452:	b480      	push	{r7}
 8002454:	b083      	sub	sp, #12
 8002456:	af00      	add	r7, sp, #0
 8002458:	6078      	str	r0, [r7, #4]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002460:	2b00      	cmp	r3, #0
 8002462:	d006      	beq.n	8002472 <queue_peek+0x20>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800246a:	461a      	mov	r2, r3
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	5c9b      	ldrb	r3, [r3, r2]
 8002470:	e000      	b.n	8002474 <queue_peek+0x22>
 8002472:	2300      	movs	r3, #0
 8002474:	4618      	mov	r0, r3
 8002476:	370c      	adds	r7, #12
 8002478:	46bd      	mov	sp, r7
 800247a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247e:	4770      	bx	lr

08002480 <queue_peek_number>:
 8002480:	b580      	push	{r7, lr}
 8002482:	b088      	sub	sp, #32
 8002484:	af00      	add	r7, sp, #0
 8002486:	60f8      	str	r0, [r7, #12]
 8002488:	60b9      	str	r1, [r7, #8]
 800248a:	4613      	mov	r3, r2
 800248c:	80fb      	strh	r3, [r7, #6]
 800248e:	f00d f855 	bl	800f53c <HAL_GetTick>
 8002492:	4603      	mov	r3, r0
 8002494:	461a      	mov	r2, r3
 8002496:	68fb      	ldr	r3, [r7, #12]
 8002498:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800249c:	2300      	movs	r3, #0
 800249e:	753b      	strb	r3, [r7, #20]
 80024a0:	68fb      	ldr	r3, [r7, #12]
 80024a2:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024a6:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 80024aa:	83fb      	strh	r3, [r7, #30]
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80024b2:	88fa      	ldrh	r2, [r7, #6]
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d905      	bls.n	80024c4 <queue_peek_number+0x44>
 80024b8:	2303      	movs	r3, #3
 80024ba:	753b      	strb	r3, [r7, #20]
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80024c2:	80fb      	strh	r3, [r7, #6]
 80024c4:	8bfa      	ldrh	r2, [r7, #30]
 80024c6:	88fb      	ldrh	r3, [r7, #6]
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d30b      	bcc.n	80024e4 <queue_peek_number+0x64>
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024d2:	461a      	mov	r2, r3
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	4413      	add	r3, r2
 80024d8:	88fa      	ldrh	r2, [r7, #6]
 80024da:	4619      	mov	r1, r3
 80024dc:	68b8      	ldr	r0, [r7, #8]
 80024de:	f01d f83a 	bl	801f556 <memcpy>
 80024e2:	e014      	b.n	800250e <queue_peek_number+0x8e>
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024ea:	461a      	mov	r2, r3
 80024ec:	68fb      	ldr	r3, [r7, #12]
 80024ee:	4413      	add	r3, r2
 80024f0:	8bfa      	ldrh	r2, [r7, #30]
 80024f2:	4619      	mov	r1, r3
 80024f4:	68b8      	ldr	r0, [r7, #8]
 80024f6:	f01d f82e 	bl	801f556 <memcpy>
 80024fa:	8bfb      	ldrh	r3, [r7, #30]
 80024fc:	68ba      	ldr	r2, [r7, #8]
 80024fe:	18d0      	adds	r0, r2, r3
 8002500:	68f9      	ldr	r1, [r7, #12]
 8002502:	88fa      	ldrh	r2, [r7, #6]
 8002504:	8bfb      	ldrh	r3, [r7, #30]
 8002506:	1ad3      	subs	r3, r2, r3
 8002508:	461a      	mov	r2, r3
 800250a:	f01d f824 	bl	801f556 <memcpy>
 800250e:	88fb      	ldrh	r3, [r7, #6]
 8002510:	82fb      	strh	r3, [r7, #22]
 8002512:	697b      	ldr	r3, [r7, #20]
 8002514:	61bb      	str	r3, [r7, #24]
 8002516:	2300      	movs	r3, #0
 8002518:	8b3a      	ldrh	r2, [r7, #24]
 800251a:	f362 030f 	bfi	r3, r2, #0, #16
 800251e:	8b7a      	ldrh	r2, [r7, #26]
 8002520:	f362 431f 	bfi	r3, r2, #16, #16
 8002524:	4618      	mov	r0, r3
 8002526:	3720      	adds	r7, #32
 8002528:	46bd      	mov	sp, r7
 800252a:	bd80      	pop	{r7, pc}

0800252c <queue_remove_number>:
 800252c:	b480      	push	{r7}
 800252e:	b085      	sub	sp, #20
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	460b      	mov	r3, r1
 8002536:	807b      	strh	r3, [r7, #2]
 8002538:	2300      	movs	r3, #0
 800253a:	723b      	strb	r3, [r7, #8]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002542:	887a      	ldrh	r2, [r7, #2]
 8002544:	429a      	cmp	r2, r3
 8002546:	d905      	bls.n	8002554 <queue_remove_number+0x28>
 8002548:	2303      	movs	r3, #3
 800254a:	723b      	strb	r3, [r7, #8]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002552:	807b      	strh	r3, [r7, #2]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	f8b3 2102 	ldrh.w	r2, [r3, #258]	; 0x102
 800255a:	887b      	ldrh	r3, [r7, #2]
 800255c:	4413      	add	r3, r2
 800255e:	b29a      	uxth	r2, r3
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	f8b3 2104 	ldrh.w	r2, [r3, #260]	; 0x104
 800256c:	887b      	ldrh	r3, [r7, #2]
 800256e:	1ad3      	subs	r3, r2, r3
 8002570:	b29a      	uxth	r2, r3
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800257e:	2bff      	cmp	r3, #255	; 0xff
 8002580:	d906      	bls.n	8002590 <queue_remove_number+0x64>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002588:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800258c:	b29b      	uxth	r3, r3
 800258e:	e002      	b.n	8002596 <queue_remove_number+0x6a>
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002596:	687a      	ldr	r2, [r7, #4]
 8002598:	f8a2 3102 	strh.w	r3, [r2, #258]	; 0x102
 800259c:	887b      	ldrh	r3, [r7, #2]
 800259e:	817b      	strh	r3, [r7, #10]
 80025a0:	68bb      	ldr	r3, [r7, #8]
 80025a2:	60fb      	str	r3, [r7, #12]
 80025a4:	2300      	movs	r3, #0
 80025a6:	89ba      	ldrh	r2, [r7, #12]
 80025a8:	f362 030f 	bfi	r3, r2, #0, #16
 80025ac:	89fa      	ldrh	r2, [r7, #14]
 80025ae:	f362 431f 	bfi	r3, r2, #16, #16
 80025b2:	4618      	mov	r0, r3
 80025b4:	3714      	adds	r7, #20
 80025b6:	46bd      	mov	sp, r7
 80025b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025bc:	4770      	bx	lr

080025be <queue_get_size>:
 80025be:	b480      	push	{r7}
 80025c0:	b083      	sub	sp, #12
 80025c2:	af00      	add	r7, sp, #0
 80025c4:	6078      	str	r0, [r7, #4]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80025cc:	4618      	mov	r0, r3
 80025ce:	370c      	adds	r7, #12
 80025d0:	46bd      	mov	sp, r7
 80025d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d6:	4770      	bx	lr

080025d8 <ref_process_data>:
	HEADER,
	DATA
};


ref_processing_status_t ref_process_data(queue_t *uart_queue, ref_msg_t *proc_msg){
 80025d8:	b590      	push	{r4, r7, lr}
 80025da:	b097      	sub	sp, #92	; 0x5c
 80025dc:	af00      	add	r7, sp, #0
 80025de:	6578      	str	r0, [r7, #84]	; 0x54
 80025e0:	6539      	str	r1, [r7, #80]	; 0x50
	static uint8_t state = 0;
	static ref_frame_header_t header;
	while(queue_get_size(uart_queue) > REF_HEADER_SIZE){
 80025e2:	e064      	b.n	80026ae <ref_process_data+0xd6>
		switch(state){
 80025e4:	4b37      	ldr	r3, [pc, #220]	; (80026c4 <ref_process_data+0xec>)
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d002      	beq.n	80025f2 <ref_process_data+0x1a>
 80025ec:	2b01      	cmp	r3, #1
 80025ee:	d037      	beq.n	8002660 <ref_process_data+0x88>
 80025f0:	e05d      	b.n	80026ae <ref_process_data+0xd6>
			case HEADER:
				if (queue_get_size(uart_queue)< REF_HEADER_SIZE+2 ){
 80025f2:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80025f4:	f7ff ffe3 	bl	80025be <queue_get_size>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b06      	cmp	r3, #6
 80025fc:	d801      	bhi.n	8002602 <ref_process_data+0x2a>
					return INSUFFICIENT_DATA;
 80025fe:	2302      	movs	r3, #2
 8002600:	e05c      	b.n	80026bc <ref_process_data+0xe4>
				}
				if (queue_peek(uart_queue) != 0xA5){
 8002602:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002604:	f7ff ff25 	bl	8002452 <queue_peek>
 8002608:	4603      	mov	r3, r0
 800260a:	2ba5      	cmp	r3, #165	; 0xa5
 800260c:	d003      	beq.n	8002616 <ref_process_data+0x3e>
					queue_pop_element(uart_queue);
 800260e:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002610:	f7ff fec6 	bl	80023a0 <queue_pop_element>
 8002614:	e04b      	b.n	80026ae <ref_process_data+0xd6>
				}else {
					if (queue_get_size(uart_queue) > REF_HEADER_SIZE+2){
 8002616:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002618:	f7ff ffd1 	bl	80025be <queue_get_size>
 800261c:	4603      	mov	r3, r0
 800261e:	2b07      	cmp	r3, #7
 8002620:	d91c      	bls.n	800265c <ref_process_data+0x84>
						header = ref_get_header(uart_queue);
 8002622:	4c29      	ldr	r4, [pc, #164]	; (80026c8 <ref_process_data+0xf0>)
 8002624:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002628:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800262a:	4618      	mov	r0, r3
 800262c:	f000 f84e 	bl	80026cc <ref_get_header>
 8002630:	4622      	mov	r2, r4
 8002632:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002636:	6818      	ldr	r0, [r3, #0]
 8002638:	6010      	str	r0, [r2, #0]
 800263a:	8899      	ldrh	r1, [r3, #4]
 800263c:	799b      	ldrb	r3, [r3, #6]
 800263e:	8091      	strh	r1, [r2, #4]
 8002640:	7193      	strb	r3, [r2, #6]
						if (header.cmd_id == 0xFFFF){
 8002642:	4b21      	ldr	r3, [pc, #132]	; (80026c8 <ref_process_data+0xf0>)
 8002644:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 8002648:	b29b      	uxth	r3, r3
 800264a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800264e:	4293      	cmp	r3, r2
 8002650:	d100      	bne.n	8002654 <ref_process_data+0x7c>
							//invalid data, continue checking
							break;
 8002652:	e02c      	b.n	80026ae <ref_process_data+0xd6>
						}
						//header is valid, remove header bytes and start finding data
						state = DATA;
 8002654:	4b1b      	ldr	r3, [pc, #108]	; (80026c4 <ref_process_data+0xec>)
 8002656:	2201      	movs	r2, #1
 8002658:	701a      	strb	r2, [r3, #0]
 800265a:	e028      	b.n	80026ae <ref_process_data+0xd6>
					} else {
						return INSUFFICIENT_DATA;
 800265c:	2302      	movs	r3, #2
 800265e:	e02d      	b.n	80026bc <ref_process_data+0xe4>
					}
				}
				break;
			case DATA:
				//wait until enough data to fill data
				if (queue_get_size(uart_queue) > header.data_length+4+REF_HEADER_SIZE){
 8002660:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002662:	f7ff ffac 	bl	80025be <queue_get_size>
 8002666:	4603      	mov	r3, r0
 8002668:	461a      	mov	r2, r3
 800266a:	4b17      	ldr	r3, [pc, #92]	; (80026c8 <ref_process_data+0xf0>)
 800266c:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002670:	b29b      	uxth	r3, r3
 8002672:	3309      	adds	r3, #9
 8002674:	429a      	cmp	r2, r3
 8002676:	dd18      	ble.n	80026aa <ref_process_data+0xd2>
					state = HEADER;
 8002678:	4b12      	ldr	r3, [pc, #72]	; (80026c4 <ref_process_data+0xec>)
 800267a:	2200      	movs	r2, #0
 800267c:	701a      	strb	r2, [r3, #0]
					*proc_msg = ref_get_msg(header,uart_queue);
 800267e:	6d3c      	ldr	r4, [r7, #80]	; 0x50
 8002680:	4638      	mov	r0, r7
 8002682:	4a11      	ldr	r2, [pc, #68]	; (80026c8 <ref_process_data+0xf0>)
 8002684:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002686:	ca06      	ldmia	r2, {r1, r2}
 8002688:	f000 f898 	bl	80027bc <ref_get_msg>
 800268c:	4620      	mov	r0, r4
 800268e:	463b      	mov	r3, r7
 8002690:	2242      	movs	r2, #66	; 0x42
 8002692:	4619      	mov	r1, r3
 8002694:	f01c ff5f 	bl	801f556 <memcpy>
					if (proc_msg->cmd_id!= 0xFFFF){
 8002698:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800269a:	881b      	ldrh	r3, [r3, #0]
 800269c:	b29b      	uxth	r3, r3
 800269e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80026a2:	4293      	cmp	r3, r2
 80026a4:	d003      	beq.n	80026ae <ref_process_data+0xd6>
						return PROCESS_SUCCESS;
 80026a6:	2300      	movs	r3, #0
 80026a8:	e008      	b.n	80026bc <ref_process_data+0xe4>
					} else {
						break;
					}
				} else{
					return INSUFFICIENT_DATA;
 80026aa:	2302      	movs	r3, #2
 80026ac:	e006      	b.n	80026bc <ref_process_data+0xe4>
	while(queue_get_size(uart_queue) > REF_HEADER_SIZE){
 80026ae:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80026b0:	f7ff ff85 	bl	80025be <queue_get_size>
 80026b4:	4603      	mov	r3, r0
 80026b6:	2b05      	cmp	r3, #5
 80026b8:	d894      	bhi.n	80025e4 <ref_process_data+0xc>
				}
				break;
			}
	}
	return INSUFFICIENT_DATA;
 80026ba:	2302      	movs	r3, #2
}
 80026bc:	4618      	mov	r0, r3
 80026be:	375c      	adds	r7, #92	; 0x5c
 80026c0:	46bd      	mov	sp, r7
 80026c2:	bd90      	pop	{r4, r7, pc}
 80026c4:	200003d8 	.word	0x200003d8
 80026c8:	200003dc 	.word	0x200003dc

080026cc <ref_get_header>:

ref_frame_header_t ref_get_header(queue_t *data_buffer){
 80026cc:	b580      	push	{r7, lr}
 80026ce:	b088      	sub	sp, #32
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	6078      	str	r0, [r7, #4]
 80026d4:	6039      	str	r1, [r7, #0]
	ref_frame_header_t ret_header;
	//+2 for cmd ID
	uint8_t temp_data[REF_HEADER_SIZE+2];
	queue_peek_number(data_buffer, temp_data, 7);
 80026d6:	f107 030c 	add.w	r3, r7, #12
 80026da:	2207      	movs	r2, #7
 80026dc:	4619      	mov	r1, r3
 80026de:	6838      	ldr	r0, [r7, #0]
 80026e0:	f7ff fece 	bl	8002480 <queue_peek_number>
	ret_header.start_frame = temp_data[0];
 80026e4:	7b3b      	ldrb	r3, [r7, #12]
 80026e6:	753b      	strb	r3, [r7, #20]
	if (ret_header.start_frame!= 0xA5){
 80026e8:	7d3b      	ldrb	r3, [r7, #20]
 80026ea:	2ba5      	cmp	r3, #165	; 0xa5
 80026ec:	d013      	beq.n	8002716 <ref_get_header+0x4a>
		queue_pop_element(data_buffer);
 80026ee:	6838      	ldr	r0, [r7, #0]
 80026f0:	f7ff fe56 	bl	80023a0 <queue_pop_element>
		ret_header.cmd_id=0xFFFF;
 80026f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026f8:	767b      	strb	r3, [r7, #25]
 80026fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026fe:	76bb      	strb	r3, [r7, #26]
		return ret_header;
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	461a      	mov	r2, r3
 8002704:	f107 0314 	add.w	r3, r7, #20
 8002708:	6818      	ldr	r0, [r3, #0]
 800270a:	6010      	str	r0, [r2, #0]
 800270c:	8899      	ldrh	r1, [r3, #4]
 800270e:	799b      	ldrb	r3, [r3, #6]
 8002710:	8091      	strh	r1, [r2, #4]
 8002712:	7193      	strb	r3, [r2, #6]
 8002714:	e04d      	b.n	80027b2 <ref_get_header+0xe6>
	}

	ret_header.data_length = ((uint16_t) temp_data[2] << 8 | temp_data[1]);
 8002716:	7bbb      	ldrb	r3, [r7, #14]
 8002718:	021b      	lsls	r3, r3, #8
 800271a:	b21a      	sxth	r2, r3
 800271c:	7b7b      	ldrb	r3, [r7, #13]
 800271e:	b21b      	sxth	r3, r3
 8002720:	4313      	orrs	r3, r2
 8002722:	b21b      	sxth	r3, r3
 8002724:	b29b      	uxth	r3, r3
 8002726:	f8a7 3015 	strh.w	r3, [r7, #21]
	ret_header.seq = temp_data[3];
 800272a:	7bfb      	ldrb	r3, [r7, #15]
 800272c:	75fb      	strb	r3, [r7, #23]
	ret_header.crc = temp_data[4];
 800272e:	7c3b      	ldrb	r3, [r7, #16]
 8002730:	763b      	strb	r3, [r7, #24]
	int crc_check = verify_CRC8_check_sum(temp_data, 5);
 8002732:	f107 030c 	add.w	r3, r7, #12
 8002736:	2105      	movs	r1, #5
 8002738:	4618      	mov	r0, r3
 800273a:	f7fe fc7f 	bl	800103c <verify_CRC8_check_sum>
 800273e:	4603      	mov	r3, r0
 8002740:	61fb      	str	r3, [r7, #28]
	ret_header.cmd_id = (temp_data[6]) << 8 | temp_data[5];
 8002742:	7cbb      	ldrb	r3, [r7, #18]
 8002744:	021b      	lsls	r3, r3, #8
 8002746:	b21a      	sxth	r2, r3
 8002748:	7c7b      	ldrb	r3, [r7, #17]
 800274a:	b21b      	sxth	r3, r3
 800274c:	4313      	orrs	r3, r2
 800274e:	b21b      	sxth	r3, r3
 8002750:	b29b      	uxth	r3, r3
 8002752:	f8a7 3019 	strh.w	r3, [r7, #25]
	if (!crc_check || ret_header.data_length > TQUEUE_SIZE || ret_header.cmd_id > 0x305) {
 8002756:	69fb      	ldr	r3, [r7, #28]
 8002758:	2b00      	cmp	r3, #0
 800275a:	d00c      	beq.n	8002776 <ref_get_header+0xaa>
 800275c:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 8002760:	b29b      	uxth	r3, r3
 8002762:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002766:	d806      	bhi.n	8002776 <ref_get_header+0xaa>
 8002768:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 800276c:	b29b      	uxth	r3, r3
 800276e:	f240 3205 	movw	r2, #773	; 0x305
 8002772:	4293      	cmp	r3, r2
 8002774:	d913      	bls.n	800279e <ref_get_header+0xd2>
		ret_header.cmd_id=0xFFFF;
 8002776:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800277a:	767b      	strb	r3, [r7, #25]
 800277c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002780:	76bb      	strb	r3, [r7, #26]
		queue_pop_element(data_buffer);
 8002782:	6838      	ldr	r0, [r7, #0]
 8002784:	f7ff fe0c 	bl	80023a0 <queue_pop_element>
		return ret_header;
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	461a      	mov	r2, r3
 800278c:	f107 0314 	add.w	r3, r7, #20
 8002790:	6818      	ldr	r0, [r3, #0]
 8002792:	6010      	str	r0, [r2, #0]
 8002794:	8899      	ldrh	r1, [r3, #4]
 8002796:	799b      	ldrb	r3, [r3, #6]
 8002798:	8091      	strh	r1, [r2, #4]
 800279a:	7193      	strb	r3, [r2, #6]
 800279c:	e009      	b.n	80027b2 <ref_get_header+0xe6>
	}
//	queue_remove_number(data_buffer, REF_HEADER_SIZE);
	return ret_header;
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	461a      	mov	r2, r3
 80027a2:	f107 0314 	add.w	r3, r7, #20
 80027a6:	6818      	ldr	r0, [r3, #0]
 80027a8:	6010      	str	r0, [r2, #0]
 80027aa:	8899      	ldrh	r1, [r3, #4]
 80027ac:	799b      	ldrb	r3, [r3, #6]
 80027ae:	8091      	strh	r1, [r2, #4]
 80027b0:	7193      	strb	r3, [r2, #6]
}
 80027b2:	6878      	ldr	r0, [r7, #4]
 80027b4:	3720      	adds	r7, #32
 80027b6:	46bd      	mov	sp, r7
 80027b8:	bd80      	pop	{r7, pc}
	...

080027bc <ref_get_msg>:



ref_msg_t ref_get_msg(ref_frame_header_t header,queue_t *uart_queue) {
 80027bc:	b5b0      	push	{r4, r5, r7, lr}
 80027be:	b0d8      	sub	sp, #352	; 0x160
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	f507 74b0 	add.w	r4, r7, #352	; 0x160
 80027c6:	f5a4 74aa 	sub.w	r4, r4, #340	; 0x154
 80027ca:	6020      	str	r0, [r4, #0]
 80027cc:	f507 70b0 	add.w	r0, r7, #352	; 0x160
 80027d0:	f5a0 70ae 	sub.w	r0, r0, #348	; 0x15c
 80027d4:	e880 0006 	stmia.w	r0, {r1, r2}
 80027d8:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 80027dc:	f5a2 72b0 	sub.w	r2, r2, #352	; 0x160
 80027e0:	6013      	str	r3, [r2, #0]
	uint8_t temp_buffer[TQUEUE_SIZE];
	ref_msg_t buffer_msg;
	//+ 2 for CRC16
	queue_pop_elements(uart_queue, temp_buffer, header.data_length+REF_HEADER_SIZE+4);
 80027e2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80027e6:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 80027ea:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80027ee:	b29b      	uxth	r3, r3
 80027f0:	3309      	adds	r3, #9
 80027f2:	b29a      	uxth	r2, r3
 80027f4:	f107 0158 	add.w	r1, r7, #88	; 0x58
 80027f8:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80027fc:	f5a3 73b0 	sub.w	r3, r3, #352	; 0x160
 8002800:	6818      	ldr	r0, [r3, #0]
 8002802:	f7ff fe03 	bl	800240c <queue_pop_elements>

	uint32_t crc_test = verify_CRC16_check_sum(temp_buffer, header.data_length+REF_HEADER_SIZE+4);
 8002806:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800280a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800280e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002812:	b29b      	uxth	r3, r3
 8002814:	3309      	adds	r3, #9
 8002816:	461a      	mov	r2, r3
 8002818:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800281c:	4611      	mov	r1, r2
 800281e:	4618      	mov	r0, r3
 8002820:	f7fe fc80 	bl	8001124 <verify_CRC16_check_sum>
 8002824:	f8c7 015c 	str.w	r0, [r7, #348]	; 0x15c
	if (!crc_test){
 8002828:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 800282c:	2b00      	cmp	r3, #0
 800282e:	d116      	bne.n	800285e <ref_get_msg+0xa2>
		buffer_msg.cmd_id = 0xFFFF;
 8002830:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002834:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002838:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800283c:	801a      	strh	r2, [r3, #0]
		return buffer_msg;
 800283e:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002842:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002846:	681a      	ldr	r2, [r3, #0]
 8002848:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800284c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002850:	4610      	mov	r0, r2
 8002852:	4619      	mov	r1, r3
 8002854:	2342      	movs	r3, #66	; 0x42
 8002856:	461a      	mov	r2, r3
 8002858:	f01c fe7d 	bl	801f556 <memcpy>
 800285c:	e19f      	b.n	8002b9e <ref_get_msg+0x3e2>
	}
	//shift 2 bytes to the right to get pointer to the actual start of data
	uint8_t* data_buffer = temp_buffer+2+REF_HEADER_SIZE;
 800285e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8002862:	3307      	adds	r3, #7
 8002864:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
	buffer_msg.cmd_id = header.cmd_id;
 8002868:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800286c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002870:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 8002874:	b29a      	uxth	r2, r3
 8002876:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800287a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 800287e:	801a      	strh	r2, [r3, #0]
	switch (header.cmd_id) {
 8002880:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002884:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002888:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800288c:	b29b      	uxth	r3, r3
 800288e:	f240 3202 	movw	r2, #770	; 0x302
 8002892:	4293      	cmp	r3, r2
 8002894:	f000 815c 	beq.w	8002b50 <ref_get_msg+0x394>
 8002898:	f240 3202 	movw	r2, #770	; 0x302
 800289c:	4293      	cmp	r3, r2
 800289e:	f300 8167 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028a2:	f240 3201 	movw	r2, #769	; 0x301
 80028a6:	4293      	cmp	r3, r2
 80028a8:	f000 8146 	beq.w	8002b38 <ref_get_msg+0x37c>
 80028ac:	f240 3201 	movw	r2, #769	; 0x301
 80028b0:	4293      	cmp	r3, r2
 80028b2:	f300 815d 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028b6:	f240 220a 	movw	r2, #522	; 0x20a
 80028ba:	4293      	cmp	r3, r2
 80028bc:	f300 8158 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80028c4:	dc04      	bgt.n	80028d0 <ref_get_msg+0x114>
 80028c6:	2b04      	cmp	r3, #4
 80028c8:	dc40      	bgt.n	800294c <ref_get_msg+0x190>
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	dc2e      	bgt.n	800292c <ref_get_msg+0x170>
 80028ce:	e14f      	b.n	8002b70 <ref_get_msg+0x3b4>
 80028d0:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 80028d4:	2b09      	cmp	r3, #9
 80028d6:	f200 814b 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 80028da:	a201      	add	r2, pc, #4	; (adr r2, 80028e0 <ref_get_msg+0x124>)
 80028dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028e0:	08002a35 	.word	0x08002a35
 80028e4:	08002a65 	.word	0x08002a65
 80028e8:	08002a85 	.word	0x08002a85
 80028ec:	08002aa5 	.word	0x08002aa5
 80028f0:	08002ab7 	.word	0x08002ab7
 80028f4:	08002ac9 	.word	0x08002ac9
 80028f8:	08002adb 	.word	0x08002adb
 80028fc:	08002af7 	.word	0x08002af7
 8002900:	08002b0f 	.word	0x08002b0f
 8002904:	08002b25 	.word	0x08002b25
 8002908:	f2a3 1301 	subw	r3, r3, #257	; 0x101
 800290c:	2b04      	cmp	r3, #4
 800290e:	f200 812f 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 8002912:	a201      	add	r2, pc, #4	; (adr r2, 8002918 <ref_get_msg+0x15c>)
 8002914:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002918:	080029cb 	.word	0x080029cb
 800291c:	080029e1 	.word	0x080029e1
 8002920:	080029f7 	.word	0x080029f7
 8002924:	08002a0f 	.word	0x08002a0f
 8002928:	08002a23 	.word	0x08002a23
 800292c:	3b01      	subs	r3, #1
 800292e:	2b03      	cmp	r3, #3
 8002930:	f200 811e 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 8002934:	a201      	add	r2, pc, #4	; (adr r2, 800293c <ref_get_msg+0x180>)
 8002936:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800293a:	bf00      	nop
 800293c:	0800295d 	.word	0x0800295d
 8002940:	08002975 	.word	0x08002975
 8002944:	08002987 	.word	0x08002987
 8002948:	080029b3 	.word	0x080029b3
 800294c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
 8002950:	f280 810e 	bge.w	8002b70 <ref_get_msg+0x3b4>
 8002954:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002958:	dcd6      	bgt.n	8002908 <ref_get_msg+0x14c>
 800295a:	e109      	b.n	8002b70 <ref_get_msg+0x3b4>
	case REF_GAME_STATE_CMD_ID:
		memcpy(&buffer_msg.data.game_state, 	(data_buffer), sizeof(ref_game_state_t));
 800295c:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002960:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002964:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002968:	3302      	adds	r3, #2
 800296a:	8811      	ldrh	r1, [r2, #0]
 800296c:	7892      	ldrb	r2, [r2, #2]
 800296e:	8019      	strh	r1, [r3, #0]
 8002970:	709a      	strb	r2, [r3, #2]
		break;
 8002972:	e105      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002974:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002978:	781a      	ldrb	r2, [r3, #0]
	case REF_GAME_RESULT_ID:
		memcpy(&buffer_msg.data.game_result, 	(data_buffer), sizeof(ref_game_result_t));
 800297a:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800297e:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002982:	709a      	strb	r2, [r3, #2]
		break;
 8002984:	e0fc      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_HP_CMD_ID:
		memcpy(&buffer_msg.data.robot_hp, 		(data_buffer), sizeof(ref_game_robot_HP_t));
 8002986:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800298a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 800298e:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002992:	3302      	adds	r3, #2
 8002994:	6814      	ldr	r4, [r2, #0]
 8002996:	6850      	ldr	r0, [r2, #4]
 8002998:	6891      	ldr	r1, [r2, #8]
 800299a:	68d5      	ldr	r5, [r2, #12]
 800299c:	601c      	str	r4, [r3, #0]
 800299e:	6058      	str	r0, [r3, #4]
 80029a0:	6099      	str	r1, [r3, #8]
 80029a2:	60dd      	str	r5, [r3, #12]
 80029a4:	6914      	ldr	r4, [r2, #16]
 80029a6:	6950      	ldr	r0, [r2, #20]
 80029a8:	6991      	ldr	r1, [r2, #24]
 80029aa:	611c      	str	r4, [r3, #16]
 80029ac:	6158      	str	r0, [r3, #20]
 80029ae:	6199      	str	r1, [r3, #24]
		break;
 80029b0:	e0e6      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_DART_LAUNCH_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.dart_status, 	(data_buffer), sizeof(ref_dart_status_t));
 80029b2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029b6:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029ba:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 80029be:	3302      	adds	r3, #2
 80029c0:	8811      	ldrh	r1, [r2, #0]
 80029c2:	7892      	ldrb	r2, [r2, #2]
 80029c4:	8019      	strh	r1, [r3, #0]
 80029c6:	709a      	strb	r2, [r3, #2]
		break;
 80029c8:	e0da      	b.n	8002b80 <ref_get_msg+0x3c4>
 80029ca:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	461a      	mov	r2, r3
	case REF_GAME_EVENT_CMD_ID:
		memcpy(&buffer_msg.data.game_event, 	(data_buffer), sizeof(ref_game_event_data_t));
 80029d2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029d6:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029da:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 80029de:	e0cf      	b.n	8002b80 <ref_get_msg+0x3c4>
 80029e0:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	461a      	mov	r2, r3
	case REF_SUPPLIER_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.projectile_supply_state, (data_buffer),sizeof(ref_supply_projectile_data_t));
 80029e8:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029ec:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029f0:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 80029f4:	e0c4      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_SUPPLIER_BOOKING_CMD_ID:
		memcpy(&buffer_msg.data.projectile_supply_queue, (data_buffer),sizeof(ref_supply_projectile_booking_t));
 80029f6:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029fa:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029fe:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a02:	3302      	adds	r3, #2
 8002a04:	8811      	ldrh	r1, [r2, #0]
 8002a06:	7892      	ldrb	r2, [r2, #2]
 8002a08:	8019      	strh	r1, [r3, #0]
 8002a0a:	709a      	strb	r2, [r3, #2]
		break;
 8002a0c:	e0b8      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002a0e:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002a12:	881b      	ldrh	r3, [r3, #0]
 8002a14:	b29a      	uxth	r2, r3
	case REF_FOUL_CMD_ID:
		memcpy(&buffer_msg.data.referee_warning,(data_buffer), sizeof(ref_referee_warning_t));
 8002a16:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a1a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a1e:	805a      	strh	r2, [r3, #2]
		break;
 8002a20:	e0ae      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002a22:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002a26:	781a      	ldrb	r2, [r3, #0]
	case REF_DART_COOLDOWN_CMD_ID:
		memcpy(&buffer_msg.data.dart_cooldown, 	(data_buffer), sizeof(ref_dart_cooldown_t));
 8002a28:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a2c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a30:	709a      	strb	r2, [r3, #2]
		break;
 8002a32:	e0a5      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_state, 	(data_buffer), sizeof(ref_game_robot_data_t));
 8002a34:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a38:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a3c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a40:	3302      	adds	r3, #2
 8002a42:	6810      	ldr	r0, [r2, #0]
 8002a44:	6851      	ldr	r1, [r2, #4]
 8002a46:	6895      	ldr	r5, [r2, #8]
 8002a48:	68d4      	ldr	r4, [r2, #12]
 8002a4a:	6018      	str	r0, [r3, #0]
 8002a4c:	6059      	str	r1, [r3, #4]
 8002a4e:	609d      	str	r5, [r3, #8]
 8002a50:	60dc      	str	r4, [r3, #12]
 8002a52:	6910      	ldr	r0, [r2, #16]
 8002a54:	6951      	ldr	r1, [r2, #20]
 8002a56:	6118      	str	r0, [r3, #16]
 8002a58:	6159      	str	r1, [r3, #20]
 8002a5a:	8b11      	ldrh	r1, [r2, #24]
 8002a5c:	7e92      	ldrb	r2, [r2, #26]
 8002a5e:	8319      	strh	r1, [r3, #24]
 8002a60:	769a      	strb	r2, [r3, #26]
		break;
 8002a62:	e08d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_POWER_DATA_CMD_ID:
		memcpy(&buffer_msg.data.power_data, 	(data_buffer), sizeof(ref_robot_power_data_t));
 8002a64:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a68:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a6c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a70:	3302      	adds	r3, #2
 8002a72:	6814      	ldr	r4, [r2, #0]
 8002a74:	6850      	ldr	r0, [r2, #4]
 8002a76:	6891      	ldr	r1, [r2, #8]
 8002a78:	601c      	str	r4, [r3, #0]
 8002a7a:	6058      	str	r0, [r3, #4]
 8002a7c:	6099      	str	r1, [r3, #8]
 8002a7e:	8992      	ldrh	r2, [r2, #12]
 8002a80:	819a      	strh	r2, [r3, #12]
		break;
 8002a82:	e07d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_POS_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_pos, 		(data_buffer), sizeof(ref_game_robot_pos_t));
 8002a84:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a88:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a8c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a90:	3302      	adds	r3, #2
 8002a92:	6814      	ldr	r4, [r2, #0]
 8002a94:	6850      	ldr	r0, [r2, #4]
 8002a96:	6891      	ldr	r1, [r2, #8]
 8002a98:	68d2      	ldr	r2, [r2, #12]
 8002a9a:	601c      	str	r4, [r3, #0]
 8002a9c:	6058      	str	r0, [r3, #4]
 8002a9e:	6099      	str	r1, [r3, #8]
 8002aa0:	60da      	str	r2, [r3, #12]
		break;
 8002aa2:	e06d      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002aa4:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002aa8:	781a      	ldrb	r2, [r3, #0]
	case REF_ROBOT_BUFF_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_buff, 	(data_buffer), sizeof(ref_buff_data_t));
 8002aaa:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002aae:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ab2:	709a      	strb	r2, [r3, #2]
		break;
 8002ab4:	e064      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002ab6:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002aba:	781a      	ldrb	r2, [r3, #0]
	case REF_AERIAL_ENERGY_DATA_CMD_ID:
		memcpy(&buffer_msg.data.aerial_energy, 	(data_buffer), sizeof(ref_aerial_robot_energy_t));
 8002abc:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ac4:	709a      	strb	r2, [r3, #2]
		break;
 8002ac6:	e05b      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002ac8:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002acc:	781a      	ldrb	r2, [r3, #0]
	case REF_ROBOT_DMG_DATA_CMD_ID:
		memcpy(&buffer_msg.data.damage_data, 	(data_buffer), sizeof(ref_robot_dmg_t));
 8002ace:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ad2:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ad6:	709a      	strb	r2, [r3, #2]
		break;
 8002ad8:	e052      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_SHOOT_DATA_CMD_ID:
		memcpy(&buffer_msg.data.shooting_data, 	(data_buffer), sizeof(ref_shoot_data_t));
 8002ada:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ade:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ae2:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002ae6:	3302      	adds	r3, #2
 8002ae8:	6811      	ldr	r1, [r2, #0]
 8002aea:	6019      	str	r1, [r3, #0]
 8002aec:	8891      	ldrh	r1, [r2, #4]
 8002aee:	7992      	ldrb	r2, [r2, #6]
 8002af0:	8099      	strh	r1, [r3, #4]
 8002af2:	719a      	strb	r2, [r3, #6]
		break;
 8002af4:	e044      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_MAGAZINE_DATA_CMD_ID:
		memcpy(&buffer_msg.data.magazine_data, 	(data_buffer), sizeof(ref_magazine_data_t));
 8002af6:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002afa:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002afe:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b02:	3302      	adds	r3, #2
 8002b04:	6811      	ldr	r1, [r2, #0]
 8002b06:	6019      	str	r1, [r3, #0]
 8002b08:	8892      	ldrh	r2, [r2, #4]
 8002b0a:	809a      	strh	r2, [r3, #4]
		break;
 8002b0c:	e038      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002b0e:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	461a      	mov	r2, r3
	case REF_ROBOT_RFID_BUFF_DATA_CMD_ID:
		memcpy(&buffer_msg.data.rfid_buff, 		(data_buffer), sizeof(ref_rfid_status_t));
 8002b16:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b1a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b1e:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 8002b22:	e02d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_DART_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.dart_cmd, 		(data_buffer), sizeof(ref_dart_status_t));
 8002b24:	f107 0314 	add.w	r3, r7, #20
 8002b28:	3302      	adds	r3, #2
 8002b2a:	2203      	movs	r2, #3
 8002b2c:	f8d7 1158 	ldr.w	r1, [r7, #344]	; 0x158
 8002b30:	4618      	mov	r0, r3
 8002b32:	f01c fd10 	bl	801f556 <memcpy>
		break;
 8002b36:	e023      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_COMMS_CMD_ID:
		memcpy(&buffer_msg.data.robot_comms, 	(data_buffer), sizeof(ref_inter_robot_data_t));
 8002b38:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b3c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b40:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b44:	3302      	adds	r3, #2
 8002b46:	6811      	ldr	r1, [r2, #0]
 8002b48:	6019      	str	r1, [r3, #0]
 8002b4a:	8892      	ldrh	r2, [r2, #4]
 8002b4c:	809a      	strh	r2, [r3, #4]
		break;
 8002b4e:	e017      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_CUSTOM_DATA_CMD_ID:
		memcpy(&buffer_msg.data.custom_data, 	(data_buffer), sizeof(ref_custom_data_t));
 8002b50:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b54:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b58:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b5c:	3302      	adds	r3, #2
 8002b5e:	6814      	ldr	r4, [r2, #0]
 8002b60:	6850      	ldr	r0, [r2, #4]
 8002b62:	6891      	ldr	r1, [r2, #8]
 8002b64:	601c      	str	r4, [r3, #0]
 8002b66:	6058      	str	r0, [r3, #4]
 8002b68:	6099      	str	r1, [r3, #8]
 8002b6a:	7b12      	ldrb	r2, [r2, #12]
 8002b6c:	731a      	strb	r2, [r3, #12]
		break;
 8002b6e:	e007      	b.n	8002b80 <ref_get_msg+0x3c4>
	default:
		buffer_msg.cmd_id = 0xFFFF;
 8002b70:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b74:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b78:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002b7c:	801a      	strh	r2, [r3, #0]
		break;
 8002b7e:	bf00      	nop
	}
	//remove cmd id + data
	return buffer_msg;
 8002b80:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b84:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002b88:	681a      	ldr	r2, [r3, #0]
 8002b8a:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b8e:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b92:	4610      	mov	r0, r2
 8002b94:	4619      	mov	r1, r3
 8002b96:	2342      	movs	r3, #66	; 0x42
 8002b98:	461a      	mov	r2, r3
 8002b9a:	f01c fcdc 	bl	801f556 <memcpy>
}
 8002b9e:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ba2:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002ba6:	6818      	ldr	r0, [r3, #0]
 8002ba8:	f507 77b0 	add.w	r7, r7, #352	; 0x160
 8002bac:	46bd      	mov	sp, r7
 8002bae:	bdb0      	pop	{r4, r5, r7, pc}

08002bb0 <init_xvr_usart>:
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b082      	sub	sp, #8
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	6078      	str	r0, [r7, #4]
 8002bb8:	2300      	movs	r3, #0
 8002bba:	220f      	movs	r2, #15
 8002bbc:	6879      	ldr	r1, [r7, #4]
 8002bbe:	4803      	ldr	r0, [pc, #12]	; (8002bcc <init_xvr_usart+0x1c>)
 8002bc0:	f000 f810 	bl	8002be4 <xvr_usart_start>
 8002bc4:	bf00      	nop
 8002bc6:	3708      	adds	r7, #8
 8002bc8:	46bd      	mov	sp, r7
 8002bca:	bd80      	pop	{r7, pc}
 8002bcc:	2000165c 	.word	0x2000165c

08002bd0 <xvr_full_cplt_isr>:
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	b082      	sub	sp, #8
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	6078      	str	r0, [r7, #4]
 8002bd8:	f00b f898 	bl	800dd0c <sbc_process_data>
 8002bdc:	bf00      	nop
 8002bde:	3708      	adds	r7, #8
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}

08002be4 <xvr_usart_start>:
 8002be4:	b580      	push	{r7, lr}
 8002be6:	b086      	sub	sp, #24
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	60f8      	str	r0, [r7, #12]
 8002bec:	60b9      	str	r1, [r7, #8]
 8002bee:	603b      	str	r3, [r7, #0]
 8002bf0:	4613      	mov	r3, r2
 8002bf2:	80fb      	strh	r3, [r7, #6]
 8002bf4:	4a3a      	ldr	r2, [pc, #232]	; (8002ce0 <xvr_usart_start+0xfc>)
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	6013      	str	r3, [r2, #0]
 8002bfa:	4b39      	ldr	r3, [pc, #228]	; (8002ce0 <xvr_usart_start+0xfc>)
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f7ff fb42 	bl	8002288 <queue_init>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002c0a:	b2db      	uxtb	r3, r3
 8002c0c:	2b20      	cmp	r3, #32
 8002c0e:	d161      	bne.n	8002cd4 <xvr_usart_start+0xf0>
 8002c10:	68bb      	ldr	r3, [r7, #8]
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d002      	beq.n	8002c1c <xvr_usart_start+0x38>
 8002c16:	88fb      	ldrh	r3, [r7, #6]
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d101      	bne.n	8002c20 <xvr_usart_start+0x3c>
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	e05a      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002c20:	68fb      	ldr	r3, [r7, #12]
 8002c22:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c26:	2b01      	cmp	r3, #1
 8002c28:	d101      	bne.n	8002c2e <xvr_usart_start+0x4a>
 8002c2a:	2302      	movs	r3, #2
 8002c2c:	e053      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	2201      	movs	r2, #1
 8002c32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c36:	68ba      	ldr	r2, [r7, #8]
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	629a      	str	r2, [r3, #40]	; 0x28
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	88fa      	ldrh	r2, [r7, #6]
 8002c40:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002c42:	68fb      	ldr	r3, [r7, #12]
 8002c44:	2200      	movs	r2, #0
 8002c46:	641a      	str	r2, [r3, #64]	; 0x40
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	2222      	movs	r2, #34	; 0x22
 8002c4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	2201      	movs	r2, #1
 8002c54:	631a      	str	r2, [r3, #48]	; 0x30
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c5a:	4a22      	ldr	r2, [pc, #136]	; (8002ce4 <xvr_usart_start+0x100>)
 8002c5c:	63da      	str	r2, [r3, #60]	; 0x3c
 8002c5e:	68fb      	ldr	r3, [r7, #12]
 8002c60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c62:	2200      	movs	r2, #0
 8002c64:	651a      	str	r2, [r3, #80]	; 0x50
 8002c66:	f107 0308 	add.w	r3, r7, #8
 8002c6a:	617b      	str	r3, [r7, #20]
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	3304      	adds	r3, #4
 8002c76:	4619      	mov	r1, r3
 8002c78:	697b      	ldr	r3, [r7, #20]
 8002c7a:	681a      	ldr	r2, [r3, #0]
 8002c7c:	88fb      	ldrh	r3, [r7, #6]
 8002c7e:	f00d feff 	bl	8010a80 <HAL_DMA_Start_IT>
 8002c82:	2300      	movs	r3, #0
 8002c84:	613b      	str	r3, [r7, #16]
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	613b      	str	r3, [r7, #16]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	685b      	ldr	r3, [r3, #4]
 8002c94:	613b      	str	r3, [r7, #16]
 8002c96:	693b      	ldr	r3, [r7, #16]
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	68da      	ldr	r2, [r3, #12]
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002cae:	60da      	str	r2, [r3, #12]
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	695a      	ldr	r2, [r3, #20]
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f042 0201 	orr.w	r2, r2, #1
 8002cbe:	615a      	str	r2, [r3, #20]
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	695a      	ldr	r2, [r3, #20]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002cce:	615a      	str	r2, [r3, #20]
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	e000      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002cd4:	2302      	movs	r3, #2
 8002cd6:	4618      	mov	r0, r3
 8002cd8:	3718      	adds	r7, #24
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	bd80      	pop	{r7, pc}
 8002cde:	bf00      	nop
 8002ce0:	200003e4 	.word	0x200003e4
 8002ce4:	08002bd1 	.word	0x08002bd1

08002ce8 <ref_usart_start>:
 8002ce8:	b580      	push	{r7, lr}
 8002cea:	b086      	sub	sp, #24
 8002cec:	af00      	add	r7, sp, #0
 8002cee:	60f8      	str	r0, [r7, #12]
 8002cf0:	60b9      	str	r1, [r7, #8]
 8002cf2:	603b      	str	r3, [r7, #0]
 8002cf4:	4613      	mov	r3, r2
 8002cf6:	80fb      	strh	r3, [r7, #6]
 8002cf8:	4a3a      	ldr	r2, [pc, #232]	; (8002de4 <ref_usart_start+0xfc>)
 8002cfa:	683b      	ldr	r3, [r7, #0]
 8002cfc:	6013      	str	r3, [r2, #0]
 8002cfe:	4b39      	ldr	r3, [pc, #228]	; (8002de4 <ref_usart_start+0xfc>)
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	4618      	mov	r0, r3
 8002d04:	f7ff fac0 	bl	8002288 <queue_init>
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002d0e:	b2db      	uxtb	r3, r3
 8002d10:	2b20      	cmp	r3, #32
 8002d12:	d162      	bne.n	8002dda <ref_usart_start+0xf2>
 8002d14:	68bb      	ldr	r3, [r7, #8]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d002      	beq.n	8002d20 <ref_usart_start+0x38>
 8002d1a:	88fb      	ldrh	r3, [r7, #6]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d101      	bne.n	8002d24 <ref_usart_start+0x3c>
 8002d20:	2301      	movs	r3, #1
 8002d22:	e05b      	b.n	8002ddc <ref_usart_start+0xf4>
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d2a:	2b01      	cmp	r3, #1
 8002d2c:	d101      	bne.n	8002d32 <ref_usart_start+0x4a>
 8002d2e:	2302      	movs	r3, #2
 8002d30:	e054      	b.n	8002ddc <ref_usart_start+0xf4>
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	2201      	movs	r2, #1
 8002d36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d3a:	68ba      	ldr	r2, [r7, #8]
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	629a      	str	r2, [r3, #40]	; 0x28
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	88fa      	ldrh	r2, [r7, #6]
 8002d44:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	2200      	movs	r2, #0
 8002d4a:	641a      	str	r2, [r3, #64]	; 0x40
 8002d4c:	68fb      	ldr	r3, [r7, #12]
 8002d4e:	2222      	movs	r2, #34	; 0x22
 8002d50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d58:	4a23      	ldr	r2, [pc, #140]	; (8002de8 <ref_usart_start+0x100>)
 8002d5a:	63da      	str	r2, [r3, #60]	; 0x3c
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d60:	4a22      	ldr	r2, [pc, #136]	; (8002dec <ref_usart_start+0x104>)
 8002d62:	641a      	str	r2, [r3, #64]	; 0x40
 8002d64:	68fb      	ldr	r3, [r7, #12]
 8002d66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d68:	2200      	movs	r2, #0
 8002d6a:	651a      	str	r2, [r3, #80]	; 0x50
 8002d6c:	f107 0308 	add.w	r3, r7, #8
 8002d70:	617b      	str	r3, [r7, #20]
 8002d72:	68fb      	ldr	r3, [r7, #12]
 8002d74:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	3304      	adds	r3, #4
 8002d7c:	4619      	mov	r1, r3
 8002d7e:	697b      	ldr	r3, [r7, #20]
 8002d80:	681a      	ldr	r2, [r3, #0]
 8002d82:	88fb      	ldrh	r3, [r7, #6]
 8002d84:	f00d fe7c 	bl	8010a80 <HAL_DMA_Start_IT>
 8002d88:	2300      	movs	r3, #0
 8002d8a:	613b      	str	r3, [r7, #16]
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	613b      	str	r3, [r7, #16]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	685b      	ldr	r3, [r3, #4]
 8002d9a:	613b      	str	r3, [r7, #16]
 8002d9c:	693b      	ldr	r3, [r7, #16]
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	2200      	movs	r2, #0
 8002da2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	68da      	ldr	r2, [r3, #12]
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002db4:	60da      	str	r2, [r3, #12]
 8002db6:	68fb      	ldr	r3, [r7, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	695a      	ldr	r2, [r3, #20]
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f042 0201 	orr.w	r2, r2, #1
 8002dc4:	615a      	str	r2, [r3, #20]
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	695a      	ldr	r2, [r3, #20]
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002dd4:	615a      	str	r2, [r3, #20]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	e000      	b.n	8002ddc <ref_usart_start+0xf4>
 8002dda:	2302      	movs	r3, #2
 8002ddc:	4618      	mov	r0, r3
 8002dde:	3718      	adds	r7, #24
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bd80      	pop	{r7, pc}
 8002de4:	200003e8 	.word	0x200003e8
 8002de8:	08002e19 	.word	0x08002e19
 8002dec:	08002df1 	.word	0x08002df1

08002df0 <ref_half_cplt_isr>:
 8002df0:	b580      	push	{r7, lr}
 8002df2:	b082      	sub	sp, #8
 8002df4:	af00      	add	r7, sp, #0
 8002df6:	6078      	str	r0, [r7, #4]
 8002df8:	4b06      	ldr	r3, [pc, #24]	; (8002e14 <ref_half_cplt_isr+0x24>)
 8002dfa:	681a      	ldr	r2, [r3, #0]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	68db      	ldr	r3, [r3, #12]
 8002e02:	781b      	ldrb	r3, [r3, #0]
 8002e04:	4619      	mov	r1, r3
 8002e06:	4610      	mov	r0, r2
 8002e08:	f7ff fa6f 	bl	80022ea <queue_append_byte>
 8002e0c:	bf00      	nop
 8002e0e:	3708      	adds	r7, #8
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	200003e8 	.word	0x200003e8

08002e18 <ref_full_cplt_isr>:
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b082      	sub	sp, #8
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
 8002e20:	4b07      	ldr	r3, [pc, #28]	; (8002e40 <ref_full_cplt_isr+0x28>)
 8002e22:	681a      	ldr	r2, [r3, #0]
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	68db      	ldr	r3, [r3, #12]
 8002e2a:	3301      	adds	r3, #1
 8002e2c:	781b      	ldrb	r3, [r3, #0]
 8002e2e:	4619      	mov	r1, r3
 8002e30:	4610      	mov	r0, r2
 8002e32:	f7ff fa5a 	bl	80022ea <queue_append_byte>
 8002e36:	bf00      	nop
 8002e38:	3708      	adds	r7, #8
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	bd80      	pop	{r7, pc}
 8002e3e:	bf00      	nop
 8002e40:	200003e8 	.word	0x200003e8

08002e44 <MX_ADC3_Init>:
 8002e44:	b580      	push	{r7, lr}
 8002e46:	b084      	sub	sp, #16
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	463b      	mov	r3, r7
 8002e4c:	2200      	movs	r2, #0
 8002e4e:	601a      	str	r2, [r3, #0]
 8002e50:	605a      	str	r2, [r3, #4]
 8002e52:	609a      	str	r2, [r3, #8]
 8002e54:	60da      	str	r2, [r3, #12]
 8002e56:	4b21      	ldr	r3, [pc, #132]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e58:	4a21      	ldr	r2, [pc, #132]	; (8002ee0 <MX_ADC3_Init+0x9c>)
 8002e5a:	601a      	str	r2, [r3, #0]
 8002e5c:	4b1f      	ldr	r3, [pc, #124]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e5e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8002e62:	605a      	str	r2, [r3, #4]
 8002e64:	4b1d      	ldr	r3, [pc, #116]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	609a      	str	r2, [r3, #8]
 8002e6a:	4b1c      	ldr	r3, [pc, #112]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	611a      	str	r2, [r3, #16]
 8002e70:	4b1a      	ldr	r3, [pc, #104]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e72:	2200      	movs	r2, #0
 8002e74:	761a      	strb	r2, [r3, #24]
 8002e76:	4b19      	ldr	r3, [pc, #100]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e78:	2200      	movs	r2, #0
 8002e7a:	f883 2020 	strb.w	r2, [r3, #32]
 8002e7e:	4b17      	ldr	r3, [pc, #92]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e80:	2200      	movs	r2, #0
 8002e82:	62da      	str	r2, [r3, #44]	; 0x2c
 8002e84:	4b15      	ldr	r3, [pc, #84]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e86:	4a17      	ldr	r2, [pc, #92]	; (8002ee4 <MX_ADC3_Init+0xa0>)
 8002e88:	629a      	str	r2, [r3, #40]	; 0x28
 8002e8a:	4b14      	ldr	r3, [pc, #80]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	60da      	str	r2, [r3, #12]
 8002e90:	4b12      	ldr	r3, [pc, #72]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e92:	2201      	movs	r2, #1
 8002e94:	61da      	str	r2, [r3, #28]
 8002e96:	4b11      	ldr	r3, [pc, #68]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e98:	2200      	movs	r2, #0
 8002e9a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 8002e9e:	4b0f      	ldr	r3, [pc, #60]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ea0:	2201      	movs	r2, #1
 8002ea2:	615a      	str	r2, [r3, #20]
 8002ea4:	480d      	ldr	r0, [pc, #52]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ea6:	f00c fb79 	bl	800f59c <HAL_ADC_Init>
 8002eaa:	4603      	mov	r3, r0
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d001      	beq.n	8002eb4 <MX_ADC3_Init+0x70>
 8002eb0:	f000 fe87 	bl	8003bc2 <Error_Handler>
 8002eb4:	2308      	movs	r3, #8
 8002eb6:	603b      	str	r3, [r7, #0]
 8002eb8:	2301      	movs	r3, #1
 8002eba:	607b      	str	r3, [r7, #4]
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	60bb      	str	r3, [r7, #8]
 8002ec0:	463b      	mov	r3, r7
 8002ec2:	4619      	mov	r1, r3
 8002ec4:	4805      	ldr	r0, [pc, #20]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ec6:	f00c fbad 	bl	800f624 <HAL_ADC_ConfigChannel>
 8002eca:	4603      	mov	r3, r0
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d001      	beq.n	8002ed4 <MX_ADC3_Init+0x90>
 8002ed0:	f000 fe77 	bl	8003bc2 <Error_Handler>
 8002ed4:	bf00      	nop
 8002ed6:	3710      	adds	r7, #16
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	bd80      	pop	{r7, pc}
 8002edc:	200003ec 	.word	0x200003ec
 8002ee0:	40012200 	.word	0x40012200
 8002ee4:	0f000001 	.word	0x0f000001

08002ee8 <HAL_ADC_MspInit>:
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	b08a      	sub	sp, #40	; 0x28
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
 8002ef0:	f107 0314 	add.w	r3, r7, #20
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	605a      	str	r2, [r3, #4]
 8002efa:	609a      	str	r2, [r3, #8]
 8002efc:	60da      	str	r2, [r3, #12]
 8002efe:	611a      	str	r2, [r3, #16]
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	4a17      	ldr	r2, [pc, #92]	; (8002f64 <HAL_ADC_MspInit+0x7c>)
 8002f06:	4293      	cmp	r3, r2
 8002f08:	d128      	bne.n	8002f5c <HAL_ADC_MspInit+0x74>
 8002f0a:	2300      	movs	r3, #0
 8002f0c:	613b      	str	r3, [r7, #16]
 8002f0e:	4b16      	ldr	r3, [pc, #88]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f12:	4a15      	ldr	r2, [pc, #84]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f14:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002f18:	6453      	str	r3, [r2, #68]	; 0x44
 8002f1a:	4b13      	ldr	r3, [pc, #76]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f1e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002f22:	613b      	str	r3, [r7, #16]
 8002f24:	693b      	ldr	r3, [r7, #16]
 8002f26:	2300      	movs	r3, #0
 8002f28:	60fb      	str	r3, [r7, #12]
 8002f2a:	4b0f      	ldr	r3, [pc, #60]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f2e:	4a0e      	ldr	r2, [pc, #56]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f30:	f043 0320 	orr.w	r3, r3, #32
 8002f34:	6313      	str	r3, [r2, #48]	; 0x30
 8002f36:	4b0c      	ldr	r3, [pc, #48]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f3a:	f003 0320 	and.w	r3, r3, #32
 8002f3e:	60fb      	str	r3, [r7, #12]
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002f46:	617b      	str	r3, [r7, #20]
 8002f48:	2303      	movs	r3, #3
 8002f4a:	61bb      	str	r3, [r7, #24]
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	61fb      	str	r3, [r7, #28]
 8002f50:	f107 0314 	add.w	r3, r7, #20
 8002f54:	4619      	mov	r1, r3
 8002f56:	4805      	ldr	r0, [pc, #20]	; (8002f6c <HAL_ADC_MspInit+0x84>)
 8002f58:	f00e f8f2 	bl	8011140 <HAL_GPIO_Init>
 8002f5c:	bf00      	nop
 8002f5e:	3728      	adds	r7, #40	; 0x28
 8002f60:	46bd      	mov	sp, r7
 8002f62:	bd80      	pop	{r7, pc}
 8002f64:	40012200 	.word	0x40012200
 8002f68:	40023800 	.word	0x40023800
 8002f6c:	40021400 	.word	0x40021400

08002f70 <MX_CAN1_Init>:
 8002f70:	b580      	push	{r7, lr}
 8002f72:	af00      	add	r7, sp, #0
 8002f74:	4b17      	ldr	r3, [pc, #92]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f76:	4a18      	ldr	r2, [pc, #96]	; (8002fd8 <MX_CAN1_Init+0x68>)
 8002f78:	601a      	str	r2, [r3, #0]
 8002f7a:	4b16      	ldr	r3, [pc, #88]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f7c:	2203      	movs	r2, #3
 8002f7e:	605a      	str	r2, [r3, #4]
 8002f80:	4b14      	ldr	r3, [pc, #80]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f82:	2200      	movs	r2, #0
 8002f84:	609a      	str	r2, [r3, #8]
 8002f86:	4b13      	ldr	r3, [pc, #76]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f88:	2200      	movs	r2, #0
 8002f8a:	60da      	str	r2, [r3, #12]
 8002f8c:	4b11      	ldr	r3, [pc, #68]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f8e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8002f92:	611a      	str	r2, [r3, #16]
 8002f94:	4b0f      	ldr	r3, [pc, #60]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f96:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
 8002f9a:	615a      	str	r2, [r3, #20]
 8002f9c:	4b0d      	ldr	r3, [pc, #52]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f9e:	2200      	movs	r2, #0
 8002fa0:	761a      	strb	r2, [r3, #24]
 8002fa2:	4b0c      	ldr	r3, [pc, #48]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	765a      	strb	r2, [r3, #25]
 8002fa8:	4b0a      	ldr	r3, [pc, #40]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	769a      	strb	r2, [r3, #26]
 8002fae:	4b09      	ldr	r3, [pc, #36]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	76da      	strb	r2, [r3, #27]
 8002fb4:	4b07      	ldr	r3, [pc, #28]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fb6:	2200      	movs	r2, #0
 8002fb8:	771a      	strb	r2, [r3, #28]
 8002fba:	4b06      	ldr	r3, [pc, #24]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	775a      	strb	r2, [r3, #29]
 8002fc0:	4804      	ldr	r0, [pc, #16]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fc2:	f00c fd4d 	bl	800fa60 <HAL_CAN_Init>
 8002fc6:	4603      	mov	r3, r0
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	d001      	beq.n	8002fd0 <MX_CAN1_Init+0x60>
 8002fcc:	f000 fdf9 	bl	8003bc2 <Error_Handler>
 8002fd0:	bf00      	nop
 8002fd2:	bd80      	pop	{r7, pc}
 8002fd4:	20000434 	.word	0x20000434
 8002fd8:	40006400 	.word	0x40006400

08002fdc <MX_CAN2_Init>:
 8002fdc:	b580      	push	{r7, lr}
 8002fde:	af00      	add	r7, sp, #0
 8002fe0:	4b17      	ldr	r3, [pc, #92]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fe2:	4a18      	ldr	r2, [pc, #96]	; (8003044 <MX_CAN2_Init+0x68>)
 8002fe4:	601a      	str	r2, [r3, #0]
 8002fe6:	4b16      	ldr	r3, [pc, #88]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fe8:	2203      	movs	r2, #3
 8002fea:	605a      	str	r2, [r3, #4]
 8002fec:	4b14      	ldr	r3, [pc, #80]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fee:	2200      	movs	r2, #0
 8002ff0:	609a      	str	r2, [r3, #8]
 8002ff2:	4b13      	ldr	r3, [pc, #76]	; (8003040 <MX_CAN2_Init+0x64>)
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	60da      	str	r2, [r3, #12]
 8002ff8:	4b11      	ldr	r3, [pc, #68]	; (8003040 <MX_CAN2_Init+0x64>)
 8002ffa:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8002ffe:	611a      	str	r2, [r3, #16]
 8003000:	4b0f      	ldr	r3, [pc, #60]	; (8003040 <MX_CAN2_Init+0x64>)
 8003002:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
 8003006:	615a      	str	r2, [r3, #20]
 8003008:	4b0d      	ldr	r3, [pc, #52]	; (8003040 <MX_CAN2_Init+0x64>)
 800300a:	2200      	movs	r2, #0
 800300c:	761a      	strb	r2, [r3, #24]
 800300e:	4b0c      	ldr	r3, [pc, #48]	; (8003040 <MX_CAN2_Init+0x64>)
 8003010:	2200      	movs	r2, #0
 8003012:	765a      	strb	r2, [r3, #25]
 8003014:	4b0a      	ldr	r3, [pc, #40]	; (8003040 <MX_CAN2_Init+0x64>)
 8003016:	2200      	movs	r2, #0
 8003018:	769a      	strb	r2, [r3, #26]
 800301a:	4b09      	ldr	r3, [pc, #36]	; (8003040 <MX_CAN2_Init+0x64>)
 800301c:	2200      	movs	r2, #0
 800301e:	76da      	strb	r2, [r3, #27]
 8003020:	4b07      	ldr	r3, [pc, #28]	; (8003040 <MX_CAN2_Init+0x64>)
 8003022:	2200      	movs	r2, #0
 8003024:	771a      	strb	r2, [r3, #28]
 8003026:	4b06      	ldr	r3, [pc, #24]	; (8003040 <MX_CAN2_Init+0x64>)
 8003028:	2200      	movs	r2, #0
 800302a:	775a      	strb	r2, [r3, #29]
 800302c:	4804      	ldr	r0, [pc, #16]	; (8003040 <MX_CAN2_Init+0x64>)
 800302e:	f00c fd17 	bl	800fa60 <HAL_CAN_Init>
 8003032:	4603      	mov	r3, r0
 8003034:	2b00      	cmp	r3, #0
 8003036:	d001      	beq.n	800303c <MX_CAN2_Init+0x60>
 8003038:	f000 fdc3 	bl	8003bc2 <Error_Handler>
 800303c:	bf00      	nop
 800303e:	bd80      	pop	{r7, pc}
 8003040:	2000045c 	.word	0x2000045c
 8003044:	40006800 	.word	0x40006800

08003048 <HAL_CAN_MspInit>:
 8003048:	b580      	push	{r7, lr}
 800304a:	b08c      	sub	sp, #48	; 0x30
 800304c:	af00      	add	r7, sp, #0
 800304e:	6078      	str	r0, [r7, #4]
 8003050:	f107 031c 	add.w	r3, r7, #28
 8003054:	2200      	movs	r2, #0
 8003056:	601a      	str	r2, [r3, #0]
 8003058:	605a      	str	r2, [r3, #4]
 800305a:	609a      	str	r2, [r3, #8]
 800305c:	60da      	str	r2, [r3, #12]
 800305e:	611a      	str	r2, [r3, #16]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	4a52      	ldr	r2, [pc, #328]	; (80031b0 <HAL_CAN_MspInit+0x168>)
 8003066:	4293      	cmp	r3, r2
 8003068:	d145      	bne.n	80030f6 <HAL_CAN_MspInit+0xae>
 800306a:	4b52      	ldr	r3, [pc, #328]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	3301      	adds	r3, #1
 8003070:	4a50      	ldr	r2, [pc, #320]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003072:	6013      	str	r3, [r2, #0]
 8003074:	4b4f      	ldr	r3, [pc, #316]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	2b01      	cmp	r3, #1
 800307a:	d10d      	bne.n	8003098 <HAL_CAN_MspInit+0x50>
 800307c:	2300      	movs	r3, #0
 800307e:	61bb      	str	r3, [r7, #24]
 8003080:	4b4d      	ldr	r3, [pc, #308]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003084:	4a4c      	ldr	r2, [pc, #304]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003086:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800308a:	6413      	str	r3, [r2, #64]	; 0x40
 800308c:	4b4a      	ldr	r3, [pc, #296]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800308e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003090:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003094:	61bb      	str	r3, [r7, #24]
 8003096:	69bb      	ldr	r3, [r7, #24]
 8003098:	2300      	movs	r3, #0
 800309a:	617b      	str	r3, [r7, #20]
 800309c:	4b46      	ldr	r3, [pc, #280]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800309e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030a0:	4a45      	ldr	r2, [pc, #276]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 80030a2:	f043 0308 	orr.w	r3, r3, #8
 80030a6:	6313      	str	r3, [r2, #48]	; 0x30
 80030a8:	4b43      	ldr	r3, [pc, #268]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 80030aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030ac:	f003 0308 	and.w	r3, r3, #8
 80030b0:	617b      	str	r3, [r7, #20]
 80030b2:	697b      	ldr	r3, [r7, #20]
 80030b4:	2303      	movs	r3, #3
 80030b6:	61fb      	str	r3, [r7, #28]
 80030b8:	2302      	movs	r3, #2
 80030ba:	623b      	str	r3, [r7, #32]
 80030bc:	2300      	movs	r3, #0
 80030be:	627b      	str	r3, [r7, #36]	; 0x24
 80030c0:	2303      	movs	r3, #3
 80030c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80030c4:	2309      	movs	r3, #9
 80030c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80030c8:	f107 031c 	add.w	r3, r7, #28
 80030cc:	4619      	mov	r1, r3
 80030ce:	483b      	ldr	r0, [pc, #236]	; (80031bc <HAL_CAN_MspInit+0x174>)
 80030d0:	f00e f836 	bl	8011140 <HAL_GPIO_Init>
 80030d4:	2200      	movs	r2, #0
 80030d6:	2105      	movs	r1, #5
 80030d8:	2014      	movs	r0, #20
 80030da:	f00d fbf9 	bl	80108d0 <HAL_NVIC_SetPriority>
 80030de:	2014      	movs	r0, #20
 80030e0:	f00d fc12 	bl	8010908 <HAL_NVIC_EnableIRQ>
 80030e4:	2200      	movs	r2, #0
 80030e6:	2105      	movs	r1, #5
 80030e8:	2015      	movs	r0, #21
 80030ea:	f00d fbf1 	bl	80108d0 <HAL_NVIC_SetPriority>
 80030ee:	2015      	movs	r0, #21
 80030f0:	f00d fc0a 	bl	8010908 <HAL_NVIC_EnableIRQ>
 80030f4:	e057      	b.n	80031a6 <HAL_CAN_MspInit+0x15e>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	4a31      	ldr	r2, [pc, #196]	; (80031c0 <HAL_CAN_MspInit+0x178>)
 80030fc:	4293      	cmp	r3, r2
 80030fe:	d152      	bne.n	80031a6 <HAL_CAN_MspInit+0x15e>
 8003100:	2300      	movs	r3, #0
 8003102:	613b      	str	r3, [r7, #16]
 8003104:	4b2c      	ldr	r3, [pc, #176]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003106:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003108:	4a2b      	ldr	r2, [pc, #172]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800310a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800310e:	6413      	str	r3, [r2, #64]	; 0x40
 8003110:	4b29      	ldr	r3, [pc, #164]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003112:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003114:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003118:	613b      	str	r3, [r7, #16]
 800311a:	693b      	ldr	r3, [r7, #16]
 800311c:	4b25      	ldr	r3, [pc, #148]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	3301      	adds	r3, #1
 8003122:	4a24      	ldr	r2, [pc, #144]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003124:	6013      	str	r3, [r2, #0]
 8003126:	4b23      	ldr	r3, [pc, #140]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	2b01      	cmp	r3, #1
 800312c:	d10d      	bne.n	800314a <HAL_CAN_MspInit+0x102>
 800312e:	2300      	movs	r3, #0
 8003130:	60fb      	str	r3, [r7, #12]
 8003132:	4b21      	ldr	r3, [pc, #132]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003134:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003136:	4a20      	ldr	r2, [pc, #128]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003138:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800313c:	6413      	str	r3, [r2, #64]	; 0x40
 800313e:	4b1e      	ldr	r3, [pc, #120]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003140:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003142:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003146:	60fb      	str	r3, [r7, #12]
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	2300      	movs	r3, #0
 800314c:	60bb      	str	r3, [r7, #8]
 800314e:	4b1a      	ldr	r3, [pc, #104]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003152:	4a19      	ldr	r2, [pc, #100]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003154:	f043 0302 	orr.w	r3, r3, #2
 8003158:	6313      	str	r3, [r2, #48]	; 0x30
 800315a:	4b17      	ldr	r3, [pc, #92]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800315c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800315e:	f003 0302 	and.w	r3, r3, #2
 8003162:	60bb      	str	r3, [r7, #8]
 8003164:	68bb      	ldr	r3, [r7, #8]
 8003166:	2360      	movs	r3, #96	; 0x60
 8003168:	61fb      	str	r3, [r7, #28]
 800316a:	2302      	movs	r3, #2
 800316c:	623b      	str	r3, [r7, #32]
 800316e:	2300      	movs	r3, #0
 8003170:	627b      	str	r3, [r7, #36]	; 0x24
 8003172:	2303      	movs	r3, #3
 8003174:	62bb      	str	r3, [r7, #40]	; 0x28
 8003176:	2309      	movs	r3, #9
 8003178:	62fb      	str	r3, [r7, #44]	; 0x2c
 800317a:	f107 031c 	add.w	r3, r7, #28
 800317e:	4619      	mov	r1, r3
 8003180:	4810      	ldr	r0, [pc, #64]	; (80031c4 <HAL_CAN_MspInit+0x17c>)
 8003182:	f00d ffdd 	bl	8011140 <HAL_GPIO_Init>
 8003186:	2200      	movs	r2, #0
 8003188:	2105      	movs	r1, #5
 800318a:	2040      	movs	r0, #64	; 0x40
 800318c:	f00d fba0 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003190:	2040      	movs	r0, #64	; 0x40
 8003192:	f00d fbb9 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003196:	2200      	movs	r2, #0
 8003198:	2105      	movs	r1, #5
 800319a:	2041      	movs	r0, #65	; 0x41
 800319c:	f00d fb98 	bl	80108d0 <HAL_NVIC_SetPriority>
 80031a0:	2041      	movs	r0, #65	; 0x41
 80031a2:	f00d fbb1 	bl	8010908 <HAL_NVIC_EnableIRQ>
 80031a6:	bf00      	nop
 80031a8:	3730      	adds	r7, #48	; 0x30
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bd80      	pop	{r7, pc}
 80031ae:	bf00      	nop
 80031b0:	40006400 	.word	0x40006400
 80031b4:	20000484 	.word	0x20000484
 80031b8:	40023800 	.word	0x40023800
 80031bc:	40020c00 	.word	0x40020c00
 80031c0:	40006800 	.word	0x40006800
 80031c4:	40020400 	.word	0x40020400

080031c8 <MX_DMA_Init>:
 80031c8:	b580      	push	{r7, lr}
 80031ca:	b082      	sub	sp, #8
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	2300      	movs	r3, #0
 80031d0:	607b      	str	r3, [r7, #4]
 80031d2:	4b2f      	ldr	r3, [pc, #188]	; (8003290 <MX_DMA_Init+0xc8>)
 80031d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031d6:	4a2e      	ldr	r2, [pc, #184]	; (8003290 <MX_DMA_Init+0xc8>)
 80031d8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80031dc:	6313      	str	r3, [r2, #48]	; 0x30
 80031de:	4b2c      	ldr	r3, [pc, #176]	; (8003290 <MX_DMA_Init+0xc8>)
 80031e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031e2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80031e6:	607b      	str	r3, [r7, #4]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2300      	movs	r3, #0
 80031ec:	603b      	str	r3, [r7, #0]
 80031ee:	4b28      	ldr	r3, [pc, #160]	; (8003290 <MX_DMA_Init+0xc8>)
 80031f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031f2:	4a27      	ldr	r2, [pc, #156]	; (8003290 <MX_DMA_Init+0xc8>)
 80031f4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80031f8:	6313      	str	r3, [r2, #48]	; 0x30
 80031fa:	4b25      	ldr	r3, [pc, #148]	; (8003290 <MX_DMA_Init+0xc8>)
 80031fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031fe:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003202:	603b      	str	r3, [r7, #0]
 8003204:	683b      	ldr	r3, [r7, #0]
 8003206:	2200      	movs	r2, #0
 8003208:	2105      	movs	r1, #5
 800320a:	200c      	movs	r0, #12
 800320c:	f00d fb60 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003210:	200c      	movs	r0, #12
 8003212:	f00d fb79 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003216:	2200      	movs	r2, #0
 8003218:	2105      	movs	r1, #5
 800321a:	200d      	movs	r0, #13
 800321c:	f00d fb58 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003220:	200d      	movs	r0, #13
 8003222:	f00d fb71 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003226:	2200      	movs	r2, #0
 8003228:	2105      	movs	r1, #5
 800322a:	200f      	movs	r0, #15
 800322c:	f00d fb50 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003230:	200f      	movs	r0, #15
 8003232:	f00d fb69 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003236:	2200      	movs	r2, #0
 8003238:	2105      	movs	r1, #5
 800323a:	2038      	movs	r0, #56	; 0x38
 800323c:	f00d fb48 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003240:	2038      	movs	r0, #56	; 0x38
 8003242:	f00d fb61 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003246:	2200      	movs	r2, #0
 8003248:	2105      	movs	r1, #5
 800324a:	2039      	movs	r0, #57	; 0x39
 800324c:	f00d fb40 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003250:	2039      	movs	r0, #57	; 0x39
 8003252:	f00d fb59 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003256:	2200      	movs	r2, #0
 8003258:	2105      	movs	r1, #5
 800325a:	203b      	movs	r0, #59	; 0x3b
 800325c:	f00d fb38 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003260:	203b      	movs	r0, #59	; 0x3b
 8003262:	f00d fb51 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003266:	2200      	movs	r2, #0
 8003268:	2105      	movs	r1, #5
 800326a:	2044      	movs	r0, #68	; 0x44
 800326c:	f00d fb30 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003270:	2044      	movs	r0, #68	; 0x44
 8003272:	f00d fb49 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003276:	2200      	movs	r2, #0
 8003278:	2105      	movs	r1, #5
 800327a:	2045      	movs	r0, #69	; 0x45
 800327c:	f00d fb28 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003280:	2045      	movs	r0, #69	; 0x45
 8003282:	f00d fb41 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003286:	bf00      	nop
 8003288:	3708      	adds	r7, #8
 800328a:	46bd      	mov	sp, r7
 800328c:	bd80      	pop	{r7, pc}
 800328e:	bf00      	nop
 8003290:	40023800 	.word	0x40023800

08003294 <configureTimerForRunTimeStats>:
unsigned long getRunTimeCounterValue(void);
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);

/* USER CODE BEGIN 1 */
/* Functions needed when configGENERATE_RUN_TIME_STATS is on */
__weak void configureTimerForRunTimeStats(void) {
 8003294:	b480      	push	{r7}
 8003296:	af00      	add	r7, sp, #0

}
 8003298:	bf00      	nop
 800329a:	46bd      	mov	sp, r7
 800329c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032a0:	4770      	bx	lr

080032a2 <getRunTimeCounterValue>:

__weak unsigned long getRunTimeCounterValue(void) {
 80032a2:	b480      	push	{r7}
 80032a4:	af00      	add	r7, sp, #0
	return 0;
 80032a6:	2300      	movs	r3, #0
}
 80032a8:	4618      	mov	r0, r3
 80032aa:	46bd      	mov	sp, r7
 80032ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b0:	4770      	bx	lr

080032b2 <vApplicationStackOverflowHook>:
/* USER CODE END 1 */

/* USER CODE BEGIN 4 */
__weak void vApplicationStackOverflowHook(xTaskHandle xTask,
		signed char *pcTaskName) {
 80032b2:	b480      	push	{r7}
 80032b4:	b083      	sub	sp, #12
 80032b6:	af00      	add	r7, sp, #0
 80032b8:	6078      	str	r0, [r7, #4]
 80032ba:	6039      	str	r1, [r7, #0]
	/* Run time stack overflow checking is performed if
	 configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
	 called if a stack overflow is detected. */
}
 80032bc:	bf00      	nop
 80032be:	370c      	adds	r7, #12
 80032c0:	46bd      	mov	sp, r7
 80032c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c6:	4770      	bx	lr

080032c8 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer,
		StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 80032c8:	b480      	push	{r7}
 80032ca:	b085      	sub	sp, #20
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	60f8      	str	r0, [r7, #12]
 80032d0:	60b9      	str	r1, [r7, #8]
 80032d2:	607a      	str	r2, [r7, #4]
	*ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	4a07      	ldr	r2, [pc, #28]	; (80032f4 <vApplicationGetIdleTaskMemory+0x2c>)
 80032d8:	601a      	str	r2, [r3, #0]
	*ppxIdleTaskStackBuffer = &xIdleStack[0];
 80032da:	68bb      	ldr	r3, [r7, #8]
 80032dc:	4a06      	ldr	r2, [pc, #24]	; (80032f8 <vApplicationGetIdleTaskMemory+0x30>)
 80032de:	601a      	str	r2, [r3, #0]
	*pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80032e6:	601a      	str	r2, [r3, #0]
	/* place for user code */
}
 80032e8:	bf00      	nop
 80032ea:	3714      	adds	r7, #20
 80032ec:	46bd      	mov	sp, r7
 80032ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f2:	4770      	bx	lr
 80032f4:	200004f0 	.word	0x200004f0
 80032f8:	200005b0 	.word	0x200005b0

080032fc <vApplicationGetTimerTaskMemory>:
/* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
static StaticTask_t xTimerTaskTCBBuffer;
static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];

void vApplicationGetTimerTaskMemory(StaticTask_t **ppxTimerTaskTCBBuffer,
		StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 80032fc:	b480      	push	{r7}
 80032fe:	b085      	sub	sp, #20
 8003300:	af00      	add	r7, sp, #0
 8003302:	60f8      	str	r0, [r7, #12]
 8003304:	60b9      	str	r1, [r7, #8]
 8003306:	607a      	str	r2, [r7, #4]
	*ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 8003308:	68fb      	ldr	r3, [r7, #12]
 800330a:	4a07      	ldr	r2, [pc, #28]	; (8003328 <vApplicationGetTimerTaskMemory+0x2c>)
 800330c:	601a      	str	r2, [r3, #0]
	*ppxTimerTaskStackBuffer = &xTimerStack[0];
 800330e:	68bb      	ldr	r3, [r7, #8]
 8003310:	4a06      	ldr	r2, [pc, #24]	; (800332c <vApplicationGetTimerTaskMemory+0x30>)
 8003312:	601a      	str	r2, [r3, #0]
	*pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	f44f 7200 	mov.w	r2, #512	; 0x200
 800331a:	601a      	str	r2, [r3, #0]
	/* place for user code */
}
 800331c:	bf00      	nop
 800331e:	3714      	adds	r7, #20
 8003320:	46bd      	mov	sp, r7
 8003322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003326:	4770      	bx	lr
 8003328:	200009b0 	.word	0x200009b0
 800332c:	20000a70 	.word	0x20000a70

08003330 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 8003330:	b5b0      	push	{r4, r5, r7, lr}
 8003332:	b08a      	sub	sp, #40	; 0x28
 8003334:	af02      	add	r7, sp, #8
	/* add mutexes, ... */
  /* USER CODE END RTOS_MUTEX */

  /* USER CODE BEGIN RTOS_SEMAPHORES */
	/* add semaphores, ... */
	gimbal_event_group = xEventGroupCreate();
 8003336:	f018 f91e 	bl	801b576 <xEventGroupCreate>
 800333a:	4603      	mov	r3, r0
 800333c:	4a84      	ldr	r2, [pc, #528]	; (8003550 <MX_FREERTOS_Init+0x220>)
 800333e:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 8003340:	f018 f919 	bl	801b576 <xEventGroupCreate>
 8003344:	4603      	mov	r3, r0
 8003346:	4a83      	ldr	r2, [pc, #524]	; (8003554 <MX_FREERTOS_Init+0x224>)
 8003348:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 800334a:	f018 f914 	bl	801b576 <xEventGroupCreate>
 800334e:	4603      	mov	r3, r0
 8003350:	4a81      	ldr	r2, [pc, #516]	; (8003558 <MX_FREERTOS_Init+0x228>)
 8003352:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 8003354:	2203      	movs	r2, #3
 8003356:	2100      	movs	r1, #0
 8003358:	2001      	movs	r0, #1
 800335a:	f018 fc8f 	bl	801bc7c <xQueueGenericCreate>
 800335e:	4603      	mov	r3, r0
 8003360:	4a7e      	ldr	r2, [pc, #504]	; (800355c <MX_FREERTOS_Init+0x22c>)
 8003362:	6013      	str	r3, [r2, #0]
	/* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
	/* add queues, ... */
	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 8003364:	2200      	movs	r2, #0
 8003366:	2110      	movs	r1, #16
 8003368:	2005      	movs	r0, #5
 800336a:	f018 fc87 	bl	801bc7c <xQueueGenericCreate>
 800336e:	4603      	mov	r3, r0
 8003370:	4a7b      	ldr	r2, [pc, #492]	; (8003560 <MX_FREERTOS_Init+0x230>)
 8003372:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 8003374:	2200      	movs	r2, #0
 8003376:	2110      	movs	r1, #16
 8003378:	2005      	movs	r0, #5
 800337a:	f018 fc7f 	bl	801bc7c <xQueueGenericCreate>
 800337e:	4603      	mov	r3, r0
 8003380:	4a78      	ldr	r2, [pc, #480]	; (8003564 <MX_FREERTOS_Init+0x234>)
 8003382:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 8003384:	2200      	movs	r2, #0
 8003386:	210c      	movs	r1, #12
 8003388:	2005      	movs	r0, #5
 800338a:	f018 fc77 	bl	801bc7c <xQueueGenericCreate>
 800338e:	4603      	mov	r3, r0
 8003390:	4a75      	ldr	r2, [pc, #468]	; (8003568 <MX_FREERTOS_Init+0x238>)
 8003392:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 8003394:	2200      	movs	r2, #0
 8003396:	2101      	movs	r1, #1
 8003398:	2030      	movs	r0, #48	; 0x30
 800339a:	f018 fc6f 	bl	801bc7c <xQueueGenericCreate>
 800339e:	4603      	mov	r3, r0
 80033a0:	4a72      	ldr	r2, [pc, #456]	; (800356c <MX_FREERTOS_Init+0x23c>)
 80033a2:	6013      	str	r3, [r2, #0]
	uart_data_queue = xQueueCreate(5, sizeof(ref_msg_t));
 80033a4:	2200      	movs	r2, #0
 80033a6:	2142      	movs	r1, #66	; 0x42
 80033a8:	2005      	movs	r0, #5
 80033aa:	f018 fc67 	bl	801bc7c <xQueueGenericCreate>
 80033ae:	4603      	mov	r3, r0
 80033b0:	4a6f      	ldr	r2, [pc, #444]	; (8003570 <MX_FREERTOS_Init+0x240>)
 80033b2:	6013      	str	r3, [r2, #0]

  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 80033b4:	4b6f      	ldr	r3, [pc, #444]	; (8003574 <MX_FREERTOS_Init+0x244>)
 80033b6:	1d3c      	adds	r4, r7, #4
 80033b8:	461d      	mov	r5, r3
 80033ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80033bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80033be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 80033c6:	1d3b      	adds	r3, r7, #4
 80033c8:	2100      	movs	r1, #0
 80033ca:	4618      	mov	r0, r3
 80033cc:	f018 f873 	bl	801b4b6 <osThreadCreate>
 80033d0:	4603      	mov	r3, r0
 80033d2:	4a69      	ldr	r2, [pc, #420]	; (8003578 <MX_FREERTOS_Init+0x248>)
 80033d4:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_THREADS */
	/* add threads, ... */
	//todo: adjust priorities
	//Threads creation
	xTaskCreate(imu_processing_task, "IMU_task",
 80033d6:	4b69      	ldr	r3, [pc, #420]	; (800357c <MX_FREERTOS_Init+0x24c>)
 80033d8:	9301      	str	r3, [sp, #4]
 80033da:	230f      	movs	r3, #15
 80033dc:	9300      	str	r3, [sp, #0]
 80033de:	2301      	movs	r3, #1
 80033e0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80033e4:	4966      	ldr	r1, [pc, #408]	; (8003580 <MX_FREERTOS_Init+0x250>)
 80033e6:	4867      	ldr	r0, [pc, #412]	; (8003584 <MX_FREERTOS_Init+0x254>)
 80033e8:	f019 f977 	bl	801c6da <xTaskCreate>
	1024, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 80033ec:	4b66      	ldr	r3, [pc, #408]	; (8003588 <MX_FREERTOS_Init+0x258>)
 80033ee:	9301      	str	r3, [sp, #4]
 80033f0:	2309      	movs	r3, #9
 80033f2:	9300      	str	r3, [sp, #0]
 80033f4:	2301      	movs	r3, #1
 80033f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80033fa:	4964      	ldr	r1, [pc, #400]	; (800358c <MX_FREERTOS_Init+0x25c>)
 80033fc:	4864      	ldr	r0, [pc, #400]	; (8003590 <MX_FREERTOS_Init+0x260>)
 80033fe:	f019 f96c 	bl	801c6da <xTaskCreate>
			&motor_calib_task_handle);

//	if (gimbal_event_group == NULL) {
//		//error handler implement next time!
//	} else {
		xTaskCreate(gimbal_control_task, "gimbal_task",
 8003402:	4b64      	ldr	r3, [pc, #400]	; (8003594 <MX_FREERTOS_Init+0x264>)
 8003404:	9301      	str	r3, [sp, #4]
 8003406:	2307      	movs	r3, #7
 8003408:	9300      	str	r3, [sp, #0]
 800340a:	2301      	movs	r3, #1
 800340c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003410:	4961      	ldr	r1, [pc, #388]	; (8003598 <MX_FREERTOS_Init+0x268>)
 8003412:	4862      	ldr	r0, [pc, #392]	; (800359c <MX_FREERTOS_Init+0x26c>)
 8003414:	f019 f961 	bl	801c6da <xTaskCreate>
				&gimbal_control_task_handle);
//	}
//new implementation
	//todo: adjust priorities
	//Threads creation
	xTaskCreate(Ctrl_Task, "Ctrl_Task_task",
 8003418:	4b61      	ldr	r3, [pc, #388]	; (80035a0 <MX_FREERTOS_Init+0x270>)
 800341a:	9301      	str	r3, [sp, #4]
 800341c:	2308      	movs	r3, #8
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	2301      	movs	r3, #1
 8003422:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003426:	495f      	ldr	r1, [pc, #380]	; (80035a4 <MX_FREERTOS_Init+0x274>)
 8003428:	485f      	ldr	r0, [pc, #380]	; (80035a8 <MX_FREERTOS_Init+0x278>)
 800342a:	f019 f956 	bl	801c6da <xTaskCreate>
					configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
							&Ctrl_Task_handle);

	xTaskCreate(LegPos_UpdateTask, "LegPos_UpdateTask",
 800342e:	4b5f      	ldr	r3, [pc, #380]	; (80035ac <MX_FREERTOS_Init+0x27c>)
 8003430:	9301      	str	r3, [sp, #4]
 8003432:	2308      	movs	r3, #8
 8003434:	9300      	str	r3, [sp, #0]
 8003436:	2301      	movs	r3, #1
 8003438:	f44f 7280 	mov.w	r2, #256	; 0x100
 800343c:	495c      	ldr	r1, [pc, #368]	; (80035b0 <MX_FREERTOS_Init+0x280>)
 800343e:	485d      	ldr	r0, [pc, #372]	; (80035b4 <MX_FREERTOS_Init+0x284>)
 8003440:	f019 f94b 	bl	801c6da <xTaskCreate>
				configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
						&LegPos_UpdateTask_handle);

	xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
 8003444:	4b5c      	ldr	r3, [pc, #368]	; (80035b8 <MX_FREERTOS_Init+0x288>)
 8003446:	9301      	str	r3, [sp, #4]
 8003448:	2308      	movs	r3, #8
 800344a:	9300      	str	r3, [sp, #0]
 800344c:	2301      	movs	r3, #1
 800344e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003452:	495a      	ldr	r1, [pc, #360]	; (80035bc <MX_FREERTOS_Init+0x28c>)
 8003454:	485a      	ldr	r0, [pc, #360]	; (80035c0 <MX_FREERTOS_Init+0x290>)
 8003456:	f019 f940 	bl	801c6da <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
					&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 800345a:	4b5a      	ldr	r3, [pc, #360]	; (80035c4 <MX_FREERTOS_Init+0x294>)
 800345c:	9301      	str	r3, [sp, #4]
 800345e:	2308      	movs	r3, #8
 8003460:	9300      	str	r3, [sp, #0]
 8003462:	2301      	movs	r3, #1
 8003464:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003468:	4957      	ldr	r1, [pc, #348]	; (80035c8 <MX_FREERTOS_Init+0x298>)
 800346a:	4858      	ldr	r0, [pc, #352]	; (80035cc <MX_FREERTOS_Init+0x29c>)
 800346c:	f019 f935 	bl	801c6da <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
				&motors_process_handle);

	xTaskCreate(balancing_task, "balancing_task",
 8003470:	4b57      	ldr	r3, [pc, #348]	; (80035d0 <MX_FREERTOS_Init+0x2a0>)
 8003472:	9301      	str	r3, [sp, #4]
 8003474:	2308      	movs	r3, #8
 8003476:	9300      	str	r3, [sp, #0]
 8003478:	2301      	movs	r3, #1
 800347a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800347e:	4955      	ldr	r1, [pc, #340]	; (80035d4 <MX_FREERTOS_Init+0x2a4>)
 8003480:	4855      	ldr	r0, [pc, #340]	; (80035d8 <MX_FREERTOS_Init+0x2a8>)
 8003482:	f019 f92a 	bl	801c6da <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
					&balancing_task_handle);

	xTaskCreate(motor_send_RTOS, "motor_send_RTOS",
 8003486:	4b55      	ldr	r3, [pc, #340]	; (80035dc <MX_FREERTOS_Init+0x2ac>)
 8003488:	9301      	str	r3, [sp, #4]
 800348a:	2309      	movs	r3, #9
 800348c:	9300      	str	r3, [sp, #0]
 800348e:	2303      	movs	r3, #3
 8003490:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003494:	4952      	ldr	r1, [pc, #328]	; (80035e0 <MX_FREERTOS_Init+0x2b0>)
 8003496:	4853      	ldr	r0, [pc, #332]	; (80035e4 <MX_FREERTOS_Init+0x2b4>)
 8003498:	f019 f91f 	bl	801c6da <xTaskCreate>
	// 	xTaskCreate(movement_control_task, "chassis_task",
	// 	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 			&movement_control_task_handle);
	// }

	if (launcher_event_group == NULL) {
 800349c:	4b2e      	ldr	r3, [pc, #184]	; (8003558 <MX_FREERTOS_Init+0x228>)
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d00a      	beq.n	80034ba <MX_FREERTOS_Init+0x18a>
		//error handler
	} else {
		xTaskCreate(launcher_control_task, "launcher_task",
 80034a4:	4b50      	ldr	r3, [pc, #320]	; (80035e8 <MX_FREERTOS_Init+0x2b8>)
 80034a6:	9301      	str	r3, [sp, #4]
 80034a8:	2304      	movs	r3, #4
 80034aa:	9300      	str	r3, [sp, #0]
 80034ac:	2301      	movs	r3, #1
 80034ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80034b2:	494e      	ldr	r1, [pc, #312]	; (80035ec <MX_FREERTOS_Init+0x2bc>)
 80034b4:	484e      	ldr	r0, [pc, #312]	; (80035f0 <MX_FREERTOS_Init+0x2c0>)
 80034b6:	f019 f910 	bl	801c6da <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
				&launcher_control_task_handle);
	}

	xTaskCreate(control_input_task, "RC_task",
 80034ba:	4b4e      	ldr	r3, [pc, #312]	; (80035f4 <MX_FREERTOS_Init+0x2c4>)
 80034bc:	9301      	str	r3, [sp, #4]
 80034be:	2304      	movs	r3, #4
 80034c0:	9300      	str	r3, [sp, #0]
 80034c2:	2301      	movs	r3, #1
 80034c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80034c8:	494b      	ldr	r1, [pc, #300]	; (80035f8 <MX_FREERTOS_Init+0x2c8>)
 80034ca:	484c      	ldr	r0, [pc, #304]	; (80035fc <MX_FREERTOS_Init+0x2cc>)
 80034cc:	f019 f905 	bl	801c6da <xTaskCreate>
	1024, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 2048, (void*) 1,
 80034d0:	4b4b      	ldr	r3, [pc, #300]	; (8003600 <MX_FREERTOS_Init+0x2d0>)
 80034d2:	9301      	str	r3, [sp, #4]
 80034d4:	2302      	movs	r3, #2
 80034d6:	9300      	str	r3, [sp, #0]
 80034d8:	2301      	movs	r3, #1
 80034da:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80034de:	4949      	ldr	r1, [pc, #292]	; (8003604 <MX_FREERTOS_Init+0x2d4>)
 80034e0:	4849      	ldr	r0, [pc, #292]	; (8003608 <MX_FREERTOS_Init+0x2d8>)
 80034e2:	f019 f8fa 	bl	801c6da <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);
	xTaskCreate(buzzing_task, "buzzer_task",
 80034e6:	4b49      	ldr	r3, [pc, #292]	; (800360c <MX_FREERTOS_Init+0x2dc>)
 80034e8:	9301      	str	r3, [sp, #4]
 80034ea:	2301      	movs	r3, #1
 80034ec:	9300      	str	r3, [sp, #0]
 80034ee:	2301      	movs	r3, #1
 80034f0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80034f4:	4946      	ldr	r1, [pc, #280]	; (8003610 <MX_FREERTOS_Init+0x2e0>)
 80034f6:	4847      	ldr	r0, [pc, #284]	; (8003614 <MX_FREERTOS_Init+0x2e4>)
 80034f8:	f019 f8ef 	bl	801c6da <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 80034fc:	4b17      	ldr	r3, [pc, #92]	; (800355c <MX_FREERTOS_Init+0x22c>)
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	2b00      	cmp	r3, #0
 8003502:	d00a      	beq.n	800351a <MX_FREERTOS_Init+0x1ea>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 8003504:	4b44      	ldr	r3, [pc, #272]	; (8003618 <MX_FREERTOS_Init+0x2e8>)
 8003506:	9301      	str	r3, [sp, #4]
 8003508:	2301      	movs	r3, #1
 800350a:	9300      	str	r3, [sp, #0]
 800350c:	2301      	movs	r3, #1
 800350e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003512:	4942      	ldr	r1, [pc, #264]	; (800361c <MX_FREERTOS_Init+0x2ec>)
 8003514:	4842      	ldr	r0, [pc, #264]	; (8003620 <MX_FREERTOS_Init+0x2f0>)
 8003516:	f019 f8e0 	bl	801c6da <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
 800351a:	4b42      	ldr	r3, [pc, #264]	; (8003624 <MX_FREERTOS_Init+0x2f4>)
 800351c:	9301      	str	r3, [sp, #4]
 800351e:	2305      	movs	r3, #5
 8003520:	9300      	str	r3, [sp, #0]
 8003522:	2301      	movs	r3, #1
 8003524:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8003528:	493f      	ldr	r1, [pc, #252]	; (8003628 <MX_FREERTOS_Init+0x2f8>)
 800352a:	4840      	ldr	r0, [pc, #256]	; (800362c <MX_FREERTOS_Init+0x2fc>)
 800352c:	f019 f8d5 	bl	801c6da <xTaskCreate>
			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 500, (void*) 3,
 8003530:	4b3f      	ldr	r3, [pc, #252]	; (8003630 <MX_FREERTOS_Init+0x300>)
 8003532:	9301      	str	r3, [sp, #4]
 8003534:	2305      	movs	r3, #5
 8003536:	9300      	str	r3, [sp, #0]
 8003538:	2303      	movs	r3, #3
 800353a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800353e:	493d      	ldr	r1, [pc, #244]	; (8003634 <MX_FREERTOS_Init+0x304>)
 8003540:	483d      	ldr	r0, [pc, #244]	; (8003638 <MX_FREERTOS_Init+0x308>)
 8003542:	f019 f8ca 	bl	801c6da <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);

  /* USER CODE END RTOS_THREADS */

}
 8003546:	bf00      	nop
 8003548:	3720      	adds	r7, #32
 800354a:	46bd      	mov	sp, r7
 800354c:	bdb0      	pop	{r4, r5, r7, pc}
 800354e:	bf00      	nop
 8003550:	200004c8 	.word	0x200004c8
 8003554:	200004cc 	.word	0x200004cc
 8003558:	200004d0 	.word	0x200004d0
 800355c:	200004d4 	.word	0x200004d4
 8003560:	200004d8 	.word	0x200004d8
 8003564:	200004dc 	.word	0x200004dc
 8003568:	200004e0 	.word	0x200004e0
 800356c:	200004e4 	.word	0x200004e4
 8003570:	200004e8 	.word	0x200004e8
 8003574:	080267c8 	.word	0x080267c8
 8003578:	200004ec 	.word	0x200004ec
 800357c:	200004a4 	.word	0x200004a4
 8003580:	080266d4 	.word	0x080266d4
 8003584:	08007fe5 	.word	0x08007fe5
 8003588:	2000049c 	.word	0x2000049c
 800358c:	080266e0 	.word	0x080266e0
 8003590:	0800c9b5 	.word	0x0800c9b5
 8003594:	20000488 	.word	0x20000488
 8003598:	080266f4 	.word	0x080266f4
 800359c:	0800669d 	.word	0x0800669d
 80035a0:	200004bc 	.word	0x200004bc
 80035a4:	08026700 	.word	0x08026700
 80035a8:	0800e699 	.word	0x0800e699
 80035ac:	200004b8 	.word	0x200004b8
 80035b0:	08026710 	.word	0x08026710
 80035b4:	0800e45d 	.word	0x0800e45d
 80035b8:	200004b4 	.word	0x200004b4
 80035bc:	08026724 	.word	0x08026724
 80035c0:	0800e2c9 	.word	0x0800e2c9
 80035c4:	200004c0 	.word	0x200004c0
 80035c8:	0802673c 	.word	0x0802673c
 80035cc:	0800d109 	.word	0x0800d109
 80035d0:	200004b0 	.word	0x200004b0
 80035d4:	0802674c 	.word	0x0802674c
 80035d8:	0800e0c1 	.word	0x0800e0c1
 80035dc:	200004c4 	.word	0x200004c4
 80035e0:	0802675c 	.word	0x0802675c
 80035e4:	0800cbcd 	.word	0x0800cbcd
 80035e8:	20000494 	.word	0x20000494
 80035ec:	0802676c 	.word	0x0802676c
 80035f0:	08008cd1 	.word	0x08008cd1
 80035f4:	20000490 	.word	0x20000490
 80035f8:	0802677c 	.word	0x0802677c
 80035fc:	08005801 	.word	0x08005801
 8003600:	2000048c 	.word	0x2000048c
 8003604:	08026784 	.word	0x08026784
 8003608:	0800d859 	.word	0x0800d859
 800360c:	20000498 	.word	0x20000498
 8003610:	08026794 	.word	0x08026794
 8003614:	08004ef9 	.word	0x08004ef9
 8003618:	200004a0 	.word	0x200004a0
 800361c:	080267a0 	.word	0x080267a0
 8003620:	0800e0ad 	.word	0x0800e0ad
 8003624:	200004a8 	.word	0x200004a8
 8003628:	080267ac 	.word	0x080267ac
 800362c:	0800dd79 	.word	0x0800dd79
 8003630:	200004ac 	.word	0x200004ac
 8003634:	080267bc 	.word	0x080267bc
 8003638:	08007719 	.word	0x08007719

0800363c <StartDefaultTask>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 800363c:	b580      	push	{r7, lr}
 800363e:	b082      	sub	sp, #8
 8003640:	af00      	add	r7, sp, #0
 8003642:	6078      	str	r0, [r7, #4]
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8003644:	f01b f922 	bl	801e88c <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN StartDefaultTask */
	/* Infinite loop */
	for (;;) {
		osDelay(1);
 8003648:	2001      	movs	r0, #1
 800364a:	f017 ff80 	bl	801b54e <osDelay>
 800364e:	e7fb      	b.n	8003648 <StartDefaultTask+0xc>

08003650 <MX_GPIO_Init>:
 8003650:	b580      	push	{r7, lr}
 8003652:	b08e      	sub	sp, #56	; 0x38
 8003654:	af00      	add	r7, sp, #0
 8003656:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800365a:	2200      	movs	r2, #0
 800365c:	601a      	str	r2, [r3, #0]
 800365e:	605a      	str	r2, [r3, #4]
 8003660:	609a      	str	r2, [r3, #8]
 8003662:	60da      	str	r2, [r3, #12]
 8003664:	611a      	str	r2, [r3, #16]
 8003666:	2300      	movs	r3, #0
 8003668:	623b      	str	r3, [r7, #32]
 800366a:	4b79      	ldr	r3, [pc, #484]	; (8003850 <MX_GPIO_Init+0x200>)
 800366c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800366e:	4a78      	ldr	r2, [pc, #480]	; (8003850 <MX_GPIO_Init+0x200>)
 8003670:	f043 0302 	orr.w	r3, r3, #2
 8003674:	6313      	str	r3, [r2, #48]	; 0x30
 8003676:	4b76      	ldr	r3, [pc, #472]	; (8003850 <MX_GPIO_Init+0x200>)
 8003678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800367a:	f003 0302 	and.w	r3, r3, #2
 800367e:	623b      	str	r3, [r7, #32]
 8003680:	6a3b      	ldr	r3, [r7, #32]
 8003682:	2300      	movs	r3, #0
 8003684:	61fb      	str	r3, [r7, #28]
 8003686:	4b72      	ldr	r3, [pc, #456]	; (8003850 <MX_GPIO_Init+0x200>)
 8003688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800368a:	4a71      	ldr	r2, [pc, #452]	; (8003850 <MX_GPIO_Init+0x200>)
 800368c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003690:	6313      	str	r3, [r2, #48]	; 0x30
 8003692:	4b6f      	ldr	r3, [pc, #444]	; (8003850 <MX_GPIO_Init+0x200>)
 8003694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003696:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800369a:	61fb      	str	r3, [r7, #28]
 800369c:	69fb      	ldr	r3, [r7, #28]
 800369e:	2300      	movs	r3, #0
 80036a0:	61bb      	str	r3, [r7, #24]
 80036a2:	4b6b      	ldr	r3, [pc, #428]	; (8003850 <MX_GPIO_Init+0x200>)
 80036a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036a6:	4a6a      	ldr	r2, [pc, #424]	; (8003850 <MX_GPIO_Init+0x200>)
 80036a8:	f043 0301 	orr.w	r3, r3, #1
 80036ac:	6313      	str	r3, [r2, #48]	; 0x30
 80036ae:	4b68      	ldr	r3, [pc, #416]	; (8003850 <MX_GPIO_Init+0x200>)
 80036b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036b2:	f003 0301 	and.w	r3, r3, #1
 80036b6:	61bb      	str	r3, [r7, #24]
 80036b8:	69bb      	ldr	r3, [r7, #24]
 80036ba:	2300      	movs	r3, #0
 80036bc:	617b      	str	r3, [r7, #20]
 80036be:	4b64      	ldr	r3, [pc, #400]	; (8003850 <MX_GPIO_Init+0x200>)
 80036c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036c2:	4a63      	ldr	r2, [pc, #396]	; (8003850 <MX_GPIO_Init+0x200>)
 80036c4:	f043 0308 	orr.w	r3, r3, #8
 80036c8:	6313      	str	r3, [r2, #48]	; 0x30
 80036ca:	4b61      	ldr	r3, [pc, #388]	; (8003850 <MX_GPIO_Init+0x200>)
 80036cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036ce:	f003 0308 	and.w	r3, r3, #8
 80036d2:	617b      	str	r3, [r7, #20]
 80036d4:	697b      	ldr	r3, [r7, #20]
 80036d6:	2300      	movs	r3, #0
 80036d8:	613b      	str	r3, [r7, #16]
 80036da:	4b5d      	ldr	r3, [pc, #372]	; (8003850 <MX_GPIO_Init+0x200>)
 80036dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036de:	4a5c      	ldr	r2, [pc, #368]	; (8003850 <MX_GPIO_Init+0x200>)
 80036e0:	f043 0304 	orr.w	r3, r3, #4
 80036e4:	6313      	str	r3, [r2, #48]	; 0x30
 80036e6:	4b5a      	ldr	r3, [pc, #360]	; (8003850 <MX_GPIO_Init+0x200>)
 80036e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036ea:	f003 0304 	and.w	r3, r3, #4
 80036ee:	613b      	str	r3, [r7, #16]
 80036f0:	693b      	ldr	r3, [r7, #16]
 80036f2:	2300      	movs	r3, #0
 80036f4:	60fb      	str	r3, [r7, #12]
 80036f6:	4b56      	ldr	r3, [pc, #344]	; (8003850 <MX_GPIO_Init+0x200>)
 80036f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036fa:	4a55      	ldr	r2, [pc, #340]	; (8003850 <MX_GPIO_Init+0x200>)
 80036fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003700:	6313      	str	r3, [r2, #48]	; 0x30
 8003702:	4b53      	ldr	r3, [pc, #332]	; (8003850 <MX_GPIO_Init+0x200>)
 8003704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003706:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800370a:	60fb      	str	r3, [r7, #12]
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	2300      	movs	r3, #0
 8003710:	60bb      	str	r3, [r7, #8]
 8003712:	4b4f      	ldr	r3, [pc, #316]	; (8003850 <MX_GPIO_Init+0x200>)
 8003714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003716:	4a4e      	ldr	r2, [pc, #312]	; (8003850 <MX_GPIO_Init+0x200>)
 8003718:	f043 0320 	orr.w	r3, r3, #32
 800371c:	6313      	str	r3, [r2, #48]	; 0x30
 800371e:	4b4c      	ldr	r3, [pc, #304]	; (8003850 <MX_GPIO_Init+0x200>)
 8003720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003722:	f003 0320 	and.w	r3, r3, #32
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	68bb      	ldr	r3, [r7, #8]
 800372a:	2300      	movs	r3, #0
 800372c:	607b      	str	r3, [r7, #4]
 800372e:	4b48      	ldr	r3, [pc, #288]	; (8003850 <MX_GPIO_Init+0x200>)
 8003730:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003732:	4a47      	ldr	r2, [pc, #284]	; (8003850 <MX_GPIO_Init+0x200>)
 8003734:	f043 0310 	orr.w	r3, r3, #16
 8003738:	6313      	str	r3, [r2, #48]	; 0x30
 800373a:	4b45      	ldr	r3, [pc, #276]	; (8003850 <MX_GPIO_Init+0x200>)
 800373c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800373e:	f003 0310 	and.w	r3, r3, #16
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	2200      	movs	r2, #0
 8003748:	f44f 7180 	mov.w	r1, #256	; 0x100
 800374c:	4841      	ldr	r0, [pc, #260]	; (8003854 <MX_GPIO_Init+0x204>)
 800374e:	f00d fe93 	bl	8011478 <HAL_GPIO_WritePin>
 8003752:	2200      	movs	r2, #0
 8003754:	2140      	movs	r1, #64	; 0x40
 8003756:	4840      	ldr	r0, [pc, #256]	; (8003858 <MX_GPIO_Init+0x208>)
 8003758:	f00d fe8e 	bl	8011478 <HAL_GPIO_WritePin>
 800375c:	2201      	movs	r2, #1
 800375e:	2110      	movs	r1, #16
 8003760:	483e      	ldr	r0, [pc, #248]	; (800385c <MX_GPIO_Init+0x20c>)
 8003762:	f00d fe89 	bl	8011478 <HAL_GPIO_WritePin>
 8003766:	2201      	movs	r2, #1
 8003768:	2101      	movs	r1, #1
 800376a:	483d      	ldr	r0, [pc, #244]	; (8003860 <MX_GPIO_Init+0x210>)
 800376c:	f00d fe84 	bl	8011478 <HAL_GPIO_WritePin>
 8003770:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003774:	627b      	str	r3, [r7, #36]	; 0x24
 8003776:	2301      	movs	r3, #1
 8003778:	62bb      	str	r3, [r7, #40]	; 0x28
 800377a:	2300      	movs	r3, #0
 800377c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800377e:	2300      	movs	r3, #0
 8003780:	633b      	str	r3, [r7, #48]	; 0x30
 8003782:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003786:	4619      	mov	r1, r3
 8003788:	4832      	ldr	r0, [pc, #200]	; (8003854 <MX_GPIO_Init+0x204>)
 800378a:	f00d fcd9 	bl	8011140 <HAL_GPIO_Init>
 800378e:	2340      	movs	r3, #64	; 0x40
 8003790:	627b      	str	r3, [r7, #36]	; 0x24
 8003792:	2301      	movs	r3, #1
 8003794:	62bb      	str	r3, [r7, #40]	; 0x28
 8003796:	2300      	movs	r3, #0
 8003798:	62fb      	str	r3, [r7, #44]	; 0x2c
 800379a:	2300      	movs	r3, #0
 800379c:	633b      	str	r3, [r7, #48]	; 0x30
 800379e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037a2:	4619      	mov	r1, r3
 80037a4:	482c      	ldr	r0, [pc, #176]	; (8003858 <MX_GPIO_Init+0x208>)
 80037a6:	f00d fccb 	bl	8011140 <HAL_GPIO_Init>
 80037aa:	2308      	movs	r3, #8
 80037ac:	627b      	str	r3, [r7, #36]	; 0x24
 80037ae:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80037b2:	62bb      	str	r3, [r7, #40]	; 0x28
 80037b4:	2301      	movs	r3, #1
 80037b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037b8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037bc:	4619      	mov	r1, r3
 80037be:	4826      	ldr	r0, [pc, #152]	; (8003858 <MX_GPIO_Init+0x208>)
 80037c0:	f00d fcbe 	bl	8011140 <HAL_GPIO_Init>
 80037c4:	2310      	movs	r3, #16
 80037c6:	627b      	str	r3, [r7, #36]	; 0x24
 80037c8:	2301      	movs	r3, #1
 80037ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80037cc:	2300      	movs	r3, #0
 80037ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037d0:	2300      	movs	r3, #0
 80037d2:	633b      	str	r3, [r7, #48]	; 0x30
 80037d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037d8:	4619      	mov	r1, r3
 80037da:	4820      	ldr	r0, [pc, #128]	; (800385c <MX_GPIO_Init+0x20c>)
 80037dc:	f00d fcb0 	bl	8011140 <HAL_GPIO_Init>
 80037e0:	2330      	movs	r3, #48	; 0x30
 80037e2:	627b      	str	r3, [r7, #36]	; 0x24
 80037e4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80037e8:	62bb      	str	r3, [r7, #40]	; 0x28
 80037ea:	2301      	movs	r3, #1
 80037ec:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037f2:	4619      	mov	r1, r3
 80037f4:	4817      	ldr	r0, [pc, #92]	; (8003854 <MX_GPIO_Init+0x204>)
 80037f6:	f00d fca3 	bl	8011140 <HAL_GPIO_Init>
 80037fa:	2301      	movs	r3, #1
 80037fc:	627b      	str	r3, [r7, #36]	; 0x24
 80037fe:	2301      	movs	r3, #1
 8003800:	62bb      	str	r3, [r7, #40]	; 0x28
 8003802:	2300      	movs	r3, #0
 8003804:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003806:	2300      	movs	r3, #0
 8003808:	633b      	str	r3, [r7, #48]	; 0x30
 800380a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800380e:	4619      	mov	r1, r3
 8003810:	4813      	ldr	r0, [pc, #76]	; (8003860 <MX_GPIO_Init+0x210>)
 8003812:	f00d fc95 	bl	8011140 <HAL_GPIO_Init>
 8003816:	2200      	movs	r2, #0
 8003818:	2105      	movs	r1, #5
 800381a:	2009      	movs	r0, #9
 800381c:	f00d f858 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003820:	2009      	movs	r0, #9
 8003822:	f00d f871 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003826:	2200      	movs	r2, #0
 8003828:	2105      	movs	r1, #5
 800382a:	200a      	movs	r0, #10
 800382c:	f00d f850 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003830:	200a      	movs	r0, #10
 8003832:	f00d f869 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003836:	2200      	movs	r2, #0
 8003838:	2105      	movs	r1, #5
 800383a:	2017      	movs	r0, #23
 800383c:	f00d f848 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003840:	2017      	movs	r0, #23
 8003842:	f00d f861 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003846:	bf00      	nop
 8003848:	3738      	adds	r7, #56	; 0x38
 800384a:	46bd      	mov	sp, r7
 800384c:	bd80      	pop	{r7, pc}
 800384e:	bf00      	nop
 8003850:	40023800 	.word	0x40023800
 8003854:	40020800 	.word	0x40020800
 8003858:	40021800 	.word	0x40021800
 800385c:	40020000 	.word	0x40020000
 8003860:	40020400 	.word	0x40020400

08003864 <MX_I2C3_Init>:
 8003864:	b580      	push	{r7, lr}
 8003866:	af00      	add	r7, sp, #0
 8003868:	4b12      	ldr	r3, [pc, #72]	; (80038b4 <MX_I2C3_Init+0x50>)
 800386a:	4a13      	ldr	r2, [pc, #76]	; (80038b8 <MX_I2C3_Init+0x54>)
 800386c:	601a      	str	r2, [r3, #0]
 800386e:	4b11      	ldr	r3, [pc, #68]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003870:	4a12      	ldr	r2, [pc, #72]	; (80038bc <MX_I2C3_Init+0x58>)
 8003872:	605a      	str	r2, [r3, #4]
 8003874:	4b0f      	ldr	r3, [pc, #60]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003876:	2200      	movs	r2, #0
 8003878:	609a      	str	r2, [r3, #8]
 800387a:	4b0e      	ldr	r3, [pc, #56]	; (80038b4 <MX_I2C3_Init+0x50>)
 800387c:	2200      	movs	r2, #0
 800387e:	60da      	str	r2, [r3, #12]
 8003880:	4b0c      	ldr	r3, [pc, #48]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003882:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003886:	611a      	str	r2, [r3, #16]
 8003888:	4b0a      	ldr	r3, [pc, #40]	; (80038b4 <MX_I2C3_Init+0x50>)
 800388a:	2200      	movs	r2, #0
 800388c:	615a      	str	r2, [r3, #20]
 800388e:	4b09      	ldr	r3, [pc, #36]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003890:	2200      	movs	r2, #0
 8003892:	619a      	str	r2, [r3, #24]
 8003894:	4b07      	ldr	r3, [pc, #28]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003896:	2200      	movs	r2, #0
 8003898:	61da      	str	r2, [r3, #28]
 800389a:	4b06      	ldr	r3, [pc, #24]	; (80038b4 <MX_I2C3_Init+0x50>)
 800389c:	2200      	movs	r2, #0
 800389e:	621a      	str	r2, [r3, #32]
 80038a0:	4804      	ldr	r0, [pc, #16]	; (80038b4 <MX_I2C3_Init+0x50>)
 80038a2:	f00d fe1b 	bl	80114dc <HAL_I2C_Init>
 80038a6:	4603      	mov	r3, r0
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d001      	beq.n	80038b0 <MX_I2C3_Init+0x4c>
 80038ac:	f000 f989 	bl	8003bc2 <Error_Handler>
 80038b0:	bf00      	nop
 80038b2:	bd80      	pop	{r7, pc}
 80038b4:	20001270 	.word	0x20001270
 80038b8:	40005c00 	.word	0x40005c00
 80038bc:	00061a80 	.word	0x00061a80

080038c0 <HAL_I2C_MspInit>:
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b08a      	sub	sp, #40	; 0x28
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	f107 0314 	add.w	r3, r7, #20
 80038cc:	2200      	movs	r2, #0
 80038ce:	601a      	str	r2, [r3, #0]
 80038d0:	605a      	str	r2, [r3, #4]
 80038d2:	609a      	str	r2, [r3, #8]
 80038d4:	60da      	str	r2, [r3, #12]
 80038d6:	611a      	str	r2, [r3, #16]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	4a5b      	ldr	r2, [pc, #364]	; (8003a4c <HAL_I2C_MspInit+0x18c>)
 80038de:	4293      	cmp	r3, r2
 80038e0:	f040 80b0 	bne.w	8003a44 <HAL_I2C_MspInit+0x184>
 80038e4:	2300      	movs	r3, #0
 80038e6:	613b      	str	r3, [r7, #16]
 80038e8:	4b59      	ldr	r3, [pc, #356]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ec:	4a58      	ldr	r2, [pc, #352]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038ee:	f043 0304 	orr.w	r3, r3, #4
 80038f2:	6313      	str	r3, [r2, #48]	; 0x30
 80038f4:	4b56      	ldr	r3, [pc, #344]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038f8:	f003 0304 	and.w	r3, r3, #4
 80038fc:	613b      	str	r3, [r7, #16]
 80038fe:	693b      	ldr	r3, [r7, #16]
 8003900:	2300      	movs	r3, #0
 8003902:	60fb      	str	r3, [r7, #12]
 8003904:	4b52      	ldr	r3, [pc, #328]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003906:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003908:	4a51      	ldr	r2, [pc, #324]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 800390a:	f043 0301 	orr.w	r3, r3, #1
 800390e:	6313      	str	r3, [r2, #48]	; 0x30
 8003910:	4b4f      	ldr	r3, [pc, #316]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003914:	f003 0301 	and.w	r3, r3, #1
 8003918:	60fb      	str	r3, [r7, #12]
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003920:	617b      	str	r3, [r7, #20]
 8003922:	2312      	movs	r3, #18
 8003924:	61bb      	str	r3, [r7, #24]
 8003926:	2301      	movs	r3, #1
 8003928:	61fb      	str	r3, [r7, #28]
 800392a:	2303      	movs	r3, #3
 800392c:	623b      	str	r3, [r7, #32]
 800392e:	2304      	movs	r3, #4
 8003930:	627b      	str	r3, [r7, #36]	; 0x24
 8003932:	f107 0314 	add.w	r3, r7, #20
 8003936:	4619      	mov	r1, r3
 8003938:	4846      	ldr	r0, [pc, #280]	; (8003a54 <HAL_I2C_MspInit+0x194>)
 800393a:	f00d fc01 	bl	8011140 <HAL_GPIO_Init>
 800393e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003942:	617b      	str	r3, [r7, #20]
 8003944:	2312      	movs	r3, #18
 8003946:	61bb      	str	r3, [r7, #24]
 8003948:	2301      	movs	r3, #1
 800394a:	61fb      	str	r3, [r7, #28]
 800394c:	2303      	movs	r3, #3
 800394e:	623b      	str	r3, [r7, #32]
 8003950:	2304      	movs	r3, #4
 8003952:	627b      	str	r3, [r7, #36]	; 0x24
 8003954:	f107 0314 	add.w	r3, r7, #20
 8003958:	4619      	mov	r1, r3
 800395a:	483f      	ldr	r0, [pc, #252]	; (8003a58 <HAL_I2C_MspInit+0x198>)
 800395c:	f00d fbf0 	bl	8011140 <HAL_GPIO_Init>
 8003960:	2300      	movs	r3, #0
 8003962:	60bb      	str	r3, [r7, #8]
 8003964:	4b3a      	ldr	r3, [pc, #232]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003966:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003968:	4a39      	ldr	r2, [pc, #228]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 800396a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800396e:	6413      	str	r3, [r2, #64]	; 0x40
 8003970:	4b37      	ldr	r3, [pc, #220]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003974:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003978:	60bb      	str	r3, [r7, #8]
 800397a:	68bb      	ldr	r3, [r7, #8]
 800397c:	4b37      	ldr	r3, [pc, #220]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 800397e:	4a38      	ldr	r2, [pc, #224]	; (8003a60 <HAL_I2C_MspInit+0x1a0>)
 8003980:	601a      	str	r2, [r3, #0]
 8003982:	4b36      	ldr	r3, [pc, #216]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003984:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003988:	605a      	str	r2, [r3, #4]
 800398a:	4b34      	ldr	r3, [pc, #208]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 800398c:	2200      	movs	r2, #0
 800398e:	609a      	str	r2, [r3, #8]
 8003990:	4b32      	ldr	r3, [pc, #200]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003992:	2200      	movs	r2, #0
 8003994:	60da      	str	r2, [r3, #12]
 8003996:	4b31      	ldr	r3, [pc, #196]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003998:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800399c:	611a      	str	r2, [r3, #16]
 800399e:	4b2f      	ldr	r3, [pc, #188]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039a0:	2200      	movs	r2, #0
 80039a2:	615a      	str	r2, [r3, #20]
 80039a4:	4b2d      	ldr	r3, [pc, #180]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039a6:	2200      	movs	r2, #0
 80039a8:	619a      	str	r2, [r3, #24]
 80039aa:	4b2c      	ldr	r3, [pc, #176]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039ac:	2200      	movs	r2, #0
 80039ae:	61da      	str	r2, [r3, #28]
 80039b0:	4b2a      	ldr	r3, [pc, #168]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039b2:	2200      	movs	r2, #0
 80039b4:	621a      	str	r2, [r3, #32]
 80039b6:	4b29      	ldr	r3, [pc, #164]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	625a      	str	r2, [r3, #36]	; 0x24
 80039bc:	4827      	ldr	r0, [pc, #156]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039be:	f00c ffb1 	bl	8010924 <HAL_DMA_Init>
 80039c2:	4603      	mov	r3, r0
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d001      	beq.n	80039cc <HAL_I2C_MspInit+0x10c>
 80039c8:	f000 f8fb 	bl	8003bc2 <Error_Handler>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	4a23      	ldr	r2, [pc, #140]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039d0:	639a      	str	r2, [r3, #56]	; 0x38
 80039d2:	4a22      	ldr	r2, [pc, #136]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	6393      	str	r3, [r2, #56]	; 0x38
 80039d8:	4b22      	ldr	r3, [pc, #136]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039da:	4a23      	ldr	r2, [pc, #140]	; (8003a68 <HAL_I2C_MspInit+0x1a8>)
 80039dc:	601a      	str	r2, [r3, #0]
 80039de:	4b21      	ldr	r3, [pc, #132]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039e0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80039e4:	605a      	str	r2, [r3, #4]
 80039e6:	4b1f      	ldr	r3, [pc, #124]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039e8:	2240      	movs	r2, #64	; 0x40
 80039ea:	609a      	str	r2, [r3, #8]
 80039ec:	4b1d      	ldr	r3, [pc, #116]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039ee:	2200      	movs	r2, #0
 80039f0:	60da      	str	r2, [r3, #12]
 80039f2:	4b1c      	ldr	r3, [pc, #112]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80039f8:	611a      	str	r2, [r3, #16]
 80039fa:	4b1a      	ldr	r3, [pc, #104]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039fc:	2200      	movs	r2, #0
 80039fe:	615a      	str	r2, [r3, #20]
 8003a00:	4b18      	ldr	r3, [pc, #96]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a02:	2200      	movs	r2, #0
 8003a04:	619a      	str	r2, [r3, #24]
 8003a06:	4b17      	ldr	r3, [pc, #92]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a08:	2200      	movs	r2, #0
 8003a0a:	61da      	str	r2, [r3, #28]
 8003a0c:	4b15      	ldr	r3, [pc, #84]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a0e:	2200      	movs	r2, #0
 8003a10:	621a      	str	r2, [r3, #32]
 8003a12:	4b14      	ldr	r3, [pc, #80]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	625a      	str	r2, [r3, #36]	; 0x24
 8003a18:	4812      	ldr	r0, [pc, #72]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a1a:	f00c ff83 	bl	8010924 <HAL_DMA_Init>
 8003a1e:	4603      	mov	r3, r0
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d001      	beq.n	8003a28 <HAL_I2C_MspInit+0x168>
 8003a24:	f000 f8cd 	bl	8003bc2 <Error_Handler>
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	4a0e      	ldr	r2, [pc, #56]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a2c:	635a      	str	r2, [r3, #52]	; 0x34
 8003a2e:	4a0d      	ldr	r2, [pc, #52]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6393      	str	r3, [r2, #56]	; 0x38
 8003a34:	2200      	movs	r2, #0
 8003a36:	2105      	movs	r1, #5
 8003a38:	2049      	movs	r0, #73	; 0x49
 8003a3a:	f00c ff49 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003a3e:	2049      	movs	r0, #73	; 0x49
 8003a40:	f00c ff62 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003a44:	bf00      	nop
 8003a46:	3728      	adds	r7, #40	; 0x28
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	bd80      	pop	{r7, pc}
 8003a4c:	40005c00 	.word	0x40005c00
 8003a50:	40023800 	.word	0x40023800
 8003a54:	40020800 	.word	0x40020800
 8003a58:	40020000 	.word	0x40020000
 8003a5c:	200012c4 	.word	0x200012c4
 8003a60:	40026040 	.word	0x40026040
 8003a64:	20001324 	.word	0x20001324
 8003a68:	40026070 	.word	0x40026070

08003a6c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003a6c:	b580      	push	{r7, lr}
 8003a6e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003a70:	f00b fd2e 	bl	800f4d0 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003a74:	f000 f82c 	bl	8003ad0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003a78:	f7ff fdea 	bl	8003650 <MX_GPIO_Init>
  MX_DMA_Init();
 8003a7c:	f7ff fba4 	bl	80031c8 <MX_DMA_Init>
  MX_CAN1_Init();
 8003a80:	f7ff fa76 	bl	8002f70 <MX_CAN1_Init>
  MX_CAN2_Init();
 8003a84:	f7ff faaa 	bl	8002fdc <MX_CAN2_Init>
  MX_TIM5_Init();
 8003a88:	f000 fcde 	bl	8004448 <MX_TIM5_Init>
  MX_TIM10_Init();
 8003a8c:	f000 fd4c 	bl	8004528 <MX_TIM10_Init>
  MX_USART1_UART_Init();
 8003a90:	f000 fed8 	bl	8004844 <MX_USART1_UART_Init>
  MX_USART3_UART_Init();
 8003a94:	f000 ff00 	bl	8004898 <MX_USART3_UART_Init>
  MX_USART6_UART_Init();
 8003a98:	f000 ff2a 	bl	80048f0 <MX_USART6_UART_Init>
  MX_SPI1_Init();
 8003a9c:	f000 f8cc 	bl	8003c38 <MX_SPI1_Init>
  MX_I2C3_Init();
 8003aa0:	f7ff fee0 	bl	8003864 <MX_I2C3_Init>
  MX_ADC3_Init();
 8003aa4:	f7ff f9ce 	bl	8002e44 <MX_ADC3_Init>
  MX_TIM3_Init();
 8003aa8:	f000 fc02 	bl	80042b0 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003aac:	f000 fc72 	bl	8004394 <MX_TIM4_Init>
  MX_TIM1_Init();
 8003ab0:	f000 fb6e 	bl	8004190 <MX_TIM1_Init>
  MX_RNG_Init();
 8003ab4:	f000 f88a 	bl	8003bcc <MX_RNG_Init>
  /* USER CODE BEGIN 2 */
  startup_task();
 8003ab8:	f00a f919 	bl	800dcee <startup_task>
  HAL_TIM_Base_Start(&htim3); //start micros clock
 8003abc:	4803      	ldr	r0, [pc, #12]	; (8003acc <main+0x60>)
 8003abe:	f011 fe8d 	bl	80157dc <HAL_TIM_Base_Start>
//  HAL_RNG_GenerateRandomNumber(hrng, random32bit)
  /* USER CODE END 2 */

  /* Call init function for freertos objects (in freertos.c) */
  MX_FREERTOS_Init();
 8003ac2:	f7ff fc35 	bl	8003330 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 8003ac6:	f017 fcef 	bl	801b4a8 <osKernelStart>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8003aca:	e7fe      	b.n	8003aca <main+0x5e>
 8003acc:	2000153c 	.word	0x2000153c

08003ad0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003ad0:	b580      	push	{r7, lr}
 8003ad2:	b094      	sub	sp, #80	; 0x50
 8003ad4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003ad6:	f107 0320 	add.w	r3, r7, #32
 8003ada:	2230      	movs	r2, #48	; 0x30
 8003adc:	2100      	movs	r1, #0
 8003ade:	4618      	mov	r0, r3
 8003ae0:	f01b fd47 	bl	801f572 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003ae4:	f107 030c 	add.w	r3, r7, #12
 8003ae8:	2200      	movs	r2, #0
 8003aea:	601a      	str	r2, [r3, #0]
 8003aec:	605a      	str	r2, [r3, #4]
 8003aee:	609a      	str	r2, [r3, #8]
 8003af0:	60da      	str	r2, [r3, #12]
 8003af2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003af4:	2300      	movs	r3, #0
 8003af6:	60bb      	str	r3, [r7, #8]
 8003af8:	4b28      	ldr	r3, [pc, #160]	; (8003b9c <SystemClock_Config+0xcc>)
 8003afa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003afc:	4a27      	ldr	r2, [pc, #156]	; (8003b9c <SystemClock_Config+0xcc>)
 8003afe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003b02:	6413      	str	r3, [r2, #64]	; 0x40
 8003b04:	4b25      	ldr	r3, [pc, #148]	; (8003b9c <SystemClock_Config+0xcc>)
 8003b06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b08:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b0c:	60bb      	str	r3, [r7, #8]
 8003b0e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003b10:	2300      	movs	r3, #0
 8003b12:	607b      	str	r3, [r7, #4]
 8003b14:	4b22      	ldr	r3, [pc, #136]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4a21      	ldr	r2, [pc, #132]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b1a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003b1e:	6013      	str	r3, [r2, #0]
 8003b20:	4b1f      	ldr	r3, [pc, #124]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003b28:	607b      	str	r3, [r7, #4]
 8003b2a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003b2c:	2301      	movs	r3, #1
 8003b2e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003b30:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003b34:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003b36:	2302      	movs	r3, #2
 8003b38:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003b3a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003b3e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 6;
 8003b40:	2306      	movs	r3, #6
 8003b42:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8003b44:	23a8      	movs	r3, #168	; 0xa8
 8003b46:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8003b48:	2302      	movs	r3, #2
 8003b4a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8003b4c:	2307      	movs	r3, #7
 8003b4e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003b50:	f107 0320 	add.w	r3, r7, #32
 8003b54:	4618      	mov	r0, r3
 8003b56:	f010 fcd1 	bl	80144fc <HAL_RCC_OscConfig>
 8003b5a:	4603      	mov	r3, r0
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d001      	beq.n	8003b64 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8003b60:	f000 f82f 	bl	8003bc2 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003b64:	230f      	movs	r3, #15
 8003b66:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003b68:	2302      	movs	r3, #2
 8003b6a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8003b70:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8003b74:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8003b76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003b7a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8003b7c:	f107 030c 	add.w	r3, r7, #12
 8003b80:	2105      	movs	r1, #5
 8003b82:	4618      	mov	r0, r3
 8003b84:	f010 ff32 	bl	80149ec <HAL_RCC_ClockConfig>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d001      	beq.n	8003b92 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8003b8e:	f000 f818 	bl	8003bc2 <Error_Handler>
  }
}
 8003b92:	bf00      	nop
 8003b94:	3750      	adds	r7, #80	; 0x50
 8003b96:	46bd      	mov	sp, r7
 8003b98:	bd80      	pop	{r7, pc}
 8003b9a:	bf00      	nop
 8003b9c:	40023800 	.word	0x40023800
 8003ba0:	40007000 	.word	0x40007000

08003ba4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003ba4:	b580      	push	{r7, lr}
 8003ba6:	b082      	sub	sp, #8
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM2) {
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003bb4:	d101      	bne.n	8003bba <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003bb6:	f00b fcad 	bl	800f514 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003bba:	bf00      	nop
 8003bbc:	3708      	adds	r7, #8
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bd80      	pop	{r7, pc}

08003bc2 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003bc2:	b480      	push	{r7}
 8003bc4:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8003bc6:	b672      	cpsid	i
}
 8003bc8:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003bca:	e7fe      	b.n	8003bca <Error_Handler+0x8>

08003bcc <MX_RNG_Init>:
 8003bcc:	b580      	push	{r7, lr}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	4b06      	ldr	r3, [pc, #24]	; (8003bec <MX_RNG_Init+0x20>)
 8003bd2:	4a07      	ldr	r2, [pc, #28]	; (8003bf0 <MX_RNG_Init+0x24>)
 8003bd4:	601a      	str	r2, [r3, #0]
 8003bd6:	4805      	ldr	r0, [pc, #20]	; (8003bec <MX_RNG_Init+0x20>)
 8003bd8:	f011 f91a 	bl	8014e10 <HAL_RNG_Init>
 8003bdc:	4603      	mov	r3, r0
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d001      	beq.n	8003be6 <MX_RNG_Init+0x1a>
 8003be2:	f7ff ffee 	bl	8003bc2 <Error_Handler>
 8003be6:	bf00      	nop
 8003be8:	bd80      	pop	{r7, pc}
 8003bea:	bf00      	nop
 8003bec:	20001384 	.word	0x20001384
 8003bf0:	50060800 	.word	0x50060800

08003bf4 <HAL_RNG_MspInit>:
 8003bf4:	b480      	push	{r7}
 8003bf6:	b085      	sub	sp, #20
 8003bf8:	af00      	add	r7, sp, #0
 8003bfa:	6078      	str	r0, [r7, #4]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	4a0b      	ldr	r2, [pc, #44]	; (8003c30 <HAL_RNG_MspInit+0x3c>)
 8003c02:	4293      	cmp	r3, r2
 8003c04:	d10d      	bne.n	8003c22 <HAL_RNG_MspInit+0x2e>
 8003c06:	2300      	movs	r3, #0
 8003c08:	60fb      	str	r3, [r7, #12]
 8003c0a:	4b0a      	ldr	r3, [pc, #40]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c0e:	4a09      	ldr	r2, [pc, #36]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c10:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003c14:	6353      	str	r3, [r2, #52]	; 0x34
 8003c16:	4b07      	ldr	r3, [pc, #28]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003c1e:	60fb      	str	r3, [r7, #12]
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	bf00      	nop
 8003c24:	3714      	adds	r7, #20
 8003c26:	46bd      	mov	sp, r7
 8003c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2c:	4770      	bx	lr
 8003c2e:	bf00      	nop
 8003c30:	50060800 	.word	0x50060800
 8003c34:	40023800 	.word	0x40023800

08003c38 <MX_SPI1_Init>:
 8003c38:	b580      	push	{r7, lr}
 8003c3a:	af00      	add	r7, sp, #0
 8003c3c:	4b17      	ldr	r3, [pc, #92]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c3e:	4a18      	ldr	r2, [pc, #96]	; (8003ca0 <MX_SPI1_Init+0x68>)
 8003c40:	601a      	str	r2, [r3, #0]
 8003c42:	4b16      	ldr	r3, [pc, #88]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c44:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003c48:	605a      	str	r2, [r3, #4]
 8003c4a:	4b14      	ldr	r3, [pc, #80]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	609a      	str	r2, [r3, #8]
 8003c50:	4b12      	ldr	r3, [pc, #72]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c52:	2200      	movs	r2, #0
 8003c54:	60da      	str	r2, [r3, #12]
 8003c56:	4b11      	ldr	r3, [pc, #68]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c58:	2200      	movs	r2, #0
 8003c5a:	611a      	str	r2, [r3, #16]
 8003c5c:	4b0f      	ldr	r3, [pc, #60]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c5e:	2200      	movs	r2, #0
 8003c60:	615a      	str	r2, [r3, #20]
 8003c62:	4b0e      	ldr	r3, [pc, #56]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c64:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003c68:	619a      	str	r2, [r3, #24]
 8003c6a:	4b0c      	ldr	r3, [pc, #48]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c6c:	2228      	movs	r2, #40	; 0x28
 8003c6e:	61da      	str	r2, [r3, #28]
 8003c70:	4b0a      	ldr	r3, [pc, #40]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c72:	2200      	movs	r2, #0
 8003c74:	621a      	str	r2, [r3, #32]
 8003c76:	4b09      	ldr	r3, [pc, #36]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c78:	2200      	movs	r2, #0
 8003c7a:	625a      	str	r2, [r3, #36]	; 0x24
 8003c7c:	4b07      	ldr	r3, [pc, #28]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c7e:	2200      	movs	r2, #0
 8003c80:	629a      	str	r2, [r3, #40]	; 0x28
 8003c82:	4b06      	ldr	r3, [pc, #24]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c84:	220a      	movs	r2, #10
 8003c86:	62da      	str	r2, [r3, #44]	; 0x2c
 8003c88:	4804      	ldr	r0, [pc, #16]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c8a:	f011 f8eb 	bl	8014e64 <HAL_SPI_Init>
 8003c8e:	4603      	mov	r3, r0
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d001      	beq.n	8003c98 <MX_SPI1_Init+0x60>
 8003c94:	f7ff ff95 	bl	8003bc2 <Error_Handler>
 8003c98:	bf00      	nop
 8003c9a:	bd80      	pop	{r7, pc}
 8003c9c:	20001394 	.word	0x20001394
 8003ca0:	40013000 	.word	0x40013000

08003ca4 <HAL_SPI_MspInit>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	b08a      	sub	sp, #40	; 0x28
 8003ca8:	af00      	add	r7, sp, #0
 8003caa:	6078      	str	r0, [r7, #4]
 8003cac:	f107 0314 	add.w	r3, r7, #20
 8003cb0:	2200      	movs	r2, #0
 8003cb2:	601a      	str	r2, [r3, #0]
 8003cb4:	605a      	str	r2, [r3, #4]
 8003cb6:	609a      	str	r2, [r3, #8]
 8003cb8:	60da      	str	r2, [r3, #12]
 8003cba:	611a      	str	r2, [r3, #16]
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	4a56      	ldr	r2, [pc, #344]	; (8003e1c <HAL_SPI_MspInit+0x178>)
 8003cc2:	4293      	cmp	r3, r2
 8003cc4:	f040 80a6 	bne.w	8003e14 <HAL_SPI_MspInit+0x170>
 8003cc8:	2300      	movs	r3, #0
 8003cca:	613b      	str	r3, [r7, #16]
 8003ccc:	4b54      	ldr	r3, [pc, #336]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cd0:	4a53      	ldr	r2, [pc, #332]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cd2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003cd6:	6453      	str	r3, [r2, #68]	; 0x44
 8003cd8:	4b51      	ldr	r3, [pc, #324]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cdc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003ce0:	613b      	str	r3, [r7, #16]
 8003ce2:	693b      	ldr	r3, [r7, #16]
 8003ce4:	2300      	movs	r3, #0
 8003ce6:	60fb      	str	r3, [r7, #12]
 8003ce8:	4b4d      	ldr	r3, [pc, #308]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cec:	4a4c      	ldr	r2, [pc, #304]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cee:	f043 0302 	orr.w	r3, r3, #2
 8003cf2:	6313      	str	r3, [r2, #48]	; 0x30
 8003cf4:	4b4a      	ldr	r3, [pc, #296]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cf8:	f003 0302 	and.w	r3, r3, #2
 8003cfc:	60fb      	str	r3, [r7, #12]
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	2300      	movs	r3, #0
 8003d02:	60bb      	str	r3, [r7, #8]
 8003d04:	4b46      	ldr	r3, [pc, #280]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d08:	4a45      	ldr	r2, [pc, #276]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d0a:	f043 0301 	orr.w	r3, r3, #1
 8003d0e:	6313      	str	r3, [r2, #48]	; 0x30
 8003d10:	4b43      	ldr	r3, [pc, #268]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d14:	f003 0301 	and.w	r3, r3, #1
 8003d18:	60bb      	str	r3, [r7, #8]
 8003d1a:	68bb      	ldr	r3, [r7, #8]
 8003d1c:	2318      	movs	r3, #24
 8003d1e:	617b      	str	r3, [r7, #20]
 8003d20:	2302      	movs	r3, #2
 8003d22:	61bb      	str	r3, [r7, #24]
 8003d24:	2300      	movs	r3, #0
 8003d26:	61fb      	str	r3, [r7, #28]
 8003d28:	2303      	movs	r3, #3
 8003d2a:	623b      	str	r3, [r7, #32]
 8003d2c:	2305      	movs	r3, #5
 8003d2e:	627b      	str	r3, [r7, #36]	; 0x24
 8003d30:	f107 0314 	add.w	r3, r7, #20
 8003d34:	4619      	mov	r1, r3
 8003d36:	483b      	ldr	r0, [pc, #236]	; (8003e24 <HAL_SPI_MspInit+0x180>)
 8003d38:	f00d fa02 	bl	8011140 <HAL_GPIO_Init>
 8003d3c:	2380      	movs	r3, #128	; 0x80
 8003d3e:	617b      	str	r3, [r7, #20]
 8003d40:	2302      	movs	r3, #2
 8003d42:	61bb      	str	r3, [r7, #24]
 8003d44:	2300      	movs	r3, #0
 8003d46:	61fb      	str	r3, [r7, #28]
 8003d48:	2303      	movs	r3, #3
 8003d4a:	623b      	str	r3, [r7, #32]
 8003d4c:	2305      	movs	r3, #5
 8003d4e:	627b      	str	r3, [r7, #36]	; 0x24
 8003d50:	f107 0314 	add.w	r3, r7, #20
 8003d54:	4619      	mov	r1, r3
 8003d56:	4834      	ldr	r0, [pc, #208]	; (8003e28 <HAL_SPI_MspInit+0x184>)
 8003d58:	f00d f9f2 	bl	8011140 <HAL_GPIO_Init>
 8003d5c:	4b33      	ldr	r3, [pc, #204]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d5e:	4a34      	ldr	r2, [pc, #208]	; (8003e30 <HAL_SPI_MspInit+0x18c>)
 8003d60:	601a      	str	r2, [r3, #0]
 8003d62:	4b32      	ldr	r3, [pc, #200]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d64:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003d68:	605a      	str	r2, [r3, #4]
 8003d6a:	4b30      	ldr	r3, [pc, #192]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d6c:	2200      	movs	r2, #0
 8003d6e:	609a      	str	r2, [r3, #8]
 8003d70:	4b2e      	ldr	r3, [pc, #184]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d72:	2200      	movs	r2, #0
 8003d74:	60da      	str	r2, [r3, #12]
 8003d76:	4b2d      	ldr	r3, [pc, #180]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d78:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003d7c:	611a      	str	r2, [r3, #16]
 8003d7e:	4b2b      	ldr	r3, [pc, #172]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d80:	2200      	movs	r2, #0
 8003d82:	615a      	str	r2, [r3, #20]
 8003d84:	4b29      	ldr	r3, [pc, #164]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d86:	2200      	movs	r2, #0
 8003d88:	619a      	str	r2, [r3, #24]
 8003d8a:	4b28      	ldr	r3, [pc, #160]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	61da      	str	r2, [r3, #28]
 8003d90:	4b26      	ldr	r3, [pc, #152]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d92:	2200      	movs	r2, #0
 8003d94:	621a      	str	r2, [r3, #32]
 8003d96:	4b25      	ldr	r3, [pc, #148]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d98:	2200      	movs	r2, #0
 8003d9a:	625a      	str	r2, [r3, #36]	; 0x24
 8003d9c:	4823      	ldr	r0, [pc, #140]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d9e:	f00c fdc1 	bl	8010924 <HAL_DMA_Init>
 8003da2:	4603      	mov	r3, r0
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d001      	beq.n	8003dac <HAL_SPI_MspInit+0x108>
 8003da8:	f7ff ff0b 	bl	8003bc2 <Error_Handler>
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	4a1f      	ldr	r2, [pc, #124]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003db0:	64da      	str	r2, [r3, #76]	; 0x4c
 8003db2:	4a1e      	ldr	r2, [pc, #120]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	6393      	str	r3, [r2, #56]	; 0x38
 8003db8:	4b1e      	ldr	r3, [pc, #120]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dba:	4a1f      	ldr	r2, [pc, #124]	; (8003e38 <HAL_SPI_MspInit+0x194>)
 8003dbc:	601a      	str	r2, [r3, #0]
 8003dbe:	4b1d      	ldr	r3, [pc, #116]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dc0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003dc4:	605a      	str	r2, [r3, #4]
 8003dc6:	4b1b      	ldr	r3, [pc, #108]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dc8:	2240      	movs	r2, #64	; 0x40
 8003dca:	609a      	str	r2, [r3, #8]
 8003dcc:	4b19      	ldr	r3, [pc, #100]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dce:	2200      	movs	r2, #0
 8003dd0:	60da      	str	r2, [r3, #12]
 8003dd2:	4b18      	ldr	r3, [pc, #96]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003dd8:	611a      	str	r2, [r3, #16]
 8003dda:	4b16      	ldr	r3, [pc, #88]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003ddc:	2200      	movs	r2, #0
 8003dde:	615a      	str	r2, [r3, #20]
 8003de0:	4b14      	ldr	r3, [pc, #80]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003de2:	2200      	movs	r2, #0
 8003de4:	619a      	str	r2, [r3, #24]
 8003de6:	4b13      	ldr	r3, [pc, #76]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003de8:	2200      	movs	r2, #0
 8003dea:	61da      	str	r2, [r3, #28]
 8003dec:	4b11      	ldr	r3, [pc, #68]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dee:	2200      	movs	r2, #0
 8003df0:	621a      	str	r2, [r3, #32]
 8003df2:	4b10      	ldr	r3, [pc, #64]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003df4:	2200      	movs	r2, #0
 8003df6:	625a      	str	r2, [r3, #36]	; 0x24
 8003df8:	480e      	ldr	r0, [pc, #56]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dfa:	f00c fd93 	bl	8010924 <HAL_DMA_Init>
 8003dfe:	4603      	mov	r3, r0
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	d001      	beq.n	8003e08 <HAL_SPI_MspInit+0x164>
 8003e04:	f7ff fedd 	bl	8003bc2 <Error_Handler>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	4a0a      	ldr	r2, [pc, #40]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003e0c:	649a      	str	r2, [r3, #72]	; 0x48
 8003e0e:	4a09      	ldr	r2, [pc, #36]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	6393      	str	r3, [r2, #56]	; 0x38
 8003e14:	bf00      	nop
 8003e16:	3728      	adds	r7, #40	; 0x28
 8003e18:	46bd      	mov	sp, r7
 8003e1a:	bd80      	pop	{r7, pc}
 8003e1c:	40013000 	.word	0x40013000
 8003e20:	40023800 	.word	0x40023800
 8003e24:	40020400 	.word	0x40020400
 8003e28:	40020000 	.word	0x40020000
 8003e2c:	200013ec 	.word	0x200013ec
 8003e30:	40026410 	.word	0x40026410
 8003e34:	2000144c 	.word	0x2000144c
 8003e38:	40026458 	.word	0x40026458

08003e3c <HAL_MspInit>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b082      	sub	sp, #8
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	2300      	movs	r3, #0
 8003e44:	607b      	str	r3, [r7, #4]
 8003e46:	4b12      	ldr	r3, [pc, #72]	; (8003e90 <HAL_MspInit+0x54>)
 8003e48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003e4a:	4a11      	ldr	r2, [pc, #68]	; (8003e90 <HAL_MspInit+0x54>)
 8003e4c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003e50:	6453      	str	r3, [r2, #68]	; 0x44
 8003e52:	4b0f      	ldr	r3, [pc, #60]	; (8003e90 <HAL_MspInit+0x54>)
 8003e54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003e56:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003e5a:	607b      	str	r3, [r7, #4]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	2300      	movs	r3, #0
 8003e60:	603b      	str	r3, [r7, #0]
 8003e62:	4b0b      	ldr	r3, [pc, #44]	; (8003e90 <HAL_MspInit+0x54>)
 8003e64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e66:	4a0a      	ldr	r2, [pc, #40]	; (8003e90 <HAL_MspInit+0x54>)
 8003e68:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003e6c:	6413      	str	r3, [r2, #64]	; 0x40
 8003e6e:	4b08      	ldr	r3, [pc, #32]	; (8003e90 <HAL_MspInit+0x54>)
 8003e70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e72:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e76:	603b      	str	r3, [r7, #0]
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	210f      	movs	r1, #15
 8003e7e:	f06f 0001 	mvn.w	r0, #1
 8003e82:	f00c fd25 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003e86:	bf00      	nop
 8003e88:	3708      	adds	r7, #8
 8003e8a:	46bd      	mov	sp, r7
 8003e8c:	bd80      	pop	{r7, pc}
 8003e8e:	bf00      	nop
 8003e90:	40023800 	.word	0x40023800

08003e94 <HAL_InitTick>:
 8003e94:	b580      	push	{r7, lr}
 8003e96:	b08e      	sub	sp, #56	; 0x38
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
 8003e9c:	2300      	movs	r3, #0
 8003e9e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ea0:	2300      	movs	r3, #0
 8003ea2:	62bb      	str	r3, [r7, #40]	; 0x28
 8003ea4:	2300      	movs	r3, #0
 8003ea6:	60fb      	str	r3, [r7, #12]
 8003ea8:	4b34      	ldr	r3, [pc, #208]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003eac:	4a33      	ldr	r2, [pc, #204]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eae:	f043 0301 	orr.w	r3, r3, #1
 8003eb2:	6413      	str	r3, [r2, #64]	; 0x40
 8003eb4:	4b31      	ldr	r3, [pc, #196]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003eb8:	f003 0301 	and.w	r3, r3, #1
 8003ebc:	60fb      	str	r3, [r7, #12]
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	f107 0210 	add.w	r2, r7, #16
 8003ec4:	f107 0314 	add.w	r3, r7, #20
 8003ec8:	4611      	mov	r1, r2
 8003eca:	4618      	mov	r0, r3
 8003ecc:	f010 ff6e 	bl	8014dac <HAL_RCC_GetClockConfig>
 8003ed0:	6a3b      	ldr	r3, [r7, #32]
 8003ed2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ed4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d103      	bne.n	8003ee2 <HAL_InitTick+0x4e>
 8003eda:	f010 ff3f 	bl	8014d5c <HAL_RCC_GetPCLK1Freq>
 8003ede:	6378      	str	r0, [r7, #52]	; 0x34
 8003ee0:	e004      	b.n	8003eec <HAL_InitTick+0x58>
 8003ee2:	f010 ff3b 	bl	8014d5c <HAL_RCC_GetPCLK1Freq>
 8003ee6:	4603      	mov	r3, r0
 8003ee8:	005b      	lsls	r3, r3, #1
 8003eea:	637b      	str	r3, [r7, #52]	; 0x34
 8003eec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003eee:	4a24      	ldr	r2, [pc, #144]	; (8003f80 <HAL_InitTick+0xec>)
 8003ef0:	fba2 2303 	umull	r2, r3, r2, r3
 8003ef4:	0c9b      	lsrs	r3, r3, #18
 8003ef6:	3b01      	subs	r3, #1
 8003ef8:	62bb      	str	r3, [r7, #40]	; 0x28
 8003efa:	4b22      	ldr	r3, [pc, #136]	; (8003f84 <HAL_InitTick+0xf0>)
 8003efc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003f00:	601a      	str	r2, [r3, #0]
 8003f02:	4b20      	ldr	r3, [pc, #128]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f04:	f240 32e7 	movw	r2, #999	; 0x3e7
 8003f08:	60da      	str	r2, [r3, #12]
 8003f0a:	4a1e      	ldr	r2, [pc, #120]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003f0e:	6053      	str	r3, [r2, #4]
 8003f10:	4b1c      	ldr	r3, [pc, #112]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f12:	2200      	movs	r2, #0
 8003f14:	611a      	str	r2, [r3, #16]
 8003f16:	4b1b      	ldr	r3, [pc, #108]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f18:	2200      	movs	r2, #0
 8003f1a:	609a      	str	r2, [r3, #8]
 8003f1c:	4b19      	ldr	r3, [pc, #100]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f1e:	2200      	movs	r2, #0
 8003f20:	619a      	str	r2, [r3, #24]
 8003f22:	4818      	ldr	r0, [pc, #96]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f24:	f011 fc0a 	bl	801573c <HAL_TIM_Base_Init>
 8003f28:	4603      	mov	r3, r0
 8003f2a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f2e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d11b      	bne.n	8003f6e <HAL_InitTick+0xda>
 8003f36:	4813      	ldr	r0, [pc, #76]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f38:	f011 fcb8 	bl	80158ac <HAL_TIM_Base_Start_IT>
 8003f3c:	4603      	mov	r3, r0
 8003f3e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f42:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d111      	bne.n	8003f6e <HAL_InitTick+0xda>
 8003f4a:	201c      	movs	r0, #28
 8003f4c:	f00c fcdc 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	2b0f      	cmp	r3, #15
 8003f54:	d808      	bhi.n	8003f68 <HAL_InitTick+0xd4>
 8003f56:	2200      	movs	r2, #0
 8003f58:	6879      	ldr	r1, [r7, #4]
 8003f5a:	201c      	movs	r0, #28
 8003f5c:	f00c fcb8 	bl	80108d0 <HAL_NVIC_SetPriority>
 8003f60:	4a09      	ldr	r2, [pc, #36]	; (8003f88 <HAL_InitTick+0xf4>)
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	6013      	str	r3, [r2, #0]
 8003f66:	e002      	b.n	8003f6e <HAL_InitTick+0xda>
 8003f68:	2301      	movs	r3, #1
 8003f6a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f6e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f72:	4618      	mov	r0, r3
 8003f74:	3738      	adds	r7, #56	; 0x38
 8003f76:	46bd      	mov	sp, r7
 8003f78:	bd80      	pop	{r7, pc}
 8003f7a:	bf00      	nop
 8003f7c:	40023800 	.word	0x40023800
 8003f80:	431bde83 	.word	0x431bde83
 8003f84:	200014ac 	.word	0x200014ac
 8003f88:	20000054 	.word	0x20000054

08003f8c <NMI_Handler>:
 8003f8c:	b480      	push	{r7}
 8003f8e:	af00      	add	r7, sp, #0
 8003f90:	e7fe      	b.n	8003f90 <NMI_Handler+0x4>

08003f92 <HardFault_Handler>:
 8003f92:	b480      	push	{r7}
 8003f94:	af00      	add	r7, sp, #0
 8003f96:	e7fe      	b.n	8003f96 <HardFault_Handler+0x4>

08003f98 <MemManage_Handler>:
 8003f98:	b480      	push	{r7}
 8003f9a:	af00      	add	r7, sp, #0
 8003f9c:	e7fe      	b.n	8003f9c <MemManage_Handler+0x4>

08003f9e <BusFault_Handler>:
 8003f9e:	b480      	push	{r7}
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	e7fe      	b.n	8003fa2 <BusFault_Handler+0x4>

08003fa4 <UsageFault_Handler>:
 8003fa4:	b480      	push	{r7}
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	e7fe      	b.n	8003fa8 <UsageFault_Handler+0x4>

08003faa <DebugMon_Handler>:
 8003faa:	b480      	push	{r7}
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	bf00      	nop
 8003fb0:	46bd      	mov	sp, r7
 8003fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb6:	4770      	bx	lr

08003fb8 <EXTI3_IRQHandler>:
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	af00      	add	r7, sp, #0
 8003fbc:	2008      	movs	r0, #8
 8003fbe:	f00d fa75 	bl	80114ac <HAL_GPIO_EXTI_IRQHandler>
 8003fc2:	bf00      	nop
 8003fc4:	bd80      	pop	{r7, pc}

08003fc6 <EXTI4_IRQHandler>:
 8003fc6:	b580      	push	{r7, lr}
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	2010      	movs	r0, #16
 8003fcc:	f00d fa6e 	bl	80114ac <HAL_GPIO_EXTI_IRQHandler>
 8003fd0:	bf00      	nop
 8003fd2:	bd80      	pop	{r7, pc}

08003fd4 <DMA1_Stream1_IRQHandler>:
 8003fd4:	b580      	push	{r7, lr}
 8003fd6:	af00      	add	r7, sp, #0
 8003fd8:	4802      	ldr	r0, [pc, #8]	; (8003fe4 <DMA1_Stream1_IRQHandler+0x10>)
 8003fda:	f00c fe3b 	bl	8010c54 <HAL_DMA_IRQHandler>
 8003fde:	bf00      	nop
 8003fe0:	bd80      	pop	{r7, pc}
 8003fe2:	bf00      	nop
 8003fe4:	20001788 	.word	0x20001788

08003fe8 <DMA1_Stream2_IRQHandler>:
 8003fe8:	b580      	push	{r7, lr}
 8003fea:	af00      	add	r7, sp, #0
 8003fec:	4802      	ldr	r0, [pc, #8]	; (8003ff8 <DMA1_Stream2_IRQHandler+0x10>)
 8003fee:	f00c fe31 	bl	8010c54 <HAL_DMA_IRQHandler>
 8003ff2:	bf00      	nop
 8003ff4:	bd80      	pop	{r7, pc}
 8003ff6:	bf00      	nop
 8003ff8:	200012c4 	.word	0x200012c4

08003ffc <DMA1_Stream4_IRQHandler>:
 8003ffc:	b580      	push	{r7, lr}
 8003ffe:	af00      	add	r7, sp, #0
 8004000:	4802      	ldr	r0, [pc, #8]	; (800400c <DMA1_Stream4_IRQHandler+0x10>)
 8004002:	f00c fe27 	bl	8010c54 <HAL_DMA_IRQHandler>
 8004006:	bf00      	nop
 8004008:	bd80      	pop	{r7, pc}
 800400a:	bf00      	nop
 800400c:	20001324 	.word	0x20001324

08004010 <CAN1_RX0_IRQHandler>:
 8004010:	b580      	push	{r7, lr}
 8004012:	af00      	add	r7, sp, #0
 8004014:	4802      	ldr	r0, [pc, #8]	; (8004020 <CAN1_RX0_IRQHandler+0x10>)
 8004016:	f00c f97d 	bl	8010314 <HAL_CAN_IRQHandler>
 800401a:	bf00      	nop
 800401c:	bd80      	pop	{r7, pc}
 800401e:	bf00      	nop
 8004020:	20000434 	.word	0x20000434

08004024 <CAN1_RX1_IRQHandler>:
 8004024:	b580      	push	{r7, lr}
 8004026:	af00      	add	r7, sp, #0
 8004028:	4802      	ldr	r0, [pc, #8]	; (8004034 <CAN1_RX1_IRQHandler+0x10>)
 800402a:	f00c f973 	bl	8010314 <HAL_CAN_IRQHandler>
 800402e:	bf00      	nop
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	20000434 	.word	0x20000434

08004038 <EXTI9_5_IRQHandler>:
 8004038:	b580      	push	{r7, lr}
 800403a:	af00      	add	r7, sp, #0
 800403c:	2020      	movs	r0, #32
 800403e:	f00d fa35 	bl	80114ac <HAL_GPIO_EXTI_IRQHandler>
 8004042:	bf00      	nop
 8004044:	bd80      	pop	{r7, pc}
	...

08004048 <TIM2_IRQHandler>:
 8004048:	b580      	push	{r7, lr}
 800404a:	af00      	add	r7, sp, #0
 800404c:	4802      	ldr	r0, [pc, #8]	; (8004058 <TIM2_IRQHandler+0x10>)
 800404e:	f011 fe0d 	bl	8015c6c <HAL_TIM_IRQHandler>
 8004052:	bf00      	nop
 8004054:	bd80      	pop	{r7, pc}
 8004056:	bf00      	nop
 8004058:	200014ac 	.word	0x200014ac

0800405c <TIM3_IRQHandler>:
 800405c:	b580      	push	{r7, lr}
 800405e:	af00      	add	r7, sp, #0
 8004060:	4803      	ldr	r0, [pc, #12]	; (8004070 <TIM3_IRQHandler+0x14>)
 8004062:	f011 fe03 	bl	8015c6c <HAL_TIM_IRQHandler>
 8004066:	f7fe f8d1 	bl	800220c <micros_tick>
 800406a:	bf00      	nop
 800406c:	bd80      	pop	{r7, pc}
 800406e:	bf00      	nop
 8004070:	2000153c 	.word	0x2000153c

08004074 <USART1_IRQHandler>:
 8004074:	b580      	push	{r7, lr}
 8004076:	af00      	add	r7, sp, #0
 8004078:	4802      	ldr	r0, [pc, #8]	; (8004084 <USART1_IRQHandler+0x10>)
 800407a:	f012 fe8f 	bl	8016d9c <HAL_UART_IRQHandler>
 800407e:	bf00      	nop
 8004080:	bd80      	pop	{r7, pc}
 8004082:	bf00      	nop
 8004084:	2000165c 	.word	0x2000165c

08004088 <USART3_IRQHandler>:
 8004088:	b580      	push	{r7, lr}
 800408a:	af00      	add	r7, sp, #0
 800408c:	4802      	ldr	r0, [pc, #8]	; (8004098 <USART3_IRQHandler+0x10>)
 800408e:	f012 fe85 	bl	8016d9c <HAL_UART_IRQHandler>
 8004092:	bf00      	nop
 8004094:	bd80      	pop	{r7, pc}
 8004096:	bf00      	nop
 8004098:	200016a0 	.word	0x200016a0

0800409c <DMA2_Stream0_IRQHandler>:
 800409c:	b580      	push	{r7, lr}
 800409e:	af00      	add	r7, sp, #0
 80040a0:	4802      	ldr	r0, [pc, #8]	; (80040ac <DMA2_Stream0_IRQHandler+0x10>)
 80040a2:	f00c fdd7 	bl	8010c54 <HAL_DMA_IRQHandler>
 80040a6:	bf00      	nop
 80040a8:	bd80      	pop	{r7, pc}
 80040aa:	bf00      	nop
 80040ac:	200013ec 	.word	0x200013ec

080040b0 <DMA2_Stream1_IRQHandler>:
 80040b0:	b580      	push	{r7, lr}
 80040b2:	af00      	add	r7, sp, #0
 80040b4:	4802      	ldr	r0, [pc, #8]	; (80040c0 <DMA2_Stream1_IRQHandler+0x10>)
 80040b6:	f00c fdcd 	bl	8010c54 <HAL_DMA_IRQHandler>
 80040ba:	bf00      	nop
 80040bc:	bd80      	pop	{r7, pc}
 80040be:	bf00      	nop
 80040c0:	200017e8 	.word	0x200017e8

080040c4 <DMA2_Stream3_IRQHandler>:
 80040c4:	b580      	push	{r7, lr}
 80040c6:	af00      	add	r7, sp, #0
 80040c8:	4802      	ldr	r0, [pc, #8]	; (80040d4 <DMA2_Stream3_IRQHandler+0x10>)
 80040ca:	f00c fdc3 	bl	8010c54 <HAL_DMA_IRQHandler>
 80040ce:	bf00      	nop
 80040d0:	bd80      	pop	{r7, pc}
 80040d2:	bf00      	nop
 80040d4:	2000144c 	.word	0x2000144c

080040d8 <CAN2_RX0_IRQHandler>:
 80040d8:	b580      	push	{r7, lr}
 80040da:	af00      	add	r7, sp, #0
 80040dc:	4802      	ldr	r0, [pc, #8]	; (80040e8 <CAN2_RX0_IRQHandler+0x10>)
 80040de:	f00c f919 	bl	8010314 <HAL_CAN_IRQHandler>
 80040e2:	bf00      	nop
 80040e4:	bd80      	pop	{r7, pc}
 80040e6:	bf00      	nop
 80040e8:	2000045c 	.word	0x2000045c

080040ec <CAN2_RX1_IRQHandler>:
 80040ec:	b580      	push	{r7, lr}
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	4802      	ldr	r0, [pc, #8]	; (80040fc <CAN2_RX1_IRQHandler+0x10>)
 80040f2:	f00c f90f 	bl	8010314 <HAL_CAN_IRQHandler>
 80040f6:	bf00      	nop
 80040f8:	bd80      	pop	{r7, pc}
 80040fa:	bf00      	nop
 80040fc:	2000045c 	.word	0x2000045c

08004100 <OTG_FS_IRQHandler>:
 8004100:	b580      	push	{r7, lr}
 8004102:	af00      	add	r7, sp, #0
 8004104:	4802      	ldr	r0, [pc, #8]	; (8004110 <OTG_FS_IRQHandler+0x10>)
 8004106:	f00f f8cc 	bl	80132a2 <HAL_PCD_IRQHandler>
 800410a:	bf00      	nop
 800410c:	bd80      	pop	{r7, pc}
 800410e:	bf00      	nop
 8004110:	2000ee4c 	.word	0x2000ee4c

08004114 <DMA2_Stream5_IRQHandler>:
 8004114:	b580      	push	{r7, lr}
 8004116:	af00      	add	r7, sp, #0
 8004118:	4802      	ldr	r0, [pc, #8]	; (8004124 <DMA2_Stream5_IRQHandler+0x10>)
 800411a:	f00c fd9b 	bl	8010c54 <HAL_DMA_IRQHandler>
 800411e:	bf00      	nop
 8004120:	bd80      	pop	{r7, pc}
 8004122:	bf00      	nop
 8004124:	20001728 	.word	0x20001728

08004128 <DMA2_Stream6_IRQHandler>:
 8004128:	b580      	push	{r7, lr}
 800412a:	af00      	add	r7, sp, #0
 800412c:	4802      	ldr	r0, [pc, #8]	; (8004138 <DMA2_Stream6_IRQHandler+0x10>)
 800412e:	f00c fd91 	bl	8010c54 <HAL_DMA_IRQHandler>
 8004132:	bf00      	nop
 8004134:	bd80      	pop	{r7, pc}
 8004136:	bf00      	nop
 8004138:	20001848 	.word	0x20001848

0800413c <USART6_IRQHandler>:
 800413c:	b580      	push	{r7, lr}
 800413e:	af00      	add	r7, sp, #0
 8004140:	4802      	ldr	r0, [pc, #8]	; (800414c <USART6_IRQHandler+0x10>)
 8004142:	f012 fe2b 	bl	8016d9c <HAL_UART_IRQHandler>
 8004146:	bf00      	nop
 8004148:	bd80      	pop	{r7, pc}
 800414a:	bf00      	nop
 800414c:	200016e4 	.word	0x200016e4

08004150 <I2C3_ER_IRQHandler>:
 8004150:	b580      	push	{r7, lr}
 8004152:	af00      	add	r7, sp, #0
 8004154:	4802      	ldr	r0, [pc, #8]	; (8004160 <I2C3_ER_IRQHandler+0x10>)
 8004156:	f00d ffb9 	bl	80120cc <HAL_I2C_ER_IRQHandler>
 800415a:	bf00      	nop
 800415c:	bd80      	pop	{r7, pc}
 800415e:	bf00      	nop
 8004160:	20001270 	.word	0x20001270

08004164 <SystemInit>:
 8004164:	b480      	push	{r7}
 8004166:	af00      	add	r7, sp, #0
 8004168:	4b08      	ldr	r3, [pc, #32]	; (800418c <SystemInit+0x28>)
 800416a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800416e:	4a07      	ldr	r2, [pc, #28]	; (800418c <SystemInit+0x28>)
 8004170:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004174:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004178:	4b04      	ldr	r3, [pc, #16]	; (800418c <SystemInit+0x28>)
 800417a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800417e:	609a      	str	r2, [r3, #8]
 8004180:	bf00      	nop
 8004182:	46bd      	mov	sp, r7
 8004184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004188:	4770      	bx	lr
 800418a:	bf00      	nop
 800418c:	e000ed00 	.word	0xe000ed00

08004190 <MX_TIM1_Init>:
 8004190:	b580      	push	{r7, lr}
 8004192:	b092      	sub	sp, #72	; 0x48
 8004194:	af00      	add	r7, sp, #0
 8004196:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800419a:	2200      	movs	r2, #0
 800419c:	601a      	str	r2, [r3, #0]
 800419e:	605a      	str	r2, [r3, #4]
 80041a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80041a4:	2200      	movs	r2, #0
 80041a6:	601a      	str	r2, [r3, #0]
 80041a8:	605a      	str	r2, [r3, #4]
 80041aa:	609a      	str	r2, [r3, #8]
 80041ac:	60da      	str	r2, [r3, #12]
 80041ae:	611a      	str	r2, [r3, #16]
 80041b0:	615a      	str	r2, [r3, #20]
 80041b2:	619a      	str	r2, [r3, #24]
 80041b4:	1d3b      	adds	r3, r7, #4
 80041b6:	2220      	movs	r2, #32
 80041b8:	2100      	movs	r1, #0
 80041ba:	4618      	mov	r0, r3
 80041bc:	f01b f9d9 	bl	801f572 <memset>
 80041c0:	4b39      	ldr	r3, [pc, #228]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041c2:	4a3a      	ldr	r2, [pc, #232]	; (80042ac <MX_TIM1_Init+0x11c>)
 80041c4:	601a      	str	r2, [r3, #0]
 80041c6:	4b38      	ldr	r3, [pc, #224]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041c8:	22a7      	movs	r2, #167	; 0xa7
 80041ca:	605a      	str	r2, [r3, #4]
 80041cc:	4b36      	ldr	r3, [pc, #216]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041ce:	2200      	movs	r2, #0
 80041d0:	609a      	str	r2, [r3, #8]
 80041d2:	4b35      	ldr	r3, [pc, #212]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041d4:	f644 621f 	movw	r2, #19999	; 0x4e1f
 80041d8:	60da      	str	r2, [r3, #12]
 80041da:	4b33      	ldr	r3, [pc, #204]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041dc:	2200      	movs	r2, #0
 80041de:	611a      	str	r2, [r3, #16]
 80041e0:	4b31      	ldr	r3, [pc, #196]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041e2:	2200      	movs	r2, #0
 80041e4:	615a      	str	r2, [r3, #20]
 80041e6:	4b30      	ldr	r3, [pc, #192]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041e8:	2200      	movs	r2, #0
 80041ea:	619a      	str	r2, [r3, #24]
 80041ec:	482e      	ldr	r0, [pc, #184]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041ee:	f011 fc26 	bl	8015a3e <HAL_TIM_PWM_Init>
 80041f2:	4603      	mov	r3, r0
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d001      	beq.n	80041fc <MX_TIM1_Init+0x6c>
 80041f8:	f7ff fce3 	bl	8003bc2 <Error_Handler>
 80041fc:	2300      	movs	r3, #0
 80041fe:	643b      	str	r3, [r7, #64]	; 0x40
 8004200:	2300      	movs	r3, #0
 8004202:	647b      	str	r3, [r7, #68]	; 0x44
 8004204:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004208:	4619      	mov	r1, r3
 800420a:	4827      	ldr	r0, [pc, #156]	; (80042a8 <MX_TIM1_Init+0x118>)
 800420c:	f012 fb54 	bl	80168b8 <HAL_TIMEx_MasterConfigSynchronization>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM1_Init+0x8a>
 8004216:	f7ff fcd4 	bl	8003bc2 <Error_Handler>
 800421a:	2360      	movs	r3, #96	; 0x60
 800421c:	627b      	str	r3, [r7, #36]	; 0x24
 800421e:	2300      	movs	r3, #0
 8004220:	62bb      	str	r3, [r7, #40]	; 0x28
 8004222:	2300      	movs	r3, #0
 8004224:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004226:	2300      	movs	r3, #0
 8004228:	633b      	str	r3, [r7, #48]	; 0x30
 800422a:	2300      	movs	r3, #0
 800422c:	637b      	str	r3, [r7, #52]	; 0x34
 800422e:	2300      	movs	r3, #0
 8004230:	63bb      	str	r3, [r7, #56]	; 0x38
 8004232:	2300      	movs	r3, #0
 8004234:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004236:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800423a:	2200      	movs	r2, #0
 800423c:	4619      	mov	r1, r3
 800423e:	481a      	ldr	r0, [pc, #104]	; (80042a8 <MX_TIM1_Init+0x118>)
 8004240:	f011 fe78 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 8004244:	4603      	mov	r3, r0
 8004246:	2b00      	cmp	r3, #0
 8004248:	d001      	beq.n	800424e <MX_TIM1_Init+0xbe>
 800424a:	f7ff fcba 	bl	8003bc2 <Error_Handler>
 800424e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004252:	2204      	movs	r2, #4
 8004254:	4619      	mov	r1, r3
 8004256:	4814      	ldr	r0, [pc, #80]	; (80042a8 <MX_TIM1_Init+0x118>)
 8004258:	f011 fe6c 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 800425c:	4603      	mov	r3, r0
 800425e:	2b00      	cmp	r3, #0
 8004260:	d001      	beq.n	8004266 <MX_TIM1_Init+0xd6>
 8004262:	f7ff fcae 	bl	8003bc2 <Error_Handler>
 8004266:	2300      	movs	r3, #0
 8004268:	607b      	str	r3, [r7, #4]
 800426a:	2300      	movs	r3, #0
 800426c:	60bb      	str	r3, [r7, #8]
 800426e:	2300      	movs	r3, #0
 8004270:	60fb      	str	r3, [r7, #12]
 8004272:	2300      	movs	r3, #0
 8004274:	613b      	str	r3, [r7, #16]
 8004276:	2300      	movs	r3, #0
 8004278:	617b      	str	r3, [r7, #20]
 800427a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800427e:	61bb      	str	r3, [r7, #24]
 8004280:	2300      	movs	r3, #0
 8004282:	623b      	str	r3, [r7, #32]
 8004284:	1d3b      	adds	r3, r7, #4
 8004286:	4619      	mov	r1, r3
 8004288:	4807      	ldr	r0, [pc, #28]	; (80042a8 <MX_TIM1_Init+0x118>)
 800428a:	f012 fb91 	bl	80169b0 <HAL_TIMEx_ConfigBreakDeadTime>
 800428e:	4603      	mov	r3, r0
 8004290:	2b00      	cmp	r3, #0
 8004292:	d001      	beq.n	8004298 <MX_TIM1_Init+0x108>
 8004294:	f7ff fc95 	bl	8003bc2 <Error_Handler>
 8004298:	4803      	ldr	r0, [pc, #12]	; (80042a8 <MX_TIM1_Init+0x118>)
 800429a:	f000 fa1f 	bl	80046dc <HAL_TIM_MspPostInit>
 800429e:	bf00      	nop
 80042a0:	3748      	adds	r7, #72	; 0x48
 80042a2:	46bd      	mov	sp, r7
 80042a4:	bd80      	pop	{r7, pc}
 80042a6:	bf00      	nop
 80042a8:	200014f4 	.word	0x200014f4
 80042ac:	40010000 	.word	0x40010000

080042b0 <MX_TIM3_Init>:
 80042b0:	b580      	push	{r7, lr}
 80042b2:	b08e      	sub	sp, #56	; 0x38
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80042ba:	2200      	movs	r2, #0
 80042bc:	601a      	str	r2, [r3, #0]
 80042be:	605a      	str	r2, [r3, #4]
 80042c0:	609a      	str	r2, [r3, #8]
 80042c2:	60da      	str	r2, [r3, #12]
 80042c4:	f107 0320 	add.w	r3, r7, #32
 80042c8:	2200      	movs	r2, #0
 80042ca:	601a      	str	r2, [r3, #0]
 80042cc:	605a      	str	r2, [r3, #4]
 80042ce:	1d3b      	adds	r3, r7, #4
 80042d0:	2200      	movs	r2, #0
 80042d2:	601a      	str	r2, [r3, #0]
 80042d4:	605a      	str	r2, [r3, #4]
 80042d6:	609a      	str	r2, [r3, #8]
 80042d8:	60da      	str	r2, [r3, #12]
 80042da:	611a      	str	r2, [r3, #16]
 80042dc:	615a      	str	r2, [r3, #20]
 80042de:	619a      	str	r2, [r3, #24]
 80042e0:	4b2a      	ldr	r3, [pc, #168]	; (800438c <MX_TIM3_Init+0xdc>)
 80042e2:	4a2b      	ldr	r2, [pc, #172]	; (8004390 <MX_TIM3_Init+0xe0>)
 80042e4:	601a      	str	r2, [r3, #0]
 80042e6:	4b29      	ldr	r3, [pc, #164]	; (800438c <MX_TIM3_Init+0xdc>)
 80042e8:	22a7      	movs	r2, #167	; 0xa7
 80042ea:	605a      	str	r2, [r3, #4]
 80042ec:	4b27      	ldr	r3, [pc, #156]	; (800438c <MX_TIM3_Init+0xdc>)
 80042ee:	2200      	movs	r2, #0
 80042f0:	609a      	str	r2, [r3, #8]
 80042f2:	4b26      	ldr	r3, [pc, #152]	; (800438c <MX_TIM3_Init+0xdc>)
 80042f4:	2201      	movs	r2, #1
 80042f6:	60da      	str	r2, [r3, #12]
 80042f8:	4b24      	ldr	r3, [pc, #144]	; (800438c <MX_TIM3_Init+0xdc>)
 80042fa:	2200      	movs	r2, #0
 80042fc:	611a      	str	r2, [r3, #16]
 80042fe:	4b23      	ldr	r3, [pc, #140]	; (800438c <MX_TIM3_Init+0xdc>)
 8004300:	2200      	movs	r2, #0
 8004302:	619a      	str	r2, [r3, #24]
 8004304:	4821      	ldr	r0, [pc, #132]	; (800438c <MX_TIM3_Init+0xdc>)
 8004306:	f011 fa19 	bl	801573c <HAL_TIM_Base_Init>
 800430a:	4603      	mov	r3, r0
 800430c:	2b00      	cmp	r3, #0
 800430e:	d001      	beq.n	8004314 <MX_TIM3_Init+0x64>
 8004310:	f7ff fc57 	bl	8003bc2 <Error_Handler>
 8004314:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004318:	62bb      	str	r3, [r7, #40]	; 0x28
 800431a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800431e:	4619      	mov	r1, r3
 8004320:	481a      	ldr	r0, [pc, #104]	; (800438c <MX_TIM3_Init+0xdc>)
 8004322:	f011 fec9 	bl	80160b8 <HAL_TIM_ConfigClockSource>
 8004326:	4603      	mov	r3, r0
 8004328:	2b00      	cmp	r3, #0
 800432a:	d001      	beq.n	8004330 <MX_TIM3_Init+0x80>
 800432c:	f7ff fc49 	bl	8003bc2 <Error_Handler>
 8004330:	4816      	ldr	r0, [pc, #88]	; (800438c <MX_TIM3_Init+0xdc>)
 8004332:	f011 fb2b 	bl	801598c <HAL_TIM_OC_Init>
 8004336:	4603      	mov	r3, r0
 8004338:	2b00      	cmp	r3, #0
 800433a:	d001      	beq.n	8004340 <MX_TIM3_Init+0x90>
 800433c:	f7ff fc41 	bl	8003bc2 <Error_Handler>
 8004340:	2300      	movs	r3, #0
 8004342:	623b      	str	r3, [r7, #32]
 8004344:	2300      	movs	r3, #0
 8004346:	627b      	str	r3, [r7, #36]	; 0x24
 8004348:	f107 0320 	add.w	r3, r7, #32
 800434c:	4619      	mov	r1, r3
 800434e:	480f      	ldr	r0, [pc, #60]	; (800438c <MX_TIM3_Init+0xdc>)
 8004350:	f012 fab2 	bl	80168b8 <HAL_TIMEx_MasterConfigSynchronization>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM3_Init+0xae>
 800435a:	f7ff fc32 	bl	8003bc2 <Error_Handler>
 800435e:	2300      	movs	r3, #0
 8004360:	607b      	str	r3, [r7, #4]
 8004362:	2300      	movs	r3, #0
 8004364:	60bb      	str	r3, [r7, #8]
 8004366:	2300      	movs	r3, #0
 8004368:	60fb      	str	r3, [r7, #12]
 800436a:	2300      	movs	r3, #0
 800436c:	617b      	str	r3, [r7, #20]
 800436e:	1d3b      	adds	r3, r7, #4
 8004370:	2200      	movs	r2, #0
 8004372:	4619      	mov	r1, r3
 8004374:	4805      	ldr	r0, [pc, #20]	; (800438c <MX_TIM3_Init+0xdc>)
 8004376:	f011 fd81 	bl	8015e7c <HAL_TIM_OC_ConfigChannel>
 800437a:	4603      	mov	r3, r0
 800437c:	2b00      	cmp	r3, #0
 800437e:	d001      	beq.n	8004384 <MX_TIM3_Init+0xd4>
 8004380:	f7ff fc1f 	bl	8003bc2 <Error_Handler>
 8004384:	bf00      	nop
 8004386:	3738      	adds	r7, #56	; 0x38
 8004388:	46bd      	mov	sp, r7
 800438a:	bd80      	pop	{r7, pc}
 800438c:	2000153c 	.word	0x2000153c
 8004390:	40000400 	.word	0x40000400

08004394 <MX_TIM4_Init>:
 8004394:	b580      	push	{r7, lr}
 8004396:	b08a      	sub	sp, #40	; 0x28
 8004398:	af00      	add	r7, sp, #0
 800439a:	f107 0320 	add.w	r3, r7, #32
 800439e:	2200      	movs	r2, #0
 80043a0:	601a      	str	r2, [r3, #0]
 80043a2:	605a      	str	r2, [r3, #4]
 80043a4:	1d3b      	adds	r3, r7, #4
 80043a6:	2200      	movs	r2, #0
 80043a8:	601a      	str	r2, [r3, #0]
 80043aa:	605a      	str	r2, [r3, #4]
 80043ac:	609a      	str	r2, [r3, #8]
 80043ae:	60da      	str	r2, [r3, #12]
 80043b0:	611a      	str	r2, [r3, #16]
 80043b2:	615a      	str	r2, [r3, #20]
 80043b4:	619a      	str	r2, [r3, #24]
 80043b6:	4b22      	ldr	r3, [pc, #136]	; (8004440 <MX_TIM4_Init+0xac>)
 80043b8:	4a22      	ldr	r2, [pc, #136]	; (8004444 <MX_TIM4_Init+0xb0>)
 80043ba:	601a      	str	r2, [r3, #0]
 80043bc:	4b20      	ldr	r3, [pc, #128]	; (8004440 <MX_TIM4_Init+0xac>)
 80043be:	f240 32e7 	movw	r2, #999	; 0x3e7
 80043c2:	605a      	str	r2, [r3, #4]
 80043c4:	4b1e      	ldr	r3, [pc, #120]	; (8004440 <MX_TIM4_Init+0xac>)
 80043c6:	2200      	movs	r2, #0
 80043c8:	609a      	str	r2, [r3, #8]
 80043ca:	4b1d      	ldr	r3, [pc, #116]	; (8004440 <MX_TIM4_Init+0xac>)
 80043cc:	f240 32e7 	movw	r2, #999	; 0x3e7
 80043d0:	60da      	str	r2, [r3, #12]
 80043d2:	4b1b      	ldr	r3, [pc, #108]	; (8004440 <MX_TIM4_Init+0xac>)
 80043d4:	2200      	movs	r2, #0
 80043d6:	611a      	str	r2, [r3, #16]
 80043d8:	4b19      	ldr	r3, [pc, #100]	; (8004440 <MX_TIM4_Init+0xac>)
 80043da:	2200      	movs	r2, #0
 80043dc:	619a      	str	r2, [r3, #24]
 80043de:	4818      	ldr	r0, [pc, #96]	; (8004440 <MX_TIM4_Init+0xac>)
 80043e0:	f011 fb2d 	bl	8015a3e <HAL_TIM_PWM_Init>
 80043e4:	4603      	mov	r3, r0
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d001      	beq.n	80043ee <MX_TIM4_Init+0x5a>
 80043ea:	f7ff fbea 	bl	8003bc2 <Error_Handler>
 80043ee:	2300      	movs	r3, #0
 80043f0:	623b      	str	r3, [r7, #32]
 80043f2:	2300      	movs	r3, #0
 80043f4:	627b      	str	r3, [r7, #36]	; 0x24
 80043f6:	f107 0320 	add.w	r3, r7, #32
 80043fa:	4619      	mov	r1, r3
 80043fc:	4810      	ldr	r0, [pc, #64]	; (8004440 <MX_TIM4_Init+0xac>)
 80043fe:	f012 fa5b 	bl	80168b8 <HAL_TIMEx_MasterConfigSynchronization>
 8004402:	4603      	mov	r3, r0
 8004404:	2b00      	cmp	r3, #0
 8004406:	d001      	beq.n	800440c <MX_TIM4_Init+0x78>
 8004408:	f7ff fbdb 	bl	8003bc2 <Error_Handler>
 800440c:	2360      	movs	r3, #96	; 0x60
 800440e:	607b      	str	r3, [r7, #4]
 8004410:	2300      	movs	r3, #0
 8004412:	60bb      	str	r3, [r7, #8]
 8004414:	2300      	movs	r3, #0
 8004416:	60fb      	str	r3, [r7, #12]
 8004418:	2300      	movs	r3, #0
 800441a:	617b      	str	r3, [r7, #20]
 800441c:	1d3b      	adds	r3, r7, #4
 800441e:	2208      	movs	r2, #8
 8004420:	4619      	mov	r1, r3
 8004422:	4807      	ldr	r0, [pc, #28]	; (8004440 <MX_TIM4_Init+0xac>)
 8004424:	f011 fd86 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 8004428:	4603      	mov	r3, r0
 800442a:	2b00      	cmp	r3, #0
 800442c:	d001      	beq.n	8004432 <MX_TIM4_Init+0x9e>
 800442e:	f7ff fbc8 	bl	8003bc2 <Error_Handler>
 8004432:	4803      	ldr	r0, [pc, #12]	; (8004440 <MX_TIM4_Init+0xac>)
 8004434:	f000 f952 	bl	80046dc <HAL_TIM_MspPostInit>
 8004438:	bf00      	nop
 800443a:	3728      	adds	r7, #40	; 0x28
 800443c:	46bd      	mov	sp, r7
 800443e:	bd80      	pop	{r7, pc}
 8004440:	20001584 	.word	0x20001584
 8004444:	40000800 	.word	0x40000800

08004448 <MX_TIM5_Init>:
 8004448:	b580      	push	{r7, lr}
 800444a:	b08a      	sub	sp, #40	; 0x28
 800444c:	af00      	add	r7, sp, #0
 800444e:	f107 0320 	add.w	r3, r7, #32
 8004452:	2200      	movs	r2, #0
 8004454:	601a      	str	r2, [r3, #0]
 8004456:	605a      	str	r2, [r3, #4]
 8004458:	1d3b      	adds	r3, r7, #4
 800445a:	2200      	movs	r2, #0
 800445c:	601a      	str	r2, [r3, #0]
 800445e:	605a      	str	r2, [r3, #4]
 8004460:	609a      	str	r2, [r3, #8]
 8004462:	60da      	str	r2, [r3, #12]
 8004464:	611a      	str	r2, [r3, #16]
 8004466:	615a      	str	r2, [r3, #20]
 8004468:	619a      	str	r2, [r3, #24]
 800446a:	4b2d      	ldr	r3, [pc, #180]	; (8004520 <MX_TIM5_Init+0xd8>)
 800446c:	4a2d      	ldr	r2, [pc, #180]	; (8004524 <MX_TIM5_Init+0xdc>)
 800446e:	601a      	str	r2, [r3, #0]
 8004470:	4b2b      	ldr	r3, [pc, #172]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004472:	f240 5225 	movw	r2, #1317	; 0x525
 8004476:	605a      	str	r2, [r3, #4]
 8004478:	4b29      	ldr	r3, [pc, #164]	; (8004520 <MX_TIM5_Init+0xd8>)
 800447a:	2200      	movs	r2, #0
 800447c:	609a      	str	r2, [r3, #8]
 800447e:	4b28      	ldr	r3, [pc, #160]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004480:	22ff      	movs	r2, #255	; 0xff
 8004482:	60da      	str	r2, [r3, #12]
 8004484:	4b26      	ldr	r3, [pc, #152]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004486:	2200      	movs	r2, #0
 8004488:	611a      	str	r2, [r3, #16]
 800448a:	4b25      	ldr	r3, [pc, #148]	; (8004520 <MX_TIM5_Init+0xd8>)
 800448c:	2280      	movs	r2, #128	; 0x80
 800448e:	619a      	str	r2, [r3, #24]
 8004490:	4823      	ldr	r0, [pc, #140]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004492:	f011 fad4 	bl	8015a3e <HAL_TIM_PWM_Init>
 8004496:	4603      	mov	r3, r0
 8004498:	2b00      	cmp	r3, #0
 800449a:	d001      	beq.n	80044a0 <MX_TIM5_Init+0x58>
 800449c:	f7ff fb91 	bl	8003bc2 <Error_Handler>
 80044a0:	2300      	movs	r3, #0
 80044a2:	623b      	str	r3, [r7, #32]
 80044a4:	2300      	movs	r3, #0
 80044a6:	627b      	str	r3, [r7, #36]	; 0x24
 80044a8:	f107 0320 	add.w	r3, r7, #32
 80044ac:	4619      	mov	r1, r3
 80044ae:	481c      	ldr	r0, [pc, #112]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044b0:	f012 fa02 	bl	80168b8 <HAL_TIMEx_MasterConfigSynchronization>
 80044b4:	4603      	mov	r3, r0
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d001      	beq.n	80044be <MX_TIM5_Init+0x76>
 80044ba:	f7ff fb82 	bl	8003bc2 <Error_Handler>
 80044be:	2360      	movs	r3, #96	; 0x60
 80044c0:	607b      	str	r3, [r7, #4]
 80044c2:	2300      	movs	r3, #0
 80044c4:	60bb      	str	r3, [r7, #8]
 80044c6:	2302      	movs	r3, #2
 80044c8:	60fb      	str	r3, [r7, #12]
 80044ca:	2304      	movs	r3, #4
 80044cc:	617b      	str	r3, [r7, #20]
 80044ce:	1d3b      	adds	r3, r7, #4
 80044d0:	2200      	movs	r2, #0
 80044d2:	4619      	mov	r1, r3
 80044d4:	4812      	ldr	r0, [pc, #72]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044d6:	f011 fd2d 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 80044da:	4603      	mov	r3, r0
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d001      	beq.n	80044e4 <MX_TIM5_Init+0x9c>
 80044e0:	f7ff fb6f 	bl	8003bc2 <Error_Handler>
 80044e4:	1d3b      	adds	r3, r7, #4
 80044e6:	2204      	movs	r2, #4
 80044e8:	4619      	mov	r1, r3
 80044ea:	480d      	ldr	r0, [pc, #52]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044ec:	f011 fd22 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 80044f0:	4603      	mov	r3, r0
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d001      	beq.n	80044fa <MX_TIM5_Init+0xb2>
 80044f6:	f7ff fb64 	bl	8003bc2 <Error_Handler>
 80044fa:	1d3b      	adds	r3, r7, #4
 80044fc:	2208      	movs	r2, #8
 80044fe:	4619      	mov	r1, r3
 8004500:	4807      	ldr	r0, [pc, #28]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004502:	f011 fd17 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 8004506:	4603      	mov	r3, r0
 8004508:	2b00      	cmp	r3, #0
 800450a:	d001      	beq.n	8004510 <MX_TIM5_Init+0xc8>
 800450c:	f7ff fb59 	bl	8003bc2 <Error_Handler>
 8004510:	4803      	ldr	r0, [pc, #12]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004512:	f000 f8e3 	bl	80046dc <HAL_TIM_MspPostInit>
 8004516:	bf00      	nop
 8004518:	3728      	adds	r7, #40	; 0x28
 800451a:	46bd      	mov	sp, r7
 800451c:	bd80      	pop	{r7, pc}
 800451e:	bf00      	nop
 8004520:	200015cc 	.word	0x200015cc
 8004524:	40000c00 	.word	0x40000c00

08004528 <MX_TIM10_Init>:
 8004528:	b580      	push	{r7, lr}
 800452a:	b088      	sub	sp, #32
 800452c:	af00      	add	r7, sp, #0
 800452e:	1d3b      	adds	r3, r7, #4
 8004530:	2200      	movs	r2, #0
 8004532:	601a      	str	r2, [r3, #0]
 8004534:	605a      	str	r2, [r3, #4]
 8004536:	609a      	str	r2, [r3, #8]
 8004538:	60da      	str	r2, [r3, #12]
 800453a:	611a      	str	r2, [r3, #16]
 800453c:	615a      	str	r2, [r3, #20]
 800453e:	619a      	str	r2, [r3, #24]
 8004540:	4b1e      	ldr	r3, [pc, #120]	; (80045bc <MX_TIM10_Init+0x94>)
 8004542:	4a1f      	ldr	r2, [pc, #124]	; (80045c0 <MX_TIM10_Init+0x98>)
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	4b1d      	ldr	r3, [pc, #116]	; (80045bc <MX_TIM10_Init+0x94>)
 8004548:	2200      	movs	r2, #0
 800454a:	605a      	str	r2, [r3, #4]
 800454c:	4b1b      	ldr	r3, [pc, #108]	; (80045bc <MX_TIM10_Init+0x94>)
 800454e:	2200      	movs	r2, #0
 8004550:	609a      	str	r2, [r3, #8]
 8004552:	4b1a      	ldr	r3, [pc, #104]	; (80045bc <MX_TIM10_Init+0x94>)
 8004554:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004558:	60da      	str	r2, [r3, #12]
 800455a:	4b18      	ldr	r3, [pc, #96]	; (80045bc <MX_TIM10_Init+0x94>)
 800455c:	2200      	movs	r2, #0
 800455e:	611a      	str	r2, [r3, #16]
 8004560:	4b16      	ldr	r3, [pc, #88]	; (80045bc <MX_TIM10_Init+0x94>)
 8004562:	2200      	movs	r2, #0
 8004564:	619a      	str	r2, [r3, #24]
 8004566:	4815      	ldr	r0, [pc, #84]	; (80045bc <MX_TIM10_Init+0x94>)
 8004568:	f011 f8e8 	bl	801573c <HAL_TIM_Base_Init>
 800456c:	4603      	mov	r3, r0
 800456e:	2b00      	cmp	r3, #0
 8004570:	d001      	beq.n	8004576 <MX_TIM10_Init+0x4e>
 8004572:	f7ff fb26 	bl	8003bc2 <Error_Handler>
 8004576:	4811      	ldr	r0, [pc, #68]	; (80045bc <MX_TIM10_Init+0x94>)
 8004578:	f011 fa61 	bl	8015a3e <HAL_TIM_PWM_Init>
 800457c:	4603      	mov	r3, r0
 800457e:	2b00      	cmp	r3, #0
 8004580:	d001      	beq.n	8004586 <MX_TIM10_Init+0x5e>
 8004582:	f7ff fb1e 	bl	8003bc2 <Error_Handler>
 8004586:	2360      	movs	r3, #96	; 0x60
 8004588:	607b      	str	r3, [r7, #4]
 800458a:	2300      	movs	r3, #0
 800458c:	60bb      	str	r3, [r7, #8]
 800458e:	2300      	movs	r3, #0
 8004590:	60fb      	str	r3, [r7, #12]
 8004592:	2300      	movs	r3, #0
 8004594:	617b      	str	r3, [r7, #20]
 8004596:	1d3b      	adds	r3, r7, #4
 8004598:	2200      	movs	r2, #0
 800459a:	4619      	mov	r1, r3
 800459c:	4807      	ldr	r0, [pc, #28]	; (80045bc <MX_TIM10_Init+0x94>)
 800459e:	f011 fcc9 	bl	8015f34 <HAL_TIM_PWM_ConfigChannel>
 80045a2:	4603      	mov	r3, r0
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d001      	beq.n	80045ac <MX_TIM10_Init+0x84>
 80045a8:	f7ff fb0b 	bl	8003bc2 <Error_Handler>
 80045ac:	4803      	ldr	r0, [pc, #12]	; (80045bc <MX_TIM10_Init+0x94>)
 80045ae:	f000 f895 	bl	80046dc <HAL_TIM_MspPostInit>
 80045b2:	bf00      	nop
 80045b4:	3720      	adds	r7, #32
 80045b6:	46bd      	mov	sp, r7
 80045b8:	bd80      	pop	{r7, pc}
 80045ba:	bf00      	nop
 80045bc:	20001614 	.word	0x20001614
 80045c0:	40014400 	.word	0x40014400

080045c4 <HAL_TIM_PWM_MspInit>:
 80045c4:	b480      	push	{r7}
 80045c6:	b087      	sub	sp, #28
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	4a1f      	ldr	r2, [pc, #124]	; (8004650 <HAL_TIM_PWM_MspInit+0x8c>)
 80045d2:	4293      	cmp	r3, r2
 80045d4:	d10e      	bne.n	80045f4 <HAL_TIM_PWM_MspInit+0x30>
 80045d6:	2300      	movs	r3, #0
 80045d8:	617b      	str	r3, [r7, #20]
 80045da:	4b1e      	ldr	r3, [pc, #120]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045de:	4a1d      	ldr	r2, [pc, #116]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045e0:	f043 0301 	orr.w	r3, r3, #1
 80045e4:	6453      	str	r3, [r2, #68]	; 0x44
 80045e6:	4b1b      	ldr	r3, [pc, #108]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045ea:	f003 0301 	and.w	r3, r3, #1
 80045ee:	617b      	str	r3, [r7, #20]
 80045f0:	697b      	ldr	r3, [r7, #20]
 80045f2:	e026      	b.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	4a17      	ldr	r2, [pc, #92]	; (8004658 <HAL_TIM_PWM_MspInit+0x94>)
 80045fa:	4293      	cmp	r3, r2
 80045fc:	d10e      	bne.n	800461c <HAL_TIM_PWM_MspInit+0x58>
 80045fe:	2300      	movs	r3, #0
 8004600:	613b      	str	r3, [r7, #16]
 8004602:	4b14      	ldr	r3, [pc, #80]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004606:	4a13      	ldr	r2, [pc, #76]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004608:	f043 0304 	orr.w	r3, r3, #4
 800460c:	6413      	str	r3, [r2, #64]	; 0x40
 800460e:	4b11      	ldr	r3, [pc, #68]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004612:	f003 0304 	and.w	r3, r3, #4
 8004616:	613b      	str	r3, [r7, #16]
 8004618:	693b      	ldr	r3, [r7, #16]
 800461a:	e012      	b.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	4a0e      	ldr	r2, [pc, #56]	; (800465c <HAL_TIM_PWM_MspInit+0x98>)
 8004622:	4293      	cmp	r3, r2
 8004624:	d10d      	bne.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 8004626:	2300      	movs	r3, #0
 8004628:	60fb      	str	r3, [r7, #12]
 800462a:	4b0a      	ldr	r3, [pc, #40]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 800462c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800462e:	4a09      	ldr	r2, [pc, #36]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004630:	f043 0308 	orr.w	r3, r3, #8
 8004634:	6413      	str	r3, [r2, #64]	; 0x40
 8004636:	4b07      	ldr	r3, [pc, #28]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004638:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800463a:	f003 0308 	and.w	r3, r3, #8
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	bf00      	nop
 8004644:	371c      	adds	r7, #28
 8004646:	46bd      	mov	sp, r7
 8004648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800464c:	4770      	bx	lr
 800464e:	bf00      	nop
 8004650:	40010000 	.word	0x40010000
 8004654:	40023800 	.word	0x40023800
 8004658:	40000800 	.word	0x40000800
 800465c:	40000c00 	.word	0x40000c00

08004660 <HAL_TIM_Base_MspInit>:
 8004660:	b580      	push	{r7, lr}
 8004662:	b084      	sub	sp, #16
 8004664:	af00      	add	r7, sp, #0
 8004666:	6078      	str	r0, [r7, #4]
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a18      	ldr	r2, [pc, #96]	; (80046d0 <HAL_TIM_Base_MspInit+0x70>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d116      	bne.n	80046a0 <HAL_TIM_Base_MspInit+0x40>
 8004672:	2300      	movs	r3, #0
 8004674:	60fb      	str	r3, [r7, #12]
 8004676:	4b17      	ldr	r3, [pc, #92]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 8004678:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800467a:	4a16      	ldr	r2, [pc, #88]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 800467c:	f043 0302 	orr.w	r3, r3, #2
 8004680:	6413      	str	r3, [r2, #64]	; 0x40
 8004682:	4b14      	ldr	r3, [pc, #80]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 8004684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004686:	f003 0302 	and.w	r3, r3, #2
 800468a:	60fb      	str	r3, [r7, #12]
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	2200      	movs	r2, #0
 8004690:	2105      	movs	r1, #5
 8004692:	201d      	movs	r0, #29
 8004694:	f00c f91c 	bl	80108d0 <HAL_NVIC_SetPriority>
 8004698:	201d      	movs	r0, #29
 800469a:	f00c f935 	bl	8010908 <HAL_NVIC_EnableIRQ>
 800469e:	e012      	b.n	80046c6 <HAL_TIM_Base_MspInit+0x66>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4a0c      	ldr	r2, [pc, #48]	; (80046d8 <HAL_TIM_Base_MspInit+0x78>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d10d      	bne.n	80046c6 <HAL_TIM_Base_MspInit+0x66>
 80046aa:	2300      	movs	r3, #0
 80046ac:	60bb      	str	r3, [r7, #8]
 80046ae:	4b09      	ldr	r3, [pc, #36]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046b2:	4a08      	ldr	r2, [pc, #32]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80046b8:	6453      	str	r3, [r2, #68]	; 0x44
 80046ba:	4b06      	ldr	r3, [pc, #24]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046c2:	60bb      	str	r3, [r7, #8]
 80046c4:	68bb      	ldr	r3, [r7, #8]
 80046c6:	bf00      	nop
 80046c8:	3710      	adds	r7, #16
 80046ca:	46bd      	mov	sp, r7
 80046cc:	bd80      	pop	{r7, pc}
 80046ce:	bf00      	nop
 80046d0:	40000400 	.word	0x40000400
 80046d4:	40023800 	.word	0x40023800
 80046d8:	40014400 	.word	0x40014400

080046dc <HAL_TIM_MspPostInit>:
 80046dc:	b580      	push	{r7, lr}
 80046de:	b08c      	sub	sp, #48	; 0x30
 80046e0:	af00      	add	r7, sp, #0
 80046e2:	6078      	str	r0, [r7, #4]
 80046e4:	f107 031c 	add.w	r3, r7, #28
 80046e8:	2200      	movs	r2, #0
 80046ea:	601a      	str	r2, [r3, #0]
 80046ec:	605a      	str	r2, [r3, #4]
 80046ee:	609a      	str	r2, [r3, #8]
 80046f0:	60da      	str	r2, [r3, #12]
 80046f2:	611a      	str	r2, [r3, #16]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a49      	ldr	r2, [pc, #292]	; (8004820 <HAL_TIM_MspPostInit+0x144>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d11f      	bne.n	800473e <HAL_TIM_MspPostInit+0x62>
 80046fe:	2300      	movs	r3, #0
 8004700:	61bb      	str	r3, [r7, #24]
 8004702:	4b48      	ldr	r3, [pc, #288]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004706:	4a47      	ldr	r2, [pc, #284]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004708:	f043 0310 	orr.w	r3, r3, #16
 800470c:	6313      	str	r3, [r2, #48]	; 0x30
 800470e:	4b45      	ldr	r3, [pc, #276]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004712:	f003 0310 	and.w	r3, r3, #16
 8004716:	61bb      	str	r3, [r7, #24]
 8004718:	69bb      	ldr	r3, [r7, #24]
 800471a:	f44f 6320 	mov.w	r3, #2560	; 0xa00
 800471e:	61fb      	str	r3, [r7, #28]
 8004720:	2302      	movs	r3, #2
 8004722:	623b      	str	r3, [r7, #32]
 8004724:	2300      	movs	r3, #0
 8004726:	627b      	str	r3, [r7, #36]	; 0x24
 8004728:	2300      	movs	r3, #0
 800472a:	62bb      	str	r3, [r7, #40]	; 0x28
 800472c:	2301      	movs	r3, #1
 800472e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004730:	f107 031c 	add.w	r3, r7, #28
 8004734:	4619      	mov	r1, r3
 8004736:	483c      	ldr	r0, [pc, #240]	; (8004828 <HAL_TIM_MspPostInit+0x14c>)
 8004738:	f00c fd02 	bl	8011140 <HAL_GPIO_Init>
 800473c:	e06c      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4a3a      	ldr	r2, [pc, #232]	; (800482c <HAL_TIM_MspPostInit+0x150>)
 8004744:	4293      	cmp	r3, r2
 8004746:	d11f      	bne.n	8004788 <HAL_TIM_MspPostInit+0xac>
 8004748:	2300      	movs	r3, #0
 800474a:	617b      	str	r3, [r7, #20]
 800474c:	4b35      	ldr	r3, [pc, #212]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800474e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004750:	4a34      	ldr	r2, [pc, #208]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004752:	f043 0308 	orr.w	r3, r3, #8
 8004756:	6313      	str	r3, [r2, #48]	; 0x30
 8004758:	4b32      	ldr	r3, [pc, #200]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800475a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800475c:	f003 0308 	and.w	r3, r3, #8
 8004760:	617b      	str	r3, [r7, #20]
 8004762:	697b      	ldr	r3, [r7, #20]
 8004764:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004768:	61fb      	str	r3, [r7, #28]
 800476a:	2302      	movs	r3, #2
 800476c:	623b      	str	r3, [r7, #32]
 800476e:	2300      	movs	r3, #0
 8004770:	627b      	str	r3, [r7, #36]	; 0x24
 8004772:	2300      	movs	r3, #0
 8004774:	62bb      	str	r3, [r7, #40]	; 0x28
 8004776:	2302      	movs	r3, #2
 8004778:	62fb      	str	r3, [r7, #44]	; 0x2c
 800477a:	f107 031c 	add.w	r3, r7, #28
 800477e:	4619      	mov	r1, r3
 8004780:	482b      	ldr	r0, [pc, #172]	; (8004830 <HAL_TIM_MspPostInit+0x154>)
 8004782:	f00c fcdd 	bl	8011140 <HAL_GPIO_Init>
 8004786:	e047      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	4a29      	ldr	r2, [pc, #164]	; (8004834 <HAL_TIM_MspPostInit+0x158>)
 800478e:	4293      	cmp	r3, r2
 8004790:	d11f      	bne.n	80047d2 <HAL_TIM_MspPostInit+0xf6>
 8004792:	2300      	movs	r3, #0
 8004794:	613b      	str	r3, [r7, #16]
 8004796:	4b23      	ldr	r3, [pc, #140]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004798:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800479a:	4a22      	ldr	r2, [pc, #136]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800479c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80047a0:	6313      	str	r3, [r2, #48]	; 0x30
 80047a2:	4b20      	ldr	r3, [pc, #128]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80047aa:	613b      	str	r3, [r7, #16]
 80047ac:	693b      	ldr	r3, [r7, #16]
 80047ae:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 80047b2:	61fb      	str	r3, [r7, #28]
 80047b4:	2302      	movs	r3, #2
 80047b6:	623b      	str	r3, [r7, #32]
 80047b8:	2300      	movs	r3, #0
 80047ba:	627b      	str	r3, [r7, #36]	; 0x24
 80047bc:	2300      	movs	r3, #0
 80047be:	62bb      	str	r3, [r7, #40]	; 0x28
 80047c0:	2302      	movs	r3, #2
 80047c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80047c4:	f107 031c 	add.w	r3, r7, #28
 80047c8:	4619      	mov	r1, r3
 80047ca:	481b      	ldr	r0, [pc, #108]	; (8004838 <HAL_TIM_MspPostInit+0x15c>)
 80047cc:	f00c fcb8 	bl	8011140 <HAL_GPIO_Init>
 80047d0:	e022      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	4a19      	ldr	r2, [pc, #100]	; (800483c <HAL_TIM_MspPostInit+0x160>)
 80047d8:	4293      	cmp	r3, r2
 80047da:	d11d      	bne.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 80047dc:	2300      	movs	r3, #0
 80047de:	60fb      	str	r3, [r7, #12]
 80047e0:	4b10      	ldr	r3, [pc, #64]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047e4:	4a0f      	ldr	r2, [pc, #60]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047e6:	f043 0320 	orr.w	r3, r3, #32
 80047ea:	6313      	str	r3, [r2, #48]	; 0x30
 80047ec:	4b0d      	ldr	r3, [pc, #52]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047f0:	f003 0320 	and.w	r3, r3, #32
 80047f4:	60fb      	str	r3, [r7, #12]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	2340      	movs	r3, #64	; 0x40
 80047fa:	61fb      	str	r3, [r7, #28]
 80047fc:	2302      	movs	r3, #2
 80047fe:	623b      	str	r3, [r7, #32]
 8004800:	2300      	movs	r3, #0
 8004802:	627b      	str	r3, [r7, #36]	; 0x24
 8004804:	2300      	movs	r3, #0
 8004806:	62bb      	str	r3, [r7, #40]	; 0x28
 8004808:	2303      	movs	r3, #3
 800480a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800480c:	f107 031c 	add.w	r3, r7, #28
 8004810:	4619      	mov	r1, r3
 8004812:	480b      	ldr	r0, [pc, #44]	; (8004840 <HAL_TIM_MspPostInit+0x164>)
 8004814:	f00c fc94 	bl	8011140 <HAL_GPIO_Init>
 8004818:	bf00      	nop
 800481a:	3730      	adds	r7, #48	; 0x30
 800481c:	46bd      	mov	sp, r7
 800481e:	bd80      	pop	{r7, pc}
 8004820:	40010000 	.word	0x40010000
 8004824:	40023800 	.word	0x40023800
 8004828:	40021000 	.word	0x40021000
 800482c:	40000800 	.word	0x40000800
 8004830:	40020c00 	.word	0x40020c00
 8004834:	40000c00 	.word	0x40000c00
 8004838:	40021c00 	.word	0x40021c00
 800483c:	40014400 	.word	0x40014400
 8004840:	40021400 	.word	0x40021400

08004844 <MX_USART1_UART_Init>:
 8004844:	b580      	push	{r7, lr}
 8004846:	af00      	add	r7, sp, #0
 8004848:	4b11      	ldr	r3, [pc, #68]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800484a:	4a12      	ldr	r2, [pc, #72]	; (8004894 <MX_USART1_UART_Init+0x50>)
 800484c:	601a      	str	r2, [r3, #0]
 800484e:	4b10      	ldr	r3, [pc, #64]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004850:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004854:	605a      	str	r2, [r3, #4]
 8004856:	4b0e      	ldr	r3, [pc, #56]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004858:	2200      	movs	r2, #0
 800485a:	609a      	str	r2, [r3, #8]
 800485c:	4b0c      	ldr	r3, [pc, #48]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800485e:	2200      	movs	r2, #0
 8004860:	60da      	str	r2, [r3, #12]
 8004862:	4b0b      	ldr	r3, [pc, #44]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004864:	2200      	movs	r2, #0
 8004866:	611a      	str	r2, [r3, #16]
 8004868:	4b09      	ldr	r3, [pc, #36]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800486a:	220c      	movs	r2, #12
 800486c:	615a      	str	r2, [r3, #20]
 800486e:	4b08      	ldr	r3, [pc, #32]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004870:	2200      	movs	r2, #0
 8004872:	619a      	str	r2, [r3, #24]
 8004874:	4b06      	ldr	r3, [pc, #24]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004876:	2200      	movs	r2, #0
 8004878:	61da      	str	r2, [r3, #28]
 800487a:	4805      	ldr	r0, [pc, #20]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800487c:	f012 f8fe 	bl	8016a7c <HAL_UART_Init>
 8004880:	4603      	mov	r3, r0
 8004882:	2b00      	cmp	r3, #0
 8004884:	d001      	beq.n	800488a <MX_USART1_UART_Init+0x46>
 8004886:	f7ff f99c 	bl	8003bc2 <Error_Handler>
 800488a:	bf00      	nop
 800488c:	bd80      	pop	{r7, pc}
 800488e:	bf00      	nop
 8004890:	2000165c 	.word	0x2000165c
 8004894:	40011000 	.word	0x40011000

08004898 <MX_USART3_UART_Init>:
 8004898:	b580      	push	{r7, lr}
 800489a:	af00      	add	r7, sp, #0
 800489c:	4b11      	ldr	r3, [pc, #68]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 800489e:	4a12      	ldr	r2, [pc, #72]	; (80048e8 <MX_USART3_UART_Init+0x50>)
 80048a0:	601a      	str	r2, [r3, #0]
 80048a2:	4b10      	ldr	r3, [pc, #64]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048a4:	4a11      	ldr	r2, [pc, #68]	; (80048ec <MX_USART3_UART_Init+0x54>)
 80048a6:	605a      	str	r2, [r3, #4]
 80048a8:	4b0e      	ldr	r3, [pc, #56]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048aa:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80048ae:	609a      	str	r2, [r3, #8]
 80048b0:	4b0c      	ldr	r3, [pc, #48]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048b2:	2200      	movs	r2, #0
 80048b4:	60da      	str	r2, [r3, #12]
 80048b6:	4b0b      	ldr	r3, [pc, #44]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048b8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80048bc:	611a      	str	r2, [r3, #16]
 80048be:	4b09      	ldr	r3, [pc, #36]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048c0:	220c      	movs	r2, #12
 80048c2:	615a      	str	r2, [r3, #20]
 80048c4:	4b07      	ldr	r3, [pc, #28]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048c6:	2200      	movs	r2, #0
 80048c8:	619a      	str	r2, [r3, #24]
 80048ca:	4b06      	ldr	r3, [pc, #24]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048cc:	2200      	movs	r2, #0
 80048ce:	61da      	str	r2, [r3, #28]
 80048d0:	4804      	ldr	r0, [pc, #16]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048d2:	f012 f8d3 	bl	8016a7c <HAL_UART_Init>
 80048d6:	4603      	mov	r3, r0
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d001      	beq.n	80048e0 <MX_USART3_UART_Init+0x48>
 80048dc:	f7ff f971 	bl	8003bc2 <Error_Handler>
 80048e0:	bf00      	nop
 80048e2:	bd80      	pop	{r7, pc}
 80048e4:	200016a0 	.word	0x200016a0
 80048e8:	40004800 	.word	0x40004800
 80048ec:	000186a0 	.word	0x000186a0

080048f0 <MX_USART6_UART_Init>:
 80048f0:	b580      	push	{r7, lr}
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	4b11      	ldr	r3, [pc, #68]	; (800493c <MX_USART6_UART_Init+0x4c>)
 80048f6:	4a12      	ldr	r2, [pc, #72]	; (8004940 <MX_USART6_UART_Init+0x50>)
 80048f8:	601a      	str	r2, [r3, #0]
 80048fa:	4b10      	ldr	r3, [pc, #64]	; (800493c <MX_USART6_UART_Init+0x4c>)
 80048fc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004900:	605a      	str	r2, [r3, #4]
 8004902:	4b0e      	ldr	r3, [pc, #56]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004904:	2200      	movs	r2, #0
 8004906:	609a      	str	r2, [r3, #8]
 8004908:	4b0c      	ldr	r3, [pc, #48]	; (800493c <MX_USART6_UART_Init+0x4c>)
 800490a:	2200      	movs	r2, #0
 800490c:	60da      	str	r2, [r3, #12]
 800490e:	4b0b      	ldr	r3, [pc, #44]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004910:	2200      	movs	r2, #0
 8004912:	611a      	str	r2, [r3, #16]
 8004914:	4b09      	ldr	r3, [pc, #36]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004916:	220c      	movs	r2, #12
 8004918:	615a      	str	r2, [r3, #20]
 800491a:	4b08      	ldr	r3, [pc, #32]	; (800493c <MX_USART6_UART_Init+0x4c>)
 800491c:	2200      	movs	r2, #0
 800491e:	619a      	str	r2, [r3, #24]
 8004920:	4b06      	ldr	r3, [pc, #24]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004922:	2200      	movs	r2, #0
 8004924:	61da      	str	r2, [r3, #28]
 8004926:	4805      	ldr	r0, [pc, #20]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004928:	f012 f8a8 	bl	8016a7c <HAL_UART_Init>
 800492c:	4603      	mov	r3, r0
 800492e:	2b00      	cmp	r3, #0
 8004930:	d001      	beq.n	8004936 <MX_USART6_UART_Init+0x46>
 8004932:	f7ff f946 	bl	8003bc2 <Error_Handler>
 8004936:	bf00      	nop
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	200016e4 	.word	0x200016e4
 8004940:	40011400 	.word	0x40011400

08004944 <HAL_UART_MspInit>:
 8004944:	b580      	push	{r7, lr}
 8004946:	b08e      	sub	sp, #56	; 0x38
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
 800494c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004950:	2200      	movs	r2, #0
 8004952:	601a      	str	r2, [r3, #0]
 8004954:	605a      	str	r2, [r3, #4]
 8004956:	609a      	str	r2, [r3, #8]
 8004958:	60da      	str	r2, [r3, #12]
 800495a:	611a      	str	r2, [r3, #16]
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	4a78      	ldr	r2, [pc, #480]	; (8004b44 <HAL_UART_MspInit+0x200>)
 8004962:	4293      	cmp	r3, r2
 8004964:	f040 8083 	bne.w	8004a6e <HAL_UART_MspInit+0x12a>
 8004968:	2300      	movs	r3, #0
 800496a:	623b      	str	r3, [r7, #32]
 800496c:	4b76      	ldr	r3, [pc, #472]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800496e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004970:	4a75      	ldr	r2, [pc, #468]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004972:	f043 0310 	orr.w	r3, r3, #16
 8004976:	6453      	str	r3, [r2, #68]	; 0x44
 8004978:	4b73      	ldr	r3, [pc, #460]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800497a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800497c:	f003 0310 	and.w	r3, r3, #16
 8004980:	623b      	str	r3, [r7, #32]
 8004982:	6a3b      	ldr	r3, [r7, #32]
 8004984:	2300      	movs	r3, #0
 8004986:	61fb      	str	r3, [r7, #28]
 8004988:	4b6f      	ldr	r3, [pc, #444]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800498a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800498c:	4a6e      	ldr	r2, [pc, #440]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800498e:	f043 0302 	orr.w	r3, r3, #2
 8004992:	6313      	str	r3, [r2, #48]	; 0x30
 8004994:	4b6c      	ldr	r3, [pc, #432]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004998:	f003 0302 	and.w	r3, r3, #2
 800499c:	61fb      	str	r3, [r7, #28]
 800499e:	69fb      	ldr	r3, [r7, #28]
 80049a0:	2300      	movs	r3, #0
 80049a2:	61bb      	str	r3, [r7, #24]
 80049a4:	4b68      	ldr	r3, [pc, #416]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049a8:	4a67      	ldr	r2, [pc, #412]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049aa:	f043 0301 	orr.w	r3, r3, #1
 80049ae:	6313      	str	r3, [r2, #48]	; 0x30
 80049b0:	4b65      	ldr	r3, [pc, #404]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049b4:	f003 0301 	and.w	r3, r3, #1
 80049b8:	61bb      	str	r3, [r7, #24]
 80049ba:	69bb      	ldr	r3, [r7, #24]
 80049bc:	2380      	movs	r3, #128	; 0x80
 80049be:	627b      	str	r3, [r7, #36]	; 0x24
 80049c0:	2302      	movs	r3, #2
 80049c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80049c4:	2300      	movs	r3, #0
 80049c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049c8:	2303      	movs	r3, #3
 80049ca:	633b      	str	r3, [r7, #48]	; 0x30
 80049cc:	2307      	movs	r3, #7
 80049ce:	637b      	str	r3, [r7, #52]	; 0x34
 80049d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80049d4:	4619      	mov	r1, r3
 80049d6:	485d      	ldr	r0, [pc, #372]	; (8004b4c <HAL_UART_MspInit+0x208>)
 80049d8:	f00c fbb2 	bl	8011140 <HAL_GPIO_Init>
 80049dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80049e0:	627b      	str	r3, [r7, #36]	; 0x24
 80049e2:	2302      	movs	r3, #2
 80049e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80049e6:	2300      	movs	r3, #0
 80049e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049ea:	2303      	movs	r3, #3
 80049ec:	633b      	str	r3, [r7, #48]	; 0x30
 80049ee:	2307      	movs	r3, #7
 80049f0:	637b      	str	r3, [r7, #52]	; 0x34
 80049f2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80049f6:	4619      	mov	r1, r3
 80049f8:	4855      	ldr	r0, [pc, #340]	; (8004b50 <HAL_UART_MspInit+0x20c>)
 80049fa:	f00c fba1 	bl	8011140 <HAL_GPIO_Init>
 80049fe:	4b55      	ldr	r3, [pc, #340]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a00:	4a55      	ldr	r2, [pc, #340]	; (8004b58 <HAL_UART_MspInit+0x214>)
 8004a02:	601a      	str	r2, [r3, #0]
 8004a04:	4b53      	ldr	r3, [pc, #332]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a06:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004a0a:	605a      	str	r2, [r3, #4]
 8004a0c:	4b51      	ldr	r3, [pc, #324]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a0e:	2200      	movs	r2, #0
 8004a10:	609a      	str	r2, [r3, #8]
 8004a12:	4b50      	ldr	r3, [pc, #320]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a14:	2200      	movs	r2, #0
 8004a16:	60da      	str	r2, [r3, #12]
 8004a18:	4b4e      	ldr	r3, [pc, #312]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004a1e:	611a      	str	r2, [r3, #16]
 8004a20:	4b4c      	ldr	r3, [pc, #304]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a22:	2200      	movs	r2, #0
 8004a24:	615a      	str	r2, [r3, #20]
 8004a26:	4b4b      	ldr	r3, [pc, #300]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a28:	2200      	movs	r2, #0
 8004a2a:	619a      	str	r2, [r3, #24]
 8004a2c:	4b49      	ldr	r3, [pc, #292]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004a32:	61da      	str	r2, [r3, #28]
 8004a34:	4b47      	ldr	r3, [pc, #284]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a36:	2200      	movs	r2, #0
 8004a38:	621a      	str	r2, [r3, #32]
 8004a3a:	4b46      	ldr	r3, [pc, #280]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a3c:	2200      	movs	r2, #0
 8004a3e:	625a      	str	r2, [r3, #36]	; 0x24
 8004a40:	4844      	ldr	r0, [pc, #272]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a42:	f00b ff6f 	bl	8010924 <HAL_DMA_Init>
 8004a46:	4603      	mov	r3, r0
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d001      	beq.n	8004a50 <HAL_UART_MspInit+0x10c>
 8004a4c:	f7ff f8b9 	bl	8003bc2 <Error_Handler>
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	4a40      	ldr	r2, [pc, #256]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a54:	639a      	str	r2, [r3, #56]	; 0x38
 8004a56:	4a3f      	ldr	r2, [pc, #252]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	6393      	str	r3, [r2, #56]	; 0x38
 8004a5c:	2200      	movs	r2, #0
 8004a5e:	2105      	movs	r1, #5
 8004a60:	2025      	movs	r0, #37	; 0x25
 8004a62:	f00b ff35 	bl	80108d0 <HAL_NVIC_SetPriority>
 8004a66:	2025      	movs	r0, #37	; 0x25
 8004a68:	f00b ff4e 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8004a6c:	e116      	b.n	8004c9c <HAL_UART_MspInit+0x358>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	4a3a      	ldr	r2, [pc, #232]	; (8004b5c <HAL_UART_MspInit+0x218>)
 8004a74:	4293      	cmp	r3, r2
 8004a76:	d179      	bne.n	8004b6c <HAL_UART_MspInit+0x228>
 8004a78:	2300      	movs	r3, #0
 8004a7a:	617b      	str	r3, [r7, #20]
 8004a7c:	4b32      	ldr	r3, [pc, #200]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a80:	4a31      	ldr	r2, [pc, #196]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a82:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004a86:	6413      	str	r3, [r2, #64]	; 0x40
 8004a88:	4b2f      	ldr	r3, [pc, #188]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a8c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004a90:	617b      	str	r3, [r7, #20]
 8004a92:	697b      	ldr	r3, [r7, #20]
 8004a94:	2300      	movs	r3, #0
 8004a96:	613b      	str	r3, [r7, #16]
 8004a98:	4b2b      	ldr	r3, [pc, #172]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a9c:	4a2a      	ldr	r2, [pc, #168]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a9e:	f043 0304 	orr.w	r3, r3, #4
 8004aa2:	6313      	str	r3, [r2, #48]	; 0x30
 8004aa4:	4b28      	ldr	r3, [pc, #160]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004aa8:	f003 0304 	and.w	r3, r3, #4
 8004aac:	613b      	str	r3, [r7, #16]
 8004aae:	693b      	ldr	r3, [r7, #16]
 8004ab0:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004ab4:	627b      	str	r3, [r7, #36]	; 0x24
 8004ab6:	2302      	movs	r3, #2
 8004ab8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004aba:	2300      	movs	r3, #0
 8004abc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004abe:	2303      	movs	r3, #3
 8004ac0:	633b      	str	r3, [r7, #48]	; 0x30
 8004ac2:	2307      	movs	r3, #7
 8004ac4:	637b      	str	r3, [r7, #52]	; 0x34
 8004ac6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004aca:	4619      	mov	r1, r3
 8004acc:	4824      	ldr	r0, [pc, #144]	; (8004b60 <HAL_UART_MspInit+0x21c>)
 8004ace:	f00c fb37 	bl	8011140 <HAL_GPIO_Init>
 8004ad2:	4b24      	ldr	r3, [pc, #144]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ad4:	4a24      	ldr	r2, [pc, #144]	; (8004b68 <HAL_UART_MspInit+0x224>)
 8004ad6:	601a      	str	r2, [r3, #0]
 8004ad8:	4b22      	ldr	r3, [pc, #136]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ada:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004ade:	605a      	str	r2, [r3, #4]
 8004ae0:	4b20      	ldr	r3, [pc, #128]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	609a      	str	r2, [r3, #8]
 8004ae6:	4b1f      	ldr	r3, [pc, #124]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ae8:	2200      	movs	r2, #0
 8004aea:	60da      	str	r2, [r3, #12]
 8004aec:	4b1d      	ldr	r3, [pc, #116]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004aee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004af2:	611a      	str	r2, [r3, #16]
 8004af4:	4b1b      	ldr	r3, [pc, #108]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004af6:	2200      	movs	r2, #0
 8004af8:	615a      	str	r2, [r3, #20]
 8004afa:	4b1a      	ldr	r3, [pc, #104]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004afc:	2200      	movs	r2, #0
 8004afe:	619a      	str	r2, [r3, #24]
 8004b00:	4b18      	ldr	r3, [pc, #96]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004b06:	61da      	str	r2, [r3, #28]
 8004b08:	4b16      	ldr	r3, [pc, #88]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b0a:	2200      	movs	r2, #0
 8004b0c:	621a      	str	r2, [r3, #32]
 8004b0e:	4b15      	ldr	r3, [pc, #84]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b10:	2200      	movs	r2, #0
 8004b12:	625a      	str	r2, [r3, #36]	; 0x24
 8004b14:	4813      	ldr	r0, [pc, #76]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b16:	f00b ff05 	bl	8010924 <HAL_DMA_Init>
 8004b1a:	4603      	mov	r3, r0
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d001      	beq.n	8004b24 <HAL_UART_MspInit+0x1e0>
 8004b20:	f7ff f84f 	bl	8003bc2 <Error_Handler>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	4a0f      	ldr	r2, [pc, #60]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b28:	639a      	str	r2, [r3, #56]	; 0x38
 8004b2a:	4a0e      	ldr	r2, [pc, #56]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	6393      	str	r3, [r2, #56]	; 0x38
 8004b30:	2200      	movs	r2, #0
 8004b32:	2105      	movs	r1, #5
 8004b34:	2027      	movs	r0, #39	; 0x27
 8004b36:	f00b fecb 	bl	80108d0 <HAL_NVIC_SetPriority>
 8004b3a:	2027      	movs	r0, #39	; 0x27
 8004b3c:	f00b fee4 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8004b40:	e0ac      	b.n	8004c9c <HAL_UART_MspInit+0x358>
 8004b42:	bf00      	nop
 8004b44:	40011000 	.word	0x40011000
 8004b48:	40023800 	.word	0x40023800
 8004b4c:	40020400 	.word	0x40020400
 8004b50:	40020000 	.word	0x40020000
 8004b54:	20001728 	.word	0x20001728
 8004b58:	40026488 	.word	0x40026488
 8004b5c:	40004800 	.word	0x40004800
 8004b60:	40020800 	.word	0x40020800
 8004b64:	20001788 	.word	0x20001788
 8004b68:	40026028 	.word	0x40026028
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	4a4c      	ldr	r2, [pc, #304]	; (8004ca4 <HAL_UART_MspInit+0x360>)
 8004b72:	4293      	cmp	r3, r2
 8004b74:	f040 8092 	bne.w	8004c9c <HAL_UART_MspInit+0x358>
 8004b78:	2300      	movs	r3, #0
 8004b7a:	60fb      	str	r3, [r7, #12]
 8004b7c:	4b4a      	ldr	r3, [pc, #296]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b80:	4a49      	ldr	r2, [pc, #292]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b82:	f043 0320 	orr.w	r3, r3, #32
 8004b86:	6453      	str	r3, [r2, #68]	; 0x44
 8004b88:	4b47      	ldr	r3, [pc, #284]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b8c:	f003 0320 	and.w	r3, r3, #32
 8004b90:	60fb      	str	r3, [r7, #12]
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	2300      	movs	r3, #0
 8004b96:	60bb      	str	r3, [r7, #8]
 8004b98:	4b43      	ldr	r3, [pc, #268]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b9c:	4a42      	ldr	r2, [pc, #264]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ba2:	6313      	str	r3, [r2, #48]	; 0x30
 8004ba4:	4b40      	ldr	r3, [pc, #256]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004ba6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ba8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004bac:	60bb      	str	r3, [r7, #8]
 8004bae:	68bb      	ldr	r3, [r7, #8]
 8004bb0:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 8004bb4:	627b      	str	r3, [r7, #36]	; 0x24
 8004bb6:	2302      	movs	r3, #2
 8004bb8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004bba:	2300      	movs	r3, #0
 8004bbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bbe:	2303      	movs	r3, #3
 8004bc0:	633b      	str	r3, [r7, #48]	; 0x30
 8004bc2:	2308      	movs	r3, #8
 8004bc4:	637b      	str	r3, [r7, #52]	; 0x34
 8004bc6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004bca:	4619      	mov	r1, r3
 8004bcc:	4837      	ldr	r0, [pc, #220]	; (8004cac <HAL_UART_MspInit+0x368>)
 8004bce:	f00c fab7 	bl	8011140 <HAL_GPIO_Init>
 8004bd2:	4b37      	ldr	r3, [pc, #220]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bd4:	4a37      	ldr	r2, [pc, #220]	; (8004cb4 <HAL_UART_MspInit+0x370>)
 8004bd6:	601a      	str	r2, [r3, #0]
 8004bd8:	4b35      	ldr	r3, [pc, #212]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bda:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8004bde:	605a      	str	r2, [r3, #4]
 8004be0:	4b33      	ldr	r3, [pc, #204]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004be2:	2200      	movs	r2, #0
 8004be4:	609a      	str	r2, [r3, #8]
 8004be6:	4b32      	ldr	r3, [pc, #200]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004be8:	2200      	movs	r2, #0
 8004bea:	60da      	str	r2, [r3, #12]
 8004bec:	4b30      	ldr	r3, [pc, #192]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004bf2:	611a      	str	r2, [r3, #16]
 8004bf4:	4b2e      	ldr	r3, [pc, #184]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	615a      	str	r2, [r3, #20]
 8004bfa:	4b2d      	ldr	r3, [pc, #180]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	619a      	str	r2, [r3, #24]
 8004c00:	4b2b      	ldr	r3, [pc, #172]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004c06:	61da      	str	r2, [r3, #28]
 8004c08:	4b29      	ldr	r3, [pc, #164]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	621a      	str	r2, [r3, #32]
 8004c0e:	4b28      	ldr	r3, [pc, #160]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c10:	2200      	movs	r2, #0
 8004c12:	625a      	str	r2, [r3, #36]	; 0x24
 8004c14:	4826      	ldr	r0, [pc, #152]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c16:	f00b fe85 	bl	8010924 <HAL_DMA_Init>
 8004c1a:	4603      	mov	r3, r0
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d001      	beq.n	8004c24 <HAL_UART_MspInit+0x2e0>
 8004c20:	f7fe ffcf 	bl	8003bc2 <Error_Handler>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	4a22      	ldr	r2, [pc, #136]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c28:	639a      	str	r2, [r3, #56]	; 0x38
 8004c2a:	4a21      	ldr	r2, [pc, #132]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	6393      	str	r3, [r2, #56]	; 0x38
 8004c30:	4b21      	ldr	r3, [pc, #132]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c32:	4a22      	ldr	r2, [pc, #136]	; (8004cbc <HAL_UART_MspInit+0x378>)
 8004c34:	601a      	str	r2, [r3, #0]
 8004c36:	4b20      	ldr	r3, [pc, #128]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c38:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8004c3c:	605a      	str	r2, [r3, #4]
 8004c3e:	4b1e      	ldr	r3, [pc, #120]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c40:	2240      	movs	r2, #64	; 0x40
 8004c42:	609a      	str	r2, [r3, #8]
 8004c44:	4b1c      	ldr	r3, [pc, #112]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c46:	2200      	movs	r2, #0
 8004c48:	60da      	str	r2, [r3, #12]
 8004c4a:	4b1b      	ldr	r3, [pc, #108]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c4c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004c50:	611a      	str	r2, [r3, #16]
 8004c52:	4b19      	ldr	r3, [pc, #100]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c54:	2200      	movs	r2, #0
 8004c56:	615a      	str	r2, [r3, #20]
 8004c58:	4b17      	ldr	r3, [pc, #92]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c5a:	2200      	movs	r2, #0
 8004c5c:	619a      	str	r2, [r3, #24]
 8004c5e:	4b16      	ldr	r3, [pc, #88]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c60:	2200      	movs	r2, #0
 8004c62:	61da      	str	r2, [r3, #28]
 8004c64:	4b14      	ldr	r3, [pc, #80]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c66:	2200      	movs	r2, #0
 8004c68:	621a      	str	r2, [r3, #32]
 8004c6a:	4b13      	ldr	r3, [pc, #76]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c6c:	2200      	movs	r2, #0
 8004c6e:	625a      	str	r2, [r3, #36]	; 0x24
 8004c70:	4811      	ldr	r0, [pc, #68]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c72:	f00b fe57 	bl	8010924 <HAL_DMA_Init>
 8004c76:	4603      	mov	r3, r0
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d001      	beq.n	8004c80 <HAL_UART_MspInit+0x33c>
 8004c7c:	f7fe ffa1 	bl	8003bc2 <Error_Handler>
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	4a0d      	ldr	r2, [pc, #52]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c84:	635a      	str	r2, [r3, #52]	; 0x34
 8004c86:	4a0c      	ldr	r2, [pc, #48]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	6393      	str	r3, [r2, #56]	; 0x38
 8004c8c:	2200      	movs	r2, #0
 8004c8e:	2105      	movs	r1, #5
 8004c90:	2047      	movs	r0, #71	; 0x47
 8004c92:	f00b fe1d 	bl	80108d0 <HAL_NVIC_SetPriority>
 8004c96:	2047      	movs	r0, #71	; 0x47
 8004c98:	f00b fe36 	bl	8010908 <HAL_NVIC_EnableIRQ>
 8004c9c:	bf00      	nop
 8004c9e:	3738      	adds	r7, #56	; 0x38
 8004ca0:	46bd      	mov	sp, r7
 8004ca2:	bd80      	pop	{r7, pc}
 8004ca4:	40011400 	.word	0x40011400
 8004ca8:	40023800 	.word	0x40023800
 8004cac:	40021800 	.word	0x40021800
 8004cb0:	200017e8 	.word	0x200017e8
 8004cb4:	40026428 	.word	0x40026428
 8004cb8:	20001848 	.word	0x20001848
 8004cbc:	400264a0 	.word	0x400264a0

08004cc0 <Reset_Handler>:
 8004cc0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004cf8 <LoopFillZerobss+0x14>
 8004cc4:	2100      	movs	r1, #0
 8004cc6:	e003      	b.n	8004cd0 <LoopCopyDataInit>

08004cc8 <CopyDataInit>:
 8004cc8:	4b0c      	ldr	r3, [pc, #48]	; (8004cfc <LoopFillZerobss+0x18>)
 8004cca:	585b      	ldr	r3, [r3, r1]
 8004ccc:	5043      	str	r3, [r0, r1]
 8004cce:	3104      	adds	r1, #4

08004cd0 <LoopCopyDataInit>:
 8004cd0:	480b      	ldr	r0, [pc, #44]	; (8004d00 <LoopFillZerobss+0x1c>)
 8004cd2:	4b0c      	ldr	r3, [pc, #48]	; (8004d04 <LoopFillZerobss+0x20>)
 8004cd4:	1842      	adds	r2, r0, r1
 8004cd6:	429a      	cmp	r2, r3
 8004cd8:	d3f6      	bcc.n	8004cc8 <CopyDataInit>
 8004cda:	4a0b      	ldr	r2, [pc, #44]	; (8004d08 <LoopFillZerobss+0x24>)
 8004cdc:	e002      	b.n	8004ce4 <LoopFillZerobss>

08004cde <FillZerobss>:
 8004cde:	2300      	movs	r3, #0
 8004ce0:	f842 3b04 	str.w	r3, [r2], #4

08004ce4 <LoopFillZerobss>:
 8004ce4:	4b09      	ldr	r3, [pc, #36]	; (8004d0c <LoopFillZerobss+0x28>)
 8004ce6:	429a      	cmp	r2, r3
 8004ce8:	d3f9      	bcc.n	8004cde <FillZerobss>
 8004cea:	f7ff fa3b 	bl	8004164 <SystemInit>
 8004cee:	f01a fc0b 	bl	801f508 <__libc_init_array>
 8004cf2:	f7fe febb 	bl	8003a6c <main>
 8004cf6:	4770      	bx	lr
 8004cf8:	20020000 	.word	0x20020000
 8004cfc:	080275f8 	.word	0x080275f8
 8004d00:	20000000 	.word	0x20000000
 8004d04:	20000324 	.word	0x20000324
 8004d08:	20000328 	.word	0x20000328
 8004d0c:	2000f58c 	.word	0x2000f58c

08004d10 <ADC_IRQHandler>:
 8004d10:	e7fe      	b.n	8004d10 <ADC_IRQHandler>

08004d12 <PID_Init>:
#include "can_msg_processor.h"
//#include "motors_process.h"
//#include "leg_pos.h"
#include "typedefs.h"

void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004d12:	b480      	push	{r7}
 8004d14:	b08d      	sub	sp, #52	; 0x34
 8004d16:	af00      	add	r7, sp, #0
 8004d18:	62f8      	str	r0, [r7, #44]	; 0x2c
 8004d1a:	ed87 0b08 	vstr	d0, [r7, #32]
 8004d1e:	ed87 1b06 	vstr	d1, [r7, #24]
 8004d22:	ed87 2b04 	vstr	d2, [r7, #16]
 8004d26:	ed87 3b02 	vstr	d3, [r7, #8]
 8004d2a:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004d2e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d30:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004d34:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004d38:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d3a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004d3e:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004d42:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004d48:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004d4c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d4e:	f04f 0200 	mov.w	r2, #0
 8004d52:	f04f 0300 	mov.w	r3, #0
 8004d56:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004d5a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d5c:	f04f 0200 	mov.w	r2, #0
 8004d60:	f04f 0300 	mov.w	r3, #0
 8004d64:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004d68:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d6a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004d6e:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    pid->min_output = min_output;
 8004d72:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d74:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004d78:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
}
 8004d7c:	bf00      	nop
 8004d7e:	3734      	adds	r7, #52	; 0x34
 8004d80:	46bd      	mov	sp, r7
 8004d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d86:	4770      	bx	lr

08004d88 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004d88:	b5b0      	push	{r4, r5, r7, lr}
 8004d8a:	b090      	sub	sp, #64	; 0x40
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6278      	str	r0, [r7, #36]	; 0x24
 8004d90:	ed87 0b06 	vstr	d0, [r7, #24]
 8004d94:	ed87 1b04 	vstr	d1, [r7, #16]
 8004d98:	ed87 2b02 	vstr	d2, [r7, #8]
 8004d9c:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004da0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004da4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004da8:	f7fb fa6e 	bl	8000288 <__aeabi_dsub>
 8004dac:	4602      	mov	r2, r0
 8004dae:	460b      	mov	r3, r1
 8004db0:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    if (error < deadzone && error > -deadzone ){
 8004db4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004db8:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dbc:	f7fb fe8e 	bl	8000adc <__aeabi_dcmplt>
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d012      	beq.n	8004dec <PID_Compute+0x64>
 8004dc6:	683c      	ldr	r4, [r7, #0]
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8004dce:	4622      	mov	r2, r4
 8004dd0:	462b      	mov	r3, r5
 8004dd2:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dd6:	f7fb fe9f 	bl	8000b18 <__aeabi_dcmpgt>
 8004dda:	4603      	mov	r3, r0
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d005      	beq.n	8004dec <PID_Compute+0x64>
        error = 0.0;
 8004de0:	f04f 0200 	mov.w	r2, #0
 8004de4:	f04f 0300 	mov.w	r3, #0
 8004de8:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    }
    pid->integral += error * dt;
 8004dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dee:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004df2:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004df6:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dfa:	f7fb fbfd 	bl	80005f8 <__aeabi_dmul>
 8004dfe:	4602      	mov	r2, r0
 8004e00:	460b      	mov	r3, r1
 8004e02:	4620      	mov	r0, r4
 8004e04:	4629      	mov	r1, r5
 8004e06:	f7fb fa41 	bl	800028c <__adddf3>
 8004e0a:	4602      	mov	r2, r0
 8004e0c:	460b      	mov	r3, r1
 8004e0e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004e10:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004e14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e16:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004e1a:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004e1e:	f7fb fa33 	bl	8000288 <__aeabi_dsub>
 8004e22:	4602      	mov	r2, r0
 8004e24:	460b      	mov	r3, r1
 8004e26:	4610      	mov	r0, r2
 8004e28:	4619      	mov	r1, r3
 8004e2a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004e2e:	f7fb fd0d 	bl	800084c <__aeabi_ddiv>
 8004e32:	4602      	mov	r2, r0
 8004e34:	460b      	mov	r3, r1
 8004e36:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004e3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e3c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004e40:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004e44:	f7fb fbd8 	bl	80005f8 <__aeabi_dmul>
 8004e48:	4602      	mov	r2, r0
 8004e4a:	460b      	mov	r3, r1
 8004e4c:	4614      	mov	r4, r2
 8004e4e:	461d      	mov	r5, r3
 8004e50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e52:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e58:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004e5c:	f7fb fbcc 	bl	80005f8 <__aeabi_dmul>
 8004e60:	4602      	mov	r2, r0
 8004e62:	460b      	mov	r3, r1
 8004e64:	4620      	mov	r0, r4
 8004e66:	4629      	mov	r1, r5
 8004e68:	f7fb fa10 	bl	800028c <__adddf3>
 8004e6c:	4602      	mov	r2, r0
 8004e6e:	460b      	mov	r3, r1
 8004e70:	4614      	mov	r4, r2
 8004e72:	461d      	mov	r5, r3
 8004e74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e76:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004e7a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8004e7e:	f7fb fbbb 	bl	80005f8 <__aeabi_dmul>
 8004e82:	4602      	mov	r2, r0
 8004e84:	460b      	mov	r3, r1
 8004e86:	4620      	mov	r0, r4
 8004e88:	4629      	mov	r1, r5
 8004e8a:	f7fb f9ff 	bl	800028c <__adddf3>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	460b      	mov	r3, r1
 8004e92:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004e96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e98:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8004e9c:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004ea0:	f7fb fe3a 	bl	8000b18 <__aeabi_dcmpgt>
 8004ea4:	4603      	mov	r3, r0
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d005      	beq.n	8004eb6 <PID_Compute+0x12e>
        output = pid->max_output;
 8004eaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eac:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8004eb0:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 8004eb4:	e00e      	b.n	8004ed4 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eb8:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8004ebc:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004ec0:	f7fb fe0c 	bl	8000adc <__aeabi_dcmplt>
 8004ec4:	4603      	mov	r3, r0
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d004      	beq.n	8004ed4 <PID_Compute+0x14c>
        output = pid->min_output;
 8004eca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ecc:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8004ed0:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
    }

    pid->prev_error = error;
 8004ed4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004ed6:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004eda:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004ede:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004ee0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8004ee4:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
}
 8004ee8:	bf00      	nop
 8004eea:	eeb0 0a47 	vmov.f32	s0, s14
 8004eee:	eef0 0a67 	vmov.f32	s1, s15
 8004ef2:	3740      	adds	r7, #64	; 0x40
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bdb0      	pop	{r4, r5, r7, pc}

08004ef8 <buzzing_task>:
 4, 3, 1, 8
 };
 */

//fun
void buzzing_task(void *argument) {
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b086      	sub	sp, #24
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	6078      	str	r0, [r7, #4]
	uint8_t buzzing_type;
	TickType_t last_wake_time;
	uint16_t note_time;
	float semiquaver_time = 60000 / (4 * TEMPO);
 8004f00:	4b81      	ldr	r3, [pc, #516]	; (8005108 <buzzing_task+0x210>)
 8004f02:	613b      	str	r3, [r7, #16]
	while (1) {
		xQueueReceive(buzzing_task_msg, &buzzing_type, portMAX_DELAY);
 8004f04:	4b81      	ldr	r3, [pc, #516]	; (800510c <buzzing_task+0x214>)
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f107 010d 	add.w	r1, r7, #13
 8004f0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004f10:	4618      	mov	r0, r3
 8004f12:	f017 f937 	bl	801c184 <xQueueReceive>
		switch (buzzing_type) {
 8004f16:	7b7b      	ldrb	r3, [r7, #13]
 8004f18:	2b0a      	cmp	r3, #10
 8004f1a:	f200 80e8 	bhi.w	80050ee <buzzing_task+0x1f6>
 8004f1e:	a201      	add	r2, pc, #4	; (adr r2, 8004f24 <buzzing_task+0x2c>)
 8004f20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f24:	08004f51 	.word	0x08004f51
 8004f28:	08004fd9 	.word	0x08004fd9
 8004f2c:	080050ef 	.word	0x080050ef
 8004f30:	0800503d 	.word	0x0800503d
 8004f34:	0800500b 	.word	0x0800500b
 8004f38:	08005075 	.word	0x08005075
 8004f3c:	080050cf 	.word	0x080050cf
 8004f40:	080050df 	.word	0x080050df
 8004f44:	080050a1 	.word	0x080050a1
 8004f48:	080050b1 	.word	0x080050b1
 8004f4c:	080050c1 	.word	0x080050c1
		case song:
			for (uint16_t i = 0; i < sizeof(melody) / sizeof(uint16_t); i++) {
 8004f50:	2300      	movs	r3, #0
 8004f52:	82fb      	strh	r3, [r7, #22]
 8004f54:	e03c      	b.n	8004fd0 <buzzing_task+0xd8>
				last_wake_time = xTaskGetTickCount();
 8004f56:	f017 feeb 	bl	801cd30 <xTaskGetTickCount>
 8004f5a:	4603      	mov	r3, r0
 8004f5c:	60bb      	str	r3, [r7, #8]
				buzzer(melody[i]);
 8004f5e:	8afb      	ldrh	r3, [r7, #22]
 8004f60:	4a6b      	ldr	r2, [pc, #428]	; (8005110 <buzzing_task+0x218>)
 8004f62:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004f66:	4618      	mov	r0, r3
 8004f68:	f7fc f940 	bl	80011ec <buzzer>
				note_time = (semiquaver_time * note_length[i]);
 8004f6c:	8afb      	ldrh	r3, [r7, #22]
 8004f6e:	4a69      	ldr	r2, [pc, #420]	; (8005114 <buzzing_task+0x21c>)
 8004f70:	009b      	lsls	r3, r3, #2
 8004f72:	4413      	add	r3, r2
 8004f74:	ed93 7a00 	vldr	s14, [r3]
 8004f78:	edd7 7a04 	vldr	s15, [r7, #16]
 8004f7c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004f80:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004f84:	ee17 3a90 	vmov	r3, s15
 8004f88:	81fb      	strh	r3, [r7, #14]
				vTaskDelayUntil(&last_wake_time, note_time * 0.95);
 8004f8a:	89fb      	ldrh	r3, [r7, #14]
 8004f8c:	4618      	mov	r0, r3
 8004f8e:	f7fb fac9 	bl	8000524 <__aeabi_i2d>
 8004f92:	a35b      	add	r3, pc, #364	; (adr r3, 8005100 <buzzing_task+0x208>)
 8004f94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f98:	f7fb fb2e 	bl	80005f8 <__aeabi_dmul>
 8004f9c:	4602      	mov	r2, r0
 8004f9e:	460b      	mov	r3, r1
 8004fa0:	4610      	mov	r0, r2
 8004fa2:	4619      	mov	r1, r3
 8004fa4:	f7fb fe00 	bl	8000ba8 <__aeabi_d2uiz>
 8004fa8:	4602      	mov	r2, r0
 8004faa:	f107 0308 	add.w	r3, r7, #8
 8004fae:	4611      	mov	r1, r2
 8004fb0:	4618      	mov	r0, r3
 8004fb2:	f017 fcef 	bl	801c994 <vTaskDelayUntil>
				buzzer(0);
 8004fb6:	2000      	movs	r0, #0
 8004fb8:	f7fc f918 	bl	80011ec <buzzer>
				vTaskDelayUntil(&last_wake_time, note_time);
 8004fbc:	89fa      	ldrh	r2, [r7, #14]
 8004fbe:	f107 0308 	add.w	r3, r7, #8
 8004fc2:	4611      	mov	r1, r2
 8004fc4:	4618      	mov	r0, r3
 8004fc6:	f017 fce5 	bl	801c994 <vTaskDelayUntil>
			for (uint16_t i = 0; i < sizeof(melody) / sizeof(uint16_t); i++) {
 8004fca:	8afb      	ldrh	r3, [r7, #22]
 8004fcc:	3301      	adds	r3, #1
 8004fce:	82fb      	strh	r3, [r7, #22]
 8004fd0:	8afb      	ldrh	r3, [r7, #22]
 8004fd2:	2b7c      	cmp	r3, #124	; 0x7c
 8004fd4:	d9bf      	bls.n	8004f56 <buzzing_task+0x5e>
			}
			break;
 8004fd6:	e08a      	b.n	80050ee <buzzing_task+0x1f6>
		case ok:
			last_wake_time = xTaskGetTickCount();
 8004fd8:	f017 feaa 	bl	801cd30 <xTaskGetTickCount>
 8004fdc:	4603      	mov	r3, r0
 8004fde:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_HIGH);
 8004fe0:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8004fe4:	f7fc f902 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8004fe8:	2064      	movs	r0, #100	; 0x64
 8004fea:	f017 fd51 	bl	801ca90 <vTaskDelay>
			buzzer(0);
 8004fee:	2000      	movs	r0, #0
 8004ff0:	f7fc f8fc 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8004ff4:	2032      	movs	r0, #50	; 0x32
 8004ff6:	f017 fd4b 	bl	801ca90 <vTaskDelay>
			buzzer(BUZZER_LOW);
 8004ffa:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8004ffe:	f7fc f8f5 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005002:	2064      	movs	r0, #100	; 0x64
 8005004:	f017 fd44 	bl	801ca90 <vTaskDelay>
			break;
 8005008:	e071      	b.n	80050ee <buzzing_task+0x1f6>
//			buzzer(BUZZER_HIGH);
//			vTaskDelay(BUZZ_TIME);
//			buzzer(0);
//			break;
		case control_control:
			last_wake_time = xTaskGetTickCount();
 800500a:	f017 fe91 	bl	801cd30 <xTaskGetTickCount>
 800500e:	4603      	mov	r3, r0
 8005010:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_LOW);
 8005012:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005016:	f7fc f8e9 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800501a:	2064      	movs	r0, #100	; 0x64
 800501c:	f017 fd38 	bl	801ca90 <vTaskDelay>
			buzzer(0);
 8005020:	2000      	movs	r0, #0
 8005022:	f7fc f8e3 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8005026:	2032      	movs	r0, #50	; 0x32
 8005028:	f017 fd32 	bl	801ca90 <vTaskDelay>
			buzzer(BUZZER_LOW);
 800502c:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005030:	f7fc f8dc 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005034:	2064      	movs	r0, #100	; 0x64
 8005036:	f017 fd2b 	bl	801ca90 <vTaskDelay>
			break;
 800503a:	e058      	b.n	80050ee <buzzing_task+0x1f6>
		case control_keyboard:
			last_wake_time = xTaskGetTickCount();
 800503c:	f017 fe78 	bl	801cd30 <xTaskGetTickCount>
 8005040:	4603      	mov	r3, r0
 8005042:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_HIGH);
 8005044:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005048:	f7fc f8d0 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800504c:	2064      	movs	r0, #100	; 0x64
 800504e:	f017 fd1f 	bl	801ca90 <vTaskDelay>
			buzzer(0);
 8005052:	2000      	movs	r0, #0
 8005054:	f7fc f8ca 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8005058:	2032      	movs	r0, #50	; 0x32
 800505a:	f017 fd19 	bl	801ca90 <vTaskDelay>
			buzzer(BUZZER_HIGH);
 800505e:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005062:	f7fc f8c3 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005066:	2064      	movs	r0, #100	; 0x64
 8005068:	f017 fd12 	bl	801ca90 <vTaskDelay>
			buzzer(BUZZ_TIME);
 800506c:	2064      	movs	r0, #100	; 0x64
 800506e:	f7fc f8bd 	bl	80011ec <buzzer>
			break;
 8005072:	e03c      	b.n	80050ee <buzzing_task+0x1f6>

		case control_sbc:
			buzzer(BUZZER_LOW);
 8005074:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005078:	f7fc f8b8 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800507c:	2064      	movs	r0, #100	; 0x64
 800507e:	f017 fd07 	bl	801ca90 <vTaskDelay>
			buzzer((BUZZER_HIGH+BUZZER_LOW)/2);
 8005082:	f240 404c 	movw	r0, #1100	; 0x44c
 8005086:	f7fc f8b1 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800508a:	2064      	movs	r0, #100	; 0x64
 800508c:	f017 fd00 	bl	801ca90 <vTaskDelay>
			buzzer(BUZZER_HIGH);;
 8005090:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005094:	f7fc f8aa 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005098:	2064      	movs	r0, #100	; 0x64
 800509a:	f017 fcf9 	bl	801ca90 <vTaskDelay>
			break;
 800509e:	e026      	b.n	80050ee <buzzing_task+0x1f6>


		case bz_debug_low:
			buzzer(DEBUG_LOW_FREQ);
 80050a0:	f44f 70b9 	mov.w	r0, #370	; 0x172
 80050a4:	f7fc f8a2 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050a8:	2064      	movs	r0, #100	; 0x64
 80050aa:	f017 fcf1 	bl	801ca90 <vTaskDelay>
			break;
 80050ae:	e01e      	b.n	80050ee <buzzing_task+0x1f6>

		case bz_debug_high:
			buzzer(DEBUG_HIGH_FREQ);
 80050b0:	f640 1082 	movw	r0, #2434	; 0x982
 80050b4:	f7fc f89a 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050b8:	2064      	movs	r0, #100	; 0x64
 80050ba:	f017 fce9 	bl	801ca90 <vTaskDelay>
			break;
 80050be:	e016      	b.n	80050ee <buzzing_task+0x1f6>

		case bz_debug_rest:
			buzzer(0);
 80050c0:	2000      	movs	r0, #0
 80050c2:	f7fc f893 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 80050c6:	2032      	movs	r0, #50	; 0x32
 80050c8:	f017 fce2 	bl	801ca90 <vTaskDelay>
			break;
 80050cc:	e00f      	b.n	80050ee <buzzing_task+0x1f6>
		case bz_high:
			buzzer(BUZZER_HIGH);
 80050ce:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 80050d2:	f7fc f88b 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050d6:	2064      	movs	r0, #100	; 0x64
 80050d8:	f017 fcda 	bl	801ca90 <vTaskDelay>
			break;
 80050dc:	e007      	b.n	80050ee <buzzing_task+0x1f6>
		case bz_low:
			buzzer(BUZZER_LOW);
 80050de:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 80050e2:	f7fc f883 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050e6:	2064      	movs	r0, #100	; 0x64
 80050e8:	f017 fcd2 	bl	801ca90 <vTaskDelay>
			break;
 80050ec:	bf00      	nop
		}
		buzzer(0);
 80050ee:	2000      	movs	r0, #0
 80050f0:	f7fc f87c 	bl	80011ec <buzzer>
		vTaskDelay(GAP_TIME);
 80050f4:	2032      	movs	r0, #50	; 0x32
 80050f6:	f017 fccb 	bl	801ca90 <vTaskDelay>
		xQueueReceive(buzzing_task_msg, &buzzing_type, portMAX_DELAY);
 80050fa:	e703      	b.n	8004f04 <buzzing_task+0xc>
 80050fc:	f3af 8000 	nop.w
 8005100:	66666666 	.word	0x66666666
 8005104:	3fee6666 	.word	0x3fee6666
 8005108:	42fa0000 	.word	0x42fa0000
 800510c:	200004e4 	.word	0x200004e4
 8005110:	08026bd0 	.word	0x08026bd0
 8005114:	08026ccc 	.word	0x08026ccc

08005118 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 8005118:	b580      	push	{r7, lr}
 800511a:	b08c      	sub	sp, #48	; 0x30
 800511c:	af00      	add	r7, sp, #0
 800511e:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	4a1f      	ldr	r2, [pc, #124]	; (80051a4 <can_ISR+0x8c>)
 8005126:	4293      	cmp	r3, r2
 8005128:	d118      	bne.n	800515c <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 800512a:	210e      	movs	r1, #14
 800512c:	6878      	ldr	r0, [r7, #4]
 800512e:	f00b f8ca 	bl	80102c6 <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL | CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8005132:	f107 020c 	add.w	r2, r7, #12
 8005136:	f107 0314 	add.w	r3, r7, #20
 800513a:	4619      	mov	r1, r3
 800513c:	481a      	ldr	r0, [pc, #104]	; (80051a8 <can_ISR+0x90>)
 800513e:	f7fc f88d 	bl	800125c <can1_get_msg>
		convert_raw_can_data(can_motors, rx_msg_header.StdId, rx_buffer);
 8005142:	697b      	ldr	r3, [r7, #20]
 8005144:	b29b      	uxth	r3, r3
 8005146:	f107 020c 	add.w	r2, r7, #12
 800514a:	4619      	mov	r1, r3
 800514c:	4817      	ldr	r0, [pc, #92]	; (80051ac <can_ISR+0x94>)
 800514e:	f000 f833 	bl	80051b8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8005152:	210e      	movs	r1, #14
 8005154:	6878      	ldr	r0, [r7, #4]
 8005156:	f00b f890 	bl	801027a <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 800515a:	e01e      	b.n	800519a <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	681b      	ldr	r3, [r3, #0]
 8005160:	4a13      	ldr	r2, [pc, #76]	; (80051b0 <can_ISR+0x98>)
 8005162:	4293      	cmp	r3, r2
 8005164:	d119      	bne.n	800519a <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8005166:	2170      	movs	r1, #112	; 0x70
 8005168:	6878      	ldr	r0, [r7, #4]
 800516a:	f00b f8ac 	bl	80102c6 <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 800516e:	f107 020c 	add.w	r2, r7, #12
 8005172:	f107 0314 	add.w	r3, r7, #20
 8005176:	4619      	mov	r1, r3
 8005178:	480e      	ldr	r0, [pc, #56]	; (80051b4 <can_ISR+0x9c>)
 800517a:	f7fc f880 	bl	800127e <can2_get_msg>
		convert_raw_can_data(can_motors, rx_msg_header.StdId + 12, rx_buffer);
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	b29b      	uxth	r3, r3
 8005182:	330c      	adds	r3, #12
 8005184:	b29b      	uxth	r3, r3
 8005186:	f107 020c 	add.w	r2, r7, #12
 800518a:	4619      	mov	r1, r3
 800518c:	4807      	ldr	r0, [pc, #28]	; (80051ac <can_ISR+0x94>)
 800518e:	f000 f813 	bl	80051b8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8005192:	2170      	movs	r1, #112	; 0x70
 8005194:	6878      	ldr	r0, [r7, #4]
 8005196:	f00b f870 	bl	801027a <HAL_CAN_ActivateNotification>
}
 800519a:	bf00      	nop
 800519c:	3730      	adds	r7, #48	; 0x30
 800519e:	46bd      	mov	sp, r7
 80051a0:	bd80      	pop	{r7, pc}
 80051a2:	bf00      	nop
 80051a4:	40006400 	.word	0x40006400
 80051a8:	20000434 	.word	0x20000434
 80051ac:	200018a8 	.word	0x200018a8
 80051b0:	40006800 	.word	0x40006800
 80051b4:	2000045c 	.word	0x2000045c

080051b8 <convert_raw_can_data>:
 * in the struct for the motor.
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id, uint8_t *rx_buffer) {
 80051b8:	b580      	push	{r7, lr}
 80051ba:	b08a      	sub	sp, #40	; 0x28
 80051bc:	af00      	add	r7, sp, #0
 80051be:	60f8      	str	r0, [r7, #12]
 80051c0:	460b      	mov	r3, r1
 80051c2:	607a      	str	r2, [r7, #4]
 80051c4:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 80051c6:	897b      	ldrh	r3, [r7, #10]
 80051c8:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 80051cc:	847b      	strh	r3, [r7, #34]	; 0x22

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24)
 80051ce:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80051d0:	2b18      	cmp	r3, #24
 80051d2:	f200 8160 	bhi.w	8005496 <convert_raw_can_data+0x2de>
	{
		return;
	}
	motor_data_t* curr_motor = &can_motor_data[idnum];
 80051d6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80051d8:	4613      	mov	r3, r2
 80051da:	011b      	lsls	r3, r3, #4
 80051dc:	1a9b      	subs	r3, r3, r2
 80051de:	011b      	lsls	r3, r3, #4
 80051e0:	461a      	mov	r2, r3
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	4413      	add	r3, r2
 80051e6:	61fb      	str	r3, [r7, #28]
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 80051e8:	69fb      	ldr	r3, [r7, #28]
 80051ea:	789b      	ldrb	r3, [r3, #2]
 80051ec:	2b00      	cmp	r3, #0
 80051ee:	f000 814f 	beq.w	8005490 <convert_raw_can_data+0x2d8>
		//convert the raw data back into the respective values
		curr_motor->id 				= motor_id;
 80051f2:	69fb      	ldr	r3, [r7, #28]
 80051f4:	897a      	ldrh	r2, [r7, #10]
 80051f6:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	781b      	ldrb	r3, [r3, #0]
 80051fc:	021b      	lsls	r3, r3, #8
 80051fe:	b21a      	sxth	r2, r3
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	3301      	adds	r3, #1
 8005204:	781b      	ldrb	r3, [r3, #0]
 8005206:	b21b      	sxth	r3, r3
 8005208:	4313      	orrs	r3, r2
 800520a:	b21a      	sxth	r2, r3
 800520c:	69fb      	ldr	r3, [r7, #28]
 800520e:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm						=(rx_buffer[2] << 8) | rx_buffer[3];
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	3302      	adds	r3, #2
 8005214:	781b      	ldrb	r3, [r3, #0]
 8005216:	021b      	lsls	r3, r3, #8
 8005218:	b21a      	sxth	r2, r3
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	3303      	adds	r3, #3
 800521e:	781b      	ldrb	r3, [r3, #0]
 8005220:	b21b      	sxth	r3, r3
 8005222:	4313      	orrs	r3, r2
 8005224:	833b      	strh	r3, [r7, #24]
		curr_motor->raw_data.rpm 		= curr_motor->raw_data.rpm * SPEED_LPF + temp_rpm * (1-SPEED_LPF);
 8005226:	69fb      	ldr	r3, [r7, #28]
 8005228:	8b3a      	ldrh	r2, [r7, #24]
 800522a:	811a      	strh	r2, [r3, #8]
		curr_motor->raw_data.torque 	= (rx_buffer[4] << 8) | rx_buffer[5];
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	3304      	adds	r3, #4
 8005230:	781b      	ldrb	r3, [r3, #0]
 8005232:	021b      	lsls	r3, r3, #8
 8005234:	b21a      	sxth	r2, r3
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	3305      	adds	r3, #5
 800523a:	781b      	ldrb	r3, [r3, #0]
 800523c:	b21b      	sxth	r3, r3
 800523e:	4313      	orrs	r3, r2
 8005240:	b21a      	sxth	r2, r3
 8005242:	69fb      	ldr	r3, [r7, #28]
 8005244:	815a      	strh	r2, [r3, #10]
		curr_motor->raw_data.temp 	= (rx_buffer[6]);
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	799a      	ldrb	r2, [r3, #6]
 800524a:	69fb      	ldr	r3, [r7, #28]
 800524c:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] 		= curr_motor->last_time[0];
 800524e:	69fb      	ldr	r3, [r7, #28]
 8005250:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8005254:	69fb      	ldr	r3, [r7, #28]
 8005256:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
		curr_motor->last_time[0]	 	= get_microseconds();
 800525a:	f7fd f809 	bl	8002270 <get_microseconds>
 800525e:	4602      	mov	r2, r0
 8005260:	69fb      	ldr	r3, [r7, #28]
 8005262:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4

		float rds_passed = (float)(curr_motor->raw_data.angle[0] - curr_motor->raw_data.angle[1]) /8192;
 8005266:	69fb      	ldr	r3, [r7, #28]
 8005268:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800526c:	461a      	mov	r2, r3
 800526e:	69fb      	ldr	r3, [r7, #28]
 8005270:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8005274:	1ad3      	subs	r3, r2, r3
 8005276:	ee07 3a90 	vmov	s15, r3
 800527a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800527e:	eddf 6a88 	vldr	s13, [pc, #544]	; 80054a0 <convert_raw_can_data+0x2e8>
 8005282:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005286:	edc7 7a05 	vstr	s15, [r7, #20]
		curr_motor->angle_data.hires_rpm = (rds_passed * TIMER_FREQ
 800528a:	edd7 7a05 	vldr	s15, [r7, #20]
 800528e:	ed9f 7a85 	vldr	s14, [pc, #532]	; 80054a4 <convert_raw_can_data+0x2ec>
 8005292:	ee67 6a87 	vmul.f32	s13, s15, s14
				/ curr_motor->last_time[0] - curr_motor->last_time[1]) * 60;
 8005296:	69fb      	ldr	r3, [r7, #28]
 8005298:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800529c:	ee07 3a90 	vmov	s15, r3
 80052a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80052a4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80052a8:	69fb      	ldr	r3, [r7, #28]
 80052aa:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80052ae:	ee07 3a90 	vmov	s15, r3
 80052b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80052b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80052ba:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 80054a8 <convert_raw_can_data+0x2f0>
 80052be:	ee67 7a87 	vmul.f32	s15, s15, s14
		curr_motor->angle_data.hires_rpm = (rds_passed * TIMER_FREQ
 80052c2:	69fb      	ldr	r3, [r7, #28]
 80052c4:	edc3 7a36 	vstr	s15, [r3, #216]	; 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 80052c8:	69fb      	ldr	r3, [r7, #28]
 80052ca:	789b      	ldrb	r3, [r3, #2]
 80052cc:	3b01      	subs	r3, #1
 80052ce:	2b08      	cmp	r3, #8
 80052d0:	d84e      	bhi.n	8005370 <convert_raw_can_data+0x1b8>
 80052d2:	a201      	add	r2, pc, #4	; (adr r2, 80052d8 <convert_raw_can_data+0x120>)
 80052d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052d8:	080052fd 	.word	0x080052fd
 80052dc:	0800530f 	.word	0x0800530f
 80052e0:	0800530f 	.word	0x0800530f
 80052e4:	08005371 	.word	0x08005371
 80052e8:	08005335 	.word	0x08005335
 80052ec:	08005335 	.word	0x08005335
 80052f0:	0800534b 	.word	0x0800534b
 80052f4:	0800534b 	.word	0x0800534b
 80052f8:	0800534b 	.word	0x0800534b
		case TYPE_GM6020:
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80052fc:	69fb      	ldr	r3, [r7, #28]
 80052fe:	1d1a      	adds	r2, r3, #4
 8005300:	69fb      	ldr	r3, [r7, #28]
 8005302:	3398      	adds	r3, #152	; 0x98
 8005304:	4619      	mov	r1, r3
 8005306:	4610      	mov	r0, r2
 8005308:	f000 f8d8 	bl	80054bc <angle_offset>
			break;
 800530c:	e031      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800530e:	69fb      	ldr	r3, [r7, #28]
 8005310:	1d18      	adds	r0, r3, #4
 8005312:	69fb      	ldr	r3, [r7, #28]
 8005314:	f103 0198 	add.w	r1, r3, #152	; 0x98
								curr_motor->last_time);
 8005318:	69fb      	ldr	r3, [r7, #28]
 800531a:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800531c:	461a      	mov	r2, r3
 800531e:	f000 f989 	bl	8005634 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005322:	69fb      	ldr	r3, [r7, #28]
 8005324:	1d1a      	adds	r2, r3, #4
 8005326:	69fb      	ldr	r3, [r7, #28]
 8005328:	3398      	adds	r3, #152	; 0x98
 800532a:	4619      	mov	r1, r3
 800532c:	4610      	mov	r0, r2
 800532e:	f000 f8c5 	bl	80054bc <angle_offset>
			break;
 8005332:	e01e      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006_STEPS:
		case TYPE_M3508_STEPS:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005334:	69fb      	ldr	r3, [r7, #28]
 8005336:	1d18      	adds	r0, r3, #4
 8005338:	69fb      	ldr	r3, [r7, #28]
 800533a:	f103 0198 	add.w	r1, r3, #152	; 0x98
					curr_motor->last_time);
 800533e:	69fb      	ldr	r3, [r7, #28]
 8005340:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005342:	461a      	mov	r2, r3
 8005344:	f000 f976 	bl	8005634 <motor_calc_odometry>
			break;
 8005348:	e013      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800534a:	69fb      	ldr	r3, [r7, #28]
 800534c:	1d18      	adds	r0, r3, #4
 800534e:	69fb      	ldr	r3, [r7, #28]
 8005350:	f103 0198 	add.w	r1, r3, #152	; 0x98
					curr_motor->last_time);
 8005354:	69fb      	ldr	r3, [r7, #28]
 8005356:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005358:	461a      	mov	r2, r3
 800535a:	f000 f96b 	bl	8005634 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 800535e:	69fb      	ldr	r3, [r7, #28]
 8005360:	1d1a      	adds	r2, r3, #4
 8005362:	69fb      	ldr	r3, [r7, #28]
 8005364:	3398      	adds	r3, #152	; 0x98
 8005366:	4619      	mov	r1, r3
 8005368:	4610      	mov	r0, r2
 800536a:	f000 f8a7 	bl	80054bc <angle_offset>
			break;
 800536e:	e000      	b.n	8005372 <convert_raw_can_data+0x1ba>
		default:
			break;
 8005370:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 8005372:	2300      	movs	r3, #0
 8005374:	613b      	str	r3, [r7, #16]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8005376:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8005378:	3301      	adds	r3, #1
 800537a:	3b01      	subs	r3, #1
 800537c:	2b16      	cmp	r3, #22
 800537e:	d877      	bhi.n	8005470 <convert_raw_can_data+0x2b8>
 8005380:	a201      	add	r2, pc, #4	; (adr r2, 8005388 <convert_raw_can_data+0x1d0>)
 8005382:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005386:	bf00      	nop
 8005388:	080053e5 	.word	0x080053e5
 800538c:	080053f9 	.word	0x080053f9
 8005390:	08005471 	.word	0x08005471
 8005394:	08005471 	.word	0x08005471
 8005398:	0800545d 	.word	0x0800545d
 800539c:	08005471 	.word	0x08005471
 80053a0:	08005471 	.word	0x08005471
 80053a4:	08005449 	.word	0x08005449
 80053a8:	08005471 	.word	0x08005471
 80053ac:	08005471 	.word	0x08005471
 80053b0:	08005471 	.word	0x08005471
 80053b4:	08005471 	.word	0x08005471
 80053b8:	08005471 	.word	0x08005471
 80053bc:	08005471 	.word	0x08005471
 80053c0:	08005471 	.word	0x08005471
 80053c4:	08005471 	.word	0x08005471
 80053c8:	08005471 	.word	0x08005471
 80053cc:	08005435 	.word	0x08005435
 80053d0:	08005421 	.word	0x08005421
 80053d4:	08005471 	.word	0x08005471
 80053d8:	08005471 	.word	0x08005471
 80053dc:	08005471 	.word	0x08005471
 80053e0:	0800540d 	.word	0x0800540d
		#ifndef CHASSIS_MCU
				case Leftwheel_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 80053e4:	4b31      	ldr	r3, [pc, #196]	; (80054ac <convert_raw_can_data+0x2f4>)
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	f107 0210 	add.w	r2, r7, #16
 80053ec:	2108      	movs	r1, #8
 80053ee:	4618      	mov	r0, r3
 80053f0:	f016 fa9c 	bl	801b92c <xEventGroupSetBitsFromISR>
 80053f4:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 80053f6:	e03c      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case Rightwheel_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 80053f8:	4b2c      	ldr	r3, [pc, #176]	; (80054ac <convert_raw_can_data+0x2f4>)
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	f107 0210 	add.w	r2, r7, #16
 8005400:	2104      	movs	r1, #4
 8005402:	4618      	mov	r0, r3
 8005404:	f016 fa92 	bl	801b92c <xEventGroupSetBitsFromISR>
 8005408:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800540a:	e032      	b.n	8005472 <convert_raw_can_data+0x2ba>
//					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
//							&xHigherPriorityTaskWoken);
//					break;
		#endif
				case LFRICTION_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 800540c:	4b28      	ldr	r3, [pc, #160]	; (80054b0 <convert_raw_can_data+0x2f8>)
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f107 0210 	add.w	r2, r7, #16
 8005414:	2102      	movs	r1, #2
 8005416:	4618      	mov	r0, r3
 8005418:	f016 fa88 	bl	801b92c <xEventGroupSetBitsFromISR>
 800541c:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800541e:	e028      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case RFRICTION_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 8005420:	4b23      	ldr	r3, [pc, #140]	; (80054b0 <convert_raw_can_data+0x2f8>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	f107 0210 	add.w	r2, r7, #16
 8005428:	2101      	movs	r1, #1
 800542a:	4618      	mov	r0, r3
 800542c:	f016 fa7e 	bl	801b92c <xEventGroupSetBitsFromISR>
 8005430:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 8005432:	e01e      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case FEEDER_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8005434:	4b1e      	ldr	r3, [pc, #120]	; (80054b0 <convert_raw_can_data+0x2f8>)
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	f107 0210 	add.w	r2, r7, #16
 800543c:	2104      	movs	r1, #4
 800543e:	4618      	mov	r0, r3
 8005440:	f016 fa74 	bl	801b92c <xEventGroupSetBitsFromISR>
 8005444:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 8005446:	e014      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case L1_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 8005448:	4b1a      	ldr	r3, [pc, #104]	; (80054b4 <convert_raw_can_data+0x2fc>)
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	f107 0210 	add.w	r2, r7, #16
 8005450:	2101      	movs	r1, #1
 8005452:	4618      	mov	r0, r3
 8005454:	f016 fa6a 	bl	801b92c <xEventGroupSetBitsFromISR>
 8005458:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800545a:	e00a      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case R1_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 800545c:	4b15      	ldr	r3, [pc, #84]	; (80054b4 <convert_raw_can_data+0x2fc>)
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	f107 0210 	add.w	r2, r7, #16
 8005464:	2102      	movs	r1, #2
 8005466:	4618      	mov	r0, r3
 8005468:	f016 fa60 	bl	801b92c <xEventGroupSetBitsFromISR>
 800546c:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800546e:	e000      	b.n	8005472 <convert_raw_can_data+0x2ba>
				default:
					idnum = idnum;
					//error handler
					break;
 8005470:	bf00      	nop
				}

				//switches tasks if a higher priority task is ready.
				//required because the function is in an ISR
				if (xResult != pdFAIL) {
 8005472:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005474:	2b00      	cmp	r3, #0
 8005476:	d00f      	beq.n	8005498 <convert_raw_can_data+0x2e0>
					portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8005478:	693b      	ldr	r3, [r7, #16]
 800547a:	2b00      	cmp	r3, #0
 800547c:	d00c      	beq.n	8005498 <convert_raw_can_data+0x2e0>
 800547e:	4b0e      	ldr	r3, [pc, #56]	; (80054b8 <convert_raw_can_data+0x300>)
 8005480:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005484:	601a      	str	r2, [r3, #0]
 8005486:	f3bf 8f4f 	dsb	sy
 800548a:	f3bf 8f6f 	isb	sy
 800548e:	e003      	b.n	8005498 <convert_raw_can_data+0x2e0>
				}
			} else {
				//this is a useless statement so that it is possible to set a breakpoint here lol
				uint8_t stopper = 0;
 8005490:	2300      	movs	r3, #0
 8005492:	76fb      	strb	r3, [r7, #27]
 8005494:	e000      	b.n	8005498 <convert_raw_can_data+0x2e0>
		return;
 8005496:	bf00      	nop
				//error handler
		}
}
 8005498:	3728      	adds	r7, #40	; 0x28
 800549a:	46bd      	mov	sp, r7
 800549c:	bd80      	pop	{r7, pc}
 800549e:	bf00      	nop
 80054a0:	46000000 	.word	0x46000000
 80054a4:	461c4000 	.word	0x461c4000
 80054a8:	42700000 	.word	0x42700000
 80054ac:	200004cc 	.word	0x200004cc
 80054b0:	200004d0 	.word	0x200004d0
 80054b4:	200004c8 	.word	0x200004c8
 80054b8:	e000ed04 	.word	0xe000ed04

080054bc <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 80054bc:	b480      	push	{r7}
 80054be:	b085      	sub	sp, #20
 80054c0:	af00      	add	r7, sp, #0
 80054c2:	6078      	str	r0, [r7, #4]
 80054c4:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 80054c6:	2300      	movs	r3, #0
 80054c8:	60fb      	str	r3, [r7, #12]

	//if there's a gearbox, use the ticks after the gearbox.
	//make sure center angle is properly set with respect to the zero-ing angle
	//YOUR ROBOT MUST HAVE A WAY TO ZERO THIS ANGLE AND IMPLEMENT A ZEROING FUNCTION AT STARTUP
	//IF NOT IT WON'T WORK 							-wx
	if (angle_data->gearbox_ratio > 0) {
 80054ca:	683b      	ldr	r3, [r7, #0]
 80054cc:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80054d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054d8:	dd69      	ble.n	80055ae <angle_offset+0xf2>
		temp_ang = angle_data->ticks - angle_data->center_ang;
 80054da:	683b      	ldr	r3, [r7, #0]
 80054dc:	681a      	ldr	r2, [r3, #0]
 80054de:	683b      	ldr	r3, [r7, #0]
 80054e0:	685b      	ldr	r3, [r3, #4]
 80054e2:	1ad3      	subs	r3, r2, r3
 80054e4:	60fb      	str	r3, [r7, #12]
		if (temp_ang > (4096 * angle_data->gearbox_ratio)) {
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	ee07 3a90 	vmov	s15, r3
 80054ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80054f0:	683b      	ldr	r3, [r7, #0]
 80054f2:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80054f6:	eddf 6a4a 	vldr	s13, [pc, #296]	; 8005620 <angle_offset+0x164>
 80054fa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80054fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005506:	dd13      	ble.n	8005530 <angle_offset+0x74>
			temp_ang -= (8192 * angle_data->gearbox_ratio);
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	ee07 3a90 	vmov	s15, r3
 800550e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005512:	683b      	ldr	r3, [r7, #0]
 8005514:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005518:	eddf 6a42 	vldr	s13, [pc, #264]	; 8005624 <angle_offset+0x168>
 800551c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8005520:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005528:	ee17 3a90 	vmov	r3, s15
 800552c:	60fb      	str	r3, [r7, #12]
 800552e:	e023      	b.n	8005578 <angle_offset+0xbc>
		} else if (temp_ang < (-4096 * angle_data->gearbox_ratio)) {
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	ee07 3a90 	vmov	s15, r3
 8005536:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800553a:	683b      	ldr	r3, [r7, #0]
 800553c:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005540:	eddf 6a39 	vldr	s13, [pc, #228]	; 8005628 <angle_offset+0x16c>
 8005544:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8005548:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800554c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005550:	d512      	bpl.n	8005578 <angle_offset+0xbc>
			temp_ang += 8192 * angle_data->gearbox_ratio;
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	ee07 3a90 	vmov	s15, r3
 8005558:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800555c:	683b      	ldr	r3, [r7, #0]
 800555e:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005562:	eddf 6a30 	vldr	s13, [pc, #192]	; 8005624 <angle_offset+0x168>
 8005566:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800556a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800556e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005572:	ee17 3a90 	vmov	r3, s15
 8005576:	60fb      	str	r3, [r7, #12]
		}
		angle_data->ticks = temp_ang;
 8005578:	683b      	ldr	r3, [r7, #0]
 800557a:	68fa      	ldr	r2, [r7, #12]
 800557c:	601a      	str	r2, [r3, #0]
		angle_data->adj_ang = (float) temp_ang * 2 *PI / (8192 * angle_data->gearbox_ratio);
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	ee07 3a90 	vmov	s15, r3
 8005584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005588:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800558c:	ed9f 7a27 	vldr	s14, [pc, #156]	; 800562c <angle_offset+0x170>
 8005590:	ee67 6a87 	vmul.f32	s13, s15, s14
 8005594:	683b      	ldr	r3, [r7, #0]
 8005596:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800559a:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8005624 <angle_offset+0x168>
 800559e:	ee27 7a87 	vmul.f32	s14, s15, s14
 80055a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80055a6:	683b      	ldr	r3, [r7, #0]
 80055a8:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
		} else if (temp_ang < -4096) {
			temp_ang += 8192;
		}
		angle_data->adj_ang = (angle_data->adj_ang * ANGLE_LPF) + (float) (temp_ang * PI / 4096) * (1 - ANGLE_LPF); // convert to radians
	}
}
 80055ac:	e031      	b.n	8005612 <angle_offset+0x156>
		temp_ang = (int32_t) (motor_data->angle[0]) - angle_data->center_ang;
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80055b4:	461a      	mov	r2, r3
 80055b6:	683b      	ldr	r3, [r7, #0]
 80055b8:	685b      	ldr	r3, [r3, #4]
 80055ba:	1ad3      	subs	r3, r2, r3
 80055bc:	60fb      	str	r3, [r7, #12]
		if (temp_ang > 4096) {
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80055c4:	dd04      	ble.n	80055d0 <angle_offset+0x114>
			temp_ang -= 8192;
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80055cc:	60fb      	str	r3, [r7, #12]
 80055ce:	e007      	b.n	80055e0 <angle_offset+0x124>
		} else if (temp_ang < -4096) {
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	f513 5f80 	cmn.w	r3, #4096	; 0x1000
 80055d6:	da03      	bge.n	80055e0 <angle_offset+0x124>
			temp_ang += 8192;
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80055de:	60fb      	str	r3, [r7, #12]
		angle_data->adj_ang = (angle_data->adj_ang * ANGLE_LPF) + (float) (temp_ang * PI / 4096) * (1 - ANGLE_LPF); // convert to radians
 80055e0:	683b      	ldr	r3, [r7, #0]
 80055e2:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80055e6:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8005630 <angle_offset+0x174>
 80055ea:	ee27 7a87 	vmul.f32	s14, s15, s14
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	ee07 3a90 	vmov	s15, r3
 80055f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055f8:	eddf 6a0c 	vldr	s13, [pc, #48]	; 800562c <angle_offset+0x170>
 80055fc:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8005600:	ed9f 6a07 	vldr	s12, [pc, #28]	; 8005620 <angle_offset+0x164>
 8005604:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005608:	ee77 7a27 	vadd.f32	s15, s14, s15
 800560c:	683b      	ldr	r3, [r7, #0]
 800560e:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
}
 8005612:	bf00      	nop
 8005614:	3714      	adds	r7, #20
 8005616:	46bd      	mov	sp, r7
 8005618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800561c:	4770      	bx	lr
 800561e:	bf00      	nop
 8005620:	45800000 	.word	0x45800000
 8005624:	46000000 	.word	0x46000000
 8005628:	c5800000 	.word	0xc5800000
 800562c:	40490fdb 	.word	0x40490fdb
 8005630:	00000000 	.word	0x00000000

08005634 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data,
		angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8005634:	b480      	push	{r7}
 8005636:	b089      	sub	sp, #36	; 0x24
 8005638:	af00      	add	r7, sp, #0
 800563a:	60f8      	str	r0, [r7, #12]
 800563c:	60b9      	str	r1, [r7, #8]
 800563e:	607a      	str	r2, [r7, #4]
	int8_t int_round_passed = 0;
 8005640:	2300      	movs	r3, #0
 8005642:	77fb      	strb	r3, [r7, #31]
	//check to make sure it's not the same data point
	if (feedback_times[0] - feedback_times[1] >= 1) {
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	3304      	adds	r3, #4
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	429a      	cmp	r2, r3
 8005650:	d02e      	beq.n	80056b0 <motor_calc_odometry+0x7c>
		float rounds_passed = (((float)(feedback_times[0] - feedback_times[1]) * motor_data->rpm)/(60 * TIMER_FREQ));
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	681a      	ldr	r2, [r3, #0]
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	3304      	adds	r3, #4
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	ee07 3a90 	vmov	s15, r3
 8005662:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800566c:	ee07 3a90 	vmov	s15, r3
 8005670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005674:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005678:	eddf 6a5c 	vldr	s13, [pc, #368]	; 80057ec <motor_calc_odometry+0x1b8>
 800567c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005680:	edc7 7a06 	vstr	s15, [r7, #24]
		if (fabs(rounds_passed) >= 1) {
 8005684:	edd7 7a06 	vldr	s15, [r7, #24]
 8005688:	eef0 7ae7 	vabs.f32	s15, s15
 800568c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8005690:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005698:	db08      	blt.n	80056ac <motor_calc_odometry+0x78>
			int_round_passed = rounds_passed;
 800569a:	edd7 7a06 	vldr	s15, [r7, #24]
 800569e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056a2:	edc7 7a00 	vstr	s15, [r7]
 80056a6:	783b      	ldrb	r3, [r7, #0]
 80056a8:	77fb      	strb	r3, [r7, #31]
 80056aa:	e001      	b.n	80056b0 <motor_calc_odometry+0x7c>
		} else {
			int_round_passed = 0;
 80056ac:	2300      	movs	r3, #0
 80056ae:	77fb      	strb	r3, [r7, #31]
		}
	}
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80056b6:	b29a      	uxth	r2, r3
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80056be:	b29b      	uxth	r3, r3
 80056c0:	1ad3      	subs	r3, r2, r3
 80056c2:	b29b      	uxth	r3, r3
 80056c4:	83bb      	strh	r3, [r7, #28]
	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 80056c6:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 80056ca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80056ce:	dd05      	ble.n	80056dc <motor_calc_odometry+0xa8>
		abs_angle_diff -= 8192;
 80056d0:	8bbb      	ldrh	r3, [r7, #28]
 80056d2:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80056d6:	b29b      	uxth	r3, r3
 80056d8:	83bb      	strh	r3, [r7, #28]
 80056da:	e009      	b.n	80056f0 <motor_calc_odometry+0xbc>
	} else if (abs_angle_diff < -4096) {
 80056dc:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 80056e0:	f513 5f80 	cmn.w	r3, #4096	; 0x1000
 80056e4:	da04      	bge.n	80056f0 <motor_calc_odometry+0xbc>
		abs_angle_diff += 8192;
 80056e6:	8bbb      	ldrh	r3, [r7, #28]
 80056e8:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80056ec:	b29b      	uxth	r3, r3
 80056ee:	83bb      	strh	r3, [r7, #28]
	 } else {
	 abs_angle_diff = (8192-motor_data->angle[0]) - motor_data->angle[1];
	 }
	 }
	 */
	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 80056f0:	68bb      	ldr	r3, [r7, #8]
 80056f2:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80056f6:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 80057f0 <motor_calc_odometry+0x1bc>
 80056fa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80056fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005702:	ee17 3a90 	vmov	r3, s15
 8005706:	82fb      	strh	r3, [r7, #22]
	angle_data->ticks += (int_round_passed * 8192) + abs_angle_diff;
 8005708:	68bb      	ldr	r3, [r7, #8]
 800570a:	681a      	ldr	r2, [r3, #0]
 800570c:	f997 301f 	ldrsb.w	r3, [r7, #31]
 8005710:	0359      	lsls	r1, r3, #13
 8005712:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 8005716:	440b      	add	r3, r1
 8005718:	441a      	add	r2, r3
 800571a:	68bb      	ldr	r3, [r7, #8]
 800571c:	601a      	str	r2, [r3, #0]
	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	ee07 3a90 	vmov	s15, r3
 8005726:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800572a:	68bb      	ldr	r3, [r7, #8]
 800572c:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8005730:	ee67 6a27 	vmul.f32	s13, s14, s15
 8005734:	8afb      	ldrh	r3, [r7, #22]
 8005736:	ee07 3a90 	vmov	s15, r3
 800573a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800573e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005742:	68bb      	ldr	r3, [r7, #8]
 8005744:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
	angle_data->adj_ang = (float) (angle_data->ticks % gear_ticks ) * 2*PI/gear_ticks;
 8005748:	68bb      	ldr	r3, [r7, #8]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	8afa      	ldrh	r2, [r7, #22]
 800574e:	fb93 f1f2 	sdiv	r1, r3, r2
 8005752:	fb01 f202 	mul.w	r2, r1, r2
 8005756:	1a9b      	subs	r3, r3, r2
 8005758:	ee07 3a90 	vmov	s15, r3
 800575c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005760:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005764:	ed9f 7a23 	vldr	s14, [pc, #140]	; 80057f4 <motor_calc_odometry+0x1c0>
 8005768:	ee67 6a87 	vmul.f32	s13, s15, s14
 800576c:	8afb      	ldrh	r3, [r7, #22]
 800576e:	ee07 3a90 	vmov	s15, r3
 8005772:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005776:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800577a:	68bb      	ldr	r3, [r7, #8]
 800577c:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	angle_data->adj_ang = (angle_data->adj_ang > PI) ? (angle_data->adj_ang - 2*PI) : (angle_data->adj_ang < -PI) ? angle_data->adj_ang+2*PI : angle_data->adj_ang;
 8005780:	68bb      	ldr	r3, [r7, #8]
 8005782:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8005786:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 80057f4 <motor_calc_odometry+0x1c0>
 800578a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800578e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005792:	dd07      	ble.n	80057a4 <motor_calc_odometry+0x170>
 8005794:	68bb      	ldr	r3, [r7, #8]
 8005796:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800579a:	ed9f 7a17 	vldr	s14, [pc, #92]	; 80057f8 <motor_calc_odometry+0x1c4>
 800579e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80057a2:	e014      	b.n	80057ce <motor_calc_odometry+0x19a>
 80057a4:	68bb      	ldr	r3, [r7, #8]
 80057a6:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057aa:	ed9f 7a14 	vldr	s14, [pc, #80]	; 80057fc <motor_calc_odometry+0x1c8>
 80057ae:	eef4 7ac7 	vcmpe.f32	s15, s14
 80057b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057b6:	d507      	bpl.n	80057c8 <motor_calc_odometry+0x194>
 80057b8:	68bb      	ldr	r3, [r7, #8]
 80057ba:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057be:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80057f8 <motor_calc_odometry+0x1c4>
 80057c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057c6:	e002      	b.n	80057ce <motor_calc_odometry+0x19a>
 80057c8:	68bb      	ldr	r3, [r7, #8]
 80057ca:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057ce:	68bb      	ldr	r3, [r7, #8]
 80057d0:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	motor_data->angle[1] = motor_data->angle[0];
 80057d4:	68fb      	ldr	r3, [r7, #12]
 80057d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	805a      	strh	r2, [r3, #2]
}
 80057de:	bf00      	nop
 80057e0:	3724      	adds	r7, #36	; 0x24
 80057e2:	46bd      	mov	sp, r7
 80057e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e8:	4770      	bx	lr
 80057ea:	bf00      	nop
 80057ec:	49127c00 	.word	0x49127c00
 80057f0:	46000000 	.word	0x46000000
 80057f4:	40490fdb 	.word	0x40490fdb
 80057f8:	40c90fdb 	.word	0x40c90fdb
 80057fc:	c0490fdb 	.word	0xc0490fdb

08005800 <control_input_task>:
uint8_t safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8005800:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005804:	b088      	sub	sp, #32
 8005806:	af00      	add	r7, sp, #0
 8005808:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 800580a:	f000 f967 	bl	8005adc <control_reset>
	chassis_yaw_pid_init();
 800580e:	f000 fb61 	bl	8005ed4 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 8005812:	4b7b      	ldr	r3, [pc, #492]	; (8005a00 <control_input_task+0x200>)
 8005814:	2201      	movs	r2, #1
 8005816:	721a      	strb	r2, [r3, #8]
	aimbot_pid_init();
 8005818:	f000 fee0 	bl	80065dc <aimbot_pid_init>
	dbus_remote_start();
 800581c:	f7fb fe86 	bl	800152c <dbus_remote_start>
	gear_speed.curr_gear = 3;
 8005820:	4b78      	ldr	r3, [pc, #480]	; (8005a04 <control_input_task+0x204>)
 8005822:	2203      	movs	r2, #3
 8005824:	701a      	strb	r2, [r3, #0]
	gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005826:	4b77      	ldr	r3, [pc, #476]	; (8005a04 <control_input_task+0x204>)
 8005828:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800582c:	605a      	str	r2, [r3, #4]
	gear_speed.trans_mult = GEAR3_SPEED_MULT;
 800582e:	4b75      	ldr	r3, [pc, #468]	; (8005a04 <control_input_task+0x204>)
 8005830:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005834:	609a      	str	r2, [r3, #8]
	gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005836:	4b73      	ldr	r3, [pc, #460]	; (8005a04 <control_input_task+0x204>)
 8005838:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800583c:	60da      	str	r2, [r3, #12]
	safety_toggle = 1;
 800583e:	4b72      	ldr	r3, [pc, #456]	; (8005a08 <control_input_task+0x208>)
 8005840:	2201      	movs	r2, #1
 8005842:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 8005844:	2064      	movs	r0, #100	; 0x64
 8005846:	f017 f923 	bl	801ca90 <vTaskDelay>
	uint8_t rc_check;
	while (fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50 || fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50){
 800584a:	e01a      	b.n	8005882 <control_input_task+0x82>
		uint8_t temp_msg;
		temp_msg = not_ok;
 800584c:	2302      	movs	r3, #2
 800584e:	75fb      	strb	r3, [r7, #23]
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005850:	4b6e      	ldr	r3, [pc, #440]	; (8005a0c <control_input_task+0x20c>)
 8005852:	6818      	ldr	r0, [r3, #0]
 8005854:	f107 0117 	add.w	r1, r7, #23
 8005858:	2300      	movs	r3, #0
 800585a:	2200      	movs	r2, #0
 800585c:	f016 fa6c 	bl	801bd38 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8005860:	21c8      	movs	r1, #200	; 0xc8
 8005862:	2001      	movs	r0, #1
 8005864:	f017 ff24 	bl	801d6b0 <ulTaskNotifyTake>
 8005868:	4603      	mov	r3, r0
 800586a:	77fb      	strb	r3, [r7, #31]
		HAL_UART_DMAStop(&DBUS_UART);
 800586c:	4868      	ldr	r0, [pc, #416]	; (8005a10 <control_input_task+0x210>)
 800586e:	f011 fa15 	bl	8016c9c <HAL_UART_DMAStop>
		dbus_remote_start();
 8005872:	f7fb fe5b 	bl	800152c <dbus_remote_start>
		if (rc_check){
 8005876:	7ffb      	ldrb	r3, [r7, #31]
 8005878:	2b00      	cmp	r3, #0
 800587a:	d002      	beq.n	8005882 <control_input_task+0x82>
			vTaskDelay(200);
 800587c:	20c8      	movs	r0, #200	; 0xc8
 800587e:	f017 f907 	bl	801ca90 <vTaskDelay>
	while (fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50 || fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50){
 8005882:	4b64      	ldr	r3, [pc, #400]	; (8005a14 <control_input_task+0x214>)
 8005884:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005888:	4618      	mov	r0, r3
 800588a:	f7fa fe4b 	bl	8000524 <__aeabi_i2d>
 800588e:	4602      	mov	r2, r0
 8005890:	460b      	mov	r3, r1
 8005892:	4690      	mov	r8, r2
 8005894:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 8005898:	f04f 0200 	mov.w	r2, #0
 800589c:	4b5e      	ldr	r3, [pc, #376]	; (8005a18 <control_input_task+0x218>)
 800589e:	4640      	mov	r0, r8
 80058a0:	4649      	mov	r1, r9
 80058a2:	f7fb f939 	bl	8000b18 <__aeabi_dcmpgt>
 80058a6:	4603      	mov	r3, r0
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d1cf      	bne.n	800584c <control_input_task+0x4c>
 80058ac:	4b59      	ldr	r3, [pc, #356]	; (8005a14 <control_input_task+0x214>)
 80058ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80058b2:	4618      	mov	r0, r3
 80058b4:	f7fa fe36 	bl	8000524 <__aeabi_i2d>
 80058b8:	4602      	mov	r2, r0
 80058ba:	460b      	mov	r3, r1
 80058bc:	4692      	mov	sl, r2
 80058be:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 80058c2:	f04f 0200 	mov.w	r2, #0
 80058c6:	4b54      	ldr	r3, [pc, #336]	; (8005a18 <control_input_task+0x218>)
 80058c8:	4650      	mov	r0, sl
 80058ca:	4659      	mov	r1, fp
 80058cc:	f7fb f924 	bl	8000b18 <__aeabi_dcmpgt>
 80058d0:	4603      	mov	r3, r0
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d1ba      	bne.n	800584c <control_input_task+0x4c>
 80058d6:	4b4f      	ldr	r3, [pc, #316]	; (8005a14 <control_input_task+0x214>)
 80058d8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80058dc:	4618      	mov	r0, r3
 80058de:	f7fa fe21 	bl	8000524 <__aeabi_i2d>
 80058e2:	4602      	mov	r2, r0
 80058e4:	460b      	mov	r3, r1
 80058e6:	603a      	str	r2, [r7, #0]
 80058e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80058ec:	607b      	str	r3, [r7, #4]
 80058ee:	f04f 0200 	mov.w	r2, #0
 80058f2:	4b49      	ldr	r3, [pc, #292]	; (8005a18 <control_input_task+0x218>)
 80058f4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80058f8:	f7fb f90e 	bl	8000b18 <__aeabi_dcmpgt>
 80058fc:	4603      	mov	r3, r0
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d1a4      	bne.n	800584c <control_input_task+0x4c>
 8005902:	4b44      	ldr	r3, [pc, #272]	; (8005a14 <control_input_task+0x214>)
 8005904:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005908:	4618      	mov	r0, r3
 800590a:	f7fa fe0b 	bl	8000524 <__aeabi_i2d>
 800590e:	4602      	mov	r2, r0
 8005910:	460b      	mov	r3, r1
 8005912:	4614      	mov	r4, r2
 8005914:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8005918:	f04f 0200 	mov.w	r2, #0
 800591c:	4b3e      	ldr	r3, [pc, #248]	; (8005a18 <control_input_task+0x218>)
 800591e:	4620      	mov	r0, r4
 8005920:	4629      	mov	r1, r5
 8005922:	f7fb f8f9 	bl	8000b18 <__aeabi_dcmpgt>
 8005926:	4603      	mov	r3, r0
 8005928:	2b00      	cmp	r3, #0
 800592a:	d18f      	bne.n	800584c <control_input_task+0x4c>
		}
	}
	safety_toggle = ARM_SWITCH;
 800592c:	4b36      	ldr	r3, [pc, #216]	; (8005a08 <control_input_task+0x208>)
 800592e:	2200      	movs	r2, #0
 8005930:	701a      	strb	r2, [r3, #0]


	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8005932:	21c8      	movs	r1, #200	; 0xc8
 8005934:	2001      	movs	r0, #1
 8005936:	f017 febb 	bl	801d6b0 <ulTaskNotifyTake>
 800593a:	4603      	mov	r3, r0
 800593c:	77fb      	strb	r3, [r7, #31]
		if (rc_check) {
 800593e:	7ffb      	ldrb	r3, [r7, #31]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d039      	beq.n	80059b8 <control_input_task+0x1b8>
			status_led(1, on_led);
 8005944:	2100      	movs	r1, #0
 8005946:	2001      	movs	r0, #1
 8005948:	f7fc fbba 	bl	80020c0 <status_led>
			start_time = xTaskGetTickCount();
 800594c:	f017 f9f0 	bl	801cd30 <xTaskGetTickCount>
 8005950:	4603      	mov	r3, r0
 8005952:	61bb      	str	r3, [r7, #24]
			if (remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005954:	4b2f      	ldr	r3, [pc, #188]	; (8005a14 <control_input_task+0x214>)
 8005956:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800595a:	2b01      	cmp	r3, #1
 800595c:	d110      	bne.n	8005980 <control_input_task+0x180>
				laser_on();
 800595e:	f7fb fe89 	bl	8001674 <laser_on>
				control_mode_change(remote_cmd.side_dial);
 8005962:	4b2c      	ldr	r3, [pc, #176]	; (8005a14 <control_input_task+0x214>)
 8005964:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8005968:	4618      	mov	r0, r3
 800596a:	f000 f8ed 	bl	8005b48 <control_mode_change>
				safety_toggle = 0;
 800596e:	4b26      	ldr	r3, [pc, #152]	; (8005a08 <control_input_task+0x208>)
 8005970:	2200      	movs	r2, #0
 8005972:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 8005974:	4b29      	ldr	r3, [pc, #164]	; (8005a1c <control_input_task+0x21c>)
 8005976:	2200      	movs	r2, #0
 8005978:	701a      	strb	r2, [r3, #0]
				control_reset();
 800597a:	f000 f8af 	bl	8005adc <control_reset>
 800597e:	e037      	b.n	80059f0 <control_input_task+0x1f0>
			} else {

				switch (control_mode) {
 8005980:	4b27      	ldr	r3, [pc, #156]	; (8005a20 <control_input_task+0x220>)
 8005982:	781b      	ldrb	r3, [r3, #0]
 8005984:	2b01      	cmp	r3, #1
 8005986:	d002      	beq.n	800598e <control_input_task+0x18e>
 8005988:	2b02      	cmp	r3, #2
 800598a:	d008      	beq.n	800599e <control_input_task+0x19e>
					sbc_control_input();
					break;
#endif HAS_SBC

				default:
					break;
 800598c:	e00f      	b.n	80059ae <control_input_task+0x1ae>
					keyboard_gear_shifter(&gear_speed);
 800598e:	481d      	ldr	r0, [pc, #116]	; (8005a04 <control_input_task+0x204>)
 8005990:	f000 fac4 	bl	8005f1c <keyboard_gear_shifter>
					set_gear();
 8005994:	f000 fa20 	bl	8005dd8 <set_gear>
					keyboard_control_input();
 8005998:	f000 fab6 	bl	8005f08 <keyboard_control_input>
					break;
 800599c:	e007      	b.n	80059ae <control_input_task+0x1ae>
					remote_gear_shifter(&gear_speed);
 800599e:	4819      	ldr	r0, [pc, #100]	; (8005a04 <control_input_task+0x204>)
 80059a0:	f000 fca4 	bl	80062ec <remote_gear_shifter>
					set_gear();
 80059a4:	f000 fa18 	bl	8005dd8 <set_gear>
					remote_control_input();
 80059a8:	f000 fc96 	bl	80062d8 <remote_control_input>
					break;
 80059ac:	bf00      	nop

				}
				status_led(1, off_led);
 80059ae:	2101      	movs	r1, #1
 80059b0:	2001      	movs	r0, #1
 80059b2:	f7fc fb85 	bl	80020c0 <status_led>
 80059b6:	e01b      	b.n	80059f0 <control_input_task+0x1f0>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - remote_cmd.last_time > 100) {
 80059b8:	f009 fdc0 	bl	800f53c <HAL_GetTick>
 80059bc:	4602      	mov	r2, r0
 80059be:	4b15      	ldr	r3, [pc, #84]	; (8005a14 <control_input_task+0x214>)
 80059c0:	6a1b      	ldr	r3, [r3, #32]
 80059c2:	1ad3      	subs	r3, r2, r3
 80059c4:	2b64      	cmp	r3, #100	; 0x64
 80059c6:	d909      	bls.n	80059dc <control_input_task+0x1dc>
				HAL_UART_DMAStop(&DBUS_UART);
 80059c8:	4811      	ldr	r0, [pc, #68]	; (8005a10 <control_input_task+0x210>)
 80059ca:	f011 f967 	bl	8016c9c <HAL_UART_DMAStop>
				dbus_remote_start();
 80059ce:	f7fb fdad 	bl	800152c <dbus_remote_start>
				remote_cmd.last_time = HAL_GetTick();
 80059d2:	f009 fdb3 	bl	800f53c <HAL_GetTick>
 80059d6:	4603      	mov	r3, r0
 80059d8:	4a0e      	ldr	r2, [pc, #56]	; (8005a14 <control_input_task+0x214>)
 80059da:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 80059dc:	f007 fb3e 	bl	800d05c <kill_can>
			control_reset();
 80059e0:	f000 f87c 	bl	8005adc <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 80059e4:	4b0d      	ldr	r3, [pc, #52]	; (8005a1c <control_input_task+0x21c>)
 80059e6:	2200      	movs	r2, #0
 80059e8:	701a      	strb	r2, [r3, #0]
			safety_toggle = ARM_SWITCH;
 80059ea:	4b07      	ldr	r3, [pc, #28]	; (8005a08 <control_input_task+0x208>)
 80059ec:	2200      	movs	r2, #0
 80059ee:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 80059f0:	f107 0318 	add.w	r3, r7, #24
 80059f4:	2102      	movs	r1, #2
 80059f6:	4618      	mov	r0, r3
 80059f8:	f016 ffcc 	bl	801c994 <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80059fc:	e799      	b.n	8005932 <control_input_task+0x132>
 80059fe:	bf00      	nop
 8005a00:	20002f48 	.word	0x20002f48
 8005a04:	20002f84 	.word	0x20002f84
 8005a08:	20002f98 	.word	0x20002f98
 8005a0c:	200004e4 	.word	0x200004e4
 8005a10:	200016a0 	.word	0x200016a0
 8005a14:	20000358 	.word	0x20000358
 8005a18:	40490000 	.word	0x40490000
 8005a1c:	20002f99 	.word	0x20002f99
 8005a20:	20000008 	.word	0x20000008
 8005a24:	00000000 	.word	0x00000000

08005a28 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 8005a28:	b580      	push	{r7, lr}
 8005a2a:	af00      	add	r7, sp, #0
	speed_pid(0, can_motors[YAW_MOTOR_ID - 1].angle_data.adj_ang,
 8005a2c:	4b0e      	ldr	r3, [pc, #56]	; (8005a68 <chassis_center_yaw+0x40>)
 8005a2e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005a32:	f8d3 338c 	ldr.w	r3, [r3, #908]	; 0x38c
 8005a36:	4618      	mov	r0, r3
 8005a38:	f7fa fd86 	bl	8000548 <__aeabi_f2d>
 8005a3c:	4602      	mov	r2, r0
 8005a3e:	460b      	mov	r3, r1
 8005a40:	480a      	ldr	r0, [pc, #40]	; (8005a6c <chassis_center_yaw+0x44>)
 8005a42:	ec43 2b11 	vmov	d1, r2, r3
 8005a46:	ed9f 0b06 	vldr	d0, [pc, #24]	; 8005a60 <chassis_center_yaw+0x38>
 8005a4a:	f006 fffd 	bl	800ca48 <speed_pid>
			&yaw_pid_data);
	return yaw_pid_data.output;
 8005a4e:	4b07      	ldr	r3, [pc, #28]	; (8005a6c <chassis_center_yaw+0x44>)
 8005a50:	6a1b      	ldr	r3, [r3, #32]
 8005a52:	ee07 3a90 	vmov	s15, r3
}
 8005a56:	eeb0 0a67 	vmov.f32	s0, s15
 8005a5a:	bd80      	pop	{r7, pc}
 8005a5c:	f3af 8000 	nop.w
	...
 8005a68:	200018a8 	.word	0x200018a8
 8005a6c:	20002f54 	.word	0x20002f54

08005a70 <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 8005a70:	b480      	push	{r7}
 8005a72:	b085      	sub	sp, #20
 8005a74:	af00      	add	r7, sp, #0
 8005a76:	ed87 0a03 	vstr	s0, [r7, #12]
 8005a7a:	edc7 0a02 	vstr	s1, [r7, #8]
 8005a7e:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 8005a82:	4b09      	ldr	r3, [pc, #36]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a84:	2201      	movs	r2, #1
 8005a86:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 8005a88:	4a07      	ldr	r2, [pc, #28]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a8a:	68bb      	ldr	r3, [r7, #8]
 8005a8c:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 8005a8e:	4a06      	ldr	r2, [pc, #24]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = yaw;
 8005a94:	4a04      	ldr	r2, [pc, #16]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	6093      	str	r3, [r2, #8]
}
 8005a9a:	bf00      	nop
 8005a9c:	3714      	adds	r7, #20
 8005a9e:	46bd      	mov	sp, r7
 8005aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aa4:	4770      	bx	lr
 8005aa6:	bf00      	nop
 8005aa8:	20002f28 	.word	0x20002f28

08005aac <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 8005aac:	b480      	push	{r7}
 8005aae:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 8005ab0:	4b09      	ldr	r3, [pc, #36]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ab2:	2200      	movs	r2, #0
 8005ab4:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 8005ab6:	4b08      	ldr	r3, [pc, #32]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ab8:	f04f 0200 	mov.w	r2, #0
 8005abc:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005abe:	4b06      	ldr	r3, [pc, #24]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ac0:	f04f 0200 	mov.w	r2, #0
 8005ac4:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005ac6:	4b04      	ldr	r3, [pc, #16]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ac8:	f04f 0200 	mov.w	r2, #0
 8005acc:	609a      	str	r2, [r3, #8]
}
 8005ace:	bf00      	nop
 8005ad0:	46bd      	mov	sp, r7
 8005ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad6:	4770      	bx	lr
 8005ad8:	20002f28 	.word	0x20002f28

08005adc <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 8005adc:	b580      	push	{r7, lr}
 8005ade:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 8005ae0:	4b14      	ldr	r3, [pc, #80]	; (8005b34 <control_reset+0x58>)
 8005ae2:	f04f 0200 	mov.w	r2, #0
 8005ae6:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005ae8:	4b12      	ldr	r3, [pc, #72]	; (8005b34 <control_reset+0x58>)
 8005aea:	f04f 0200 	mov.w	r2, #0
 8005aee:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005af0:	4b10      	ldr	r3, [pc, #64]	; (8005b34 <control_reset+0x58>)
 8005af2:	f04f 0200 	mov.w	r2, #0
 8005af6:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 8005af8:	4b0e      	ldr	r3, [pc, #56]	; (8005b34 <control_reset+0x58>)
 8005afa:	2200      	movs	r2, #0
 8005afc:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 8005afe:	4b0e      	ldr	r3, [pc, #56]	; (8005b38 <control_reset+0x5c>)
 8005b00:	f04f 0200 	mov.w	r2, #0
 8005b04:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 8005b06:	4b0d      	ldr	r3, [pc, #52]	; (8005b3c <control_reset+0x60>)
 8005b08:	689b      	ldr	r3, [r3, #8]
 8005b0a:	4a0b      	ldr	r2, [pc, #44]	; (8005b38 <control_reset+0x5c>)
 8005b0c:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 8005b0e:	4b0a      	ldr	r3, [pc, #40]	; (8005b38 <control_reset+0x5c>)
 8005b10:	2200      	movs	r2, #0
 8005b12:	725a      	strb	r2, [r3, #9]
	launcher_ctrl_data.gun_feeding_speed = 0;
 8005b14:	4b0a      	ldr	r3, [pc, #40]	; (8005b40 <control_reset+0x64>)
 8005b16:	2200      	movs	r2, #0
 8005b18:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 8005b1a:	4b09      	ldr	r3, [pc, #36]	; (8005b40 <control_reset+0x64>)
 8005b1c:	2200      	movs	r2, #0
 8005b1e:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 8005b20:	4b07      	ldr	r3, [pc, #28]	; (8005b40 <control_reset+0x64>)
 8005b22:	2200      	movs	r2, #0
 8005b24:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 8005b26:	4b07      	ldr	r3, [pc, #28]	; (8005b44 <control_reset+0x68>)
 8005b28:	2200      	movs	r2, #0
 8005b2a:	601a      	str	r2, [r3, #0]
	laser_off();
 8005b2c:	f7fb fdae 	bl	800168c <laser_off>
}
 8005b30:	bf00      	nop
 8005b32:	bd80      	pop	{r7, pc}
 8005b34:	20002f28 	.word	0x20002f28
 8005b38:	20002f48 	.word	0x20002f48
 8005b3c:	2000327c 	.word	0x2000327c
 8005b40:	20002f40 	.word	0x20002f40
 8005b44:	20002f94 	.word	0x20002f94

08005b48 <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 8005b48:	b580      	push	{r7, lr}
 8005b4a:	b084      	sub	sp, #16
 8005b4c:	af00      	add	r7, sp, #0
 8005b4e:	4603      	mov	r3, r0
 8005b50:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (remote_cmd.left_switch == ge_LSW_CONFIG) {
 8005b52:	4b6f      	ldr	r3, [pc, #444]	; (8005d10 <control_mode_change+0x1c8>)
 8005b54:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005b58:	2b03      	cmp	r3, #3
 8005b5a:	d133      	bne.n	8005bc4 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 8005b5c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005b60:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005b64:	dc04      	bgt.n	8005b70 <control_mode_change+0x28>
 8005b66:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005b6a:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005b6e:	da23      	bge.n	8005bb8 <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005b70:	f009 fce4 	bl	800f53c <HAL_GetTick>
 8005b74:	4602      	mov	r2, r0
 8005b76:	4b67      	ldr	r3, [pc, #412]	; (8005d14 <control_mode_change+0x1cc>)
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	1ad3      	subs	r3, r2, r3
 8005b7c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005b80:	d918      	bls.n	8005bb4 <control_mode_change+0x6c>
				switch (control_mode) {
 8005b82:	4b65      	ldr	r3, [pc, #404]	; (8005d18 <control_mode_change+0x1d0>)
 8005b84:	781b      	ldrb	r3, [r3, #0]
 8005b86:	3b01      	subs	r3, #1
 8005b88:	2b01      	cmp	r3, #1
 8005b8a:	d80d      	bhi.n	8005ba8 <control_mode_change+0x60>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 8005b8c:	4b62      	ldr	r3, [pc, #392]	; (8005d18 <control_mode_change+0x1d0>)
 8005b8e:	2203      	movs	r2, #3
 8005b90:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 8005b92:	2305      	movs	r3, #5
 8005b94:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005b96:	4b61      	ldr	r3, [pc, #388]	; (8005d1c <control_mode_change+0x1d4>)
 8005b98:	6818      	ldr	r0, [r3, #0]
 8005b9a:	f107 010f 	add.w	r1, r7, #15
 8005b9e:	2300      	movs	r3, #0
 8005ba0:	2200      	movs	r2, #0
 8005ba2:	f016 f8c9 	bl	801bd38 <xQueueGenericSend>
					break;
 8005ba6:	e006      	b.n	8005bb6 <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 8005ba8:	f009 fcc8 	bl	800f53c <HAL_GetTick>
 8005bac:	4603      	mov	r3, r0
 8005bae:	4a59      	ldr	r2, [pc, #356]	; (8005d14 <control_mode_change+0x1cc>)
 8005bb0:	6013      	str	r3, [r2, #0]
					break;
 8005bb2:	e000      	b.n	8005bb6 <control_mode_change+0x6e>
				}
			}
 8005bb4:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005bb6:	e0a7      	b.n	8005d08 <control_mode_change+0x1c0>
		} else {
			last_trig_time = HAL_GetTick();
 8005bb8:	f009 fcc0 	bl	800f53c <HAL_GetTick>
 8005bbc:	4603      	mov	r3, r0
 8005bbe:	4a55      	ldr	r2, [pc, #340]	; (8005d14 <control_mode_change+0x1cc>)
 8005bc0:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 8005bc2:	e0a1      	b.n	8005d08 <control_mode_change+0x1c0>
		switch (control_mode) {
 8005bc4:	4b54      	ldr	r3, [pc, #336]	; (8005d18 <control_mode_change+0x1d0>)
 8005bc6:	781b      	ldrb	r3, [r3, #0]
 8005bc8:	2b03      	cmp	r3, #3
 8005bca:	d052      	beq.n	8005c72 <control_mode_change+0x12a>
 8005bcc:	2b03      	cmp	r3, #3
 8005bce:	f300 8094 	bgt.w	8005cfa <control_mode_change+0x1b2>
 8005bd2:	2b01      	cmp	r3, #1
 8005bd4:	d002      	beq.n	8005bdc <control_mode_change+0x94>
 8005bd6:	2b02      	cmp	r3, #2
 8005bd8:	d026      	beq.n	8005c28 <control_mode_change+0xe0>
			break;
 8005bda:	e08e      	b.n	8005cfa <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 8005bdc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005be0:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005be4:	da1a      	bge.n	8005c1c <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005be6:	f009 fca9 	bl	800f53c <HAL_GetTick>
 8005bea:	4602      	mov	r2, r0
 8005bec:	4b49      	ldr	r3, [pc, #292]	; (8005d14 <control_mode_change+0x1cc>)
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	1ad3      	subs	r3, r2, r3
 8005bf2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005bf6:	f240 8082 	bls.w	8005cfe <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 8005bfa:	4b47      	ldr	r3, [pc, #284]	; (8005d18 <control_mode_change+0x1d0>)
 8005bfc:	2202      	movs	r2, #2
 8005bfe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005c00:	2304      	movs	r3, #4
 8005c02:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c04:	4b45      	ldr	r3, [pc, #276]	; (8005d1c <control_mode_change+0x1d4>)
 8005c06:	6818      	ldr	r0, [r3, #0]
 8005c08:	f107 010f 	add.w	r1, r7, #15
 8005c0c:	2300      	movs	r3, #0
 8005c0e:	2200      	movs	r2, #0
 8005c10:	f016 f892 	bl	801bd38 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c14:	4b42      	ldr	r3, [pc, #264]	; (8005d20 <control_mode_change+0x1d8>)
 8005c16:	2200      	movs	r2, #0
 8005c18:	701a      	strb	r2, [r3, #0]
			break;
 8005c1a:	e070      	b.n	8005cfe <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8005c1c:	f009 fc8e 	bl	800f53c <HAL_GetTick>
 8005c20:	4603      	mov	r3, r0
 8005c22:	4a3c      	ldr	r2, [pc, #240]	; (8005d14 <control_mode_change+0x1cc>)
 8005c24:	6013      	str	r3, [r2, #0]
			break;
 8005c26:	e06a      	b.n	8005cfe <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 8005c28:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005c2c:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005c30:	dd19      	ble.n	8005c66 <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005c32:	f009 fc83 	bl	800f53c <HAL_GetTick>
 8005c36:	4602      	mov	r2, r0
 8005c38:	4b36      	ldr	r3, [pc, #216]	; (8005d14 <control_mode_change+0x1cc>)
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	1ad3      	subs	r3, r2, r3
 8005c3e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c42:	d95e      	bls.n	8005d02 <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 8005c44:	4b34      	ldr	r3, [pc, #208]	; (8005d18 <control_mode_change+0x1d0>)
 8005c46:	2201      	movs	r2, #1
 8005c48:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005c4a:	2303      	movs	r3, #3
 8005c4c:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c4e:	4b34      	ldr	r3, [pc, #208]	; (8005d20 <control_mode_change+0x1d8>)
 8005c50:	2200      	movs	r2, #0
 8005c52:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c54:	4b31      	ldr	r3, [pc, #196]	; (8005d1c <control_mode_change+0x1d4>)
 8005c56:	6818      	ldr	r0, [r3, #0]
 8005c58:	f107 010f 	add.w	r1, r7, #15
 8005c5c:	2300      	movs	r3, #0
 8005c5e:	2200      	movs	r2, #0
 8005c60:	f016 f86a 	bl	801bd38 <xQueueGenericSend>
			break;
 8005c64:	e04d      	b.n	8005d02 <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 8005c66:	f009 fc69 	bl	800f53c <HAL_GetTick>
 8005c6a:	4603      	mov	r3, r0
 8005c6c:	4a29      	ldr	r2, [pc, #164]	; (8005d14 <control_mode_change+0x1cc>)
 8005c6e:	6013      	str	r3, [r2, #0]
			break;
 8005c70:	e047      	b.n	8005d02 <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 8005c72:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005c76:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005c7a:	da19      	bge.n	8005cb0 <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005c7c:	f009 fc5e 	bl	800f53c <HAL_GetTick>
 8005c80:	4602      	mov	r2, r0
 8005c82:	4b24      	ldr	r3, [pc, #144]	; (8005d14 <control_mode_change+0x1cc>)
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	1ad3      	subs	r3, r2, r3
 8005c88:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c8c:	d93b      	bls.n	8005d06 <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 8005c8e:	4b22      	ldr	r3, [pc, #136]	; (8005d18 <control_mode_change+0x1d0>)
 8005c90:	2202      	movs	r2, #2
 8005c92:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005c94:	2304      	movs	r3, #4
 8005c96:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c98:	4b21      	ldr	r3, [pc, #132]	; (8005d20 <control_mode_change+0x1d8>)
 8005c9a:	2200      	movs	r2, #0
 8005c9c:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c9e:	4b1f      	ldr	r3, [pc, #124]	; (8005d1c <control_mode_change+0x1d4>)
 8005ca0:	6818      	ldr	r0, [r3, #0]
 8005ca2:	f107 010f 	add.w	r1, r7, #15
 8005ca6:	2300      	movs	r3, #0
 8005ca8:	2200      	movs	r2, #0
 8005caa:	f016 f845 	bl	801bd38 <xQueueGenericSend>
			break;
 8005cae:	e02a      	b.n	8005d06 <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 8005cb0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005cb4:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005cb8:	dd19      	ble.n	8005cee <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005cba:	f009 fc3f 	bl	800f53c <HAL_GetTick>
 8005cbe:	4602      	mov	r2, r0
 8005cc0:	4b14      	ldr	r3, [pc, #80]	; (8005d14 <control_mode_change+0x1cc>)
 8005cc2:	681b      	ldr	r3, [r3, #0]
 8005cc4:	1ad3      	subs	r3, r2, r3
 8005cc6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005cca:	d91c      	bls.n	8005d06 <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 8005ccc:	4b12      	ldr	r3, [pc, #72]	; (8005d18 <control_mode_change+0x1d0>)
 8005cce:	2201      	movs	r2, #1
 8005cd0:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005cd2:	2303      	movs	r3, #3
 8005cd4:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005cd6:	4b12      	ldr	r3, [pc, #72]	; (8005d20 <control_mode_change+0x1d8>)
 8005cd8:	2200      	movs	r2, #0
 8005cda:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005cdc:	4b0f      	ldr	r3, [pc, #60]	; (8005d1c <control_mode_change+0x1d4>)
 8005cde:	6818      	ldr	r0, [r3, #0]
 8005ce0:	f107 010f 	add.w	r1, r7, #15
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	2200      	movs	r2, #0
 8005ce8:	f016 f826 	bl	801bd38 <xQueueGenericSend>
			break;
 8005cec:	e00b      	b.n	8005d06 <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 8005cee:	f009 fc25 	bl	800f53c <HAL_GetTick>
 8005cf2:	4603      	mov	r3, r0
 8005cf4:	4a07      	ldr	r2, [pc, #28]	; (8005d14 <control_mode_change+0x1cc>)
 8005cf6:	6013      	str	r3, [r2, #0]
			break;
 8005cf8:	e005      	b.n	8005d06 <control_mode_change+0x1be>
			break;
 8005cfa:	bf00      	nop
 8005cfc:	e004      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005cfe:	bf00      	nop
 8005d00:	e002      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005d02:	bf00      	nop
 8005d04:	e000      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005d06:	bf00      	nop
}
 8005d08:	bf00      	nop
 8005d0a:	3710      	adds	r7, #16
 8005d0c:	46bd      	mov	sp, r7
 8005d0e:	bd80      	pop	{r7, pc}
 8005d10:	20000358 	.word	0x20000358
 8005d14:	20002f9c 	.word	0x20002f9c
 8005d18:	20000008 	.word	0x20000008
 8005d1c:	200004e4 	.word	0x200004e4
 8005d20:	20002f99 	.word	0x20002f99

08005d24 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8005d24:	b480      	push	{r7}
 8005d26:	b083      	sub	sp, #12
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	ed87 0a01 	vstr	s0, [r7, #4]
 8005d2e:	edc7 0a00 	vstr	s1, [r7]
	yaw_radians += gimbal_ctrl_data.yaw += yaw_radians;
 8005d32:	4b25      	ldr	r3, [pc, #148]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d34:	ed93 7a01 	vldr	s14, [r3, #4]
 8005d38:	edd7 7a00 	vldr	s15, [r7]
 8005d3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d40:	4b21      	ldr	r3, [pc, #132]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d42:	edc3 7a01 	vstr	s15, [r3, #4]
 8005d46:	4b20      	ldr	r3, [pc, #128]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d48:	edd3 7a01 	vldr	s15, [r3, #4]
 8005d4c:	ed97 7a00 	vldr	s14, [r7]
 8005d50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d54:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians > PI) {
 8005d58:	e007      	b.n	8005d6a <gimbal_turn_ang+0x46>
		yaw_radians -= 2 * PI;
 8005d5a:	edd7 7a00 	vldr	s15, [r7]
 8005d5e:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 8005dcc <gimbal_turn_ang+0xa8>
 8005d62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005d66:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians > PI) {
 8005d6a:	edd7 7a00 	vldr	s15, [r7]
 8005d6e:	ed9f 7a18 	vldr	s14, [pc, #96]	; 8005dd0 <gimbal_turn_ang+0xac>
 8005d72:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d7a:	dcee      	bgt.n	8005d5a <gimbal_turn_ang+0x36>
	}
	while (yaw_radians < -PI) {
 8005d7c:	e007      	b.n	8005d8e <gimbal_turn_ang+0x6a>
		yaw_radians += 2 * PI;
 8005d7e:	edd7 7a00 	vldr	s15, [r7]
 8005d82:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8005dcc <gimbal_turn_ang+0xa8>
 8005d86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d8a:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians < -PI) {
 8005d8e:	edd7 7a00 	vldr	s15, [r7]
 8005d92:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8005dd4 <gimbal_turn_ang+0xb0>
 8005d96:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d9e:	d4ee      	bmi.n	8005d7e <gimbal_turn_ang+0x5a>
	}
	gimbal_ctrl_data.pitch += pit_radians;
 8005da0:	4b09      	ldr	r3, [pc, #36]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005da2:	ed93 7a00 	vldr	s14, [r3]
 8005da6:	edd7 7a01 	vldr	s15, [r7, #4]
 8005daa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005dae:	4b06      	ldr	r3, [pc, #24]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005db0:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = yaw_radians;
 8005db4:	4a04      	ldr	r2, [pc, #16]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005db6:	683b      	ldr	r3, [r7, #0]
 8005db8:	6053      	str	r3, [r2, #4]
}
 8005dba:	bf00      	nop
 8005dbc:	370c      	adds	r7, #12
 8005dbe:	46bd      	mov	sp, r7
 8005dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc4:	4770      	bx	lr
 8005dc6:	bf00      	nop
 8005dc8:	20002f48 	.word	0x20002f48
 8005dcc:	40c90fdb 	.word	0x40c90fdb
 8005dd0:	40490fdb 	.word	0x40490fdb
 8005dd4:	c0490fdb 	.word	0xc0490fdb

08005dd8 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 8005dd8:	b480      	push	{r7}
 8005dda:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 8005ddc:	4b35      	ldr	r3, [pc, #212]	; (8005eb4 <set_gear+0xdc>)
 8005dde:	781b      	ldrb	r3, [r3, #0]
 8005de0:	3b01      	subs	r3, #1
 8005de2:	2b05      	cmp	r3, #5
 8005de4:	d854      	bhi.n	8005e90 <set_gear+0xb8>
 8005de6:	a201      	add	r2, pc, #4	; (adr r2, 8005dec <set_gear+0x14>)
 8005de8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005dec:	08005e05 	.word	0x08005e05
 8005df0:	08005e1d 	.word	0x08005e1d
 8005df4:	08005e35 	.word	0x08005e35
 8005df8:	08005e4f 	.word	0x08005e4f
 8005dfc:	08005e63 	.word	0x08005e63
 8005e00:	08005e7d 	.word	0x08005e7d
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 8005e04:	4b2b      	ldr	r3, [pc, #172]	; (8005eb4 <set_gear+0xdc>)
 8005e06:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e0a:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 8005e0c:	4b29      	ldr	r3, [pc, #164]	; (8005eb4 <set_gear+0xdc>)
 8005e0e:	4a2a      	ldr	r2, [pc, #168]	; (8005eb8 <set_gear+0xe0>)
 8005e10:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 8005e12:	4b28      	ldr	r3, [pc, #160]	; (8005eb4 <set_gear+0xdc>)
 8005e14:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e18:	60da      	str	r2, [r3, #12]
		break;
 8005e1a:	e046      	b.n	8005eaa <set_gear+0xd2>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 8005e1c:	4b25      	ldr	r3, [pc, #148]	; (8005eb4 <set_gear+0xdc>)
 8005e1e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e22:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8005e24:	4b23      	ldr	r3, [pc, #140]	; (8005eb4 <set_gear+0xdc>)
 8005e26:	4a25      	ldr	r2, [pc, #148]	; (8005ebc <set_gear+0xe4>)
 8005e28:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8005e2a:	4b22      	ldr	r3, [pc, #136]	; (8005eb4 <set_gear+0xdc>)
 8005e2c:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e30:	60da      	str	r2, [r3, #12]
		break;
 8005e32:	e03a      	b.n	8005eaa <set_gear+0xd2>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005e34:	4b1f      	ldr	r3, [pc, #124]	; (8005eb4 <set_gear+0xdc>)
 8005e36:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e3a:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005e3c:	4b1d      	ldr	r3, [pc, #116]	; (8005eb4 <set_gear+0xdc>)
 8005e3e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e42:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005e44:	4b1b      	ldr	r3, [pc, #108]	; (8005eb4 <set_gear+0xdc>)
 8005e46:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e4a:	60da      	str	r2, [r3, #12]
		break;
 8005e4c:	e02d      	b.n	8005eaa <set_gear+0xd2>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 8005e4e:	4b19      	ldr	r3, [pc, #100]	; (8005eb4 <set_gear+0xdc>)
 8005e50:	4a1b      	ldr	r2, [pc, #108]	; (8005ec0 <set_gear+0xe8>)
 8005e52:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8005e54:	4b17      	ldr	r3, [pc, #92]	; (8005eb4 <set_gear+0xdc>)
 8005e56:	4a1b      	ldr	r2, [pc, #108]	; (8005ec4 <set_gear+0xec>)
 8005e58:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8005e5a:	4b16      	ldr	r3, [pc, #88]	; (8005eb4 <set_gear+0xdc>)
 8005e5c:	4a18      	ldr	r2, [pc, #96]	; (8005ec0 <set_gear+0xe8>)
 8005e5e:	60da      	str	r2, [r3, #12]
		break;
 8005e60:	e023      	b.n	8005eaa <set_gear+0xd2>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 8005e62:	4b14      	ldr	r3, [pc, #80]	; (8005eb4 <set_gear+0xdc>)
 8005e64:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005e68:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8005e6a:	4b12      	ldr	r3, [pc, #72]	; (8005eb4 <set_gear+0xdc>)
 8005e6c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005e70:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 8005e72:	4b10      	ldr	r3, [pc, #64]	; (8005eb4 <set_gear+0xdc>)
 8005e74:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8005e78:	60da      	str	r2, [r3, #12]
		break;
 8005e7a:	e016      	b.n	8005eaa <set_gear+0xd2>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8005e7c:	4b0d      	ldr	r3, [pc, #52]	; (8005eb4 <set_gear+0xdc>)
 8005e7e:	4a12      	ldr	r2, [pc, #72]	; (8005ec8 <set_gear+0xf0>)
 8005e80:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 8005e82:	4b0c      	ldr	r3, [pc, #48]	; (8005eb4 <set_gear+0xdc>)
 8005e84:	4a11      	ldr	r2, [pc, #68]	; (8005ecc <set_gear+0xf4>)
 8005e86:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8005e88:	4b0a      	ldr	r3, [pc, #40]	; (8005eb4 <set_gear+0xdc>)
 8005e8a:	4a11      	ldr	r2, [pc, #68]	; (8005ed0 <set_gear+0xf8>)
 8005e8c:	60da      	str	r2, [r3, #12]
		break;
 8005e8e:	e00c      	b.n	8005eaa <set_gear+0xd2>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005e90:	4b08      	ldr	r3, [pc, #32]	; (8005eb4 <set_gear+0xdc>)
 8005e92:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e96:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005e98:	4b06      	ldr	r3, [pc, #24]	; (8005eb4 <set_gear+0xdc>)
 8005e9a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e9e:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005ea0:	4b04      	ldr	r3, [pc, #16]	; (8005eb4 <set_gear+0xdc>)
 8005ea2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005ea6:	60da      	str	r2, [r3, #12]
		break;
 8005ea8:	bf00      	nop
	}

}
 8005eaa:	bf00      	nop
 8005eac:	46bd      	mov	sp, r7
 8005eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eb2:	4770      	bx	lr
 8005eb4:	20002f84 	.word	0x20002f84
 8005eb8:	3ecccccd 	.word	0x3ecccccd
 8005ebc:	3f333333 	.word	0x3f333333
 8005ec0:	3f99999a 	.word	0x3f99999a
 8005ec4:	3fb33333 	.word	0x3fb33333
 8005ec8:	40400000 	.word	0x40400000
 8005ecc:	40a00000 	.word	0x40a00000
 8005ed0:	41200000 	.word	0x41200000

08005ed4 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 8005ed4:	b480      	push	{r7}
 8005ed6:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 8005ed8:	4b0a      	ldr	r3, [pc, #40]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005eda:	f04f 527c 	mov.w	r2, #1056964608	; 0x3f000000
 8005ede:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 8005ee0:	4b08      	ldr	r3, [pc, #32]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005ee2:	f04f 0200 	mov.w	r2, #0
 8005ee6:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 8005ee8:	4b06      	ldr	r3, [pc, #24]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005eea:	f04f 0200 	mov.w	r2, #0
 8005eee:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 8005ef0:	4b04      	ldr	r3, [pc, #16]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005ef2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005ef6:	61da      	str	r2, [r3, #28]
}
 8005ef8:	bf00      	nop
 8005efa:	46bd      	mov	sp, r7
 8005efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f00:	4770      	bx	lr
 8005f02:	bf00      	nop
 8005f04:	20002f54 	.word	0x20002f54

08005f08 <keyboard_control_input>:

extern int g_spinspin_mode;



void keyboard_control_input() {
 8005f08:	b580      	push	{r7, lr}
 8005f0a:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 8005f0c:	f000 f918 	bl	8006140 <mouse_gimbal_input>
	keyboard_chassis_input();
 8005f10:	f000 f86a 	bl	8005fe8 <keyboard_chassis_input>
	mouse_launcher_control_input();
 8005f14:	f000 f984 	bl	8006220 <mouse_launcher_control_input>
}
 8005f18:	bf00      	nop
 8005f1a:	bd80      	pop	{r7, pc}

08005f1c <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 8005f1c:	b580      	push	{r7, lr}
 8005f1e:	b082      	sub	sp, #8
 8005f20:	af00      	add	r7, sp, #0
 8005f22:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if ((remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8005f24:	4b2c      	ldr	r3, [pc, #176]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f26:	8b5b      	ldrh	r3, [r3, #26]
 8005f28:	f003 0310 	and.w	r3, r3, #16
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d013      	beq.n	8005f58 <keyboard_gear_shifter+0x3c>
			&& (remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 8005f30:	4b29      	ldr	r3, [pc, #164]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f32:	8b5b      	ldrh	r3, [r3, #26]
 8005f34:	f003 0320 	and.w	r3, r3, #32
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d00d      	beq.n	8005f58 <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	2203      	movs	r2, #3
 8005f40:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005f42:	f009 fafb 	bl	800f53c <HAL_GetTick>
 8005f46:	4603      	mov	r3, r0
 8005f48:	4a24      	ldr	r2, [pc, #144]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f4a:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8005f4c:	f009 faf6 	bl	800f53c <HAL_GetTick>
 8005f50:	4603      	mov	r3, r0
 8005f52:	4a23      	ldr	r2, [pc, #140]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005f54:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8005f56:	e03a      	b.n	8005fce <keyboard_gear_shifter+0xb2>
	else if (remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8005f58:	4b1f      	ldr	r3, [pc, #124]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f5a:	8b5b      	ldrh	r3, [r3, #26]
 8005f5c:	f003 0310 	and.w	r3, r3, #16
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d017      	beq.n	8005f94 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8005f64:	f009 faea 	bl	800f53c <HAL_GetTick>
 8005f68:	4602      	mov	r2, r0
 8005f6a:	4b1c      	ldr	r3, [pc, #112]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	1ad3      	subs	r3, r2, r3
 8005f70:	2b64      	cmp	r3, #100	; 0x64
 8005f72:	d909      	bls.n	8005f88 <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005f78:	2b04      	cmp	r3, #4
 8005f7a:	bf28      	it	cs
 8005f7c:	2304      	movcs	r3, #4
 8005f7e:	b2db      	uxtb	r3, r3
 8005f80:	3301      	adds	r3, #1
 8005f82:	b2da      	uxtb	r2, r3
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005f88:	f009 fad8 	bl	800f53c <HAL_GetTick>
 8005f8c:	4603      	mov	r3, r0
 8005f8e:	4a13      	ldr	r2, [pc, #76]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f90:	6013      	str	r3, [r2, #0]
}
 8005f92:	e01c      	b.n	8005fce <keyboard_gear_shifter+0xb2>
	else if (remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8005f94:	4b10      	ldr	r3, [pc, #64]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f96:	8b5b      	ldrh	r3, [r3, #26]
 8005f98:	f003 0320 	and.w	r3, r3, #32
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d016      	beq.n	8005fce <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 8005fa0:	f009 facc 	bl	800f53c <HAL_GetTick>
 8005fa4:	4602      	mov	r2, r0
 8005fa6:	4b0e      	ldr	r3, [pc, #56]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	1ad3      	subs	r3, r2, r3
 8005fac:	2b64      	cmp	r3, #100	; 0x64
 8005fae:	d909      	bls.n	8005fc4 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005fb4:	2b02      	cmp	r3, #2
 8005fb6:	bf38      	it	cc
 8005fb8:	2302      	movcc	r3, #2
 8005fba:	b2db      	uxtb	r3, r3
 8005fbc:	3b01      	subs	r3, #1
 8005fbe:	b2da      	uxtb	r2, r3
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 8005fc4:	f009 faba 	bl	800f53c <HAL_GetTick>
 8005fc8:	4603      	mov	r3, r0
 8005fca:	4a05      	ldr	r2, [pc, #20]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005fcc:	6013      	str	r3, [r2, #0]
}
 8005fce:	bf00      	nop
 8005fd0:	3708      	adds	r7, #8
 8005fd2:	46bd      	mov	sp, r7
 8005fd4:	bd80      	pop	{r7, pc}
 8005fd6:	bf00      	nop
 8005fd8:	20000358 	.word	0x20000358
 8005fdc:	20002fa0 	.word	0x20002fa0
 8005fe0:	20002fa4 	.word	0x20002fa4
 8005fe4:	00000000 	.word	0x00000000

08005fe8 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 8005fe8:	b580      	push	{r7, lr}
 8005fea:	b084      	sub	sp, #16
 8005fec:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8005fee:	4b50      	ldr	r3, [pc, #320]	; (8006130 <keyboard_chassis_input+0x148>)
 8005ff0:	781b      	ldrb	r3, [r3, #0]
 8005ff2:	2b00      	cmp	r3, #0
 8005ff4:	d104      	bne.n	8006000 <keyboard_chassis_input+0x18>
 8005ff6:	4b4f      	ldr	r3, [pc, #316]	; (8006134 <keyboard_chassis_input+0x14c>)
 8005ff8:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005ffc:	2b02      	cmp	r3, #2
 8005ffe:	d00f      	beq.n	8006020 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 8006000:	4b4d      	ldr	r3, [pc, #308]	; (8006138 <keyboard_chassis_input+0x150>)
 8006002:	2200      	movs	r2, #0
 8006004:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 8006006:	4b4c      	ldr	r3, [pc, #304]	; (8006138 <keyboard_chassis_input+0x150>)
 8006008:	f04f 0200 	mov.w	r2, #0
 800600c:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 800600e:	4b4a      	ldr	r3, [pc, #296]	; (8006138 <keyboard_chassis_input+0x150>)
 8006010:	f04f 0200 	mov.w	r2, #0
 8006014:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 8006016:	4b48      	ldr	r3, [pc, #288]	; (8006138 <keyboard_chassis_input+0x150>)
 8006018:	f04f 0200 	mov.w	r2, #0
 800601c:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 800601e:	e07f      	b.n	8006120 <keyboard_chassis_input+0x138>
		if (remote_cmd.right_switch == ge_RSW_ALL_ON) {
 8006020:	4b44      	ldr	r3, [pc, #272]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006022:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006026:	2b02      	cmp	r3, #2
 8006028:	d17a      	bne.n	8006120 <keyboard_chassis_input+0x138>
			chassis_ctrl_data.enabled = 1;
 800602a:	4b43      	ldr	r3, [pc, #268]	; (8006138 <keyboard_chassis_input+0x150>)
 800602c:	2201      	movs	r2, #1
 800602e:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006030:	f04f 0300 	mov.w	r3, #0
 8006034:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 8006036:	f04f 0300 	mov.w	r3, #0
 800603a:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 800603c:	f04f 0300 	mov.w	r3, #0
 8006040:	607b      	str	r3, [r7, #4]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 8006042:	4b3c      	ldr	r3, [pc, #240]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006044:	8b5b      	ldrh	r3, [r3, #26]
 8006046:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800604a:	2b00      	cmp	r3, #0
 800604c:	d003      	beq.n	8006056 <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 800604e:	4b3b      	ldr	r3, [pc, #236]	; (800613c <keyboard_chassis_input+0x154>)
 8006050:	2201      	movs	r2, #1
 8006052:	601a      	str	r2, [r3, #0]
 8006054:	e008      	b.n	8006068 <keyboard_chassis_input+0x80>
			} else if (remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 8006056:	4b37      	ldr	r3, [pc, #220]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006058:	8b5b      	ldrh	r3, [r3, #26]
 800605a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800605e:	2b00      	cmp	r3, #0
 8006060:	d002      	beq.n	8006068 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 8006062:	4b36      	ldr	r3, [pc, #216]	; (800613c <keyboard_chassis_input+0x154>)
 8006064:	2200      	movs	r2, #0
 8006066:	601a      	str	r2, [r3, #0]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8006068:	4b32      	ldr	r3, [pc, #200]	; (8006134 <keyboard_chassis_input+0x14c>)
 800606a:	8b5b      	ldrh	r3, [r3, #26]
 800606c:	f003 0301 	and.w	r3, r3, #1
 8006070:	2b00      	cmp	r3, #0
 8006072:	d007      	beq.n	8006084 <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 8006074:	edd7 7a02 	vldr	s15, [r7, #8]
 8006078:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800607c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006080:	edc7 7a02 	vstr	s15, [r7, #8]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 8006084:	4b2b      	ldr	r3, [pc, #172]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006086:	8b5b      	ldrh	r3, [r3, #26]
 8006088:	f003 0302 	and.w	r3, r3, #2
 800608c:	2b00      	cmp	r3, #0
 800608e:	d007      	beq.n	80060a0 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8006090:	edd7 7a02 	vldr	s15, [r7, #8]
 8006094:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8006098:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800609c:	edc7 7a02 	vstr	s15, [r7, #8]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 80060a0:	4b24      	ldr	r3, [pc, #144]	; (8006134 <keyboard_chassis_input+0x14c>)
 80060a2:	8b5b      	ldrh	r3, [r3, #26]
 80060a4:	f003 0304 	and.w	r3, r3, #4
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d007      	beq.n	80060bc <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 80060ac:	edd7 7a03 	vldr	s15, [r7, #12]
 80060b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80060b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80060b8:	edc7 7a03 	vstr	s15, [r7, #12]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 80060bc:	4b1d      	ldr	r3, [pc, #116]	; (8006134 <keyboard_chassis_input+0x14c>)
 80060be:	8b5b      	ldrh	r3, [r3, #26]
 80060c0:	f003 0308 	and.w	r3, r3, #8
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d007      	beq.n	80060d8 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 80060c8:	edd7 7a03 	vldr	s15, [r7, #12]
 80060cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80060d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060d4:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 80060d8:	4b18      	ldr	r3, [pc, #96]	; (800613c <keyboard_chassis_input+0x154>)
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	2b00      	cmp	r3, #0
 80060de:	d012      	beq.n	8006106 <keyboard_chassis_input+0x11e>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 80060e0:	4b16      	ldr	r3, [pc, #88]	; (800613c <keyboard_chassis_input+0x154>)
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	4618      	mov	r0, r3
 80060e6:	f7fa fa1d 	bl	8000524 <__aeabi_i2d>
 80060ea:	a30f      	add	r3, pc, #60	; (adr r3, 8006128 <keyboard_chassis_input+0x140>)
 80060ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060f0:	f7fa fa82 	bl	80005f8 <__aeabi_dmul>
 80060f4:	4602      	mov	r2, r0
 80060f6:	460b      	mov	r3, r1
 80060f8:	4610      	mov	r0, r2
 80060fa:	4619      	mov	r1, r3
 80060fc:	f7fa fd74 	bl	8000be8 <__aeabi_d2f>
 8006100:	4603      	mov	r3, r0
 8006102:	607b      	str	r3, [r7, #4]
 8006104:	e003      	b.n	800610e <keyboard_chassis_input+0x126>
				yaw_input = chassis_center_yaw();
 8006106:	f7ff fc8f 	bl	8005a28 <chassis_center_yaw>
 800610a:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 800610e:	4a0a      	ldr	r2, [pc, #40]	; (8006138 <keyboard_chassis_input+0x150>)
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 8006114:	4a08      	ldr	r2, [pc, #32]	; (8006138 <keyboard_chassis_input+0x150>)
 8006116:	68bb      	ldr	r3, [r7, #8]
 8006118:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 800611a:	4a07      	ldr	r2, [pc, #28]	; (8006138 <keyboard_chassis_input+0x150>)
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	6093      	str	r3, [r2, #8]
}
 8006120:	bf00      	nop
 8006122:	3710      	adds	r7, #16
 8006124:	46bd      	mov	sp, r7
 8006126:	bd80      	pop	{r7, pc}
 8006128:	cccccccd 	.word	0xcccccccd
 800612c:	3feccccc 	.word	0x3feccccc
 8006130:	20002f98 	.word	0x20002f98
 8006134:	20000358 	.word	0x20000358
 8006138:	20002f28 	.word	0x20002f28
 800613c:	20002f94 	.word	0x20002f94

08006140 <mouse_gimbal_input>:

void mouse_gimbal_input() {
 8006140:	b580      	push	{r7, lr}
 8006142:	b082      	sub	sp, #8
 8006144:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006146:	4b30      	ldr	r3, [pc, #192]	; (8006208 <mouse_gimbal_input+0xc8>)
 8006148:	781b      	ldrb	r3, [r3, #0]
 800614a:	2b00      	cmp	r3, #0
 800614c:	d104      	bne.n	8006158 <mouse_gimbal_input+0x18>
 800614e:	4b2f      	ldr	r3, [pc, #188]	; (800620c <mouse_gimbal_input+0xcc>)
 8006150:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006154:	2b01      	cmp	r3, #1
 8006156:	d103      	bne.n	8006160 <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006158:	4b2d      	ldr	r3, [pc, #180]	; (8006210 <mouse_gimbal_input+0xd0>)
 800615a:	2200      	movs	r2, #0
 800615c:	725a      	strb	r2, [r3, #9]
 800615e:	e04e      	b.n	80061fe <mouse_gimbal_input+0xbe>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8006160:	4b2b      	ldr	r3, [pc, #172]	; (8006210 <mouse_gimbal_input+0xd0>)
 8006162:	2201      	movs	r2, #1
 8006164:	725a      	strb	r2, [r3, #9]
		float pitch_mouse = (float) remote_cmd.mouse_y * MOUSE_Y_INVERT
 8006166:	4b29      	ldr	r3, [pc, #164]	; (800620c <mouse_gimbal_input+0xcc>)
 8006168:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 800616c:	ee07 3a90 	vmov	s15, r3
 8006170:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006174:	ee17 0a90 	vmov	r0, s15
 8006178:	f7fa f9e6 	bl	8000548 <__aeabi_f2d>
 800617c:	f04f 0200 	mov.w	r2, #0
 8006180:	4b24      	ldr	r3, [pc, #144]	; (8006214 <mouse_gimbal_input+0xd4>)
 8006182:	f7fa fa39 	bl	80005f8 <__aeabi_dmul>
 8006186:	4602      	mov	r2, r0
 8006188:	460b      	mov	r3, r1
 800618a:	4610      	mov	r0, r2
 800618c:	4619      	mov	r1, r3
 800618e:	f04f 0200 	mov.w	r2, #0
 8006192:	4b21      	ldr	r3, [pc, #132]	; (8006218 <mouse_gimbal_input+0xd8>)
 8006194:	f7fa fb5a 	bl	800084c <__aeabi_ddiv>
 8006198:	4602      	mov	r2, r0
 800619a:	460b      	mov	r3, r1
		float pitch_mouse = (float) remote_cmd.mouse_y * MOUSE_Y_INVERT
 800619c:	4610      	mov	r0, r2
 800619e:	4619      	mov	r1, r3
 80061a0:	f7fa fd22 	bl	8000be8 <__aeabi_d2f>
 80061a4:	4603      	mov	r3, r0
 80061a6:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) remote_cmd.mouse_x * MOUSE_X_INVERT
 80061a8:	4b18      	ldr	r3, [pc, #96]	; (800620c <mouse_gimbal_input+0xcc>)
 80061aa:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80061ae:	ee07 3a90 	vmov	s15, r3
 80061b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 80061b6:	eef1 7a67 	vneg.f32	s15, s15
 80061ba:	ee17 3a90 	vmov	r3, s15
 80061be:	4618      	mov	r0, r3
 80061c0:	f7fa f9c2 	bl	8000548 <__aeabi_f2d>
 80061c4:	f04f 0200 	mov.w	r2, #0
 80061c8:	4b14      	ldr	r3, [pc, #80]	; (800621c <mouse_gimbal_input+0xdc>)
 80061ca:	f7fa fa15 	bl	80005f8 <__aeabi_dmul>
 80061ce:	4602      	mov	r2, r0
 80061d0:	460b      	mov	r3, r1
 80061d2:	4610      	mov	r0, r2
 80061d4:	4619      	mov	r1, r3
 80061d6:	f04f 0200 	mov.w	r2, #0
 80061da:	4b0f      	ldr	r3, [pc, #60]	; (8006218 <mouse_gimbal_input+0xd8>)
 80061dc:	f7fa fb36 	bl	800084c <__aeabi_ddiv>
 80061e0:	4602      	mov	r2, r0
 80061e2:	460b      	mov	r3, r1
		float yaw_mouse = (float) remote_cmd.mouse_x * MOUSE_X_INVERT
 80061e4:	4610      	mov	r0, r2
 80061e6:	4619      	mov	r1, r3
 80061e8:	f7fa fcfe 	bl	8000be8 <__aeabi_d2f>
 80061ec:	4603      	mov	r3, r0
 80061ee:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 80061f0:	edd7 0a00 	vldr	s1, [r7]
 80061f4:	ed97 0a01 	vldr	s0, [r7, #4]
 80061f8:	f7ff fd94 	bl	8005d24 <gimbal_turn_ang>
	}
}
 80061fc:	bf00      	nop
 80061fe:	bf00      	nop
 8006200:	3708      	adds	r7, #8
 8006202:	46bd      	mov	sp, r7
 8006204:	bd80      	pop	{r7, pc}
 8006206:	bf00      	nop
 8006208:	20002f98 	.word	0x20002f98
 800620c:	20000358 	.word	0x20000358
 8006210:	20002f48 	.word	0x20002f48
 8006214:	40240000 	.word	0x40240000
 8006218:	40e00000 	.word	0x40e00000
 800621c:	40340000 	.word	0x40340000

08006220 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 8006220:	b480      	push	{r7}
 8006222:	af00      	add	r7, sp, #0
	if (safety_toggle || launcher_safety_toggle
 8006224:	4b28      	ldr	r3, [pc, #160]	; (80062c8 <mouse_launcher_control_input+0xa8>)
 8006226:	781b      	ldrb	r3, [r3, #0]
 8006228:	2b00      	cmp	r3, #0
 800622a:	d10d      	bne.n	8006248 <mouse_launcher_control_input+0x28>
 800622c:	4b27      	ldr	r3, [pc, #156]	; (80062cc <mouse_launcher_control_input+0xac>)
 800622e:	781b      	ldrb	r3, [r3, #0]
 8006230:	2b00      	cmp	r3, #0
 8006232:	d109      	bne.n	8006248 <mouse_launcher_control_input+0x28>
			|| remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8006234:	4b26      	ldr	r3, [pc, #152]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006236:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800623a:	2b01      	cmp	r3, #1
 800623c:	d004      	beq.n	8006248 <mouse_launcher_control_input+0x28>
			|| remote_cmd.left_switch != ge_LSW_UNSAFE) {
 800623e:	4b24      	ldr	r3, [pc, #144]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006240:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006244:	2b01      	cmp	r3, #1
 8006246:	d016      	beq.n	8006276 <mouse_launcher_control_input+0x56>
		if (remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006248:	4b21      	ldr	r3, [pc, #132]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 800624a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800624e:	2b01      	cmp	r3, #1
 8006250:	d102      	bne.n	8006258 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 8006252:	4b20      	ldr	r3, [pc, #128]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006254:	2200      	movs	r2, #0
 8006256:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.gun_feeding_speed = 0;
 8006258:	4b1e      	ldr	r3, [pc, #120]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 800625a:	2200      	movs	r2, #0
 800625c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 800625e:	4b1d      	ldr	r3, [pc, #116]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006260:	2200      	movs	r2, #0
 8006262:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006264:	4b1a      	ldr	r3, [pc, #104]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006266:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800626a:	2b01      	cmp	r3, #1
 800626c:	d027      	beq.n	80062be <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 800626e:	4b17      	ldr	r3, [pc, #92]	; (80062cc <mouse_launcher_control_input+0xac>)
 8006270:	2200      	movs	r2, #0
 8006272:	701a      	strb	r2, [r3, #0]
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006274:	e023      	b.n	80062be <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 8006276:	4b17      	ldr	r3, [pc, #92]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006278:	2201      	movs	r2, #1
 800627a:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 800627c:	4b15      	ldr	r3, [pc, #84]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 800627e:	2201      	movs	r2, #1
 8006280:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8006282:	4b13      	ldr	r3, [pc, #76]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006284:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006288:	2b01      	cmp	r3, #1
 800628a:	d10b      	bne.n	80062a4 <mouse_launcher_control_input+0x84>
			if (remote_cmd.mouse_right) {
 800628c:	4b10      	ldr	r3, [pc, #64]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 800628e:	f993 3019 	ldrsb.w	r3, [r3, #25]
 8006292:	2b00      	cmp	r3, #0
 8006294:	d003      	beq.n	800629e <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 8006296:	4b0f      	ldr	r3, [pc, #60]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006298:	2201      	movs	r2, #1
 800629a:	711a      	strb	r2, [r3, #4]
 800629c:	e002      	b.n	80062a4 <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 800629e:	4b0d      	ldr	r3, [pc, #52]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062a0:	2200      	movs	r2, #0
 80062a2:	711a      	strb	r2, [r3, #4]
			}
		}
		if (remote_cmd.mouse_left) {
 80062a4:	4b0a      	ldr	r3, [pc, #40]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 80062a6:	f993 3018 	ldrsb.w	r3, [r3, #24]
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d003      	beq.n	80062b6 <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.gun_feeding_speed =1;
 80062ae:	4b09      	ldr	r3, [pc, #36]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062b0:	2201      	movs	r2, #1
 80062b2:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.gun_feeding_speed = 0;
		}
	}
}
 80062b4:	e003      	b.n	80062be <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.gun_feeding_speed = 0;
 80062b6:	4b07      	ldr	r3, [pc, #28]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062b8:	2200      	movs	r2, #0
 80062ba:	805a      	strh	r2, [r3, #2]
}
 80062bc:	e7ff      	b.n	80062be <mouse_launcher_control_input+0x9e>
 80062be:	bf00      	nop
 80062c0:	46bd      	mov	sp, r7
 80062c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062c6:	4770      	bx	lr
 80062c8:	20002f98 	.word	0x20002f98
 80062cc:	20002f99 	.word	0x20002f99
 80062d0:	20000358 	.word	0x20000358
 80062d4:	20002f40 	.word	0x20002f40

080062d8 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 80062d8:	b580      	push	{r7, lr}
 80062da:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 80062dc:	f000 f8d0 	bl	8006480 <remote_gimbal_input>
	remote_chassis_input();
 80062e0:	f000 f87e 	bl	80063e0 <remote_chassis_input>
	remote_launcher_control_input();
 80062e4:	f000 f934 	bl	8006550 <remote_launcher_control_input>
}
 80062e8:	bf00      	nop
 80062ea:	bd80      	pop	{r7, pc}

080062ec <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 80062ec:	b580      	push	{r7, lr}
 80062ee:	b084      	sub	sp, #16
 80062f0:	af00      	add	r7, sp, #0
 80062f2:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (remote_cmd.left_switch == ge_LSW_CONFIG) {
 80062f4:	4b36      	ldr	r3, [pc, #216]	; (80063d0 <remote_gear_shifter+0xe4>)
 80062f6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062fa:	2b03      	cmp	r3, #3
 80062fc:	d164      	bne.n	80063c8 <remote_gear_shifter+0xdc>
		if (remote_cmd.side_dial > 330) {
 80062fe:	4b34      	ldr	r3, [pc, #208]	; (80063d0 <remote_gear_shifter+0xe4>)
 8006300:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8006304:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8006308:	dd2c      	ble.n	8006364 <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 800630a:	f009 f917 	bl	800f53c <HAL_GetTick>
 800630e:	4602      	mov	r2, r0
 8006310:	4b30      	ldr	r3, [pc, #192]	; (80063d4 <remote_gear_shifter+0xe8>)
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	1ad3      	subs	r3, r2, r3
 8006316:	2b64      	cmp	r3, #100	; 0x64
 8006318:	d91e      	bls.n	8006358 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 800631e:	2b05      	cmp	r3, #5
 8006320:	bf28      	it	cs
 8006322:	2305      	movcs	r3, #5
 8006324:	b2db      	uxtb	r3, r3
 8006326:	3301      	adds	r3, #1
 8006328:	b2da      	uxtb	r2, r3
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 800632e:	2306      	movs	r3, #6
 8006330:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006332:	2300      	movs	r3, #0
 8006334:	73fb      	strb	r3, [r7, #15]
 8006336:	e00a      	b.n	800634e <remote_gear_shifter+0x62>
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8006338:	4b27      	ldr	r3, [pc, #156]	; (80063d8 <remote_gear_shifter+0xec>)
 800633a:	6818      	ldr	r0, [r3, #0]
 800633c:	f107 010d 	add.w	r1, r7, #13
 8006340:	2300      	movs	r3, #0
 8006342:	2200      	movs	r2, #0
 8006344:	f015 fcf8 	bl	801bd38 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006348:	7bfb      	ldrb	r3, [r7, #15]
 800634a:	3301      	adds	r3, #1
 800634c:	73fb      	strb	r3, [r7, #15]
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	781b      	ldrb	r3, [r3, #0]
 8006352:	7bfa      	ldrb	r2, [r7, #15]
 8006354:	429a      	cmp	r2, r3
 8006356:	d3ef      	bcc.n	8006338 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8006358:	f009 f8f0 	bl	800f53c <HAL_GetTick>
 800635c:	4603      	mov	r3, r0
 800635e:	4a1d      	ldr	r2, [pc, #116]	; (80063d4 <remote_gear_shifter+0xe8>)
 8006360:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 8006362:	e031      	b.n	80063c8 <remote_gear_shifter+0xdc>
		else if (remote_cmd.side_dial < -330) {
 8006364:	4b1a      	ldr	r3, [pc, #104]	; (80063d0 <remote_gear_shifter+0xe4>)
 8006366:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800636a:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 800636e:	da2b      	bge.n	80063c8 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 8006370:	f009 f8e4 	bl	800f53c <HAL_GetTick>
 8006374:	4602      	mov	r2, r0
 8006376:	4b19      	ldr	r3, [pc, #100]	; (80063dc <remote_gear_shifter+0xf0>)
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	1ad3      	subs	r3, r2, r3
 800637c:	2b64      	cmp	r3, #100	; 0x64
 800637e:	d91e      	bls.n	80063be <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 8006384:	2b02      	cmp	r3, #2
 8006386:	bf38      	it	cc
 8006388:	2302      	movcc	r3, #2
 800638a:	b2db      	uxtb	r3, r3
 800638c:	3b01      	subs	r3, #1
 800638e:	b2da      	uxtb	r2, r3
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 8006394:	2307      	movs	r3, #7
 8006396:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006398:	2300      	movs	r3, #0
 800639a:	73bb      	strb	r3, [r7, #14]
 800639c:	e00a      	b.n	80063b4 <remote_gear_shifter+0xc8>
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800639e:	4b0e      	ldr	r3, [pc, #56]	; (80063d8 <remote_gear_shifter+0xec>)
 80063a0:	6818      	ldr	r0, [r3, #0]
 80063a2:	f107 010d 	add.w	r1, r7, #13
 80063a6:	2300      	movs	r3, #0
 80063a8:	2200      	movs	r2, #0
 80063aa:	f015 fcc5 	bl	801bd38 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80063ae:	7bbb      	ldrb	r3, [r7, #14]
 80063b0:	3301      	adds	r3, #1
 80063b2:	73bb      	strb	r3, [r7, #14]
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	781b      	ldrb	r3, [r3, #0]
 80063b8:	7bba      	ldrb	r2, [r7, #14]
 80063ba:	429a      	cmp	r2, r3
 80063bc:	d3ef      	bcc.n	800639e <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 80063be:	f009 f8bd 	bl	800f53c <HAL_GetTick>
 80063c2:	4603      	mov	r3, r0
 80063c4:	4a05      	ldr	r2, [pc, #20]	; (80063dc <remote_gear_shifter+0xf0>)
 80063c6:	6013      	str	r3, [r2, #0]
}
 80063c8:	bf00      	nop
 80063ca:	3710      	adds	r7, #16
 80063cc:	46bd      	mov	sp, r7
 80063ce:	bd80      	pop	{r7, pc}
 80063d0:	20000358 	.word	0x20000358
 80063d4:	20002fa8 	.word	0x20002fa8
 80063d8:	200004e4 	.word	0x200004e4
 80063dc:	20002fac 	.word	0x20002fac

080063e0 <remote_chassis_input>:

void remote_chassis_input() {
 80063e0:	b580      	push	{r7, lr}
 80063e2:	b084      	sub	sp, #16
 80063e4:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch != ge_RSW_ALL_ON) {
 80063e6:	4b21      	ldr	r3, [pc, #132]	; (800646c <remote_chassis_input+0x8c>)
 80063e8:	781b      	ldrb	r3, [r3, #0]
 80063ea:	2b00      	cmp	r3, #0
 80063ec:	d104      	bne.n	80063f8 <remote_chassis_input+0x18>
 80063ee:	4b20      	ldr	r3, [pc, #128]	; (8006470 <remote_chassis_input+0x90>)
 80063f0:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80063f4:	2b02      	cmp	r3, #2
 80063f6:	d002      	beq.n	80063fe <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 80063f8:	f7ff fb58 	bl	8005aac <chassis_kill_ctrl>
 80063fc:	e032      	b.n	8006464 <remote_chassis_input+0x84>
	} else {
			chassis_ctrl_data.enabled = 1;
 80063fe:	4b1d      	ldr	r3, [pc, #116]	; (8006474 <remote_chassis_input+0x94>)
 8006400:	2201      	movs	r2, #1
 8006402:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006404:	f04f 0300 	mov.w	r3, #0
 8006408:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 800640a:	f04f 0300 	mov.w	r3, #0
 800640e:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8006410:	f04f 0300 	mov.w	r3, #0
 8006414:	607b      	str	r3, [r7, #4]

			forward_input = (float) remote_cmd.left_y / RC_LIMITS;
 8006416:	4b16      	ldr	r3, [pc, #88]	; (8006470 <remote_chassis_input+0x90>)
 8006418:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800641c:	ee07 3a90 	vmov	s15, r3
 8006420:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006424:	eddf 6a14 	vldr	s13, [pc, #80]	; 8006478 <remote_chassis_input+0x98>
 8006428:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800642c:	edc7 7a02 	vstr	s15, [r7, #8]
			horizontal_input = (float) remote_cmd.left_x / RC_LIMITS;
 8006430:	4b0f      	ldr	r3, [pc, #60]	; (8006470 <remote_chassis_input+0x90>)
 8006432:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006436:	ee07 3a90 	vmov	s15, r3
 800643a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800643e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8006478 <remote_chassis_input+0x98>
 8006442:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006446:	edc7 7a03 	vstr	s15, [r7, #12]
			yaw_input = chassis_center_yaw();
 800644a:	f7ff faed 	bl	8005a28 <chassis_center_yaw>
 800644e:	ed87 0a01 	vstr	s0, [r7, #4]
//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 8006452:	ed97 1a01 	vldr	s2, [r7, #4]
 8006456:	edd7 0a03 	vldr	s1, [r7, #12]
 800645a:	ed97 0a02 	vldr	s0, [r7, #8]
 800645e:	f7ff fb07 	bl	8005a70 <chassis_set_ctrl>
	}
}
 8006462:	bf00      	nop
 8006464:	bf00      	nop
 8006466:	3710      	adds	r7, #16
 8006468:	46bd      	mov	sp, r7
 800646a:	bd80      	pop	{r7, pc}
 800646c:	20002f98 	.word	0x20002f98
 8006470:	20000358 	.word	0x20000358
 8006474:	20002f28 	.word	0x20002f28
 8006478:	44250000 	.word	0x44250000
 800647c:	00000000 	.word	0x00000000

08006480 <remote_gimbal_input>:

void remote_gimbal_input() {
 8006480:	b580      	push	{r7, lr}
 8006482:	b082      	sub	sp, #8
 8006484:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006486:	4b2e      	ldr	r3, [pc, #184]	; (8006540 <remote_gimbal_input+0xc0>)
 8006488:	781b      	ldrb	r3, [r3, #0]
 800648a:	2b00      	cmp	r3, #0
 800648c:	d104      	bne.n	8006498 <remote_gimbal_input+0x18>
 800648e:	4b2d      	ldr	r3, [pc, #180]	; (8006544 <remote_gimbal_input+0xc4>)
 8006490:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006494:	2b01      	cmp	r3, #1
 8006496:	d103      	bne.n	80064a0 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006498:	4b2b      	ldr	r3, [pc, #172]	; (8006548 <remote_gimbal_input+0xc8>)
 800649a:	2200      	movs	r2, #0
 800649c:	725a      	strb	r2, [r3, #9]
 800649e:	e047      	b.n	8006530 <remote_gimbal_input+0xb0>
	} else {
		gimbal_ctrl_data.enabled = 1;
 80064a0:	4b29      	ldr	r3, [pc, #164]	; (8006548 <remote_gimbal_input+0xc8>)
 80064a2:	2201      	movs	r2, #1
 80064a4:	725a      	strb	r2, [r3, #9]
		float pitch_remote = ((float) remote_cmd.right_y / 660) * PITCH_INVERT
 80064a6:	4b27      	ldr	r3, [pc, #156]	; (8006544 <remote_gimbal_input+0xc4>)
 80064a8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80064ac:	ee07 3a90 	vmov	s15, r3
 80064b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80064b4:	eddf 6a25 	vldr	s13, [pc, #148]	; 800654c <remote_gimbal_input+0xcc>
 80064b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80064bc:	eef1 7a67 	vneg.f32	s15, s15
 80064c0:	ee17 3a90 	vmov	r3, s15
 80064c4:	4618      	mov	r0, r3
 80064c6:	f7fa f83f 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 80064ca:	a31b      	add	r3, pc, #108	; (adr r3, 8006538 <remote_gimbal_input+0xb8>)
 80064cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064d0:	f7fa f892 	bl	80005f8 <__aeabi_dmul>
 80064d4:	4602      	mov	r2, r0
 80064d6:	460b      	mov	r3, r1
		float pitch_remote = ((float) remote_cmd.right_y / 660) * PITCH_INVERT
 80064d8:	4610      	mov	r0, r2
 80064da:	4619      	mov	r1, r3
 80064dc:	f7fa fb84 	bl	8000be8 <__aeabi_d2f>
 80064e0:	4603      	mov	r3, r0
 80064e2:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) remote_cmd.right_x / 660) * YAW_INVERT
 80064e4:	4b17      	ldr	r3, [pc, #92]	; (8006544 <remote_gimbal_input+0xc4>)
 80064e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80064ea:	ee07 3a90 	vmov	s15, r3
 80064ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80064f2:	eddf 6a16 	vldr	s13, [pc, #88]	; 800654c <remote_gimbal_input+0xcc>
 80064f6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80064fa:	eef1 7a67 	vneg.f32	s15, s15
 80064fe:	ee17 3a90 	vmov	r3, s15
 8006502:	4618      	mov	r0, r3
 8006504:	f7fa f820 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 8006508:	a30b      	add	r3, pc, #44	; (adr r3, 8006538 <remote_gimbal_input+0xb8>)
 800650a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800650e:	f7fa f873 	bl	80005f8 <__aeabi_dmul>
 8006512:	4602      	mov	r2, r0
 8006514:	460b      	mov	r3, r1
		float yaw_remote = ((float) remote_cmd.right_x / 660) * YAW_INVERT
 8006516:	4610      	mov	r0, r2
 8006518:	4619      	mov	r1, r3
 800651a:	f7fa fb65 	bl	8000be8 <__aeabi_d2f>
 800651e:	4603      	mov	r3, r0
 8006520:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 8006522:	edd7 0a00 	vldr	s1, [r7]
 8006526:	ed97 0a01 	vldr	s0, [r7, #4]
 800652a:	f7ff fbfb 	bl	8005d24 <gimbal_turn_ang>
	}
}
 800652e:	bf00      	nop
 8006530:	bf00      	nop
 8006532:	3708      	adds	r7, #8
 8006534:	46bd      	mov	sp, r7
 8006536:	bd80      	pop	{r7, pc}
 8006538:	9999999a 	.word	0x9999999a
 800653c:	3fa99999 	.word	0x3fa99999
 8006540:	20002f98 	.word	0x20002f98
 8006544:	20000358 	.word	0x20000358
 8006548:	20002f48 	.word	0x20002f48
 800654c:	44250000 	.word	0x44250000

08006550 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 8006550:	b480      	push	{r7}
 8006552:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8006554:	4b1d      	ldr	r3, [pc, #116]	; (80065cc <remote_launcher_control_input+0x7c>)
 8006556:	781b      	ldrb	r3, [r3, #0]
 8006558:	2b00      	cmp	r3, #0
 800655a:	d109      	bne.n	8006570 <remote_launcher_control_input+0x20>
 800655c:	4b1c      	ldr	r3, [pc, #112]	; (80065d0 <remote_launcher_control_input+0x80>)
 800655e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006562:	2b01      	cmp	r3, #1
 8006564:	d004      	beq.n	8006570 <remote_launcher_control_input+0x20>
			|| remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006566:	4b1a      	ldr	r3, [pc, #104]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006568:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800656c:	2b01      	cmp	r3, #1
 800656e:	d016      	beq.n	800659e <remote_launcher_control_input+0x4e>
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006570:	4b17      	ldr	r3, [pc, #92]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006572:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006576:	2b01      	cmp	r3, #1
 8006578:	d002      	beq.n	8006580 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 800657a:	4b16      	ldr	r3, [pc, #88]	; (80065d4 <remote_launcher_control_input+0x84>)
 800657c:	2200      	movs	r2, #0
 800657e:	701a      	strb	r2, [r3, #0]
		}
		if (remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8006580:	4b13      	ldr	r3, [pc, #76]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006582:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006586:	2b01      	cmp	r3, #1
 8006588:	d102      	bne.n	8006590 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 800658a:	4b13      	ldr	r3, [pc, #76]	; (80065d8 <remote_launcher_control_input+0x88>)
 800658c:	2200      	movs	r2, #0
 800658e:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.gun_feeding_speed = 0;
 8006590:	4b11      	ldr	r3, [pc, #68]	; (80065d8 <remote_launcher_control_input+0x88>)
 8006592:	2200      	movs	r2, #0
 8006594:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8006596:	4b10      	ldr	r3, [pc, #64]	; (80065d8 <remote_launcher_control_input+0x88>)
 8006598:	2200      	movs	r2, #0
 800659a:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.gun_feeding_speed = 0;
		}
	}

}
 800659c:	e011      	b.n	80065c2 <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 800659e:	4b0e      	ldr	r3, [pc, #56]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065a0:	2201      	movs	r2, #1
 80065a2:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 80065a4:	4b0c      	ldr	r3, [pc, #48]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065a6:	2201      	movs	r2, #1
 80065a8:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch == ge_LSW_UNSAFE) {
 80065aa:	4b09      	ldr	r3, [pc, #36]	; (80065d0 <remote_launcher_control_input+0x80>)
 80065ac:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80065b0:	2b01      	cmp	r3, #1
 80065b2:	d103      	bne.n	80065bc <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.gun_feeding_speed = 1;
 80065b4:	4b08      	ldr	r3, [pc, #32]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065b6:	2201      	movs	r2, #1
 80065b8:	805a      	strh	r2, [r3, #2]
}
 80065ba:	e002      	b.n	80065c2 <remote_launcher_control_input+0x72>
			launcher_ctrl_data.gun_feeding_speed = 0;
 80065bc:	4b06      	ldr	r3, [pc, #24]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065be:	2200      	movs	r2, #0
 80065c0:	805a      	strh	r2, [r3, #2]
}
 80065c2:	bf00      	nop
 80065c4:	46bd      	mov	sp, r7
 80065c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ca:	4770      	bx	lr
 80065cc:	20002f98 	.word	0x20002f98
 80065d0:	20000358 	.word	0x20000358
 80065d4:	20002f99 	.word	0x20002f99
 80065d8:	20002f40 	.word	0x20002f40

080065dc <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 80065dc:	b480      	push	{r7}
 80065de:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 80065e0:	4b1a      	ldr	r3, [pc, #104]	; (800664c <aimbot_pid_init+0x70>)
 80065e2:	f04f 0200 	mov.w	r2, #0
 80065e6:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 80065e8:	4b18      	ldr	r3, [pc, #96]	; (800664c <aimbot_pid_init+0x70>)
 80065ea:	f04f 0200 	mov.w	r2, #0
 80065ee:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 80065f0:	4b17      	ldr	r3, [pc, #92]	; (8006650 <aimbot_pid_init+0x74>)
 80065f2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80065f6:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 80065f8:	4b15      	ldr	r3, [pc, #84]	; (8006650 <aimbot_pid_init+0x74>)
 80065fa:	f04f 0200 	mov.w	r2, #0
 80065fe:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8006600:	4b13      	ldr	r3, [pc, #76]	; (8006650 <aimbot_pid_init+0x74>)
 8006602:	f04f 0200 	mov.w	r2, #0
 8006606:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8006608:	4b11      	ldr	r3, [pc, #68]	; (8006650 <aimbot_pid_init+0x74>)
 800660a:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800660e:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8006610:	4b0f      	ldr	r3, [pc, #60]	; (8006650 <aimbot_pid_init+0x74>)
 8006612:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8006616:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 8006618:	4b0e      	ldr	r3, [pc, #56]	; (8006654 <aimbot_pid_init+0x78>)
 800661a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800661e:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 8006620:	4b0c      	ldr	r3, [pc, #48]	; (8006654 <aimbot_pid_init+0x78>)
 8006622:	f04f 0200 	mov.w	r2, #0
 8006626:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 8006628:	4b0a      	ldr	r3, [pc, #40]	; (8006654 <aimbot_pid_init+0x78>)
 800662a:	f04f 0200 	mov.w	r2, #0
 800662e:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 8006630:	4b08      	ldr	r3, [pc, #32]	; (8006654 <aimbot_pid_init+0x78>)
 8006632:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8006636:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 8006638:	4b06      	ldr	r3, [pc, #24]	; (8006654 <aimbot_pid_init+0x78>)
 800663a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800663e:	619a      	str	r2, [r3, #24]
}
 8006640:	bf00      	nop
 8006642:	46bd      	mov	sp, r7
 8006644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006648:	4770      	bx	lr
 800664a:	bf00      	nop
 800664c:	20003014 	.word	0x20003014
 8006650:	20002fe0 	.word	0x20002fe0
 8006654:	20002fb0 	.word	0x20002fb0

08006658 <joint_motor_init>:
 * FreeRTOS task for gimbal controls
 * Has HIGH2 priority
 *
 */

void joint_motor_init(motor_data_t *motor_data){
 8006658:	b580      	push	{r7, lr}
 800665a:	b082      	sub	sp, #8
 800665c:	af00      	add	r7, sp, #0
 800665e:	6078      	str	r0, [r7, #4]
	motor_data[7].id = L1_MOTOR_ID;
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	f503 63d2 	add.w	r3, r3, #1680	; 0x690
 8006666:	2208      	movs	r2, #8
 8006668:	801a      	strh	r2, [r3, #0]
	motor_data[6].id = L2_MOTOR_ID;
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	f503 63b4 	add.w	r3, r3, #1440	; 0x5a0
 8006670:	2207      	movs	r2, #7
 8006672:	801a      	strh	r2, [r3, #0]
	motor_data[5].id = R2_MOTOR_ID;
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	f503 6396 	add.w	r3, r3, #1200	; 0x4b0
 800667a:	2206      	movs	r2, #6
 800667c:	801a      	strh	r2, [r3, #0]
	motor_data[4].id = R1_MOTOR_ID;
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	f503 7370 	add.w	r3, r3, #960	; 0x3c0
 8006684:	2205      	movs	r2, #5
 8006686:	801a      	strh	r2, [r3, #0]
	jointmotor_control_loop(&leg_move);
 8006688:	4803      	ldr	r0, [pc, #12]	; (8006698 <joint_motor_init+0x40>)
 800668a:	f000 fde9 	bl	8007260 <jointmotor_control_loop>

}
 800668e:	bf00      	nop
 8006690:	3708      	adds	r7, #8
 8006692:	46bd      	mov	sp, r7
 8006694:	bd80      	pop	{r7, pc}
 8006696:	bf00      	nop
 8006698:	2000301c 	.word	0x2000301c

0800669c <gimbal_control_task>:

void gimbal_control_task(void *argument) {
 800669c:	b580      	push	{r7, lr}
 800669e:	b086      	sub	sp, #24
 80066a0:	af02      	add	r7, sp, #8
 80066a2:	6078      	str	r0, [r7, #4]
	TickType_t start_time;
	//initialize
	joint_motor_init(&can_motors[24]);
 80066a4:	4813      	ldr	r0, [pc, #76]	; (80066f4 <gimbal_control_task+0x58>)
 80066a6:	f7ff ffd7 	bl	8006658 <joint_motor_init>

	while (1) {
		xEventGroupWaitBits(gimbal_event_group, 0b11, pdTRUE, pdTRUE,
 80066aa:	4b13      	ldr	r3, [pc, #76]	; (80066f8 <gimbal_control_task+0x5c>)
 80066ac:	6818      	ldr	r0, [r3, #0]
 80066ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80066b2:	9300      	str	r3, [sp, #0]
 80066b4:	2301      	movs	r3, #1
 80066b6:	2201      	movs	r2, #1
 80066b8:	2103      	movs	r1, #3
 80066ba:	f014 ff77 	bl	801b5ac <xEventGroupWaitBits>
		portMAX_DELAY);
		start_time = xTaskGetTickCount();
 80066be:	f016 fb37 	bl	801cd30 <xTaskGetTickCount>
 80066c2:	4603      	mov	r3, r0
 80066c4:	60fb      	str	r3, [r7, #12]
//		if (gimbal_ctrl_data.enabled) {
//			if (gimbal_ctrl_data.imu_mode) {
		leg_control(&leg_move);
 80066c6:	480d      	ldr	r0, [pc, #52]	; (80066fc <gimbal_control_task+0x60>)
 80066c8:	f000 f892 	bl	80067f0 <leg_control>
		jointmotor_control_loop(&leg_move);
 80066cc:	480b      	ldr	r0, [pc, #44]	; (80066fc <gimbal_control_task+0x60>)
 80066ce:	f000 fdc7 	bl	8007260 <jointmotor_control_loop>
		// joint_motor_send_can(&leg_move, R1_MOTOR_ID, R2_MOTOR_ID, L1_MOTOR_ID, L2_MOTOR_ID);
//
//		}
		status_led(2, off_led);
 80066d2:	2101      	movs	r1, #1
 80066d4:	2002      	movs	r0, #2
 80066d6:	f7fb fcf3 	bl	80020c0 <status_led>
		xEventGroupClearBits(gimbal_event_group, 0b11);
 80066da:	4b07      	ldr	r3, [pc, #28]	; (80066f8 <gimbal_control_task+0x5c>)
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	2103      	movs	r1, #3
 80066e0:	4618      	mov	r0, r3
 80066e2:	f015 f831 	bl	801b748 <xEventGroupClearBits>
		vTaskDelayUntil(&start_time, GIMBAL_DELAY);
 80066e6:	f107 030c 	add.w	r3, r7, #12
 80066ea:	2105      	movs	r1, #5
 80066ec:	4618      	mov	r0, r3
 80066ee:	f016 f951 	bl	801c994 <vTaskDelayUntil>
	while (1) {
 80066f2:	e7da      	b.n	80066aa <gimbal_control_task+0xe>
 80066f4:	20002f28 	.word	0x20002f28
 80066f8:	200004c8 	.word	0x200004c8
 80066fc:	2000301c 	.word	0x2000301c

08006700 <calculate_torque>:
	}
	//should not run here
}


float calculate_torque(float x) {
 8006700:	b580      	push	{r7, lr}
 8006702:	b084      	sub	sp, #16
 8006704:	af00      	add	r7, sp, #0
 8006706:	ed87 0a01 	vstr	s0, [r7, #4]
    // Calculate y using the absolute value of x
    float y = (1.2 * fabs(x) + 0.1)/3*16000;
 800670a:	edd7 7a01 	vldr	s15, [r7, #4]
 800670e:	eef0 7ae7 	vabs.f32	s15, s15
 8006712:	ee17 0a90 	vmov	r0, s15
 8006716:	f7f9 ff17 	bl	8000548 <__aeabi_f2d>
 800671a:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 800671e:	4b2c      	ldr	r3, [pc, #176]	; (80067d0 <calculate_torque+0xd0>)
 8006720:	f7f9 ff6a 	bl	80005f8 <__aeabi_dmul>
 8006724:	4602      	mov	r2, r0
 8006726:	460b      	mov	r3, r1
 8006728:	4610      	mov	r0, r2
 800672a:	4619      	mov	r1, r3
 800672c:	a326      	add	r3, pc, #152	; (adr r3, 80067c8 <calculate_torque+0xc8>)
 800672e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006732:	f7f9 fdab 	bl	800028c <__adddf3>
 8006736:	4602      	mov	r2, r0
 8006738:	460b      	mov	r3, r1
 800673a:	4610      	mov	r0, r2
 800673c:	4619      	mov	r1, r3
 800673e:	f04f 0200 	mov.w	r2, #0
 8006742:	4b24      	ldr	r3, [pc, #144]	; (80067d4 <calculate_torque+0xd4>)
 8006744:	f7fa f882 	bl	800084c <__aeabi_ddiv>
 8006748:	4602      	mov	r2, r0
 800674a:	460b      	mov	r3, r1
 800674c:	4610      	mov	r0, r2
 800674e:	4619      	mov	r1, r3
 8006750:	f04f 0200 	mov.w	r2, #0
 8006754:	4b20      	ldr	r3, [pc, #128]	; (80067d8 <calculate_torque+0xd8>)
 8006756:	f7f9 ff4f 	bl	80005f8 <__aeabi_dmul>
 800675a:	4602      	mov	r2, r0
 800675c:	460b      	mov	r3, r1
 800675e:	4610      	mov	r0, r2
 8006760:	4619      	mov	r1, r3
 8006762:	f7fa fa41 	bl	8000be8 <__aeabi_d2f>
 8006766:	4603      	mov	r3, r0
 8006768:	60fb      	str	r3, [r7, #12]
    LIMIT_MIN_MAX(y,-16000,16000);
 800676a:	edd7 7a03 	vldr	s15, [r7, #12]
 800676e:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 80067dc <calculate_torque+0xdc>
 8006772:	eef4 7ac7 	vcmpe.f32	s15, s14
 8006776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800677a:	d801      	bhi.n	8006780 <calculate_torque+0x80>
 800677c:	4b18      	ldr	r3, [pc, #96]	; (80067e0 <calculate_torque+0xe0>)
 800677e:	e00b      	b.n	8006798 <calculate_torque+0x98>
 8006780:	edd7 7a03 	vldr	s15, [r7, #12]
 8006784:	ed9f 7a17 	vldr	s14, [pc, #92]	; 80067e4 <calculate_torque+0xe4>
 8006788:	eef4 7ac7 	vcmpe.f32	s15, s14
 800678c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006790:	db01      	blt.n	8006796 <calculate_torque+0x96>
 8006792:	4b15      	ldr	r3, [pc, #84]	; (80067e8 <calculate_torque+0xe8>)
 8006794:	e000      	b.n	8006798 <calculate_torque+0x98>
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	60fb      	str	r3, [r7, #12]

    // Preserve the original sign of x
    if (x < 0) {
 800679a:	edd7 7a01 	vldr	s15, [r7, #4]
 800679e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80067a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80067a6:	d505      	bpl.n	80067b4 <calculate_torque+0xb4>
        y = -y;
 80067a8:	edd7 7a03 	vldr	s15, [r7, #12]
 80067ac:	eef1 7a67 	vneg.f32	s15, s15
 80067b0:	edc7 7a03 	vstr	s15, [r7, #12]
    }

    return y;
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	ee07 3a90 	vmov	s15, r3
}
 80067ba:	eeb0 0a67 	vmov.f32	s0, s15
 80067be:	3710      	adds	r7, #16
 80067c0:	46bd      	mov	sp, r7
 80067c2:	bd80      	pop	{r7, pc}
 80067c4:	f3af 8000 	nop.w
 80067c8:	9999999a 	.word	0x9999999a
 80067cc:	3fb99999 	.word	0x3fb99999
 80067d0:	3ff33333 	.word	0x3ff33333
 80067d4:	40080000 	.word	0x40080000
 80067d8:	40cf4000 	.word	0x40cf4000
 80067dc:	c67a0000 	.word	0xc67a0000
 80067e0:	c67a0000 	.word	0xc67a0000
 80067e4:	467a0000 	.word	0x467a0000
 80067e8:	467a0000 	.word	0x467a0000
 80067ec:	00000000 	.word	0x00000000

080067f0 <leg_control>:



void leg_control(leg_move_t *leg_move_update) {
 80067f0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80067f4:	b082      	sub	sp, #8
 80067f6:	af00      	add	r7, sp, #0
 80067f8:	6078      	str	r0, [r7, #4]

	leg_move_update->joint_motor[0].angle = can_motors[4].angle_data.adj_ang;// R1
 80067fa:	4bd9      	ldr	r3, [pc, #868]	; (8006b60 <leg_control+0x370>)
 80067fc:	f203 438c 	addw	r3, r3, #1164	; 0x48c
 8006800:	681a      	ldr	r2, [r3, #0]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	605a      	str	r2, [r3, #4]
	leg_move_update->joint_motor[1].angle = can_motors[5].angle_data.adj_ang;//R2
 8006806:	4bd6      	ldr	r3, [pc, #856]	; (8006b60 <leg_control+0x370>)
 8006808:	f203 537c 	addw	r3, r3, #1404	; 0x57c
 800680c:	681a      	ldr	r2, [r3, #0]
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	615a      	str	r2, [r3, #20]
	leg_move_update->joint_motor[2].angle = can_motors[6].angle_data.adj_ang;//L2
 8006812:	4bd3      	ldr	r3, [pc, #844]	; (8006b60 <leg_control+0x370>)
 8006814:	f203 636c 	addw	r3, r3, #1644	; 0x66c
 8006818:	681a      	ldr	r2, [r3, #0]
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	625a      	str	r2, [r3, #36]	; 0x24
	leg_move_update->joint_motor[3].angle = can_motors[7].angle_data.adj_ang+PI;//L1
 800681e:	4bd0      	ldr	r3, [pc, #832]	; (8006b60 <leg_control+0x370>)
 8006820:	f203 735c 	addw	r3, r3, #1884	; 0x75c
 8006824:	edd3 7a00 	vldr	s15, [r3]
 8006828:	ed9f 7ace 	vldr	s14, [pc, #824]	; 8006b64 <leg_control+0x374>
 800682c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34


	//left and right leg height// todo:find average
	leg_move_update->yR1 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[0].angle),2))-l2*sin(leg_move_update->joint_motor[0].angle));//0 3
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	685b      	ldr	r3, [r3, #4]
 800683a:	4618      	mov	r0, r3
 800683c:	f7f9 fe84 	bl	8000548 <__aeabi_f2d>
 8006840:	4602      	mov	r2, r0
 8006842:	460b      	mov	r3, r1
 8006844:	ec43 2b10 	vmov	d0, r2, r3
 8006848:	f01d fc4a 	bl	80240e0 <cos>
 800684c:	ec51 0b10 	vmov	r0, r1, d0
 8006850:	a3bb      	add	r3, pc, #748	; (adr r3, 8006b40 <leg_control+0x350>)
 8006852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006856:	f7f9 fecf 	bl	80005f8 <__aeabi_dmul>
 800685a:	4602      	mov	r2, r0
 800685c:	460b      	mov	r3, r1
 800685e:	a1ba      	add	r1, pc, #744	; (adr r1, 8006b48 <leg_control+0x358>)
 8006860:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006864:	f7f9 fd10 	bl	8000288 <__aeabi_dsub>
 8006868:	4602      	mov	r2, r0
 800686a:	460b      	mov	r3, r1
 800686c:	ec43 2b17 	vmov	d7, r2, r3
 8006870:	ed9f 1bb7 	vldr	d1, [pc, #732]	; 8006b50 <leg_control+0x360>
 8006874:	eeb0 0a47 	vmov.f32	s0, s14
 8006878:	eef0 0a67 	vmov.f32	s1, s15
 800687c:	f01d fd9e 	bl	80243bc <pow>
 8006880:	ec53 2b10 	vmov	r2, r3, d0
 8006884:	a1b4      	add	r1, pc, #720	; (adr r1, 8006b58 <leg_control+0x368>)
 8006886:	e9d1 0100 	ldrd	r0, r1, [r1]
 800688a:	f7f9 fcfd 	bl	8000288 <__aeabi_dsub>
 800688e:	4602      	mov	r2, r0
 8006890:	460b      	mov	r3, r1
 8006892:	ec43 2b17 	vmov	d7, r2, r3
 8006896:	eeb0 0a47 	vmov.f32	s0, s14
 800689a:	eef0 0a67 	vmov.f32	s1, s15
 800689e:	f01d fdfd 	bl	802449c <sqrt>
 80068a2:	ec5b ab10 	vmov	sl, fp, d0
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	685b      	ldr	r3, [r3, #4]
 80068aa:	4618      	mov	r0, r3
 80068ac:	f7f9 fe4c 	bl	8000548 <__aeabi_f2d>
 80068b0:	4602      	mov	r2, r0
 80068b2:	460b      	mov	r3, r1
 80068b4:	ec43 2b10 	vmov	d0, r2, r3
 80068b8:	f01d fcf2 	bl	80242a0 <sin>
 80068bc:	ec51 0b10 	vmov	r0, r1, d0
 80068c0:	a39f      	add	r3, pc, #636	; (adr r3, 8006b40 <leg_control+0x350>)
 80068c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068c6:	f7f9 fe97 	bl	80005f8 <__aeabi_dmul>
 80068ca:	4602      	mov	r2, r0
 80068cc:	460b      	mov	r3, r1
 80068ce:	4650      	mov	r0, sl
 80068d0:	4659      	mov	r1, fp
 80068d2:	f7f9 fcd9 	bl	8000288 <__aeabi_dsub>
 80068d6:	4602      	mov	r2, r0
 80068d8:	460b      	mov	r3, r1
 80068da:	4610      	mov	r0, r2
 80068dc:	4619      	mov	r1, r3
 80068de:	f7fa f983 	bl	8000be8 <__aeabi_d2f>
 80068e2:	4602      	mov	r2, r0
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	655a      	str	r2, [r3, #84]	; 0x54
	leg_move_update->yR2 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[1].angle),2))-l2*sin(-1*leg_move_update->joint_motor[1].angle));//0 3
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	695b      	ldr	r3, [r3, #20]
 80068ec:	4618      	mov	r0, r3
 80068ee:	f7f9 fe2b 	bl	8000548 <__aeabi_f2d>
 80068f2:	4602      	mov	r2, r0
 80068f4:	460b      	mov	r3, r1
 80068f6:	ec43 2b10 	vmov	d0, r2, r3
 80068fa:	f01d fbf1 	bl	80240e0 <cos>
 80068fe:	ec51 0b10 	vmov	r0, r1, d0
 8006902:	a38f      	add	r3, pc, #572	; (adr r3, 8006b40 <leg_control+0x350>)
 8006904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006908:	f7f9 fe76 	bl	80005f8 <__aeabi_dmul>
 800690c:	4602      	mov	r2, r0
 800690e:	460b      	mov	r3, r1
 8006910:	a18d      	add	r1, pc, #564	; (adr r1, 8006b48 <leg_control+0x358>)
 8006912:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006916:	f7f9 fcb7 	bl	8000288 <__aeabi_dsub>
 800691a:	4602      	mov	r2, r0
 800691c:	460b      	mov	r3, r1
 800691e:	ec43 2b17 	vmov	d7, r2, r3
 8006922:	ed9f 1b8b 	vldr	d1, [pc, #556]	; 8006b50 <leg_control+0x360>
 8006926:	eeb0 0a47 	vmov.f32	s0, s14
 800692a:	eef0 0a67 	vmov.f32	s1, s15
 800692e:	f01d fd45 	bl	80243bc <pow>
 8006932:	ec53 2b10 	vmov	r2, r3, d0
 8006936:	a188      	add	r1, pc, #544	; (adr r1, 8006b58 <leg_control+0x368>)
 8006938:	e9d1 0100 	ldrd	r0, r1, [r1]
 800693c:	f7f9 fca4 	bl	8000288 <__aeabi_dsub>
 8006940:	4602      	mov	r2, r0
 8006942:	460b      	mov	r3, r1
 8006944:	ec43 2b17 	vmov	d7, r2, r3
 8006948:	eeb0 0a47 	vmov.f32	s0, s14
 800694c:	eef0 0a67 	vmov.f32	s1, s15
 8006950:	f01d fda4 	bl	802449c <sqrt>
 8006954:	ec5b ab10 	vmov	sl, fp, d0
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	695b      	ldr	r3, [r3, #20]
 800695c:	4618      	mov	r0, r3
 800695e:	f7f9 fdf3 	bl	8000548 <__aeabi_f2d>
 8006962:	4602      	mov	r2, r0
 8006964:	460b      	mov	r3, r1
 8006966:	ec43 2b10 	vmov	d0, r2, r3
 800696a:	f01d fc99 	bl	80242a0 <sin>
 800696e:	ec51 0b10 	vmov	r0, r1, d0
 8006972:	a373      	add	r3, pc, #460	; (adr r3, 8006b40 <leg_control+0x350>)
 8006974:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006978:	f7f9 fe3e 	bl	80005f8 <__aeabi_dmul>
 800697c:	4602      	mov	r2, r0
 800697e:	460b      	mov	r3, r1
 8006980:	4650      	mov	r0, sl
 8006982:	4659      	mov	r1, fp
 8006984:	f7f9 fc82 	bl	800028c <__adddf3>
 8006988:	4602      	mov	r2, r0
 800698a:	460b      	mov	r3, r1
 800698c:	4610      	mov	r0, r2
 800698e:	4619      	mov	r1, r3
 8006990:	f7fa f92a 	bl	8000be8 <__aeabi_d2f>
 8006994:	4602      	mov	r2, r0
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	659a      	str	r2, [r3, #88]	; 0x58
//	leg_move_update->yR = (leg_move_update->yR2+leg_move_update->yR1)/2;
	leg_move_update->yL2 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[2].angle),2))-l2*sin(leg_move_update->joint_motor[2].angle));// 0 3
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800699e:	4618      	mov	r0, r3
 80069a0:	f7f9 fdd2 	bl	8000548 <__aeabi_f2d>
 80069a4:	4602      	mov	r2, r0
 80069a6:	460b      	mov	r3, r1
 80069a8:	ec43 2b10 	vmov	d0, r2, r3
 80069ac:	f01d fb98 	bl	80240e0 <cos>
 80069b0:	ec51 0b10 	vmov	r0, r1, d0
 80069b4:	a362      	add	r3, pc, #392	; (adr r3, 8006b40 <leg_control+0x350>)
 80069b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069ba:	f7f9 fe1d 	bl	80005f8 <__aeabi_dmul>
 80069be:	4602      	mov	r2, r0
 80069c0:	460b      	mov	r3, r1
 80069c2:	a161      	add	r1, pc, #388	; (adr r1, 8006b48 <leg_control+0x358>)
 80069c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80069c8:	f7f9 fc5e 	bl	8000288 <__aeabi_dsub>
 80069cc:	4602      	mov	r2, r0
 80069ce:	460b      	mov	r3, r1
 80069d0:	ec43 2b17 	vmov	d7, r2, r3
 80069d4:	ed9f 1b5e 	vldr	d1, [pc, #376]	; 8006b50 <leg_control+0x360>
 80069d8:	eeb0 0a47 	vmov.f32	s0, s14
 80069dc:	eef0 0a67 	vmov.f32	s1, s15
 80069e0:	f01d fcec 	bl	80243bc <pow>
 80069e4:	ec53 2b10 	vmov	r2, r3, d0
 80069e8:	a15b      	add	r1, pc, #364	; (adr r1, 8006b58 <leg_control+0x368>)
 80069ea:	e9d1 0100 	ldrd	r0, r1, [r1]
 80069ee:	f7f9 fc4b 	bl	8000288 <__aeabi_dsub>
 80069f2:	4602      	mov	r2, r0
 80069f4:	460b      	mov	r3, r1
 80069f6:	ec43 2b17 	vmov	d7, r2, r3
 80069fa:	eeb0 0a47 	vmov.f32	s0, s14
 80069fe:	eef0 0a67 	vmov.f32	s1, s15
 8006a02:	f01d fd4b 	bl	802449c <sqrt>
 8006a06:	ec5b ab10 	vmov	sl, fp, d0
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a0e:	4618      	mov	r0, r3
 8006a10:	f7f9 fd9a 	bl	8000548 <__aeabi_f2d>
 8006a14:	4602      	mov	r2, r0
 8006a16:	460b      	mov	r3, r1
 8006a18:	ec43 2b10 	vmov	d0, r2, r3
 8006a1c:	f01d fc40 	bl	80242a0 <sin>
 8006a20:	ec51 0b10 	vmov	r0, r1, d0
 8006a24:	a346      	add	r3, pc, #280	; (adr r3, 8006b40 <leg_control+0x350>)
 8006a26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a2a:	f7f9 fde5 	bl	80005f8 <__aeabi_dmul>
 8006a2e:	4602      	mov	r2, r0
 8006a30:	460b      	mov	r3, r1
 8006a32:	4650      	mov	r0, sl
 8006a34:	4659      	mov	r1, fp
 8006a36:	f7f9 fc27 	bl	8000288 <__aeabi_dsub>
 8006a3a:	4602      	mov	r2, r0
 8006a3c:	460b      	mov	r3, r1
 8006a3e:	4610      	mov	r0, r2
 8006a40:	4619      	mov	r1, r3
 8006a42:	f7fa f8d1 	bl	8000be8 <__aeabi_d2f>
 8006a46:	4602      	mov	r2, r0
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	64da      	str	r2, [r3, #76]	; 0x4c
	leg_move_update->yL1 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[3].angle),2))-l2*sin(-1*leg_move_update->joint_motor[3].angle));// 0 3
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006a50:	4618      	mov	r0, r3
 8006a52:	f7f9 fd79 	bl	8000548 <__aeabi_f2d>
 8006a56:	4602      	mov	r2, r0
 8006a58:	460b      	mov	r3, r1
 8006a5a:	ec43 2b10 	vmov	d0, r2, r3
 8006a5e:	f01d fb3f 	bl	80240e0 <cos>
 8006a62:	ec51 0b10 	vmov	r0, r1, d0
 8006a66:	a336      	add	r3, pc, #216	; (adr r3, 8006b40 <leg_control+0x350>)
 8006a68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a6c:	f7f9 fdc4 	bl	80005f8 <__aeabi_dmul>
 8006a70:	4602      	mov	r2, r0
 8006a72:	460b      	mov	r3, r1
 8006a74:	a134      	add	r1, pc, #208	; (adr r1, 8006b48 <leg_control+0x358>)
 8006a76:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006a7a:	f7f9 fc05 	bl	8000288 <__aeabi_dsub>
 8006a7e:	4602      	mov	r2, r0
 8006a80:	460b      	mov	r3, r1
 8006a82:	ec43 2b17 	vmov	d7, r2, r3
 8006a86:	ed9f 1b32 	vldr	d1, [pc, #200]	; 8006b50 <leg_control+0x360>
 8006a8a:	eeb0 0a47 	vmov.f32	s0, s14
 8006a8e:	eef0 0a67 	vmov.f32	s1, s15
 8006a92:	f01d fc93 	bl	80243bc <pow>
 8006a96:	ec53 2b10 	vmov	r2, r3, d0
 8006a9a:	a12f      	add	r1, pc, #188	; (adr r1, 8006b58 <leg_control+0x368>)
 8006a9c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006aa0:	f7f9 fbf2 	bl	8000288 <__aeabi_dsub>
 8006aa4:	4602      	mov	r2, r0
 8006aa6:	460b      	mov	r3, r1
 8006aa8:	ec43 2b17 	vmov	d7, r2, r3
 8006aac:	eeb0 0a47 	vmov.f32	s0, s14
 8006ab0:	eef0 0a67 	vmov.f32	s1, s15
 8006ab4:	f01d fcf2 	bl	802449c <sqrt>
 8006ab8:	ec5b ab10 	vmov	sl, fp, d0
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	f7f9 fd41 	bl	8000548 <__aeabi_f2d>
 8006ac6:	4602      	mov	r2, r0
 8006ac8:	460b      	mov	r3, r1
 8006aca:	ec43 2b10 	vmov	d0, r2, r3
 8006ace:	f01d fbe7 	bl	80242a0 <sin>
 8006ad2:	ec51 0b10 	vmov	r0, r1, d0
 8006ad6:	a31a      	add	r3, pc, #104	; (adr r3, 8006b40 <leg_control+0x350>)
 8006ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006adc:	f7f9 fd8c 	bl	80005f8 <__aeabi_dmul>
 8006ae0:	4602      	mov	r2, r0
 8006ae2:	460b      	mov	r3, r1
 8006ae4:	4650      	mov	r0, sl
 8006ae6:	4659      	mov	r1, fp
 8006ae8:	f7f9 fbd0 	bl	800028c <__adddf3>
 8006aec:	4602      	mov	r2, r0
 8006aee:	460b      	mov	r3, r1
 8006af0:	4610      	mov	r0, r2
 8006af2:	4619      	mov	r1, r3
 8006af4:	f7fa f878 	bl	8000be8 <__aeabi_d2f>
 8006af8:	4602      	mov	r2, r0
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	649a      	str	r2, [r3, #72]	; 0x48
//	leg_move_update->yL = (leg_move_update->yL2+leg_move_update->yL1)/2;
//	leg_move_update->y  = (leg_move_update->yR +leg_move_update->yL)/2;

	// acc of Z-axis
	leg_move_update->z_accel = imu_data.accel_data.az;
 8006afe:	4b1a      	ldr	r3, [pc, #104]	; (8006b68 <leg_control+0x378>)
 8006b00:	699a      	ldr	r2, [r3, #24]
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	65da      	str	r2, [r3, #92]	; 0x5c

	//末端执行力系数
	leg_move_update->vyR1 =-(l1-l2*cos(-1*leg_move_update->joint_motor[0].angle))*l2*sin(-1*leg_move_update->joint_motor[0].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[0].angle),2))-l2*cos(-1*leg_move_update->joint_motor[0].angle);// 0 3
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	edd3 7a01 	vldr	s15, [r3, #4]
 8006b0c:	eef1 7a67 	vneg.f32	s15, s15
 8006b10:	ee17 3a90 	vmov	r3, s15
 8006b14:	4618      	mov	r0, r3
 8006b16:	f7f9 fd17 	bl	8000548 <__aeabi_f2d>
 8006b1a:	4602      	mov	r2, r0
 8006b1c:	460b      	mov	r3, r1
 8006b1e:	ec43 2b10 	vmov	d0, r2, r3
 8006b22:	f01d fadd 	bl	80240e0 <cos>
 8006b26:	ec51 0b10 	vmov	r0, r1, d0
 8006b2a:	a305      	add	r3, pc, #20	; (adr r3, 8006b40 <leg_control+0x350>)
 8006b2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b30:	f7f9 fd62 	bl	80005f8 <__aeabi_dmul>
 8006b34:	4602      	mov	r2, r0
 8006b36:	460b      	mov	r3, r1
 8006b38:	e018      	b.n	8006b6c <leg_control+0x37c>
 8006b3a:	bf00      	nop
 8006b3c:	f3af 8000 	nop.w
 8006b40:	47ae147b 	.word	0x47ae147b
 8006b44:	3fb47ae1 	.word	0x3fb47ae1
 8006b48:	9999999a 	.word	0x9999999a
 8006b4c:	3fa99999 	.word	0x3fa99999
 8006b50:	00000000 	.word	0x00000000
 8006b54:	40000000 	.word	0x40000000
 8006b58:	eb1c432d 	.word	0xeb1c432d
 8006b5c:	3f9a36e2 	.word	0x3f9a36e2
 8006b60:	200018a8 	.word	0x200018a8
 8006b64:	40490fdb 	.word	0x40490fdb
 8006b68:	20000394 	.word	0x20000394
 8006b6c:	f20f 4138 	addw	r1, pc, #1080	; 0x438
 8006b70:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006b74:	f7f9 fb88 	bl	8000288 <__aeabi_dsub>
 8006b78:	4602      	mov	r2, r0
 8006b7a:	460b      	mov	r3, r1
 8006b7c:	4690      	mov	r8, r2
 8006b7e:	f083 4900 	eor.w	r9, r3, #2147483648	; 0x80000000
 8006b82:	f20f 432c 	addw	r3, pc, #1068	; 0x42c
 8006b86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b8a:	4640      	mov	r0, r8
 8006b8c:	4649      	mov	r1, r9
 8006b8e:	f7f9 fd33 	bl	80005f8 <__aeabi_dmul>
 8006b92:	4602      	mov	r2, r0
 8006b94:	460b      	mov	r3, r1
 8006b96:	4690      	mov	r8, r2
 8006b98:	4699      	mov	r9, r3
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	edd3 7a01 	vldr	s15, [r3, #4]
 8006ba0:	eef1 7a67 	vneg.f32	s15, s15
 8006ba4:	ee17 3a90 	vmov	r3, s15
 8006ba8:	4618      	mov	r0, r3
 8006baa:	f7f9 fccd 	bl	8000548 <__aeabi_f2d>
 8006bae:	4602      	mov	r2, r0
 8006bb0:	460b      	mov	r3, r1
 8006bb2:	ec43 2b10 	vmov	d0, r2, r3
 8006bb6:	f01d fb73 	bl	80242a0 <sin>
 8006bba:	ec53 2b10 	vmov	r2, r3, d0
 8006bbe:	4640      	mov	r0, r8
 8006bc0:	4649      	mov	r1, r9
 8006bc2:	f7f9 fd19 	bl	80005f8 <__aeabi_dmul>
 8006bc6:	4602      	mov	r2, r0
 8006bc8:	460b      	mov	r3, r1
 8006bca:	4690      	mov	r8, r2
 8006bcc:	4699      	mov	r9, r3
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	edd3 7a01 	vldr	s15, [r3, #4]
 8006bd4:	eef1 7a67 	vneg.f32	s15, s15
 8006bd8:	ee17 3a90 	vmov	r3, s15
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f7f9 fcb3 	bl	8000548 <__aeabi_f2d>
 8006be2:	4602      	mov	r2, r0
 8006be4:	460b      	mov	r3, r1
 8006be6:	ec43 2b10 	vmov	d0, r2, r3
 8006bea:	f01d fa79 	bl	80240e0 <cos>
 8006bee:	ec51 0b10 	vmov	r0, r1, d0
 8006bf2:	a3ef      	add	r3, pc, #956	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006bf8:	f7f9 fcfe 	bl	80005f8 <__aeabi_dmul>
 8006bfc:	4602      	mov	r2, r0
 8006bfe:	460b      	mov	r3, r1
 8006c00:	a1e9      	add	r1, pc, #932	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006c02:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006c06:	f7f9 fb3f 	bl	8000288 <__aeabi_dsub>
 8006c0a:	4602      	mov	r2, r0
 8006c0c:	460b      	mov	r3, r1
 8006c0e:	ec43 2b17 	vmov	d7, r2, r3
 8006c12:	ed9f 1be3 	vldr	d1, [pc, #908]	; 8006fa0 <leg_control+0x7b0>
 8006c16:	eeb0 0a47 	vmov.f32	s0, s14
 8006c1a:	eef0 0a67 	vmov.f32	s1, s15
 8006c1e:	f01d fbcd 	bl	80243bc <pow>
 8006c22:	ec53 2b10 	vmov	r2, r3, d0
 8006c26:	a1e4      	add	r1, pc, #912	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006c28:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006c2c:	f7f9 fb2c 	bl	8000288 <__aeabi_dsub>
 8006c30:	4602      	mov	r2, r0
 8006c32:	460b      	mov	r3, r1
 8006c34:	ec43 2b17 	vmov	d7, r2, r3
 8006c38:	eeb0 0a47 	vmov.f32	s0, s14
 8006c3c:	eef0 0a67 	vmov.f32	s1, s15
 8006c40:	f01d fc2c 	bl	802449c <sqrt>
 8006c44:	ec53 2b10 	vmov	r2, r3, d0
 8006c48:	4640      	mov	r0, r8
 8006c4a:	4649      	mov	r1, r9
 8006c4c:	f7f9 fdfe 	bl	800084c <__aeabi_ddiv>
 8006c50:	4602      	mov	r2, r0
 8006c52:	460b      	mov	r3, r1
 8006c54:	4690      	mov	r8, r2
 8006c56:	4699      	mov	r9, r3
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	edd3 7a01 	vldr	s15, [r3, #4]
 8006c5e:	eef1 7a67 	vneg.f32	s15, s15
 8006c62:	ee17 3a90 	vmov	r3, s15
 8006c66:	4618      	mov	r0, r3
 8006c68:	f7f9 fc6e 	bl	8000548 <__aeabi_f2d>
 8006c6c:	4602      	mov	r2, r0
 8006c6e:	460b      	mov	r3, r1
 8006c70:	ec43 2b10 	vmov	d0, r2, r3
 8006c74:	f01d fa34 	bl	80240e0 <cos>
 8006c78:	ec51 0b10 	vmov	r0, r1, d0
 8006c7c:	a3cc      	add	r3, pc, #816	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c82:	f7f9 fcb9 	bl	80005f8 <__aeabi_dmul>
 8006c86:	4602      	mov	r2, r0
 8006c88:	460b      	mov	r3, r1
 8006c8a:	4640      	mov	r0, r8
 8006c8c:	4649      	mov	r1, r9
 8006c8e:	f7f9 fafb 	bl	8000288 <__aeabi_dsub>
 8006c92:	4602      	mov	r2, r0
 8006c94:	460b      	mov	r3, r1
 8006c96:	4610      	mov	r0, r2
 8006c98:	4619      	mov	r1, r3
 8006c9a:	f7f9 ffa5 	bl	8000be8 <__aeabi_d2f>
 8006c9e:	4602      	mov	r2, r0
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	675a      	str	r2, [r3, #116]	; 0x74
	leg_move_update->vyR2 = (l1-l2*cos(-1*leg_move_update->joint_motor[1].angle))*l2*sin(-1*leg_move_update->joint_motor[1].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[1].angle),2))-l2*cos(-1*leg_move_update->joint_motor[1].angle);// 0 3
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	edd3 7a05 	vldr	s15, [r3, #20]
 8006caa:	eef1 7a67 	vneg.f32	s15, s15
 8006cae:	ee17 3a90 	vmov	r3, s15
 8006cb2:	4618      	mov	r0, r3
 8006cb4:	f7f9 fc48 	bl	8000548 <__aeabi_f2d>
 8006cb8:	4602      	mov	r2, r0
 8006cba:	460b      	mov	r3, r1
 8006cbc:	ec43 2b10 	vmov	d0, r2, r3
 8006cc0:	f01d fa0e 	bl	80240e0 <cos>
 8006cc4:	ec51 0b10 	vmov	r0, r1, d0
 8006cc8:	a3b9      	add	r3, pc, #740	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cce:	f7f9 fc93 	bl	80005f8 <__aeabi_dmul>
 8006cd2:	4602      	mov	r2, r0
 8006cd4:	460b      	mov	r3, r1
 8006cd6:	a1b4      	add	r1, pc, #720	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006cd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006cdc:	f7f9 fad4 	bl	8000288 <__aeabi_dsub>
 8006ce0:	4602      	mov	r2, r0
 8006ce2:	460b      	mov	r3, r1
 8006ce4:	4610      	mov	r0, r2
 8006ce6:	4619      	mov	r1, r3
 8006ce8:	a3b1      	add	r3, pc, #708	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006cea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cee:	f7f9 fc83 	bl	80005f8 <__aeabi_dmul>
 8006cf2:	4602      	mov	r2, r0
 8006cf4:	460b      	mov	r3, r1
 8006cf6:	4690      	mov	r8, r2
 8006cf8:	4699      	mov	r9, r3
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	edd3 7a05 	vldr	s15, [r3, #20]
 8006d00:	eef1 7a67 	vneg.f32	s15, s15
 8006d04:	ee17 3a90 	vmov	r3, s15
 8006d08:	4618      	mov	r0, r3
 8006d0a:	f7f9 fc1d 	bl	8000548 <__aeabi_f2d>
 8006d0e:	4602      	mov	r2, r0
 8006d10:	460b      	mov	r3, r1
 8006d12:	ec43 2b10 	vmov	d0, r2, r3
 8006d16:	f01d fac3 	bl	80242a0 <sin>
 8006d1a:	ec53 2b10 	vmov	r2, r3, d0
 8006d1e:	4640      	mov	r0, r8
 8006d20:	4649      	mov	r1, r9
 8006d22:	f7f9 fc69 	bl	80005f8 <__aeabi_dmul>
 8006d26:	4602      	mov	r2, r0
 8006d28:	460b      	mov	r3, r1
 8006d2a:	4690      	mov	r8, r2
 8006d2c:	4699      	mov	r9, r3
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	edd3 7a05 	vldr	s15, [r3, #20]
 8006d34:	eef1 7a67 	vneg.f32	s15, s15
 8006d38:	ee17 3a90 	vmov	r3, s15
 8006d3c:	4618      	mov	r0, r3
 8006d3e:	f7f9 fc03 	bl	8000548 <__aeabi_f2d>
 8006d42:	4602      	mov	r2, r0
 8006d44:	460b      	mov	r3, r1
 8006d46:	ec43 2b10 	vmov	d0, r2, r3
 8006d4a:	f01d f9c9 	bl	80240e0 <cos>
 8006d4e:	ec51 0b10 	vmov	r0, r1, d0
 8006d52:	a397      	add	r3, pc, #604	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006d54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d58:	f7f9 fc4e 	bl	80005f8 <__aeabi_dmul>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	460b      	mov	r3, r1
 8006d60:	a191      	add	r1, pc, #580	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006d62:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006d66:	f7f9 fa8f 	bl	8000288 <__aeabi_dsub>
 8006d6a:	4602      	mov	r2, r0
 8006d6c:	460b      	mov	r3, r1
 8006d6e:	ec43 2b17 	vmov	d7, r2, r3
 8006d72:	ed9f 1b8b 	vldr	d1, [pc, #556]	; 8006fa0 <leg_control+0x7b0>
 8006d76:	eeb0 0a47 	vmov.f32	s0, s14
 8006d7a:	eef0 0a67 	vmov.f32	s1, s15
 8006d7e:	f01d fb1d 	bl	80243bc <pow>
 8006d82:	ec53 2b10 	vmov	r2, r3, d0
 8006d86:	a18c      	add	r1, pc, #560	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006d88:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006d8c:	f7f9 fa7c 	bl	8000288 <__aeabi_dsub>
 8006d90:	4602      	mov	r2, r0
 8006d92:	460b      	mov	r3, r1
 8006d94:	ec43 2b17 	vmov	d7, r2, r3
 8006d98:	eeb0 0a47 	vmov.f32	s0, s14
 8006d9c:	eef0 0a67 	vmov.f32	s1, s15
 8006da0:	f01d fb7c 	bl	802449c <sqrt>
 8006da4:	ec53 2b10 	vmov	r2, r3, d0
 8006da8:	4640      	mov	r0, r8
 8006daa:	4649      	mov	r1, r9
 8006dac:	f7f9 fd4e 	bl	800084c <__aeabi_ddiv>
 8006db0:	4602      	mov	r2, r0
 8006db2:	460b      	mov	r3, r1
 8006db4:	4690      	mov	r8, r2
 8006db6:	4699      	mov	r9, r3
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	edd3 7a05 	vldr	s15, [r3, #20]
 8006dbe:	eef1 7a67 	vneg.f32	s15, s15
 8006dc2:	ee17 3a90 	vmov	r3, s15
 8006dc6:	4618      	mov	r0, r3
 8006dc8:	f7f9 fbbe 	bl	8000548 <__aeabi_f2d>
 8006dcc:	4602      	mov	r2, r0
 8006dce:	460b      	mov	r3, r1
 8006dd0:	ec43 2b10 	vmov	d0, r2, r3
 8006dd4:	f01d f984 	bl	80240e0 <cos>
 8006dd8:	ec51 0b10 	vmov	r0, r1, d0
 8006ddc:	a374      	add	r3, pc, #464	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006dde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006de2:	f7f9 fc09 	bl	80005f8 <__aeabi_dmul>
 8006de6:	4602      	mov	r2, r0
 8006de8:	460b      	mov	r3, r1
 8006dea:	4640      	mov	r0, r8
 8006dec:	4649      	mov	r1, r9
 8006dee:	f7f9 fa4b 	bl	8000288 <__aeabi_dsub>
 8006df2:	4602      	mov	r2, r0
 8006df4:	460b      	mov	r3, r1
 8006df6:	4610      	mov	r0, r2
 8006df8:	4619      	mov	r1, r3
 8006dfa:	f7f9 fef5 	bl	8000be8 <__aeabi_d2f>
 8006dfe:	4602      	mov	r2, r0
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	671a      	str	r2, [r3, #112]	; 0x70
//	leg_move_update ->vyR = (leg_move_update->vyR1-leg_move_update->vyR2)/2;
	leg_move_update->vyL2 = -(l1-l2*cos(-1*leg_move_update->joint_motor[2].angle))*l2*sin(-1*leg_move_update->joint_motor[2].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[2].angle),2))-l2*cos(-1*leg_move_update->joint_motor[2].angle);
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e0a:	eef1 7a67 	vneg.f32	s15, s15
 8006e0e:	ee17 3a90 	vmov	r3, s15
 8006e12:	4618      	mov	r0, r3
 8006e14:	f7f9 fb98 	bl	8000548 <__aeabi_f2d>
 8006e18:	4602      	mov	r2, r0
 8006e1a:	460b      	mov	r3, r1
 8006e1c:	ec43 2b10 	vmov	d0, r2, r3
 8006e20:	f01d f95e 	bl	80240e0 <cos>
 8006e24:	ec51 0b10 	vmov	r0, r1, d0
 8006e28:	a361      	add	r3, pc, #388	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e2e:	f7f9 fbe3 	bl	80005f8 <__aeabi_dmul>
 8006e32:	4602      	mov	r2, r0
 8006e34:	460b      	mov	r3, r1
 8006e36:	a15c      	add	r1, pc, #368	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006e38:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006e3c:	f7f9 fa24 	bl	8000288 <__aeabi_dsub>
 8006e40:	4602      	mov	r2, r0
 8006e42:	460b      	mov	r3, r1
 8006e44:	4614      	mov	r4, r2
 8006e46:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8006e4a:	a359      	add	r3, pc, #356	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006e4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e50:	4620      	mov	r0, r4
 8006e52:	4629      	mov	r1, r5
 8006e54:	f7f9 fbd0 	bl	80005f8 <__aeabi_dmul>
 8006e58:	4602      	mov	r2, r0
 8006e5a:	460b      	mov	r3, r1
 8006e5c:	4614      	mov	r4, r2
 8006e5e:	461d      	mov	r5, r3
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e66:	eef1 7a67 	vneg.f32	s15, s15
 8006e6a:	ee17 3a90 	vmov	r3, s15
 8006e6e:	4618      	mov	r0, r3
 8006e70:	f7f9 fb6a 	bl	8000548 <__aeabi_f2d>
 8006e74:	4602      	mov	r2, r0
 8006e76:	460b      	mov	r3, r1
 8006e78:	ec43 2b10 	vmov	d0, r2, r3
 8006e7c:	f01d fa10 	bl	80242a0 <sin>
 8006e80:	ec53 2b10 	vmov	r2, r3, d0
 8006e84:	4620      	mov	r0, r4
 8006e86:	4629      	mov	r1, r5
 8006e88:	f7f9 fbb6 	bl	80005f8 <__aeabi_dmul>
 8006e8c:	4602      	mov	r2, r0
 8006e8e:	460b      	mov	r3, r1
 8006e90:	4614      	mov	r4, r2
 8006e92:	461d      	mov	r5, r3
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e9a:	eef1 7a67 	vneg.f32	s15, s15
 8006e9e:	ee17 3a90 	vmov	r3, s15
 8006ea2:	4618      	mov	r0, r3
 8006ea4:	f7f9 fb50 	bl	8000548 <__aeabi_f2d>
 8006ea8:	4602      	mov	r2, r0
 8006eaa:	460b      	mov	r3, r1
 8006eac:	ec43 2b10 	vmov	d0, r2, r3
 8006eb0:	f01d f916 	bl	80240e0 <cos>
 8006eb4:	ec51 0b10 	vmov	r0, r1, d0
 8006eb8:	a33d      	add	r3, pc, #244	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006eba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ebe:	f7f9 fb9b 	bl	80005f8 <__aeabi_dmul>
 8006ec2:	4602      	mov	r2, r0
 8006ec4:	460b      	mov	r3, r1
 8006ec6:	a138      	add	r1, pc, #224	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006ec8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ecc:	f7f9 f9dc 	bl	8000288 <__aeabi_dsub>
 8006ed0:	4602      	mov	r2, r0
 8006ed2:	460b      	mov	r3, r1
 8006ed4:	ec43 2b17 	vmov	d7, r2, r3
 8006ed8:	ed9f 1b31 	vldr	d1, [pc, #196]	; 8006fa0 <leg_control+0x7b0>
 8006edc:	eeb0 0a47 	vmov.f32	s0, s14
 8006ee0:	eef0 0a67 	vmov.f32	s1, s15
 8006ee4:	f01d fa6a 	bl	80243bc <pow>
 8006ee8:	ec53 2b10 	vmov	r2, r3, d0
 8006eec:	a132      	add	r1, pc, #200	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006eee:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ef2:	f7f9 f9c9 	bl	8000288 <__aeabi_dsub>
 8006ef6:	4602      	mov	r2, r0
 8006ef8:	460b      	mov	r3, r1
 8006efa:	ec43 2b17 	vmov	d7, r2, r3
 8006efe:	eeb0 0a47 	vmov.f32	s0, s14
 8006f02:	eef0 0a67 	vmov.f32	s1, s15
 8006f06:	f01d fac9 	bl	802449c <sqrt>
 8006f0a:	ec53 2b10 	vmov	r2, r3, d0
 8006f0e:	4620      	mov	r0, r4
 8006f10:	4629      	mov	r1, r5
 8006f12:	f7f9 fc9b 	bl	800084c <__aeabi_ddiv>
 8006f16:	4602      	mov	r2, r0
 8006f18:	460b      	mov	r3, r1
 8006f1a:	4614      	mov	r4, r2
 8006f1c:	461d      	mov	r5, r3
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006f24:	eef1 7a67 	vneg.f32	s15, s15
 8006f28:	ee17 3a90 	vmov	r3, s15
 8006f2c:	4618      	mov	r0, r3
 8006f2e:	f7f9 fb0b 	bl	8000548 <__aeabi_f2d>
 8006f32:	4602      	mov	r2, r0
 8006f34:	460b      	mov	r3, r1
 8006f36:	ec43 2b10 	vmov	d0, r2, r3
 8006f3a:	f01d f8d1 	bl	80240e0 <cos>
 8006f3e:	ec51 0b10 	vmov	r0, r1, d0
 8006f42:	a31b      	add	r3, pc, #108	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f48:	f7f9 fb56 	bl	80005f8 <__aeabi_dmul>
 8006f4c:	4602      	mov	r2, r0
 8006f4e:	460b      	mov	r3, r1
 8006f50:	4620      	mov	r0, r4
 8006f52:	4629      	mov	r1, r5
 8006f54:	f7f9 f998 	bl	8000288 <__aeabi_dsub>
 8006f58:	4602      	mov	r2, r0
 8006f5a:	460b      	mov	r3, r1
 8006f5c:	4610      	mov	r0, r2
 8006f5e:	4619      	mov	r1, r3
 8006f60:	f7f9 fe42 	bl	8000be8 <__aeabi_d2f>
 8006f64:	4602      	mov	r2, r0
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	669a      	str	r2, [r3, #104]	; 0x68
	leg_move_update->vyL1 = (l1-l2*cos(-1*leg_move_update->joint_motor[3].angle))*l2*sin(-1*leg_move_update->joint_motor[3].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[3].angle),2))-l2*cos(-1*leg_move_update->joint_motor[3].angle);
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8006f70:	eef1 7a67 	vneg.f32	s15, s15
 8006f74:	ee17 3a90 	vmov	r3, s15
 8006f78:	4618      	mov	r0, r3
 8006f7a:	f7f9 fae5 	bl	8000548 <__aeabi_f2d>
 8006f7e:	4602      	mov	r2, r0
 8006f80:	460b      	mov	r3, r1
 8006f82:	ec43 2b10 	vmov	d0, r2, r3
 8006f86:	f01d f8ab 	bl	80240e0 <cos>
 8006f8a:	ec51 0b10 	vmov	r0, r1, d0
 8006f8e:	a308      	add	r3, pc, #32	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006f90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f94:	f7f9 fb30 	bl	80005f8 <__aeabi_dmul>
 8006f98:	4602      	mov	r2, r0
 8006f9a:	460b      	mov	r3, r1
 8006f9c:	e010      	b.n	8006fc0 <leg_control+0x7d0>
 8006f9e:	bf00      	nop
 8006fa0:	00000000 	.word	0x00000000
 8006fa4:	40000000 	.word	0x40000000
 8006fa8:	9999999a 	.word	0x9999999a
 8006fac:	3fa99999 	.word	0x3fa99999
 8006fb0:	47ae147b 	.word	0x47ae147b
 8006fb4:	3fb47ae1 	.word	0x3fb47ae1
 8006fb8:	eb1c432d 	.word	0xeb1c432d
 8006fbc:	3f9a36e2 	.word	0x3f9a36e2
 8006fc0:	a19f      	add	r1, pc, #636	; (adr r1, 8007240 <leg_control+0xa50>)
 8006fc2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006fc6:	f7f9 f95f 	bl	8000288 <__aeabi_dsub>
 8006fca:	4602      	mov	r2, r0
 8006fcc:	460b      	mov	r3, r1
 8006fce:	4610      	mov	r0, r2
 8006fd0:	4619      	mov	r1, r3
 8006fd2:	a39d      	add	r3, pc, #628	; (adr r3, 8007248 <leg_control+0xa58>)
 8006fd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fd8:	f7f9 fb0e 	bl	80005f8 <__aeabi_dmul>
 8006fdc:	4602      	mov	r2, r0
 8006fde:	460b      	mov	r3, r1
 8006fe0:	4614      	mov	r4, r2
 8006fe2:	461d      	mov	r5, r3
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8006fea:	eef1 7a67 	vneg.f32	s15, s15
 8006fee:	ee17 3a90 	vmov	r3, s15
 8006ff2:	4618      	mov	r0, r3
 8006ff4:	f7f9 faa8 	bl	8000548 <__aeabi_f2d>
 8006ff8:	4602      	mov	r2, r0
 8006ffa:	460b      	mov	r3, r1
 8006ffc:	ec43 2b10 	vmov	d0, r2, r3
 8007000:	f01d f94e 	bl	80242a0 <sin>
 8007004:	ec53 2b10 	vmov	r2, r3, d0
 8007008:	4620      	mov	r0, r4
 800700a:	4629      	mov	r1, r5
 800700c:	f7f9 faf4 	bl	80005f8 <__aeabi_dmul>
 8007010:	4602      	mov	r2, r0
 8007012:	460b      	mov	r3, r1
 8007014:	4614      	mov	r4, r2
 8007016:	461d      	mov	r5, r3
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800701e:	eef1 7a67 	vneg.f32	s15, s15
 8007022:	ee17 3a90 	vmov	r3, s15
 8007026:	4618      	mov	r0, r3
 8007028:	f7f9 fa8e 	bl	8000548 <__aeabi_f2d>
 800702c:	4602      	mov	r2, r0
 800702e:	460b      	mov	r3, r1
 8007030:	ec43 2b10 	vmov	d0, r2, r3
 8007034:	f01d f854 	bl	80240e0 <cos>
 8007038:	ec51 0b10 	vmov	r0, r1, d0
 800703c:	a382      	add	r3, pc, #520	; (adr r3, 8007248 <leg_control+0xa58>)
 800703e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007042:	f7f9 fad9 	bl	80005f8 <__aeabi_dmul>
 8007046:	4602      	mov	r2, r0
 8007048:	460b      	mov	r3, r1
 800704a:	a17d      	add	r1, pc, #500	; (adr r1, 8007240 <leg_control+0xa50>)
 800704c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007050:	f7f9 f91a 	bl	8000288 <__aeabi_dsub>
 8007054:	4602      	mov	r2, r0
 8007056:	460b      	mov	r3, r1
 8007058:	ec43 2b17 	vmov	d7, r2, r3
 800705c:	ed9f 1b74 	vldr	d1, [pc, #464]	; 8007230 <leg_control+0xa40>
 8007060:	eeb0 0a47 	vmov.f32	s0, s14
 8007064:	eef0 0a67 	vmov.f32	s1, s15
 8007068:	f01d f9a8 	bl	80243bc <pow>
 800706c:	ec53 2b10 	vmov	r2, r3, d0
 8007070:	a177      	add	r1, pc, #476	; (adr r1, 8007250 <leg_control+0xa60>)
 8007072:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007076:	f7f9 f907 	bl	8000288 <__aeabi_dsub>
 800707a:	4602      	mov	r2, r0
 800707c:	460b      	mov	r3, r1
 800707e:	ec43 2b17 	vmov	d7, r2, r3
 8007082:	eeb0 0a47 	vmov.f32	s0, s14
 8007086:	eef0 0a67 	vmov.f32	s1, s15
 800708a:	f01d fa07 	bl	802449c <sqrt>
 800708e:	ec53 2b10 	vmov	r2, r3, d0
 8007092:	4620      	mov	r0, r4
 8007094:	4629      	mov	r1, r5
 8007096:	f7f9 fbd9 	bl	800084c <__aeabi_ddiv>
 800709a:	4602      	mov	r2, r0
 800709c:	460b      	mov	r3, r1
 800709e:	4614      	mov	r4, r2
 80070a0:	461d      	mov	r5, r3
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80070a8:	eef1 7a67 	vneg.f32	s15, s15
 80070ac:	ee17 3a90 	vmov	r3, s15
 80070b0:	4618      	mov	r0, r3
 80070b2:	f7f9 fa49 	bl	8000548 <__aeabi_f2d>
 80070b6:	4602      	mov	r2, r0
 80070b8:	460b      	mov	r3, r1
 80070ba:	ec43 2b10 	vmov	d0, r2, r3
 80070be:	f01d f80f 	bl	80240e0 <cos>
 80070c2:	ec51 0b10 	vmov	r0, r1, d0
 80070c6:	a360      	add	r3, pc, #384	; (adr r3, 8007248 <leg_control+0xa58>)
 80070c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070cc:	f7f9 fa94 	bl	80005f8 <__aeabi_dmul>
 80070d0:	4602      	mov	r2, r0
 80070d2:	460b      	mov	r3, r1
 80070d4:	4620      	mov	r0, r4
 80070d6:	4629      	mov	r1, r5
 80070d8:	f7f9 f8d6 	bl	8000288 <__aeabi_dsub>
 80070dc:	4602      	mov	r2, r0
 80070de:	460b      	mov	r3, r1
 80070e0:	4610      	mov	r0, r2
 80070e2:	4619      	mov	r1, r3
 80070e4:	f7f9 fd80 	bl	8000be8 <__aeabi_d2f>
 80070e8:	4602      	mov	r2, r0
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	665a      	str	r2, [r3, #100]	; 0x64
//	leg_move_update->vyL = (-leg_move_update->vyL1+leg_move_update->vyL2)/2;
//	//	Z-axis speed
	leg_move_update->vyspeedR2  =  leg_move_update->yR2/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070f2:	4618      	mov	r0, r3
 80070f4:	f7f9 fa28 	bl	8000548 <__aeabi_f2d>
 80070f8:	a357      	add	r3, pc, #348	; (adr r3, 8007258 <leg_control+0xa68>)
 80070fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070fe:	f7f9 fba5 	bl	800084c <__aeabi_ddiv>
 8007102:	4602      	mov	r2, r0
 8007104:	460b      	mov	r3, r1
 8007106:	4610      	mov	r0, r2
 8007108:	4619      	mov	r1, r3
 800710a:	f7f9 fd6d 	bl	8000be8 <__aeabi_d2f>
 800710e:	4602      	mov	r2, r0
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	679a      	str	r2, [r3, #120]	; 0x78
	leg_move_update->vyspeedR1  =  leg_move_update->yR1/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007118:	4618      	mov	r0, r3
 800711a:	f7f9 fa15 	bl	8000548 <__aeabi_f2d>
 800711e:	a34e      	add	r3, pc, #312	; (adr r3, 8007258 <leg_control+0xa68>)
 8007120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007124:	f7f9 fb92 	bl	800084c <__aeabi_ddiv>
 8007128:	4602      	mov	r2, r0
 800712a:	460b      	mov	r3, r1
 800712c:	4610      	mov	r0, r2
 800712e:	4619      	mov	r1, r3
 8007130:	f7f9 fd5a 	bl	8000be8 <__aeabi_d2f>
 8007134:	4602      	mov	r2, r0
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	67da      	str	r2, [r3, #124]	; 0x7c
	leg_move_update->vyspeedL1  =  leg_move_update->yL1/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800713e:	4618      	mov	r0, r3
 8007140:	f7f9 fa02 	bl	8000548 <__aeabi_f2d>
 8007144:	a344      	add	r3, pc, #272	; (adr r3, 8007258 <leg_control+0xa68>)
 8007146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800714a:	f7f9 fb7f 	bl	800084c <__aeabi_ddiv>
 800714e:	4602      	mov	r2, r0
 8007150:	460b      	mov	r3, r1
 8007152:	4610      	mov	r0, r2
 8007154:	4619      	mov	r1, r3
 8007156:	f7f9 fd47 	bl	8000be8 <__aeabi_d2f>
 800715a:	4602      	mov	r2, r0
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	leg_move_update->vyspeedL2  =  leg_move_update->yL2/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007166:	4618      	mov	r0, r3
 8007168:	f7f9 f9ee 	bl	8000548 <__aeabi_f2d>
 800716c:	a33a      	add	r3, pc, #232	; (adr r3, 8007258 <leg_control+0xa68>)
 800716e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007172:	f7f9 fb6b 	bl	800084c <__aeabi_ddiv>
 8007176:	4602      	mov	r2, r0
 8007178:	460b      	mov	r3, r1
 800717a:	4610      	mov	r0, r2
 800717c:	4619      	mov	r1, r3
 800717e:	f7f9 fd33 	bl	8000be8 <__aeabi_d2f>
 8007182:	4602      	mov	r2, r0
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

	//chassis euler angle
	leg_move_update->chassis_yaw = imu_heading.yaw;
 800718a:	4b2b      	ldr	r3, [pc, #172]	; (8007238 <leg_control+0xa48>)
 800718c:	689a      	ldr	r2, [r3, #8]
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
	leg_move_update->chassis_pitch=imu_heading.pit;
 8007194:	4b28      	ldr	r3, [pc, #160]	; (8007238 <leg_control+0xa48>)
 8007196:	681a      	ldr	r2, [r3, #0]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
	leg_move_update->chassis_roll = imu_heading.rol;
 800719e:	4b26      	ldr	r3, [pc, #152]	; (8007238 <leg_control+0xa48>)
 80071a0:	685a      	ldr	r2, [r3, #4]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4

	// chassis angle speed
	leg_move_update->chassis_yaw_speed = (leg_move_update->chassis_yaw-leg_move_update->chassis_yaw_prev)/dt;
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	ed93 7a2f 	vldr	s14, [r3, #188]	; 0xbc
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	edd3 7a32 	vldr	s15, [r3, #200]	; 0xc8
 80071b4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071b8:	4b20      	ldr	r3, [pc, #128]	; (800723c <leg_control+0xa4c>)
 80071ba:	ed93 7a00 	vldr	s14, [r3]
 80071be:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	edc3 7a35 	vstr	s15, [r3, #212]	; 0xd4
	leg_move_update->chassis_pitch_speed =(leg_move_update->chassis_pitch-leg_move_update->chassis_pitch_prev)/dt;
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	ed93 7a30 	vldr	s14, [r3, #192]	; 0xc0
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	edd3 7a33 	vldr	s15, [r3, #204]	; 0xcc
 80071d4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071d8:	4b18      	ldr	r3, [pc, #96]	; (800723c <leg_control+0xa4c>)
 80071da:	ed93 7a00 	vldr	s14, [r3]
 80071de:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	edc3 7a36 	vstr	s15, [r3, #216]	; 0xd8
	leg_move_update->chassis_roll_speed = (leg_move_update->chassis_roll-leg_move_update->chassis_roll_prev)/dt;
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	ed93 7a31 	vldr	s14, [r3, #196]	; 0xc4
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 80071f4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071f8:	4b10      	ldr	r3, [pc, #64]	; (800723c <leg_control+0xa4c>)
 80071fa:	ed93 7a00 	vldr	s14, [r3]
 80071fe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	edc3 7a37 	vstr	s15, [r3, #220]	; 0xdc

	leg_move_update->chassis_yaw_prev = imu_heading.yaw;
 8007208:	4b0b      	ldr	r3, [pc, #44]	; (8007238 <leg_control+0xa48>)
 800720a:	689a      	ldr	r2, [r3, #8]
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
	leg_move_update ->chassis_pitch_prev =imu_heading.pit;
 8007212:	4b09      	ldr	r3, [pc, #36]	; (8007238 <leg_control+0xa48>)
 8007214:	681a      	ldr	r2, [r3, #0]
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	leg_move_update->chassis_roll_prev = imu_heading.rol;
 800721c:	4b06      	ldr	r3, [pc, #24]	; (8007238 <leg_control+0xa48>)
 800721e:	685a      	ldr	r2, [r3, #4]
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0



}
 8007226:	bf00      	nop
 8007228:	3708      	adds	r7, #8
 800722a:	46bd      	mov	sp, r7
 800722c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007230:	00000000 	.word	0x00000000
 8007234:	40000000 	.word	0x40000000
 8007238:	2000327c 	.word	0x2000327c
 800723c:	2000000c 	.word	0x2000000c
 8007240:	9999999a 	.word	0x9999999a
 8007244:	3fa99999 	.word	0x3fa99999
 8007248:	47ae147b 	.word	0x47ae147b
 800724c:	3fb47ae1 	.word	0x3fb47ae1
 8007250:	eb1c432d 	.word	0xeb1c432d
 8007254:	3f9a36e2 	.word	0x3f9a36e2
 8007258:	47ae147b 	.word	0x47ae147b
 800725c:	3fa47ae1 	.word	0x3fa47ae1

08007260 <jointmotor_control_loop>:
}


void jointmotor_control_loop(leg_move_t *leg_move_control_loop)

{
 8007260:	b5b0      	push	{r4, r5, r7, lr}
 8007262:	b082      	sub	sp, #8
 8007264:	af00      	add	r7, sp, #0
 8007266:	6078      	str	r0, [r7, #4]
	leg_move_control_loop->y_set = 0.2;
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	4adf      	ldr	r2, [pc, #892]	; (80075e8 <jointmotor_control_loop+0x388>)
 800726c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	//计算y方向和ROLL方向设定值与反馈值的偏差
	leg_move_control_loop->delta_yL1 = leg_move_control_loop->y_set - leg_move_control_loop->yL1;//leg_move_control_loop->y_set
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 800727c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	edc3 7a27 	vstr	s15, [r3, #156]	; 0x9c
	leg_move_control_loop->delta_yL2 = leg_move_control_loop->y_set - leg_move_control_loop->yL2;
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8007292:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	edc3 7a28 	vstr	s15, [r3, #160]	; 0xa0
	leg_move_control_loop->delta_yR1 = leg_move_control_loop->y_set - leg_move_control_loop->yR1;//leg_move_control_loop->y_set
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 80072a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	edc3 7a25 	vstr	s15, [r3, #148]	; 0x94
	leg_move_control_loop->delta_yR2 = leg_move_control_loop->y_set - leg_move_control_loop->yR2;
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 80072be:	ee77 7a67 	vsub.f32	s15, s14, s15
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	edc3 7a26 	vstr	s15, [r3, #152]	; 0x98

	leg_move_control_loop->delta_roll = leg_move_control_loop->roll_set - leg_move_control_loop->chassis_roll;
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	ed93 7a2a 	vldr	s14, [r3, #168]	; 0xa8
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 80072d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	edc3 7a24 	vstr	s15, [r3, #144]	; 0x90

	//计算左腿和右腿的末端执行力
	leg_move_control_loop->FL1 = (KP_Y * leg_move_control_loop->delta_yL1 - KD_Y * leg_move_control_loop->vyspeedL1 + G)/2 + (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	edd3 7a27 	vldr	s15, [r3, #156]	; 0x9c
 80072e4:	ed9f 7ac1 	vldr	s14, [pc, #772]	; 80075ec <jointmotor_control_loop+0x38c>
 80072e8:	ee27 7a87 	vmul.f32	s14, s15, s14
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	edd3 7a20 	vldr	s15, [r3, #128]	; 0x80
 80072f2:	eddf 6abf 	vldr	s13, [pc, #764]	; 80075f0 <jointmotor_control_loop+0x390>
 80072f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80072fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80072fe:	ee17 0a90 	vmov	r0, s15
 8007302:	f7f9 f921 	bl	8000548 <__aeabi_f2d>
 8007306:	a3b4      	add	r3, pc, #720	; (adr r3, 80075d8 <jointmotor_control_loop+0x378>)
 8007308:	e9d3 2300 	ldrd	r2, r3, [r3]
 800730c:	f7f8 ffbe 	bl	800028c <__adddf3>
 8007310:	4602      	mov	r2, r0
 8007312:	460b      	mov	r3, r1
 8007314:	4610      	mov	r0, r2
 8007316:	4619      	mov	r1, r3
 8007318:	f04f 0200 	mov.w	r2, #0
 800731c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007320:	f7f9 fa94 	bl	800084c <__aeabi_ddiv>
 8007324:	4602      	mov	r2, r0
 8007326:	460b      	mov	r3, r1
 8007328:	4614      	mov	r4, r2
 800732a:	461d      	mov	r5, r3
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007332:	ed9f 7ab0 	vldr	s14, [pc, #704]	; 80075f4 <jointmotor_control_loop+0x394>
 8007336:	ee27 7a87 	vmul.f32	s14, s15, s14
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8007340:	eddf 6aac 	vldr	s13, [pc, #688]	; 80075f4 <jointmotor_control_loop+0x394>
 8007344:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007348:	ee77 7a67 	vsub.f32	s15, s14, s15
 800734c:	ee17 0a90 	vmov	r0, s15
 8007350:	f7f9 f8fa 	bl	8000548 <__aeabi_f2d>
 8007354:	a3a2      	add	r3, pc, #648	; (adr r3, 80075e0 <jointmotor_control_loop+0x380>)
 8007356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800735a:	f7f9 fa77 	bl	800084c <__aeabi_ddiv>
 800735e:	4602      	mov	r2, r0
 8007360:	460b      	mov	r3, r1
 8007362:	4620      	mov	r0, r4
 8007364:	4629      	mov	r1, r5
 8007366:	f7f8 ff91 	bl	800028c <__adddf3>
 800736a:	4602      	mov	r2, r0
 800736c:	460b      	mov	r3, r1
 800736e:	4610      	mov	r0, r2
 8007370:	4619      	mov	r1, r3
 8007372:	f7f9 fc39 	bl	8000be8 <__aeabi_d2f>
 8007376:	4602      	mov	r2, r0
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
	leg_move_control_loop->FL2 = (KP_Y * leg_move_control_loop->delta_yL2 - KD_Y * leg_move_control_loop->vyspeedL2 + G)/2 + (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	edd3 7a28 	vldr	s15, [r3, #160]	; 0xa0
 8007384:	ed9f 7a99 	vldr	s14, [pc, #612]	; 80075ec <jointmotor_control_loop+0x38c>
 8007388:	ee27 7a87 	vmul.f32	s14, s15, s14
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	edd3 7a21 	vldr	s15, [r3, #132]	; 0x84
 8007392:	eddf 6a97 	vldr	s13, [pc, #604]	; 80075f0 <jointmotor_control_loop+0x390>
 8007396:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800739a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800739e:	ee17 0a90 	vmov	r0, s15
 80073a2:	f7f9 f8d1 	bl	8000548 <__aeabi_f2d>
 80073a6:	a38c      	add	r3, pc, #560	; (adr r3, 80075d8 <jointmotor_control_loop+0x378>)
 80073a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80073ac:	f7f8 ff6e 	bl	800028c <__adddf3>
 80073b0:	4602      	mov	r2, r0
 80073b2:	460b      	mov	r3, r1
 80073b4:	4610      	mov	r0, r2
 80073b6:	4619      	mov	r1, r3
 80073b8:	f04f 0200 	mov.w	r2, #0
 80073bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80073c0:	f7f9 fa44 	bl	800084c <__aeabi_ddiv>
 80073c4:	4602      	mov	r2, r0
 80073c6:	460b      	mov	r3, r1
 80073c8:	4614      	mov	r4, r2
 80073ca:	461d      	mov	r5, r3
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 80073d2:	ed9f 7a88 	vldr	s14, [pc, #544]	; 80075f4 <jointmotor_control_loop+0x394>
 80073d6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80073da:	687b      	ldr	r3, [r7, #4]
 80073dc:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 80073e0:	eddf 6a84 	vldr	s13, [pc, #528]	; 80075f4 <jointmotor_control_loop+0x394>
 80073e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80073e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80073ec:	ee17 0a90 	vmov	r0, s15
 80073f0:	f7f9 f8aa 	bl	8000548 <__aeabi_f2d>
 80073f4:	a37a      	add	r3, pc, #488	; (adr r3, 80075e0 <jointmotor_control_loop+0x380>)
 80073f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80073fa:	f7f9 fa27 	bl	800084c <__aeabi_ddiv>
 80073fe:	4602      	mov	r2, r0
 8007400:	460b      	mov	r3, r1
 8007402:	4620      	mov	r0, r4
 8007404:	4629      	mov	r1, r5
 8007406:	f7f8 ff41 	bl	800028c <__adddf3>
 800740a:	4602      	mov	r2, r0
 800740c:	460b      	mov	r3, r1
 800740e:	4610      	mov	r0, r2
 8007410:	4619      	mov	r1, r3
 8007412:	f7f9 fbe9 	bl	8000be8 <__aeabi_d2f>
 8007416:	4602      	mov	r2, r0
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

	leg_move_control_loop->FR1 = (KP_Y * leg_move_control_loop->delta_yR1 - KD_Y * leg_move_control_loop->vyspeedR1 + G)/2 - (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	edd3 7a25 	vldr	s15, [r3, #148]	; 0x94
 8007424:	ed9f 7a71 	vldr	s14, [pc, #452]	; 80075ec <jointmotor_control_loop+0x38c>
 8007428:	ee27 7a87 	vmul.f32	s14, s15, s14
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	edd3 7a1f 	vldr	s15, [r3, #124]	; 0x7c
 8007432:	eddf 6a6f 	vldr	s13, [pc, #444]	; 80075f0 <jointmotor_control_loop+0x390>
 8007436:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800743a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800743e:	ee17 0a90 	vmov	r0, s15
 8007442:	f7f9 f881 	bl	8000548 <__aeabi_f2d>
 8007446:	a364      	add	r3, pc, #400	; (adr r3, 80075d8 <jointmotor_control_loop+0x378>)
 8007448:	e9d3 2300 	ldrd	r2, r3, [r3]
 800744c:	f7f8 ff1e 	bl	800028c <__adddf3>
 8007450:	4602      	mov	r2, r0
 8007452:	460b      	mov	r3, r1
 8007454:	4610      	mov	r0, r2
 8007456:	4619      	mov	r1, r3
 8007458:	f04f 0200 	mov.w	r2, #0
 800745c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007460:	f7f9 f9f4 	bl	800084c <__aeabi_ddiv>
 8007464:	4602      	mov	r2, r0
 8007466:	460b      	mov	r3, r1
 8007468:	4614      	mov	r4, r2
 800746a:	461d      	mov	r5, r3
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007472:	ed9f 7a60 	vldr	s14, [pc, #384]	; 80075f4 <jointmotor_control_loop+0x394>
 8007476:	ee27 7a87 	vmul.f32	s14, s15, s14
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8007480:	eddf 6a5c 	vldr	s13, [pc, #368]	; 80075f4 <jointmotor_control_loop+0x394>
 8007484:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007488:	ee77 7a67 	vsub.f32	s15, s14, s15
 800748c:	ee17 0a90 	vmov	r0, s15
 8007490:	f7f9 f85a 	bl	8000548 <__aeabi_f2d>
 8007494:	a352      	add	r3, pc, #328	; (adr r3, 80075e0 <jointmotor_control_loop+0x380>)
 8007496:	e9d3 2300 	ldrd	r2, r3, [r3]
 800749a:	f7f9 f9d7 	bl	800084c <__aeabi_ddiv>
 800749e:	4602      	mov	r2, r0
 80074a0:	460b      	mov	r3, r1
 80074a2:	4620      	mov	r0, r4
 80074a4:	4629      	mov	r1, r5
 80074a6:	f7f8 feef 	bl	8000288 <__aeabi_dsub>
 80074aa:	4602      	mov	r2, r0
 80074ac:	460b      	mov	r3, r1
 80074ae:	4610      	mov	r0, r2
 80074b0:	4619      	mov	r1, r3
 80074b2:	f7f9 fb99 	bl	8000be8 <__aeabi_d2f>
 80074b6:	4602      	mov	r2, r0
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
	leg_move_control_loop->FR2 = (KP_Y * leg_move_control_loop->delta_yR2 - KD_Y * leg_move_control_loop->vyspeedR2 + G)/2 - (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	edd3 7a26 	vldr	s15, [r3, #152]	; 0x98
 80074c4:	ed9f 7a49 	vldr	s14, [pc, #292]	; 80075ec <jointmotor_control_loop+0x38c>
 80074c8:	ee27 7a87 	vmul.f32	s14, s15, s14
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	edd3 7a1e 	vldr	s15, [r3, #120]	; 0x78
 80074d2:	eddf 6a47 	vldr	s13, [pc, #284]	; 80075f0 <jointmotor_control_loop+0x390>
 80074d6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80074da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80074de:	ee17 0a90 	vmov	r0, s15
 80074e2:	f7f9 f831 	bl	8000548 <__aeabi_f2d>
 80074e6:	a33c      	add	r3, pc, #240	; (adr r3, 80075d8 <jointmotor_control_loop+0x378>)
 80074e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ec:	f7f8 fece 	bl	800028c <__adddf3>
 80074f0:	4602      	mov	r2, r0
 80074f2:	460b      	mov	r3, r1
 80074f4:	4610      	mov	r0, r2
 80074f6:	4619      	mov	r1, r3
 80074f8:	f04f 0200 	mov.w	r2, #0
 80074fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007500:	f7f9 f9a4 	bl	800084c <__aeabi_ddiv>
 8007504:	4602      	mov	r2, r0
 8007506:	460b      	mov	r3, r1
 8007508:	4614      	mov	r4, r2
 800750a:	461d      	mov	r5, r3
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007512:	ed9f 7a38 	vldr	s14, [pc, #224]	; 80075f4 <jointmotor_control_loop+0x394>
 8007516:	ee27 7a87 	vmul.f32	s14, s15, s14
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8007520:	eddf 6a34 	vldr	s13, [pc, #208]	; 80075f4 <jointmotor_control_loop+0x394>
 8007524:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007528:	ee77 7a67 	vsub.f32	s15, s14, s15
 800752c:	ee17 0a90 	vmov	r0, s15
 8007530:	f7f9 f80a 	bl	8000548 <__aeabi_f2d>
 8007534:	a32a      	add	r3, pc, #168	; (adr r3, 80075e0 <jointmotor_control_loop+0x380>)
 8007536:	e9d3 2300 	ldrd	r2, r3, [r3]
 800753a:	f7f9 f987 	bl	800084c <__aeabi_ddiv>
 800753e:	4602      	mov	r2, r0
 8007540:	460b      	mov	r3, r1
 8007542:	4620      	mov	r0, r4
 8007544:	4629      	mov	r1, r5
 8007546:	f7f8 fe9f 	bl	8000288 <__aeabi_dsub>
 800754a:	4602      	mov	r2, r0
 800754c:	460b      	mov	r3, r1
 800754e:	4610      	mov	r0, r2
 8007550:	4619      	mov	r1, r3
 8007552:	f7f9 fb49 	bl	8000be8 <__aeabi_d2f>
 8007556:	4602      	mov	r2, r0
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8

	//计算每个关节电机的控制力矩
	leg_move_control_loop->joint_motor[1].torque_set = calculate_torque(0.5*leg_move_control_loop->FR2*leg_move_control_loop->vyR2);//R2
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8007564:	4618      	mov	r0, r3
 8007566:	f7f8 ffef 	bl	8000548 <__aeabi_f2d>
 800756a:	f04f 0200 	mov.w	r2, #0
 800756e:	4b22      	ldr	r3, [pc, #136]	; (80075f8 <jointmotor_control_loop+0x398>)
 8007570:	f7f9 f842 	bl	80005f8 <__aeabi_dmul>
 8007574:	4602      	mov	r2, r0
 8007576:	460b      	mov	r3, r1
 8007578:	4614      	mov	r4, r2
 800757a:	461d      	mov	r5, r3
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007580:	4618      	mov	r0, r3
 8007582:	f7f8 ffe1 	bl	8000548 <__aeabi_f2d>
 8007586:	4602      	mov	r2, r0
 8007588:	460b      	mov	r3, r1
 800758a:	4620      	mov	r0, r4
 800758c:	4629      	mov	r1, r5
 800758e:	f7f9 f833 	bl	80005f8 <__aeabi_dmul>
 8007592:	4602      	mov	r2, r0
 8007594:	460b      	mov	r3, r1
 8007596:	4610      	mov	r0, r2
 8007598:	4619      	mov	r1, r3
 800759a:	f7f9 fb25 	bl	8000be8 <__aeabi_d2f>
 800759e:	4603      	mov	r3, r0
 80075a0:	ee00 3a10 	vmov	s0, r3
 80075a4:	f7ff f8ac 	bl	8006700 <calculate_torque>
 80075a8:	eef0 7a40 	vmov.f32	s15, s0
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	edc3 7a06 	vstr	s15, [r3, #24]
	leg_move_control_loop->joint_motor[0].torque_set = calculate_torque(-0.5*leg_move_control_loop->FR1*leg_move_control_loop->vyR1);//R1
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80075b8:	4618      	mov	r0, r3
 80075ba:	f7f8 ffc5 	bl	8000548 <__aeabi_f2d>
 80075be:	f04f 0200 	mov.w	r2, #0
 80075c2:	4b0e      	ldr	r3, [pc, #56]	; (80075fc <jointmotor_control_loop+0x39c>)
 80075c4:	f7f9 f818 	bl	80005f8 <__aeabi_dmul>
 80075c8:	4602      	mov	r2, r0
 80075ca:	460b      	mov	r3, r1
 80075cc:	4614      	mov	r4, r2
 80075ce:	461d      	mov	r5, r3
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80075d4:	e014      	b.n	8007600 <jointmotor_control_loop+0x3a0>
 80075d6:	bf00      	nop
 80075d8:	66666666 	.word	0x66666666
 80075dc:	404d6666 	.word	0x404d6666
 80075e0:	66666666 	.word	0x66666666
 80075e4:	3fd66666 	.word	0x3fd66666
 80075e8:	3e4ccccd 	.word	0x3e4ccccd
 80075ec:	447a0000 	.word	0x447a0000
 80075f0:	43c80000 	.word	0x43c80000
 80075f4:	00000000 	.word	0x00000000
 80075f8:	3fe00000 	.word	0x3fe00000
 80075fc:	bfe00000 	.word	0xbfe00000
 8007600:	4618      	mov	r0, r3
 8007602:	f7f8 ffa1 	bl	8000548 <__aeabi_f2d>
 8007606:	4602      	mov	r2, r0
 8007608:	460b      	mov	r3, r1
 800760a:	4620      	mov	r0, r4
 800760c:	4629      	mov	r1, r5
 800760e:	f7f8 fff3 	bl	80005f8 <__aeabi_dmul>
 8007612:	4602      	mov	r2, r0
 8007614:	460b      	mov	r3, r1
 8007616:	4610      	mov	r0, r2
 8007618:	4619      	mov	r1, r3
 800761a:	f7f9 fae5 	bl	8000be8 <__aeabi_d2f>
 800761e:	4603      	mov	r3, r0
 8007620:	ee00 3a10 	vmov	s0, r3
 8007624:	f7ff f86c 	bl	8006700 <calculate_torque>
 8007628:	eef0 7a40 	vmov.f32	s15, s0
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	edc3 7a02 	vstr	s15, [r3, #8]

	leg_move_control_loop->joint_motor[2].torque_set = calculate_torque(0.5*leg_move_control_loop->FL2*leg_move_control_loop->vyL2);//L2
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8007638:	4618      	mov	r0, r3
 800763a:	f7f8 ff85 	bl	8000548 <__aeabi_f2d>
 800763e:	f04f 0200 	mov.w	r2, #0
 8007642:	4b32      	ldr	r3, [pc, #200]	; (800770c <jointmotor_control_loop+0x4ac>)
 8007644:	f7f8 ffd8 	bl	80005f8 <__aeabi_dmul>
 8007648:	4602      	mov	r2, r0
 800764a:	460b      	mov	r3, r1
 800764c:	4614      	mov	r4, r2
 800764e:	461d      	mov	r5, r3
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007654:	4618      	mov	r0, r3
 8007656:	f7f8 ff77 	bl	8000548 <__aeabi_f2d>
 800765a:	4602      	mov	r2, r0
 800765c:	460b      	mov	r3, r1
 800765e:	4620      	mov	r0, r4
 8007660:	4629      	mov	r1, r5
 8007662:	f7f8 ffc9 	bl	80005f8 <__aeabi_dmul>
 8007666:	4602      	mov	r2, r0
 8007668:	460b      	mov	r3, r1
 800766a:	4610      	mov	r0, r2
 800766c:	4619      	mov	r1, r3
 800766e:	f7f9 fabb 	bl	8000be8 <__aeabi_d2f>
 8007672:	4603      	mov	r3, r0
 8007674:	ee00 3a10 	vmov	s0, r3
 8007678:	f7ff f842 	bl	8006700 <calculate_torque>
 800767c:	eef0 7a40 	vmov.f32	s15, s0
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
	leg_move_control_loop->joint_motor[3].torque_set = calculate_torque(-0.5*leg_move_control_loop->FL1*leg_move_control_loop->vyL1);//L1
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800768c:	4618      	mov	r0, r3
 800768e:	f7f8 ff5b 	bl	8000548 <__aeabi_f2d>
 8007692:	f04f 0200 	mov.w	r2, #0
 8007696:	4b1e      	ldr	r3, [pc, #120]	; (8007710 <jointmotor_control_loop+0x4b0>)
 8007698:	f7f8 ffae 	bl	80005f8 <__aeabi_dmul>
 800769c:	4602      	mov	r2, r0
 800769e:	460b      	mov	r3, r1
 80076a0:	4614      	mov	r4, r2
 80076a2:	461d      	mov	r5, r3
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80076a8:	4618      	mov	r0, r3
 80076aa:	f7f8 ff4d 	bl	8000548 <__aeabi_f2d>
 80076ae:	4602      	mov	r2, r0
 80076b0:	460b      	mov	r3, r1
 80076b2:	4620      	mov	r0, r4
 80076b4:	4629      	mov	r1, r5
 80076b6:	f7f8 ff9f 	bl	80005f8 <__aeabi_dmul>
 80076ba:	4602      	mov	r2, r0
 80076bc:	460b      	mov	r3, r1
 80076be:	4610      	mov	r0, r2
 80076c0:	4619      	mov	r1, r3
 80076c2:	f7f9 fa91 	bl	8000be8 <__aeabi_d2f>
 80076c6:	4603      	mov	r3, r0
 80076c8:	ee00 3a10 	vmov	s0, r3
 80076cc:	f7ff f818 	bl	8006700 <calculate_torque>
 80076d0:	eef0 7a40 	vmov.f32	s15, s0
 80076d4:	687b      	ldr	r3, [r7, #4]
 80076d6:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38


	leg_move_control_loop->joint_motor[0].raw_angle = can_motors[4].raw_data.angle[0];
 80076da:	4b0e      	ldr	r3, [pc, #56]	; (8007714 <jointmotor_control_loop+0x4b4>)
 80076dc:	f9b3 23c4 	ldrsh.w	r2, [r3, #964]	; 0x3c4
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	805a      	strh	r2, [r3, #2]
	leg_move_control_loop->joint_motor[1].raw_angle = can_motors[5].raw_data.angle[0];
 80076e4:	4b0b      	ldr	r3, [pc, #44]	; (8007714 <jointmotor_control_loop+0x4b4>)
 80076e6:	f9b3 24b4 	ldrsh.w	r2, [r3, #1204]	; 0x4b4
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	825a      	strh	r2, [r3, #18]
	leg_move_control_loop->joint_motor[2].raw_angle = can_motors[6].raw_data.angle[0];
 80076ee:	4b09      	ldr	r3, [pc, #36]	; (8007714 <jointmotor_control_loop+0x4b4>)
 80076f0:	f9b3 25a4 	ldrsh.w	r2, [r3, #1444]	; 0x5a4
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	845a      	strh	r2, [r3, #34]	; 0x22
	leg_move_control_loop->joint_motor[3].raw_angle = can_motors[7].raw_data.angle[0];
 80076f8:	4b06      	ldr	r3, [pc, #24]	; (8007714 <jointmotor_control_loop+0x4b4>)
 80076fa:	f9b3 2694 	ldrsh.w	r2, [r3, #1684]	; 0x694
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	865a      	strh	r2, [r3, #50]	; 0x32

}
 8007702:	bf00      	nop
 8007704:	3708      	adds	r7, #8
 8007706:	46bd      	mov	sp, r7
 8007708:	bdb0      	pop	{r4, r5, r7, pc}
 800770a:	bf00      	nop
 800770c:	3fe00000 	.word	0x3fe00000
 8007710:	bfe00000 	.word	0xbfe00000
 8007714:	200018a8 	.word	0x200018a8

08007718 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 8007718:	b580      	push	{r7, lr}
 800771a:	b084      	sub	sp, #16
 800771c:	af00      	add	r7, sp, #0
 800771e:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 8007720:	e002      	b.n	8007728 <hud_task+0x10>
		vTaskDelay(10);
 8007722:	200a      	movs	r0, #10
 8007724:	f015 f9b4 	bl	801ca90 <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 8007728:	4b69      	ldr	r3, [pc, #420]	; (80078d0 <hud_task+0x1b8>)
 800772a:	781b      	ldrb	r3, [r3, #0]
 800772c:	2b00      	cmp	r3, #0
 800772e:	d0f8      	beq.n	8007722 <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 8007730:	f007 ff04 	bl	800f53c <HAL_GetTick>
 8007734:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 8007736:	2300      	movs	r3, #0
 8007738:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 800773a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800773e:	f015 f9a7 	bl	801ca90 <vTaskDelay>
	clear_hud();
 8007742:	f000 fb29 	bl	8007d98 <clear_hud>
	vTaskDelay(150);
 8007746:	2096      	movs	r0, #150	; 0x96
 8007748:	f015 f9a2 	bl	801ca90 <vTaskDelay>
	draw_spinspin(0);
 800774c:	2000      	movs	r0, #0
 800774e:	f000 f8c3 	bl	80078d8 <draw_spinspin>
	vTaskDelay(150);
 8007752:	2096      	movs	r0, #150	; 0x96
 8007754:	f015 f99c 	bl	801ca90 <vTaskDelay>
	draw_gearing(0);
 8007758:	2000      	movs	r0, #0
 800775a:	f000 f9f5 	bl	8007b48 <draw_gearing>
	vTaskDelay(150);
 800775e:	2096      	movs	r0, #150	; 0x96
 8007760:	f015 f996 	bl	801ca90 <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 8007764:	f007 feea 	bl	800f53c <HAL_GetTick>
 8007768:	4602      	mov	r2, r0
 800776a:	68fb      	ldr	r3, [r7, #12]
 800776c:	1ad3      	subs	r3, r2, r3
 800776e:	f241 3288 	movw	r2, #5000	; 0x1388
 8007772:	4293      	cmp	r3, r2
 8007774:	d904      	bls.n	8007780 <hud_task+0x68>
			draw_state = refresh;
 8007776:	2304      	movs	r3, #4
 8007778:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 800777a:	f007 fedf 	bl	800f53c <HAL_GetTick>
 800777e:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 8007780:	4b53      	ldr	r3, [pc, #332]	; (80078d0 <hud_task+0x1b8>)
 8007782:	781b      	ldrb	r3, [r3, #0]
 8007784:	2b06      	cmp	r3, #6
 8007786:	dc27      	bgt.n	80077d8 <hud_task+0xc0>
 8007788:	2b00      	cmp	r3, #0
 800778a:	dc13      	bgt.n	80077b4 <hud_task+0x9c>
 800778c:	e065      	b.n	800785a <hud_task+0x142>
 800778e:	3b65      	subs	r3, #101	; 0x65
 8007790:	2b05      	cmp	r3, #5
 8007792:	d862      	bhi.n	800785a <hud_task+0x142>
 8007794:	a201      	add	r2, pc, #4	; (adr r2, 800779c <hud_task+0x84>)
 8007796:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800779a:	bf00      	nop
 800779c:	0800781f 	.word	0x0800781f
 80077a0:	08007829 	.word	0x08007829
 80077a4:	08007833 	.word	0x08007833
 80077a8:	0800783d 	.word	0x0800783d
 80077ac:	08007847 	.word	0x08007847
 80077b0:	08007851 	.word	0x08007851
 80077b4:	3b01      	subs	r3, #1
 80077b6:	2b05      	cmp	r3, #5
 80077b8:	d84f      	bhi.n	800785a <hud_task+0x142>
 80077ba:	a201      	add	r2, pc, #4	; (adr r2, 80077c0 <hud_task+0xa8>)
 80077bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80077c0:	080077e3 	.word	0x080077e3
 80077c4:	080077ed 	.word	0x080077ed
 80077c8:	080077f7 	.word	0x080077f7
 80077cc:	08007801 	.word	0x08007801
 80077d0:	0800780b 	.word	0x0800780b
 80077d4:	08007815 	.word	0x08007815
 80077d8:	2b6a      	cmp	r3, #106	; 0x6a
 80077da:	dc3e      	bgt.n	800785a <hud_task+0x142>
 80077dc:	2b65      	cmp	r3, #101	; 0x65
 80077de:	dad6      	bge.n	800778e <hud_task+0x76>
 80077e0:	e03b      	b.n	800785a <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 80077e2:	4b3c      	ldr	r3, [pc, #240]	; (80078d4 <hud_task+0x1bc>)
 80077e4:	f240 1201 	movw	r2, #257	; 0x101
 80077e8:	801a      	strh	r2, [r3, #0]
			break;
 80077ea:	e03a      	b.n	8007862 <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 80077ec:	4b39      	ldr	r3, [pc, #228]	; (80078d4 <hud_task+0x1bc>)
 80077ee:	f44f 7281 	mov.w	r2, #258	; 0x102
 80077f2:	801a      	strh	r2, [r3, #0]
			break;
 80077f4:	e035      	b.n	8007862 <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 80077f6:	4b37      	ldr	r3, [pc, #220]	; (80078d4 <hud_task+0x1bc>)
 80077f8:	f240 1203 	movw	r2, #259	; 0x103
 80077fc:	801a      	strh	r2, [r3, #0]
			break;
 80077fe:	e030      	b.n	8007862 <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 8007800:	4b34      	ldr	r3, [pc, #208]	; (80078d4 <hud_task+0x1bc>)
 8007802:	f44f 7282 	mov.w	r2, #260	; 0x104
 8007806:	801a      	strh	r2, [r3, #0]
			break;
 8007808:	e02b      	b.n	8007862 <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 800780a:	4b32      	ldr	r3, [pc, #200]	; (80078d4 <hud_task+0x1bc>)
 800780c:	f240 1205 	movw	r2, #261	; 0x105
 8007810:	801a      	strh	r2, [r3, #0]
			break;
 8007812:	e026      	b.n	8007862 <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 8007814:	4b2f      	ldr	r3, [pc, #188]	; (80078d4 <hud_task+0x1bc>)
 8007816:	f44f 7283 	mov.w	r2, #262	; 0x106
 800781a:	801a      	strh	r2, [r3, #0]
			break;
 800781c:	e021      	b.n	8007862 <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 800781e:	4b2d      	ldr	r3, [pc, #180]	; (80078d4 <hud_task+0x1bc>)
 8007820:	f240 1265 	movw	r2, #357	; 0x165
 8007824:	801a      	strh	r2, [r3, #0]
			break;
 8007826:	e01c      	b.n	8007862 <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 8007828:	4b2a      	ldr	r3, [pc, #168]	; (80078d4 <hud_task+0x1bc>)
 800782a:	f44f 72b3 	mov.w	r2, #358	; 0x166
 800782e:	801a      	strh	r2, [r3, #0]
			break;
 8007830:	e017      	b.n	8007862 <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 8007832:	4b28      	ldr	r3, [pc, #160]	; (80078d4 <hud_task+0x1bc>)
 8007834:	f240 1267 	movw	r2, #359	; 0x167
 8007838:	801a      	strh	r2, [r3, #0]
			break;
 800783a:	e012      	b.n	8007862 <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 800783c:	4b25      	ldr	r3, [pc, #148]	; (80078d4 <hud_task+0x1bc>)
 800783e:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8007842:	801a      	strh	r2, [r3, #0]
			break;
 8007844:	e00d      	b.n	8007862 <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 8007846:	4b23      	ldr	r3, [pc, #140]	; (80078d4 <hud_task+0x1bc>)
 8007848:	f240 1269 	movw	r2, #361	; 0x169
 800784c:	801a      	strh	r2, [r3, #0]
			break;
 800784e:	e008      	b.n	8007862 <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 8007850:	4b20      	ldr	r3, [pc, #128]	; (80078d4 <hud_task+0x1bc>)
 8007852:	f44f 72b5 	mov.w	r2, #362	; 0x16a
 8007856:	801a      	strh	r2, [r3, #0]
			break;
 8007858:	e003      	b.n	8007862 <hud_task+0x14a>
		default:
			g_client_id = 0;
 800785a:	4b1e      	ldr	r3, [pc, #120]	; (80078d4 <hud_task+0x1bc>)
 800785c:	2200      	movs	r2, #0
 800785e:	801a      	strh	r2, [r3, #0]
			break;
 8007860:	bf00      	nop

		}



		switch (draw_state) {
 8007862:	7afb      	ldrb	r3, [r7, #11]
 8007864:	2b04      	cmp	r3, #4
 8007866:	d82d      	bhi.n	80078c4 <hud_task+0x1ac>
 8007868:	a201      	add	r2, pc, #4	; (adr r2, 8007870 <hud_task+0x158>)
 800786a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800786e:	bf00      	nop
 8007870:	08007885 	.word	0x08007885
 8007874:	08007891 	.word	0x08007891
 8007878:	080078c5 	.word	0x080078c5
 800787c:	080078c5 	.word	0x080078c5
 8007880:	0800789d 	.word	0x0800789d
		case spinspin:
			draw_spinspin(1);
 8007884:	2001      	movs	r0, #1
 8007886:	f000 f827 	bl	80078d8 <draw_spinspin>
			draw_state = gearing;
 800788a:	2301      	movs	r3, #1
 800788c:	72fb      	strb	r3, [r7, #11]
			break;
 800788e:	e01a      	b.n	80078c6 <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 8007890:	2001      	movs	r0, #1
 8007892:	f000 f959 	bl	8007b48 <draw_gearing>
			draw_state = spinspin;
 8007896:	2300      	movs	r3, #0
 8007898:	72fb      	strb	r3, [r7, #11]
			break;
 800789a:	e014      	b.n	80078c6 <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 800789c:	f000 fa7c 	bl	8007d98 <clear_hud>
			vTaskDelay(150);
 80078a0:	2096      	movs	r0, #150	; 0x96
 80078a2:	f015 f8f5 	bl	801ca90 <vTaskDelay>
			draw_spinspin(0);
 80078a6:	2000      	movs	r0, #0
 80078a8:	f000 f816 	bl	80078d8 <draw_spinspin>
			vTaskDelay(150);
 80078ac:	2096      	movs	r0, #150	; 0x96
 80078ae:	f015 f8ef 	bl	801ca90 <vTaskDelay>
			draw_gearing(0);
 80078b2:	2000      	movs	r0, #0
 80078b4:	f000 f948 	bl	8007b48 <draw_gearing>
			vTaskDelay(150);
 80078b8:	2096      	movs	r0, #150	; 0x96
 80078ba:	f015 f8e9 	bl	801ca90 <vTaskDelay>
			draw_state = spinspin;
 80078be:	2300      	movs	r3, #0
 80078c0:	72fb      	strb	r3, [r7, #11]
			break;
 80078c2:	e000      	b.n	80078c6 <hud_task+0x1ae>
		default:
			break;
 80078c4:	bf00      	nop
		}
		vTaskDelay(150);
 80078c6:	2096      	movs	r0, #150	; 0x96
 80078c8:	f015 f8e2 	bl	801ca90 <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 80078cc:	e74a      	b.n	8007764 <hud_task+0x4c>
 80078ce:	bf00      	nop
 80078d0:	2000337c 	.word	0x2000337c
 80078d4:	200030fc 	.word	0x200030fc

080078d8 <draw_spinspin>:
	}
}

void draw_spinspin(uint8_t modify) {
 80078d8:	b590      	push	{r4, r7, lr}
 80078da:	b085      	sub	sp, #20
 80078dc:	af00      	add	r7, sp, #0
 80078de:	4603      	mov	r3, r0
 80078e0:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 80078e2:	2300      	movs	r3, #0
 80078e4:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 80078e6:	2300      	movs	r3, #0
 80078e8:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 80078ea:	2300      	movs	r3, #0
 80078ec:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 80078ee:	4b8a      	ldr	r3, [pc, #552]	; (8007b18 <draw_spinspin+0x240>)
 80078f0:	681b      	ldr	r3, [r3, #0]
 80078f2:	2b00      	cmp	r3, #0
 80078f4:	d10d      	bne.n	8007912 <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 80078f6:	4a89      	ldr	r2, [pc, #548]	; (8007b1c <draw_spinspin+0x244>)
 80078f8:	7913      	ldrb	r3, [r2, #4]
 80078fa:	2104      	movs	r1, #4
 80078fc:	f361 0385 	bfi	r3, r1, #2, #4
 8007900:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 8007902:	4a87      	ldr	r2, [pc, #540]	; (8007b20 <draw_spinspin+0x248>)
 8007904:	211e      	movs	r1, #30
 8007906:	4887      	ldr	r0, [pc, #540]	; (8007b24 <draw_spinspin+0x24c>)
 8007908:	f018 fdca 	bl	80204a0 <sniprintf>
 800790c:	4603      	mov	r3, r0
 800790e:	73fb      	strb	r3, [r7, #15]
 8007910:	e00c      	b.n	800792c <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 8007912:	4a82      	ldr	r2, [pc, #520]	; (8007b1c <draw_spinspin+0x244>)
 8007914:	7913      	ldrb	r3, [r2, #4]
 8007916:	2103      	movs	r1, #3
 8007918:	f361 0385 	bfi	r3, r1, #2, #4
 800791c:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 800791e:	4a82      	ldr	r2, [pc, #520]	; (8007b28 <draw_spinspin+0x250>)
 8007920:	211e      	movs	r1, #30
 8007922:	4880      	ldr	r0, [pc, #512]	; (8007b24 <draw_spinspin+0x24c>)
 8007924:	f018 fdbc 	bl	80204a0 <sniprintf>
 8007928:	4603      	mov	r3, r0
 800792a:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 800792c:	4b7f      	ldr	r3, [pc, #508]	; (8007b2c <draw_spinspin+0x254>)
 800792e:	22a5      	movs	r2, #165	; 0xa5
 8007930:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007932:	4b7e      	ldr	r3, [pc, #504]	; (8007b2c <draw_spinspin+0x254>)
 8007934:	2200      	movs	r2, #0
 8007936:	f042 0201 	orr.w	r2, r2, #1
 800793a:	715a      	strb	r2, [r3, #5]
 800793c:	2200      	movs	r2, #0
 800793e:	f042 0203 	orr.w	r2, r2, #3
 8007942:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007944:	4b7a      	ldr	r3, [pc, #488]	; (8007b30 <draw_spinspin+0x258>)
 8007946:	781b      	ldrb	r3, [r3, #0]
 8007948:	1c5a      	adds	r2, r3, #1
 800794a:	b2d1      	uxtb	r1, r2
 800794c:	4a78      	ldr	r2, [pc, #480]	; (8007b30 <draw_spinspin+0x258>)
 800794e:	7011      	strb	r1, [r2, #0]
 8007950:	4a76      	ldr	r2, [pc, #472]	; (8007b2c <draw_spinspin+0x254>)
 8007952:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8007954:	7bfb      	ldrb	r3, [r7, #15]
 8007956:	b29b      	uxth	r3, r3
 8007958:	3315      	adds	r3, #21
 800795a:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 800795c:	4b73      	ldr	r3, [pc, #460]	; (8007b2c <draw_spinspin+0x254>)
 800795e:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8007962:	4b73      	ldr	r3, [pc, #460]	; (8007b30 <draw_spinspin+0x258>)
 8007964:	781b      	ldrb	r3, [r3, #0]
 8007966:	1c5a      	adds	r2, r3, #1
 8007968:	b2d1      	uxtb	r1, r2
 800796a:	4a71      	ldr	r2, [pc, #452]	; (8007b30 <draw_spinspin+0x258>)
 800796c:	7011      	strb	r1, [r2, #0]
 800796e:	4a6f      	ldr	r2, [pc, #444]	; (8007b2c <draw_spinspin+0x254>)
 8007970:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007972:	68bb      	ldr	r3, [r7, #8]
 8007974:	4a6f      	ldr	r2, [pc, #444]	; (8007b34 <draw_spinspin+0x25c>)
 8007976:	4413      	add	r3, r2
 8007978:	4a6c      	ldr	r2, [pc, #432]	; (8007b2c <draw_spinspin+0x254>)
 800797a:	6810      	ldr	r0, [r2, #0]
 800797c:	6018      	str	r0, [r3, #0]
 800797e:	8891      	ldrh	r1, [r2, #4]
 8007980:	7992      	ldrb	r2, [r2, #6]
 8007982:	8099      	strh	r1, [r3, #4]
 8007984:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8007986:	68bb      	ldr	r3, [r7, #8]
 8007988:	3307      	adds	r3, #7
 800798a:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 800798c:	2105      	movs	r1, #5
 800798e:	4869      	ldr	r0, [pc, #420]	; (8007b34 <draw_spinspin+0x25c>)
 8007990:	f7f9 fb7b 	bl	800108a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8007994:	4b68      	ldr	r3, [pc, #416]	; (8007b38 <draw_spinspin+0x260>)
 8007996:	f44f 7288 	mov.w	r2, #272	; 0x110
 800799a:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 800799c:	4b67      	ldr	r3, [pc, #412]	; (8007b3c <draw_spinspin+0x264>)
 800799e:	781b      	ldrb	r3, [r3, #0]
 80079a0:	b29a      	uxth	r2, r3
 80079a2:	4b65      	ldr	r3, [pc, #404]	; (8007b38 <draw_spinspin+0x260>)
 80079a4:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 80079a6:	4b66      	ldr	r3, [pc, #408]	; (8007b40 <draw_spinspin+0x268>)
 80079a8:	881a      	ldrh	r2, [r3, #0]
 80079aa:	4b63      	ldr	r3, [pc, #396]	; (8007b38 <draw_spinspin+0x260>)
 80079ac:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 80079ae:	68bb      	ldr	r3, [r7, #8]
 80079b0:	4a60      	ldr	r2, [pc, #384]	; (8007b34 <draw_spinspin+0x25c>)
 80079b2:	4413      	add	r3, r2
 80079b4:	4a60      	ldr	r2, [pc, #384]	; (8007b38 <draw_spinspin+0x260>)
 80079b6:	6810      	ldr	r0, [r2, #0]
 80079b8:	6018      	str	r0, [r3, #0]
 80079ba:	8892      	ldrh	r2, [r2, #4]
 80079bc:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 80079be:	68bb      	ldr	r3, [r7, #8]
 80079c0:	3306      	adds	r3, #6
 80079c2:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 80079c4:	4b55      	ldr	r3, [pc, #340]	; (8007b1c <draw_spinspin+0x244>)
 80079c6:	2200      	movs	r2, #0
 80079c8:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 80079ca:	4b54      	ldr	r3, [pc, #336]	; (8007b1c <draw_spinspin+0x244>)
 80079cc:	2200      	movs	r2, #0
 80079ce:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 80079d0:	4b52      	ldr	r3, [pc, #328]	; (8007b1c <draw_spinspin+0x244>)
 80079d2:	2201      	movs	r2, #1
 80079d4:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 80079d6:	4b51      	ldr	r3, [pc, #324]	; (8007b1c <draw_spinspin+0x244>)
 80079d8:	78da      	ldrb	r2, [r3, #3]
 80079da:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80079de:	70da      	strb	r2, [r3, #3]
 80079e0:	791a      	ldrb	r2, [r3, #4]
 80079e2:	f022 0203 	bic.w	r2, r2, #3
 80079e6:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 80079e8:	79fb      	ldrb	r3, [r7, #7]
 80079ea:	2b01      	cmp	r3, #1
 80079ec:	d106      	bne.n	80079fc <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80079ee:	4a4b      	ldr	r2, [pc, #300]	; (8007b1c <draw_spinspin+0x244>)
 80079f0:	78d3      	ldrb	r3, [r2, #3]
 80079f2:	2102      	movs	r1, #2
 80079f4:	f361 0302 	bfi	r3, r1, #0, #3
 80079f8:	70d3      	strb	r3, [r2, #3]
 80079fa:	e005      	b.n	8007a08 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80079fc:	4a47      	ldr	r2, [pc, #284]	; (8007b1c <draw_spinspin+0x244>)
 80079fe:	78d3      	ldrb	r3, [r2, #3]
 8007a00:	2101      	movs	r1, #1
 8007a02:	f361 0302 	bfi	r3, r1, #0, #3
 8007a06:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8007a08:	4a44      	ldr	r2, [pc, #272]	; (8007b1c <draw_spinspin+0x244>)
 8007a0a:	78d3      	ldrb	r3, [r2, #3]
 8007a0c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8007a10:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8007a12:	4b42      	ldr	r3, [pc, #264]	; (8007b1c <draw_spinspin+0x244>)
 8007a14:	791a      	ldrb	r2, [r3, #4]
 8007a16:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007a1a:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8007a1e:	711a      	strb	r2, [r3, #4]
 8007a20:	795a      	ldrb	r2, [r3, #5]
 8007a22:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007a26:	f042 0207 	orr.w	r2, r2, #7
 8007a2a:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8007a2c:	7bfb      	ldrb	r3, [r7, #15]
 8007a2e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a32:	b29a      	uxth	r2, r3
 8007a34:	4b39      	ldr	r3, [pc, #228]	; (8007b1c <draw_spinspin+0x244>)
 8007a36:	f002 0101 	and.w	r1, r2, #1
 8007a3a:	01cc      	lsls	r4, r1, #7
 8007a3c:	7959      	ldrb	r1, [r3, #5]
 8007a3e:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8007a42:	4608      	mov	r0, r1
 8007a44:	4621      	mov	r1, r4
 8007a46:	4301      	orrs	r1, r0
 8007a48:	7159      	strb	r1, [r3, #5]
 8007a4a:	0852      	lsrs	r2, r2, #1
 8007a4c:	b292      	uxth	r2, r2
 8007a4e:	b2d2      	uxtb	r2, r2
 8007a50:	2100      	movs	r1, #0
 8007a52:	430a      	orrs	r2, r1
 8007a54:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8007a56:	4b31      	ldr	r3, [pc, #196]	; (8007b1c <draw_spinspin+0x244>)
 8007a58:	2200      	movs	r2, #0
 8007a5a:	f042 0207 	orr.w	r2, r2, #7
 8007a5e:	71da      	strb	r2, [r3, #7]
 8007a60:	7a1a      	ldrb	r2, [r3, #8]
 8007a62:	f022 0203 	bic.w	r2, r2, #3
 8007a66:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8007a68:	4b2c      	ldr	r3, [pc, #176]	; (8007b1c <draw_spinspin+0x244>)
 8007a6a:	78da      	ldrb	r2, [r3, #3]
 8007a6c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007a70:	70da      	strb	r2, [r3, #3]
 8007a72:	791a      	ldrb	r2, [r3, #4]
 8007a74:	f022 0203 	bic.w	r2, r2, #3
 8007a78:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8007a7a:	4b28      	ldr	r3, [pc, #160]	; (8007b1c <draw_spinspin+0x244>)
 8007a7c:	7a1a      	ldrb	r2, [r3, #8]
 8007a7e:	f002 0203 	and.w	r2, r2, #3
 8007a82:	f062 0237 	orn	r2, r2, #55	; 0x37
 8007a86:	721a      	strb	r2, [r3, #8]
 8007a88:	7a5a      	ldrb	r2, [r3, #9]
 8007a8a:	f022 021f 	bic.w	r2, r2, #31
 8007a8e:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 8007a90:	4b22      	ldr	r3, [pc, #136]	; (8007b1c <draw_spinspin+0x244>)
 8007a92:	7a5a      	ldrb	r2, [r3, #9]
 8007a94:	f002 021f 	and.w	r2, r2, #31
 8007a98:	725a      	strb	r2, [r3, #9]
 8007a9a:	2200      	movs	r2, #0
 8007a9c:	f042 024b 	orr.w	r2, r2, #75	; 0x4b
 8007aa0:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8007aa2:	68bb      	ldr	r3, [r7, #8]
 8007aa4:	4a23      	ldr	r2, [pc, #140]	; (8007b34 <draw_spinspin+0x25c>)
 8007aa6:	4413      	add	r3, r2
 8007aa8:	4a1c      	ldr	r2, [pc, #112]	; (8007b1c <draw_spinspin+0x244>)
 8007aaa:	461c      	mov	r4, r3
 8007aac:	4613      	mov	r3, r2
 8007aae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007ab0:	6020      	str	r0, [r4, #0]
 8007ab2:	6061      	str	r1, [r4, #4]
 8007ab4:	60a2      	str	r2, [r4, #8]
 8007ab6:	881a      	ldrh	r2, [r3, #0]
 8007ab8:	789b      	ldrb	r3, [r3, #2]
 8007aba:	81a2      	strh	r2, [r4, #12]
 8007abc:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8007abe:	68bb      	ldr	r3, [r7, #8]
 8007ac0:	330f      	adds	r3, #15
 8007ac2:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8007ac4:	68bb      	ldr	r3, [r7, #8]
 8007ac6:	4a1b      	ldr	r2, [pc, #108]	; (8007b34 <draw_spinspin+0x25c>)
 8007ac8:	4413      	add	r3, r2
 8007aca:	7bfa      	ldrb	r2, [r7, #15]
 8007acc:	4915      	ldr	r1, [pc, #84]	; (8007b24 <draw_spinspin+0x24c>)
 8007ace:	4618      	mov	r0, r3
 8007ad0:	f017 fd41 	bl	801f556 <memcpy>
	curr_pos += char_len;
 8007ad4:	7bfb      	ldrb	r3, [r7, #15]
 8007ad6:	68ba      	ldr	r2, [r7, #8]
 8007ad8:	4413      	add	r3, r2
 8007ada:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007adc:	68bb      	ldr	r3, [r7, #8]
 8007ade:	3302      	adds	r3, #2
 8007ae0:	4619      	mov	r1, r3
 8007ae2:	4814      	ldr	r0, [pc, #80]	; (8007b34 <draw_spinspin+0x25c>)
 8007ae4:	f7f9 fb54 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007ae8:	e002      	b.n	8007af0 <draw_spinspin+0x218>
		vTaskDelay(1);
 8007aea:	2001      	movs	r0, #1
 8007aec:	f014 ffd0 	bl	801ca90 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007af0:	4b14      	ldr	r3, [pc, #80]	; (8007b44 <draw_spinspin+0x26c>)
 8007af2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007af6:	b2db      	uxtb	r3, r3
 8007af8:	2b20      	cmp	r3, #32
 8007afa:	d1f6      	bne.n	8007aea <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007afc:	68bb      	ldr	r3, [r7, #8]
 8007afe:	b29b      	uxth	r3, r3
 8007b00:	3302      	adds	r3, #2
 8007b02:	b29b      	uxth	r3, r3
 8007b04:	461a      	mov	r2, r3
 8007b06:	490b      	ldr	r1, [pc, #44]	; (8007b34 <draw_spinspin+0x25c>)
 8007b08:	480e      	ldr	r0, [pc, #56]	; (8007b44 <draw_spinspin+0x26c>)
 8007b0a:	f00f f849 	bl	8016ba0 <HAL_UART_Transmit_DMA>
}
 8007b0e:	bf00      	nop
 8007b10:	3714      	adds	r7, #20
 8007b12:	46bd      	mov	sp, r7
 8007b14:	bd90      	pop	{r4, r7, pc}
 8007b16:	bf00      	nop
 8007b18:	20002f94 	.word	0x20002f94
 8007b1c:	20003208 	.word	0x20003208
 8007b20:	080267e4 	.word	0x080267e4
 8007b24:	20003220 	.word	0x20003220
 8007b28:	080267f0 	.word	0x080267f0
 8007b2c:	20003218 	.word	0x20003218
 8007b30:	200033e4 	.word	0x200033e4
 8007b34:	20003100 	.word	0x20003100
 8007b38:	20003200 	.word	0x20003200
 8007b3c:	2000337c 	.word	0x2000337c
 8007b40:	200030fc 	.word	0x200030fc
 8007b44:	200016e4 	.word	0x200016e4

08007b48 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8007b48:	b590      	push	{r4, r7, lr}
 8007b4a:	b085      	sub	sp, #20
 8007b4c:	af00      	add	r7, sp, #0
 8007b4e:	4603      	mov	r3, r0
 8007b50:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 8007b52:	2300      	movs	r3, #0
 8007b54:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 8007b56:	2300      	movs	r3, #0
 8007b58:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8007b5a:	2300      	movs	r3, #0
 8007b5c:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 8007b5e:	4a83      	ldr	r2, [pc, #524]	; (8007d6c <draw_gearing+0x224>)
 8007b60:	7913      	ldrb	r3, [r2, #4]
 8007b62:	2106      	movs	r1, #6
 8007b64:	f361 0385 	bfi	r3, r1, #2, #4
 8007b68:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8007b6a:	4b81      	ldr	r3, [pc, #516]	; (8007d70 <draw_gearing+0x228>)
 8007b6c:	781b      	ldrb	r3, [r3, #0]
 8007b6e:	4a81      	ldr	r2, [pc, #516]	; (8007d74 <draw_gearing+0x22c>)
 8007b70:	211e      	movs	r1, #30
 8007b72:	4881      	ldr	r0, [pc, #516]	; (8007d78 <draw_gearing+0x230>)
 8007b74:	f018 fc94 	bl	80204a0 <sniprintf>
 8007b78:	4603      	mov	r3, r0
 8007b7a:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 8007b7c:	4b7f      	ldr	r3, [pc, #508]	; (8007d7c <draw_gearing+0x234>)
 8007b7e:	22a5      	movs	r2, #165	; 0xa5
 8007b80:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007b82:	4b7e      	ldr	r3, [pc, #504]	; (8007d7c <draw_gearing+0x234>)
 8007b84:	2200      	movs	r2, #0
 8007b86:	f042 0201 	orr.w	r2, r2, #1
 8007b8a:	715a      	strb	r2, [r3, #5]
 8007b8c:	2200      	movs	r2, #0
 8007b8e:	f042 0203 	orr.w	r2, r2, #3
 8007b92:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007b94:	4b7a      	ldr	r3, [pc, #488]	; (8007d80 <draw_gearing+0x238>)
 8007b96:	781b      	ldrb	r3, [r3, #0]
 8007b98:	1c5a      	adds	r2, r3, #1
 8007b9a:	b2d1      	uxtb	r1, r2
 8007b9c:	4a78      	ldr	r2, [pc, #480]	; (8007d80 <draw_gearing+0x238>)
 8007b9e:	7011      	strb	r1, [r2, #0]
 8007ba0:	4a76      	ldr	r2, [pc, #472]	; (8007d7c <draw_gearing+0x234>)
 8007ba2:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8007ba4:	7afb      	ldrb	r3, [r7, #11]
 8007ba6:	b29b      	uxth	r3, r3
 8007ba8:	3315      	adds	r3, #21
 8007baa:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8007bac:	4b73      	ldr	r3, [pc, #460]	; (8007d7c <draw_gearing+0x234>)
 8007bae:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8007bb2:	4b73      	ldr	r3, [pc, #460]	; (8007d80 <draw_gearing+0x238>)
 8007bb4:	781b      	ldrb	r3, [r3, #0]
 8007bb6:	1c5a      	adds	r2, r3, #1
 8007bb8:	b2d1      	uxtb	r1, r2
 8007bba:	4a71      	ldr	r2, [pc, #452]	; (8007d80 <draw_gearing+0x238>)
 8007bbc:	7011      	strb	r1, [r2, #0]
 8007bbe:	4a6f      	ldr	r2, [pc, #444]	; (8007d7c <draw_gearing+0x234>)
 8007bc0:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007bc2:	68fb      	ldr	r3, [r7, #12]
 8007bc4:	4a6f      	ldr	r2, [pc, #444]	; (8007d84 <draw_gearing+0x23c>)
 8007bc6:	4413      	add	r3, r2
 8007bc8:	4a6c      	ldr	r2, [pc, #432]	; (8007d7c <draw_gearing+0x234>)
 8007bca:	6810      	ldr	r0, [r2, #0]
 8007bcc:	6018      	str	r0, [r3, #0]
 8007bce:	8891      	ldrh	r1, [r2, #4]
 8007bd0:	7992      	ldrb	r2, [r2, #6]
 8007bd2:	8099      	strh	r1, [r3, #4]
 8007bd4:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8007bd6:	68fb      	ldr	r3, [r7, #12]
 8007bd8:	3307      	adds	r3, #7
 8007bda:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 8007bdc:	2105      	movs	r1, #5
 8007bde:	4869      	ldr	r0, [pc, #420]	; (8007d84 <draw_gearing+0x23c>)
 8007be0:	f7f9 fa53 	bl	800108a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8007be4:	4b68      	ldr	r3, [pc, #416]	; (8007d88 <draw_gearing+0x240>)
 8007be6:	f44f 7288 	mov.w	r2, #272	; 0x110
 8007bea:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8007bec:	4b67      	ldr	r3, [pc, #412]	; (8007d8c <draw_gearing+0x244>)
 8007bee:	781b      	ldrb	r3, [r3, #0]
 8007bf0:	b29a      	uxth	r2, r3
 8007bf2:	4b65      	ldr	r3, [pc, #404]	; (8007d88 <draw_gearing+0x240>)
 8007bf4:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8007bf6:	4b66      	ldr	r3, [pc, #408]	; (8007d90 <draw_gearing+0x248>)
 8007bf8:	881a      	ldrh	r2, [r3, #0]
 8007bfa:	4b63      	ldr	r3, [pc, #396]	; (8007d88 <draw_gearing+0x240>)
 8007bfc:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	4a60      	ldr	r2, [pc, #384]	; (8007d84 <draw_gearing+0x23c>)
 8007c02:	4413      	add	r3, r2
 8007c04:	4a60      	ldr	r2, [pc, #384]	; (8007d88 <draw_gearing+0x240>)
 8007c06:	6810      	ldr	r0, [r2, #0]
 8007c08:	6018      	str	r0, [r3, #0]
 8007c0a:	8892      	ldrh	r2, [r2, #4]
 8007c0c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	3306      	adds	r3, #6
 8007c12:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8007c14:	4b55      	ldr	r3, [pc, #340]	; (8007d6c <draw_gearing+0x224>)
 8007c16:	2200      	movs	r2, #0
 8007c18:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 8007c1a:	4b54      	ldr	r3, [pc, #336]	; (8007d6c <draw_gearing+0x224>)
 8007c1c:	2200      	movs	r2, #0
 8007c1e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 8007c20:	4b52      	ldr	r3, [pc, #328]	; (8007d6c <draw_gearing+0x224>)
 8007c22:	2202      	movs	r2, #2
 8007c24:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8007c26:	4b51      	ldr	r3, [pc, #324]	; (8007d6c <draw_gearing+0x224>)
 8007c28:	78da      	ldrb	r2, [r3, #3]
 8007c2a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007c2e:	70da      	strb	r2, [r3, #3]
 8007c30:	791a      	ldrb	r2, [r3, #4]
 8007c32:	f022 0203 	bic.w	r2, r2, #3
 8007c36:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8007c38:	79fb      	ldrb	r3, [r7, #7]
 8007c3a:	2b01      	cmp	r3, #1
 8007c3c:	d106      	bne.n	8007c4c <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007c3e:	4a4b      	ldr	r2, [pc, #300]	; (8007d6c <draw_gearing+0x224>)
 8007c40:	78d3      	ldrb	r3, [r2, #3]
 8007c42:	2102      	movs	r1, #2
 8007c44:	f361 0302 	bfi	r3, r1, #0, #3
 8007c48:	70d3      	strb	r3, [r2, #3]
 8007c4a:	e005      	b.n	8007c58 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007c4c:	4a47      	ldr	r2, [pc, #284]	; (8007d6c <draw_gearing+0x224>)
 8007c4e:	78d3      	ldrb	r3, [r2, #3]
 8007c50:	2101      	movs	r1, #1
 8007c52:	f361 0302 	bfi	r3, r1, #0, #3
 8007c56:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8007c58:	4a44      	ldr	r2, [pc, #272]	; (8007d6c <draw_gearing+0x224>)
 8007c5a:	78d3      	ldrb	r3, [r2, #3]
 8007c5c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8007c60:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8007c62:	4b42      	ldr	r3, [pc, #264]	; (8007d6c <draw_gearing+0x224>)
 8007c64:	791a      	ldrb	r2, [r3, #4]
 8007c66:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007c6a:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8007c6e:	711a      	strb	r2, [r3, #4]
 8007c70:	795a      	ldrb	r2, [r3, #5]
 8007c72:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007c76:	f042 0207 	orr.w	r2, r2, #7
 8007c7a:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8007c7c:	7afb      	ldrb	r3, [r7, #11]
 8007c7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007c82:	b29a      	uxth	r2, r3
 8007c84:	4b39      	ldr	r3, [pc, #228]	; (8007d6c <draw_gearing+0x224>)
 8007c86:	f002 0101 	and.w	r1, r2, #1
 8007c8a:	01cc      	lsls	r4, r1, #7
 8007c8c:	7959      	ldrb	r1, [r3, #5]
 8007c8e:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8007c92:	4608      	mov	r0, r1
 8007c94:	4621      	mov	r1, r4
 8007c96:	4301      	orrs	r1, r0
 8007c98:	7159      	strb	r1, [r3, #5]
 8007c9a:	0852      	lsrs	r2, r2, #1
 8007c9c:	b292      	uxth	r2, r2
 8007c9e:	b2d2      	uxtb	r2, r2
 8007ca0:	2100      	movs	r1, #0
 8007ca2:	430a      	orrs	r2, r1
 8007ca4:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8007ca6:	4b31      	ldr	r3, [pc, #196]	; (8007d6c <draw_gearing+0x224>)
 8007ca8:	2200      	movs	r2, #0
 8007caa:	f042 0207 	orr.w	r2, r2, #7
 8007cae:	71da      	strb	r2, [r3, #7]
 8007cb0:	7a1a      	ldrb	r2, [r3, #8]
 8007cb2:	f022 0203 	bic.w	r2, r2, #3
 8007cb6:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8007cb8:	4b2c      	ldr	r3, [pc, #176]	; (8007d6c <draw_gearing+0x224>)
 8007cba:	78da      	ldrb	r2, [r3, #3]
 8007cbc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007cc0:	70da      	strb	r2, [r3, #3]
 8007cc2:	791a      	ldrb	r2, [r3, #4]
 8007cc4:	f022 0203 	bic.w	r2, r2, #3
 8007cc8:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8007cca:	4b28      	ldr	r3, [pc, #160]	; (8007d6c <draw_gearing+0x224>)
 8007ccc:	7a1a      	ldrb	r2, [r3, #8]
 8007cce:	f002 0203 	and.w	r2, r2, #3
 8007cd2:	f062 0237 	orn	r2, r2, #55	; 0x37
 8007cd6:	721a      	strb	r2, [r3, #8]
 8007cd8:	7a5a      	ldrb	r2, [r3, #9]
 8007cda:	f022 021f 	bic.w	r2, r2, #31
 8007cde:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 8007ce0:	4b22      	ldr	r3, [pc, #136]	; (8007d6c <draw_gearing+0x224>)
 8007ce2:	7a5a      	ldrb	r2, [r3, #9]
 8007ce4:	f002 021f 	and.w	r2, r2, #31
 8007ce8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007cec:	725a      	strb	r2, [r3, #9]
 8007cee:	2200      	movs	r2, #0
 8007cf0:	f042 0251 	orr.w	r2, r2, #81	; 0x51
 8007cf4:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8007cf6:	68fb      	ldr	r3, [r7, #12]
 8007cf8:	4a22      	ldr	r2, [pc, #136]	; (8007d84 <draw_gearing+0x23c>)
 8007cfa:	4413      	add	r3, r2
 8007cfc:	4a1b      	ldr	r2, [pc, #108]	; (8007d6c <draw_gearing+0x224>)
 8007cfe:	461c      	mov	r4, r3
 8007d00:	4613      	mov	r3, r2
 8007d02:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007d04:	6020      	str	r0, [r4, #0]
 8007d06:	6061      	str	r1, [r4, #4]
 8007d08:	60a2      	str	r2, [r4, #8]
 8007d0a:	881a      	ldrh	r2, [r3, #0]
 8007d0c:	789b      	ldrb	r3, [r3, #2]
 8007d0e:	81a2      	strh	r2, [r4, #12]
 8007d10:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	330f      	adds	r3, #15
 8007d16:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	4a1a      	ldr	r2, [pc, #104]	; (8007d84 <draw_gearing+0x23c>)
 8007d1c:	4413      	add	r3, r2
 8007d1e:	7afa      	ldrb	r2, [r7, #11]
 8007d20:	4915      	ldr	r1, [pc, #84]	; (8007d78 <draw_gearing+0x230>)
 8007d22:	4618      	mov	r0, r3
 8007d24:	f017 fc17 	bl	801f556 <memcpy>
	curr_pos += char_len;
 8007d28:	7afb      	ldrb	r3, [r7, #11]
 8007d2a:	68fa      	ldr	r2, [r7, #12]
 8007d2c:	4413      	add	r3, r2
 8007d2e:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	3302      	adds	r3, #2
 8007d34:	4619      	mov	r1, r3
 8007d36:	4813      	ldr	r0, [pc, #76]	; (8007d84 <draw_gearing+0x23c>)
 8007d38:	f7f9 fa2a 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007d3c:	e002      	b.n	8007d44 <draw_gearing+0x1fc>
		vTaskDelay(1);
 8007d3e:	2001      	movs	r0, #1
 8007d40:	f014 fea6 	bl	801ca90 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007d44:	4b13      	ldr	r3, [pc, #76]	; (8007d94 <draw_gearing+0x24c>)
 8007d46:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007d4a:	b2db      	uxtb	r3, r3
 8007d4c:	2b20      	cmp	r3, #32
 8007d4e:	d1f6      	bne.n	8007d3e <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007d50:	68fb      	ldr	r3, [r7, #12]
 8007d52:	b29b      	uxth	r3, r3
 8007d54:	3302      	adds	r3, #2
 8007d56:	b29b      	uxth	r3, r3
 8007d58:	461a      	mov	r2, r3
 8007d5a:	490a      	ldr	r1, [pc, #40]	; (8007d84 <draw_gearing+0x23c>)
 8007d5c:	480d      	ldr	r0, [pc, #52]	; (8007d94 <draw_gearing+0x24c>)
 8007d5e:	f00e ff1f 	bl	8016ba0 <HAL_UART_Transmit_DMA>
}
 8007d62:	bf00      	nop
 8007d64:	3714      	adds	r7, #20
 8007d66:	46bd      	mov	sp, r7
 8007d68:	bd90      	pop	{r4, r7, pc}
 8007d6a:	bf00      	nop
 8007d6c:	20003208 	.word	0x20003208
 8007d70:	20002f84 	.word	0x20002f84
 8007d74:	080267f8 	.word	0x080267f8
 8007d78:	20003220 	.word	0x20003220
 8007d7c:	20003218 	.word	0x20003218
 8007d80:	200033e4 	.word	0x200033e4
 8007d84:	20003100 	.word	0x20003100
 8007d88:	20003200 	.word	0x20003200
 8007d8c:	2000337c 	.word	0x2000337c
 8007d90:	200030fc 	.word	0x200030fc
 8007d94:	200016e4 	.word	0x200016e4

08007d98 <clear_hud>:


void clear_hud(){
 8007d98:	b580      	push	{r7, lr}
 8007d9a:	b084      	sub	sp, #16
 8007d9c:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 8007d9e:	2300      	movs	r3, #0
 8007da0:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 8007da2:	2300      	movs	r3, #0
 8007da4:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8007da6:	2300      	movs	r3, #0
 8007da8:	60fb      	str	r3, [r7, #12]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8007daa:	4b34      	ldr	r3, [pc, #208]	; (8007e7c <clear_hud+0xe4>)
 8007dac:	781b      	ldrb	r3, [r3, #0]
 8007dae:	4a34      	ldr	r2, [pc, #208]	; (8007e80 <clear_hud+0xe8>)
 8007db0:	211e      	movs	r1, #30
 8007db2:	4834      	ldr	r0, [pc, #208]	; (8007e84 <clear_hud+0xec>)
 8007db4:	f018 fb74 	bl	80204a0 <sniprintf>
 8007db8:	4603      	mov	r3, r0
 8007dba:	72fb      	strb	r3, [r7, #11]

	send_header.start_frame = 0xA5;
 8007dbc:	4b32      	ldr	r3, [pc, #200]	; (8007e88 <clear_hud+0xf0>)
 8007dbe:	22a5      	movs	r2, #165	; 0xa5
 8007dc0:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007dc2:	4b31      	ldr	r3, [pc, #196]	; (8007e88 <clear_hud+0xf0>)
 8007dc4:	2200      	movs	r2, #0
 8007dc6:	f042 0201 	orr.w	r2, r2, #1
 8007dca:	715a      	strb	r2, [r3, #5]
 8007dcc:	2200      	movs	r2, #0
 8007dce:	f042 0203 	orr.w	r2, r2, #3
 8007dd2:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007dd4:	4b2d      	ldr	r3, [pc, #180]	; (8007e8c <clear_hud+0xf4>)
 8007dd6:	781b      	ldrb	r3, [r3, #0]
 8007dd8:	1c5a      	adds	r2, r3, #1
 8007dda:	b2d1      	uxtb	r1, r2
 8007ddc:	4a2b      	ldr	r2, [pc, #172]	; (8007e8c <clear_hud+0xf4>)
 8007dde:	7011      	strb	r1, [r2, #0]
 8007de0:	4a29      	ldr	r2, [pc, #164]	; (8007e88 <clear_hud+0xf0>)
 8007de2:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 8007de4:	4b28      	ldr	r3, [pc, #160]	; (8007e88 <clear_hud+0xf0>)
 8007de6:	2200      	movs	r2, #0
 8007de8:	f042 0208 	orr.w	r2, r2, #8
 8007dec:	705a      	strb	r2, [r3, #1]
 8007dee:	2200      	movs	r2, #0
 8007df0:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8007df2:	4b26      	ldr	r3, [pc, #152]	; (8007e8c <clear_hud+0xf4>)
 8007df4:	781b      	ldrb	r3, [r3, #0]
 8007df6:	1c5a      	adds	r2, r3, #1
 8007df8:	b2d1      	uxtb	r1, r2
 8007dfa:	4a24      	ldr	r2, [pc, #144]	; (8007e8c <clear_hud+0xf4>)
 8007dfc:	7011      	strb	r1, [r2, #0]
 8007dfe:	4a22      	ldr	r2, [pc, #136]	; (8007e88 <clear_hud+0xf0>)
 8007e00:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007e02:	68fb      	ldr	r3, [r7, #12]
 8007e04:	4a22      	ldr	r2, [pc, #136]	; (8007e90 <clear_hud+0xf8>)
 8007e06:	4413      	add	r3, r2
 8007e08:	4a1f      	ldr	r2, [pc, #124]	; (8007e88 <clear_hud+0xf0>)
 8007e0a:	6810      	ldr	r0, [r2, #0]
 8007e0c:	6018      	str	r0, [r3, #0]
 8007e0e:	8891      	ldrh	r1, [r2, #4]
 8007e10:	7992      	ldrb	r2, [r2, #6]
 8007e12:	8099      	strh	r1, [r3, #4]
 8007e14:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 8007e16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007e1a:	803b      	strh	r3, [r7, #0]
	ref_delete.graphic_layer = 9;
 8007e1c:	2309      	movs	r3, #9
 8007e1e:	71fb      	strb	r3, [r7, #7]
	ref_delete.graphic_operation = 2;
 8007e20:	2302      	movs	r3, #2
 8007e22:	71bb      	strb	r3, [r7, #6]
	ref_delete.receiver_ID = g_client_id;
 8007e24:	4b1b      	ldr	r3, [pc, #108]	; (8007e94 <clear_hud+0xfc>)
 8007e26:	881b      	ldrh	r3, [r3, #0]
 8007e28:	80bb      	strh	r3, [r7, #4]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8007e2a:	4b1b      	ldr	r3, [pc, #108]	; (8007e98 <clear_hud+0x100>)
 8007e2c:	781b      	ldrb	r3, [r3, #0]
 8007e2e:	b29b      	uxth	r3, r3
 8007e30:	807b      	strh	r3, [r7, #2]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	4a16      	ldr	r2, [pc, #88]	; (8007e90 <clear_hud+0xf8>)
 8007e36:	4413      	add	r3, r2
 8007e38:	461a      	mov	r2, r3
 8007e3a:	463b      	mov	r3, r7
 8007e3c:	cb03      	ldmia	r3!, {r0, r1}
 8007e3e:	6010      	str	r0, [r2, #0]
 8007e40:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007e42:	68fb      	ldr	r3, [r7, #12]
 8007e44:	3302      	adds	r3, #2
 8007e46:	4619      	mov	r1, r3
 8007e48:	4811      	ldr	r0, [pc, #68]	; (8007e90 <clear_hud+0xf8>)
 8007e4a:	f7f9 f9a1 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007e4e:	e002      	b.n	8007e56 <clear_hud+0xbe>
		vTaskDelay(1);
 8007e50:	2001      	movs	r0, #1
 8007e52:	f014 fe1d 	bl	801ca90 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007e56:	4b11      	ldr	r3, [pc, #68]	; (8007e9c <clear_hud+0x104>)
 8007e58:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007e5c:	b2db      	uxtb	r3, r3
 8007e5e:	2b20      	cmp	r3, #32
 8007e60:	d1f6      	bne.n	8007e50 <clear_hud+0xb8>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007e62:	68fb      	ldr	r3, [r7, #12]
 8007e64:	b29b      	uxth	r3, r3
 8007e66:	3302      	adds	r3, #2
 8007e68:	b29b      	uxth	r3, r3
 8007e6a:	461a      	mov	r2, r3
 8007e6c:	4908      	ldr	r1, [pc, #32]	; (8007e90 <clear_hud+0xf8>)
 8007e6e:	480b      	ldr	r0, [pc, #44]	; (8007e9c <clear_hud+0x104>)
 8007e70:	f00e fe96 	bl	8016ba0 <HAL_UART_Transmit_DMA>

}
 8007e74:	bf00      	nop
 8007e76:	3710      	adds	r7, #16
 8007e78:	46bd      	mov	sp, r7
 8007e7a:	bd80      	pop	{r7, pc}
 8007e7c:	20002f84 	.word	0x20002f84
 8007e80:	080267f8 	.word	0x080267f8
 8007e84:	20003220 	.word	0x20003220
 8007e88:	20003218 	.word	0x20003218
 8007e8c:	200033e4 	.word	0x200033e4
 8007e90:	20003100 	.word	0x20003100
 8007e94:	200030fc 	.word	0x200030fc
 8007e98:	2000337c 	.word	0x2000337c
 8007e9c:	200016e4 	.word	0x200016e4

08007ea0 <imu_proc_task_notif>:
extern QueueHandle_t mag_data_queue;
extern TaskHandle_t imu_processing_task_handle;
static uint32_t last_proc_times[2];
static uint8_t update_flag = 0;

void imu_proc_task_notif() {
 8007ea0:	b580      	push	{r7, lr}
 8007ea2:	b082      	sub	sp, #8
 8007ea4:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 8007ea6:	4b0d      	ldr	r3, [pc, #52]	; (8007edc <imu_proc_task_notif+0x3c>)
 8007ea8:	2200      	movs	r2, #0
 8007eaa:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 8007eac:	2300      	movs	r3, #0
 8007eae:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8007eb0:	4b0b      	ldr	r3, [pc, #44]	; (8007ee0 <imu_proc_task_notif+0x40>)
 8007eb2:	681b      	ldr	r3, [r3, #0]
 8007eb4:	1d3a      	adds	r2, r7, #4
 8007eb6:	4611      	mov	r1, r2
 8007eb8:	4618      	mov	r0, r3
 8007eba:	f015 fc45 	bl	801d748 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	2b00      	cmp	r3, #0
 8007ec2:	d007      	beq.n	8007ed4 <imu_proc_task_notif+0x34>
 8007ec4:	4b07      	ldr	r3, [pc, #28]	; (8007ee4 <imu_proc_task_notif+0x44>)
 8007ec6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007eca:	601a      	str	r2, [r3, #0]
 8007ecc:	f3bf 8f4f 	dsb	sy
 8007ed0:	f3bf 8f6f 	isb	sy
}
 8007ed4:	bf00      	nop
 8007ed6:	3708      	adds	r7, #8
 8007ed8:	46bd      	mov	sp, r7
 8007eda:	bd80      	pop	{r7, pc}
 8007edc:	200032d8 	.word	0x200032d8
 8007ee0:	200004a4 	.word	0x200004a4
 8007ee4:	e000ed04 	.word	0xe000ed04

08007ee8 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8007ee8:	b590      	push	{r4, r7, lr}
 8007eea:	b085      	sub	sp, #20
 8007eec:	af00      	add	r7, sp, #0
 8007eee:	463c      	mov	r4, r7
 8007ef0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	gyro_proc_data.gx = gyro_data.gx;
 8007ef4:	683b      	ldr	r3, [r7, #0]
 8007ef6:	4a10      	ldr	r2, [pc, #64]	; (8007f38 <gyro_data_ready+0x50>)
 8007ef8:	6013      	str	r3, [r2, #0]
	gyro_proc_data.gy = gyro_data.gy;
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	4a0e      	ldr	r2, [pc, #56]	; (8007f38 <gyro_data_ready+0x50>)
 8007efe:	6053      	str	r3, [r2, #4]
	gyro_proc_data.gz = gyro_data.gz;
 8007f00:	68bb      	ldr	r3, [r7, #8]
 8007f02:	4a0d      	ldr	r2, [pc, #52]	; (8007f38 <gyro_data_ready+0x50>)
 8007f04:	6093      	str	r3, [r2, #8]
	if (IMU_ORIENTATION == 2) {		// swap gyro inputs for vertically mounted devboard
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 8007f06:	68fb      	ldr	r3, [r7, #12]
 8007f08:	4a0b      	ldr	r2, [pc, #44]	; (8007f38 <gyro_data_ready+0x50>)
 8007f0a:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 8007f0c:	4b0b      	ldr	r3, [pc, #44]	; (8007f3c <gyro_data_ready+0x54>)
 8007f0e:	781b      	ldrb	r3, [r3, #0]
 8007f10:	f043 0301 	orr.w	r3, r3, #1
 8007f14:	b2da      	uxtb	r2, r3
 8007f16:	4b09      	ldr	r3, [pc, #36]	; (8007f3c <gyro_data_ready+0x54>)
 8007f18:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 8007f1a:	4b08      	ldr	r3, [pc, #32]	; (8007f3c <gyro_data_ready+0x54>)
 8007f1c:	781b      	ldrb	r3, [r3, #0]
 8007f1e:	2b07      	cmp	r3, #7
 8007f20:	d003      	beq.n	8007f2a <gyro_data_ready+0x42>
 8007f22:	4b06      	ldr	r3, [pc, #24]	; (8007f3c <gyro_data_ready+0x54>)
 8007f24:	781b      	ldrb	r3, [r3, #0]
 8007f26:	2b03      	cmp	r3, #3
 8007f28:	d101      	bne.n	8007f2e <gyro_data_ready+0x46>
		imu_proc_task_notif();
 8007f2a:	f7ff ffb9 	bl	8007ea0 <imu_proc_task_notif>
	}
}
 8007f2e:	bf00      	nop
 8007f30:	3714      	adds	r7, #20
 8007f32:	46bd      	mov	sp, r7
 8007f34:	bd90      	pop	{r4, r7, pc}
 8007f36:	bf00      	nop
 8007f38:	200032b4 	.word	0x200032b4
 8007f3c:	200032d8 	.word	0x200032d8

08007f40 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 8007f40:	b590      	push	{r4, r7, lr}
 8007f42:	b085      	sub	sp, #20
 8007f44:	af00      	add	r7, sp, #0
 8007f46:	463c      	mov	r4, r7
 8007f48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	accel_proc_data.ax = accel_data.ax;
 8007f4c:	683b      	ldr	r3, [r7, #0]
 8007f4e:	4a10      	ldr	r2, [pc, #64]	; (8007f90 <accel_data_ready+0x50>)
 8007f50:	6013      	str	r3, [r2, #0]
	accel_proc_data.ay = accel_data.ay;
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	4a0e      	ldr	r2, [pc, #56]	; (8007f90 <accel_data_ready+0x50>)
 8007f56:	6053      	str	r3, [r2, #4]
	accel_proc_data.az = accel_data.az;
 8007f58:	68bb      	ldr	r3, [r7, #8]
 8007f5a:	4a0d      	ldr	r2, [pc, #52]	; (8007f90 <accel_data_ready+0x50>)
 8007f5c:	6093      	str	r3, [r2, #8]
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	4a0b      	ldr	r2, [pc, #44]	; (8007f90 <accel_data_ready+0x50>)
 8007f62:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 8007f64:	4b0b      	ldr	r3, [pc, #44]	; (8007f94 <accel_data_ready+0x54>)
 8007f66:	781b      	ldrb	r3, [r3, #0]
 8007f68:	f043 0302 	orr.w	r3, r3, #2
 8007f6c:	b2da      	uxtb	r2, r3
 8007f6e:	4b09      	ldr	r3, [pc, #36]	; (8007f94 <accel_data_ready+0x54>)
 8007f70:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 8007f72:	4b08      	ldr	r3, [pc, #32]	; (8007f94 <accel_data_ready+0x54>)
 8007f74:	781b      	ldrb	r3, [r3, #0]
 8007f76:	2b07      	cmp	r3, #7
 8007f78:	d003      	beq.n	8007f82 <accel_data_ready+0x42>
 8007f7a:	4b06      	ldr	r3, [pc, #24]	; (8007f94 <accel_data_ready+0x54>)
 8007f7c:	781b      	ldrb	r3, [r3, #0]
 8007f7e:	2b03      	cmp	r3, #3
 8007f80:	d101      	bne.n	8007f86 <accel_data_ready+0x46>
		imu_proc_task_notif();
 8007f82:	f7ff ff8d 	bl	8007ea0 <imu_proc_task_notif>
	}
}
 8007f86:	bf00      	nop
 8007f88:	3714      	adds	r7, #20
 8007f8a:	46bd      	mov	sp, r7
 8007f8c:	bd90      	pop	{r4, r7, pc}
 8007f8e:	bf00      	nop
 8007f90:	200032a4 	.word	0x200032a4
 8007f94:	200032d8 	.word	0x200032d8

08007f98 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 8007f98:	b480      	push	{r7}
 8007f9a:	b085      	sub	sp, #20
 8007f9c:	af00      	add	r7, sp, #0
 8007f9e:	1d3b      	adds	r3, r7, #4
 8007fa0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 8007fa4:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8007fa8:	4b0c      	ldr	r3, [pc, #48]	; (8007fdc <mag_data_ready+0x44>)
 8007faa:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 8007fac:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007fb0:	4b0a      	ldr	r3, [pc, #40]	; (8007fdc <mag_data_ready+0x44>)
 8007fb2:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 8007fb4:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8007fb8:	4b08      	ldr	r3, [pc, #32]	; (8007fdc <mag_data_ready+0x44>)
 8007fba:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 8007fbc:	68fb      	ldr	r3, [r7, #12]
 8007fbe:	4a07      	ldr	r2, [pc, #28]	; (8007fdc <mag_data_ready+0x44>)
 8007fc0:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 8007fc2:	4b07      	ldr	r3, [pc, #28]	; (8007fe0 <mag_data_ready+0x48>)
 8007fc4:	781b      	ldrb	r3, [r3, #0]
 8007fc6:	f043 0304 	orr.w	r3, r3, #4
 8007fca:	b2da      	uxtb	r2, r3
 8007fcc:	4b04      	ldr	r3, [pc, #16]	; (8007fe0 <mag_data_ready+0x48>)
 8007fce:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8007fd0:	bf00      	nop
 8007fd2:	3714      	adds	r7, #20
 8007fd4:	46bd      	mov	sp, r7
 8007fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fda:	4770      	bx	lr
 8007fdc:	200032c4 	.word	0x200032c4
 8007fe0:	200032d8 	.word	0x200032d8

08007fe4 <imu_processing_task>:

void imu_processing_task(void *argument) {
 8007fe4:	b580      	push	{r7, lr}
 8007fe6:	b082      	sub	sp, #8
 8007fe8:	af00      	add	r7, sp, #0
 8007fea:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 8007fec:	f7f9 fe72 	bl	8001cd4 <imu_start_ints>
	init_quaternion();
 8007ff0:	f000 f80a 	bl	8008008 <init_quaternion>
	while (1) {
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8007ff4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8007ff8:	2001      	movs	r0, #1
 8007ffa:	f015 fb59 	bl	801d6b0 <ulTaskNotifyTake>
		imu_ahrs_update();
 8007ffe:	f000 f93f 	bl	8008280 <imu_ahrs_update>
		imu_attitude_update();
 8008002:	f000 fd91 	bl	8008b28 <imu_attitude_update>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008006:	e7f5      	b.n	8007ff4 <imu_processing_task+0x10>

08008008 <init_quaternion>:
	}
}

void init_quaternion(void) {
 8008008:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800800c:	b084      	sub	sp, #16
 800800e:	af00      	add	r7, sp, #0
	int16_t hx, hy; //hz;

	hx = mag_proc_data.mx;
 8008010:	4b79      	ldr	r3, [pc, #484]	; (80081f8 <init_quaternion+0x1f0>)
 8008012:	881b      	ldrh	r3, [r3, #0]
 8008014:	81fb      	strh	r3, [r7, #14]
	hy = mag_proc_data.my;
 8008016:	4b78      	ldr	r3, [pc, #480]	; (80081f8 <init_quaternion+0x1f0>)
 8008018:	885b      	ldrh	r3, [r3, #2]
 800801a:	81bb      	strh	r3, [r7, #12]
			q2 = -0.56;
			q3 = 0.0045;
		}
	}
	#else
	if (hx < 0 && hy < 0) {
 800801c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8008020:	2b00      	cmp	r3, #0
 8008022:	da36      	bge.n	8008092 <init_quaternion+0x8a>
 8008024:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008028:	2b00      	cmp	r3, #0
 800802a:	da32      	bge.n	8008092 <init_quaternion+0x8a>
		if (fabs(hx / hy) >= 1) {
 800802c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8008030:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008034:	fb92 f3f3 	sdiv	r3, r2, r3
 8008038:	4618      	mov	r0, r3
 800803a:	f7f8 fa73 	bl	8000524 <__aeabi_i2d>
 800803e:	4602      	mov	r2, r0
 8008040:	460b      	mov	r3, r1
 8008042:	603a      	str	r2, [r7, #0]
 8008044:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008048:	607b      	str	r3, [r7, #4]
 800804a:	f04f 0200 	mov.w	r2, #0
 800804e:	4b6b      	ldr	r3, [pc, #428]	; (80081fc <init_quaternion+0x1f4>)
 8008050:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008054:	f7f8 fd56 	bl	8000b04 <__aeabi_dcmpge>
 8008058:	4603      	mov	r3, r0
 800805a:	2b00      	cmp	r3, #0
 800805c:	d00c      	beq.n	8008078 <init_quaternion+0x70>
			q0 = 0.195;
 800805e:	4b68      	ldr	r3, [pc, #416]	; (8008200 <init_quaternion+0x1f8>)
 8008060:	4a68      	ldr	r2, [pc, #416]	; (8008204 <init_quaternion+0x1fc>)
 8008062:	601a      	str	r2, [r3, #0]
			q1 = -0.015;
 8008064:	4b68      	ldr	r3, [pc, #416]	; (8008208 <init_quaternion+0x200>)
 8008066:	4a69      	ldr	r2, [pc, #420]	; (800820c <init_quaternion+0x204>)
 8008068:	601a      	str	r2, [r3, #0]
			q2 = 0.0043;
 800806a:	4b69      	ldr	r3, [pc, #420]	; (8008210 <init_quaternion+0x208>)
 800806c:	4a69      	ldr	r2, [pc, #420]	; (8008214 <init_quaternion+0x20c>)
 800806e:	601a      	str	r2, [r3, #0]
			q3 = 0.979;
 8008070:	4b69      	ldr	r3, [pc, #420]	; (8008218 <init_quaternion+0x210>)
 8008072:	4a6a      	ldr	r2, [pc, #424]	; (800821c <init_quaternion+0x214>)
 8008074:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 8008076:	e0ba      	b.n	80081ee <init_quaternion+0x1e6>
		} else {
			q0 = 0.555;
 8008078:	4b61      	ldr	r3, [pc, #388]	; (8008200 <init_quaternion+0x1f8>)
 800807a:	4a69      	ldr	r2, [pc, #420]	; (8008220 <init_quaternion+0x218>)
 800807c:	601a      	str	r2, [r3, #0]
			q1 = -0.015;
 800807e:	4b62      	ldr	r3, [pc, #392]	; (8008208 <init_quaternion+0x200>)
 8008080:	4a62      	ldr	r2, [pc, #392]	; (800820c <init_quaternion+0x204>)
 8008082:	601a      	str	r2, [r3, #0]
			q2 = 0.006;
 8008084:	4b62      	ldr	r3, [pc, #392]	; (8008210 <init_quaternion+0x208>)
 8008086:	4a67      	ldr	r2, [pc, #412]	; (8008224 <init_quaternion+0x21c>)
 8008088:	601a      	str	r2, [r3, #0]
			q3 = 0.829;
 800808a:	4b63      	ldr	r3, [pc, #396]	; (8008218 <init_quaternion+0x210>)
 800808c:	4a66      	ldr	r2, [pc, #408]	; (8008228 <init_quaternion+0x220>)
 800808e:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 8008090:	e0ad      	b.n	80081ee <init_quaternion+0x1e6>
		}

	} else if (hx < 0 && hy > 0) {
 8008092:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8008096:	2b00      	cmp	r3, #0
 8008098:	da35      	bge.n	8008106 <init_quaternion+0xfe>
 800809a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800809e:	2b00      	cmp	r3, #0
 80080a0:	dd31      	ble.n	8008106 <init_quaternion+0xfe>
		if (fabs(hx / hy) >= 1) {
 80080a2:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80080a6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80080aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80080ae:	4618      	mov	r0, r3
 80080b0:	f7f8 fa38 	bl	8000524 <__aeabi_i2d>
 80080b4:	4602      	mov	r2, r0
 80080b6:	460b      	mov	r3, r1
 80080b8:	4692      	mov	sl, r2
 80080ba:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 80080be:	f04f 0200 	mov.w	r2, #0
 80080c2:	4b4e      	ldr	r3, [pc, #312]	; (80081fc <init_quaternion+0x1f4>)
 80080c4:	4650      	mov	r0, sl
 80080c6:	4659      	mov	r1, fp
 80080c8:	f7f8 fd1c 	bl	8000b04 <__aeabi_dcmpge>
 80080cc:	4603      	mov	r3, r0
 80080ce:	2b00      	cmp	r3, #0
 80080d0:	d00c      	beq.n	80080ec <init_quaternion+0xe4>
			q0 = -0.193;
 80080d2:	4b4b      	ldr	r3, [pc, #300]	; (8008200 <init_quaternion+0x1f8>)
 80080d4:	4a55      	ldr	r2, [pc, #340]	; (800822c <init_quaternion+0x224>)
 80080d6:	601a      	str	r2, [r3, #0]
			q1 = -0.009;
 80080d8:	4b4b      	ldr	r3, [pc, #300]	; (8008208 <init_quaternion+0x200>)
 80080da:	4a55      	ldr	r2, [pc, #340]	; (8008230 <init_quaternion+0x228>)
 80080dc:	601a      	str	r2, [r3, #0]
			q2 = -0.006;
 80080de:	4b4c      	ldr	r3, [pc, #304]	; (8008210 <init_quaternion+0x208>)
 80080e0:	4a54      	ldr	r2, [pc, #336]	; (8008234 <init_quaternion+0x22c>)
 80080e2:	601a      	str	r2, [r3, #0]
			q3 = 0.979;
 80080e4:	4b4c      	ldr	r3, [pc, #304]	; (8008218 <init_quaternion+0x210>)
 80080e6:	4a4d      	ldr	r2, [pc, #308]	; (800821c <init_quaternion+0x214>)
 80080e8:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 80080ea:	e080      	b.n	80081ee <init_quaternion+0x1e6>
		} else {
			q0 = -0.552;
 80080ec:	4b44      	ldr	r3, [pc, #272]	; (8008200 <init_quaternion+0x1f8>)
 80080ee:	4a52      	ldr	r2, [pc, #328]	; (8008238 <init_quaternion+0x230>)
 80080f0:	601a      	str	r2, [r3, #0]
			q1 = -0.0048;
 80080f2:	4b45      	ldr	r3, [pc, #276]	; (8008208 <init_quaternion+0x200>)
 80080f4:	4a51      	ldr	r2, [pc, #324]	; (800823c <init_quaternion+0x234>)
 80080f6:	601a      	str	r2, [r3, #0]
			q2 = -0.0115;
 80080f8:	4b45      	ldr	r3, [pc, #276]	; (8008210 <init_quaternion+0x208>)
 80080fa:	4a51      	ldr	r2, [pc, #324]	; (8008240 <init_quaternion+0x238>)
 80080fc:	601a      	str	r2, [r3, #0]
			q3 = 0.8313;
 80080fe:	4b46      	ldr	r3, [pc, #280]	; (8008218 <init_quaternion+0x210>)
 8008100:	4a50      	ldr	r2, [pc, #320]	; (8008244 <init_quaternion+0x23c>)
 8008102:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 8008104:	e073      	b.n	80081ee <init_quaternion+0x1e6>
		}

	} else if (hx > 0 && hy > 0) {
 8008106:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800810a:	2b00      	cmp	r3, #0
 800810c:	dd35      	ble.n	800817a <init_quaternion+0x172>
 800810e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008112:	2b00      	cmp	r3, #0
 8008114:	dd31      	ble.n	800817a <init_quaternion+0x172>
		if (fabs(hx / hy) >= 1) {
 8008116:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800811a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800811e:	fb92 f3f3 	sdiv	r3, r2, r3
 8008122:	4618      	mov	r0, r3
 8008124:	f7f8 f9fe 	bl	8000524 <__aeabi_i2d>
 8008128:	4602      	mov	r2, r0
 800812a:	460b      	mov	r3, r1
 800812c:	4690      	mov	r8, r2
 800812e:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 8008132:	f04f 0200 	mov.w	r2, #0
 8008136:	4b31      	ldr	r3, [pc, #196]	; (80081fc <init_quaternion+0x1f4>)
 8008138:	4640      	mov	r0, r8
 800813a:	4649      	mov	r1, r9
 800813c:	f7f8 fce2 	bl	8000b04 <__aeabi_dcmpge>
 8008140:	4603      	mov	r3, r0
 8008142:	2b00      	cmp	r3, #0
 8008144:	d00c      	beq.n	8008160 <init_quaternion+0x158>
			q0 = -0.9785;
 8008146:	4b2e      	ldr	r3, [pc, #184]	; (8008200 <init_quaternion+0x1f8>)
 8008148:	4a3f      	ldr	r2, [pc, #252]	; (8008248 <init_quaternion+0x240>)
 800814a:	601a      	str	r2, [r3, #0]
			q1 = 0.008;
 800814c:	4b2e      	ldr	r3, [pc, #184]	; (8008208 <init_quaternion+0x200>)
 800814e:	4a3f      	ldr	r2, [pc, #252]	; (800824c <init_quaternion+0x244>)
 8008150:	601a      	str	r2, [r3, #0]
			q2 = -0.02;
 8008152:	4b2f      	ldr	r3, [pc, #188]	; (8008210 <init_quaternion+0x208>)
 8008154:	4a3e      	ldr	r2, [pc, #248]	; (8008250 <init_quaternion+0x248>)
 8008156:	601a      	str	r2, [r3, #0]
			q3 = 0.195;
 8008158:	4b2f      	ldr	r3, [pc, #188]	; (8008218 <init_quaternion+0x210>)
 800815a:	4a2a      	ldr	r2, [pc, #168]	; (8008204 <init_quaternion+0x1fc>)
 800815c:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 800815e:	e046      	b.n	80081ee <init_quaternion+0x1e6>
		} else {
			q0 = -0.9828;
 8008160:	4b27      	ldr	r3, [pc, #156]	; (8008200 <init_quaternion+0x1f8>)
 8008162:	4a3c      	ldr	r2, [pc, #240]	; (8008254 <init_quaternion+0x24c>)
 8008164:	601a      	str	r2, [r3, #0]
			q1 = 0.002;
 8008166:	4b28      	ldr	r3, [pc, #160]	; (8008208 <init_quaternion+0x200>)
 8008168:	4a3b      	ldr	r2, [pc, #236]	; (8008258 <init_quaternion+0x250>)
 800816a:	601a      	str	r2, [r3, #0]
			q2 = -0.0167;
 800816c:	4b28      	ldr	r3, [pc, #160]	; (8008210 <init_quaternion+0x208>)
 800816e:	4a3b      	ldr	r2, [pc, #236]	; (800825c <init_quaternion+0x254>)
 8008170:	601a      	str	r2, [r3, #0]
			q3 = 0.5557;
 8008172:	4b29      	ldr	r3, [pc, #164]	; (8008218 <init_quaternion+0x210>)
 8008174:	4a3a      	ldr	r2, [pc, #232]	; (8008260 <init_quaternion+0x258>)
 8008176:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 8008178:	e039      	b.n	80081ee <init_quaternion+0x1e6>
		}

	} else if (hx > 0 && hy < 0) {
 800817a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800817e:	2b00      	cmp	r3, #0
 8008180:	dd35      	ble.n	80081ee <init_quaternion+0x1e6>
 8008182:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008186:	2b00      	cmp	r3, #0
 8008188:	da31      	bge.n	80081ee <init_quaternion+0x1e6>
		if (fabs(hx / hy) >= 1) {
 800818a:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800818e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008192:	fb92 f3f3 	sdiv	r3, r2, r3
 8008196:	4618      	mov	r0, r3
 8008198:	f7f8 f9c4 	bl	8000524 <__aeabi_i2d>
 800819c:	4602      	mov	r2, r0
 800819e:	460b      	mov	r3, r1
 80081a0:	4614      	mov	r4, r2
 80081a2:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 80081a6:	f04f 0200 	mov.w	r2, #0
 80081aa:	4b14      	ldr	r3, [pc, #80]	; (80081fc <init_quaternion+0x1f4>)
 80081ac:	4620      	mov	r0, r4
 80081ae:	4629      	mov	r1, r5
 80081b0:	f7f8 fca8 	bl	8000b04 <__aeabi_dcmpge>
 80081b4:	4603      	mov	r3, r0
 80081b6:	2b00      	cmp	r3, #0
 80081b8:	d00c      	beq.n	80081d4 <init_quaternion+0x1cc>
			q0 = -0.979;
 80081ba:	4b11      	ldr	r3, [pc, #68]	; (8008200 <init_quaternion+0x1f8>)
 80081bc:	4a29      	ldr	r2, [pc, #164]	; (8008264 <init_quaternion+0x25c>)
 80081be:	601a      	str	r2, [r3, #0]
			q1 = 0.0116;
 80081c0:	4b11      	ldr	r3, [pc, #68]	; (8008208 <init_quaternion+0x200>)
 80081c2:	4a29      	ldr	r2, [pc, #164]	; (8008268 <init_quaternion+0x260>)
 80081c4:	601a      	str	r2, [r3, #0]
			q2 = -0.0167;
 80081c6:	4b12      	ldr	r3, [pc, #72]	; (8008210 <init_quaternion+0x208>)
 80081c8:	4a24      	ldr	r2, [pc, #144]	; (800825c <init_quaternion+0x254>)
 80081ca:	601a      	str	r2, [r3, #0]
			q3 = -0.195;
 80081cc:	4b12      	ldr	r3, [pc, #72]	; (8008218 <init_quaternion+0x210>)
 80081ce:	4a27      	ldr	r2, [pc, #156]	; (800826c <init_quaternion+0x264>)
 80081d0:	601a      	str	r2, [r3, #0]
			q2 = -0.012;
			q3 = -0.556;
		}
	}
#endif
}
 80081d2:	e00c      	b.n	80081ee <init_quaternion+0x1e6>
			q0 = -0.83;
 80081d4:	4b0a      	ldr	r3, [pc, #40]	; (8008200 <init_quaternion+0x1f8>)
 80081d6:	4a26      	ldr	r2, [pc, #152]	; (8008270 <init_quaternion+0x268>)
 80081d8:	601a      	str	r2, [r3, #0]
			q1 = 0.014;
 80081da:	4b0b      	ldr	r3, [pc, #44]	; (8008208 <init_quaternion+0x200>)
 80081dc:	4a25      	ldr	r2, [pc, #148]	; (8008274 <init_quaternion+0x26c>)
 80081de:	601a      	str	r2, [r3, #0]
			q2 = -0.012;
 80081e0:	4b0b      	ldr	r3, [pc, #44]	; (8008210 <init_quaternion+0x208>)
 80081e2:	4a25      	ldr	r2, [pc, #148]	; (8008278 <init_quaternion+0x270>)
 80081e4:	601a      	str	r2, [r3, #0]
			q3 = -0.556;
 80081e6:	4b0c      	ldr	r3, [pc, #48]	; (8008218 <init_quaternion+0x210>)
 80081e8:	4a24      	ldr	r2, [pc, #144]	; (800827c <init_quaternion+0x274>)
 80081ea:	601a      	str	r2, [r3, #0]
}
 80081ec:	e7ff      	b.n	80081ee <init_quaternion+0x1e6>
 80081ee:	bf00      	nop
 80081f0:	3710      	adds	r7, #16
 80081f2:	46bd      	mov	sp, r7
 80081f4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80081f8:	200032c4 	.word	0x200032c4
 80081fc:	3ff00000 	.word	0x3ff00000
 8008200:	20000010 	.word	0x20000010
 8008204:	3e47ae14 	.word	0x3e47ae14
 8008208:	20003240 	.word	0x20003240
 800820c:	bc75c28f 	.word	0xbc75c28f
 8008210:	20003244 	.word	0x20003244
 8008214:	3b8ce704 	.word	0x3b8ce704
 8008218:	20003248 	.word	0x20003248
 800821c:	3f7a9fbe 	.word	0x3f7a9fbe
 8008220:	3f0e147b 	.word	0x3f0e147b
 8008224:	3bc49ba6 	.word	0x3bc49ba6
 8008228:	3f543958 	.word	0x3f543958
 800822c:	be45a1cb 	.word	0xbe45a1cb
 8008230:	bc1374bc 	.word	0xbc1374bc
 8008234:	bbc49ba6 	.word	0xbbc49ba6
 8008238:	bf0d4fdf 	.word	0xbf0d4fdf
 800823c:	bb9d4952 	.word	0xbb9d4952
 8008240:	bc3c6a7f 	.word	0xbc3c6a7f
 8008244:	3f54d014 	.word	0x3f54d014
 8008248:	bf7a7efa 	.word	0xbf7a7efa
 800824c:	3c03126f 	.word	0x3c03126f
 8008250:	bca3d70a 	.word	0xbca3d70a
 8008254:	bf7b98c8 	.word	0xbf7b98c8
 8008258:	3b03126f 	.word	0x3b03126f
 800825c:	bc88ce70 	.word	0xbc88ce70
 8008260:	3f0e425b 	.word	0x3f0e425b
 8008264:	bf7a9fbe 	.word	0xbf7a9fbe
 8008268:	3c3e0ded 	.word	0x3c3e0ded
 800826c:	be47ae14 	.word	0xbe47ae14
 8008270:	bf547ae1 	.word	0xbf547ae1
 8008274:	3c656042 	.word	0x3c656042
 8008278:	bc449ba6 	.word	0xbc449ba6
 800827c:	bf0e5604 	.word	0xbf0e5604

08008280 <imu_ahrs_update>:
	q1 = tempq1 * norm;
	q2 = tempq2 * norm;
	q3 = tempq3 * norm;
}

void imu_ahrs_update(void) {
 8008280:	b580      	push	{r7, lr}
 8008282:	b09e      	sub	sp, #120	; 0x78
 8008284:	af00      	add	r7, sp, #0
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez, halfT;
	float tempq0, tempq1, tempq2, tempq3;

	float q0q0 = q0 * q0;
 8008286:	4bd3      	ldr	r3, [pc, #844]	; (80085d4 <imu_ahrs_update+0x354>)
 8008288:	ed93 7a00 	vldr	s14, [r3]
 800828c:	4bd1      	ldr	r3, [pc, #836]	; (80085d4 <imu_ahrs_update+0x354>)
 800828e:	edd3 7a00 	vldr	s15, [r3]
 8008292:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008296:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
	float q0q1 = q0 * q1;
 800829a:	4bce      	ldr	r3, [pc, #824]	; (80085d4 <imu_ahrs_update+0x354>)
 800829c:	ed93 7a00 	vldr	s14, [r3]
 80082a0:	4bcd      	ldr	r3, [pc, #820]	; (80085d8 <imu_ahrs_update+0x358>)
 80082a2:	edd3 7a00 	vldr	s15, [r3]
 80082a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80082aa:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
	float q0q2 = q0 * q2;
 80082ae:	4bc9      	ldr	r3, [pc, #804]	; (80085d4 <imu_ahrs_update+0x354>)
 80082b0:	ed93 7a00 	vldr	s14, [r3]
 80082b4:	4bc9      	ldr	r3, [pc, #804]	; (80085dc <imu_ahrs_update+0x35c>)
 80082b6:	edd3 7a00 	vldr	s15, [r3]
 80082ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 80082be:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
	float q0q3 = q0 * q3;
 80082c2:	4bc4      	ldr	r3, [pc, #784]	; (80085d4 <imu_ahrs_update+0x354>)
 80082c4:	ed93 7a00 	vldr	s14, [r3]
 80082c8:	4bc5      	ldr	r3, [pc, #788]	; (80085e0 <imu_ahrs_update+0x360>)
 80082ca:	edd3 7a00 	vldr	s15, [r3]
 80082ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 80082d2:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
	float q1q1 = q1 * q1;
 80082d6:	4bc0      	ldr	r3, [pc, #768]	; (80085d8 <imu_ahrs_update+0x358>)
 80082d8:	ed93 7a00 	vldr	s14, [r3]
 80082dc:	4bbe      	ldr	r3, [pc, #760]	; (80085d8 <imu_ahrs_update+0x358>)
 80082de:	edd3 7a00 	vldr	s15, [r3]
 80082e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80082e6:	edc7 7a19 	vstr	s15, [r7, #100]	; 0x64
	float q1q2 = q1 * q2;
 80082ea:	4bbb      	ldr	r3, [pc, #748]	; (80085d8 <imu_ahrs_update+0x358>)
 80082ec:	ed93 7a00 	vldr	s14, [r3]
 80082f0:	4bba      	ldr	r3, [pc, #744]	; (80085dc <imu_ahrs_update+0x35c>)
 80082f2:	edd3 7a00 	vldr	s15, [r3]
 80082f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80082fa:	edc7 7a18 	vstr	s15, [r7, #96]	; 0x60
	float q1q3 = q1 * q3;
 80082fe:	4bb6      	ldr	r3, [pc, #728]	; (80085d8 <imu_ahrs_update+0x358>)
 8008300:	ed93 7a00 	vldr	s14, [r3]
 8008304:	4bb6      	ldr	r3, [pc, #728]	; (80085e0 <imu_ahrs_update+0x360>)
 8008306:	edd3 7a00 	vldr	s15, [r3]
 800830a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800830e:	edc7 7a17 	vstr	s15, [r7, #92]	; 0x5c
	float q2q2 = q2 * q2;
 8008312:	4bb2      	ldr	r3, [pc, #712]	; (80085dc <imu_ahrs_update+0x35c>)
 8008314:	ed93 7a00 	vldr	s14, [r3]
 8008318:	4bb0      	ldr	r3, [pc, #704]	; (80085dc <imu_ahrs_update+0x35c>)
 800831a:	edd3 7a00 	vldr	s15, [r3]
 800831e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008322:	edc7 7a16 	vstr	s15, [r7, #88]	; 0x58
	float q2q3 = q2 * q3;
 8008326:	4bad      	ldr	r3, [pc, #692]	; (80085dc <imu_ahrs_update+0x35c>)
 8008328:	ed93 7a00 	vldr	s14, [r3]
 800832c:	4bac      	ldr	r3, [pc, #688]	; (80085e0 <imu_ahrs_update+0x360>)
 800832e:	edd3 7a00 	vldr	s15, [r3]
 8008332:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008336:	edc7 7a15 	vstr	s15, [r7, #84]	; 0x54
	float q3q3 = q3 * q3;
 800833a:	4ba9      	ldr	r3, [pc, #676]	; (80085e0 <imu_ahrs_update+0x360>)
 800833c:	ed93 7a00 	vldr	s14, [r3]
 8008340:	4ba7      	ldr	r3, [pc, #668]	; (80085e0 <imu_ahrs_update+0x360>)
 8008342:	edd3 7a00 	vldr	s15, [r3]
 8008346:	ee67 7a27 	vmul.f32	s15, s14, s15
 800834a:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50

	gx = gyro_proc_data.gx;
 800834e:	4ba5      	ldr	r3, [pc, #660]	; (80085e4 <imu_ahrs_update+0x364>)
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	4aa5      	ldr	r2, [pc, #660]	; (80085e8 <imu_ahrs_update+0x368>)
 8008354:	6013      	str	r3, [r2, #0]
	gy = gyro_proc_data.gy;
 8008356:	4ba3      	ldr	r3, [pc, #652]	; (80085e4 <imu_ahrs_update+0x364>)
 8008358:	685b      	ldr	r3, [r3, #4]
 800835a:	4aa4      	ldr	r2, [pc, #656]	; (80085ec <imu_ahrs_update+0x36c>)
 800835c:	6013      	str	r3, [r2, #0]
	gz = gyro_proc_data.gz;
 800835e:	4ba1      	ldr	r3, [pc, #644]	; (80085e4 <imu_ahrs_update+0x364>)
 8008360:	689b      	ldr	r3, [r3, #8]
 8008362:	4aa3      	ldr	r2, [pc, #652]	; (80085f0 <imu_ahrs_update+0x370>)
 8008364:	6013      	str	r3, [r2, #0]
	ax = accel_proc_data.ax;
 8008366:	4ba3      	ldr	r3, [pc, #652]	; (80085f4 <imu_ahrs_update+0x374>)
 8008368:	681b      	ldr	r3, [r3, #0]
 800836a:	4aa3      	ldr	r2, [pc, #652]	; (80085f8 <imu_ahrs_update+0x378>)
 800836c:	6013      	str	r3, [r2, #0]
	ay = accel_proc_data.ay;
 800836e:	4ba1      	ldr	r3, [pc, #644]	; (80085f4 <imu_ahrs_update+0x374>)
 8008370:	685b      	ldr	r3, [r3, #4]
 8008372:	4aa2      	ldr	r2, [pc, #648]	; (80085fc <imu_ahrs_update+0x37c>)
 8008374:	6013      	str	r3, [r2, #0]
	az = accel_proc_data.az;
 8008376:	4b9f      	ldr	r3, [pc, #636]	; (80085f4 <imu_ahrs_update+0x374>)
 8008378:	689b      	ldr	r3, [r3, #8]
 800837a:	4aa1      	ldr	r2, [pc, #644]	; (8008600 <imu_ahrs_update+0x380>)
 800837c:	6013      	str	r3, [r2, #0]
	mx = mag_proc_data.mx;
 800837e:	4ba1      	ldr	r3, [pc, #644]	; (8008604 <imu_ahrs_update+0x384>)
 8008380:	f9b3 3000 	ldrsh.w	r3, [r3]
 8008384:	ee07 3a90 	vmov	s15, r3
 8008388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800838c:	4b9e      	ldr	r3, [pc, #632]	; (8008608 <imu_ahrs_update+0x388>)
 800838e:	edc3 7a00 	vstr	s15, [r3]
	my = mag_proc_data.my;
 8008392:	4b9c      	ldr	r3, [pc, #624]	; (8008604 <imu_ahrs_update+0x384>)
 8008394:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008398:	ee07 3a90 	vmov	s15, r3
 800839c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80083a0:	4b9a      	ldr	r3, [pc, #616]	; (800860c <imu_ahrs_update+0x38c>)
 80083a2:	edc3 7a00 	vstr	s15, [r3]
	mz = mag_proc_data.mz;
 80083a6:	4b97      	ldr	r3, [pc, #604]	; (8008604 <imu_ahrs_update+0x384>)
 80083a8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80083ac:	ee07 3a90 	vmov	s15, r3
 80083b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80083b4:	4b96      	ldr	r3, [pc, #600]	; (8008610 <imu_ahrs_update+0x390>)
 80083b6:	edc3 7a00 	vstr	s15, [r3]

	last_proc_times[0] = HAL_GetTick(); //ms
 80083ba:	f007 f8bf 	bl	800f53c <HAL_GetTick>
 80083be:	4603      	mov	r3, r0
 80083c0:	4a94      	ldr	r2, [pc, #592]	; (8008614 <imu_ahrs_update+0x394>)
 80083c2:	6013      	str	r3, [r2, #0]
	halfT = ((float) (last_proc_times[0] - last_proc_times[1]) / 2000.0f);
 80083c4:	4b93      	ldr	r3, [pc, #588]	; (8008614 <imu_ahrs_update+0x394>)
 80083c6:	681a      	ldr	r2, [r3, #0]
 80083c8:	4b92      	ldr	r3, [pc, #584]	; (8008614 <imu_ahrs_update+0x394>)
 80083ca:	685b      	ldr	r3, [r3, #4]
 80083cc:	1ad3      	subs	r3, r2, r3
 80083ce:	ee07 3a90 	vmov	s15, r3
 80083d2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80083d6:	eddf 6a90 	vldr	s13, [pc, #576]	; 8008618 <imu_ahrs_update+0x398>
 80083da:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80083de:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c
	last_proc_times[1] = last_proc_times[0];
 80083e2:	4b8c      	ldr	r3, [pc, #560]	; (8008614 <imu_ahrs_update+0x394>)
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	4a8b      	ldr	r2, [pc, #556]	; (8008614 <imu_ahrs_update+0x394>)
 80083e8:	6053      	str	r3, [r2, #4]

	/* Fast inverse square-root */
	norm = inv_sqrt(ax * ax + ay * ay + az * az);
 80083ea:	4b83      	ldr	r3, [pc, #524]	; (80085f8 <imu_ahrs_update+0x378>)
 80083ec:	ed93 7a00 	vldr	s14, [r3]
 80083f0:	4b81      	ldr	r3, [pc, #516]	; (80085f8 <imu_ahrs_update+0x378>)
 80083f2:	edd3 7a00 	vldr	s15, [r3]
 80083f6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80083fa:	4b80      	ldr	r3, [pc, #512]	; (80085fc <imu_ahrs_update+0x37c>)
 80083fc:	edd3 6a00 	vldr	s13, [r3]
 8008400:	4b7e      	ldr	r3, [pc, #504]	; (80085fc <imu_ahrs_update+0x37c>)
 8008402:	edd3 7a00 	vldr	s15, [r3]
 8008406:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800840a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800840e:	4b7c      	ldr	r3, [pc, #496]	; (8008600 <imu_ahrs_update+0x380>)
 8008410:	edd3 6a00 	vldr	s13, [r3]
 8008414:	4b7a      	ldr	r3, [pc, #488]	; (8008600 <imu_ahrs_update+0x380>)
 8008416:	edd3 7a00 	vldr	s15, [r3]
 800841a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800841e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008422:	eeb0 0a67 	vmov.f32	s0, s15
 8008426:	f7f9 f953 	bl	80016d0 <inv_sqrt>
 800842a:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48
	ax = ax * norm;
 800842e:	4b72      	ldr	r3, [pc, #456]	; (80085f8 <imu_ahrs_update+0x378>)
 8008430:	ed93 7a00 	vldr	s14, [r3]
 8008434:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008438:	ee67 7a27 	vmul.f32	s15, s14, s15
 800843c:	4b6e      	ldr	r3, [pc, #440]	; (80085f8 <imu_ahrs_update+0x378>)
 800843e:	edc3 7a00 	vstr	s15, [r3]
	ay = ay * norm;
 8008442:	4b6e      	ldr	r3, [pc, #440]	; (80085fc <imu_ahrs_update+0x37c>)
 8008444:	ed93 7a00 	vldr	s14, [r3]
 8008448:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 800844c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008450:	4b6a      	ldr	r3, [pc, #424]	; (80085fc <imu_ahrs_update+0x37c>)
 8008452:	edc3 7a00 	vstr	s15, [r3]
	az = az * norm;
 8008456:	4b6a      	ldr	r3, [pc, #424]	; (8008600 <imu_ahrs_update+0x380>)
 8008458:	ed93 7a00 	vldr	s14, [r3]
 800845c:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008460:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008464:	4b66      	ldr	r3, [pc, #408]	; (8008600 <imu_ahrs_update+0x380>)
 8008466:	edc3 7a00 	vstr	s15, [r3]
		norm = inv_sqrt(mx*mx + my*my + mz*mz);
		mx = mx * norm;
		my = my * norm;
		mz = mz * norm;
	#else
	mx = 0;
 800846a:	4b67      	ldr	r3, [pc, #412]	; (8008608 <imu_ahrs_update+0x388>)
 800846c:	f04f 0200 	mov.w	r2, #0
 8008470:	601a      	str	r2, [r3, #0]
	my = 0;
 8008472:	4b66      	ldr	r3, [pc, #408]	; (800860c <imu_ahrs_update+0x38c>)
 8008474:	f04f 0200 	mov.w	r2, #0
 8008478:	601a      	str	r2, [r3, #0]
	mz = 0;
 800847a:	4b65      	ldr	r3, [pc, #404]	; (8008610 <imu_ahrs_update+0x390>)
 800847c:	f04f 0200 	mov.w	r2, #0
 8008480:	601a      	str	r2, [r3, #0]
#endif
	/* compute reference direction of flux */
	hx = 2.0f * mx * (0.5f - q2q2 - q3q3) + 2.0f * my * (q1q2 - q0q3) + 2.0f * mz * (q1q3 + q0q2);
 8008482:	4b61      	ldr	r3, [pc, #388]	; (8008608 <imu_ahrs_update+0x388>)
 8008484:	edd3 7a00 	vldr	s15, [r3]
 8008488:	ee37 7aa7 	vadd.f32	s14, s15, s15
 800848c:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8008490:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008494:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8008498:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 800849c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80084a0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80084a4:	4b59      	ldr	r3, [pc, #356]	; (800860c <imu_ahrs_update+0x38c>)
 80084a6:	edd3 7a00 	vldr	s15, [r3]
 80084aa:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80084ae:	ed97 6a18 	vldr	s12, [r7, #96]	; 0x60
 80084b2:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 80084b6:	ee76 7a67 	vsub.f32	s15, s12, s15
 80084ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80084be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80084c2:	4b53      	ldr	r3, [pc, #332]	; (8008610 <imu_ahrs_update+0x390>)
 80084c4:	edd3 7a00 	vldr	s15, [r3]
 80084c8:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80084cc:	ed97 6a17 	vldr	s12, [r7, #92]	; 0x5c
 80084d0:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 80084d4:	ee76 7a27 	vadd.f32	s15, s12, s15
 80084d8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80084dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80084e0:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
	hy = 2.0f * mx * (q1q2 + q0q3) + 2.0f * my * (0.5f - q1q1 - q3q3) + 2.0f * mz * (q2q3 - q0q1);
 80084e4:	4b48      	ldr	r3, [pc, #288]	; (8008608 <imu_ahrs_update+0x388>)
 80084e6:	edd3 7a00 	vldr	s15, [r3]
 80084ea:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80084ee:	edd7 6a18 	vldr	s13, [r7, #96]	; 0x60
 80084f2:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 80084f6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80084fa:	ee27 7a27 	vmul.f32	s14, s14, s15
 80084fe:	4b43      	ldr	r3, [pc, #268]	; (800860c <imu_ahrs_update+0x38c>)
 8008500:	edd3 7a00 	vldr	s15, [r3]
 8008504:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008508:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800850c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008510:	ee36 6a67 	vsub.f32	s12, s12, s15
 8008514:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8008518:	ee76 7a67 	vsub.f32	s15, s12, s15
 800851c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008520:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008524:	4b3a      	ldr	r3, [pc, #232]	; (8008610 <imu_ahrs_update+0x390>)
 8008526:	edd3 7a00 	vldr	s15, [r3]
 800852a:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800852e:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 8008532:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 8008536:	ee76 7a67 	vsub.f32	s15, s12, s15
 800853a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800853e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008542:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
	hz = 2.0f * mx * (q1q3 - q0q2) + 2.0f * my * (q2q3 + q0q1) + 2.0f * mz * (0.5f - q1q1 - q2q2);
 8008546:	4b30      	ldr	r3, [pc, #192]	; (8008608 <imu_ahrs_update+0x388>)
 8008548:	edd3 7a00 	vldr	s15, [r3]
 800854c:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008550:	edd7 6a17 	vldr	s13, [r7, #92]	; 0x5c
 8008554:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8008558:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800855c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008560:	4b2a      	ldr	r3, [pc, #168]	; (800860c <imu_ahrs_update+0x38c>)
 8008562:	edd3 7a00 	vldr	s15, [r3]
 8008566:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800856a:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 800856e:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 8008572:	ee76 7a27 	vadd.f32	s15, s12, s15
 8008576:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800857a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800857e:	4b24      	ldr	r3, [pc, #144]	; (8008610 <imu_ahrs_update+0x390>)
 8008580:	edd3 7a00 	vldr	s15, [r3]
 8008584:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008588:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800858c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008590:	ee36 6a67 	vsub.f32	s12, s12, s15
 8008594:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008598:	ee76 7a67 	vsub.f32	s15, s12, s15
 800859c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80085a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80085a4:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c
	bx = sqrt((hx * hx) + (hy * hy));
 80085a8:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 80085ac:	ee27 7aa7 	vmul.f32	s14, s15, s15
 80085b0:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 80085b4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80085b8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80085bc:	ee17 0a90 	vmov	r0, s15
 80085c0:	f7f7 ffc2 	bl	8000548 <__aeabi_f2d>
 80085c4:	4602      	mov	r2, r0
 80085c6:	460b      	mov	r3, r1
 80085c8:	ec43 2b10 	vmov	d0, r2, r3
 80085cc:	f01b ff66 	bl	802449c <sqrt>
 80085d0:	e024      	b.n	800861c <imu_ahrs_update+0x39c>
 80085d2:	bf00      	nop
 80085d4:	20000010 	.word	0x20000010
 80085d8:	20003240 	.word	0x20003240
 80085dc:	20003244 	.word	0x20003244
 80085e0:	20003248 	.word	0x20003248
 80085e4:	200032b4 	.word	0x200032b4
 80085e8:	20003258 	.word	0x20003258
 80085ec:	2000325c 	.word	0x2000325c
 80085f0:	20003260 	.word	0x20003260
 80085f4:	200032a4 	.word	0x200032a4
 80085f8:	20003264 	.word	0x20003264
 80085fc:	20003268 	.word	0x20003268
 8008600:	2000326c 	.word	0x2000326c
 8008604:	200032c4 	.word	0x200032c4
 8008608:	20003270 	.word	0x20003270
 800860c:	20003274 	.word	0x20003274
 8008610:	20003278 	.word	0x20003278
 8008614:	200032d0 	.word	0x200032d0
 8008618:	44fa0000 	.word	0x44fa0000
 800861c:	ec53 2b10 	vmov	r2, r3, d0
 8008620:	4610      	mov	r0, r2
 8008622:	4619      	mov	r1, r3
 8008624:	f7f8 fae0 	bl	8000be8 <__aeabi_d2f>
 8008628:	4603      	mov	r3, r0
 800862a:	63bb      	str	r3, [r7, #56]	; 0x38
	bz = hz;
 800862c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800862e:	637b      	str	r3, [r7, #52]	; 0x34

	/* estimated direction of gravity and flux (v and w) */
	vx = 2.0f * (q1q3 - q0q2);
 8008630:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8008634:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8008638:	ee77 7a67 	vsub.f32	s15, s14, s15
 800863c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8008640:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
	vy = 2.0f * (q0q1 + q2q3);
 8008644:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8008648:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 800864c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008650:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8008654:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
	vz = q0q0 - q1q1 - q2q2 + q3q3;
 8008658:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 800865c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008660:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008664:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008668:	ee77 7a67 	vsub.f32	s15, s14, s15
 800866c:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8008670:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008674:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	wx = 2.0f * bx * (0.5f - q2q2 - q3q3) + 2.0f * bz * (q1q3 - q0q2);
 8008678:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 800867c:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008680:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8008684:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008688:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800868c:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8008690:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008694:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008698:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800869c:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80086a0:	ed97 6a17 	vldr	s12, [r7, #92]	; 0x5c
 80086a4:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 80086a8:	ee76 7a67 	vsub.f32	s15, s12, s15
 80086ac:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80086b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80086b4:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
	wy = 2.0f * bx * (q1q2 - q0q3) + 2.0f * bz * (q0q1 + q2q3);
 80086b8:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 80086bc:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80086c0:	edd7 6a18 	vldr	s13, [r7, #96]	; 0x60
 80086c4:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 80086c8:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80086cc:	ee27 7a27 	vmul.f32	s14, s14, s15
 80086d0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80086d4:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80086d8:	ed97 6a1c 	vldr	s12, [r7, #112]	; 0x70
 80086dc:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 80086e0:	ee76 7a27 	vadd.f32	s15, s12, s15
 80086e4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80086e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80086ec:	edc7 7a08 	vstr	s15, [r7, #32]
	wz = 2.0f * bx * (q0q2 + q1q3) + 2.0f * bz * (0.5f - q1q1 - q2q2);
 80086f0:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 80086f4:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80086f8:	edd7 6a1b 	vldr	s13, [r7, #108]	; 0x6c
 80086fc:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 8008700:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008704:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008708:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800870c:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008710:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8008714:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008718:	ee36 6a67 	vsub.f32	s12, s12, s15
 800871c:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008720:	ee76 7a67 	vsub.f32	s15, s12, s15
 8008724:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008728:	ee77 7a27 	vadd.f32	s15, s14, s15
 800872c:	edc7 7a07 	vstr	s15, [r7, #28]

	/*
	 * error is sum of cross product between reference direction
	 * of fields and direction measured by sensors
	 */
	ex = (ay * vz - az * vy) + (my * wz - mz * wy);
 8008730:	4bde      	ldr	r3, [pc, #888]	; (8008aac <imu_ahrs_update+0x82c>)
 8008732:	ed93 7a00 	vldr	s14, [r3]
 8008736:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 800873a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800873e:	4bdc      	ldr	r3, [pc, #880]	; (8008ab0 <imu_ahrs_update+0x830>)
 8008740:	edd3 6a00 	vldr	s13, [r3]
 8008744:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8008748:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800874c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008750:	4bd8      	ldr	r3, [pc, #864]	; (8008ab4 <imu_ahrs_update+0x834>)
 8008752:	edd3 6a00 	vldr	s13, [r3]
 8008756:	edd7 7a07 	vldr	s15, [r7, #28]
 800875a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800875e:	4bd6      	ldr	r3, [pc, #856]	; (8008ab8 <imu_ahrs_update+0x838>)
 8008760:	ed93 6a00 	vldr	s12, [r3]
 8008764:	edd7 7a08 	vldr	s15, [r7, #32]
 8008768:	ee66 7a27 	vmul.f32	s15, s12, s15
 800876c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008770:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008774:	edc7 7a06 	vstr	s15, [r7, #24]
	ey = (az * vx - ax * vz) + (mz * wx - mx * wz);
 8008778:	4bcd      	ldr	r3, [pc, #820]	; (8008ab0 <imu_ahrs_update+0x830>)
 800877a:	ed93 7a00 	vldr	s14, [r3]
 800877e:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8008782:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008786:	4bcd      	ldr	r3, [pc, #820]	; (8008abc <imu_ahrs_update+0x83c>)
 8008788:	edd3 6a00 	vldr	s13, [r3]
 800878c:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8008790:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008794:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008798:	4bc7      	ldr	r3, [pc, #796]	; (8008ab8 <imu_ahrs_update+0x838>)
 800879a:	edd3 6a00 	vldr	s13, [r3]
 800879e:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80087a2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80087a6:	4bc6      	ldr	r3, [pc, #792]	; (8008ac0 <imu_ahrs_update+0x840>)
 80087a8:	ed93 6a00 	vldr	s12, [r3]
 80087ac:	edd7 7a07 	vldr	s15, [r7, #28]
 80087b0:	ee66 7a27 	vmul.f32	s15, s12, s15
 80087b4:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80087b8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80087bc:	edc7 7a05 	vstr	s15, [r7, #20]
	ez = (ax * vy - ay * vx) + (mx * wy - my * wx);
 80087c0:	4bbe      	ldr	r3, [pc, #760]	; (8008abc <imu_ahrs_update+0x83c>)
 80087c2:	ed93 7a00 	vldr	s14, [r3]
 80087c6:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80087ca:	ee27 7a27 	vmul.f32	s14, s14, s15
 80087ce:	4bb7      	ldr	r3, [pc, #732]	; (8008aac <imu_ahrs_update+0x82c>)
 80087d0:	edd3 6a00 	vldr	s13, [r3]
 80087d4:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 80087d8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80087dc:	ee37 7a67 	vsub.f32	s14, s14, s15
 80087e0:	4bb7      	ldr	r3, [pc, #732]	; (8008ac0 <imu_ahrs_update+0x840>)
 80087e2:	edd3 6a00 	vldr	s13, [r3]
 80087e6:	edd7 7a08 	vldr	s15, [r7, #32]
 80087ea:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80087ee:	4bb1      	ldr	r3, [pc, #708]	; (8008ab4 <imu_ahrs_update+0x834>)
 80087f0:	ed93 6a00 	vldr	s12, [r3]
 80087f4:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80087f8:	ee66 7a27 	vmul.f32	s15, s12, s15
 80087fc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008800:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008804:	edc7 7a04 	vstr	s15, [r7, #16]

	/* PI */
	if (ex != 0.0f && ey != 0.0f && ez != 0.0f) {
 8008808:	edd7 7a06 	vldr	s15, [r7, #24]
 800880c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8008810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008814:	d07c      	beq.n	8008910 <imu_ahrs_update+0x690>
 8008816:	edd7 7a05 	vldr	s15, [r7, #20]
 800881a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800881e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008822:	d075      	beq.n	8008910 <imu_ahrs_update+0x690>
 8008824:	edd7 7a04 	vldr	s15, [r7, #16]
 8008828:	eef5 7a40 	vcmp.f32	s15, #0.0
 800882c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008830:	d06e      	beq.n	8008910 <imu_ahrs_update+0x690>
		exInt = exInt + ex * AHRSKi * halfT;
 8008832:	edd7 7a06 	vldr	s15, [r7, #24]
 8008836:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8008ac4 <imu_ahrs_update+0x844>
 800883a:	ee27 7a87 	vmul.f32	s14, s15, s14
 800883e:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008842:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008846:	4ba0      	ldr	r3, [pc, #640]	; (8008ac8 <imu_ahrs_update+0x848>)
 8008848:	edd3 7a00 	vldr	s15, [r3]
 800884c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008850:	4b9d      	ldr	r3, [pc, #628]	; (8008ac8 <imu_ahrs_update+0x848>)
 8008852:	edc3 7a00 	vstr	s15, [r3]
		eyInt = eyInt + ey * AHRSKi * halfT;
 8008856:	edd7 7a05 	vldr	s15, [r7, #20]
 800885a:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8008ac4 <imu_ahrs_update+0x844>
 800885e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008862:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008866:	ee27 7a27 	vmul.f32	s14, s14, s15
 800886a:	4b98      	ldr	r3, [pc, #608]	; (8008acc <imu_ahrs_update+0x84c>)
 800886c:	edd3 7a00 	vldr	s15, [r3]
 8008870:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008874:	4b95      	ldr	r3, [pc, #596]	; (8008acc <imu_ahrs_update+0x84c>)
 8008876:	edc3 7a00 	vstr	s15, [r3]
		ezInt = ezInt + ez * AHRSKi * halfT;
 800887a:	edd7 7a04 	vldr	s15, [r7, #16]
 800887e:	ed9f 7a91 	vldr	s14, [pc, #580]	; 8008ac4 <imu_ahrs_update+0x844>
 8008882:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008886:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 800888a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800888e:	4b90      	ldr	r3, [pc, #576]	; (8008ad0 <imu_ahrs_update+0x850>)
 8008890:	edd3 7a00 	vldr	s15, [r3]
 8008894:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008898:	4b8d      	ldr	r3, [pc, #564]	; (8008ad0 <imu_ahrs_update+0x850>)
 800889a:	edc3 7a00 	vstr	s15, [r3]

		gx = gx + AHRSKp * ex + exInt;
 800889e:	edd7 7a06 	vldr	s15, [r7, #24]
 80088a2:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8008ad4 <imu_ahrs_update+0x854>
 80088a6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80088aa:	4b8b      	ldr	r3, [pc, #556]	; (8008ad8 <imu_ahrs_update+0x858>)
 80088ac:	edd3 7a00 	vldr	s15, [r3]
 80088b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80088b4:	4b84      	ldr	r3, [pc, #528]	; (8008ac8 <imu_ahrs_update+0x848>)
 80088b6:	edd3 7a00 	vldr	s15, [r3]
 80088ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80088be:	4b86      	ldr	r3, [pc, #536]	; (8008ad8 <imu_ahrs_update+0x858>)
 80088c0:	edc3 7a00 	vstr	s15, [r3]
		gy = gy + AHRSKp * ey + eyInt;
 80088c4:	edd7 7a05 	vldr	s15, [r7, #20]
 80088c8:	ed9f 7a82 	vldr	s14, [pc, #520]	; 8008ad4 <imu_ahrs_update+0x854>
 80088cc:	ee27 7a87 	vmul.f32	s14, s15, s14
 80088d0:	4b82      	ldr	r3, [pc, #520]	; (8008adc <imu_ahrs_update+0x85c>)
 80088d2:	edd3 7a00 	vldr	s15, [r3]
 80088d6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80088da:	4b7c      	ldr	r3, [pc, #496]	; (8008acc <imu_ahrs_update+0x84c>)
 80088dc:	edd3 7a00 	vldr	s15, [r3]
 80088e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80088e4:	4b7d      	ldr	r3, [pc, #500]	; (8008adc <imu_ahrs_update+0x85c>)
 80088e6:	edc3 7a00 	vstr	s15, [r3]
		gz = gz + AHRSKp * ez + ezInt;
 80088ea:	edd7 7a04 	vldr	s15, [r7, #16]
 80088ee:	ed9f 7a79 	vldr	s14, [pc, #484]	; 8008ad4 <imu_ahrs_update+0x854>
 80088f2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80088f6:	4b7a      	ldr	r3, [pc, #488]	; (8008ae0 <imu_ahrs_update+0x860>)
 80088f8:	edd3 7a00 	vldr	s15, [r3]
 80088fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008900:	4b73      	ldr	r3, [pc, #460]	; (8008ad0 <imu_ahrs_update+0x850>)
 8008902:	edd3 7a00 	vldr	s15, [r3]
 8008906:	ee77 7a27 	vadd.f32	s15, s14, s15
 800890a:	4b75      	ldr	r3, [pc, #468]	; (8008ae0 <imu_ahrs_update+0x860>)
 800890c:	edc3 7a00 	vstr	s15, [r3]
	}

	tempq0 = q0 + (-q1 * gx - q2 * gy - q3 * gz) * halfT;
 8008910:	4b74      	ldr	r3, [pc, #464]	; (8008ae4 <imu_ahrs_update+0x864>)
 8008912:	edd3 7a00 	vldr	s15, [r3]
 8008916:	eeb1 7a67 	vneg.f32	s14, s15
 800891a:	4b6f      	ldr	r3, [pc, #444]	; (8008ad8 <imu_ahrs_update+0x858>)
 800891c:	edd3 7a00 	vldr	s15, [r3]
 8008920:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008924:	4b70      	ldr	r3, [pc, #448]	; (8008ae8 <imu_ahrs_update+0x868>)
 8008926:	edd3 6a00 	vldr	s13, [r3]
 800892a:	4b6c      	ldr	r3, [pc, #432]	; (8008adc <imu_ahrs_update+0x85c>)
 800892c:	edd3 7a00 	vldr	s15, [r3]
 8008930:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008934:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008938:	4b6c      	ldr	r3, [pc, #432]	; (8008aec <imu_ahrs_update+0x86c>)
 800893a:	edd3 6a00 	vldr	s13, [r3]
 800893e:	4b68      	ldr	r3, [pc, #416]	; (8008ae0 <imu_ahrs_update+0x860>)
 8008940:	edd3 7a00 	vldr	s15, [r3]
 8008944:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008948:	ee37 7a67 	vsub.f32	s14, s14, s15
 800894c:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008950:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008954:	4b66      	ldr	r3, [pc, #408]	; (8008af0 <imu_ahrs_update+0x870>)
 8008956:	edd3 7a00 	vldr	s15, [r3]
 800895a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800895e:	edc7 7a03 	vstr	s15, [r7, #12]
	tempq1 = q1 + (q0 * gx + q2 * gz - q3 * gy) * halfT;
 8008962:	4b63      	ldr	r3, [pc, #396]	; (8008af0 <imu_ahrs_update+0x870>)
 8008964:	ed93 7a00 	vldr	s14, [r3]
 8008968:	4b5b      	ldr	r3, [pc, #364]	; (8008ad8 <imu_ahrs_update+0x858>)
 800896a:	edd3 7a00 	vldr	s15, [r3]
 800896e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008972:	4b5d      	ldr	r3, [pc, #372]	; (8008ae8 <imu_ahrs_update+0x868>)
 8008974:	edd3 6a00 	vldr	s13, [r3]
 8008978:	4b59      	ldr	r3, [pc, #356]	; (8008ae0 <imu_ahrs_update+0x860>)
 800897a:	edd3 7a00 	vldr	s15, [r3]
 800897e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008982:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008986:	4b59      	ldr	r3, [pc, #356]	; (8008aec <imu_ahrs_update+0x86c>)
 8008988:	edd3 6a00 	vldr	s13, [r3]
 800898c:	4b53      	ldr	r3, [pc, #332]	; (8008adc <imu_ahrs_update+0x85c>)
 800898e:	edd3 7a00 	vldr	s15, [r3]
 8008992:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008996:	ee37 7a67 	vsub.f32	s14, s14, s15
 800899a:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 800899e:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089a2:	4b50      	ldr	r3, [pc, #320]	; (8008ae4 <imu_ahrs_update+0x864>)
 80089a4:	edd3 7a00 	vldr	s15, [r3]
 80089a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80089ac:	edc7 7a02 	vstr	s15, [r7, #8]
	tempq2 = q2 + (q0 * gy - q1 * gz + q3 * gx) * halfT;
 80089b0:	4b4f      	ldr	r3, [pc, #316]	; (8008af0 <imu_ahrs_update+0x870>)
 80089b2:	ed93 7a00 	vldr	s14, [r3]
 80089b6:	4b49      	ldr	r3, [pc, #292]	; (8008adc <imu_ahrs_update+0x85c>)
 80089b8:	edd3 7a00 	vldr	s15, [r3]
 80089bc:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089c0:	4b48      	ldr	r3, [pc, #288]	; (8008ae4 <imu_ahrs_update+0x864>)
 80089c2:	edd3 6a00 	vldr	s13, [r3]
 80089c6:	4b46      	ldr	r3, [pc, #280]	; (8008ae0 <imu_ahrs_update+0x860>)
 80089c8:	edd3 7a00 	vldr	s15, [r3]
 80089cc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80089d0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80089d4:	4b45      	ldr	r3, [pc, #276]	; (8008aec <imu_ahrs_update+0x86c>)
 80089d6:	edd3 6a00 	vldr	s13, [r3]
 80089da:	4b3f      	ldr	r3, [pc, #252]	; (8008ad8 <imu_ahrs_update+0x858>)
 80089dc:	edd3 7a00 	vldr	s15, [r3]
 80089e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80089e4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80089e8:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 80089ec:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089f0:	4b3d      	ldr	r3, [pc, #244]	; (8008ae8 <imu_ahrs_update+0x868>)
 80089f2:	edd3 7a00 	vldr	s15, [r3]
 80089f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80089fa:	edc7 7a01 	vstr	s15, [r7, #4]
	tempq3 = q3 + (q0 * gz + q1 * gy - q2 * gx) * halfT;
 80089fe:	4b3c      	ldr	r3, [pc, #240]	; (8008af0 <imu_ahrs_update+0x870>)
 8008a00:	ed93 7a00 	vldr	s14, [r3]
 8008a04:	4b36      	ldr	r3, [pc, #216]	; (8008ae0 <imu_ahrs_update+0x860>)
 8008a06:	edd3 7a00 	vldr	s15, [r3]
 8008a0a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008a0e:	4b35      	ldr	r3, [pc, #212]	; (8008ae4 <imu_ahrs_update+0x864>)
 8008a10:	edd3 6a00 	vldr	s13, [r3]
 8008a14:	4b31      	ldr	r3, [pc, #196]	; (8008adc <imu_ahrs_update+0x85c>)
 8008a16:	edd3 7a00 	vldr	s15, [r3]
 8008a1a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008a1e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a22:	4b31      	ldr	r3, [pc, #196]	; (8008ae8 <imu_ahrs_update+0x868>)
 8008a24:	edd3 6a00 	vldr	s13, [r3]
 8008a28:	4b2b      	ldr	r3, [pc, #172]	; (8008ad8 <imu_ahrs_update+0x858>)
 8008a2a:	edd3 7a00 	vldr	s15, [r3]
 8008a2e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008a32:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008a36:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008a3a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008a3e:	4b2b      	ldr	r3, [pc, #172]	; (8008aec <imu_ahrs_update+0x86c>)
 8008a40:	edd3 7a00 	vldr	s15, [r3]
 8008a44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008a48:	edc7 7a00 	vstr	s15, [r7]

	/* normalise quaternion */
	norm = inv_sqrt(tempq0 * tempq0 + tempq1 * tempq1 + tempq2 * tempq2 + tempq3 * tempq3);
 8008a4c:	edd7 7a03 	vldr	s15, [r7, #12]
 8008a50:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8008a54:	edd7 7a02 	vldr	s15, [r7, #8]
 8008a58:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008a5c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a60:	edd7 7a01 	vldr	s15, [r7, #4]
 8008a64:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008a68:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a6c:	edd7 7a00 	vldr	s15, [r7]
 8008a70:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008a74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008a78:	eeb0 0a67 	vmov.f32	s0, s15
 8008a7c:	f7f8 fe28 	bl	80016d0 <inv_sqrt>
 8008a80:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48
	q0 = tempq0 * norm;
 8008a84:	ed97 7a03 	vldr	s14, [r7, #12]
 8008a88:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008a8c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008a90:	4b17      	ldr	r3, [pc, #92]	; (8008af0 <imu_ahrs_update+0x870>)
 8008a92:	edc3 7a00 	vstr	s15, [r3]
	q1 = tempq1 * norm;
 8008a96:	ed97 7a02 	vldr	s14, [r7, #8]
 8008a9a:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008a9e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008aa2:	4b10      	ldr	r3, [pc, #64]	; (8008ae4 <imu_ahrs_update+0x864>)
 8008aa4:	edc3 7a00 	vstr	s15, [r3]
 8008aa8:	e024      	b.n	8008af4 <imu_ahrs_update+0x874>
 8008aaa:	bf00      	nop
 8008aac:	20003268 	.word	0x20003268
 8008ab0:	2000326c 	.word	0x2000326c
 8008ab4:	20003274 	.word	0x20003274
 8008ab8:	20003278 	.word	0x20003278
 8008abc:	20003264 	.word	0x20003264
 8008ac0:	20003270 	.word	0x20003270
 8008ac4:	00000000 	.word	0x00000000
 8008ac8:	2000324c 	.word	0x2000324c
 8008acc:	20003250 	.word	0x20003250
 8008ad0:	20003254 	.word	0x20003254
 8008ad4:	3e19999a 	.word	0x3e19999a
 8008ad8:	20003258 	.word	0x20003258
 8008adc:	2000325c 	.word	0x2000325c
 8008ae0:	20003260 	.word	0x20003260
 8008ae4:	20003240 	.word	0x20003240
 8008ae8:	20003244 	.word	0x20003244
 8008aec:	20003248 	.word	0x20003248
 8008af0:	20000010 	.word	0x20000010
	q2 = tempq2 * norm;
 8008af4:	ed97 7a01 	vldr	s14, [r7, #4]
 8008af8:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008afc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008b00:	4b07      	ldr	r3, [pc, #28]	; (8008b20 <imu_ahrs_update+0x8a0>)
 8008b02:	edc3 7a00 	vstr	s15, [r3]
	q3 = tempq3 * norm;
 8008b06:	ed97 7a00 	vldr	s14, [r7]
 8008b0a:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008b0e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008b12:	4b04      	ldr	r3, [pc, #16]	; (8008b24 <imu_ahrs_update+0x8a4>)
 8008b14:	edc3 7a00 	vstr	s15, [r3]
}
 8008b18:	bf00      	nop
 8008b1a:	3778      	adds	r7, #120	; 0x78
 8008b1c:	46bd      	mov	sp, r7
 8008b1e:	bd80      	pop	{r7, pc}
 8008b20:	20003244 	.word	0x20003244
 8008b24:	20003248 	.word	0x20003248

08008b28 <imu_attitude_update>:

void imu_attitude_update(void) {
 8008b28:	b5b0      	push	{r4, r5, r7, lr}
 8008b2a:	af00      	add	r7, sp, #0
	if (IMU_ORIENTATION == 0) {
		/* yaw    -pi----pi */
		imu_heading.yaw = -atan2(2 * q1 * q2 + 2 * q0 * q3,
 8008b2c:	4b63      	ldr	r3, [pc, #396]	; (8008cbc <imu_attitude_update+0x194>)
 8008b2e:	edd3 7a00 	vldr	s15, [r3]
 8008b32:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008b36:	4b62      	ldr	r3, [pc, #392]	; (8008cc0 <imu_attitude_update+0x198>)
 8008b38:	edd3 7a00 	vldr	s15, [r3]
 8008b3c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b40:	4b60      	ldr	r3, [pc, #384]	; (8008cc4 <imu_attitude_update+0x19c>)
 8008b42:	edd3 7a00 	vldr	s15, [r3]
 8008b46:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008b4a:	4b5f      	ldr	r3, [pc, #380]	; (8008cc8 <imu_attitude_update+0x1a0>)
 8008b4c:	edd3 7a00 	vldr	s15, [r3]
 8008b50:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b54:	ee77 7a27 	vadd.f32	s15, s14, s15
				-2 * q2 * q2 - 2 * q3 * q3 + 1) * IMU_YAW_INVERT;
 8008b58:	ee17 0a90 	vmov	r0, s15
 8008b5c:	f7f7 fcf4 	bl	8000548 <__aeabi_f2d>
 8008b60:	4604      	mov	r4, r0
 8008b62:	460d      	mov	r5, r1
 8008b64:	4b56      	ldr	r3, [pc, #344]	; (8008cc0 <imu_attitude_update+0x198>)
 8008b66:	edd3 7a00 	vldr	s15, [r3]
 8008b6a:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008b6e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008b72:	4b53      	ldr	r3, [pc, #332]	; (8008cc0 <imu_attitude_update+0x198>)
 8008b74:	edd3 7a00 	vldr	s15, [r3]
 8008b78:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b7c:	4b52      	ldr	r3, [pc, #328]	; (8008cc8 <imu_attitude_update+0x1a0>)
 8008b7e:	edd3 7a00 	vldr	s15, [r3]
 8008b82:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008b86:	4b50      	ldr	r3, [pc, #320]	; (8008cc8 <imu_attitude_update+0x1a0>)
 8008b88:	edd3 7a00 	vldr	s15, [r3]
 8008b8c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b90:	ee77 7a67 	vsub.f32	s15, s14, s15
 8008b94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008b98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b9c:	ee17 0a90 	vmov	r0, s15
 8008ba0:	f7f7 fcd2 	bl	8000548 <__aeabi_f2d>
 8008ba4:	4602      	mov	r2, r0
 8008ba6:	460b      	mov	r3, r1
 8008ba8:	ec43 2b11 	vmov	d1, r2, r3
 8008bac:	ec45 4b10 	vmov	d0, r4, r5
 8008bb0:	f01b fc02 	bl	80243b8 <atan2>
 8008bb4:	ec53 2b10 	vmov	r2, r3, d0
 8008bb8:	4610      	mov	r0, r2
 8008bba:	4619      	mov	r1, r3
 8008bbc:	f7f8 f814 	bl	8000be8 <__aeabi_d2f>
 8008bc0:	4603      	mov	r3, r0
		imu_heading.yaw = -atan2(2 * q1 * q2 + 2 * q0 * q3,
 8008bc2:	4a42      	ldr	r2, [pc, #264]	; (8008ccc <imu_attitude_update+0x1a4>)
 8008bc4:	6093      	str	r3, [r2, #8]
		/* pitch  -pi/2----pi/2 */
		imu_heading.pit = -asin(-2 * q1 * q3 + 2 * q0 * q2) * IMU_PITCH_INVERT;
 8008bc6:	4b3d      	ldr	r3, [pc, #244]	; (8008cbc <imu_attitude_update+0x194>)
 8008bc8:	edd3 7a00 	vldr	s15, [r3]
 8008bcc:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008bd0:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008bd4:	4b3c      	ldr	r3, [pc, #240]	; (8008cc8 <imu_attitude_update+0x1a0>)
 8008bd6:	edd3 7a00 	vldr	s15, [r3]
 8008bda:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008bde:	4b39      	ldr	r3, [pc, #228]	; (8008cc4 <imu_attitude_update+0x19c>)
 8008be0:	edd3 7a00 	vldr	s15, [r3]
 8008be4:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008be8:	4b35      	ldr	r3, [pc, #212]	; (8008cc0 <imu_attitude_update+0x198>)
 8008bea:	edd3 7a00 	vldr	s15, [r3]
 8008bee:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008bf2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008bf6:	ee17 0a90 	vmov	r0, s15
 8008bfa:	f7f7 fca5 	bl	8000548 <__aeabi_f2d>
 8008bfe:	4602      	mov	r2, r0
 8008c00:	460b      	mov	r3, r1
 8008c02:	ec43 2b10 	vmov	d0, r2, r3
 8008c06:	f01b fba3 	bl	8024350 <asin>
 8008c0a:	ec53 2b10 	vmov	r2, r3, d0
 8008c0e:	4610      	mov	r0, r2
 8008c10:	4619      	mov	r1, r3
 8008c12:	f7f7 ffe9 	bl	8000be8 <__aeabi_d2f>
 8008c16:	4603      	mov	r3, r0
 8008c18:	4a2c      	ldr	r2, [pc, #176]	; (8008ccc <imu_attitude_update+0x1a4>)
 8008c1a:	6013      	str	r3, [r2, #0]
		/* roll   -pi----pi  */
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
 8008c1c:	4b28      	ldr	r3, [pc, #160]	; (8008cc0 <imu_attitude_update+0x198>)
 8008c1e:	edd3 7a00 	vldr	s15, [r3]
 8008c22:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008c26:	4b28      	ldr	r3, [pc, #160]	; (8008cc8 <imu_attitude_update+0x1a0>)
 8008c28:	edd3 7a00 	vldr	s15, [r3]
 8008c2c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008c30:	4b24      	ldr	r3, [pc, #144]	; (8008cc4 <imu_attitude_update+0x19c>)
 8008c32:	edd3 7a00 	vldr	s15, [r3]
 8008c36:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008c3a:	4b20      	ldr	r3, [pc, #128]	; (8008cbc <imu_attitude_update+0x194>)
 8008c3c:	edd3 7a00 	vldr	s15, [r3]
 8008c40:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008c44:	ee77 7a27 	vadd.f32	s15, s14, s15
				-2 * q1 * q1 - 2 * q2 * q2 + 1) * IMU_ROLL_INVERT;
 8008c48:	ee17 0a90 	vmov	r0, s15
 8008c4c:	f7f7 fc7c 	bl	8000548 <__aeabi_f2d>
 8008c50:	4604      	mov	r4, r0
 8008c52:	460d      	mov	r5, r1
 8008c54:	4b19      	ldr	r3, [pc, #100]	; (8008cbc <imu_attitude_update+0x194>)
 8008c56:	edd3 7a00 	vldr	s15, [r3]
 8008c5a:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008c5e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008c62:	4b16      	ldr	r3, [pc, #88]	; (8008cbc <imu_attitude_update+0x194>)
 8008c64:	edd3 7a00 	vldr	s15, [r3]
 8008c68:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008c6c:	4b14      	ldr	r3, [pc, #80]	; (8008cc0 <imu_attitude_update+0x198>)
 8008c6e:	edd3 7a00 	vldr	s15, [r3]
 8008c72:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008c76:	4b12      	ldr	r3, [pc, #72]	; (8008cc0 <imu_attitude_update+0x198>)
 8008c78:	edd3 7a00 	vldr	s15, [r3]
 8008c7c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008c80:	ee77 7a67 	vsub.f32	s15, s14, s15
 8008c84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008c88:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008c8c:	ee17 0a90 	vmov	r0, s15
 8008c90:	f7f7 fc5a 	bl	8000548 <__aeabi_f2d>
 8008c94:	4602      	mov	r2, r0
 8008c96:	460b      	mov	r3, r1
 8008c98:	ec43 2b11 	vmov	d1, r2, r3
 8008c9c:	ec45 4b10 	vmov	d0, r4, r5
 8008ca0:	f01b fb8a 	bl	80243b8 <atan2>
 8008ca4:	ec53 2b10 	vmov	r2, r3, d0
 8008ca8:	4610      	mov	r0, r2
 8008caa:	4619      	mov	r1, r3
 8008cac:	f7f7 ff9c 	bl	8000be8 <__aeabi_d2f>
 8008cb0:	4603      	mov	r3, r0
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
 8008cb2:	4a06      	ldr	r2, [pc, #24]	; (8008ccc <imu_attitude_update+0x1a4>)
 8008cb4:	6053      	str	r3, [r2, #4]
		imu_heading.pit = -asin(-2 * q1 * q3 + 2 * q0 * q2) * IMU_PITCH_INVERT;
		/* roll   -pi----pi  */
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
				-2 * q1 * q1 - 2 * q2 * q2 + 1) * IMU_ROLL_INVERT;
	}
}
 8008cb6:	bf00      	nop
 8008cb8:	bdb0      	pop	{r4, r5, r7, pc}
 8008cba:	bf00      	nop
 8008cbc:	20003240 	.word	0x20003240
 8008cc0:	20003244 	.word	0x20003244
 8008cc4:	20000010 	.word	0x20000010
 8008cc8:	20003248 	.word	0x20003248
 8008ccc:	2000327c 	.word	0x2000327c

08008cd0 <launcher_control_task>:
extern ref_magazine_data_t ref_mag_data;
extern uint32_t ref_mag_data_txno;
static uint32_t prev_power_data_no = 0;
static uint32_t prev_mag_data_no = 0;

void launcher_control_task(void *argument) {
 8008cd0:	b580      	push	{r7, lr}
 8008cd2:	b086      	sub	sp, #24
 8008cd4:	af02      	add	r7, sp, #8
 8008cd6:	6078      	str	r0, [r7, #4]
	TickType_t start_time;
	while (1) {
		//event flags!
		xEventGroupWaitBits(launcher_event_group, 0b111, pdTRUE, pdTRUE,
 8008cd8:	4b26      	ldr	r3, [pc, #152]	; (8008d74 <launcher_control_task+0xa4>)
 8008cda:	6818      	ldr	r0, [r3, #0]
 8008cdc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008ce0:	9300      	str	r3, [sp, #0]
 8008ce2:	2301      	movs	r3, #1
 8008ce4:	2201      	movs	r2, #1
 8008ce6:	2107      	movs	r1, #7
 8008ce8:	f012 fc60 	bl	801b5ac <xEventGroupWaitBits>
		portMAX_DELAY);
		status_led(4, on_led);
 8008cec:	2100      	movs	r1, #0
 8008cee:	2004      	movs	r0, #4
 8008cf0:	f7f9 f9e6 	bl	80020c0 <status_led>
		start_time = xTaskGetTickCount();
 8008cf4:	f014 f81c 	bl	801cd30 <xTaskGetTickCount>
 8008cf8:	4603      	mov	r3, r0
 8008cfa:	60fb      	str	r3, [r7, #12]

		if (launcher_ctrl_data.enabled) {
 8008cfc:	4b1e      	ldr	r3, [pc, #120]	; (8008d78 <launcher_control_task+0xa8>)
 8008cfe:	795b      	ldrb	r3, [r3, #5]
 8008d00:	2b00      	cmp	r3, #0
 8008d02:	d006      	beq.n	8008d12 <launcher_control_task+0x42>
			launcher_control(can_motors + LFRICTION_MOTOR_ID - 1,
 8008d04:	4b1d      	ldr	r3, [pc, #116]	; (8008d7c <launcher_control_task+0xac>)
 8008d06:	491e      	ldr	r1, [pc, #120]	; (8008d80 <launcher_control_task+0xb0>)
 8008d08:	4a1e      	ldr	r2, [pc, #120]	; (8008d84 <launcher_control_task+0xb4>)
 8008d0a:	4618      	mov	r0, r3
 8008d0c:	f000 f840 	bl	8008d90 <launcher_control>
 8008d10:	e01e      	b.n	8008d50 <launcher_control_task+0x80>
					can_motors + RFRICTION_MOTOR_ID - 1,
					can_motors + FEEDER_MOTOR_ID - 1);

		} else {
			can_motors[LFRICTION_MOTOR_ID - 1].rpm_pid.output = 0;
 8008d12:	4b1d      	ldr	r3, [pc, #116]	; (8008d88 <launcher_control_task+0xb8>)
 8008d14:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008d18:	f503 639f 	add.w	r3, r3, #1272	; 0x4f8
 8008d1c:	f04f 0200 	mov.w	r2, #0
 8008d20:	601a      	str	r2, [r3, #0]
			can_motors[RFRICTION_MOTOR_ID - 1].rpm_pid.output = 0;
 8008d22:	4b19      	ldr	r3, [pc, #100]	; (8008d88 <launcher_control_task+0xb8>)
 8008d24:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008d28:	461a      	mov	r2, r3
 8008d2a:	f04f 0300 	mov.w	r3, #0
 8008d2e:	f8c2 3138 	str.w	r3, [r2, #312]	; 0x138
			can_motors[FEEDER_MOTOR_ID - 1].rpm_pid.output = 0;
 8008d32:	4b15      	ldr	r3, [pc, #84]	; (8008d88 <launcher_control_task+0xb8>)
 8008d34:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008d38:	461a      	mov	r2, r3
 8008d3a:	f04f 0300 	mov.w	r3, #0
 8008d3e:	6493      	str	r3, [r2, #72]	; 0x48
			motor_send_can(can_motors, FEEDER_MOTOR_ID, LFRICTION_MOTOR_ID,
 8008d40:	2300      	movs	r3, #0
 8008d42:	9300      	str	r3, [sp, #0]
 8008d44:	2313      	movs	r3, #19
 8008d46:	2217      	movs	r2, #23
 8008d48:	2112      	movs	r1, #18
 8008d4a:	480f      	ldr	r0, [pc, #60]	; (8008d88 <launcher_control_task+0xb8>)
 8008d4c:	f003 ff58 	bl	800cc00 <motor_send_can>
			RFRICTION_MOTOR_ID, 0);
		}
		status_led(4, off_led);
 8008d50:	2101      	movs	r1, #1
 8008d52:	2004      	movs	r0, #4
 8008d54:	f7f9 f9b4 	bl	80020c0 <status_led>
		//vTaskDelay(CHASSIS_DELAY);
		xEventGroupClearBits(launcher_event_group, 0b111);
 8008d58:	4b06      	ldr	r3, [pc, #24]	; (8008d74 <launcher_control_task+0xa4>)
 8008d5a:	681b      	ldr	r3, [r3, #0]
 8008d5c:	2107      	movs	r1, #7
 8008d5e:	4618      	mov	r0, r3
 8008d60:	f012 fcf2 	bl	801b748 <xEventGroupClearBits>
		vTaskDelayUntil(&start_time, CHASSIS_DELAY);
 8008d64:	f107 030c 	add.w	r3, r7, #12
 8008d68:	210a      	movs	r1, #10
 8008d6a:	4618      	mov	r0, r3
 8008d6c:	f013 fe12 	bl	801c994 <vTaskDelayUntil>
		xEventGroupWaitBits(launcher_event_group, 0b111, pdTRUE, pdTRUE,
 8008d70:	e7b2      	b.n	8008cd8 <launcher_control_task+0x8>
 8008d72:	bf00      	nop
 8008d74:	200004d0 	.word	0x200004d0
 8008d78:	20002f40 	.word	0x20002f40
 8008d7c:	20002d48 	.word	0x20002d48
 8008d80:	20002988 	.word	0x20002988
 8008d84:	20002898 	.word	0x20002898
 8008d88:	200018a8 	.word	0x200018a8
 8008d8c:	00000000 	.word	0x00000000

08008d90 <launcher_control>:
	}

}

void launcher_control(motor_data_t *left_friction_motor,
		motor_data_t *right_friction_motor, motor_data_t *feeder) {
 8008d90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008d94:	b094      	sub	sp, #80	; 0x50
 8008d96:	af02      	add	r7, sp, #8
 8008d98:	6378      	str	r0, [r7, #52]	; 0x34
 8008d9a:	6339      	str	r1, [r7, #48]	; 0x30
 8008d9c:	62fa      	str	r2, [r7, #44]	; 0x2c

	int16_t feeder_output = 0;
 8008d9e:	2300      	movs	r3, #0
 8008da0:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
	static uint32_t overheat_time;
	static float target_ang;
	uint32_t curr_time = HAL_GetTick();
 8008da4:	f006 fbca 	bl	800f53c <HAL_GetTick>
 8008da8:	63f8      	str	r0, [r7, #60]	; 0x3c
	static uint32_t overheat_start;
	static uint32_t last_fire;
	static uint8_t fired;
	int16_t firing_speed = launcher_ctrl_data.gun_feeding_speed
 8008daa:	4bb5      	ldr	r3, [pc, #724]	; (8009080 <launcher_control+0x2f0>)
 8008dac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008db0:	461a      	mov	r2, r3
			* referee_limiters.feeding_speed / FEEDER_SPEED_RATIO;
 8008db2:	4bb4      	ldr	r3, [pc, #720]	; (8009084 <launcher_control+0x2f4>)
 8008db4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8008db8:	fb02 f303 	mul.w	r3, r2, r3
 8008dbc:	2b00      	cmp	r3, #0
 8008dbe:	da00      	bge.n	8008dc2 <launcher_control+0x32>
 8008dc0:	3307      	adds	r3, #7
 8008dc2:	10db      	asrs	r3, r3, #3
	int16_t firing_speed = launcher_ctrl_data.gun_feeding_speed
 8008dc4:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44

	if (launcher_ctrl_data.gun_feeding_speed == 0) {
 8008dc8:	4bad      	ldr	r3, [pc, #692]	; (8009080 <launcher_control+0x2f0>)
 8008dca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008dce:	2b00      	cmp	r3, #0
 8008dd0:	f040 80e7 	bne.w	8008fa2 <launcher_control+0x212>
		feeder_output = 0;
 8008dd4:	2300      	movs	r3, #0
 8008dd6:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46

		if (launcher_ctrl_data.override == 1) {
 8008dda:	4ba9      	ldr	r3, [pc, #676]	; (8009080 <launcher_control+0x2f0>)
 8008ddc:	791b      	ldrb	r3, [r3, #4]
 8008dde:	2b01      	cmp	r3, #1
 8008de0:	d13b      	bne.n	8008e5a <launcher_control+0xca>
			speed_pid(
					referee_limiters.projectile_speed * FRICTION_INVERT
 8008de2:	4ba8      	ldr	r3, [pc, #672]	; (8009084 <launcher_control+0x2f4>)
 8008de4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008de8:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008dea:	4ba7      	ldr	r3, [pc, #668]	; (8009088 <launcher_control+0x2f8>)
 8008dec:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008df0:	4618      	mov	r0, r3
 8008df2:	f7f7 fb97 	bl	8000524 <__aeabi_i2d>
 8008df6:	4604      	mov	r4, r0
 8008df8:	460d      	mov	r5, r1
					left_friction_motor->raw_data.rpm,
 8008dfa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008dfc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008e00:	4618      	mov	r0, r3
 8008e02:	f7f7 fb8f 	bl	8000524 <__aeabi_i2d>
 8008e06:	4680      	mov	r8, r0
 8008e08:	4689      	mov	r9, r1
 8008e0a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008e0c:	3338      	adds	r3, #56	; 0x38
 8008e0e:	4618      	mov	r0, r3
 8008e10:	ec49 8b11 	vmov	d1, r8, r9
 8008e14:	ec45 4b10 	vmov	d0, r4, r5
 8008e18:	f003 fe16 	bl	800ca48 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-referee_limiters.projectile_speed * FRICTION_INVERT
 8008e1c:	4b99      	ldr	r3, [pc, #612]	; (8009084 <launcher_control+0x2f4>)
 8008e1e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008e22:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008e24:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8008e28:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008e2c:	4618      	mov	r0, r3
 8008e2e:	f7f7 fb79 	bl	8000524 <__aeabi_i2d>
 8008e32:	4604      	mov	r4, r0
 8008e34:	460d      	mov	r5, r1
					right_friction_motor->raw_data.rpm,
 8008e36:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008e38:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008e3c:	4618      	mov	r0, r3
 8008e3e:	f7f7 fb71 	bl	8000524 <__aeabi_i2d>
 8008e42:	4680      	mov	r8, r0
 8008e44:	4689      	mov	r9, r1
 8008e46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008e48:	3338      	adds	r3, #56	; 0x38
 8008e4a:	4618      	mov	r0, r3
 8008e4c:	ec49 8b11 	vmov	d1, r8, r9
 8008e50:	ec45 4b10 	vmov	d0, r4, r5
 8008e54:	f003 fdf8 	bl	800ca48 <speed_pid>
 8008e58:	e09a      	b.n	8008f90 <launcher_control+0x200>
					&right_friction_motor->rpm_pid);

		} else if (clear_time + CLEAR_DELAY > HAL_GetTick()) {
 8008e5a:	4b8c      	ldr	r3, [pc, #560]	; (800908c <launcher_control+0x2fc>)
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	f503 747a 	add.w	r4, r3, #1000	; 0x3e8
 8008e62:	f006 fb6b 	bl	800f53c <HAL_GetTick>
 8008e66:	4603      	mov	r3, r0
 8008e68:	429c      	cmp	r4, r3
 8008e6a:	d95f      	bls.n	8008f2c <launcher_control+0x19c>
			speed_pid(
					referee_limiters.projectile_speed * FRICTION_INVERT
 8008e6c:	4b85      	ldr	r3, [pc, #532]	; (8009084 <launcher_control+0x2f4>)
 8008e6e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008e72:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008e74:	4b84      	ldr	r3, [pc, #528]	; (8009088 <launcher_control+0x2f8>)
 8008e76:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008e7a:	4618      	mov	r0, r3
 8008e7c:	f7f7 fb52 	bl	8000524 <__aeabi_i2d>
 8008e80:	4604      	mov	r4, r0
 8008e82:	460d      	mov	r5, r1
					left_friction_motor->raw_data.rpm,
 8008e84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008e86:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008e8a:	4618      	mov	r0, r3
 8008e8c:	f7f7 fb4a 	bl	8000524 <__aeabi_i2d>
 8008e90:	4680      	mov	r8, r0
 8008e92:	4689      	mov	r9, r1
 8008e94:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008e96:	3338      	adds	r3, #56	; 0x38
 8008e98:	4618      	mov	r0, r3
 8008e9a:	ec49 8b11 	vmov	d1, r8, r9
 8008e9e:	ec45 4b10 	vmov	d0, r4, r5
 8008ea2:	f003 fdd1 	bl	800ca48 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-referee_limiters.projectile_speed * FRICTION_INVERT
 8008ea6:	4b77      	ldr	r3, [pc, #476]	; (8009084 <launcher_control+0x2f4>)
 8008ea8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008eac:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008eae:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8008eb2:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008eb6:	4618      	mov	r0, r3
 8008eb8:	f7f7 fb34 	bl	8000524 <__aeabi_i2d>
 8008ebc:	4604      	mov	r4, r0
 8008ebe:	460d      	mov	r5, r1
					right_friction_motor->raw_data.rpm,
 8008ec0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ec2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008ec6:	4618      	mov	r0, r3
 8008ec8:	f7f7 fb2c 	bl	8000524 <__aeabi_i2d>
 8008ecc:	4680      	mov	r8, r0
 8008ece:	4689      	mov	r9, r1
 8008ed0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ed2:	3338      	adds	r3, #56	; 0x38
 8008ed4:	4618      	mov	r0, r3
 8008ed6:	ec49 8b11 	vmov	d1, r8, r9
 8008eda:	ec45 4b10 	vmov	d0, r4, r5
 8008ede:	f003 fdb3 	bl	800ca48 <speed_pid>
					&right_friction_motor->rpm_pid);
			if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 8008ee2:	4b6b      	ldr	r3, [pc, #428]	; (8009090 <launcher_control+0x300>)
 8008ee4:	781b      	ldrb	r3, [r3, #0]
 8008ee6:	2b01      	cmp	r3, #1
 8008ee8:	d11b      	bne.n	8008f22 <launcher_control+0x192>
				if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 8008eea:	4b6a      	ldr	r3, [pc, #424]	; (8009094 <launcher_control+0x304>)
 8008eec:	681b      	ldr	r3, [r3, #0]
 8008eee:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 8008ef2:	f006 fb23 	bl	800f53c <HAL_GetTick>
 8008ef6:	4603      	mov	r3, r0
 8008ef8:	429c      	cmp	r4, r3
 8008efa:	d305      	bcc.n	8008f08 <launcher_control+0x178>
						|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 8008efc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008efe:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8008f02:	4a65      	ldr	r2, [pc, #404]	; (8009098 <launcher_control+0x308>)
 8008f04:	4293      	cmp	r3, r2
 8008f06:	da07      	bge.n	8008f18 <launcher_control+0x188>
					unjamming = 0;
 8008f08:	4b61      	ldr	r3, [pc, #388]	; (8009090 <launcher_control+0x300>)
 8008f0a:	2200      	movs	r2, #0
 8008f0c:	701a      	strb	r2, [r3, #0]
#ifndef ANGLE_FEEDER
					feeder_output = firing_speed;
 8008f0e:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8008f12:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8008f16:	e03b      	b.n	8008f90 <launcher_control+0x200>
#endif
				} else {
					feeder_output = FEEDER_UNJAM_SPD;
 8008f18:	f64f 73c4 	movw	r3, #65476	; 0xffc4
 8008f1c:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8008f20:	e036      	b.n	8008f90 <launcher_control+0x200>
				}
			} else {
#ifndef ANGLE_FEEDER
				feeder_output = firing_speed;
 8008f22:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8008f26:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8008f2a:	e031      	b.n	8008f90 <launcher_control+0x200>
;
#endif
			}

		} else if (ref_game_state.game_progress == 4){
 8008f2c:	4b5b      	ldr	r3, [pc, #364]	; (800909c <launcher_control+0x30c>)
 8008f2e:	781b      	ldrb	r3, [r3, #0]
 8008f30:	f023 030f 	bic.w	r3, r3, #15
 8008f34:	b2db      	uxtb	r3, r3
 8008f36:	2b40      	cmp	r3, #64	; 0x40
 8008f38:	d122      	bne.n	8008f80 <launcher_control+0x1f0>

			speed_pid(FRICTION_SB_SPIN * FRICTION_INVERT,
					left_friction_motor->raw_data.rpm,
 8008f3a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f3c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(FRICTION_SB_SPIN * FRICTION_INVERT,
 8008f40:	4618      	mov	r0, r3
 8008f42:	f7f7 faef 	bl	8000524 <__aeabi_i2d>
 8008f46:	4604      	mov	r4, r0
 8008f48:	460d      	mov	r5, r1
 8008f4a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f4c:	3338      	adds	r3, #56	; 0x38
 8008f4e:	4618      	mov	r0, r3
 8008f50:	ec45 4b11 	vmov	d1, r4, r5
 8008f54:	ed9f 0b46 	vldr	d0, [pc, #280]	; 8009070 <launcher_control+0x2e0>
 8008f58:	f003 fd76 	bl	800ca48 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-FRICTION_SB_SPIN * FRICTION_INVERT,
					right_friction_motor->raw_data.rpm,
 8008f5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f5e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008f62:	4618      	mov	r0, r3
 8008f64:	f7f7 fade 	bl	8000524 <__aeabi_i2d>
 8008f68:	4604      	mov	r4, r0
 8008f6a:	460d      	mov	r5, r1
 8008f6c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f6e:	3338      	adds	r3, #56	; 0x38
 8008f70:	4618      	mov	r0, r3
 8008f72:	ec45 4b11 	vmov	d1, r4, r5
 8008f76:	ed9f 0b40 	vldr	d0, [pc, #256]	; 8009078 <launcher_control+0x2e8>
 8008f7a:	f003 fd65 	bl	800ca48 <speed_pid>
 8008f7e:	e007      	b.n	8008f90 <launcher_control+0x200>
					&right_friction_motor->rpm_pid);

		}else {
			left_friction_motor->rpm_pid.output = 0;
 8008f80:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f82:	f04f 0200 	mov.w	r2, #0
 8008f86:	659a      	str	r2, [r3, #88]	; 0x58
			right_friction_motor->rpm_pid.output = 0;
 8008f88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f8a:	f04f 0200 	mov.w	r2, #0
 8008f8e:	659a      	str	r2, [r3, #88]	; 0x58
		}
		overheat_time = curr_time + 1000;
 8008f90:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008f92:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8008f96:	4a42      	ldr	r2, [pc, #264]	; (80090a0 <launcher_control+0x310>)
 8008f98:	6013      	str	r3, [r2, #0]
		overheat = 0;
 8008f9a:	4b42      	ldr	r3, [pc, #264]	; (80090a4 <launcher_control+0x314>)
 8008f9c:	2200      	movs	r2, #0
 8008f9e:	701a      	strb	r2, [r3, #0]
 8008fa0:	e1fe      	b.n	80093a0 <launcher_control+0x610>
	} else {

#ifdef OVERHEAT_PROTECTION
		if (overheat == 1) {
 8008fa2:	4b40      	ldr	r3, [pc, #256]	; (80090a4 <launcher_control+0x314>)
 8008fa4:	781b      	ldrb	r3, [r3, #0]
 8008fa6:	2b01      	cmp	r3, #1
 8008fa8:	d108      	bne.n	8008fbc <launcher_control+0x22c>
			if (curr_time - overheat_start >= OVERHEAT_TIME) {
 8008faa:	4b3f      	ldr	r3, [pc, #252]	; (80090a8 <launcher_control+0x318>)
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8008fb0:	1ad3      	subs	r3, r2, r3
 8008fb2:	2b63      	cmp	r3, #99	; 0x63
 8008fb4:	d902      	bls.n	8008fbc <launcher_control+0x22c>
				overheat = 0;
 8008fb6:	4a3b      	ldr	r2, [pc, #236]	; (80090a4 <launcher_control+0x314>)
 8008fb8:	2300      	movs	r3, #0
 8008fba:	7013      	strb	r3, [r2, #0]
			}
		}
		if (prev_power_data_no != ref_power_data_txno) {
 8008fbc:	4b3b      	ldr	r3, [pc, #236]	; (80090ac <launcher_control+0x31c>)
 8008fbe:	681a      	ldr	r2, [r3, #0]
 8008fc0:	4b3b      	ldr	r3, [pc, #236]	; (80090b0 <launcher_control+0x320>)
 8008fc2:	681b      	ldr	r3, [r3, #0]
 8008fc4:	429a      	cmp	r2, r3
 8008fc6:	f000 80c9 	beq.w	800915c <launcher_control+0x3cc>
			prev_power_data_no = ref_power_data_txno;
 8008fca:	4b39      	ldr	r3, [pc, #228]	; (80090b0 <launcher_control+0x320>)
 8008fcc:	681b      	ldr	r3, [r3, #0]
 8008fce:	4a37      	ldr	r2, [pc, #220]	; (80090ac <launcher_control+0x31c>)
 8008fd0:	6013      	str	r3, [r2, #0]
//			int16_t cur_fire_rate = fabs(launcher_ctrl_data.gun_feeding_speed* referee_limiters.feeding_speed);
			int16_t ammo_remaining;

#ifdef BULLET_17
			uint8_t active_feeder = 2;
 8008fd2:	2302      	movs	r3, #2
 8008fd4:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
			if (ref_robot_data.shooter17_heat1_cooling_limit == 0
 8008fd8:	4b36      	ldr	r3, [pc, #216]	; (80090b4 <launcher_control+0x324>)
 8008fda:	89db      	ldrh	r3, [r3, #14]
 8008fdc:	b29b      	uxth	r3, r3
 8008fde:	2b00      	cmp	r3, #0
 8008fe0:	d108      	bne.n	8008ff4 <launcher_control+0x264>
					&& ref_robot_data.shooter17_heat0_cooling_limit == 0) {
 8008fe2:	4b34      	ldr	r3, [pc, #208]	; (80090b4 <launcher_control+0x324>)
 8008fe4:	891b      	ldrh	r3, [r3, #8]
 8008fe6:	b29b      	uxth	r3, r3
 8008fe8:	2b00      	cmp	r3, #0
 8008fea:	d103      	bne.n	8008ff4 <launcher_control+0x264>
				active_feeder = 3;
 8008fec:	2303      	movs	r3, #3
 8008fee:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8008ff2:	e010      	b.n	8009016 <launcher_control+0x286>
			} else if (ref_robot_data.shooter17_heat0_cooling_limit == 0) {
 8008ff4:	4b2f      	ldr	r3, [pc, #188]	; (80090b4 <launcher_control+0x324>)
 8008ff6:	891b      	ldrh	r3, [r3, #8]
 8008ff8:	b29b      	uxth	r3, r3
 8008ffa:	2b00      	cmp	r3, #0
 8008ffc:	d103      	bne.n	8009006 <launcher_control+0x276>
				active_feeder = 1;
 8008ffe:	2301      	movs	r3, #1
 8009000:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8009004:	e007      	b.n	8009016 <launcher_control+0x286>
			} else if (ref_robot_data.shooter17_heat1_cooling_limit == 0) {
 8009006:	4b2b      	ldr	r3, [pc, #172]	; (80090b4 <launcher_control+0x324>)
 8009008:	89db      	ldrh	r3, [r3, #14]
 800900a:	b29b      	uxth	r3, r3
 800900c:	2b00      	cmp	r3, #0
 800900e:	d102      	bne.n	8009016 <launcher_control+0x286>
				active_feeder = 0;
 8009010:	2300      	movs	r3, #0
 8009012:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
			}

			if (active_feeder == 2) {
 8009016:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800901a:	2b02      	cmp	r3, #2
 800901c:	d10e      	bne.n	800903c <launcher_control+0x2ac>
				if (ref_power_data.shooter_heat0
 800901e:	4b26      	ldr	r3, [pc, #152]	; (80090b8 <launcher_control+0x328>)
 8009020:	895b      	ldrh	r3, [r3, #10]
 8009022:	b29a      	uxth	r2, r3
						>= ref_power_data.shooter_heat1) {
 8009024:	4b24      	ldr	r3, [pc, #144]	; (80090b8 <launcher_control+0x328>)
 8009026:	899b      	ldrh	r3, [r3, #12]
 8009028:	b29b      	uxth	r3, r3
				if (ref_power_data.shooter_heat0
 800902a:	429a      	cmp	r2, r3
 800902c:	d303      	bcc.n	8009036 <launcher_control+0x2a6>
					active_feeder = 0;
 800902e:	2300      	movs	r3, #0
 8009030:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8009034:	e002      	b.n	800903c <launcher_control+0x2ac>
				} else {
					active_feeder = 1;
 8009036:	2301      	movs	r3, #1
 8009038:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
				}

			}

			if (active_feeder == 0) {
 800903c:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8009040:	2b00      	cmp	r3, #0
 8009042:	d13d      	bne.n	80090c0 <launcher_control+0x330>
				ammo_remaining =
						((((int16_t) ref_robot_data.shooter17_heat0_cooling_limit
 8009044:	4b1b      	ldr	r3, [pc, #108]	; (80090b4 <launcher_control+0x324>)
 8009046:	891b      	ldrh	r3, [r3, #8]
 8009048:	b29b      	uxth	r3, r3
 800904a:	b21b      	sxth	r3, r3
 800904c:	461a      	mov	r2, r3
								- (int16_t) ref_power_data.shooter_heat0))
 800904e:	4b1a      	ldr	r3, [pc, #104]	; (80090b8 <launcher_control+0x328>)
 8009050:	895b      	ldrh	r3, [r3, #10]
 8009052:	b29b      	uxth	r3, r3
 8009054:	b21b      	sxth	r3, r3
 8009056:	1ad1      	subs	r1, r2, r3
								/ BULLET_17_HEAT) - 2;
 8009058:	4b18      	ldr	r3, [pc, #96]	; (80090bc <launcher_control+0x32c>)
 800905a:	fb83 2301 	smull	r2, r3, r3, r1
 800905e:	109a      	asrs	r2, r3, #2
 8009060:	17cb      	asrs	r3, r1, #31
 8009062:	1ad3      	subs	r3, r2, r3
 8009064:	b29b      	uxth	r3, r3
 8009066:	3b02      	subs	r3, #2
 8009068:	b29b      	uxth	r3, r3
				ammo_remaining =
 800906a:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 800906e:	e040      	b.n	80090f2 <launcher_control+0x362>
 8009070:	00000000 	.word	0x00000000
 8009074:	c08f4000 	.word	0xc08f4000
 8009078:	00000000 	.word	0x00000000
 800907c:	408f4000 	.word	0x408f4000
 8009080:	20002f40 	.word	0x20002f40
 8009084:	200032f8 	.word	0x200032f8
 8009088:	fffffe98 	.word	0xfffffe98
 800908c:	200032e0 	.word	0x200032e0
 8009090:	200032e4 	.word	0x200032e4
 8009094:	200032dc 	.word	0x200032dc
 8009098:	ffffd9b8 	.word	0xffffd9b8
 800909c:	20003354 	.word	0x20003354
 80090a0:	200032ec 	.word	0x200032ec
 80090a4:	200032e5 	.word	0x200032e5
 80090a8:	200032f0 	.word	0x200032f0
 80090ac:	200032e8 	.word	0x200032e8
 80090b0:	200033ac 	.word	0x200033ac
 80090b4:	2000337c 	.word	0x2000337c
 80090b8:	2000339c 	.word	0x2000339c
 80090bc:	66666667 	.word	0x66666667
			} else if (active_feeder == 1) {
 80090c0:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 80090c4:	2b01      	cmp	r3, #1
 80090c6:	d114      	bne.n	80090f2 <launcher_control+0x362>
				ammo_remaining =
						((((int16_t) ref_robot_data.shooter17_heat1_cooling_limit
 80090c8:	4ba5      	ldr	r3, [pc, #660]	; (8009360 <launcher_control+0x5d0>)
 80090ca:	89db      	ldrh	r3, [r3, #14]
 80090cc:	b29b      	uxth	r3, r3
 80090ce:	b21b      	sxth	r3, r3
 80090d0:	461a      	mov	r2, r3
								- (int16_t) ref_power_data.shooter_heat1))
 80090d2:	4ba4      	ldr	r3, [pc, #656]	; (8009364 <launcher_control+0x5d4>)
 80090d4:	899b      	ldrh	r3, [r3, #12]
 80090d6:	b29b      	uxth	r3, r3
 80090d8:	b21b      	sxth	r3, r3
 80090da:	1ad1      	subs	r1, r2, r3
								/ BULLET_17_HEAT) - 2;
 80090dc:	4ba2      	ldr	r3, [pc, #648]	; (8009368 <launcher_control+0x5d8>)
 80090de:	fb83 2301 	smull	r2, r3, r3, r1
 80090e2:	109a      	asrs	r2, r3, #2
 80090e4:	17cb      	asrs	r3, r1, #31
 80090e6:	1ad3      	subs	r3, r2, r3
 80090e8:	b29b      	uxth	r3, r3
 80090ea:	3b02      	subs	r3, #2
 80090ec:	b29b      	uxth	r3, r3
				ammo_remaining =
 80090ee:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
			}
			if (active_feeder == 3) {
 80090f2:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 80090f6:	2b03      	cmp	r3, #3
 80090f8:	d103      	bne.n	8009102 <launcher_control+0x372>
				ammo_remaining = 1000;
 80090fa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80090fe:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
			}
#endif

#endif

			if (ammo_remaining < 3) {
 8009102:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 8009106:	2b02      	cmp	r3, #2
 8009108:	dc06      	bgt.n	8009118 <launcher_control+0x388>
				overheat = 1;
 800910a:	4a98      	ldr	r2, [pc, #608]	; (800936c <launcher_control+0x5dc>)
 800910c:	2301      	movs	r3, #1
 800910e:	7013      	strb	r3, [r2, #0]
				overheat_start = curr_time;
 8009110:	4a97      	ldr	r2, [pc, #604]	; (8009370 <launcher_control+0x5e0>)
 8009112:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009114:	6013      	str	r3, [r2, #0]
 8009116:	e011      	b.n	800913c <launcher_control+0x3ac>
			} else {
				if (ammo_remaining < 10){
 8009118:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 800911c:	2b09      	cmp	r3, #9
 800911e:	dc0d      	bgt.n	800913c <launcher_control+0x3ac>
					firing_speed = firing_speed * ammo_remaining/10;
 8009120:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 8009124:	f9b7 2042 	ldrsh.w	r2, [r7, #66]	; 0x42
 8009128:	fb02 f103 	mul.w	r1, r2, r3
 800912c:	4b8e      	ldr	r3, [pc, #568]	; (8009368 <launcher_control+0x5d8>)
 800912e:	fb83 2301 	smull	r2, r3, r3, r1
 8009132:	109a      	asrs	r2, r3, #2
 8009134:	17cb      	asrs	r3, r1, #31
 8009136:	1ad3      	subs	r3, r2, r3
 8009138:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
				}
			}
			overheat_time = curr_time
					+ (ammo_remaining * 60 * 1000) / (firing_speed) - 50;
 800913c:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 8009140:	f64e 2260 	movw	r2, #60000	; 0xea60
 8009144:	fb03 f202 	mul.w	r2, r3, r2
 8009148:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 800914c:	fb92 f3f3 	sdiv	r3, r2, r3
 8009150:	461a      	mov	r2, r3
 8009152:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009154:	4413      	add	r3, r2
 8009156:	3b32      	subs	r3, #50	; 0x32
			overheat_time = curr_time
 8009158:	4a86      	ldr	r2, [pc, #536]	; (8009374 <launcher_control+0x5e4>)
 800915a:	6013      	str	r3, [r2, #0]
		}
#endif

		//TODO: add in speed checks and shtuffasdwqwe
		clear_time = HAL_GetTick();
 800915c:	f006 f9ee 	bl	800f53c <HAL_GetTick>
 8009160:	4603      	mov	r3, r0
 8009162:	4a85      	ldr	r2, [pc, #532]	; (8009378 <launcher_control+0x5e8>)
 8009164:	6013      	str	r3, [r2, #0]
		speed_pid(
				referee_limiters.projectile_speed * FRICTION_INVERT
 8009166:	4b85      	ldr	r3, [pc, #532]	; (800937c <launcher_control+0x5ec>)
 8009168:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800916c:	461a      	mov	r2, r3
						* PROJECTILE_SPEED_RATIO,
 800916e:	4b84      	ldr	r3, [pc, #528]	; (8009380 <launcher_control+0x5f0>)
 8009170:	fb02 f303 	mul.w	r3, r2, r3
		speed_pid(
 8009174:	4618      	mov	r0, r3
 8009176:	f7f7 f9d5 	bl	8000524 <__aeabi_i2d>
 800917a:	4680      	mov	r8, r0
 800917c:	4689      	mov	r9, r1
				left_friction_motor->raw_data.rpm,
 800917e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009180:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(
 8009184:	4618      	mov	r0, r3
 8009186:	f7f7 f9cd 	bl	8000524 <__aeabi_i2d>
 800918a:	4604      	mov	r4, r0
 800918c:	460d      	mov	r5, r1
 800918e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009190:	3338      	adds	r3, #56	; 0x38
 8009192:	4618      	mov	r0, r3
 8009194:	ec45 4b11 	vmov	d1, r4, r5
 8009198:	ec49 8b10 	vmov	d0, r8, r9
 800919c:	f003 fc54 	bl	800ca48 <speed_pid>
				&left_friction_motor->rpm_pid);
		speed_pid(
				-referee_limiters.projectile_speed * FRICTION_INVERT
 80091a0:	4b76      	ldr	r3, [pc, #472]	; (800937c <launcher_control+0x5ec>)
 80091a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80091a6:	461a      	mov	r2, r3
						* PROJECTILE_SPEED_RATIO,
 80091a8:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80091ac:	fb02 f303 	mul.w	r3, r2, r3
		speed_pid(
 80091b0:	4618      	mov	r0, r3
 80091b2:	f7f7 f9b7 	bl	8000524 <__aeabi_i2d>
 80091b6:	4680      	mov	r8, r0
 80091b8:	4689      	mov	r9, r1
				right_friction_motor->raw_data.rpm,
 80091ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80091bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(
 80091c0:	4618      	mov	r0, r3
 80091c2:	f7f7 f9af 	bl	8000524 <__aeabi_i2d>
 80091c6:	4604      	mov	r4, r0
 80091c8:	460d      	mov	r5, r1
 80091ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80091cc:	3338      	adds	r3, #56	; 0x38
 80091ce:	4618      	mov	r0, r3
 80091d0:	ec45 4b11 	vmov	d1, r4, r5
 80091d4:	ec49 8b10 	vmov	d0, r8, r9
 80091d8:	f003 fc36 	bl	800ca48 <speed_pid>

		}
		last_fire = curr_time;
#endif

		if (((((fabs(left_friction_motor->raw_data.rpm)
 80091dc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80091de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80091e2:	4618      	mov	r0, r3
 80091e4:	f7f7 f99e 	bl	8000524 <__aeabi_i2d>
 80091e8:	4602      	mov	r2, r0
 80091ea:	460b      	mov	r3, r1
 80091ec:	4692      	mov	sl, r2
 80091ee:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
				- fabs(
						(launcher_ctrl_data.projectile_speed
 80091f2:	4b64      	ldr	r3, [pc, #400]	; (8009384 <launcher_control+0x5f4>)
 80091f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80091f8:	461a      	mov	r2, r3
								* PROJECTILE_SPEED_RATIO
								* referee_limiters.projectile_speed))
 80091fa:	4b60      	ldr	r3, [pc, #384]	; (800937c <launcher_control+0x5ec>)
 80091fc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8009200:	fb02 f303 	mul.w	r3, r2, r3
 8009204:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8009208:	fb02 f303 	mul.w	r3, r2, r3
				- fabs(
 800920c:	4618      	mov	r0, r3
 800920e:	f7f7 f989 	bl	8000524 <__aeabi_i2d>
 8009212:	4602      	mov	r2, r0
 8009214:	460b      	mov	r3, r1
 8009216:	623a      	str	r2, [r7, #32]
 8009218:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800921c:	627b      	str	r3, [r7, #36]	; 0x24
 800921e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8009222:	4650      	mov	r0, sl
 8009224:	4659      	mov	r1, fp
 8009226:	f7f7 f82f 	bl	8000288 <__aeabi_dsub>
 800922a:	4602      	mov	r2, r0
 800922c:	460b      	mov	r3, r1
 800922e:	4610      	mov	r0, r2
 8009230:	4619      	mov	r1, r3
		if (((((fabs(left_friction_motor->raw_data.rpm)
 8009232:	f04f 0200 	mov.w	r2, #0
 8009236:	4b54      	ldr	r3, [pc, #336]	; (8009388 <launcher_control+0x5f8>)
 8009238:	f7f7 fc50 	bl	8000adc <__aeabi_dcmplt>
 800923c:	4603      	mov	r3, r0
 800923e:	2b00      	cmp	r3, #0
 8009240:	f000 80ae 	beq.w	80093a0 <launcher_control+0x610>
				< LAUNCHER_MARGIN)))
				&& ((fabs(right_friction_motor->raw_data.rpm)
 8009244:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009246:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800924a:	4618      	mov	r0, r3
 800924c:	f7f7 f96a 	bl	8000524 <__aeabi_i2d>
 8009250:	4602      	mov	r2, r0
 8009252:	460b      	mov	r3, r1
 8009254:	61ba      	str	r2, [r7, #24]
 8009256:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800925a:	61fb      	str	r3, [r7, #28]
						- fabs(
								(launcher_ctrl_data.projectile_speed
 800925c:	4b49      	ldr	r3, [pc, #292]	; (8009384 <launcher_control+0x5f4>)
 800925e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009262:	461a      	mov	r2, r3
										* PROJECTILE_SPEED_RATIO
										* referee_limiters.projectile_speed))
 8009264:	4b45      	ldr	r3, [pc, #276]	; (800937c <launcher_control+0x5ec>)
 8009266:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800926a:	fb02 f303 	mul.w	r3, r2, r3
 800926e:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8009272:	fb02 f303 	mul.w	r3, r2, r3
						- fabs(
 8009276:	4618      	mov	r0, r3
 8009278:	f7f7 f954 	bl	8000524 <__aeabi_i2d>
 800927c:	4602      	mov	r2, r0
 800927e:	460b      	mov	r3, r1
 8009280:	613a      	str	r2, [r7, #16]
 8009282:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8009286:	617b      	str	r3, [r7, #20]
 8009288:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800928c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8009290:	f7f6 fffa 	bl	8000288 <__aeabi_dsub>
 8009294:	4602      	mov	r2, r0
 8009296:	460b      	mov	r3, r1
 8009298:	4610      	mov	r0, r2
 800929a:	4619      	mov	r1, r3
				&& ((fabs(right_friction_motor->raw_data.rpm)
 800929c:	f04f 0200 	mov.w	r2, #0
 80092a0:	4b39      	ldr	r3, [pc, #228]	; (8009388 <launcher_control+0x5f8>)
 80092a2:	f7f7 fc1b 	bl	8000adc <__aeabi_dcmplt>
 80092a6:	4603      	mov	r3, r0
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d079      	beq.n	80093a0 <launcher_control+0x610>
						< LAUNCHER_MARGIN)))
				&& ((fabs(right_friction_motor->raw_data.rpm)
 80092ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80092ae:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80092b2:	4618      	mov	r0, r3
 80092b4:	f7f7 f936 	bl	8000524 <__aeabi_i2d>
 80092b8:	4602      	mov	r2, r0
 80092ba:	460b      	mov	r3, r1
 80092bc:	60ba      	str	r2, [r7, #8]
 80092be:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80092c2:	60fb      	str	r3, [r7, #12]
						- fabs(left_friction_motor->raw_data.rpm))
 80092c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092c6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80092ca:	4618      	mov	r0, r3
 80092cc:	f7f7 f92a 	bl	8000524 <__aeabi_i2d>
 80092d0:	4602      	mov	r2, r0
 80092d2:	460b      	mov	r3, r1
 80092d4:	603a      	str	r2, [r7, #0]
 80092d6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80092da:	607b      	str	r3, [r7, #4]
 80092dc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80092e0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80092e4:	f7f6 ffd0 	bl	8000288 <__aeabi_dsub>
 80092e8:	4602      	mov	r2, r0
 80092ea:	460b      	mov	r3, r1
 80092ec:	4610      	mov	r0, r2
 80092ee:	4619      	mov	r1, r3
				&& ((fabs(right_friction_motor->raw_data.rpm)
 80092f0:	f04f 0200 	mov.w	r2, #0
 80092f4:	4b24      	ldr	r3, [pc, #144]	; (8009388 <launcher_control+0x5f8>)
 80092f6:	f7f7 fbf1 	bl	8000adc <__aeabi_dcmplt>
 80092fa:	4603      	mov	r3, r0
 80092fc:	2b00      	cmp	r3, #0
 80092fe:	d04f      	beq.n	80093a0 <launcher_control+0x610>
						< LAUNCHER_DIFF_MARGIN)) {

			if ((feeder->raw_data.torque > FEEDER_JAM_TORQUE)) {
 8009300:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009302:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8009306:	f242 6248 	movw	r2, #9800	; 0x2648
 800930a:	4293      	cmp	r3, r2
 800930c:	dd07      	ble.n	800931e <launcher_control+0x58e>
				unjamming = 1;
 800930e:	4b1f      	ldr	r3, [pc, #124]	; (800938c <launcher_control+0x5fc>)
 8009310:	2201      	movs	r2, #1
 8009312:	701a      	strb	r2, [r3, #0]
				start_time = HAL_GetTick();
 8009314:	f006 f912 	bl	800f53c <HAL_GetTick>
 8009318:	4603      	mov	r3, r0
 800931a:	4a1d      	ldr	r2, [pc, #116]	; (8009390 <launcher_control+0x600>)
 800931c:	6013      	str	r3, [r2, #0]
			}

			if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 800931e:	4b1b      	ldr	r3, [pc, #108]	; (800938c <launcher_control+0x5fc>)
 8009320:	781b      	ldrb	r3, [r3, #0]
 8009322:	2b01      	cmp	r3, #1
 8009324:	d138      	bne.n	8009398 <launcher_control+0x608>
				if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 8009326:	4b1a      	ldr	r3, [pc, #104]	; (8009390 <launcher_control+0x600>)
 8009328:	681b      	ldr	r3, [r3, #0]
 800932a:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 800932e:	f006 f905 	bl	800f53c <HAL_GetTick>
 8009332:	4603      	mov	r3, r0
 8009334:	429c      	cmp	r4, r3
 8009336:	d305      	bcc.n	8009344 <launcher_control+0x5b4>
						|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 8009338:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800933a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800933e:	4a15      	ldr	r2, [pc, #84]	; (8009394 <launcher_control+0x604>)
 8009340:	4293      	cmp	r3, r2
 8009342:	da07      	bge.n	8009354 <launcher_control+0x5c4>
					unjamming = 0;
 8009344:	4b11      	ldr	r3, [pc, #68]	; (800938c <launcher_control+0x5fc>)
 8009346:	2200      	movs	r2, #0
 8009348:	701a      	strb	r2, [r3, #0]
#ifndef ANGLE_FEEDER
					feeder_output = firing_speed;
 800934a:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 800934e:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8009352:	e025      	b.n	80093a0 <launcher_control+0x610>
#endif
				} else {
					feeder_output = FEEDER_UNJAM_SPD;
 8009354:	f64f 73c4 	movw	r3, #65476	; 0xffc4
 8009358:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 800935c:	e020      	b.n	80093a0 <launcher_control+0x610>
 800935e:	bf00      	nop
 8009360:	2000337c 	.word	0x2000337c
 8009364:	2000339c 	.word	0x2000339c
 8009368:	66666667 	.word	0x66666667
 800936c:	200032e5 	.word	0x200032e5
 8009370:	200032f0 	.word	0x200032f0
 8009374:	200032ec 	.word	0x200032ec
 8009378:	200032e0 	.word	0x200032e0
 800937c:	200032f8 	.word	0x200032f8
 8009380:	fffffe98 	.word	0xfffffe98
 8009384:	20002f40 	.word	0x20002f40
 8009388:	40590000 	.word	0x40590000
 800938c:	200032e4 	.word	0x200032e4
 8009390:	200032dc 	.word	0x200032dc
 8009394:	ffffd9b8 	.word	0xffffd9b8
				}
			} else {
#ifndef ANGLE_FEEDER
				feeder_output = firing_speed;
 8009398:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 800939c:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
			}

		}
	}

	if ((overheat == 1) && launcher_ctrl_data.override == 0) {
 80093a0:	4b35      	ldr	r3, [pc, #212]	; (8009478 <launcher_control+0x6e8>)
 80093a2:	781b      	ldrb	r3, [r3, #0]
 80093a4:	2b01      	cmp	r3, #1
 80093a6:	d106      	bne.n	80093b6 <launcher_control+0x626>
 80093a8:	4b34      	ldr	r3, [pc, #208]	; (800947c <launcher_control+0x6ec>)
 80093aa:	791b      	ldrb	r3, [r3, #4]
 80093ac:	2b00      	cmp	r3, #0
 80093ae:	d102      	bne.n	80093b6 <launcher_control+0x626>
		feeder_output = 0;
 80093b0:	2300      	movs	r3, #0
 80093b2:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
	}

	if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 80093b6:	4b32      	ldr	r3, [pc, #200]	; (8009480 <launcher_control+0x6f0>)
 80093b8:	781b      	ldrb	r3, [r3, #0]
 80093ba:	2b01      	cmp	r3, #1
 80093bc:	d111      	bne.n	80093e2 <launcher_control+0x652>
		if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 80093be:	4b31      	ldr	r3, [pc, #196]	; (8009484 <launcher_control+0x6f4>)
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 80093c6:	f006 f8b9 	bl	800f53c <HAL_GetTick>
 80093ca:	4603      	mov	r3, r0
 80093cc:	429c      	cmp	r4, r3
 80093ce:	d305      	bcc.n	80093dc <launcher_control+0x64c>
				|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 80093d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80093d2:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80093d6:	4a2c      	ldr	r2, [pc, #176]	; (8009488 <launcher_control+0x6f8>)
 80093d8:	4293      	cmp	r3, r2
 80093da:	da02      	bge.n	80093e2 <launcher_control+0x652>
			unjamming = 0;
 80093dc:	4b28      	ldr	r3, [pc, #160]	; (8009480 <launcher_control+0x6f0>)
 80093de:	2200      	movs	r2, #0
 80093e0:	701a      	strb	r2, [r3, #0]
				(feeder_output < -FEEDER_MAX_RPM) ?
						-FEEDER_MAX_RPM : feeder_output;
	}
#endif

	if (feeder_output == 0) {
 80093e2:	f9b7 3046 	ldrsh.w	r3, [r7, #70]	; 0x46
 80093e6:	2b00      	cmp	r3, #0
 80093e8:	d111      	bne.n	800940e <launcher_control+0x67e>
//		feeder->rpm_pid.output = 0;
		speed_pid(0, feeder->raw_data.rpm, &feeder->rpm_pid);
 80093ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80093ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80093f0:	4618      	mov	r0, r3
 80093f2:	f7f7 f897 	bl	8000524 <__aeabi_i2d>
 80093f6:	4604      	mov	r4, r0
 80093f8:	460d      	mov	r5, r1
 80093fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80093fc:	3338      	adds	r3, #56	; 0x38
 80093fe:	4618      	mov	r0, r3
 8009400:	ec45 4b11 	vmov	d1, r4, r5
 8009404:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 8009470 <launcher_control+0x6e0>
 8009408:	f003 fb1e 	bl	800ca48 <speed_pid>
 800940c:	e021      	b.n	8009452 <launcher_control+0x6c2>
	} else {
		speed_pid(feeder_output * feeder->angle_data.gearbox_ratio,
 800940e:	f9b7 3046 	ldrsh.w	r3, [r7, #70]	; 0x46
 8009412:	ee07 3a90 	vmov	s15, r3
 8009416:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800941a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800941c:	edd3 7a32 	vldr	s15, [r3, #200]	; 0xc8
 8009420:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009424:	ee17 0a90 	vmov	r0, s15
 8009428:	f7f7 f88e 	bl	8000548 <__aeabi_f2d>
 800942c:	4604      	mov	r4, r0
 800942e:	460d      	mov	r5, r1
				feeder->raw_data.rpm, &feeder->rpm_pid);
 8009430:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009432:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(feeder_output * feeder->angle_data.gearbox_ratio,
 8009436:	4618      	mov	r0, r3
 8009438:	f7f7 f874 	bl	8000524 <__aeabi_i2d>
 800943c:	4680      	mov	r8, r0
 800943e:	4689      	mov	r9, r1
 8009440:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009442:	3338      	adds	r3, #56	; 0x38
 8009444:	4618      	mov	r0, r3
 8009446:	ec49 8b11 	vmov	d1, r8, r9
 800944a:	ec45 4b10 	vmov	d0, r4, r5
 800944e:	f003 fafb 	bl	800ca48 <speed_pid>
		//speed_pid(feeder_output * 36,feeder->raw_data.rpm, &feeder->rpm_pid);
	}

	motor_send_can(can_motors, FEEDER_MOTOR_ID, LFRICTION_MOTOR_ID,
 8009452:	2300      	movs	r3, #0
 8009454:	9300      	str	r3, [sp, #0]
 8009456:	2313      	movs	r3, #19
 8009458:	2217      	movs	r2, #23
 800945a:	2112      	movs	r1, #18
 800945c:	480b      	ldr	r0, [pc, #44]	; (800948c <launcher_control+0x6fc>)
 800945e:	f003 fbcf 	bl	800cc00 <motor_send_can>
	RFRICTION_MOTOR_ID, 0);
}
 8009462:	bf00      	nop
 8009464:	3748      	adds	r7, #72	; 0x48
 8009466:	46bd      	mov	sp, r7
 8009468:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800946c:	f3af 8000 	nop.w
	...
 8009478:	200032e5 	.word	0x200032e5
 800947c:	20002f40 	.word	0x20002f40
 8009480:	200032e4 	.word	0x200032e4
 8009484:	200032dc 	.word	0x200032dc
 8009488:	ffffd9b8 	.word	0xffffd9b8
 800948c:	200018a8 	.word	0x200018a8

08009490 <rt_atan2d_snf>:
 8009490:	b5b0      	push	{r4, r5, r7, lr}
 8009492:	b088      	sub	sp, #32
 8009494:	af00      	add	r7, sp, #0
 8009496:	ed87 0b02 	vstr	d0, [r7, #8]
 800949a:	ed87 1b00 	vstr	d1, [r7]
 800949e:	ed97 0b02 	vldr	d0, [r7, #8]
 80094a2:	f004 fc0f 	bl	800dcc4 <rtIsNaN>
 80094a6:	4603      	mov	r3, r0
 80094a8:	2b00      	cmp	r3, #0
 80094aa:	d106      	bne.n	80094ba <rt_atan2d_snf+0x2a>
 80094ac:	ed97 0b00 	vldr	d0, [r7]
 80094b0:	f004 fc08 	bl	800dcc4 <rtIsNaN>
 80094b4:	4603      	mov	r3, r0
 80094b6:	2b00      	cmp	r3, #0
 80094b8:	d005      	beq.n	80094c6 <rt_atan2d_snf+0x36>
 80094ba:	4b4d      	ldr	r3, [pc, #308]	; (80095f0 <rt_atan2d_snf+0x160>)
 80094bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80094c0:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80094c4:	e07e      	b.n	80095c4 <rt_atan2d_snf+0x134>
 80094c6:	ed97 0b02 	vldr	d0, [r7, #8]
 80094ca:	f004 fbcd 	bl	800dc68 <rtIsInf>
 80094ce:	4603      	mov	r3, r0
 80094d0:	2b00      	cmp	r3, #0
 80094d2:	d03b      	beq.n	800954c <rt_atan2d_snf+0xbc>
 80094d4:	ed97 0b00 	vldr	d0, [r7]
 80094d8:	f004 fbc6 	bl	800dc68 <rtIsInf>
 80094dc:	4603      	mov	r3, r0
 80094de:	2b00      	cmp	r3, #0
 80094e0:	d034      	beq.n	800954c <rt_atan2d_snf+0xbc>
 80094e2:	f04f 0200 	mov.w	r2, #0
 80094e6:	f04f 0300 	mov.w	r3, #0
 80094ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80094ee:	f7f7 fb13 	bl	8000b18 <__aeabi_dcmpgt>
 80094f2:	4603      	mov	r3, r0
 80094f4:	2b00      	cmp	r3, #0
 80094f6:	d002      	beq.n	80094fe <rt_atan2d_snf+0x6e>
 80094f8:	2301      	movs	r3, #1
 80094fa:	617b      	str	r3, [r7, #20]
 80094fc:	e002      	b.n	8009504 <rt_atan2d_snf+0x74>
 80094fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009502:	617b      	str	r3, [r7, #20]
 8009504:	f04f 0200 	mov.w	r2, #0
 8009508:	f04f 0300 	mov.w	r3, #0
 800950c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8009510:	f7f7 fb02 	bl	8000b18 <__aeabi_dcmpgt>
 8009514:	4603      	mov	r3, r0
 8009516:	2b00      	cmp	r3, #0
 8009518:	d002      	beq.n	8009520 <rt_atan2d_snf+0x90>
 800951a:	2301      	movs	r3, #1
 800951c:	613b      	str	r3, [r7, #16]
 800951e:	e002      	b.n	8009526 <rt_atan2d_snf+0x96>
 8009520:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009524:	613b      	str	r3, [r7, #16]
 8009526:	6978      	ldr	r0, [r7, #20]
 8009528:	f7f6 fffc 	bl	8000524 <__aeabi_i2d>
 800952c:	4604      	mov	r4, r0
 800952e:	460d      	mov	r5, r1
 8009530:	6938      	ldr	r0, [r7, #16]
 8009532:	f7f6 fff7 	bl	8000524 <__aeabi_i2d>
 8009536:	4602      	mov	r2, r0
 8009538:	460b      	mov	r3, r1
 800953a:	ec43 2b11 	vmov	d1, r2, r3
 800953e:	ec45 4b10 	vmov	d0, r4, r5
 8009542:	f01a ff39 	bl	80243b8 <atan2>
 8009546:	ed87 0b06 	vstr	d0, [r7, #24]
 800954a:	e03b      	b.n	80095c4 <rt_atan2d_snf+0x134>
 800954c:	f04f 0200 	mov.w	r2, #0
 8009550:	f04f 0300 	mov.w	r3, #0
 8009554:	e9d7 0100 	ldrd	r0, r1, [r7]
 8009558:	f7f7 fab6 	bl	8000ac8 <__aeabi_dcmpeq>
 800955c:	4603      	mov	r3, r0
 800955e:	2b00      	cmp	r3, #0
 8009560:	d028      	beq.n	80095b4 <rt_atan2d_snf+0x124>
 8009562:	f04f 0200 	mov.w	r2, #0
 8009566:	f04f 0300 	mov.w	r3, #0
 800956a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800956e:	f7f7 fad3 	bl	8000b18 <__aeabi_dcmpgt>
 8009572:	4603      	mov	r3, r0
 8009574:	2b00      	cmp	r3, #0
 8009576:	d005      	beq.n	8009584 <rt_atan2d_snf+0xf4>
 8009578:	a319      	add	r3, pc, #100	; (adr r3, 80095e0 <rt_atan2d_snf+0x150>)
 800957a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800957e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009582:	e01f      	b.n	80095c4 <rt_atan2d_snf+0x134>
 8009584:	f04f 0200 	mov.w	r2, #0
 8009588:	f04f 0300 	mov.w	r3, #0
 800958c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8009590:	f7f7 faa4 	bl	8000adc <__aeabi_dcmplt>
 8009594:	4603      	mov	r3, r0
 8009596:	2b00      	cmp	r3, #0
 8009598:	d005      	beq.n	80095a6 <rt_atan2d_snf+0x116>
 800959a:	a313      	add	r3, pc, #76	; (adr r3, 80095e8 <rt_atan2d_snf+0x158>)
 800959c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80095a0:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80095a4:	e00e      	b.n	80095c4 <rt_atan2d_snf+0x134>
 80095a6:	f04f 0200 	mov.w	r2, #0
 80095aa:	f04f 0300 	mov.w	r3, #0
 80095ae:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80095b2:	e007      	b.n	80095c4 <rt_atan2d_snf+0x134>
 80095b4:	ed97 1b00 	vldr	d1, [r7]
 80095b8:	ed97 0b02 	vldr	d0, [r7, #8]
 80095bc:	f01a fefc 	bl	80243b8 <atan2>
 80095c0:	ed87 0b06 	vstr	d0, [r7, #24]
 80095c4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80095c8:	ec43 2b17 	vmov	d7, r2, r3
 80095cc:	eeb0 0a47 	vmov.f32	s0, s14
 80095d0:	eef0 0a67 	vmov.f32	s1, s15
 80095d4:	3720      	adds	r7, #32
 80095d6:	46bd      	mov	sp, r7
 80095d8:	bdb0      	pop	{r4, r5, r7, pc}
 80095da:	bf00      	nop
 80095dc:	f3af 8000 	nop.w
 80095e0:	54442d18 	.word	0x54442d18
 80095e4:	3ff921fb 	.word	0x3ff921fb
 80095e8:	54442d18 	.word	0x54442d18
 80095ec:	bff921fb 	.word	0xbff921fb
 80095f0:	20000018 	.word	0x20000018
 80095f4:	00000000 	.word	0x00000000

080095f8 <leg_pos>:
 80095f8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80095fc:	b09a      	sub	sp, #104	; 0x68
 80095fe:	af00      	add	r7, sp, #0
 8009600:	ed87 0b04 	vstr	d0, [r7, #16]
 8009604:	ed87 1b02 	vstr	d1, [r7, #8]
 8009608:	6078      	str	r0, [r7, #4]
 800960a:	ed97 0b04 	vldr	d0, [r7, #16]
 800960e:	f01a fd67 	bl	80240e0 <cos>
 8009612:	ed87 0b18 	vstr	d0, [r7, #96]	; 0x60
 8009616:	ed97 0b02 	vldr	d0, [r7, #8]
 800961a:	f01a fd61 	bl	80240e0 <cos>
 800961e:	ed87 0b16 	vstr	d0, [r7, #88]	; 0x58
 8009622:	ed97 0b04 	vldr	d0, [r7, #16]
 8009626:	f01a fe3b 	bl	80242a0 <sin>
 800962a:	ed87 0b14 	vstr	d0, [r7, #80]	; 0x50
 800962e:	ed97 0b02 	vldr	d0, [r7, #8]
 8009632:	f01a fe35 	bl	80242a0 <sin>
 8009636:	ed87 0b12 	vstr	d0, [r7, #72]	; 0x48
 800963a:	a3c4      	add	r3, pc, #784	; (adr r3, 800994c <leg_pos+0x354>)
 800963c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009640:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8009644:	f7f6 ffd8 	bl	80005f8 <__aeabi_dmul>
 8009648:	4602      	mov	r2, r0
 800964a:	460b      	mov	r3, r1
 800964c:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8009650:	a3be      	add	r3, pc, #760	; (adr r3, 800994c <leg_pos+0x354>)
 8009652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009656:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800965a:	f7f6 ffcd 	bl	80005f8 <__aeabi_dmul>
 800965e:	4602      	mov	r2, r0
 8009660:	460b      	mov	r3, r1
 8009662:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8009666:	a3bb      	add	r3, pc, #748	; (adr r3, 8009954 <leg_pos+0x35c>)
 8009668:	e9d3 2300 	ldrd	r2, r3, [r3]
 800966c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8009670:	f7f6 ffc2 	bl	80005f8 <__aeabi_dmul>
 8009674:	4602      	mov	r2, r0
 8009676:	460b      	mov	r3, r1
 8009678:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 800967c:	a3b5      	add	r3, pc, #724	; (adr r3, 8009954 <leg_pos+0x35c>)
 800967e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009682:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009686:	f7f6 ffb7 	bl	80005f8 <__aeabi_dmul>
 800968a:	4602      	mov	r2, r0
 800968c:	460b      	mov	r3, r1
 800968e:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8009692:	a3ae      	add	r3, pc, #696	; (adr r3, 800994c <leg_pos+0x354>)
 8009694:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009698:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800969c:	f7f6 ffac 	bl	80005f8 <__aeabi_dmul>
 80096a0:	4602      	mov	r2, r0
 80096a2:	460b      	mov	r3, r1
 80096a4:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 80096a8:	f7f6 fdee 	bl	8000288 <__aeabi_dsub>
 80096ac:	4602      	mov	r2, r0
 80096ae:	460b      	mov	r3, r1
 80096b0:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 80096b4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80096b8:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 80096bc:	f7f6 fde4 	bl	8000288 <__aeabi_dsub>
 80096c0:	4602      	mov	r2, r0
 80096c2:	460b      	mov	r3, r1
 80096c4:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80096c8:	a3a0      	add	r3, pc, #640	; (adr r3, 800994c <leg_pos+0x354>)
 80096ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80096ce:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 80096d2:	f7f6 ff91 	bl	80005f8 <__aeabi_dmul>
 80096d6:	4602      	mov	r2, r0
 80096d8:	460b      	mov	r3, r1
 80096da:	4610      	mov	r0, r2
 80096dc:	4619      	mov	r1, r3
 80096de:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80096e2:	f7f6 fdd1 	bl	8000288 <__aeabi_dsub>
 80096e6:	4602      	mov	r2, r0
 80096e8:	460b      	mov	r3, r1
 80096ea:	4610      	mov	r0, r2
 80096ec:	4619      	mov	r1, r3
 80096ee:	a39b      	add	r3, pc, #620	; (adr r3, 800995c <leg_pos+0x364>)
 80096f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80096f4:	f7f6 fdca 	bl	800028c <__adddf3>
 80096f8:	4602      	mov	r2, r0
 80096fa:	460b      	mov	r3, r1
 80096fc:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009700:	a394      	add	r3, pc, #592	; (adr r3, 8009954 <leg_pos+0x35c>)
 8009702:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009706:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800970a:	f7f6 ff75 	bl	80005f8 <__aeabi_dmul>
 800970e:	4602      	mov	r2, r0
 8009710:	460b      	mov	r3, r1
 8009712:	4614      	mov	r4, r2
 8009714:	461d      	mov	r5, r3
 8009716:	a38f      	add	r3, pc, #572	; (adr r3, 8009954 <leg_pos+0x35c>)
 8009718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800971c:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8009720:	f7f6 ff6a 	bl	80005f8 <__aeabi_dmul>
 8009724:	4602      	mov	r2, r0
 8009726:	460b      	mov	r3, r1
 8009728:	4620      	mov	r0, r4
 800972a:	4629      	mov	r1, r5
 800972c:	f7f6 fdac 	bl	8000288 <__aeabi_dsub>
 8009730:	4602      	mov	r2, r0
 8009732:	460b      	mov	r3, r1
 8009734:	4610      	mov	r0, r2
 8009736:	4619      	mov	r1, r3
 8009738:	a38a      	add	r3, pc, #552	; (adr r3, 8009964 <leg_pos+0x36c>)
 800973a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800973e:	f7f6 fda5 	bl	800028c <__adddf3>
 8009742:	4602      	mov	r2, r0
 8009744:	460b      	mov	r3, r1
 8009746:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800974a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800974e:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009752:	f7f6 ff51 	bl	80005f8 <__aeabi_dmul>
 8009756:	4602      	mov	r2, r0
 8009758:	460b      	mov	r3, r1
 800975a:	4614      	mov	r4, r2
 800975c:	461d      	mov	r5, r3
 800975e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8009762:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8009766:	f7f6 ff47 	bl	80005f8 <__aeabi_dmul>
 800976a:	4602      	mov	r2, r0
 800976c:	460b      	mov	r3, r1
 800976e:	4620      	mov	r0, r4
 8009770:	4629      	mov	r1, r5
 8009772:	f7f6 fd8b 	bl	800028c <__adddf3>
 8009776:	4602      	mov	r2, r0
 8009778:	460b      	mov	r3, r1
 800977a:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 800977e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009782:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8009786:	f7f6 fd81 	bl	800028c <__adddf3>
 800978a:	4602      	mov	r2, r0
 800978c:	460b      	mov	r3, r1
 800978e:	f04f 0000 	mov.w	r0, #0
 8009792:	496d      	ldr	r1, [pc, #436]	; (8009948 <leg_pos+0x350>)
 8009794:	f7f7 f85a 	bl	800084c <__aeabi_ddiv>
 8009798:	4602      	mov	r2, r0
 800979a:	460b      	mov	r3, r1
 800979c:	4614      	mov	r4, r2
 800979e:	461d      	mov	r5, r3
 80097a0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80097a4:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 80097a8:	f7f6 fd6e 	bl	8000288 <__aeabi_dsub>
 80097ac:	4602      	mov	r2, r0
 80097ae:	460b      	mov	r3, r1
 80097b0:	4690      	mov	r8, r2
 80097b2:	4699      	mov	r9, r3
 80097b4:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80097b8:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80097bc:	f7f6 ff1c 	bl	80005f8 <__aeabi_dmul>
 80097c0:	4602      	mov	r2, r0
 80097c2:	460b      	mov	r3, r1
 80097c4:	4692      	mov	sl, r2
 80097c6:	469b      	mov	fp, r3
 80097c8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80097cc:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80097d0:	f7f6 ff12 	bl	80005f8 <__aeabi_dmul>
 80097d4:	4602      	mov	r2, r0
 80097d6:	460b      	mov	r3, r1
 80097d8:	4650      	mov	r0, sl
 80097da:	4659      	mov	r1, fp
 80097dc:	f7f6 fd56 	bl	800028c <__adddf3>
 80097e0:	4602      	mov	r2, r0
 80097e2:	460b      	mov	r3, r1
 80097e4:	4692      	mov	sl, r2
 80097e6:	469b      	mov	fp, r3
 80097e8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80097ec:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80097f0:	f7f6 ff02 	bl	80005f8 <__aeabi_dmul>
 80097f4:	4602      	mov	r2, r0
 80097f6:	460b      	mov	r3, r1
 80097f8:	4650      	mov	r0, sl
 80097fa:	4659      	mov	r1, fp
 80097fc:	f7f6 fd44 	bl	8000288 <__aeabi_dsub>
 8009800:	4602      	mov	r2, r0
 8009802:	460b      	mov	r3, r1
 8009804:	ec43 2b17 	vmov	d7, r2, r3
 8009808:	eeb0 0a47 	vmov.f32	s0, s14
 800980c:	eef0 0a67 	vmov.f32	s1, s15
 8009810:	f01a fe44 	bl	802449c <sqrt>
 8009814:	ec53 2b10 	vmov	r2, r3, d0
 8009818:	4640      	mov	r0, r8
 800981a:	4649      	mov	r1, r9
 800981c:	f7f6 fd36 	bl	800028c <__adddf3>
 8009820:	4602      	mov	r2, r0
 8009822:	460b      	mov	r3, r1
 8009824:	4620      	mov	r0, r4
 8009826:	4629      	mov	r1, r5
 8009828:	f7f6 fee6 	bl	80005f8 <__aeabi_dmul>
 800982c:	4602      	mov	r2, r0
 800982e:	460b      	mov	r3, r1
 8009830:	ec43 2b17 	vmov	d7, r2, r3
 8009834:	eeb0 0a47 	vmov.f32	s0, s14
 8009838:	eef0 0a67 	vmov.f32	s1, s15
 800983c:	f01a fab0 	bl	8023da0 <atan>
 8009840:	ec51 0b10 	vmov	r0, r1, d0
 8009844:	4602      	mov	r2, r0
 8009846:	460b      	mov	r3, r1
 8009848:	f7f6 fd20 	bl	800028c <__adddf3>
 800984c:	4602      	mov	r2, r0
 800984e:	460b      	mov	r3, r1
 8009850:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8009854:	ed97 0b14 	vldr	d0, [r7, #80]	; 0x50
 8009858:	f01a fd22 	bl	80242a0 <sin>
 800985c:	ec51 0b10 	vmov	r0, r1, d0
 8009860:	a335      	add	r3, pc, #212	; (adr r3, 8009938 <leg_pos+0x340>)
 8009862:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009866:	f7f6 fec7 	bl	80005f8 <__aeabi_dmul>
 800986a:	4602      	mov	r2, r0
 800986c:	460b      	mov	r3, r1
 800986e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8009872:	f7f6 fd0b 	bl	800028c <__adddf3>
 8009876:	4602      	mov	r2, r0
 8009878:	460b      	mov	r3, r1
 800987a:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 800987e:	ed97 0b14 	vldr	d0, [r7, #80]	; 0x50
 8009882:	f01a fc2d 	bl	80240e0 <cos>
 8009886:	ec51 0b10 	vmov	r0, r1, d0
 800988a:	a32b      	add	r3, pc, #172	; (adr r3, 8009938 <leg_pos+0x340>)
 800988c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009890:	f7f6 feb2 	bl	80005f8 <__aeabi_dmul>
 8009894:	4602      	mov	r2, r0
 8009896:	460b      	mov	r3, r1
 8009898:	4610      	mov	r0, r2
 800989a:	4619      	mov	r1, r3
 800989c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80098a0:	f7f6 fcf4 	bl	800028c <__adddf3>
 80098a4:	4602      	mov	r2, r0
 80098a6:	460b      	mov	r3, r1
 80098a8:	4610      	mov	r0, r2
 80098aa:	4619      	mov	r1, r3
 80098ac:	a324      	add	r3, pc, #144	; (adr r3, 8009940 <leg_pos+0x348>)
 80098ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098b2:	f7f6 fce9 	bl	8000288 <__aeabi_dsub>
 80098b6:	4602      	mov	r2, r0
 80098b8:	460b      	mov	r3, r1
 80098ba:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 80098be:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80098c2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80098c6:	f7f6 fe97 	bl	80005f8 <__aeabi_dmul>
 80098ca:	4602      	mov	r2, r0
 80098cc:	460b      	mov	r3, r1
 80098ce:	4614      	mov	r4, r2
 80098d0:	461d      	mov	r5, r3
 80098d2:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80098d6:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80098da:	f7f6 fe8d 	bl	80005f8 <__aeabi_dmul>
 80098de:	4602      	mov	r2, r0
 80098e0:	460b      	mov	r3, r1
 80098e2:	4620      	mov	r0, r4
 80098e4:	4629      	mov	r1, r5
 80098e6:	f7f6 fcd1 	bl	800028c <__adddf3>
 80098ea:	4602      	mov	r2, r0
 80098ec:	460b      	mov	r3, r1
 80098ee:	ec43 2b17 	vmov	d7, r2, r3
 80098f2:	eeb0 0a47 	vmov.f32	s0, s14
 80098f6:	eef0 0a67 	vmov.f32	s1, s15
 80098fa:	f01a fdcf 	bl	802449c <sqrt>
 80098fe:	eeb0 7a40 	vmov.f32	s14, s0
 8009902:	eef0 7a60 	vmov.f32	s15, s1
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	ed83 7b00 	vstr	d7, [r3]
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	f103 0408 	add.w	r4, r3, #8
 8009912:	ed97 1b14 	vldr	d1, [r7, #80]	; 0x50
 8009916:	ed97 0b12 	vldr	d0, [r7, #72]	; 0x48
 800991a:	f7ff fdb9 	bl	8009490 <rt_atan2d_snf>
 800991e:	eeb0 7a40 	vmov.f32	s14, s0
 8009922:	eef0 7a60 	vmov.f32	s15, s1
 8009926:	ed84 7b00 	vstr	d7, [r4]
 800992a:	bf00      	nop
 800992c:	3768      	adds	r7, #104	; 0x68
 800992e:	46bd      	mov	sp, r7
 8009930:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009934:	f3af 8000 	nop.w
 8009938:	33333333 	.word	0x33333333
 800993c:	3fc33333 	.word	0x3fc33333
 8009940:	5532617c 	.word	0x5532617c
 8009944:	3fa92a30 	.word	0x3fa92a30
 8009948:	3ff00000 	.word	0x3ff00000
 800994c:	47ae147b 	.word	0x47ae147b
 8009950:	3fb47ae1 	.word	0x3fb47ae1
 8009954:	bc6a7efa 	.word	0xbc6a7efa
 8009958:	3f989374 	.word	0x3f989374
 800995c:	5532617c 	.word	0x5532617c
 8009960:	3fb92a30 	.word	0x3fb92a30
 8009964:	663c74fb 	.word	0x663c74fb
 8009968:	3f9e32a0 	.word	0x3f9e32a0
 800996c:	00000000 	.word	0x00000000

08009970 <leg_conv>:
 8009970:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009974:	b0ba      	sub	sp, #232	; 0xe8
 8009976:	af00      	add	r7, sp, #0
 8009978:	ed87 0b08 	vstr	d0, [r7, #32]
 800997c:	ed87 1b06 	vstr	d1, [r7, #24]
 8009980:	ed87 2b04 	vstr	d2, [r7, #16]
 8009984:	ed87 3b02 	vstr	d3, [r7, #8]
 8009988:	6078      	str	r0, [r7, #4]
 800998a:	ed97 0b04 	vldr	d0, [r7, #16]
 800998e:	f01a fba7 	bl	80240e0 <cos>
 8009992:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
 8009996:	ed97 0b02 	vldr	d0, [r7, #8]
 800999a:	f01a fba1 	bl	80240e0 <cos>
 800999e:	ed87 0b36 	vstr	d0, [r7, #216]	; 0xd8
 80099a2:	ed97 0b04 	vldr	d0, [r7, #16]
 80099a6:	f01a fc7b 	bl	80242a0 <sin>
 80099aa:	ed87 0b34 	vstr	d0, [r7, #208]	; 0xd0
 80099ae:	ed97 0b02 	vldr	d0, [r7, #8]
 80099b2:	f01a fc75 	bl	80242a0 <sin>
 80099b6:	ed87 0b32 	vstr	d0, [r7, #200]	; 0xc8
 80099ba:	f20f 5350 	addw	r3, pc, #1360	; 0x550
 80099be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099c2:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80099c6:	f7f6 fe17 	bl	80005f8 <__aeabi_dmul>
 80099ca:	4602      	mov	r2, r0
 80099cc:	460b      	mov	r3, r1
 80099ce:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 80099d2:	f20f 5338 	addw	r3, pc, #1336	; 0x538
 80099d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099da:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 80099de:	f7f6 fe0b 	bl	80005f8 <__aeabi_dmul>
 80099e2:	4602      	mov	r2, r0
 80099e4:	460b      	mov	r3, r1
 80099e6:	e9c7 232e 	strd	r2, r3, [r7, #184]	; 0xb8
 80099ea:	f20f 5328 	addw	r3, pc, #1320	; 0x528
 80099ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099f2:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80099f6:	f7f6 fdff 	bl	80005f8 <__aeabi_dmul>
 80099fa:	4602      	mov	r2, r0
 80099fc:	460b      	mov	r3, r1
 80099fe:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 8009a02:	f20f 5310 	addw	r3, pc, #1296	; 0x510
 8009a06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a0a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009a0e:	f7f6 fdf3 	bl	80005f8 <__aeabi_dmul>
 8009a12:	4602      	mov	r2, r0
 8009a14:	460b      	mov	r3, r1
 8009a16:	e9c7 232a 	strd	r2, r3, [r7, #168]	; 0xa8
 8009a1a:	f20f 43f8 	addw	r3, pc, #1272	; 0x4f8
 8009a1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a22:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009a26:	f7f6 fde7 	bl	80005f8 <__aeabi_dmul>
 8009a2a:	4602      	mov	r2, r0
 8009a2c:	460b      	mov	r3, r1
 8009a2e:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 8009a32:	f20f 43e0 	addw	r3, pc, #1248	; 0x4e0
 8009a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a3a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009a3e:	f7f6 fddb 	bl	80005f8 <__aeabi_dmul>
 8009a42:	4602      	mov	r2, r0
 8009a44:	460b      	mov	r3, r1
 8009a46:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
 8009a4a:	f20f 43c0 	addw	r3, pc, #1216	; 0x4c0
 8009a4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a52:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009a56:	f7f6 fdcf 	bl	80005f8 <__aeabi_dmul>
 8009a5a:	4602      	mov	r2, r0
 8009a5c:	460b      	mov	r3, r1
 8009a5e:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 8009a62:	f7f6 fc11 	bl	8000288 <__aeabi_dsub>
 8009a66:	4602      	mov	r2, r0
 8009a68:	460b      	mov	r3, r1
 8009a6a:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 8009a6e:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 8009a72:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 8009a76:	f7f6 fc07 	bl	8000288 <__aeabi_dsub>
 8009a7a:	4602      	mov	r2, r0
 8009a7c:	460b      	mov	r3, r1
 8009a7e:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88
 8009a82:	f20f 4388 	addw	r3, pc, #1160	; 0x488
 8009a86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a8a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009a8e:	f7f6 fdb3 	bl	80005f8 <__aeabi_dmul>
 8009a92:	4602      	mov	r2, r0
 8009a94:	460b      	mov	r3, r1
 8009a96:	4610      	mov	r0, r2
 8009a98:	4619      	mov	r1, r3
 8009a9a:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 8009a9e:	f7f6 fbf3 	bl	8000288 <__aeabi_dsub>
 8009aa2:	4602      	mov	r2, r0
 8009aa4:	460b      	mov	r3, r1
 8009aa6:	4610      	mov	r0, r2
 8009aa8:	4619      	mov	r1, r3
 8009aaa:	f20f 4370 	addw	r3, pc, #1136	; 0x470
 8009aae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ab2:	f7f6 fbeb 	bl	800028c <__adddf3>
 8009ab6:	4602      	mov	r2, r0
 8009ab8:	460b      	mov	r3, r1
 8009aba:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 8009abe:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 8009ac2:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 8009ac6:	f7f6 fbdf 	bl	8000288 <__aeabi_dsub>
 8009aca:	4602      	mov	r2, r0
 8009acc:	460b      	mov	r3, r1
 8009ace:	4610      	mov	r0, r2
 8009ad0:	4619      	mov	r1, r3
 8009ad2:	f20f 4350 	addw	r3, pc, #1104	; 0x450
 8009ad6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ada:	f7f6 fbd7 	bl	800028c <__adddf3>
 8009ade:	4602      	mov	r2, r0
 8009ae0:	460b      	mov	r3, r1
 8009ae2:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 8009ae6:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009aea:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 8009aee:	f7f6 fd83 	bl	80005f8 <__aeabi_dmul>
 8009af2:	4602      	mov	r2, r0
 8009af4:	460b      	mov	r3, r1
 8009af6:	4690      	mov	r8, r2
 8009af8:	4699      	mov	r9, r3
 8009afa:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009afe:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009b02:	f7f6 fd79 	bl	80005f8 <__aeabi_dmul>
 8009b06:	4602      	mov	r2, r0
 8009b08:	460b      	mov	r3, r1
 8009b0a:	4640      	mov	r0, r8
 8009b0c:	4649      	mov	r1, r9
 8009b0e:	f7f6 fbbd 	bl	800028c <__adddf3>
 8009b12:	4602      	mov	r2, r0
 8009b14:	460b      	mov	r3, r1
 8009b16:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 8009b1a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009b1e:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009b22:	f7f6 fd69 	bl	80005f8 <__aeabi_dmul>
 8009b26:	4602      	mov	r2, r0
 8009b28:	460b      	mov	r3, r1
 8009b2a:	4610      	mov	r0, r2
 8009b2c:	4619      	mov	r1, r3
 8009b2e:	a3ff      	add	r3, pc, #1020	; (adr r3, 8009f2c <leg_conv+0x5bc>)
 8009b30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b34:	f7f6 fd60 	bl	80005f8 <__aeabi_dmul>
 8009b38:	4602      	mov	r2, r0
 8009b3a:	460b      	mov	r3, r1
 8009b3c:	4690      	mov	r8, r2
 8009b3e:	4699      	mov	r9, r3
 8009b40:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009b44:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009b48:	f7f6 fd56 	bl	80005f8 <__aeabi_dmul>
 8009b4c:	4602      	mov	r2, r0
 8009b4e:	460b      	mov	r3, r1
 8009b50:	4610      	mov	r0, r2
 8009b52:	4619      	mov	r1, r3
 8009b54:	a3f5      	add	r3, pc, #980	; (adr r3, 8009f2c <leg_conv+0x5bc>)
 8009b56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b5a:	f7f6 fd4d 	bl	80005f8 <__aeabi_dmul>
 8009b5e:	4602      	mov	r2, r0
 8009b60:	460b      	mov	r3, r1
 8009b62:	4640      	mov	r0, r8
 8009b64:	4649      	mov	r1, r9
 8009b66:	f7f6 fb91 	bl	800028c <__adddf3>
 8009b6a:	4602      	mov	r2, r0
 8009b6c:	460b      	mov	r3, r1
 8009b6e:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 8009b72:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009b76:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009b7a:	f7f6 fd3d 	bl	80005f8 <__aeabi_dmul>
 8009b7e:	4602      	mov	r2, r0
 8009b80:	460b      	mov	r3, r1
 8009b82:	4610      	mov	r0, r2
 8009b84:	4619      	mov	r1, r3
 8009b86:	a3e9      	add	r3, pc, #932	; (adr r3, 8009f2c <leg_conv+0x5bc>)
 8009b88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b8c:	f7f6 fd34 	bl	80005f8 <__aeabi_dmul>
 8009b90:	4602      	mov	r2, r0
 8009b92:	460b      	mov	r3, r1
 8009b94:	4690      	mov	r8, r2
 8009b96:	4699      	mov	r9, r3
 8009b98:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009b9c:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009ba0:	f7f6 fd2a 	bl	80005f8 <__aeabi_dmul>
 8009ba4:	4602      	mov	r2, r0
 8009ba6:	460b      	mov	r3, r1
 8009ba8:	4610      	mov	r0, r2
 8009baa:	4619      	mov	r1, r3
 8009bac:	a3df      	add	r3, pc, #892	; (adr r3, 8009f2c <leg_conv+0x5bc>)
 8009bae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009bb2:	f7f6 fd21 	bl	80005f8 <__aeabi_dmul>
 8009bb6:	4602      	mov	r2, r0
 8009bb8:	460b      	mov	r3, r1
 8009bba:	4640      	mov	r0, r8
 8009bbc:	4649      	mov	r1, r9
 8009bbe:	f7f6 fb65 	bl	800028c <__adddf3>
 8009bc2:	4602      	mov	r2, r0
 8009bc4:	460b      	mov	r3, r1
 8009bc6:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 8009bca:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009bce:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 8009bd2:	f7f6 fb5b 	bl	800028c <__adddf3>
 8009bd6:	4602      	mov	r2, r0
 8009bd8:	460b      	mov	r3, r1
 8009bda:	f04f 0000 	mov.w	r0, #0
 8009bde:	49ca      	ldr	r1, [pc, #808]	; (8009f08 <leg_conv+0x598>)
 8009be0:	f7f6 fe34 	bl	800084c <__aeabi_ddiv>
 8009be4:	4602      	mov	r2, r0
 8009be6:	460b      	mov	r3, r1
 8009be8:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 8009bec:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009bf0:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009bf4:	f7f6 fd00 	bl	80005f8 <__aeabi_dmul>
 8009bf8:	4602      	mov	r2, r0
 8009bfa:	460b      	mov	r3, r1
 8009bfc:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 8009c00:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009c04:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 8009c08:	f7f6 fcf6 	bl	80005f8 <__aeabi_dmul>
 8009c0c:	4602      	mov	r2, r0
 8009c0e:	460b      	mov	r3, r1
 8009c10:	4690      	mov	r8, r2
 8009c12:	4699      	mov	r9, r3
 8009c14:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009c18:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 8009c1c:	f7f6 fcec 	bl	80005f8 <__aeabi_dmul>
 8009c20:	4602      	mov	r2, r0
 8009c22:	460b      	mov	r3, r1
 8009c24:	4640      	mov	r0, r8
 8009c26:	4649      	mov	r1, r9
 8009c28:	f7f6 fb30 	bl	800028c <__adddf3>
 8009c2c:	4602      	mov	r2, r0
 8009c2e:	460b      	mov	r3, r1
 8009c30:	4690      	mov	r8, r2
 8009c32:	4699      	mov	r9, r3
 8009c34:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009c38:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8009c3c:	f7f6 fcdc 	bl	80005f8 <__aeabi_dmul>
 8009c40:	4602      	mov	r2, r0
 8009c42:	460b      	mov	r3, r1
 8009c44:	4640      	mov	r0, r8
 8009c46:	4649      	mov	r1, r9
 8009c48:	f7f6 fb1e 	bl	8000288 <__aeabi_dsub>
 8009c4c:	4602      	mov	r2, r0
 8009c4e:	460b      	mov	r3, r1
 8009c50:	ec43 2b17 	vmov	d7, r2, r3
 8009c54:	eeb0 0a47 	vmov.f32	s0, s14
 8009c58:	eef0 0a67 	vmov.f32	s1, s15
 8009c5c:	f01a fc1e 	bl	802449c <sqrt>
 8009c60:	ed87 0b24 	vstr	d0, [r7, #144]	; 0x90
 8009c64:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009c68:	f04f 0000 	mov.w	r0, #0
 8009c6c:	49a6      	ldr	r1, [pc, #664]	; (8009f08 <leg_conv+0x598>)
 8009c6e:	f7f6 fded 	bl	800084c <__aeabi_ddiv>
 8009c72:	4602      	mov	r2, r0
 8009c74:	460b      	mov	r3, r1
 8009c76:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8009c7a:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 8009c7e:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8009c82:	f7f6 fb01 	bl	8000288 <__aeabi_dsub>
 8009c86:	4602      	mov	r2, r0
 8009c88:	460b      	mov	r3, r1
 8009c8a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 8009c8e:	f7f6 fafd 	bl	800028c <__adddf3>
 8009c92:	4602      	mov	r2, r0
 8009c94:	460b      	mov	r3, r1
 8009c96:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 8009c9a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009c9e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009ca2:	f7f6 fca9 	bl	80005f8 <__aeabi_dmul>
 8009ca6:	4602      	mov	r2, r0
 8009ca8:	460b      	mov	r3, r1
 8009caa:	ec43 2b17 	vmov	d7, r2, r3
 8009cae:	eeb0 0a47 	vmov.f32	s0, s14
 8009cb2:	eef0 0a67 	vmov.f32	s1, s15
 8009cb6:	f01a f873 	bl	8023da0 <atan>
 8009cba:	ec51 0b10 	vmov	r0, r1, d0
 8009cbe:	4602      	mov	r2, r0
 8009cc0:	460b      	mov	r3, r1
 8009cc2:	f7f6 fae3 	bl	800028c <__adddf3>
 8009cc6:	4602      	mov	r2, r0
 8009cc8:	460b      	mov	r3, r1
 8009cca:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8009cce:	ed97 0b10 	vldr	d0, [r7, #64]	; 0x40
 8009cd2:	f01a fa05 	bl	80240e0 <cos>
 8009cd6:	ed87 0b0e 	vstr	d0, [r7, #56]	; 0x38
 8009cda:	ed97 0b10 	vldr	d0, [r7, #64]	; 0x40
 8009cde:	f01a fadf 	bl	80242a0 <sin>
 8009ce2:	ed87 0b0c 	vstr	d0, [r7, #48]	; 0x30
 8009ce6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009cea:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009cee:	f7f6 fc83 	bl	80005f8 <__aeabi_dmul>
 8009cf2:	4602      	mov	r2, r0
 8009cf4:	460b      	mov	r3, r1
 8009cf6:	4610      	mov	r0, r2
 8009cf8:	4619      	mov	r1, r3
 8009cfa:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009cfe:	f7f6 fc7b 	bl	80005f8 <__aeabi_dmul>
 8009d02:	4602      	mov	r2, r0
 8009d04:	460b      	mov	r3, r1
 8009d06:	4610      	mov	r0, r2
 8009d08:	4619      	mov	r1, r3
 8009d0a:	f04f 0200 	mov.w	r2, #0
 8009d0e:	4b7e      	ldr	r3, [pc, #504]	; (8009f08 <leg_conv+0x598>)
 8009d10:	f7f6 fabc 	bl	800028c <__adddf3>
 8009d14:	4602      	mov	r2, r0
 8009d16:	460b      	mov	r3, r1
 8009d18:	f04f 0000 	mov.w	r0, #0
 8009d1c:	497a      	ldr	r1, [pc, #488]	; (8009f08 <leg_conv+0x598>)
 8009d1e:	f7f6 fd95 	bl	800084c <__aeabi_ddiv>
 8009d22:	4602      	mov	r2, r0
 8009d24:	460b      	mov	r3, r1
 8009d26:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8009d2a:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8009d2e:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 8009d32:	f7f6 faab 	bl	800028c <__adddf3>
 8009d36:	4602      	mov	r2, r0
 8009d38:	460b      	mov	r3, r1
 8009d3a:	4610      	mov	r0, r2
 8009d3c:	4619      	mov	r1, r3
 8009d3e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009d42:	f7f6 fc59 	bl	80005f8 <__aeabi_dmul>
 8009d46:	4602      	mov	r2, r0
 8009d48:	460b      	mov	r3, r1
 8009d4a:	4610      	mov	r0, r2
 8009d4c:	4619      	mov	r1, r3
 8009d4e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009d52:	f7f6 fc51 	bl	80005f8 <__aeabi_dmul>
 8009d56:	4602      	mov	r2, r0
 8009d58:	460b      	mov	r3, r1
 8009d5a:	4690      	mov	r8, r2
 8009d5c:	4699      	mov	r9, r3
 8009d5e:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009d62:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009d66:	f7f6 fc47 	bl	80005f8 <__aeabi_dmul>
 8009d6a:	4602      	mov	r2, r0
 8009d6c:	460b      	mov	r3, r1
 8009d6e:	4610      	mov	r0, r2
 8009d70:	4619      	mov	r1, r3
 8009d72:	a363      	add	r3, pc, #396	; (adr r3, 8009f00 <leg_conv+0x590>)
 8009d74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d78:	f7f6 fc3e 	bl	80005f8 <__aeabi_dmul>
 8009d7c:	4602      	mov	r2, r0
 8009d7e:	460b      	mov	r3, r1
 8009d80:	4692      	mov	sl, r2
 8009d82:	469b      	mov	fp, r3
 8009d84:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009d88:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009d8c:	f7f6 fc34 	bl	80005f8 <__aeabi_dmul>
 8009d90:	4602      	mov	r2, r0
 8009d92:	460b      	mov	r3, r1
 8009d94:	4610      	mov	r0, r2
 8009d96:	4619      	mov	r1, r3
 8009d98:	a359      	add	r3, pc, #356	; (adr r3, 8009f00 <leg_conv+0x590>)
 8009d9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d9e:	f7f6 fc2b 	bl	80005f8 <__aeabi_dmul>
 8009da2:	4602      	mov	r2, r0
 8009da4:	460b      	mov	r3, r1
 8009da6:	4650      	mov	r0, sl
 8009da8:	4659      	mov	r1, fp
 8009daa:	f7f6 fa6f 	bl	800028c <__adddf3>
 8009dae:	4602      	mov	r2, r0
 8009db0:	460b      	mov	r3, r1
 8009db2:	4692      	mov	sl, r2
 8009db4:	469b      	mov	fp, r3
 8009db6:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8009dba:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8009dbe:	f7f6 fc1b 	bl	80005f8 <__aeabi_dmul>
 8009dc2:	4602      	mov	r2, r0
 8009dc4:	460b      	mov	r3, r1
 8009dc6:	4610      	mov	r0, r2
 8009dc8:	4619      	mov	r1, r3
 8009dca:	4602      	mov	r2, r0
 8009dcc:	460b      	mov	r3, r1
 8009dce:	f7f6 fa5d 	bl	800028c <__adddf3>
 8009dd2:	4602      	mov	r2, r0
 8009dd4:	460b      	mov	r3, r1
 8009dd6:	4650      	mov	r0, sl
 8009dd8:	4659      	mov	r1, fp
 8009dda:	f7f6 fa55 	bl	8000288 <__aeabi_dsub>
 8009dde:	4602      	mov	r2, r0
 8009de0:	460b      	mov	r3, r1
 8009de2:	4610      	mov	r0, r2
 8009de4:	4619      	mov	r1, r3
 8009de6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8009dea:	f7f6 fc05 	bl	80005f8 <__aeabi_dmul>
 8009dee:	4602      	mov	r2, r0
 8009df0:	460b      	mov	r3, r1
 8009df2:	4610      	mov	r0, r2
 8009df4:	4619      	mov	r1, r3
 8009df6:	f04f 0200 	mov.w	r2, #0
 8009dfa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009dfe:	f7f6 fd25 	bl	800084c <__aeabi_ddiv>
 8009e02:	4602      	mov	r2, r0
 8009e04:	460b      	mov	r3, r1
 8009e06:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8009e0a:	f7f6 fa3d 	bl	8000288 <__aeabi_dsub>
 8009e0e:	4602      	mov	r2, r0
 8009e10:	460b      	mov	r3, r1
 8009e12:	4610      	mov	r0, r2
 8009e14:	4619      	mov	r1, r3
 8009e16:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009e1a:	f7f6 fbed 	bl	80005f8 <__aeabi_dmul>
 8009e1e:	4602      	mov	r2, r0
 8009e20:	460b      	mov	r3, r1
 8009e22:	4640      	mov	r0, r8
 8009e24:	4649      	mov	r1, r9
 8009e26:	f7f6 fa31 	bl	800028c <__adddf3>
 8009e2a:	4602      	mov	r2, r0
 8009e2c:	460b      	mov	r3, r1
 8009e2e:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8009e32:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8009e36:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8009e3a:	f7f6 fa27 	bl	800028c <__adddf3>
 8009e3e:	4602      	mov	r2, r0
 8009e40:	460b      	mov	r3, r1
 8009e42:	4610      	mov	r0, r2
 8009e44:	4619      	mov	r1, r3
 8009e46:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009e4a:	f7f6 fbd5 	bl	80005f8 <__aeabi_dmul>
 8009e4e:	4602      	mov	r2, r0
 8009e50:	460b      	mov	r3, r1
 8009e52:	4610      	mov	r0, r2
 8009e54:	4619      	mov	r1, r3
 8009e56:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009e5a:	f7f6 fbcd 	bl	80005f8 <__aeabi_dmul>
 8009e5e:	4602      	mov	r2, r0
 8009e60:	460b      	mov	r3, r1
 8009e62:	4690      	mov	r8, r2
 8009e64:	4699      	mov	r9, r3
 8009e66:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009e6a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009e6e:	f7f6 fbc3 	bl	80005f8 <__aeabi_dmul>
 8009e72:	4602      	mov	r2, r0
 8009e74:	460b      	mov	r3, r1
 8009e76:	4610      	mov	r0, r2
 8009e78:	4619      	mov	r1, r3
 8009e7a:	a321      	add	r3, pc, #132	; (adr r3, 8009f00 <leg_conv+0x590>)
 8009e7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009e80:	f7f6 fbba 	bl	80005f8 <__aeabi_dmul>
 8009e84:	4602      	mov	r2, r0
 8009e86:	460b      	mov	r3, r1
 8009e88:	4692      	mov	sl, r2
 8009e8a:	469b      	mov	fp, r3
 8009e8c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009e90:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009e94:	f7f6 fbb0 	bl	80005f8 <__aeabi_dmul>
 8009e98:	4602      	mov	r2, r0
 8009e9a:	460b      	mov	r3, r1
 8009e9c:	4610      	mov	r0, r2
 8009e9e:	4619      	mov	r1, r3
 8009ea0:	a317      	add	r3, pc, #92	; (adr r3, 8009f00 <leg_conv+0x590>)
 8009ea2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ea6:	f7f6 fba7 	bl	80005f8 <__aeabi_dmul>
 8009eaa:	4602      	mov	r2, r0
 8009eac:	460b      	mov	r3, r1
 8009eae:	4650      	mov	r0, sl
 8009eb0:	4659      	mov	r1, fp
 8009eb2:	f7f6 f9eb 	bl	800028c <__adddf3>
 8009eb6:	4602      	mov	r2, r0
 8009eb8:	460b      	mov	r3, r1
 8009eba:	4692      	mov	sl, r2
 8009ebc:	469b      	mov	fp, r3
 8009ebe:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8009ec2:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8009ec6:	f7f6 fb97 	bl	80005f8 <__aeabi_dmul>
 8009eca:	4602      	mov	r2, r0
 8009ecc:	460b      	mov	r3, r1
 8009ece:	4610      	mov	r0, r2
 8009ed0:	4619      	mov	r1, r3
 8009ed2:	4602      	mov	r2, r0
 8009ed4:	460b      	mov	r3, r1
 8009ed6:	f7f6 f9d9 	bl	800028c <__adddf3>
 8009eda:	4602      	mov	r2, r0
 8009edc:	460b      	mov	r3, r1
 8009ede:	4650      	mov	r0, sl
 8009ee0:	4659      	mov	r1, fp
 8009ee2:	f7f6 f9d1 	bl	8000288 <__aeabi_dsub>
 8009ee6:	4602      	mov	r2, r0
 8009ee8:	460b      	mov	r3, r1
 8009eea:	4610      	mov	r0, r2
 8009eec:	4619      	mov	r1, r3
 8009eee:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8009ef2:	f7f6 fb81 	bl	80005f8 <__aeabi_dmul>
 8009ef6:	4602      	mov	r2, r0
 8009ef8:	460b      	mov	r3, r1
 8009efa:	e01b      	b.n	8009f34 <leg_conv+0x5c4>
 8009efc:	f3af 8000 	nop.w
 8009f00:	bc6a7efa 	.word	0xbc6a7efa
 8009f04:	3fa89374 	.word	0x3fa89374
 8009f08:	3ff00000 	.word	0x3ff00000
 8009f0c:	47ae147b 	.word	0x47ae147b
 8009f10:	3fb47ae1 	.word	0x3fb47ae1
 8009f14:	bc6a7efa 	.word	0xbc6a7efa
 8009f18:	3f989374 	.word	0x3f989374
 8009f1c:	5532617c 	.word	0x5532617c
 8009f20:	3fb92a30 	.word	0x3fb92a30
 8009f24:	663c74fb 	.word	0x663c74fb
 8009f28:	3f9e32a0 	.word	0x3f9e32a0
 8009f2c:	47ae147b 	.word	0x47ae147b
 8009f30:	3fc47ae1 	.word	0x3fc47ae1
 8009f34:	4610      	mov	r0, r2
 8009f36:	4619      	mov	r1, r3
 8009f38:	f04f 0200 	mov.w	r2, #0
 8009f3c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f40:	f7f6 fc84 	bl	800084c <__aeabi_ddiv>
 8009f44:	4602      	mov	r2, r0
 8009f46:	460b      	mov	r3, r1
 8009f48:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 8009f4c:	f7f6 f99c 	bl	8000288 <__aeabi_dsub>
 8009f50:	4602      	mov	r2, r0
 8009f52:	460b      	mov	r3, r1
 8009f54:	4610      	mov	r0, r2
 8009f56:	4619      	mov	r1, r3
 8009f58:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009f5c:	f7f6 fb4c 	bl	80005f8 <__aeabi_dmul>
 8009f60:	4602      	mov	r2, r0
 8009f62:	460b      	mov	r3, r1
 8009f64:	4640      	mov	r0, r8
 8009f66:	4649      	mov	r1, r9
 8009f68:	f7f6 f990 	bl	800028c <__adddf3>
 8009f6c:	4602      	mov	r2, r0
 8009f6e:	460b      	mov	r3, r1
 8009f70:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 8009f74:	a3f3      	add	r3, pc, #972	; (adr r3, 800a344 <leg_conv+0x9d4>)
 8009f76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f7a:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8009f7e:	f7f6 fb3b 	bl	80005f8 <__aeabi_dmul>
 8009f82:	4602      	mov	r2, r0
 8009f84:	460b      	mov	r3, r1
 8009f86:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 8009f8a:	f7f6 f97f 	bl	800028c <__adddf3>
 8009f8e:	4602      	mov	r2, r0
 8009f90:	460b      	mov	r3, r1
 8009f92:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 8009f96:	a3eb      	add	r3, pc, #940	; (adr r3, 800a344 <leg_conv+0x9d4>)
 8009f98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f9c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8009fa0:	f7f6 fb2a 	bl	80005f8 <__aeabi_dmul>
 8009fa4:	4602      	mov	r2, r0
 8009fa6:	460b      	mov	r3, r1
 8009fa8:	4610      	mov	r0, r2
 8009faa:	4619      	mov	r1, r3
 8009fac:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 8009fb0:	f7f6 f96c 	bl	800028c <__adddf3>
 8009fb4:	4602      	mov	r2, r0
 8009fb6:	460b      	mov	r3, r1
 8009fb8:	4610      	mov	r0, r2
 8009fba:	4619      	mov	r1, r3
 8009fbc:	a3e3      	add	r3, pc, #908	; (adr r3, 800a34c <leg_conv+0x9dc>)
 8009fbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009fc2:	f7f6 f961 	bl	8000288 <__aeabi_dsub>
 8009fc6:	4602      	mov	r2, r0
 8009fc8:	460b      	mov	r3, r1
 8009fca:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 8009fce:	f8d7 40c0 	ldr.w	r4, [r7, #192]	; 0xc0
 8009fd2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8009fd6:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8009fda:	a3da      	add	r3, pc, #872	; (adr r3, 800a344 <leg_conv+0x9d4>)
 8009fdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009fe0:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8009fe4:	f7f6 fb08 	bl	80005f8 <__aeabi_dmul>
 8009fe8:	4602      	mov	r2, r0
 8009fea:	460b      	mov	r3, r1
 8009fec:	4620      	mov	r0, r4
 8009fee:	4629      	mov	r1, r5
 8009ff0:	f7f6 f94a 	bl	8000288 <__aeabi_dsub>
 8009ff4:	4602      	mov	r2, r0
 8009ff6:	460b      	mov	r3, r1
 8009ff8:	4610      	mov	r0, r2
 8009ffa:	4619      	mov	r1, r3
 8009ffc:	a3d3      	add	r3, pc, #844	; (adr r3, 800a34c <leg_conv+0x9dc>)
 8009ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a002:	f7f6 f943 	bl	800028c <__adddf3>
 800a006:	4602      	mov	r2, r0
 800a008:	460b      	mov	r3, r1
 800a00a:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a00e:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a012:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a016:	f7f6 faef 	bl	80005f8 <__aeabi_dmul>
 800a01a:	4602      	mov	r2, r0
 800a01c:	460b      	mov	r3, r1
 800a01e:	e9c7 2338 	strd	r2, r3, [r7, #224]	; 0xe0
 800a022:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a026:	f04f 0000 	mov.w	r0, #0
 800a02a:	49c5      	ldr	r1, [pc, #788]	; (800a340 <leg_conv+0x9d0>)
 800a02c:	f7f6 fc0e 	bl	800084c <__aeabi_ddiv>
 800a030:	4602      	mov	r2, r0
 800a032:	460b      	mov	r3, r1
 800a034:	e9c7 2334 	strd	r2, r3, [r7, #208]	; 0xd0
 800a038:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a03c:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a040:	f7f6 fada 	bl	80005f8 <__aeabi_dmul>
 800a044:	4602      	mov	r2, r0
 800a046:	460b      	mov	r3, r1
 800a048:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a04c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800a050:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800a054:	f7f6 fad0 	bl	80005f8 <__aeabi_dmul>
 800a058:	4602      	mov	r2, r0
 800a05a:	460b      	mov	r3, r1
 800a05c:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800a060:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a064:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a068:	f7f6 fac6 	bl	80005f8 <__aeabi_dmul>
 800a06c:	4602      	mov	r2, r0
 800a06e:	460b      	mov	r3, r1
 800a070:	4610      	mov	r0, r2
 800a072:	4619      	mov	r1, r3
 800a074:	a3ae      	add	r3, pc, #696	; (adr r3, 800a330 <leg_conv+0x9c0>)
 800a076:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a07a:	f7f6 fabd 	bl	80005f8 <__aeabi_dmul>
 800a07e:	4602      	mov	r2, r0
 800a080:	460b      	mov	r3, r1
 800a082:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800a086:	f7f6 f8ff 	bl	8000288 <__aeabi_dsub>
 800a08a:	4602      	mov	r2, r0
 800a08c:	460b      	mov	r3, r1
 800a08e:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800a092:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800a096:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800a09a:	f7f6 faad 	bl	80005f8 <__aeabi_dmul>
 800a09e:	4602      	mov	r2, r0
 800a0a0:	460b      	mov	r3, r1
 800a0a2:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800a0a6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a0aa:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a0ae:	f7f6 faa3 	bl	80005f8 <__aeabi_dmul>
 800a0b2:	4602      	mov	r2, r0
 800a0b4:	460b      	mov	r3, r1
 800a0b6:	4610      	mov	r0, r2
 800a0b8:	4619      	mov	r1, r3
 800a0ba:	a39d      	add	r3, pc, #628	; (adr r3, 800a330 <leg_conv+0x9c0>)
 800a0bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a0c0:	f7f6 fa9a 	bl	80005f8 <__aeabi_dmul>
 800a0c4:	4602      	mov	r2, r0
 800a0c6:	460b      	mov	r3, r1
 800a0c8:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a0cc:	f7f6 f8dc 	bl	8000288 <__aeabi_dsub>
 800a0d0:	4602      	mov	r2, r0
 800a0d2:	460b      	mov	r3, r1
 800a0d4:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 800a0d8:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a0dc:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a0e0:	f7f6 fa8a 	bl	80005f8 <__aeabi_dmul>
 800a0e4:	4602      	mov	r2, r0
 800a0e6:	460b      	mov	r3, r1
 800a0e8:	4610      	mov	r0, r2
 800a0ea:	4619      	mov	r1, r3
 800a0ec:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a0f0:	f7f6 f8cc 	bl	800028c <__adddf3>
 800a0f4:	4602      	mov	r2, r0
 800a0f6:	460b      	mov	r3, r1
 800a0f8:	ec43 2b17 	vmov	d7, r2, r3
 800a0fc:	eeb0 0a47 	vmov.f32	s0, s14
 800a100:	eef0 0a67 	vmov.f32	s1, s15
 800a104:	f01a f9ca 	bl	802449c <sqrt>
 800a108:	ec53 2b10 	vmov	r2, r3, d0
 800a10c:	f04f 0000 	mov.w	r0, #0
 800a110:	498b      	ldr	r1, [pc, #556]	; (800a340 <leg_conv+0x9d0>)
 800a112:	f7f6 fb9b 	bl	800084c <__aeabi_ddiv>
 800a116:	4602      	mov	r2, r0
 800a118:	460b      	mov	r3, r1
 800a11a:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800a11e:	f7f6 fa6b 	bl	80005f8 <__aeabi_dmul>
 800a122:	4602      	mov	r2, r0
 800a124:	460b      	mov	r3, r1
 800a126:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 800a12a:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a12e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800a132:	f7f6 fa61 	bl	80005f8 <__aeabi_dmul>
 800a136:	4602      	mov	r2, r0
 800a138:	460b      	mov	r3, r1
 800a13a:	4614      	mov	r4, r2
 800a13c:	461d      	mov	r5, r3
 800a13e:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a142:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a146:	f7f6 f8a1 	bl	800028c <__adddf3>
 800a14a:	4602      	mov	r2, r0
 800a14c:	460b      	mov	r3, r1
 800a14e:	f04f 0000 	mov.w	r0, #0
 800a152:	497b      	ldr	r1, [pc, #492]	; (800a340 <leg_conv+0x9d0>)
 800a154:	f7f6 fb7a 	bl	800084c <__aeabi_ddiv>
 800a158:	4602      	mov	r2, r0
 800a15a:	460b      	mov	r3, r1
 800a15c:	4620      	mov	r0, r4
 800a15e:	4629      	mov	r1, r5
 800a160:	f7f6 fa4a 	bl	80005f8 <__aeabi_dmul>
 800a164:	4602      	mov	r2, r0
 800a166:	460b      	mov	r3, r1
 800a168:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 800a16c:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a170:	f04f 0000 	mov.w	r0, #0
 800a174:	4972      	ldr	r1, [pc, #456]	; (800a340 <leg_conv+0x9d0>)
 800a176:	f7f6 fb69 	bl	800084c <__aeabi_ddiv>
 800a17a:	4602      	mov	r2, r0
 800a17c:	460b      	mov	r3, r1
 800a17e:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a182:	f7f6 fa39 	bl	80005f8 <__aeabi_dmul>
 800a186:	4602      	mov	r2, r0
 800a188:	460b      	mov	r3, r1
 800a18a:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a18e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a192:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a196:	f7f6 fa2f 	bl	80005f8 <__aeabi_dmul>
 800a19a:	4602      	mov	r2, r0
 800a19c:	460b      	mov	r3, r1
 800a19e:	4610      	mov	r0, r2
 800a1a0:	4619      	mov	r1, r3
 800a1a2:	4602      	mov	r2, r0
 800a1a4:	460b      	mov	r3, r1
 800a1a6:	f7f6 f871 	bl	800028c <__adddf3>
 800a1aa:	4602      	mov	r2, r0
 800a1ac:	460b      	mov	r3, r1
 800a1ae:	4614      	mov	r4, r2
 800a1b0:	461d      	mov	r5, r3
 800a1b2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a1b6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a1ba:	f7f6 fa1d 	bl	80005f8 <__aeabi_dmul>
 800a1be:	4602      	mov	r2, r0
 800a1c0:	460b      	mov	r3, r1
 800a1c2:	4610      	mov	r0, r2
 800a1c4:	4619      	mov	r1, r3
 800a1c6:	4602      	mov	r2, r0
 800a1c8:	460b      	mov	r3, r1
 800a1ca:	f7f6 f85f 	bl	800028c <__adddf3>
 800a1ce:	4602      	mov	r2, r0
 800a1d0:	460b      	mov	r3, r1
 800a1d2:	4620      	mov	r0, r4
 800a1d4:	4629      	mov	r1, r5
 800a1d6:	f7f6 f857 	bl	8000288 <__aeabi_dsub>
 800a1da:	4602      	mov	r2, r0
 800a1dc:	460b      	mov	r3, r1
 800a1de:	4610      	mov	r0, r2
 800a1e0:	4619      	mov	r1, r3
 800a1e2:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800a1e6:	f7f6 fa07 	bl	80005f8 <__aeabi_dmul>
 800a1ea:	4602      	mov	r2, r0
 800a1ec:	460b      	mov	r3, r1
 800a1ee:	4610      	mov	r0, r2
 800a1f0:	4619      	mov	r1, r3
 800a1f2:	f04f 0200 	mov.w	r2, #0
 800a1f6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a1fa:	f7f6 fb27 	bl	800084c <__aeabi_ddiv>
 800a1fe:	4602      	mov	r2, r0
 800a200:	460b      	mov	r3, r1
 800a202:	4614      	mov	r4, r2
 800a204:	461d      	mov	r5, r3
 800a206:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a20a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 800a20e:	f7f6 f9f3 	bl	80005f8 <__aeabi_dmul>
 800a212:	4602      	mov	r2, r0
 800a214:	460b      	mov	r3, r1
 800a216:	4690      	mov	r8, r2
 800a218:	4699      	mov	r9, r3
 800a21a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a21e:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a222:	f7f6 f9e9 	bl	80005f8 <__aeabi_dmul>
 800a226:	4602      	mov	r2, r0
 800a228:	460b      	mov	r3, r1
 800a22a:	4640      	mov	r0, r8
 800a22c:	4649      	mov	r1, r9
 800a22e:	f7f6 f82b 	bl	8000288 <__aeabi_dsub>
 800a232:	4602      	mov	r2, r0
 800a234:	460b      	mov	r3, r1
 800a236:	4610      	mov	r0, r2
 800a238:	4619      	mov	r1, r3
 800a23a:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a23e:	f7f6 f9db 	bl	80005f8 <__aeabi_dmul>
 800a242:	4602      	mov	r2, r0
 800a244:	460b      	mov	r3, r1
 800a246:	4620      	mov	r0, r4
 800a248:	4629      	mov	r1, r5
 800a24a:	f7f6 f81d 	bl	8000288 <__aeabi_dsub>
 800a24e:	4602      	mov	r2, r0
 800a250:	460b      	mov	r3, r1
 800a252:	6879      	ldr	r1, [r7, #4]
 800a254:	e9c1 2300 	strd	r2, r3, [r1]
 800a258:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a25c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a260:	f7f6 f9ca 	bl	80005f8 <__aeabi_dmul>
 800a264:	4602      	mov	r2, r0
 800a266:	460b      	mov	r3, r1
 800a268:	4610      	mov	r0, r2
 800a26a:	4619      	mov	r1, r3
 800a26c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a270:	f7f6 f9c2 	bl	80005f8 <__aeabi_dmul>
 800a274:	4602      	mov	r2, r0
 800a276:	460b      	mov	r3, r1
 800a278:	4610      	mov	r0, r2
 800a27a:	4619      	mov	r1, r3
 800a27c:	a32e      	add	r3, pc, #184	; (adr r3, 800a338 <leg_conv+0x9c8>)
 800a27e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a282:	f7f6 f9b9 	bl	80005f8 <__aeabi_dmul>
 800a286:	4602      	mov	r2, r0
 800a288:	460b      	mov	r3, r1
 800a28a:	4614      	mov	r4, r2
 800a28c:	461d      	mov	r5, r3
 800a28e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a292:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a296:	f7f6 f9af 	bl	80005f8 <__aeabi_dmul>
 800a29a:	4602      	mov	r2, r0
 800a29c:	460b      	mov	r3, r1
 800a29e:	4610      	mov	r0, r2
 800a2a0:	4619      	mov	r1, r3
 800a2a2:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a2a6:	f7f6 f9a7 	bl	80005f8 <__aeabi_dmul>
 800a2aa:	4602      	mov	r2, r0
 800a2ac:	460b      	mov	r3, r1
 800a2ae:	4610      	mov	r0, r2
 800a2b0:	4619      	mov	r1, r3
 800a2b2:	a321      	add	r3, pc, #132	; (adr r3, 800a338 <leg_conv+0x9c8>)
 800a2b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a2b8:	f7f6 f99e 	bl	80005f8 <__aeabi_dmul>
 800a2bc:	4602      	mov	r2, r0
 800a2be:	460b      	mov	r3, r1
 800a2c0:	4620      	mov	r0, r4
 800a2c2:	4629      	mov	r1, r5
 800a2c4:	f7f5 ffe0 	bl	8000288 <__aeabi_dsub>
 800a2c8:	4602      	mov	r2, r0
 800a2ca:	460b      	mov	r3, r1
 800a2cc:	4610      	mov	r0, r2
 800a2ce:	4619      	mov	r1, r3
 800a2d0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800a2d4:	f7f6 f990 	bl	80005f8 <__aeabi_dmul>
 800a2d8:	4602      	mov	r2, r0
 800a2da:	460b      	mov	r3, r1
 800a2dc:	4610      	mov	r0, r2
 800a2de:	4619      	mov	r1, r3
 800a2e0:	f04f 0200 	mov.w	r2, #0
 800a2e4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a2e8:	f7f6 fab0 	bl	800084c <__aeabi_ddiv>
 800a2ec:	4602      	mov	r2, r0
 800a2ee:	460b      	mov	r3, r1
 800a2f0:	4690      	mov	r8, r2
 800a2f2:	4699      	mov	r9, r3
 800a2f4:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a2f8:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a2fc:	f7f6 f97c 	bl	80005f8 <__aeabi_dmul>
 800a300:	4602      	mov	r2, r0
 800a302:	460b      	mov	r3, r1
 800a304:	4610      	mov	r0, r2
 800a306:	4619      	mov	r1, r3
 800a308:	a309      	add	r3, pc, #36	; (adr r3, 800a330 <leg_conv+0x9c0>)
 800a30a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a30e:	f7f6 f973 	bl	80005f8 <__aeabi_dmul>
 800a312:	4602      	mov	r2, r0
 800a314:	460b      	mov	r3, r1
 800a316:	f04f 0000 	mov.w	r0, #0
 800a31a:	f04f 0100 	mov.w	r1, #0
 800a31e:	f7f5 ffb3 	bl	8000288 <__aeabi_dsub>
 800a322:	4602      	mov	r2, r0
 800a324:	460b      	mov	r3, r1
 800a326:	4610      	mov	r0, r2
 800a328:	4619      	mov	r1, r3
 800a32a:	e013      	b.n	800a354 <leg_conv+0x9e4>
 800a32c:	f3af 8000 	nop.w
 800a330:	33333333 	.word	0x33333333
 800a334:	3fd33333 	.word	0x3fd33333
 800a338:	33333333 	.word	0x33333333
 800a33c:	3fe33333 	.word	0x3fe33333
 800a340:	3ff00000 	.word	0x3ff00000
 800a344:	33333333 	.word	0x33333333
 800a348:	3fc33333 	.word	0x3fc33333
 800a34c:	5532617c 	.word	0x5532617c
 800a350:	3fa92a30 	.word	0x3fa92a30
 800a354:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800a358:	f7f6 f94e 	bl	80005f8 <__aeabi_dmul>
 800a35c:	4602      	mov	r2, r0
 800a35e:	460b      	mov	r3, r1
 800a360:	4614      	mov	r4, r2
 800a362:	461d      	mov	r5, r3
 800a364:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a368:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a36c:	f7f6 f944 	bl	80005f8 <__aeabi_dmul>
 800a370:	4602      	mov	r2, r0
 800a372:	460b      	mov	r3, r1
 800a374:	4610      	mov	r0, r2
 800a376:	4619      	mov	r1, r3
 800a378:	a319      	add	r3, pc, #100	; (adr r3, 800a3e0 <leg_conv+0xa70>)
 800a37a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a37e:	f7f6 f93b 	bl	80005f8 <__aeabi_dmul>
 800a382:	4602      	mov	r2, r0
 800a384:	460b      	mov	r3, r1
 800a386:	4610      	mov	r0, r2
 800a388:	4619      	mov	r1, r3
 800a38a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a38e:	f7f6 f933 	bl	80005f8 <__aeabi_dmul>
 800a392:	4602      	mov	r2, r0
 800a394:	460b      	mov	r3, r1
 800a396:	4620      	mov	r0, r4
 800a398:	4629      	mov	r1, r5
 800a39a:	f7f5 ff77 	bl	800028c <__adddf3>
 800a39e:	4602      	mov	r2, r0
 800a3a0:	460b      	mov	r3, r1
 800a3a2:	4610      	mov	r0, r2
 800a3a4:	4619      	mov	r1, r3
 800a3a6:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a3aa:	f7f6 f925 	bl	80005f8 <__aeabi_dmul>
 800a3ae:	4602      	mov	r2, r0
 800a3b0:	460b      	mov	r3, r1
 800a3b2:	4610      	mov	r0, r2
 800a3b4:	4619      	mov	r1, r3
 800a3b6:	687b      	ldr	r3, [r7, #4]
 800a3b8:	f103 0408 	add.w	r4, r3, #8
 800a3bc:	4602      	mov	r2, r0
 800a3be:	460b      	mov	r3, r1
 800a3c0:	4640      	mov	r0, r8
 800a3c2:	4649      	mov	r1, r9
 800a3c4:	f7f5 ff62 	bl	800028c <__adddf3>
 800a3c8:	4602      	mov	r2, r0
 800a3ca:	460b      	mov	r3, r1
 800a3cc:	e9c4 2300 	strd	r2, r3, [r4]
 800a3d0:	bf00      	nop
 800a3d2:	37e8      	adds	r7, #232	; 0xe8
 800a3d4:	46bd      	mov	sp, r7
 800a3d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800a3da:	bf00      	nop
 800a3dc:	f3af 8000 	nop.w
 800a3e0:	33333333 	.word	0x33333333
 800a3e4:	3fd33333 	.word	0x3fd33333

0800a3e8 <leg_spd>:
 800a3e8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800a3ec:	b0be      	sub	sp, #248	; 0xf8
 800a3ee:	af00      	add	r7, sp, #0
 800a3f0:	ed87 0b0c 	vstr	d0, [r7, #48]	; 0x30
 800a3f4:	ed87 1b0a 	vstr	d1, [r7, #40]	; 0x28
 800a3f8:	ed87 2b08 	vstr	d2, [r7, #32]
 800a3fc:	ed87 3b06 	vstr	d3, [r7, #24]
 800a400:	6178      	str	r0, [r7, #20]
 800a402:	ed97 0b08 	vldr	d0, [r7, #32]
 800a406:	f019 fe6b 	bl	80240e0 <cos>
 800a40a:	ed87 0b3c 	vstr	d0, [r7, #240]	; 0xf0
 800a40e:	ed97 0b06 	vldr	d0, [r7, #24]
 800a412:	f019 fe65 	bl	80240e0 <cos>
 800a416:	ed87 0b3a 	vstr	d0, [r7, #232]	; 0xe8
 800a41a:	ed97 0b08 	vldr	d0, [r7, #32]
 800a41e:	f019 ff3f 	bl	80242a0 <sin>
 800a422:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
 800a426:	ed97 0b06 	vldr	d0, [r7, #24]
 800a42a:	f019 ff39 	bl	80242a0 <sin>
 800a42e:	ed87 0b36 	vstr	d0, [r7, #216]	; 0xd8
 800a432:	f20f 5350 	addw	r3, pc, #1360	; 0x550
 800a436:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a43a:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a43e:	f7f6 f8db 	bl	80005f8 <__aeabi_dmul>
 800a442:	4602      	mov	r2, r0
 800a444:	460b      	mov	r3, r1
 800a446:	e9c7 2334 	strd	r2, r3, [r7, #208]	; 0xd0
 800a44a:	f20f 5338 	addw	r3, pc, #1336	; 0x538
 800a44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a452:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a456:	f7f6 f8cf 	bl	80005f8 <__aeabi_dmul>
 800a45a:	4602      	mov	r2, r0
 800a45c:	460b      	mov	r3, r1
 800a45e:	e9c7 2332 	strd	r2, r3, [r7, #200]	; 0xc8
 800a462:	f20f 5328 	addw	r3, pc, #1320	; 0x528
 800a466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a46a:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a46e:	f7f6 f8c3 	bl	80005f8 <__aeabi_dmul>
 800a472:	4602      	mov	r2, r0
 800a474:	460b      	mov	r3, r1
 800a476:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 800a47a:	f20f 5310 	addw	r3, pc, #1296	; 0x510
 800a47e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a482:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a486:	f7f6 f8b7 	bl	80005f8 <__aeabi_dmul>
 800a48a:	4602      	mov	r2, r0
 800a48c:	460b      	mov	r3, r1
 800a48e:	e9c7 232e 	strd	r2, r3, [r7, #184]	; 0xb8
 800a492:	f20f 43f8 	addw	r3, pc, #1272	; 0x4f8
 800a496:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a49a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a49e:	f7f6 f8ab 	bl	80005f8 <__aeabi_dmul>
 800a4a2:	4602      	mov	r2, r0
 800a4a4:	460b      	mov	r3, r1
 800a4a6:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 800a4aa:	f20f 43e0 	addw	r3, pc, #1248	; 0x4e0
 800a4ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4b2:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a4b6:	f7f6 f89f 	bl	80005f8 <__aeabi_dmul>
 800a4ba:	4602      	mov	r2, r0
 800a4bc:	460b      	mov	r3, r1
 800a4be:	e9c7 232a 	strd	r2, r3, [r7, #168]	; 0xa8
 800a4c2:	f20f 43c0 	addw	r3, pc, #1216	; 0x4c0
 800a4c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4ca:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a4ce:	f7f6 f893 	bl	80005f8 <__aeabi_dmul>
 800a4d2:	4602      	mov	r2, r0
 800a4d4:	460b      	mov	r3, r1
 800a4d6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800a4da:	f7f5 fed5 	bl	8000288 <__aeabi_dsub>
 800a4de:	4602      	mov	r2, r0
 800a4e0:	460b      	mov	r3, r1
 800a4e2:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a4e6:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	; 0xa8
 800a4ea:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800a4ee:	f7f5 fecb 	bl	8000288 <__aeabi_dsub>
 800a4f2:	4602      	mov	r2, r0
 800a4f4:	460b      	mov	r3, r1
 800a4f6:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
 800a4fa:	f20f 4388 	addw	r3, pc, #1160	; 0x488
 800a4fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a502:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a506:	f7f6 f877 	bl	80005f8 <__aeabi_dmul>
 800a50a:	4602      	mov	r2, r0
 800a50c:	460b      	mov	r3, r1
 800a50e:	4610      	mov	r0, r2
 800a510:	4619      	mov	r1, r3
 800a512:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800a516:	f7f5 feb7 	bl	8000288 <__aeabi_dsub>
 800a51a:	4602      	mov	r2, r0
 800a51c:	460b      	mov	r3, r1
 800a51e:	4610      	mov	r0, r2
 800a520:	4619      	mov	r1, r3
 800a522:	f20f 4370 	addw	r3, pc, #1136	; 0x470
 800a526:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a52a:	f7f5 feaf 	bl	800028c <__adddf3>
 800a52e:	4602      	mov	r2, r0
 800a530:	460b      	mov	r3, r1
 800a532:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a536:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800a53a:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a53e:	f7f5 fea3 	bl	8000288 <__aeabi_dsub>
 800a542:	4602      	mov	r2, r0
 800a544:	460b      	mov	r3, r1
 800a546:	4610      	mov	r0, r2
 800a548:	4619      	mov	r1, r3
 800a54a:	f20f 4350 	addw	r3, pc, #1104	; 0x450
 800a54e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a552:	f7f5 fe9b 	bl	800028c <__adddf3>
 800a556:	4602      	mov	r2, r0
 800a558:	460b      	mov	r3, r1
 800a55a:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88
 800a55e:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a562:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a566:	f7f6 f847 	bl	80005f8 <__aeabi_dmul>
 800a56a:	4602      	mov	r2, r0
 800a56c:	460b      	mov	r3, r1
 800a56e:	4614      	mov	r4, r2
 800a570:	461d      	mov	r5, r3
 800a572:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a576:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a57a:	f7f6 f83d 	bl	80005f8 <__aeabi_dmul>
 800a57e:	4602      	mov	r2, r0
 800a580:	460b      	mov	r3, r1
 800a582:	4620      	mov	r0, r4
 800a584:	4629      	mov	r1, r5
 800a586:	f7f5 fe81 	bl	800028c <__adddf3>
 800a58a:	4602      	mov	r2, r0
 800a58c:	460b      	mov	r3, r1
 800a58e:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 800a592:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a596:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a59a:	f7f6 f82d 	bl	80005f8 <__aeabi_dmul>
 800a59e:	4602      	mov	r2, r0
 800a5a0:	460b      	mov	r3, r1
 800a5a2:	4610      	mov	r0, r2
 800a5a4:	4619      	mov	r1, r3
 800a5a6:	a3ff      	add	r3, pc, #1020	; (adr r3, 800a9a4 <leg_spd+0x5bc>)
 800a5a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5ac:	f7f6 f824 	bl	80005f8 <__aeabi_dmul>
 800a5b0:	4602      	mov	r2, r0
 800a5b2:	460b      	mov	r3, r1
 800a5b4:	4614      	mov	r4, r2
 800a5b6:	461d      	mov	r5, r3
 800a5b8:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a5bc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a5c0:	f7f6 f81a 	bl	80005f8 <__aeabi_dmul>
 800a5c4:	4602      	mov	r2, r0
 800a5c6:	460b      	mov	r3, r1
 800a5c8:	4610      	mov	r0, r2
 800a5ca:	4619      	mov	r1, r3
 800a5cc:	a3f5      	add	r3, pc, #980	; (adr r3, 800a9a4 <leg_spd+0x5bc>)
 800a5ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5d2:	f7f6 f811 	bl	80005f8 <__aeabi_dmul>
 800a5d6:	4602      	mov	r2, r0
 800a5d8:	460b      	mov	r3, r1
 800a5da:	4620      	mov	r0, r4
 800a5dc:	4629      	mov	r1, r5
 800a5de:	f7f5 fe55 	bl	800028c <__adddf3>
 800a5e2:	4602      	mov	r2, r0
 800a5e4:	460b      	mov	r3, r1
 800a5e6:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 800a5ea:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a5ee:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a5f2:	f7f6 f801 	bl	80005f8 <__aeabi_dmul>
 800a5f6:	4602      	mov	r2, r0
 800a5f8:	460b      	mov	r3, r1
 800a5fa:	4610      	mov	r0, r2
 800a5fc:	4619      	mov	r1, r3
 800a5fe:	a3e9      	add	r3, pc, #932	; (adr r3, 800a9a4 <leg_spd+0x5bc>)
 800a600:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a604:	f7f5 fff8 	bl	80005f8 <__aeabi_dmul>
 800a608:	4602      	mov	r2, r0
 800a60a:	460b      	mov	r3, r1
 800a60c:	4614      	mov	r4, r2
 800a60e:	461d      	mov	r5, r3
 800a610:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a614:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a618:	f7f5 ffee 	bl	80005f8 <__aeabi_dmul>
 800a61c:	4602      	mov	r2, r0
 800a61e:	460b      	mov	r3, r1
 800a620:	4610      	mov	r0, r2
 800a622:	4619      	mov	r1, r3
 800a624:	a3df      	add	r3, pc, #892	; (adr r3, 800a9a4 <leg_spd+0x5bc>)
 800a626:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a62a:	f7f5 ffe5 	bl	80005f8 <__aeabi_dmul>
 800a62e:	4602      	mov	r2, r0
 800a630:	460b      	mov	r3, r1
 800a632:	4620      	mov	r0, r4
 800a634:	4629      	mov	r1, r5
 800a636:	f7f5 fe29 	bl	800028c <__adddf3>
 800a63a:	4602      	mov	r2, r0
 800a63c:	460b      	mov	r3, r1
 800a63e:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 800a642:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a646:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 800a64a:	f7f5 fe1f 	bl	800028c <__adddf3>
 800a64e:	4602      	mov	r2, r0
 800a650:	460b      	mov	r3, r1
 800a652:	f04f 0000 	mov.w	r0, #0
 800a656:	49ca      	ldr	r1, [pc, #808]	; (800a980 <leg_spd+0x598>)
 800a658:	f7f6 f8f8 	bl	800084c <__aeabi_ddiv>
 800a65c:	4602      	mov	r2, r0
 800a65e:	460b      	mov	r3, r1
 800a660:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 800a664:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a668:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a66c:	f7f5 ffc4 	bl	80005f8 <__aeabi_dmul>
 800a670:	4602      	mov	r2, r0
 800a672:	460b      	mov	r3, r1
 800a674:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800a678:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800a67c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800a680:	f7f5 ffba 	bl	80005f8 <__aeabi_dmul>
 800a684:	4602      	mov	r2, r0
 800a686:	460b      	mov	r3, r1
 800a688:	4614      	mov	r4, r2
 800a68a:	461d      	mov	r5, r3
 800a68c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800a690:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 800a694:	f7f5 ffb0 	bl	80005f8 <__aeabi_dmul>
 800a698:	4602      	mov	r2, r0
 800a69a:	460b      	mov	r3, r1
 800a69c:	4620      	mov	r0, r4
 800a69e:	4629      	mov	r1, r5
 800a6a0:	f7f5 fdf4 	bl	800028c <__adddf3>
 800a6a4:	4602      	mov	r2, r0
 800a6a6:	460b      	mov	r3, r1
 800a6a8:	4614      	mov	r4, r2
 800a6aa:	461d      	mov	r5, r3
 800a6ac:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a6b0:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a6b4:	f7f5 ffa0 	bl	80005f8 <__aeabi_dmul>
 800a6b8:	4602      	mov	r2, r0
 800a6ba:	460b      	mov	r3, r1
 800a6bc:	4620      	mov	r0, r4
 800a6be:	4629      	mov	r1, r5
 800a6c0:	f7f5 fde2 	bl	8000288 <__aeabi_dsub>
 800a6c4:	4602      	mov	r2, r0
 800a6c6:	460b      	mov	r3, r1
 800a6c8:	ec43 2b17 	vmov	d7, r2, r3
 800a6cc:	eeb0 0a47 	vmov.f32	s0, s14
 800a6d0:	eef0 0a67 	vmov.f32	s1, s15
 800a6d4:	f019 fee2 	bl	802449c <sqrt>
 800a6d8:	ed87 0b16 	vstr	d0, [r7, #88]	; 0x58
 800a6dc:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a6e0:	f04f 0000 	mov.w	r0, #0
 800a6e4:	49a6      	ldr	r1, [pc, #664]	; (800a980 <leg_spd+0x598>)
 800a6e6:	f7f6 f8b1 	bl	800084c <__aeabi_ddiv>
 800a6ea:	4602      	mov	r2, r0
 800a6ec:	460b      	mov	r3, r1
 800a6ee:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800a6f2:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a6f6:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 800a6fa:	f7f5 fdc5 	bl	8000288 <__aeabi_dsub>
 800a6fe:	4602      	mov	r2, r0
 800a700:	460b      	mov	r3, r1
 800a702:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800a706:	f7f5 fdc1 	bl	800028c <__adddf3>
 800a70a:	4602      	mov	r2, r0
 800a70c:	460b      	mov	r3, r1
 800a70e:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a712:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a716:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a71a:	f7f5 ff6d 	bl	80005f8 <__aeabi_dmul>
 800a71e:	4602      	mov	r2, r0
 800a720:	460b      	mov	r3, r1
 800a722:	ec43 2b17 	vmov	d7, r2, r3
 800a726:	eeb0 0a47 	vmov.f32	s0, s14
 800a72a:	eef0 0a67 	vmov.f32	s1, s15
 800a72e:	f019 fb37 	bl	8023da0 <atan>
 800a732:	ec51 0b10 	vmov	r0, r1, d0
 800a736:	4602      	mov	r2, r0
 800a738:	460b      	mov	r3, r1
 800a73a:	f7f5 fda7 	bl	800028c <__adddf3>
 800a73e:	4602      	mov	r2, r0
 800a740:	460b      	mov	r3, r1
 800a742:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a746:	ed97 0b28 	vldr	d0, [r7, #160]	; 0xa0
 800a74a:	f019 fcc9 	bl	80240e0 <cos>
 800a74e:	ed87 0b12 	vstr	d0, [r7, #72]	; 0x48
 800a752:	ed97 0b28 	vldr	d0, [r7, #160]	; 0xa0
 800a756:	f019 fda3 	bl	80242a0 <sin>
 800a75a:	ed87 0b10 	vstr	d0, [r7, #64]	; 0x40
 800a75e:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a762:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a766:	f7f5 ff47 	bl	80005f8 <__aeabi_dmul>
 800a76a:	4602      	mov	r2, r0
 800a76c:	460b      	mov	r3, r1
 800a76e:	4610      	mov	r0, r2
 800a770:	4619      	mov	r1, r3
 800a772:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a776:	f7f5 ff3f 	bl	80005f8 <__aeabi_dmul>
 800a77a:	4602      	mov	r2, r0
 800a77c:	460b      	mov	r3, r1
 800a77e:	4610      	mov	r0, r2
 800a780:	4619      	mov	r1, r3
 800a782:	f04f 0200 	mov.w	r2, #0
 800a786:	4b7e      	ldr	r3, [pc, #504]	; (800a980 <leg_spd+0x598>)
 800a788:	f7f5 fd80 	bl	800028c <__adddf3>
 800a78c:	4602      	mov	r2, r0
 800a78e:	460b      	mov	r3, r1
 800a790:	f04f 0000 	mov.w	r0, #0
 800a794:	497a      	ldr	r1, [pc, #488]	; (800a980 <leg_spd+0x598>)
 800a796:	f7f6 f859 	bl	800084c <__aeabi_ddiv>
 800a79a:	4602      	mov	r2, r0
 800a79c:	460b      	mov	r3, r1
 800a79e:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 800a7a2:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800a7a6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800a7aa:	f7f5 fd6f 	bl	800028c <__adddf3>
 800a7ae:	4602      	mov	r2, r0
 800a7b0:	460b      	mov	r3, r1
 800a7b2:	4610      	mov	r0, r2
 800a7b4:	4619      	mov	r1, r3
 800a7b6:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a7ba:	f7f5 ff1d 	bl	80005f8 <__aeabi_dmul>
 800a7be:	4602      	mov	r2, r0
 800a7c0:	460b      	mov	r3, r1
 800a7c2:	4610      	mov	r0, r2
 800a7c4:	4619      	mov	r1, r3
 800a7c6:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a7ca:	f7f5 ff15 	bl	80005f8 <__aeabi_dmul>
 800a7ce:	4602      	mov	r2, r0
 800a7d0:	460b      	mov	r3, r1
 800a7d2:	4690      	mov	r8, r2
 800a7d4:	4699      	mov	r9, r3
 800a7d6:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800a7da:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a7de:	f7f5 ff0b 	bl	80005f8 <__aeabi_dmul>
 800a7e2:	4602      	mov	r2, r0
 800a7e4:	460b      	mov	r3, r1
 800a7e6:	4610      	mov	r0, r2
 800a7e8:	4619      	mov	r1, r3
 800a7ea:	a363      	add	r3, pc, #396	; (adr r3, 800a978 <leg_spd+0x590>)
 800a7ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7f0:	f7f5 ff02 	bl	80005f8 <__aeabi_dmul>
 800a7f4:	4602      	mov	r2, r0
 800a7f6:	460b      	mov	r3, r1
 800a7f8:	4614      	mov	r4, r2
 800a7fa:	461d      	mov	r5, r3
 800a7fc:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800a800:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a804:	f7f5 fef8 	bl	80005f8 <__aeabi_dmul>
 800a808:	4602      	mov	r2, r0
 800a80a:	460b      	mov	r3, r1
 800a80c:	4610      	mov	r0, r2
 800a80e:	4619      	mov	r1, r3
 800a810:	a359      	add	r3, pc, #356	; (adr r3, 800a978 <leg_spd+0x590>)
 800a812:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a816:	f7f5 feef 	bl	80005f8 <__aeabi_dmul>
 800a81a:	4602      	mov	r2, r0
 800a81c:	460b      	mov	r3, r1
 800a81e:	4620      	mov	r0, r4
 800a820:	4629      	mov	r1, r5
 800a822:	f7f5 fd33 	bl	800028c <__adddf3>
 800a826:	4602      	mov	r2, r0
 800a828:	460b      	mov	r3, r1
 800a82a:	4614      	mov	r4, r2
 800a82c:	461d      	mov	r5, r3
 800a82e:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800a832:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a836:	f7f5 fedf 	bl	80005f8 <__aeabi_dmul>
 800a83a:	4602      	mov	r2, r0
 800a83c:	460b      	mov	r3, r1
 800a83e:	4610      	mov	r0, r2
 800a840:	4619      	mov	r1, r3
 800a842:	4602      	mov	r2, r0
 800a844:	460b      	mov	r3, r1
 800a846:	f7f5 fd21 	bl	800028c <__adddf3>
 800a84a:	4602      	mov	r2, r0
 800a84c:	460b      	mov	r3, r1
 800a84e:	4620      	mov	r0, r4
 800a850:	4629      	mov	r1, r5
 800a852:	f7f5 fd19 	bl	8000288 <__aeabi_dsub>
 800a856:	4602      	mov	r2, r0
 800a858:	460b      	mov	r3, r1
 800a85a:	4610      	mov	r0, r2
 800a85c:	4619      	mov	r1, r3
 800a85e:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800a862:	f7f5 fec9 	bl	80005f8 <__aeabi_dmul>
 800a866:	4602      	mov	r2, r0
 800a868:	460b      	mov	r3, r1
 800a86a:	4610      	mov	r0, r2
 800a86c:	4619      	mov	r1, r3
 800a86e:	f04f 0200 	mov.w	r2, #0
 800a872:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a876:	f7f5 ffe9 	bl	800084c <__aeabi_ddiv>
 800a87a:	4602      	mov	r2, r0
 800a87c:	460b      	mov	r3, r1
 800a87e:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800a882:	f7f5 fd01 	bl	8000288 <__aeabi_dsub>
 800a886:	4602      	mov	r2, r0
 800a888:	460b      	mov	r3, r1
 800a88a:	4610      	mov	r0, r2
 800a88c:	4619      	mov	r1, r3
 800a88e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a892:	f7f5 feb1 	bl	80005f8 <__aeabi_dmul>
 800a896:	4602      	mov	r2, r0
 800a898:	460b      	mov	r3, r1
 800a89a:	4640      	mov	r0, r8
 800a89c:	4649      	mov	r1, r9
 800a89e:	f7f5 fcf5 	bl	800028c <__adddf3>
 800a8a2:	4602      	mov	r2, r0
 800a8a4:	460b      	mov	r3, r1
 800a8a6:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 800a8aa:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800a8ae:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 800a8b2:	f7f5 fceb 	bl	800028c <__adddf3>
 800a8b6:	4602      	mov	r2, r0
 800a8b8:	460b      	mov	r3, r1
 800a8ba:	4610      	mov	r0, r2
 800a8bc:	4619      	mov	r1, r3
 800a8be:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a8c2:	f7f5 fe99 	bl	80005f8 <__aeabi_dmul>
 800a8c6:	4602      	mov	r2, r0
 800a8c8:	460b      	mov	r3, r1
 800a8ca:	4610      	mov	r0, r2
 800a8cc:	4619      	mov	r1, r3
 800a8ce:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a8d2:	f7f5 fe91 	bl	80005f8 <__aeabi_dmul>
 800a8d6:	4602      	mov	r2, r0
 800a8d8:	460b      	mov	r3, r1
 800a8da:	4690      	mov	r8, r2
 800a8dc:	4699      	mov	r9, r3
 800a8de:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800a8e2:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a8e6:	f7f5 fe87 	bl	80005f8 <__aeabi_dmul>
 800a8ea:	4602      	mov	r2, r0
 800a8ec:	460b      	mov	r3, r1
 800a8ee:	4610      	mov	r0, r2
 800a8f0:	4619      	mov	r1, r3
 800a8f2:	a321      	add	r3, pc, #132	; (adr r3, 800a978 <leg_spd+0x590>)
 800a8f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a8f8:	f7f5 fe7e 	bl	80005f8 <__aeabi_dmul>
 800a8fc:	4602      	mov	r2, r0
 800a8fe:	460b      	mov	r3, r1
 800a900:	4614      	mov	r4, r2
 800a902:	461d      	mov	r5, r3
 800a904:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800a908:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a90c:	f7f5 fe74 	bl	80005f8 <__aeabi_dmul>
 800a910:	4602      	mov	r2, r0
 800a912:	460b      	mov	r3, r1
 800a914:	4610      	mov	r0, r2
 800a916:	4619      	mov	r1, r3
 800a918:	a317      	add	r3, pc, #92	; (adr r3, 800a978 <leg_spd+0x590>)
 800a91a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a91e:	f7f5 fe6b 	bl	80005f8 <__aeabi_dmul>
 800a922:	4602      	mov	r2, r0
 800a924:	460b      	mov	r3, r1
 800a926:	4620      	mov	r0, r4
 800a928:	4629      	mov	r1, r5
 800a92a:	f7f5 fcaf 	bl	800028c <__adddf3>
 800a92e:	4602      	mov	r2, r0
 800a930:	460b      	mov	r3, r1
 800a932:	4614      	mov	r4, r2
 800a934:	461d      	mov	r5, r3
 800a936:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800a93a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a93e:	f7f5 fe5b 	bl	80005f8 <__aeabi_dmul>
 800a942:	4602      	mov	r2, r0
 800a944:	460b      	mov	r3, r1
 800a946:	4610      	mov	r0, r2
 800a948:	4619      	mov	r1, r3
 800a94a:	4602      	mov	r2, r0
 800a94c:	460b      	mov	r3, r1
 800a94e:	f7f5 fc9d 	bl	800028c <__adddf3>
 800a952:	4602      	mov	r2, r0
 800a954:	460b      	mov	r3, r1
 800a956:	4620      	mov	r0, r4
 800a958:	4629      	mov	r1, r5
 800a95a:	f7f5 fc95 	bl	8000288 <__aeabi_dsub>
 800a95e:	4602      	mov	r2, r0
 800a960:	460b      	mov	r3, r1
 800a962:	4610      	mov	r0, r2
 800a964:	4619      	mov	r1, r3
 800a966:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800a96a:	f7f5 fe45 	bl	80005f8 <__aeabi_dmul>
 800a96e:	4602      	mov	r2, r0
 800a970:	460b      	mov	r3, r1
 800a972:	e01b      	b.n	800a9ac <leg_spd+0x5c4>
 800a974:	f3af 8000 	nop.w
 800a978:	bc6a7efa 	.word	0xbc6a7efa
 800a97c:	3fa89374 	.word	0x3fa89374
 800a980:	3ff00000 	.word	0x3ff00000
 800a984:	47ae147b 	.word	0x47ae147b
 800a988:	3fb47ae1 	.word	0x3fb47ae1
 800a98c:	bc6a7efa 	.word	0xbc6a7efa
 800a990:	3f989374 	.word	0x3f989374
 800a994:	5532617c 	.word	0x5532617c
 800a998:	3fb92a30 	.word	0x3fb92a30
 800a99c:	663c74fb 	.word	0x663c74fb
 800a9a0:	3f9e32a0 	.word	0x3f9e32a0
 800a9a4:	47ae147b 	.word	0x47ae147b
 800a9a8:	3fc47ae1 	.word	0x3fc47ae1
 800a9ac:	4610      	mov	r0, r2
 800a9ae:	4619      	mov	r1, r3
 800a9b0:	f04f 0200 	mov.w	r2, #0
 800a9b4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a9b8:	f7f5 ff48 	bl	800084c <__aeabi_ddiv>
 800a9bc:	4602      	mov	r2, r0
 800a9be:	460b      	mov	r3, r1
 800a9c0:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a9c4:	f7f5 fc60 	bl	8000288 <__aeabi_dsub>
 800a9c8:	4602      	mov	r2, r0
 800a9ca:	460b      	mov	r3, r1
 800a9cc:	4610      	mov	r0, r2
 800a9ce:	4619      	mov	r1, r3
 800a9d0:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a9d4:	f7f5 fe10 	bl	80005f8 <__aeabi_dmul>
 800a9d8:	4602      	mov	r2, r0
 800a9da:	460b      	mov	r3, r1
 800a9dc:	4640      	mov	r0, r8
 800a9de:	4649      	mov	r1, r9
 800a9e0:	f7f5 fc54 	bl	800028c <__adddf3>
 800a9e4:	4602      	mov	r2, r0
 800a9e6:	460b      	mov	r3, r1
 800a9e8:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a9ec:	f20f 432c 	addw	r3, pc, #1068	; 0x42c
 800a9f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a9f4:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800a9f8:	f7f5 fdfe 	bl	80005f8 <__aeabi_dmul>
 800a9fc:	4602      	mov	r2, r0
 800a9fe:	460b      	mov	r3, r1
 800aa00:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800aa04:	f7f5 fc42 	bl	800028c <__adddf3>
 800aa08:	4602      	mov	r2, r0
 800aa0a:	460b      	mov	r3, r1
 800aa0c:	e9c7 2338 	strd	r2, r3, [r7, #224]	; 0xe0
 800aa10:	f20f 4308 	addw	r3, pc, #1032	; 0x408
 800aa14:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa18:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800aa1c:	f7f5 fdec 	bl	80005f8 <__aeabi_dmul>
 800aa20:	4602      	mov	r2, r0
 800aa22:	460b      	mov	r3, r1
 800aa24:	4610      	mov	r0, r2
 800aa26:	4619      	mov	r1, r3
 800aa28:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800aa2c:	f7f5 fc2e 	bl	800028c <__adddf3>
 800aa30:	4602      	mov	r2, r0
 800aa32:	460b      	mov	r3, r1
 800aa34:	4610      	mov	r0, r2
 800aa36:	4619      	mov	r1, r3
 800aa38:	a3fa      	add	r3, pc, #1000	; (adr r3, 800ae24 <leg_spd+0xa3c>)
 800aa3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa3e:	f7f5 fc23 	bl	8000288 <__aeabi_dsub>
 800aa42:	4602      	mov	r2, r0
 800aa44:	460b      	mov	r3, r1
 800aa46:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 800aa4a:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800aa4e:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800aa52:	f7f5 fdd1 	bl	80005f8 <__aeabi_dmul>
 800aa56:	4602      	mov	r2, r0
 800aa58:	460b      	mov	r3, r1
 800aa5a:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800aa5e:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800aa62:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800aa66:	f7f5 fdc7 	bl	80005f8 <__aeabi_dmul>
 800aa6a:	4602      	mov	r2, r0
 800aa6c:	460b      	mov	r3, r1
 800aa6e:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 800aa72:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800aa76:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800aa7a:	f7f5 fdbd 	bl	80005f8 <__aeabi_dmul>
 800aa7e:	4602      	mov	r2, r0
 800aa80:	460b      	mov	r3, r1
 800aa82:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800aa86:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800aa8a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800aa8e:	f7f5 fdb3 	bl	80005f8 <__aeabi_dmul>
 800aa92:	4602      	mov	r2, r0
 800aa94:	460b      	mov	r3, r1
 800aa96:	e9c7 233c 	strd	r2, r3, [r7, #240]	; 0xf0
 800aa9a:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 800aa9e:	60bb      	str	r3, [r7, #8]
 800aaa0:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800aaa4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 800aaa8:	60fb      	str	r3, [r7, #12]
 800aaaa:	a3dc      	add	r3, pc, #880	; (adr r3, 800ae1c <leg_spd+0xa34>)
 800aaac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aab0:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800aab4:	f7f5 fda0 	bl	80005f8 <__aeabi_dmul>
 800aab8:	4602      	mov	r2, r0
 800aaba:	460b      	mov	r3, r1
 800aabc:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800aac0:	f7f5 fbe2 	bl	8000288 <__aeabi_dsub>
 800aac4:	4602      	mov	r2, r0
 800aac6:	460b      	mov	r3, r1
 800aac8:	4610      	mov	r0, r2
 800aaca:	4619      	mov	r1, r3
 800aacc:	a3d5      	add	r3, pc, #852	; (adr r3, 800ae24 <leg_spd+0xa3c>)
 800aace:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aad2:	f7f5 fbdb 	bl	800028c <__adddf3>
 800aad6:	4602      	mov	r2, r0
 800aad8:	460b      	mov	r3, r1
 800aada:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800aade:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800aae2:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800aae6:	f7f5 fd87 	bl	80005f8 <__aeabi_dmul>
 800aaea:	4602      	mov	r2, r0
 800aaec:	460b      	mov	r3, r1
 800aaee:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800aaf2:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800aaf6:	f04f 0000 	mov.w	r0, #0
 800aafa:	49c7      	ldr	r1, [pc, #796]	; (800ae18 <leg_spd+0xa30>)
 800aafc:	f7f5 fea6 	bl	800084c <__aeabi_ddiv>
 800ab00:	4602      	mov	r2, r0
 800ab02:	460b      	mov	r3, r1
 800ab04:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 800ab08:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800ab0c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ab10:	f7f5 fd72 	bl	80005f8 <__aeabi_dmul>
 800ab14:	4602      	mov	r2, r0
 800ab16:	460b      	mov	r3, r1
 800ab18:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800ab1c:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800ab20:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800ab24:	f7f5 fd68 	bl	80005f8 <__aeabi_dmul>
 800ab28:	4602      	mov	r2, r0
 800ab2a:	460b      	mov	r3, r1
 800ab2c:	4610      	mov	r0, r2
 800ab2e:	4619      	mov	r1, r3
 800ab30:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800ab34:	f7f5 fbaa 	bl	800028c <__adddf3>
 800ab38:	4602      	mov	r2, r0
 800ab3a:	460b      	mov	r3, r1
 800ab3c:	ec43 2b17 	vmov	d7, r2, r3
 800ab40:	eeb0 0a47 	vmov.f32	s0, s14
 800ab44:	eef0 0a67 	vmov.f32	s1, s15
 800ab48:	f019 fca8 	bl	802449c <sqrt>
 800ab4c:	ec53 2b10 	vmov	r2, r3, d0
 800ab50:	f04f 0000 	mov.w	r0, #0
 800ab54:	49b0      	ldr	r1, [pc, #704]	; (800ae18 <leg_spd+0xa30>)
 800ab56:	f7f5 fe79 	bl	800084c <__aeabi_ddiv>
 800ab5a:	4602      	mov	r2, r0
 800ab5c:	460b      	mov	r3, r1
 800ab5e:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800ab62:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ab66:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800ab6a:	f7f5 fb8f 	bl	800028c <__adddf3>
 800ab6e:	4602      	mov	r2, r0
 800ab70:	460b      	mov	r3, r1
 800ab72:	f04f 0000 	mov.w	r0, #0
 800ab76:	49a8      	ldr	r1, [pc, #672]	; (800ae18 <leg_spd+0xa30>)
 800ab78:	f7f5 fe68 	bl	800084c <__aeabi_ddiv>
 800ab7c:	4602      	mov	r2, r0
 800ab7e:	460b      	mov	r3, r1
 800ab80:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 800ab84:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800ab88:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800ab8c:	f7f5 fd34 	bl	80005f8 <__aeabi_dmul>
 800ab90:	4602      	mov	r2, r0
 800ab92:	460b      	mov	r3, r1
 800ab94:	4610      	mov	r0, r2
 800ab96:	4619      	mov	r1, r3
 800ab98:	a39b      	add	r3, pc, #620	; (adr r3, 800ae08 <leg_spd+0xa20>)
 800ab9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab9e:	f7f5 fd2b 	bl	80005f8 <__aeabi_dmul>
 800aba2:	4602      	mov	r2, r0
 800aba4:	460b      	mov	r3, r1
 800aba6:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 800abaa:	f7f5 fb6d 	bl	8000288 <__aeabi_dsub>
 800abae:	4602      	mov	r2, r0
 800abb0:	460b      	mov	r3, r1
 800abb2:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800abb6:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800abba:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800abbe:	f7f5 fd1b 	bl	80005f8 <__aeabi_dmul>
 800abc2:	4602      	mov	r2, r0
 800abc4:	460b      	mov	r3, r1
 800abc6:	4610      	mov	r0, r2
 800abc8:	4619      	mov	r1, r3
 800abca:	a38f      	add	r3, pc, #572	; (adr r3, 800ae08 <leg_spd+0xa20>)
 800abcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abd0:	f7f5 fd12 	bl	80005f8 <__aeabi_dmul>
 800abd4:	4602      	mov	r2, r0
 800abd6:	460b      	mov	r3, r1
 800abd8:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800abdc:	f7f5 fb54 	bl	8000288 <__aeabi_dsub>
 800abe0:	4602      	mov	r2, r0
 800abe2:	460b      	mov	r3, r1
 800abe4:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800abe8:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800abec:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800abf0:	f7f5 fd02 	bl	80005f8 <__aeabi_dmul>
 800abf4:	4602      	mov	r2, r0
 800abf6:	460b      	mov	r3, r1
 800abf8:	4614      	mov	r4, r2
 800abfa:	461d      	mov	r5, r3
 800abfc:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800ac00:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ac04:	f7f5 fcf8 	bl	80005f8 <__aeabi_dmul>
 800ac08:	4602      	mov	r2, r0
 800ac0a:	460b      	mov	r3, r1
 800ac0c:	4610      	mov	r0, r2
 800ac0e:	4619      	mov	r1, r3
 800ac10:	a37f      	add	r3, pc, #508	; (adr r3, 800ae10 <leg_spd+0xa28>)
 800ac12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac16:	f7f5 fcef 	bl	80005f8 <__aeabi_dmul>
 800ac1a:	4602      	mov	r2, r0
 800ac1c:	460b      	mov	r3, r1
 800ac1e:	4690      	mov	r8, r2
 800ac20:	4699      	mov	r9, r3
 800ac22:	e9d7 233c 	ldrd	r2, r3, [r7, #240]	; 0xf0
 800ac26:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800ac2a:	f7f5 fce5 	bl	80005f8 <__aeabi_dmul>
 800ac2e:	4602      	mov	r2, r0
 800ac30:	460b      	mov	r3, r1
 800ac32:	4610      	mov	r0, r2
 800ac34:	4619      	mov	r1, r3
 800ac36:	a376      	add	r3, pc, #472	; (adr r3, 800ae10 <leg_spd+0xa28>)
 800ac38:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac3c:	f7f5 fcdc 	bl	80005f8 <__aeabi_dmul>
 800ac40:	4602      	mov	r2, r0
 800ac42:	460b      	mov	r3, r1
 800ac44:	4640      	mov	r0, r8
 800ac46:	4649      	mov	r1, r9
 800ac48:	f7f5 fb1e 	bl	8000288 <__aeabi_dsub>
 800ac4c:	4602      	mov	r2, r0
 800ac4e:	460b      	mov	r3, r1
 800ac50:	4620      	mov	r0, r4
 800ac52:	4629      	mov	r1, r5
 800ac54:	f7f5 fcd0 	bl	80005f8 <__aeabi_dmul>
 800ac58:	4602      	mov	r2, r0
 800ac5a:	460b      	mov	r3, r1
 800ac5c:	4610      	mov	r0, r2
 800ac5e:	4619      	mov	r1, r3
 800ac60:	f04f 0200 	mov.w	r2, #0
 800ac64:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ac68:	f7f5 fdf0 	bl	800084c <__aeabi_ddiv>
 800ac6c:	4602      	mov	r2, r0
 800ac6e:	460b      	mov	r3, r1
 800ac70:	4614      	mov	r4, r2
 800ac72:	461d      	mov	r5, r3
 800ac74:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800ac78:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800ac7c:	f7f5 fcbc 	bl	80005f8 <__aeabi_dmul>
 800ac80:	4602      	mov	r2, r0
 800ac82:	460b      	mov	r3, r1
 800ac84:	4690      	mov	r8, r2
 800ac86:	4699      	mov	r9, r3
 800ac88:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800ac8c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ac90:	f7f5 fcb2 	bl	80005f8 <__aeabi_dmul>
 800ac94:	4602      	mov	r2, r0
 800ac96:	460b      	mov	r3, r1
 800ac98:	4610      	mov	r0, r2
 800ac9a:	4619      	mov	r1, r3
 800ac9c:	4602      	mov	r2, r0
 800ac9e:	460b      	mov	r3, r1
 800aca0:	f7f5 faf4 	bl	800028c <__adddf3>
 800aca4:	4602      	mov	r2, r0
 800aca6:	460b      	mov	r3, r1
 800aca8:	4692      	mov	sl, r2
 800acaa:	469b      	mov	fp, r3
 800acac:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800acb0:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800acb4:	f7f5 fca0 	bl	80005f8 <__aeabi_dmul>
 800acb8:	4602      	mov	r2, r0
 800acba:	460b      	mov	r3, r1
 800acbc:	4610      	mov	r0, r2
 800acbe:	4619      	mov	r1, r3
 800acc0:	4602      	mov	r2, r0
 800acc2:	460b      	mov	r3, r1
 800acc4:	f7f5 fae2 	bl	800028c <__adddf3>
 800acc8:	4602      	mov	r2, r0
 800acca:	460b      	mov	r3, r1
 800accc:	4650      	mov	r0, sl
 800acce:	4659      	mov	r1, fp
 800acd0:	f7f5 fada 	bl	8000288 <__aeabi_dsub>
 800acd4:	4602      	mov	r2, r0
 800acd6:	460b      	mov	r3, r1
 800acd8:	4640      	mov	r0, r8
 800acda:	4649      	mov	r1, r9
 800acdc:	f7f5 fc8c 	bl	80005f8 <__aeabi_dmul>
 800ace0:	4602      	mov	r2, r0
 800ace2:	460b      	mov	r3, r1
 800ace4:	4610      	mov	r0, r2
 800ace6:	4619      	mov	r1, r3
 800ace8:	f04f 0200 	mov.w	r2, #0
 800acec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800acf0:	f7f5 fdac 	bl	800084c <__aeabi_ddiv>
 800acf4:	4602      	mov	r2, r0
 800acf6:	460b      	mov	r3, r1
 800acf8:	4620      	mov	r0, r4
 800acfa:	4629      	mov	r1, r5
 800acfc:	f7f5 fac6 	bl	800028c <__adddf3>
 800ad00:	4602      	mov	r2, r0
 800ad02:	460b      	mov	r3, r1
 800ad04:	6979      	ldr	r1, [r7, #20]
 800ad06:	e9c1 2300 	strd	r2, r3, [r1]
 800ad0a:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ad0e:	f04f 0000 	mov.w	r0, #0
 800ad12:	4941      	ldr	r1, [pc, #260]	; (800ae18 <leg_spd+0xa30>)
 800ad14:	f7f5 fd9a 	bl	800084c <__aeabi_ddiv>
 800ad18:	4602      	mov	r2, r0
 800ad1a:	460b      	mov	r3, r1
 800ad1c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ad20:	f7f5 fc6a 	bl	80005f8 <__aeabi_dmul>
 800ad24:	4602      	mov	r2, r0
 800ad26:	460b      	mov	r3, r1
 800ad28:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800ad2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ad2e:	603b      	str	r3, [r7, #0]
 800ad30:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ad32:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 800ad36:	607b      	str	r3, [r7, #4]
 800ad38:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ad3c:	e9d7 0100 	ldrd	r0, r1, [r7]
 800ad40:	f7f5 fc5a 	bl	80005f8 <__aeabi_dmul>
 800ad44:	4602      	mov	r2, r0
 800ad46:	460b      	mov	r3, r1
 800ad48:	4610      	mov	r0, r2
 800ad4a:	4619      	mov	r1, r3
 800ad4c:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800ad50:	f7f5 fc52 	bl	80005f8 <__aeabi_dmul>
 800ad54:	4602      	mov	r2, r0
 800ad56:	460b      	mov	r3, r1
 800ad58:	4614      	mov	r4, r2
 800ad5a:	461d      	mov	r5, r3
 800ad5c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800ad60:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800ad64:	f7f5 fc48 	bl	80005f8 <__aeabi_dmul>
 800ad68:	4602      	mov	r2, r0
 800ad6a:	460b      	mov	r3, r1
 800ad6c:	4690      	mov	r8, r2
 800ad6e:	4699      	mov	r9, r3
 800ad70:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800ad74:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800ad78:	f7f5 fc3e 	bl	80005f8 <__aeabi_dmul>
 800ad7c:	4602      	mov	r2, r0
 800ad7e:	460b      	mov	r3, r1
 800ad80:	4640      	mov	r0, r8
 800ad82:	4649      	mov	r1, r9
 800ad84:	f7f5 fa80 	bl	8000288 <__aeabi_dsub>
 800ad88:	4602      	mov	r2, r0
 800ad8a:	460b      	mov	r3, r1
 800ad8c:	4620      	mov	r0, r4
 800ad8e:	4629      	mov	r1, r5
 800ad90:	f7f5 fc32 	bl	80005f8 <__aeabi_dmul>
 800ad94:	4602      	mov	r2, r0
 800ad96:	460b      	mov	r3, r1
 800ad98:	4690      	mov	r8, r2
 800ad9a:	4699      	mov	r9, r3
 800ad9c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ada0:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800ada4:	f7f5 fc28 	bl	80005f8 <__aeabi_dmul>
 800ada8:	4602      	mov	r2, r0
 800adaa:	460b      	mov	r3, r1
 800adac:	4610      	mov	r0, r2
 800adae:	4619      	mov	r1, r3
 800adb0:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800adb4:	f7f5 fc20 	bl	80005f8 <__aeabi_dmul>
 800adb8:	4602      	mov	r2, r0
 800adba:	460b      	mov	r3, r1
 800adbc:	4614      	mov	r4, r2
 800adbe:	461d      	mov	r5, r3
 800adc0:	a311      	add	r3, pc, #68	; (adr r3, 800ae08 <leg_spd+0xa20>)
 800adc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800adc6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800adca:	f7f5 fc15 	bl	80005f8 <__aeabi_dmul>
 800adce:	4602      	mov	r2, r0
 800add0:	460b      	mov	r3, r1
 800add2:	f04f 0000 	mov.w	r0, #0
 800add6:	f04f 0100 	mov.w	r1, #0
 800adda:	f7f5 fa55 	bl	8000288 <__aeabi_dsub>
 800adde:	4602      	mov	r2, r0
 800ade0:	460b      	mov	r3, r1
 800ade2:	4610      	mov	r0, r2
 800ade4:	4619      	mov	r1, r3
 800ade6:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800adea:	f7f5 fc05 	bl	80005f8 <__aeabi_dmul>
 800adee:	4602      	mov	r2, r0
 800adf0:	460b      	mov	r3, r1
 800adf2:	4692      	mov	sl, r2
 800adf4:	469b      	mov	fp, r3
 800adf6:	a304      	add	r3, pc, #16	; (adr r3, 800ae08 <leg_spd+0xa20>)
 800adf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800adfc:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800ae00:	e014      	b.n	800ae2c <leg_spd+0xa44>
 800ae02:	bf00      	nop
 800ae04:	f3af 8000 	nop.w
 800ae08:	33333333 	.word	0x33333333
 800ae0c:	3fd33333 	.word	0x3fd33333
 800ae10:	33333333 	.word	0x33333333
 800ae14:	3fe33333 	.word	0x3fe33333
 800ae18:	3ff00000 	.word	0x3ff00000
 800ae1c:	33333333 	.word	0x33333333
 800ae20:	3fc33333 	.word	0x3fc33333
 800ae24:	5532617c 	.word	0x5532617c
 800ae28:	3fa92a30 	.word	0x3fa92a30
 800ae2c:	f7f5 fbe4 	bl	80005f8 <__aeabi_dmul>
 800ae30:	4602      	mov	r2, r0
 800ae32:	460b      	mov	r3, r1
 800ae34:	4610      	mov	r0, r2
 800ae36:	4619      	mov	r1, r3
 800ae38:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800ae3c:	f7f5 fbdc 	bl	80005f8 <__aeabi_dmul>
 800ae40:	4602      	mov	r2, r0
 800ae42:	460b      	mov	r3, r1
 800ae44:	4650      	mov	r0, sl
 800ae46:	4659      	mov	r1, fp
 800ae48:	f7f5 fa20 	bl	800028c <__adddf3>
 800ae4c:	4602      	mov	r2, r0
 800ae4e:	460b      	mov	r3, r1
 800ae50:	4620      	mov	r0, r4
 800ae52:	4629      	mov	r1, r5
 800ae54:	f7f5 fbd0 	bl	80005f8 <__aeabi_dmul>
 800ae58:	4602      	mov	r2, r0
 800ae5a:	460b      	mov	r3, r1
 800ae5c:	4610      	mov	r0, r2
 800ae5e:	4619      	mov	r1, r3
 800ae60:	697b      	ldr	r3, [r7, #20]
 800ae62:	f103 0408 	add.w	r4, r3, #8
 800ae66:	4602      	mov	r2, r0
 800ae68:	460b      	mov	r3, r1
 800ae6a:	4640      	mov	r0, r8
 800ae6c:	4649      	mov	r1, r9
 800ae6e:	f7f5 fa0d 	bl	800028c <__adddf3>
 800ae72:	4602      	mov	r2, r0
 800ae74:	460b      	mov	r3, r1
 800ae76:	e9c4 2300 	strd	r2, r3, [r4]
 800ae7a:	bf00      	nop
 800ae7c:	37f8      	adds	r7, #248	; 0xf8
 800ae7e:	46bd      	mov	sp, r7
 800ae80:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

0800ae84 <rt_powd_snf>:
 800ae84:	b5b0      	push	{r4, r5, r7, lr}
 800ae86:	b08c      	sub	sp, #48	; 0x30
 800ae88:	af00      	add	r7, sp, #0
 800ae8a:	ed87 0b04 	vstr	d0, [r7, #16]
 800ae8e:	ed87 1b02 	vstr	d1, [r7, #8]
 800ae92:	ed97 0b04 	vldr	d0, [r7, #16]
 800ae96:	f002 ff15 	bl	800dcc4 <rtIsNaN>
 800ae9a:	4603      	mov	r3, r0
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	d106      	bne.n	800aeae <rt_powd_snf+0x2a>
 800aea0:	ed97 0b02 	vldr	d0, [r7, #8]
 800aea4:	f002 ff0e 	bl	800dcc4 <rtIsNaN>
 800aea8:	4603      	mov	r3, r0
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d005      	beq.n	800aeba <rt_powd_snf+0x36>
 800aeae:	4b80      	ldr	r3, [pc, #512]	; (800b0b0 <rt_powd_snf+0x22c>)
 800aeb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aeb4:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800aeb8:	e0ef      	b.n	800b09a <rt_powd_snf+0x216>
 800aeba:	693b      	ldr	r3, [r7, #16]
 800aebc:	603b      	str	r3, [r7, #0]
 800aebe:	697b      	ldr	r3, [r7, #20]
 800aec0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800aec4:	607b      	str	r3, [r7, #4]
 800aec6:	ed97 7b00 	vldr	d7, [r7]
 800aeca:	ed87 7b08 	vstr	d7, [r7, #32]
 800aece:	68bc      	ldr	r4, [r7, #8]
 800aed0:	68fb      	ldr	r3, [r7, #12]
 800aed2:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800aed6:	e9c7 4506 	strd	r4, r5, [r7, #24]
 800aeda:	ed97 0b02 	vldr	d0, [r7, #8]
 800aede:	f002 fec3 	bl	800dc68 <rtIsInf>
 800aee2:	4603      	mov	r3, r0
 800aee4:	2b00      	cmp	r3, #0
 800aee6:	d049      	beq.n	800af7c <rt_powd_snf+0xf8>
 800aee8:	f04f 0200 	mov.w	r2, #0
 800aeec:	4b71      	ldr	r3, [pc, #452]	; (800b0b4 <rt_powd_snf+0x230>)
 800aeee:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800aef2:	f7f5 fde9 	bl	8000ac8 <__aeabi_dcmpeq>
 800aef6:	4603      	mov	r3, r0
 800aef8:	2b00      	cmp	r3, #0
 800aefa:	d005      	beq.n	800af08 <rt_powd_snf+0x84>
 800aefc:	f04f 0200 	mov.w	r2, #0
 800af00:	4b6c      	ldr	r3, [pc, #432]	; (800b0b4 <rt_powd_snf+0x230>)
 800af02:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af06:	e0c8      	b.n	800b09a <rt_powd_snf+0x216>
 800af08:	f04f 0200 	mov.w	r2, #0
 800af0c:	4b69      	ldr	r3, [pc, #420]	; (800b0b4 <rt_powd_snf+0x230>)
 800af0e:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800af12:	f7f5 fe01 	bl	8000b18 <__aeabi_dcmpgt>
 800af16:	4603      	mov	r3, r0
 800af18:	2b00      	cmp	r3, #0
 800af1a:	d017      	beq.n	800af4c <rt_powd_snf+0xc8>
 800af1c:	f04f 0200 	mov.w	r2, #0
 800af20:	f04f 0300 	mov.w	r3, #0
 800af24:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800af28:	f7f5 fdf6 	bl	8000b18 <__aeabi_dcmpgt>
 800af2c:	4603      	mov	r3, r0
 800af2e:	2b00      	cmp	r3, #0
 800af30:	d005      	beq.n	800af3e <rt_powd_snf+0xba>
 800af32:	4b61      	ldr	r3, [pc, #388]	; (800b0b8 <rt_powd_snf+0x234>)
 800af34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af38:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af3c:	e0ad      	b.n	800b09a <rt_powd_snf+0x216>
 800af3e:	f04f 0200 	mov.w	r2, #0
 800af42:	f04f 0300 	mov.w	r3, #0
 800af46:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af4a:	e0a6      	b.n	800b09a <rt_powd_snf+0x216>
 800af4c:	f04f 0200 	mov.w	r2, #0
 800af50:	f04f 0300 	mov.w	r3, #0
 800af54:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800af58:	f7f5 fdde 	bl	8000b18 <__aeabi_dcmpgt>
 800af5c:	4603      	mov	r3, r0
 800af5e:	2b00      	cmp	r3, #0
 800af60:	d006      	beq.n	800af70 <rt_powd_snf+0xec>
 800af62:	f04f 0200 	mov.w	r2, #0
 800af66:	f04f 0300 	mov.w	r3, #0
 800af6a:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af6e:	e094      	b.n	800b09a <rt_powd_snf+0x216>
 800af70:	4b51      	ldr	r3, [pc, #324]	; (800b0b8 <rt_powd_snf+0x234>)
 800af72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af76:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af7a:	e08e      	b.n	800b09a <rt_powd_snf+0x216>
 800af7c:	f04f 0200 	mov.w	r2, #0
 800af80:	f04f 0300 	mov.w	r3, #0
 800af84:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800af88:	f7f5 fd9e 	bl	8000ac8 <__aeabi_dcmpeq>
 800af8c:	4603      	mov	r3, r0
 800af8e:	2b00      	cmp	r3, #0
 800af90:	d005      	beq.n	800af9e <rt_powd_snf+0x11a>
 800af92:	f04f 0200 	mov.w	r2, #0
 800af96:	4b47      	ldr	r3, [pc, #284]	; (800b0b4 <rt_powd_snf+0x230>)
 800af98:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800af9c:	e07d      	b.n	800b09a <rt_powd_snf+0x216>
 800af9e:	f04f 0200 	mov.w	r2, #0
 800afa2:	4b44      	ldr	r3, [pc, #272]	; (800b0b4 <rt_powd_snf+0x230>)
 800afa4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800afa8:	f7f5 fd8e 	bl	8000ac8 <__aeabi_dcmpeq>
 800afac:	4603      	mov	r3, r0
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d01b      	beq.n	800afea <rt_powd_snf+0x166>
 800afb2:	f04f 0200 	mov.w	r2, #0
 800afb6:	f04f 0300 	mov.w	r3, #0
 800afba:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800afbe:	f7f5 fdab 	bl	8000b18 <__aeabi_dcmpgt>
 800afc2:	4603      	mov	r3, r0
 800afc4:	2b00      	cmp	r3, #0
 800afc6:	d004      	beq.n	800afd2 <rt_powd_snf+0x14e>
 800afc8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800afcc:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800afd0:	e063      	b.n	800b09a <rt_powd_snf+0x216>
 800afd2:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800afd6:	f04f 0000 	mov.w	r0, #0
 800afda:	4936      	ldr	r1, [pc, #216]	; (800b0b4 <rt_powd_snf+0x230>)
 800afdc:	f7f5 fc36 	bl	800084c <__aeabi_ddiv>
 800afe0:	4602      	mov	r2, r0
 800afe2:	460b      	mov	r3, r1
 800afe4:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800afe8:	e057      	b.n	800b09a <rt_powd_snf+0x216>
 800afea:	f04f 0200 	mov.w	r2, #0
 800afee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800aff2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800aff6:	f7f5 fd67 	bl	8000ac8 <__aeabi_dcmpeq>
 800affa:	4603      	mov	r3, r0
 800affc:	2b00      	cmp	r3, #0
 800affe:	d00a      	beq.n	800b016 <rt_powd_snf+0x192>
 800b000:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800b004:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b008:	f7f5 faf6 	bl	80005f8 <__aeabi_dmul>
 800b00c:	4602      	mov	r2, r0
 800b00e:	460b      	mov	r3, r1
 800b010:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b014:	e041      	b.n	800b09a <rt_powd_snf+0x216>
 800b016:	f04f 0200 	mov.w	r2, #0
 800b01a:	4b28      	ldr	r3, [pc, #160]	; (800b0bc <rt_powd_snf+0x238>)
 800b01c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b020:	f7f5 fd52 	bl	8000ac8 <__aeabi_dcmpeq>
 800b024:	4603      	mov	r3, r0
 800b026:	2b00      	cmp	r3, #0
 800b028:	d011      	beq.n	800b04e <rt_powd_snf+0x1ca>
 800b02a:	f04f 0200 	mov.w	r2, #0
 800b02e:	f04f 0300 	mov.w	r3, #0
 800b032:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b036:	f7f5 fd65 	bl	8000b04 <__aeabi_dcmpge>
 800b03a:	4603      	mov	r3, r0
 800b03c:	2b00      	cmp	r3, #0
 800b03e:	d006      	beq.n	800b04e <rt_powd_snf+0x1ca>
 800b040:	ed97 0b04 	vldr	d0, [r7, #16]
 800b044:	f019 fa2a 	bl	802449c <sqrt>
 800b048:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 800b04c:	e025      	b.n	800b09a <rt_powd_snf+0x216>
 800b04e:	f04f 0200 	mov.w	r2, #0
 800b052:	f04f 0300 	mov.w	r3, #0
 800b056:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b05a:	f7f5 fd3f 	bl	8000adc <__aeabi_dcmplt>
 800b05e:	4603      	mov	r3, r0
 800b060:	2b00      	cmp	r3, #0
 800b062:	d012      	beq.n	800b08a <rt_powd_snf+0x206>
 800b064:	ed97 0b02 	vldr	d0, [r7, #8]
 800b068:	f019 f89a 	bl	80241a0 <floor>
 800b06c:	ec53 2b10 	vmov	r2, r3, d0
 800b070:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b074:	f7f5 fd50 	bl	8000b18 <__aeabi_dcmpgt>
 800b078:	4603      	mov	r3, r0
 800b07a:	2b00      	cmp	r3, #0
 800b07c:	d005      	beq.n	800b08a <rt_powd_snf+0x206>
 800b07e:	4b0c      	ldr	r3, [pc, #48]	; (800b0b0 <rt_powd_snf+0x22c>)
 800b080:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b084:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b088:	e007      	b.n	800b09a <rt_powd_snf+0x216>
 800b08a:	ed97 1b02 	vldr	d1, [r7, #8]
 800b08e:	ed97 0b04 	vldr	d0, [r7, #16]
 800b092:	f019 f993 	bl	80243bc <pow>
 800b096:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 800b09a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b09e:	ec43 2b17 	vmov	d7, r2, r3
 800b0a2:	eeb0 0a47 	vmov.f32	s0, s14
 800b0a6:	eef0 0a67 	vmov.f32	s1, s15
 800b0aa:	3730      	adds	r7, #48	; 0x30
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	bdb0      	pop	{r4, r5, r7, pc}
 800b0b0:	20000018 	.word	0x20000018
 800b0b4:	3ff00000 	.word	0x3ff00000
 800b0b8:	20000020 	.word	0x20000020
 800b0bc:	3fe00000 	.word	0x3fe00000

0800b0c0 <lqr_k>:
 800b0c0:	b5b0      	push	{r4, r5, r7, lr}
 800b0c2:	b088      	sub	sp, #32
 800b0c4:	af00      	add	r7, sp, #0
 800b0c6:	ed87 0b02 	vstr	d0, [r7, #8]
 800b0ca:	6078      	str	r0, [r7, #4]
 800b0cc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800b0d0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b0d4:	f7f5 fa90 	bl	80005f8 <__aeabi_dmul>
 800b0d8:	4602      	mov	r2, r0
 800b0da:	460b      	mov	r3, r1
 800b0dc:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800b0e0:	ed9f 1bcf 	vldr	d1, [pc, #828]	; 800b420 <lqr_k+0x360>
 800b0e4:	ed97 0b02 	vldr	d0, [r7, #8]
 800b0e8:	f7ff fecc 	bl	800ae84 <rt_powd_snf>
 800b0ec:	ed87 0b04 	vstr	d0, [r7, #16]
 800b0f0:	a3cd      	add	r3, pc, #820	; (adr r3, 800b428 <lqr_k+0x368>)
 800b0f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b0f6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b0fa:	f7f5 fa7d 	bl	80005f8 <__aeabi_dmul>
 800b0fe:	4602      	mov	r2, r0
 800b100:	460b      	mov	r3, r1
 800b102:	4614      	mov	r4, r2
 800b104:	461d      	mov	r5, r3
 800b106:	a3ca      	add	r3, pc, #808	; (adr r3, 800b430 <lqr_k+0x370>)
 800b108:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b10c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b110:	f7f5 fa72 	bl	80005f8 <__aeabi_dmul>
 800b114:	4602      	mov	r2, r0
 800b116:	460b      	mov	r3, r1
 800b118:	4620      	mov	r0, r4
 800b11a:	4629      	mov	r1, r5
 800b11c:	f7f5 f8b6 	bl	800028c <__adddf3>
 800b120:	4602      	mov	r2, r0
 800b122:	460b      	mov	r3, r1
 800b124:	4614      	mov	r4, r2
 800b126:	461d      	mov	r5, r3
 800b128:	a3c3      	add	r3, pc, #780	; (adr r3, 800b438 <lqr_k+0x378>)
 800b12a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b12e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b132:	f7f5 fa61 	bl	80005f8 <__aeabi_dmul>
 800b136:	4602      	mov	r2, r0
 800b138:	460b      	mov	r3, r1
 800b13a:	4620      	mov	r0, r4
 800b13c:	4629      	mov	r1, r5
 800b13e:	f7f5 f8a3 	bl	8000288 <__aeabi_dsub>
 800b142:	4602      	mov	r2, r0
 800b144:	460b      	mov	r3, r1
 800b146:	4610      	mov	r0, r2
 800b148:	4619      	mov	r1, r3
 800b14a:	a3bd      	add	r3, pc, #756	; (adr r3, 800b440 <lqr_k+0x380>)
 800b14c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b150:	f7f5 f89a 	bl	8000288 <__aeabi_dsub>
 800b154:	4602      	mov	r2, r0
 800b156:	460b      	mov	r3, r1
 800b158:	6879      	ldr	r1, [r7, #4]
 800b15a:	e9c1 2300 	strd	r2, r3, [r1]
 800b15e:	a3ba      	add	r3, pc, #744	; (adr r3, 800b448 <lqr_k+0x388>)
 800b160:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b164:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b168:	f7f5 fa46 	bl	80005f8 <__aeabi_dmul>
 800b16c:	4602      	mov	r2, r0
 800b16e:	460b      	mov	r3, r1
 800b170:	4614      	mov	r4, r2
 800b172:	461d      	mov	r5, r3
 800b174:	a3b6      	add	r3, pc, #728	; (adr r3, 800b450 <lqr_k+0x390>)
 800b176:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b17a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b17e:	f7f5 fa3b 	bl	80005f8 <__aeabi_dmul>
 800b182:	4602      	mov	r2, r0
 800b184:	460b      	mov	r3, r1
 800b186:	4620      	mov	r0, r4
 800b188:	4629      	mov	r1, r5
 800b18a:	f7f5 f87f 	bl	800028c <__adddf3>
 800b18e:	4602      	mov	r2, r0
 800b190:	460b      	mov	r3, r1
 800b192:	4614      	mov	r4, r2
 800b194:	461d      	mov	r5, r3
 800b196:	a3b0      	add	r3, pc, #704	; (adr r3, 800b458 <lqr_k+0x398>)
 800b198:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b19c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b1a0:	f7f5 fa2a 	bl	80005f8 <__aeabi_dmul>
 800b1a4:	4602      	mov	r2, r0
 800b1a6:	460b      	mov	r3, r1
 800b1a8:	4620      	mov	r0, r4
 800b1aa:	4629      	mov	r1, r5
 800b1ac:	f7f5 f86c 	bl	8000288 <__aeabi_dsub>
 800b1b0:	4602      	mov	r2, r0
 800b1b2:	460b      	mov	r3, r1
 800b1b4:	4610      	mov	r0, r2
 800b1b6:	4619      	mov	r1, r3
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	f103 0408 	add.w	r4, r3, #8
 800b1be:	a3a8      	add	r3, pc, #672	; (adr r3, 800b460 <lqr_k+0x3a0>)
 800b1c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1c4:	f7f5 f862 	bl	800028c <__adddf3>
 800b1c8:	4602      	mov	r2, r0
 800b1ca:	460b      	mov	r3, r1
 800b1cc:	e9c4 2300 	strd	r2, r3, [r4]
 800b1d0:	a3a5      	add	r3, pc, #660	; (adr r3, 800b468 <lqr_k+0x3a8>)
 800b1d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1d6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b1da:	f7f5 fa0d 	bl	80005f8 <__aeabi_dmul>
 800b1de:	4602      	mov	r2, r0
 800b1e0:	460b      	mov	r3, r1
 800b1e2:	4614      	mov	r4, r2
 800b1e4:	461d      	mov	r5, r3
 800b1e6:	a3a2      	add	r3, pc, #648	; (adr r3, 800b470 <lqr_k+0x3b0>)
 800b1e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1ec:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b1f0:	f7f5 fa02 	bl	80005f8 <__aeabi_dmul>
 800b1f4:	4602      	mov	r2, r0
 800b1f6:	460b      	mov	r3, r1
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	4629      	mov	r1, r5
 800b1fc:	f7f5 f846 	bl	800028c <__adddf3>
 800b200:	4602      	mov	r2, r0
 800b202:	460b      	mov	r3, r1
 800b204:	4614      	mov	r4, r2
 800b206:	461d      	mov	r5, r3
 800b208:	a39b      	add	r3, pc, #620	; (adr r3, 800b478 <lqr_k+0x3b8>)
 800b20a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b20e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b212:	f7f5 f9f1 	bl	80005f8 <__aeabi_dmul>
 800b216:	4602      	mov	r2, r0
 800b218:	460b      	mov	r3, r1
 800b21a:	4620      	mov	r0, r4
 800b21c:	4629      	mov	r1, r5
 800b21e:	f7f5 f833 	bl	8000288 <__aeabi_dsub>
 800b222:	4602      	mov	r2, r0
 800b224:	460b      	mov	r3, r1
 800b226:	4610      	mov	r0, r2
 800b228:	4619      	mov	r1, r3
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	f103 0410 	add.w	r4, r3, #16
 800b230:	a393      	add	r3, pc, #588	; (adr r3, 800b480 <lqr_k+0x3c0>)
 800b232:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b236:	f7f5 f827 	bl	8000288 <__aeabi_dsub>
 800b23a:	4602      	mov	r2, r0
 800b23c:	460b      	mov	r3, r1
 800b23e:	e9c4 2300 	strd	r2, r3, [r4]
 800b242:	a391      	add	r3, pc, #580	; (adr r3, 800b488 <lqr_k+0x3c8>)
 800b244:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b248:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b24c:	f7f5 f9d4 	bl	80005f8 <__aeabi_dmul>
 800b250:	4602      	mov	r2, r0
 800b252:	460b      	mov	r3, r1
 800b254:	4614      	mov	r4, r2
 800b256:	461d      	mov	r5, r3
 800b258:	a38d      	add	r3, pc, #564	; (adr r3, 800b490 <lqr_k+0x3d0>)
 800b25a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b25e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b262:	f7f5 f9c9 	bl	80005f8 <__aeabi_dmul>
 800b266:	4602      	mov	r2, r0
 800b268:	460b      	mov	r3, r1
 800b26a:	4620      	mov	r0, r4
 800b26c:	4629      	mov	r1, r5
 800b26e:	f7f5 f80d 	bl	800028c <__adddf3>
 800b272:	4602      	mov	r2, r0
 800b274:	460b      	mov	r3, r1
 800b276:	4614      	mov	r4, r2
 800b278:	461d      	mov	r5, r3
 800b27a:	a387      	add	r3, pc, #540	; (adr r3, 800b498 <lqr_k+0x3d8>)
 800b27c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b280:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b284:	f7f5 f9b8 	bl	80005f8 <__aeabi_dmul>
 800b288:	4602      	mov	r2, r0
 800b28a:	460b      	mov	r3, r1
 800b28c:	4620      	mov	r0, r4
 800b28e:	4629      	mov	r1, r5
 800b290:	f7f4 fffa 	bl	8000288 <__aeabi_dsub>
 800b294:	4602      	mov	r2, r0
 800b296:	460b      	mov	r3, r1
 800b298:	4610      	mov	r0, r2
 800b29a:	4619      	mov	r1, r3
 800b29c:	687b      	ldr	r3, [r7, #4]
 800b29e:	f103 0418 	add.w	r4, r3, #24
 800b2a2:	a37f      	add	r3, pc, #508	; (adr r3, 800b4a0 <lqr_k+0x3e0>)
 800b2a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2a8:	f7f4 fff0 	bl	800028c <__adddf3>
 800b2ac:	4602      	mov	r2, r0
 800b2ae:	460b      	mov	r3, r1
 800b2b0:	e9c4 2300 	strd	r2, r3, [r4]
 800b2b4:	a37c      	add	r3, pc, #496	; (adr r3, 800b4a8 <lqr_k+0x3e8>)
 800b2b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2ba:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b2be:	f7f5 f99b 	bl	80005f8 <__aeabi_dmul>
 800b2c2:	4602      	mov	r2, r0
 800b2c4:	460b      	mov	r3, r1
 800b2c6:	4614      	mov	r4, r2
 800b2c8:	461d      	mov	r5, r3
 800b2ca:	a379      	add	r3, pc, #484	; (adr r3, 800b4b0 <lqr_k+0x3f0>)
 800b2cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2d0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b2d4:	f7f5 f990 	bl	80005f8 <__aeabi_dmul>
 800b2d8:	4602      	mov	r2, r0
 800b2da:	460b      	mov	r3, r1
 800b2dc:	4620      	mov	r0, r4
 800b2de:	4629      	mov	r1, r5
 800b2e0:	f7f4 ffd4 	bl	800028c <__adddf3>
 800b2e4:	4602      	mov	r2, r0
 800b2e6:	460b      	mov	r3, r1
 800b2e8:	4614      	mov	r4, r2
 800b2ea:	461d      	mov	r5, r3
 800b2ec:	a372      	add	r3, pc, #456	; (adr r3, 800b4b8 <lqr_k+0x3f8>)
 800b2ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2f2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b2f6:	f7f5 f97f 	bl	80005f8 <__aeabi_dmul>
 800b2fa:	4602      	mov	r2, r0
 800b2fc:	460b      	mov	r3, r1
 800b2fe:	4620      	mov	r0, r4
 800b300:	4629      	mov	r1, r5
 800b302:	f7f4 ffc1 	bl	8000288 <__aeabi_dsub>
 800b306:	4602      	mov	r2, r0
 800b308:	460b      	mov	r3, r1
 800b30a:	4610      	mov	r0, r2
 800b30c:	4619      	mov	r1, r3
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	f103 0420 	add.w	r4, r3, #32
 800b314:	a36a      	add	r3, pc, #424	; (adr r3, 800b4c0 <lqr_k+0x400>)
 800b316:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b31a:	f7f4 ffb5 	bl	8000288 <__aeabi_dsub>
 800b31e:	4602      	mov	r2, r0
 800b320:	460b      	mov	r3, r1
 800b322:	e9c4 2300 	strd	r2, r3, [r4]
 800b326:	a368      	add	r3, pc, #416	; (adr r3, 800b4c8 <lqr_k+0x408>)
 800b328:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b32c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b330:	f7f5 f962 	bl	80005f8 <__aeabi_dmul>
 800b334:	4602      	mov	r2, r0
 800b336:	460b      	mov	r3, r1
 800b338:	4614      	mov	r4, r2
 800b33a:	461d      	mov	r5, r3
 800b33c:	a364      	add	r3, pc, #400	; (adr r3, 800b4d0 <lqr_k+0x410>)
 800b33e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b342:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b346:	f7f5 f957 	bl	80005f8 <__aeabi_dmul>
 800b34a:	4602      	mov	r2, r0
 800b34c:	460b      	mov	r3, r1
 800b34e:	4620      	mov	r0, r4
 800b350:	4629      	mov	r1, r5
 800b352:	f7f4 ff9b 	bl	800028c <__adddf3>
 800b356:	4602      	mov	r2, r0
 800b358:	460b      	mov	r3, r1
 800b35a:	4614      	mov	r4, r2
 800b35c:	461d      	mov	r5, r3
 800b35e:	a35e      	add	r3, pc, #376	; (adr r3, 800b4d8 <lqr_k+0x418>)
 800b360:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b364:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b368:	f7f5 f946 	bl	80005f8 <__aeabi_dmul>
 800b36c:	4602      	mov	r2, r0
 800b36e:	460b      	mov	r3, r1
 800b370:	4620      	mov	r0, r4
 800b372:	4629      	mov	r1, r5
 800b374:	f7f4 ff88 	bl	8000288 <__aeabi_dsub>
 800b378:	4602      	mov	r2, r0
 800b37a:	460b      	mov	r3, r1
 800b37c:	4610      	mov	r0, r2
 800b37e:	4619      	mov	r1, r3
 800b380:	687b      	ldr	r3, [r7, #4]
 800b382:	f103 0428 	add.w	r4, r3, #40	; 0x28
 800b386:	a356      	add	r3, pc, #344	; (adr r3, 800b4e0 <lqr_k+0x420>)
 800b388:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b38c:	f7f4 ff7e 	bl	800028c <__adddf3>
 800b390:	4602      	mov	r2, r0
 800b392:	460b      	mov	r3, r1
 800b394:	e9c4 2300 	strd	r2, r3, [r4]
 800b398:	a353      	add	r3, pc, #332	; (adr r3, 800b4e8 <lqr_k+0x428>)
 800b39a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b39e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b3a2:	f7f5 f929 	bl	80005f8 <__aeabi_dmul>
 800b3a6:	4602      	mov	r2, r0
 800b3a8:	460b      	mov	r3, r1
 800b3aa:	4614      	mov	r4, r2
 800b3ac:	461d      	mov	r5, r3
 800b3ae:	a350      	add	r3, pc, #320	; (adr r3, 800b4f0 <lqr_k+0x430>)
 800b3b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3b4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b3b8:	f7f5 f91e 	bl	80005f8 <__aeabi_dmul>
 800b3bc:	4602      	mov	r2, r0
 800b3be:	460b      	mov	r3, r1
 800b3c0:	4620      	mov	r0, r4
 800b3c2:	4629      	mov	r1, r5
 800b3c4:	f7f4 ff62 	bl	800028c <__adddf3>
 800b3c8:	4602      	mov	r2, r0
 800b3ca:	460b      	mov	r3, r1
 800b3cc:	4614      	mov	r4, r2
 800b3ce:	461d      	mov	r5, r3
 800b3d0:	a349      	add	r3, pc, #292	; (adr r3, 800b4f8 <lqr_k+0x438>)
 800b3d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3d6:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b3da:	f7f5 f90d 	bl	80005f8 <__aeabi_dmul>
 800b3de:	4602      	mov	r2, r0
 800b3e0:	460b      	mov	r3, r1
 800b3e2:	4620      	mov	r0, r4
 800b3e4:	4629      	mov	r1, r5
 800b3e6:	f7f4 ff4f 	bl	8000288 <__aeabi_dsub>
 800b3ea:	4602      	mov	r2, r0
 800b3ec:	460b      	mov	r3, r1
 800b3ee:	4610      	mov	r0, r2
 800b3f0:	4619      	mov	r1, r3
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	f103 0430 	add.w	r4, r3, #48	; 0x30
 800b3f8:	a341      	add	r3, pc, #260	; (adr r3, 800b500 <lqr_k+0x440>)
 800b3fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3fe:	f7f4 ff43 	bl	8000288 <__aeabi_dsub>
 800b402:	4602      	mov	r2, r0
 800b404:	460b      	mov	r3, r1
 800b406:	e9c4 2300 	strd	r2, r3, [r4]
 800b40a:	a33f      	add	r3, pc, #252	; (adr r3, 800b508 <lqr_k+0x448>)
 800b40c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b410:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b414:	f7f5 f8f0 	bl	80005f8 <__aeabi_dmul>
 800b418:	e07a      	b.n	800b510 <lqr_k+0x450>
 800b41a:	bf00      	nop
 800b41c:	f3af 8000 	nop.w
 800b420:	00000000 	.word	0x00000000
 800b424:	40080000 	.word	0x40080000
 800b428:	e11d56d7 	.word	0xe11d56d7
 800b42c:	c0495e82 	.word	0xc0495e82
 800b430:	cef284e7 	.word	0xcef284e7
 800b434:	40651773 	.word	0x40651773
 800b438:	c64f31c5 	.word	0xc64f31c5
 800b43c:	40715b7a 	.word	0x40715b7a
 800b440:	088684e0 	.word	0x088684e0
 800b444:	40058010 	.word	0x40058010
 800b448:	dc2046b8 	.word	0xdc2046b8
 800b44c:	c0306918 	.word	0xc0306918
 800b450:	d1f54deb 	.word	0xd1f54deb
 800b454:	404a26fe 	.word	0x404a26fe
 800b458:	7f95d98b 	.word	0x7f95d98b
 800b45c:	404f6e68 	.word	0x404f6e68
 800b460:	c2b97df5 	.word	0xc2b97df5
 800b464:	40034320 	.word	0x40034320
 800b468:	bbfc5804 	.word	0xbbfc5804
 800b46c:	c00e57c6 	.word	0xc00e57c6
 800b470:	8b2cbed8 	.word	0x8b2cbed8
 800b474:	3fe136f6 	.word	0x3fe136f6
 800b478:	48541815 	.word	0x48541815
 800b47c:	401596a8 	.word	0x401596a8
 800b480:	553c5f99 	.word	0x553c5f99
 800b484:	3fd643b5 	.word	0x3fd643b5
 800b488:	8b6872cc 	.word	0x8b6872cc
 800b48c:	c0030952 	.word	0xc0030952
 800b490:	0321b9a5 	.word	0x0321b9a5
 800b494:	40221b5e 	.word	0x40221b5e
 800b498:	5e67f3fd 	.word	0x5e67f3fd
 800b49c:	402a2fcb 	.word	0x402a2fcb
 800b4a0:	2466f335 	.word	0x2466f335
 800b4a4:	3fd58446 	.word	0x3fd58446
 800b4a8:	12933d46 	.word	0x12933d46
 800b4ac:	c022345e 	.word	0xc022345e
 800b4b0:	104153cc 	.word	0x104153cc
 800b4b4:	404791c5 	.word	0x404791c5
 800b4b8:	b37e44bf 	.word	0xb37e44bf
 800b4bc:	4054e01e 	.word	0x4054e01e
 800b4c0:	35d984fd 	.word	0x35d984fd
 800b4c4:	4004470f 	.word	0x4004470f
 800b4c8:	6d2a2eb6 	.word	0x6d2a2eb6
 800b4cc:	c035b964 	.word	0xc035b964
 800b4d0:	001d5b40 	.word	0x001d5b40
 800b4d4:	4056ca7d 	.word	0x4056ca7d
 800b4d8:	67da7a89 	.word	0x67da7a89
 800b4dc:	4061b7f6 	.word	0x4061b7f6
 800b4e0:	5ee7abc5 	.word	0x5ee7abc5
 800b4e4:	4001a635 	.word	0x4001a635
 800b4e8:	3c8af835 	.word	0x3c8af835
 800b4ec:	c00363cc 	.word	0xc00363cc
 800b4f0:	2d7aa92b 	.word	0x2d7aa92b
 800b4f4:	401a315b 	.word	0x401a315b
 800b4f8:	bc999b77 	.word	0xbc999b77
 800b4fc:	4028ad80 	.word	0x4028ad80
 800b500:	cfcf5d7c 	.word	0xcfcf5d7c
 800b504:	40032833 	.word	0x40032833
 800b508:	9ad97d7b 	.word	0x9ad97d7b
 800b50c:	c03416fd 	.word	0xc03416fd
 800b510:	4602      	mov	r2, r0
 800b512:	460b      	mov	r3, r1
 800b514:	4614      	mov	r4, r2
 800b516:	461d      	mov	r5, r3
 800b518:	a38b      	add	r3, pc, #556	; (adr r3, 800b748 <lqr_k+0x688>)
 800b51a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b51e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b522:	f7f5 f869 	bl	80005f8 <__aeabi_dmul>
 800b526:	4602      	mov	r2, r0
 800b528:	460b      	mov	r3, r1
 800b52a:	4620      	mov	r0, r4
 800b52c:	4629      	mov	r1, r5
 800b52e:	f7f4 fead 	bl	800028c <__adddf3>
 800b532:	4602      	mov	r2, r0
 800b534:	460b      	mov	r3, r1
 800b536:	4614      	mov	r4, r2
 800b538:	461d      	mov	r5, r3
 800b53a:	a385      	add	r3, pc, #532	; (adr r3, 800b750 <lqr_k+0x690>)
 800b53c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b540:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b544:	f7f5 f858 	bl	80005f8 <__aeabi_dmul>
 800b548:	4602      	mov	r2, r0
 800b54a:	460b      	mov	r3, r1
 800b54c:	4620      	mov	r0, r4
 800b54e:	4629      	mov	r1, r5
 800b550:	f7f4 fe9a 	bl	8000288 <__aeabi_dsub>
 800b554:	4602      	mov	r2, r0
 800b556:	460b      	mov	r3, r1
 800b558:	4610      	mov	r0, r2
 800b55a:	4619      	mov	r1, r3
 800b55c:	687b      	ldr	r3, [r7, #4]
 800b55e:	f103 0438 	add.w	r4, r3, #56	; 0x38
 800b562:	a37d      	add	r3, pc, #500	; (adr r3, 800b758 <lqr_k+0x698>)
 800b564:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b568:	f7f4 fe90 	bl	800028c <__adddf3>
 800b56c:	4602      	mov	r2, r0
 800b56e:	460b      	mov	r3, r1
 800b570:	e9c4 2300 	strd	r2, r3, [r4]
 800b574:	a37a      	add	r3, pc, #488	; (adr r3, 800b760 <lqr_k+0x6a0>)
 800b576:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b57a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b57e:	f7f5 f83b 	bl	80005f8 <__aeabi_dmul>
 800b582:	4602      	mov	r2, r0
 800b584:	460b      	mov	r3, r1
 800b586:	4614      	mov	r4, r2
 800b588:	461d      	mov	r5, r3
 800b58a:	a377      	add	r3, pc, #476	; (adr r3, 800b768 <lqr_k+0x6a8>)
 800b58c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b590:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b594:	f7f5 f830 	bl	80005f8 <__aeabi_dmul>
 800b598:	4602      	mov	r2, r0
 800b59a:	460b      	mov	r3, r1
 800b59c:	4620      	mov	r0, r4
 800b59e:	4629      	mov	r1, r5
 800b5a0:	f7f4 fe74 	bl	800028c <__adddf3>
 800b5a4:	4602      	mov	r2, r0
 800b5a6:	460b      	mov	r3, r1
 800b5a8:	4614      	mov	r4, r2
 800b5aa:	461d      	mov	r5, r3
 800b5ac:	a370      	add	r3, pc, #448	; (adr r3, 800b770 <lqr_k+0x6b0>)
 800b5ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b5b2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b5b6:	f7f5 f81f 	bl	80005f8 <__aeabi_dmul>
 800b5ba:	4602      	mov	r2, r0
 800b5bc:	460b      	mov	r3, r1
 800b5be:	4620      	mov	r0, r4
 800b5c0:	4629      	mov	r1, r5
 800b5c2:	f7f4 fe61 	bl	8000288 <__aeabi_dsub>
 800b5c6:	4602      	mov	r2, r0
 800b5c8:	460b      	mov	r3, r1
 800b5ca:	4610      	mov	r0, r2
 800b5cc:	4619      	mov	r1, r3
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800b5d4:	a368      	add	r3, pc, #416	; (adr r3, 800b778 <lqr_k+0x6b8>)
 800b5d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b5da:	f7f4 fe57 	bl	800028c <__adddf3>
 800b5de:	4602      	mov	r2, r0
 800b5e0:	460b      	mov	r3, r1
 800b5e2:	e9c4 2300 	strd	r2, r3, [r4]
 800b5e6:	a366      	add	r3, pc, #408	; (adr r3, 800b780 <lqr_k+0x6c0>)
 800b5e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b5ec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b5f0:	f7f5 f802 	bl	80005f8 <__aeabi_dmul>
 800b5f4:	4602      	mov	r2, r0
 800b5f6:	460b      	mov	r3, r1
 800b5f8:	4614      	mov	r4, r2
 800b5fa:	461d      	mov	r5, r3
 800b5fc:	a362      	add	r3, pc, #392	; (adr r3, 800b788 <lqr_k+0x6c8>)
 800b5fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b602:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b606:	f7f4 fff7 	bl	80005f8 <__aeabi_dmul>
 800b60a:	4602      	mov	r2, r0
 800b60c:	460b      	mov	r3, r1
 800b60e:	4620      	mov	r0, r4
 800b610:	4629      	mov	r1, r5
 800b612:	f7f4 fe39 	bl	8000288 <__aeabi_dsub>
 800b616:	4602      	mov	r2, r0
 800b618:	460b      	mov	r3, r1
 800b61a:	4614      	mov	r4, r2
 800b61c:	461d      	mov	r5, r3
 800b61e:	a35c      	add	r3, pc, #368	; (adr r3, 800b790 <lqr_k+0x6d0>)
 800b620:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b624:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b628:	f7f4 ffe6 	bl	80005f8 <__aeabi_dmul>
 800b62c:	4602      	mov	r2, r0
 800b62e:	460b      	mov	r3, r1
 800b630:	4620      	mov	r0, r4
 800b632:	4629      	mov	r1, r5
 800b634:	f7f4 fe2a 	bl	800028c <__adddf3>
 800b638:	4602      	mov	r2, r0
 800b63a:	460b      	mov	r3, r1
 800b63c:	4610      	mov	r0, r2
 800b63e:	4619      	mov	r1, r3
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	f103 0448 	add.w	r4, r3, #72	; 0x48
 800b646:	a354      	add	r3, pc, #336	; (adr r3, 800b798 <lqr_k+0x6d8>)
 800b648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b64c:	f7f4 fe1e 	bl	800028c <__adddf3>
 800b650:	4602      	mov	r2, r0
 800b652:	460b      	mov	r3, r1
 800b654:	e9c4 2300 	strd	r2, r3, [r4]
 800b658:	a351      	add	r3, pc, #324	; (adr r3, 800b7a0 <lqr_k+0x6e0>)
 800b65a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b65e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b662:	f7f4 ffc9 	bl	80005f8 <__aeabi_dmul>
 800b666:	4602      	mov	r2, r0
 800b668:	460b      	mov	r3, r1
 800b66a:	4614      	mov	r4, r2
 800b66c:	461d      	mov	r5, r3
 800b66e:	a34e      	add	r3, pc, #312	; (adr r3, 800b7a8 <lqr_k+0x6e8>)
 800b670:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b674:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b678:	f7f4 ffbe 	bl	80005f8 <__aeabi_dmul>
 800b67c:	4602      	mov	r2, r0
 800b67e:	460b      	mov	r3, r1
 800b680:	4620      	mov	r0, r4
 800b682:	4629      	mov	r1, r5
 800b684:	f7f4 fe02 	bl	800028c <__adddf3>
 800b688:	4602      	mov	r2, r0
 800b68a:	460b      	mov	r3, r1
 800b68c:	4614      	mov	r4, r2
 800b68e:	461d      	mov	r5, r3
 800b690:	a347      	add	r3, pc, #284	; (adr r3, 800b7b0 <lqr_k+0x6f0>)
 800b692:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b696:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b69a:	f7f4 ffad 	bl	80005f8 <__aeabi_dmul>
 800b69e:	4602      	mov	r2, r0
 800b6a0:	460b      	mov	r3, r1
 800b6a2:	4620      	mov	r0, r4
 800b6a4:	4629      	mov	r1, r5
 800b6a6:	f7f4 fdef 	bl	8000288 <__aeabi_dsub>
 800b6aa:	4602      	mov	r2, r0
 800b6ac:	460b      	mov	r3, r1
 800b6ae:	4610      	mov	r0, r2
 800b6b0:	4619      	mov	r1, r3
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	f103 0450 	add.w	r4, r3, #80	; 0x50
 800b6b8:	a33f      	add	r3, pc, #252	; (adr r3, 800b7b8 <lqr_k+0x6f8>)
 800b6ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6be:	f7f4 fde5 	bl	800028c <__adddf3>
 800b6c2:	4602      	mov	r2, r0
 800b6c4:	460b      	mov	r3, r1
 800b6c6:	e9c4 2300 	strd	r2, r3, [r4]
 800b6ca:	a33d      	add	r3, pc, #244	; (adr r3, 800b7c0 <lqr_k+0x700>)
 800b6cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6d0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b6d4:	f7f4 ff90 	bl	80005f8 <__aeabi_dmul>
 800b6d8:	4602      	mov	r2, r0
 800b6da:	460b      	mov	r3, r1
 800b6dc:	4614      	mov	r4, r2
 800b6de:	461d      	mov	r5, r3
 800b6e0:	a339      	add	r3, pc, #228	; (adr r3, 800b7c8 <lqr_k+0x708>)
 800b6e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6e6:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b6ea:	f7f4 ff85 	bl	80005f8 <__aeabi_dmul>
 800b6ee:	4602      	mov	r2, r0
 800b6f0:	460b      	mov	r3, r1
 800b6f2:	4620      	mov	r0, r4
 800b6f4:	4629      	mov	r1, r5
 800b6f6:	f7f4 fdc7 	bl	8000288 <__aeabi_dsub>
 800b6fa:	4602      	mov	r2, r0
 800b6fc:	460b      	mov	r3, r1
 800b6fe:	4614      	mov	r4, r2
 800b700:	461d      	mov	r5, r3
 800b702:	a333      	add	r3, pc, #204	; (adr r3, 800b7d0 <lqr_k+0x710>)
 800b704:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b708:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b70c:	f7f4 ff74 	bl	80005f8 <__aeabi_dmul>
 800b710:	4602      	mov	r2, r0
 800b712:	460b      	mov	r3, r1
 800b714:	4620      	mov	r0, r4
 800b716:	4629      	mov	r1, r5
 800b718:	f7f4 fdb8 	bl	800028c <__adddf3>
 800b71c:	4602      	mov	r2, r0
 800b71e:	460b      	mov	r3, r1
 800b720:	4610      	mov	r0, r2
 800b722:	4619      	mov	r1, r3
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	f103 0458 	add.w	r4, r3, #88	; 0x58
 800b72a:	a32b      	add	r3, pc, #172	; (adr r3, 800b7d8 <lqr_k+0x718>)
 800b72c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b730:	f7f4 fdac 	bl	800028c <__adddf3>
 800b734:	4602      	mov	r2, r0
 800b736:	460b      	mov	r3, r1
 800b738:	e9c4 2300 	strd	r2, r3, [r4]
 800b73c:	bf00      	nop
 800b73e:	3720      	adds	r7, #32
 800b740:	46bd      	mov	sp, r7
 800b742:	bdb0      	pop	{r4, r5, r7, pc}
 800b744:	f3af 8000 	nop.w
 800b748:	ec636a38 	.word	0xec636a38
 800b74c:	40563570 	.word	0x40563570
 800b750:	de607f9b 	.word	0xde607f9b
 800b754:	4061f95b 	.word	0x4061f95b
 800b758:	d857dd98 	.word	0xd857dd98
 800b75c:	3ffed8c9 	.word	0x3ffed8c9
 800b760:	a994a8df 	.word	0xa994a8df
 800b764:	c0512caa 	.word	0xc0512caa
 800b768:	67b97e90 	.word	0x67b97e90
 800b76c:	40720491 	.word	0x40720491
 800b770:	89aa9a8f 	.word	0x89aa9a8f
 800b774:	407c03fc 	.word	0x407c03fc
 800b778:	34ddb1fa 	.word	0x34ddb1fa
 800b77c:	401be7ea 	.word	0x401be7ea
 800b780:	1ed9f335 	.word	0x1ed9f335
 800b784:	403cc8b0 	.word	0x403cc8b0
 800b788:	24f0940c 	.word	0x24f0940c
 800b78c:	4062a21d 	.word	0x4062a21d
 800b790:	d3de004a 	.word	0xd3de004a
 800b794:	407080e5 	.word	0x407080e5
 800b798:	8ee6d215 	.word	0x8ee6d215
 800b79c:	402007e4 	.word	0x402007e4
 800b7a0:	61780aba 	.word	0x61780aba
 800b7a4:	c011e3af 	.word	0xc011e3af
 800b7a8:	95202cc4 	.word	0x95202cc4
 800b7ac:	40327c8a 	.word	0x40327c8a
 800b7b0:	51990ce8 	.word	0x51990ce8
 800b7b4:	403cbbaa 	.word	0x403cbbaa
 800b7b8:	843f48ab 	.word	0x843f48ab
 800b7bc:	3fdf7186 	.word	0x3fdf7186
 800b7c0:	2f3d86ed 	.word	0x2f3d86ed
 800b7c4:	3ffeb730 	.word	0x3ffeb730
 800b7c8:	ef16c0ea 	.word	0xef16c0ea
 800b7cc:	4023a29b 	.word	0x4023a29b
 800b7d0:	84ebc161 	.word	0x84ebc161
 800b7d4:	403147f4 	.word	0x403147f4
 800b7d8:	0a47f0a1 	.word	0x0a47f0a1
 800b7dc:	3fdd2d7f 	.word	0x3fdd2d7f

0800b7e0 <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t* motor){
 800b7e0:	b480      	push	{r7}
 800b7e2:	b083      	sub	sp, #12
 800b7e4:	af00      	add	r7, sp, #0
 800b7e6:	6078      	str	r0, [r7, #4]
	//general config:
		switch(motor->motor_type){
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	789b      	ldrb	r3, [r3, #2]
 800b7ec:	3b01      	subs	r3, #1
 800b7ee:	2b08      	cmp	r3, #8
 800b7f0:	d849      	bhi.n	800b886 <set_motor_config+0xa6>
 800b7f2:	a201      	add	r2, pc, #4	; (adr r2, 800b7f8 <set_motor_config+0x18>)
 800b7f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b7f8:	0800b853 	.word	0x0800b853
 800b7fc:	0800b86d 	.word	0x0800b86d
 800b800:	0800b81d 	.word	0x0800b81d
 800b804:	0800b837 	.word	0x0800b837
 800b808:	0800b81d 	.word	0x0800b81d
 800b80c:	0800b86d 	.word	0x0800b86d
 800b810:	0800b86d 	.word	0x0800b86d
 800b814:	0800b81d 	.word	0x0800b81d
 800b818:	0800b853 	.word	0x0800b853
		case TYPE_M3508_ANGLE:
		case TYPE_M3508_STEPS:
		case TYPE_M3508:
			motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800b81c:	687b      	ldr	r3, [r7, #4]
 800b81e:	4a1d      	ldr	r2, [pc, #116]	; (800b894 <set_motor_config+0xb4>)
 800b820:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	4a1c      	ldr	r2, [pc, #112]	; (800b898 <set_motor_config+0xb8>)
 800b828:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b832:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b834:	e028      	b.n	800b888 <set_motor_config+0xa8>
		case TYPE_M3508_NGEARBOX:
			motor->angle_data.gearbox_ratio = 1;
 800b836:	687b      	ldr	r3, [r7, #4]
 800b838:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800b83c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b840:	687b      	ldr	r3, [r7, #4]
 800b842:	4a15      	ldr	r2, [pc, #84]	; (800b898 <set_motor_config+0xb8>)
 800b844:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b84e:	65da      	str	r2, [r3, #92]	; 0x5c

		break;
 800b850:	e01a      	b.n	800b888 <set_motor_config+0xa8>
		case TYPE_GM6020:
		case TYPE_GM6020_720:
			motor->angle_data.gearbox_ratio = 0;
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	f04f 0200 	mov.w	r2, #0
 800b858:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = GM6020_MAX_RPM;
 800b85c:	687b      	ldr	r3, [r7, #4]
 800b85e:	4a0f      	ldr	r2, [pc, #60]	; (800b89c <set_motor_config+0xbc>)
 800b860:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800b864:	687b      	ldr	r3, [r7, #4]
 800b866:	4a0e      	ldr	r2, [pc, #56]	; (800b8a0 <set_motor_config+0xc0>)
 800b868:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b86a:	e00d      	b.n	800b888 <set_motor_config+0xa8>
		case TYPE_M2006:
		case TYPE_M2006_STEPS:
		case TYPE_M2006_ANGLE:
			motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 800b86c:	687b      	ldr	r3, [r7, #4]
 800b86e:	4a0d      	ldr	r2, [pc, #52]	; (800b8a4 <set_motor_config+0xc4>)
 800b870:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M2006_MAX_RPM;
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	4a0c      	ldr	r2, [pc, #48]	; (800b8a8 <set_motor_config+0xc8>)
 800b878:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 800b87c:	687b      	ldr	r3, [r7, #4]
 800b87e:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b882:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b884:	e000      	b.n	800b888 <set_motor_config+0xa8>
		default:
			break;
 800b886:	bf00      	nop
		}

}
 800b888:	bf00      	nop
 800b88a:	370c      	adds	r7, #12
 800b88c:	46bd      	mov	sp, r7
 800b88e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b892:	4770      	bx	lr
 800b894:	4199999a 	.word	0x4199999a
 800b898:	460ca000 	.word	0x460ca000
 800b89c:	43c80000 	.word	0x43c80000
 800b8a0:	469c4000 	.word	0x469c4000
 800b8a4:	42100000 	.word	0x42100000
 800b8a8:	466a6000 	.word	0x466a6000

0800b8ac <config_motors>:

extern motor_data_t can_motors[24];
void config_motors() {
 800b8ac:	b580      	push	{r7, lr}
 800b8ae:	b082      	sub	sp, #8
 800b8b0:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i <= 24; i++) {
 800b8b2:	2300      	movs	r3, #0
 800b8b4:	71fb      	strb	r3, [r7, #7]
 800b8b6:	e042      	b.n	800b93e <config_motors+0x92>
		//reset all the values to 0
		can_motors[i].motor_type = 0;
 800b8b8:	79fa      	ldrb	r2, [r7, #7]
 800b8ba:	49c2      	ldr	r1, [pc, #776]	; (800bbc4 <config_motors+0x318>)
 800b8bc:	4613      	mov	r3, r2
 800b8be:	011b      	lsls	r3, r3, #4
 800b8c0:	1a9b      	subs	r3, r3, r2
 800b8c2:	011b      	lsls	r3, r3, #4
 800b8c4:	440b      	add	r3, r1
 800b8c6:	3302      	adds	r3, #2
 800b8c8:	2200      	movs	r2, #0
 800b8ca:	701a      	strb	r2, [r3, #0]
		can_motors[i].rpm_pid.output = 0;
 800b8cc:	79fa      	ldrb	r2, [r7, #7]
 800b8ce:	49bd      	ldr	r1, [pc, #756]	; (800bbc4 <config_motors+0x318>)
 800b8d0:	4613      	mov	r3, r2
 800b8d2:	011b      	lsls	r3, r3, #4
 800b8d4:	1a9b      	subs	r3, r3, r2
 800b8d6:	011b      	lsls	r3, r3, #4
 800b8d8:	440b      	add	r3, r1
 800b8da:	3358      	adds	r3, #88	; 0x58
 800b8dc:	f04f 0200 	mov.w	r2, #0
 800b8e0:	601a      	str	r2, [r3, #0]
		can_motors[i].rpm_pid.integral = 0;
 800b8e2:	79fa      	ldrb	r2, [r7, #7]
 800b8e4:	49b7      	ldr	r1, [pc, #732]	; (800bbc4 <config_motors+0x318>)
 800b8e6:	4613      	mov	r3, r2
 800b8e8:	011b      	lsls	r3, r3, #4
 800b8ea:	1a9b      	subs	r3, r3, r2
 800b8ec:	011b      	lsls	r3, r3, #4
 800b8ee:	440b      	add	r3, r1
 800b8f0:	334c      	adds	r3, #76	; 0x4c
 800b8f2:	f04f 0200 	mov.w	r2, #0
 800b8f6:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_pid.output = 0;
 800b8f8:	79fa      	ldrb	r2, [r7, #7]
 800b8fa:	49b2      	ldr	r1, [pc, #712]	; (800bbc4 <config_motors+0x318>)
 800b8fc:	4613      	mov	r3, r2
 800b8fe:	011b      	lsls	r3, r3, #4
 800b900:	1a9b      	subs	r3, r3, r2
 800b902:	011b      	lsls	r3, r3, #4
 800b904:	440b      	add	r3, r1
 800b906:	3388      	adds	r3, #136	; 0x88
 800b908:	f04f 0200 	mov.w	r2, #0
 800b90c:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_pid.integral = 0;
 800b90e:	79fa      	ldrb	r2, [r7, #7]
 800b910:	49ac      	ldr	r1, [pc, #688]	; (800bbc4 <config_motors+0x318>)
 800b912:	4613      	mov	r3, r2
 800b914:	011b      	lsls	r3, r3, #4
 800b916:	1a9b      	subs	r3, r3, r2
 800b918:	011b      	lsls	r3, r3, #4
 800b91a:	440b      	add	r3, r1
 800b91c:	337c      	adds	r3, #124	; 0x7c
 800b91e:	f04f 0200 	mov.w	r2, #0
 800b922:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_data.ticks = 0;
 800b924:	79fa      	ldrb	r2, [r7, #7]
 800b926:	49a7      	ldr	r1, [pc, #668]	; (800bbc4 <config_motors+0x318>)
 800b928:	4613      	mov	r3, r2
 800b92a:	011b      	lsls	r3, r3, #4
 800b92c:	1a9b      	subs	r3, r3, r2
 800b92e:	011b      	lsls	r3, r3, #4
 800b930:	440b      	add	r3, r1
 800b932:	3398      	adds	r3, #152	; 0x98
 800b934:	2200      	movs	r2, #0
 800b936:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i <= 24; i++) {
 800b938:	79fb      	ldrb	r3, [r7, #7]
 800b93a:	3301      	adds	r3, #1
 800b93c:	71fb      	strb	r3, [r7, #7]
 800b93e:	79fb      	ldrb	r3, [r7, #7]
 800b940:	2b18      	cmp	r3, #24
 800b942:	d9b9      	bls.n	800b8b8 <config_motors+0xc>
	}

	//initialise motor data
#ifdef Leftwheel_MOTOR_ID
	uint8_t motor_id = Leftwheel_MOTOR_ID - 1;
 800b944:	2300      	movs	r3, #0
 800b946:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800b948:	79ba      	ldrb	r2, [r7, #6]
 800b94a:	499e      	ldr	r1, [pc, #632]	; (800bbc4 <config_motors+0x318>)
 800b94c:	4613      	mov	r3, r2
 800b94e:	011b      	lsls	r3, r3, #4
 800b950:	1a9b      	subs	r3, r3, r2
 800b952:	011b      	lsls	r3, r3, #4
 800b954:	440b      	add	r3, r1
 800b956:	3302      	adds	r3, #2
 800b958:	2203      	movs	r2, #3
 800b95a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800b95c:	79ba      	ldrb	r2, [r7, #6]
 800b95e:	4613      	mov	r3, r2
 800b960:	011b      	lsls	r3, r3, #4
 800b962:	1a9b      	subs	r3, r3, r2
 800b964:	011b      	lsls	r3, r3, #4
 800b966:	4a97      	ldr	r2, [pc, #604]	; (800bbc4 <config_motors+0x318>)
 800b968:	4413      	add	r3, r2
 800b96a:	4618      	mov	r0, r3
 800b96c:	f7ff ff38 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800b970:	79ba      	ldrb	r2, [r7, #6]
 800b972:	4994      	ldr	r1, [pc, #592]	; (800bbc4 <config_motors+0x318>)
 800b974:	4613      	mov	r3, r2
 800b976:	011b      	lsls	r3, r3, #4
 800b978:	1a9b      	subs	r3, r3, r2
 800b97a:	011b      	lsls	r3, r3, #4
 800b97c:	440b      	add	r3, r1
 800b97e:	339c      	adds	r3, #156	; 0x9c
 800b980:	2200      	movs	r2, #0
 800b982:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800b984:	79ba      	ldrb	r2, [r7, #6]
 800b986:	498f      	ldr	r1, [pc, #572]	; (800bbc4 <config_motors+0x318>)
 800b988:	4613      	mov	r3, r2
 800b98a:	011b      	lsls	r3, r3, #4
 800b98c:	1a9b      	subs	r3, r3, r2
 800b98e:	011b      	lsls	r3, r3, #4
 800b990:	440b      	add	r3, r1
 800b992:	33b8      	adds	r3, #184	; 0xb8
 800b994:	f04f 0200 	mov.w	r2, #0
 800b998:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800b99a:	79ba      	ldrb	r2, [r7, #6]
 800b99c:	4989      	ldr	r1, [pc, #548]	; (800bbc4 <config_motors+0x318>)
 800b99e:	4613      	mov	r3, r2
 800b9a0:	011b      	lsls	r3, r3, #4
 800b9a2:	1a9b      	subs	r3, r3, r2
 800b9a4:	011b      	lsls	r3, r3, #4
 800b9a6:	440b      	add	r3, r1
 800b9a8:	33b4      	adds	r3, #180	; 0xb4
 800b9aa:	f04f 0200 	mov.w	r2, #0
 800b9ae:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800b9b0:	79ba      	ldrb	r2, [r7, #6]
 800b9b2:	4984      	ldr	r1, [pc, #528]	; (800bbc4 <config_motors+0x318>)
 800b9b4:	4613      	mov	r3, r2
 800b9b6:	011b      	lsls	r3, r3, #4
 800b9b8:	1a9b      	subs	r3, r3, r2
 800b9ba:	011b      	lsls	r3, r3, #4
 800b9bc:	440b      	add	r3, r1
 800b9be:	3338      	adds	r3, #56	; 0x38
 800b9c0:	4a81      	ldr	r2, [pc, #516]	; (800bbc8 <config_motors+0x31c>)
 800b9c2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800b9c4:	79ba      	ldrb	r2, [r7, #6]
 800b9c6:	497f      	ldr	r1, [pc, #508]	; (800bbc4 <config_motors+0x318>)
 800b9c8:	4613      	mov	r3, r2
 800b9ca:	011b      	lsls	r3, r3, #4
 800b9cc:	1a9b      	subs	r3, r3, r2
 800b9ce:	011b      	lsls	r3, r3, #4
 800b9d0:	440b      	add	r3, r1
 800b9d2:	333c      	adds	r3, #60	; 0x3c
 800b9d4:	4a7d      	ldr	r2, [pc, #500]	; (800bbcc <config_motors+0x320>)
 800b9d6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800b9d8:	79ba      	ldrb	r2, [r7, #6]
 800b9da:	497a      	ldr	r1, [pc, #488]	; (800bbc4 <config_motors+0x318>)
 800b9dc:	4613      	mov	r3, r2
 800b9de:	011b      	lsls	r3, r3, #4
 800b9e0:	1a9b      	subs	r3, r3, r2
 800b9e2:	011b      	lsls	r3, r3, #4
 800b9e4:	440b      	add	r3, r1
 800b9e6:	3340      	adds	r3, #64	; 0x40
 800b9e8:	4a79      	ldr	r2, [pc, #484]	; (800bbd0 <config_motors+0x324>)
 800b9ea:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800b9ec:	79ba      	ldrb	r2, [r7, #6]
 800b9ee:	4975      	ldr	r1, [pc, #468]	; (800bbc4 <config_motors+0x318>)
 800b9f0:	4613      	mov	r3, r2
 800b9f2:	011b      	lsls	r3, r3, #4
 800b9f4:	1a9b      	subs	r3, r3, r2
 800b9f6:	011b      	lsls	r3, r3, #4
 800b9f8:	440b      	add	r3, r1
 800b9fa:	33d4      	adds	r3, #212	; 0xd4
 800b9fc:	4a75      	ldr	r2, [pc, #468]	; (800bbd4 <config_motors+0x328>)
 800b9fe:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800ba00:	79ba      	ldrb	r2, [r7, #6]
 800ba02:	4970      	ldr	r1, [pc, #448]	; (800bbc4 <config_motors+0x318>)
 800ba04:	4613      	mov	r3, r2
 800ba06:	011b      	lsls	r3, r3, #4
 800ba08:	1a9b      	subs	r3, r3, r2
 800ba0a:	011b      	lsls	r3, r3, #4
 800ba0c:	440b      	add	r3, r1
 800ba0e:	3350      	adds	r3, #80	; 0x50
 800ba10:	4a71      	ldr	r2, [pc, #452]	; (800bbd8 <config_motors+0x32c>)
 800ba12:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800ba14:	79ba      	ldrb	r2, [r7, #6]
 800ba16:	496b      	ldr	r1, [pc, #428]	; (800bbc4 <config_motors+0x318>)
 800ba18:	4613      	mov	r3, r2
 800ba1a:	011b      	lsls	r3, r3, #4
 800ba1c:	1a9b      	subs	r3, r3, r2
 800ba1e:	011b      	lsls	r3, r3, #4
 800ba20:	440b      	add	r3, r1
 800ba22:	3354      	adds	r3, #84	; 0x54
 800ba24:	4a6d      	ldr	r2, [pc, #436]	; (800bbdc <config_motors+0x330>)
 800ba26:	601a      	str	r2, [r3, #0]
#endif

#ifdef Rightwheel_MOTOR_ID
	motor_id =Rightwheel_MOTOR_ID - 1;
 800ba28:	2301      	movs	r3, #1
 800ba2a:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800ba2c:	79ba      	ldrb	r2, [r7, #6]
 800ba2e:	4965      	ldr	r1, [pc, #404]	; (800bbc4 <config_motors+0x318>)
 800ba30:	4613      	mov	r3, r2
 800ba32:	011b      	lsls	r3, r3, #4
 800ba34:	1a9b      	subs	r3, r3, r2
 800ba36:	011b      	lsls	r3, r3, #4
 800ba38:	440b      	add	r3, r1
 800ba3a:	3302      	adds	r3, #2
 800ba3c:	2203      	movs	r2, #3
 800ba3e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800ba40:	79ba      	ldrb	r2, [r7, #6]
 800ba42:	4613      	mov	r3, r2
 800ba44:	011b      	lsls	r3, r3, #4
 800ba46:	1a9b      	subs	r3, r3, r2
 800ba48:	011b      	lsls	r3, r3, #4
 800ba4a:	4a5e      	ldr	r2, [pc, #376]	; (800bbc4 <config_motors+0x318>)
 800ba4c:	4413      	add	r3, r2
 800ba4e:	4618      	mov	r0, r3
 800ba50:	f7ff fec6 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800ba54:	79ba      	ldrb	r2, [r7, #6]
 800ba56:	495b      	ldr	r1, [pc, #364]	; (800bbc4 <config_motors+0x318>)
 800ba58:	4613      	mov	r3, r2
 800ba5a:	011b      	lsls	r3, r3, #4
 800ba5c:	1a9b      	subs	r3, r3, r2
 800ba5e:	011b      	lsls	r3, r3, #4
 800ba60:	440b      	add	r3, r1
 800ba62:	339c      	adds	r3, #156	; 0x9c
 800ba64:	2200      	movs	r2, #0
 800ba66:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800ba68:	79ba      	ldrb	r2, [r7, #6]
 800ba6a:	4956      	ldr	r1, [pc, #344]	; (800bbc4 <config_motors+0x318>)
 800ba6c:	4613      	mov	r3, r2
 800ba6e:	011b      	lsls	r3, r3, #4
 800ba70:	1a9b      	subs	r3, r3, r2
 800ba72:	011b      	lsls	r3, r3, #4
 800ba74:	440b      	add	r3, r1
 800ba76:	33b8      	adds	r3, #184	; 0xb8
 800ba78:	f04f 0200 	mov.w	r2, #0
 800ba7c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800ba7e:	79ba      	ldrb	r2, [r7, #6]
 800ba80:	4950      	ldr	r1, [pc, #320]	; (800bbc4 <config_motors+0x318>)
 800ba82:	4613      	mov	r3, r2
 800ba84:	011b      	lsls	r3, r3, #4
 800ba86:	1a9b      	subs	r3, r3, r2
 800ba88:	011b      	lsls	r3, r3, #4
 800ba8a:	440b      	add	r3, r1
 800ba8c:	33b4      	adds	r3, #180	; 0xb4
 800ba8e:	f04f 0200 	mov.w	r2, #0
 800ba92:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800ba94:	79ba      	ldrb	r2, [r7, #6]
 800ba96:	494b      	ldr	r1, [pc, #300]	; (800bbc4 <config_motors+0x318>)
 800ba98:	4613      	mov	r3, r2
 800ba9a:	011b      	lsls	r3, r3, #4
 800ba9c:	1a9b      	subs	r3, r3, r2
 800ba9e:	011b      	lsls	r3, r3, #4
 800baa0:	440b      	add	r3, r1
 800baa2:	33c4      	adds	r3, #196	; 0xc4
 800baa4:	4a4e      	ldr	r2, [pc, #312]	; (800bbe0 <config_motors+0x334>)
 800baa6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800baa8:	79ba      	ldrb	r2, [r7, #6]
 800baaa:	4946      	ldr	r1, [pc, #280]	; (800bbc4 <config_motors+0x318>)
 800baac:	4613      	mov	r3, r2
 800baae:	011b      	lsls	r3, r3, #4
 800bab0:	1a9b      	subs	r3, r3, r2
 800bab2:	011b      	lsls	r3, r3, #4
 800bab4:	440b      	add	r3, r1
 800bab6:	33c0      	adds	r3, #192	; 0xc0
 800bab8:	4a4a      	ldr	r2, [pc, #296]	; (800bbe4 <config_motors+0x338>)
 800baba:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800babc:	79ba      	ldrb	r2, [r7, #6]
 800babe:	4941      	ldr	r1, [pc, #260]	; (800bbc4 <config_motors+0x318>)
 800bac0:	4613      	mov	r3, r2
 800bac2:	011b      	lsls	r3, r3, #4
 800bac4:	1a9b      	subs	r3, r3, r2
 800bac6:	011b      	lsls	r3, r3, #4
 800bac8:	440b      	add	r3, r1
 800baca:	33d4      	adds	r3, #212	; 0xd4
 800bacc:	4a41      	ldr	r2, [pc, #260]	; (800bbd4 <config_motors+0x328>)
 800bace:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bad0:	79ba      	ldrb	r2, [r7, #6]
 800bad2:	493c      	ldr	r1, [pc, #240]	; (800bbc4 <config_motors+0x318>)
 800bad4:	4613      	mov	r3, r2
 800bad6:	011b      	lsls	r3, r3, #4
 800bad8:	1a9b      	subs	r3, r3, r2
 800bada:	011b      	lsls	r3, r3, #4
 800badc:	440b      	add	r3, r1
 800bade:	3338      	adds	r3, #56	; 0x38
 800bae0:	4a39      	ldr	r2, [pc, #228]	; (800bbc8 <config_motors+0x31c>)
 800bae2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bae4:	79ba      	ldrb	r2, [r7, #6]
 800bae6:	4937      	ldr	r1, [pc, #220]	; (800bbc4 <config_motors+0x318>)
 800bae8:	4613      	mov	r3, r2
 800baea:	011b      	lsls	r3, r3, #4
 800baec:	1a9b      	subs	r3, r3, r2
 800baee:	011b      	lsls	r3, r3, #4
 800baf0:	440b      	add	r3, r1
 800baf2:	333c      	adds	r3, #60	; 0x3c
 800baf4:	4a35      	ldr	r2, [pc, #212]	; (800bbcc <config_motors+0x320>)
 800baf6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800baf8:	79ba      	ldrb	r2, [r7, #6]
 800bafa:	4932      	ldr	r1, [pc, #200]	; (800bbc4 <config_motors+0x318>)
 800bafc:	4613      	mov	r3, r2
 800bafe:	011b      	lsls	r3, r3, #4
 800bb00:	1a9b      	subs	r3, r3, r2
 800bb02:	011b      	lsls	r3, r3, #4
 800bb04:	440b      	add	r3, r1
 800bb06:	3340      	adds	r3, #64	; 0x40
 800bb08:	4a31      	ldr	r2, [pc, #196]	; (800bbd0 <config_motors+0x324>)
 800bb0a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bb0c:	79ba      	ldrb	r2, [r7, #6]
 800bb0e:	492d      	ldr	r1, [pc, #180]	; (800bbc4 <config_motors+0x318>)
 800bb10:	4613      	mov	r3, r2
 800bb12:	011b      	lsls	r3, r3, #4
 800bb14:	1a9b      	subs	r3, r3, r2
 800bb16:	011b      	lsls	r3, r3, #4
 800bb18:	440b      	add	r3, r1
 800bb1a:	3350      	adds	r3, #80	; 0x50
 800bb1c:	4a2e      	ldr	r2, [pc, #184]	; (800bbd8 <config_motors+0x32c>)
 800bb1e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bb20:	79ba      	ldrb	r2, [r7, #6]
 800bb22:	4928      	ldr	r1, [pc, #160]	; (800bbc4 <config_motors+0x318>)
 800bb24:	4613      	mov	r3, r2
 800bb26:	011b      	lsls	r3, r3, #4
 800bb28:	1a9b      	subs	r3, r3, r2
 800bb2a:	011b      	lsls	r3, r3, #4
 800bb2c:	440b      	add	r3, r1
 800bb2e:	3354      	adds	r3, #84	; 0x54
 800bb30:	4a2a      	ldr	r2, [pc, #168]	; (800bbdc <config_motors+0x330>)
 800bb32:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 800bb34:	230e      	movs	r3, #14
 800bb36:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800bb38:	79ba      	ldrb	r2, [r7, #6]
 800bb3a:	4922      	ldr	r1, [pc, #136]	; (800bbc4 <config_motors+0x318>)
 800bb3c:	4613      	mov	r3, r2
 800bb3e:	011b      	lsls	r3, r3, #4
 800bb40:	1a9b      	subs	r3, r3, r2
 800bb42:	011b      	lsls	r3, r3, #4
 800bb44:	440b      	add	r3, r1
 800bb46:	3302      	adds	r3, #2
 800bb48:	2203      	movs	r2, #3
 800bb4a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800bb4c:	79ba      	ldrb	r2, [r7, #6]
 800bb4e:	4613      	mov	r3, r2
 800bb50:	011b      	lsls	r3, r3, #4
 800bb52:	1a9b      	subs	r3, r3, r2
 800bb54:	011b      	lsls	r3, r3, #4
 800bb56:	4a1b      	ldr	r2, [pc, #108]	; (800bbc4 <config_motors+0x318>)
 800bb58:	4413      	add	r3, r2
 800bb5a:	4618      	mov	r0, r3
 800bb5c:	f7ff fe40 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800bb60:	79ba      	ldrb	r2, [r7, #6]
 800bb62:	4918      	ldr	r1, [pc, #96]	; (800bbc4 <config_motors+0x318>)
 800bb64:	4613      	mov	r3, r2
 800bb66:	011b      	lsls	r3, r3, #4
 800bb68:	1a9b      	subs	r3, r3, r2
 800bb6a:	011b      	lsls	r3, r3, #4
 800bb6c:	440b      	add	r3, r1
 800bb6e:	339c      	adds	r3, #156	; 0x9c
 800bb70:	2200      	movs	r2, #0
 800bb72:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800bb74:	79ba      	ldrb	r2, [r7, #6]
 800bb76:	4913      	ldr	r1, [pc, #76]	; (800bbc4 <config_motors+0x318>)
 800bb78:	4613      	mov	r3, r2
 800bb7a:	011b      	lsls	r3, r3, #4
 800bb7c:	1a9b      	subs	r3, r3, r2
 800bb7e:	011b      	lsls	r3, r3, #4
 800bb80:	440b      	add	r3, r1
 800bb82:	33b8      	adds	r3, #184	; 0xb8
 800bb84:	f04f 0200 	mov.w	r2, #0
 800bb88:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800bb8a:	79ba      	ldrb	r2, [r7, #6]
 800bb8c:	490d      	ldr	r1, [pc, #52]	; (800bbc4 <config_motors+0x318>)
 800bb8e:	4613      	mov	r3, r2
 800bb90:	011b      	lsls	r3, r3, #4
 800bb92:	1a9b      	subs	r3, r3, r2
 800bb94:	011b      	lsls	r3, r3, #4
 800bb96:	440b      	add	r3, r1
 800bb98:	33b4      	adds	r3, #180	; 0xb4
 800bb9a:	f04f 0200 	mov.w	r2, #0
 800bb9e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bba0:	79ba      	ldrb	r2, [r7, #6]
 800bba2:	4908      	ldr	r1, [pc, #32]	; (800bbc4 <config_motors+0x318>)
 800bba4:	4613      	mov	r3, r2
 800bba6:	011b      	lsls	r3, r3, #4
 800bba8:	1a9b      	subs	r3, r3, r2
 800bbaa:	011b      	lsls	r3, r3, #4
 800bbac:	440b      	add	r3, r1
 800bbae:	33c4      	adds	r3, #196	; 0xc4
 800bbb0:	4a0b      	ldr	r2, [pc, #44]	; (800bbe0 <config_motors+0x334>)
 800bbb2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bbb4:	79ba      	ldrb	r2, [r7, #6]
 800bbb6:	4903      	ldr	r1, [pc, #12]	; (800bbc4 <config_motors+0x318>)
 800bbb8:	4613      	mov	r3, r2
 800bbba:	011b      	lsls	r3, r3, #4
 800bbbc:	1a9b      	subs	r3, r3, r2
 800bbbe:	011b      	lsls	r3, r3, #4
 800bbc0:	e012      	b.n	800bbe8 <config_motors+0x33c>
 800bbc2:	bf00      	nop
 800bbc4:	200018a8 	.word	0x200018a8
 800bbc8:	41200000 	.word	0x41200000
 800bbcc:	3dcccccd 	.word	0x3dcccccd
 800bbd0:	40a00000 	.word	0x40a00000
 800bbd4:	40f40000 	.word	0x40f40000
 800bbd8:	461c4000 	.word	0x461c4000
 800bbdc:	457a0000 	.word	0x457a0000
 800bbe0:	40c90fdb 	.word	0x40c90fdb
 800bbe4:	c0c90fdb 	.word	0xc0c90fdb
 800bbe8:	440b      	add	r3, r1
 800bbea:	33c0      	adds	r3, #192	; 0xc0
 800bbec:	4abe      	ldr	r2, [pc, #760]	; (800bee8 <config_motors+0x63c>)
 800bbee:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bbf0:	79ba      	ldrb	r2, [r7, #6]
 800bbf2:	49be      	ldr	r1, [pc, #760]	; (800beec <config_motors+0x640>)
 800bbf4:	4613      	mov	r3, r2
 800bbf6:	011b      	lsls	r3, r3, #4
 800bbf8:	1a9b      	subs	r3, r3, r2
 800bbfa:	011b      	lsls	r3, r3, #4
 800bbfc:	440b      	add	r3, r1
 800bbfe:	33d4      	adds	r3, #212	; 0xd4
 800bc00:	4abb      	ldr	r2, [pc, #748]	; (800bef0 <config_motors+0x644>)
 800bc02:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = 0;
 800bc04:	79ba      	ldrb	r2, [r7, #6]
 800bc06:	49b9      	ldr	r1, [pc, #740]	; (800beec <config_motors+0x640>)
 800bc08:	4613      	mov	r3, r2
 800bc0a:	011b      	lsls	r3, r3, #4
 800bc0c:	1a9b      	subs	r3, r3, r2
 800bc0e:	011b      	lsls	r3, r3, #4
 800bc10:	440b      	add	r3, r1
 800bc12:	3368      	adds	r3, #104	; 0x68
 800bc14:	f04f 0200 	mov.w	r2, #0
 800bc18:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = 0;
 800bc1a:	79ba      	ldrb	r2, [r7, #6]
 800bc1c:	49b3      	ldr	r1, [pc, #716]	; (800beec <config_motors+0x640>)
 800bc1e:	4613      	mov	r3, r2
 800bc20:	011b      	lsls	r3, r3, #4
 800bc22:	1a9b      	subs	r3, r3, r2
 800bc24:	011b      	lsls	r3, r3, #4
 800bc26:	440b      	add	r3, r1
 800bc28:	336c      	adds	r3, #108	; 0x6c
 800bc2a:	f04f 0200 	mov.w	r2, #0
 800bc2e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = 0;
 800bc30:	79ba      	ldrb	r2, [r7, #6]
 800bc32:	49ae      	ldr	r1, [pc, #696]	; (800beec <config_motors+0x640>)
 800bc34:	4613      	mov	r3, r2
 800bc36:	011b      	lsls	r3, r3, #4
 800bc38:	1a9b      	subs	r3, r3, r2
 800bc3a:	011b      	lsls	r3, r3, #4
 800bc3c:	440b      	add	r3, r1
 800bc3e:	3370      	adds	r3, #112	; 0x70
 800bc40:	f04f 0200 	mov.w	r2, #0
 800bc44:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = 0;
 800bc46:	79ba      	ldrb	r2, [r7, #6]
 800bc48:	49a8      	ldr	r1, [pc, #672]	; (800beec <config_motors+0x640>)
 800bc4a:	4613      	mov	r3, r2
 800bc4c:	011b      	lsls	r3, r3, #4
 800bc4e:	1a9b      	subs	r3, r3, r2
 800bc50:	011b      	lsls	r3, r3, #4
 800bc52:	440b      	add	r3, r1
 800bc54:	3380      	adds	r3, #128	; 0x80
 800bc56:	f04f 0200 	mov.w	r2, #0
 800bc5a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = 0;
 800bc5c:	79ba      	ldrb	r2, [r7, #6]
 800bc5e:	49a3      	ldr	r1, [pc, #652]	; (800beec <config_motors+0x640>)
 800bc60:	4613      	mov	r3, r2
 800bc62:	011b      	lsls	r3, r3, #4
 800bc64:	1a9b      	subs	r3, r3, r2
 800bc66:	011b      	lsls	r3, r3, #4
 800bc68:	440b      	add	r3, r1
 800bc6a:	3384      	adds	r3, #132	; 0x84
 800bc6c:	f04f 0200 	mov.w	r2, #0
 800bc70:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bc72:	79ba      	ldrb	r2, [r7, #6]
 800bc74:	499d      	ldr	r1, [pc, #628]	; (800beec <config_motors+0x640>)
 800bc76:	4613      	mov	r3, r2
 800bc78:	011b      	lsls	r3, r3, #4
 800bc7a:	1a9b      	subs	r3, r3, r2
 800bc7c:	011b      	lsls	r3, r3, #4
 800bc7e:	440b      	add	r3, r1
 800bc80:	3338      	adds	r3, #56	; 0x38
 800bc82:	4a9c      	ldr	r2, [pc, #624]	; (800bef4 <config_motors+0x648>)
 800bc84:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bc86:	79ba      	ldrb	r2, [r7, #6]
 800bc88:	4998      	ldr	r1, [pc, #608]	; (800beec <config_motors+0x640>)
 800bc8a:	4613      	mov	r3, r2
 800bc8c:	011b      	lsls	r3, r3, #4
 800bc8e:	1a9b      	subs	r3, r3, r2
 800bc90:	011b      	lsls	r3, r3, #4
 800bc92:	440b      	add	r3, r1
 800bc94:	333c      	adds	r3, #60	; 0x3c
 800bc96:	4a98      	ldr	r2, [pc, #608]	; (800bef8 <config_motors+0x64c>)
 800bc98:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bc9a:	79ba      	ldrb	r2, [r7, #6]
 800bc9c:	4993      	ldr	r1, [pc, #588]	; (800beec <config_motors+0x640>)
 800bc9e:	4613      	mov	r3, r2
 800bca0:	011b      	lsls	r3, r3, #4
 800bca2:	1a9b      	subs	r3, r3, r2
 800bca4:	011b      	lsls	r3, r3, #4
 800bca6:	440b      	add	r3, r1
 800bca8:	3340      	adds	r3, #64	; 0x40
 800bcaa:	4a94      	ldr	r2, [pc, #592]	; (800befc <config_motors+0x650>)
 800bcac:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bcae:	79ba      	ldrb	r2, [r7, #6]
 800bcb0:	498e      	ldr	r1, [pc, #568]	; (800beec <config_motors+0x640>)
 800bcb2:	4613      	mov	r3, r2
 800bcb4:	011b      	lsls	r3, r3, #4
 800bcb6:	1a9b      	subs	r3, r3, r2
 800bcb8:	011b      	lsls	r3, r3, #4
 800bcba:	440b      	add	r3, r1
 800bcbc:	3350      	adds	r3, #80	; 0x50
 800bcbe:	4a90      	ldr	r2, [pc, #576]	; (800bf00 <config_motors+0x654>)
 800bcc0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bcc2:	79ba      	ldrb	r2, [r7, #6]
 800bcc4:	4989      	ldr	r1, [pc, #548]	; (800beec <config_motors+0x640>)
 800bcc6:	4613      	mov	r3, r2
 800bcc8:	011b      	lsls	r3, r3, #4
 800bcca:	1a9b      	subs	r3, r3, r2
 800bccc:	011b      	lsls	r3, r3, #4
 800bcce:	440b      	add	r3, r1
 800bcd0:	3354      	adds	r3, #84	; 0x54
 800bcd2:	4a8c      	ldr	r2, [pc, #560]	; (800bf04 <config_motors+0x658>)
 800bcd4:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 800bcd6:	230f      	movs	r3, #15
 800bcd8:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800bcda:	79ba      	ldrb	r2, [r7, #6]
 800bcdc:	4983      	ldr	r1, [pc, #524]	; (800beec <config_motors+0x640>)
 800bcde:	4613      	mov	r3, r2
 800bce0:	011b      	lsls	r3, r3, #4
 800bce2:	1a9b      	subs	r3, r3, r2
 800bce4:	011b      	lsls	r3, r3, #4
 800bce6:	440b      	add	r3, r1
 800bce8:	3302      	adds	r3, #2
 800bcea:	2203      	movs	r2, #3
 800bcec:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800bcee:	79ba      	ldrb	r2, [r7, #6]
 800bcf0:	4613      	mov	r3, r2
 800bcf2:	011b      	lsls	r3, r3, #4
 800bcf4:	1a9b      	subs	r3, r3, r2
 800bcf6:	011b      	lsls	r3, r3, #4
 800bcf8:	4a7c      	ldr	r2, [pc, #496]	; (800beec <config_motors+0x640>)
 800bcfa:	4413      	add	r3, r2
 800bcfc:	4618      	mov	r0, r3
 800bcfe:	f7ff fd6f 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800bd02:	79ba      	ldrb	r2, [r7, #6]
 800bd04:	4979      	ldr	r1, [pc, #484]	; (800beec <config_motors+0x640>)
 800bd06:	4613      	mov	r3, r2
 800bd08:	011b      	lsls	r3, r3, #4
 800bd0a:	1a9b      	subs	r3, r3, r2
 800bd0c:	011b      	lsls	r3, r3, #4
 800bd0e:	440b      	add	r3, r1
 800bd10:	339c      	adds	r3, #156	; 0x9c
 800bd12:	2200      	movs	r2, #0
 800bd14:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800bd16:	79ba      	ldrb	r2, [r7, #6]
 800bd18:	4974      	ldr	r1, [pc, #464]	; (800beec <config_motors+0x640>)
 800bd1a:	4613      	mov	r3, r2
 800bd1c:	011b      	lsls	r3, r3, #4
 800bd1e:	1a9b      	subs	r3, r3, r2
 800bd20:	011b      	lsls	r3, r3, #4
 800bd22:	440b      	add	r3, r1
 800bd24:	33b8      	adds	r3, #184	; 0xb8
 800bd26:	f04f 0200 	mov.w	r2, #0
 800bd2a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800bd2c:	79ba      	ldrb	r2, [r7, #6]
 800bd2e:	496f      	ldr	r1, [pc, #444]	; (800beec <config_motors+0x640>)
 800bd30:	4613      	mov	r3, r2
 800bd32:	011b      	lsls	r3, r3, #4
 800bd34:	1a9b      	subs	r3, r3, r2
 800bd36:	011b      	lsls	r3, r3, #4
 800bd38:	440b      	add	r3, r1
 800bd3a:	33b4      	adds	r3, #180	; 0xb4
 800bd3c:	f04f 0200 	mov.w	r2, #0
 800bd40:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bd42:	79ba      	ldrb	r2, [r7, #6]
 800bd44:	4969      	ldr	r1, [pc, #420]	; (800beec <config_motors+0x640>)
 800bd46:	4613      	mov	r3, r2
 800bd48:	011b      	lsls	r3, r3, #4
 800bd4a:	1a9b      	subs	r3, r3, r2
 800bd4c:	011b      	lsls	r3, r3, #4
 800bd4e:	440b      	add	r3, r1
 800bd50:	33c4      	adds	r3, #196	; 0xc4
 800bd52:	4a6d      	ldr	r2, [pc, #436]	; (800bf08 <config_motors+0x65c>)
 800bd54:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bd56:	79ba      	ldrb	r2, [r7, #6]
 800bd58:	4964      	ldr	r1, [pc, #400]	; (800beec <config_motors+0x640>)
 800bd5a:	4613      	mov	r3, r2
 800bd5c:	011b      	lsls	r3, r3, #4
 800bd5e:	1a9b      	subs	r3, r3, r2
 800bd60:	011b      	lsls	r3, r3, #4
 800bd62:	440b      	add	r3, r1
 800bd64:	33c0      	adds	r3, #192	; 0xc0
 800bd66:	4a60      	ldr	r2, [pc, #384]	; (800bee8 <config_motors+0x63c>)
 800bd68:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bd6a:	79ba      	ldrb	r2, [r7, #6]
 800bd6c:	495f      	ldr	r1, [pc, #380]	; (800beec <config_motors+0x640>)
 800bd6e:	4613      	mov	r3, r2
 800bd70:	011b      	lsls	r3, r3, #4
 800bd72:	1a9b      	subs	r3, r3, r2
 800bd74:	011b      	lsls	r3, r3, #4
 800bd76:	440b      	add	r3, r1
 800bd78:	33d4      	adds	r3, #212	; 0xd4
 800bd7a:	4a5d      	ldr	r2, [pc, #372]	; (800bef0 <config_motors+0x644>)
 800bd7c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = 0;
 800bd7e:	79ba      	ldrb	r2, [r7, #6]
 800bd80:	495a      	ldr	r1, [pc, #360]	; (800beec <config_motors+0x640>)
 800bd82:	4613      	mov	r3, r2
 800bd84:	011b      	lsls	r3, r3, #4
 800bd86:	1a9b      	subs	r3, r3, r2
 800bd88:	011b      	lsls	r3, r3, #4
 800bd8a:	440b      	add	r3, r1
 800bd8c:	3368      	adds	r3, #104	; 0x68
 800bd8e:	f04f 0200 	mov.w	r2, #0
 800bd92:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = 0;
 800bd94:	79ba      	ldrb	r2, [r7, #6]
 800bd96:	4955      	ldr	r1, [pc, #340]	; (800beec <config_motors+0x640>)
 800bd98:	4613      	mov	r3, r2
 800bd9a:	011b      	lsls	r3, r3, #4
 800bd9c:	1a9b      	subs	r3, r3, r2
 800bd9e:	011b      	lsls	r3, r3, #4
 800bda0:	440b      	add	r3, r1
 800bda2:	336c      	adds	r3, #108	; 0x6c
 800bda4:	f04f 0200 	mov.w	r2, #0
 800bda8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = 0;
 800bdaa:	79ba      	ldrb	r2, [r7, #6]
 800bdac:	494f      	ldr	r1, [pc, #316]	; (800beec <config_motors+0x640>)
 800bdae:	4613      	mov	r3, r2
 800bdb0:	011b      	lsls	r3, r3, #4
 800bdb2:	1a9b      	subs	r3, r3, r2
 800bdb4:	011b      	lsls	r3, r3, #4
 800bdb6:	440b      	add	r3, r1
 800bdb8:	3370      	adds	r3, #112	; 0x70
 800bdba:	f04f 0200 	mov.w	r2, #0
 800bdbe:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = 0;
 800bdc0:	79ba      	ldrb	r2, [r7, #6]
 800bdc2:	494a      	ldr	r1, [pc, #296]	; (800beec <config_motors+0x640>)
 800bdc4:	4613      	mov	r3, r2
 800bdc6:	011b      	lsls	r3, r3, #4
 800bdc8:	1a9b      	subs	r3, r3, r2
 800bdca:	011b      	lsls	r3, r3, #4
 800bdcc:	440b      	add	r3, r1
 800bdce:	3380      	adds	r3, #128	; 0x80
 800bdd0:	f04f 0200 	mov.w	r2, #0
 800bdd4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = 0;
 800bdd6:	79ba      	ldrb	r2, [r7, #6]
 800bdd8:	4944      	ldr	r1, [pc, #272]	; (800beec <config_motors+0x640>)
 800bdda:	4613      	mov	r3, r2
 800bddc:	011b      	lsls	r3, r3, #4
 800bdde:	1a9b      	subs	r3, r3, r2
 800bde0:	011b      	lsls	r3, r3, #4
 800bde2:	440b      	add	r3, r1
 800bde4:	3384      	adds	r3, #132	; 0x84
 800bde6:	f04f 0200 	mov.w	r2, #0
 800bdea:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bdec:	79ba      	ldrb	r2, [r7, #6]
 800bdee:	493f      	ldr	r1, [pc, #252]	; (800beec <config_motors+0x640>)
 800bdf0:	4613      	mov	r3, r2
 800bdf2:	011b      	lsls	r3, r3, #4
 800bdf4:	1a9b      	subs	r3, r3, r2
 800bdf6:	011b      	lsls	r3, r3, #4
 800bdf8:	440b      	add	r3, r1
 800bdfa:	3338      	adds	r3, #56	; 0x38
 800bdfc:	4a3d      	ldr	r2, [pc, #244]	; (800bef4 <config_motors+0x648>)
 800bdfe:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800be00:	79ba      	ldrb	r2, [r7, #6]
 800be02:	493a      	ldr	r1, [pc, #232]	; (800beec <config_motors+0x640>)
 800be04:	4613      	mov	r3, r2
 800be06:	011b      	lsls	r3, r3, #4
 800be08:	1a9b      	subs	r3, r3, r2
 800be0a:	011b      	lsls	r3, r3, #4
 800be0c:	440b      	add	r3, r1
 800be0e:	333c      	adds	r3, #60	; 0x3c
 800be10:	4a39      	ldr	r2, [pc, #228]	; (800bef8 <config_motors+0x64c>)
 800be12:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800be14:	79ba      	ldrb	r2, [r7, #6]
 800be16:	4935      	ldr	r1, [pc, #212]	; (800beec <config_motors+0x640>)
 800be18:	4613      	mov	r3, r2
 800be1a:	011b      	lsls	r3, r3, #4
 800be1c:	1a9b      	subs	r3, r3, r2
 800be1e:	011b      	lsls	r3, r3, #4
 800be20:	440b      	add	r3, r1
 800be22:	3340      	adds	r3, #64	; 0x40
 800be24:	4a35      	ldr	r2, [pc, #212]	; (800befc <config_motors+0x650>)
 800be26:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800be28:	79ba      	ldrb	r2, [r7, #6]
 800be2a:	4930      	ldr	r1, [pc, #192]	; (800beec <config_motors+0x640>)
 800be2c:	4613      	mov	r3, r2
 800be2e:	011b      	lsls	r3, r3, #4
 800be30:	1a9b      	subs	r3, r3, r2
 800be32:	011b      	lsls	r3, r3, #4
 800be34:	440b      	add	r3, r1
 800be36:	3350      	adds	r3, #80	; 0x50
 800be38:	4a31      	ldr	r2, [pc, #196]	; (800bf00 <config_motors+0x654>)
 800be3a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800be3c:	79ba      	ldrb	r2, [r7, #6]
 800be3e:	492b      	ldr	r1, [pc, #172]	; (800beec <config_motors+0x640>)
 800be40:	4613      	mov	r3, r2
 800be42:	011b      	lsls	r3, r3, #4
 800be44:	1a9b      	subs	r3, r3, r2
 800be46:	011b      	lsls	r3, r3, #4
 800be48:	440b      	add	r3, r1
 800be4a:	3354      	adds	r3, #84	; 0x54
 800be4c:	4a2d      	ldr	r2, [pc, #180]	; (800bf04 <config_motors+0x658>)
 800be4e:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 800be50:	2316      	movs	r3, #22
 800be52:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800be54:	79ba      	ldrb	r2, [r7, #6]
 800be56:	4925      	ldr	r1, [pc, #148]	; (800beec <config_motors+0x640>)
 800be58:	4613      	mov	r3, r2
 800be5a:	011b      	lsls	r3, r3, #4
 800be5c:	1a9b      	subs	r3, r3, r2
 800be5e:	011b      	lsls	r3, r3, #4
 800be60:	440b      	add	r3, r1
 800be62:	3302      	adds	r3, #2
 800be64:	2204      	movs	r2, #4
 800be66:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800be68:	79ba      	ldrb	r2, [r7, #6]
 800be6a:	4613      	mov	r3, r2
 800be6c:	011b      	lsls	r3, r3, #4
 800be6e:	1a9b      	subs	r3, r3, r2
 800be70:	011b      	lsls	r3, r3, #4
 800be72:	4a1e      	ldr	r2, [pc, #120]	; (800beec <config_motors+0x640>)
 800be74:	4413      	add	r3, r2
 800be76:	4618      	mov	r0, r3
 800be78:	f7ff fcb2 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800be7c:	79ba      	ldrb	r2, [r7, #6]
 800be7e:	491b      	ldr	r1, [pc, #108]	; (800beec <config_motors+0x640>)
 800be80:	4613      	mov	r3, r2
 800be82:	011b      	lsls	r3, r3, #4
 800be84:	1a9b      	subs	r3, r3, r2
 800be86:	011b      	lsls	r3, r3, #4
 800be88:	440b      	add	r3, r1
 800be8a:	33c8      	adds	r3, #200	; 0xc8
 800be8c:	4a1f      	ldr	r2, [pc, #124]	; (800bf0c <config_motors+0x660>)
 800be8e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800be90:	79ba      	ldrb	r2, [r7, #6]
 800be92:	4916      	ldr	r1, [pc, #88]	; (800beec <config_motors+0x640>)
 800be94:	4613      	mov	r3, r2
 800be96:	011b      	lsls	r3, r3, #4
 800be98:	1a9b      	subs	r3, r3, r2
 800be9a:	011b      	lsls	r3, r3, #4
 800be9c:	440b      	add	r3, r1
 800be9e:	338c      	adds	r3, #140	; 0x8c
 800bea0:	4a1b      	ldr	r2, [pc, #108]	; (800bf10 <config_motors+0x664>)
 800bea2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800bea4:	79ba      	ldrb	r2, [r7, #6]
 800bea6:	4911      	ldr	r1, [pc, #68]	; (800beec <config_motors+0x640>)
 800bea8:	4613      	mov	r3, r2
 800beaa:	011b      	lsls	r3, r3, #4
 800beac:	1a9b      	subs	r3, r3, r2
 800beae:	011b      	lsls	r3, r3, #4
 800beb0:	440b      	add	r3, r1
 800beb2:	3338      	adds	r3, #56	; 0x38
 800beb4:	f04f 4281 	mov.w	r2, #1082130432	; 0x40800000
 800beb8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800beba:	79ba      	ldrb	r2, [r7, #6]
 800bebc:	490b      	ldr	r1, [pc, #44]	; (800beec <config_motors+0x640>)
 800bebe:	4613      	mov	r3, r2
 800bec0:	011b      	lsls	r3, r3, #4
 800bec2:	1a9b      	subs	r3, r3, r2
 800bec4:	011b      	lsls	r3, r3, #4
 800bec6:	440b      	add	r3, r1
 800bec8:	333c      	adds	r3, #60	; 0x3c
 800beca:	4a12      	ldr	r2, [pc, #72]	; (800bf14 <config_motors+0x668>)
 800becc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800bece:	79ba      	ldrb	r2, [r7, #6]
 800bed0:	4906      	ldr	r1, [pc, #24]	; (800beec <config_motors+0x640>)
 800bed2:	4613      	mov	r3, r2
 800bed4:	011b      	lsls	r3, r3, #4
 800bed6:	1a9b      	subs	r3, r3, r2
 800bed8:	011b      	lsls	r3, r3, #4
 800beda:	440b      	add	r3, r1
 800bedc:	3340      	adds	r3, #64	; 0x40
 800bede:	f04f 0200 	mov.w	r2, #0
 800bee2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800bee4:	79ba      	ldrb	r2, [r7, #6]
 800bee6:	e017      	b.n	800bf18 <config_motors+0x66c>
 800bee8:	c0c90fdb 	.word	0xc0c90fdb
 800beec:	200018a8 	.word	0x200018a8
 800bef0:	40f40000 	.word	0x40f40000
 800bef4:	41200000 	.word	0x41200000
 800bef8:	3dcccccd 	.word	0x3dcccccd
 800befc:	40a00000 	.word	0x40a00000
 800bf00:	461c4000 	.word	0x461c4000
 800bf04:	457a0000 	.word	0x457a0000
 800bf08:	40c90fdb 	.word	0x40c90fdb
 800bf0c:	4199999a 	.word	0x4199999a
 800bf10:	460ca000 	.word	0x460ca000
 800bf14:	3b03126f 	.word	0x3b03126f
 800bf18:	49c1      	ldr	r1, [pc, #772]	; (800c220 <config_motors+0x974>)
 800bf1a:	4613      	mov	r3, r2
 800bf1c:	011b      	lsls	r3, r3, #4
 800bf1e:	1a9b      	subs	r3, r3, r2
 800bf20:	011b      	lsls	r3, r3, #4
 800bf22:	440b      	add	r3, r1
 800bf24:	3350      	adds	r3, #80	; 0x50
 800bf26:	4abf      	ldr	r2, [pc, #764]	; (800c224 <config_motors+0x978>)
 800bf28:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800bf2a:	79ba      	ldrb	r2, [r7, #6]
 800bf2c:	49bc      	ldr	r1, [pc, #752]	; (800c220 <config_motors+0x974>)
 800bf2e:	4613      	mov	r3, r2
 800bf30:	011b      	lsls	r3, r3, #4
 800bf32:	1a9b      	subs	r3, r3, r2
 800bf34:	011b      	lsls	r3, r3, #4
 800bf36:	440b      	add	r3, r1
 800bf38:	3354      	adds	r3, #84	; 0x54
 800bf3a:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800bf3e:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 800bf40:	2312      	movs	r3, #18
 800bf42:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800bf44:	79ba      	ldrb	r2, [r7, #6]
 800bf46:	49b6      	ldr	r1, [pc, #728]	; (800c220 <config_motors+0x974>)
 800bf48:	4613      	mov	r3, r2
 800bf4a:	011b      	lsls	r3, r3, #4
 800bf4c:	1a9b      	subs	r3, r3, r2
 800bf4e:	011b      	lsls	r3, r3, #4
 800bf50:	440b      	add	r3, r1
 800bf52:	3302      	adds	r3, #2
 800bf54:	2204      	movs	r2, #4
 800bf56:	701a      	strb	r2, [r3, #0]
	can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800bf58:	79ba      	ldrb	r2, [r7, #6]
 800bf5a:	49b1      	ldr	r1, [pc, #708]	; (800c220 <config_motors+0x974>)
 800bf5c:	4613      	mov	r3, r2
 800bf5e:	011b      	lsls	r3, r3, #4
 800bf60:	1a9b      	subs	r3, r3, r2
 800bf62:	011b      	lsls	r3, r3, #4
 800bf64:	440b      	add	r3, r1
 800bf66:	338c      	adds	r3, #140	; 0x8c
 800bf68:	4aaf      	ldr	r2, [pc, #700]	; (800c228 <config_motors+0x97c>)
 800bf6a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800bf6c:	79ba      	ldrb	r2, [r7, #6]
 800bf6e:	49ac      	ldr	r1, [pc, #688]	; (800c220 <config_motors+0x974>)
 800bf70:	4613      	mov	r3, r2
 800bf72:	011b      	lsls	r3, r3, #4
 800bf74:	1a9b      	subs	r3, r3, r2
 800bf76:	011b      	lsls	r3, r3, #4
 800bf78:	440b      	add	r3, r1
 800bf7a:	3338      	adds	r3, #56	; 0x38
 800bf7c:	f04f 4281 	mov.w	r2, #1082130432	; 0x40800000
 800bf80:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800bf82:	79ba      	ldrb	r2, [r7, #6]
 800bf84:	49a6      	ldr	r1, [pc, #664]	; (800c220 <config_motors+0x974>)
 800bf86:	4613      	mov	r3, r2
 800bf88:	011b      	lsls	r3, r3, #4
 800bf8a:	1a9b      	subs	r3, r3, r2
 800bf8c:	011b      	lsls	r3, r3, #4
 800bf8e:	440b      	add	r3, r1
 800bf90:	333c      	adds	r3, #60	; 0x3c
 800bf92:	4aa6      	ldr	r2, [pc, #664]	; (800c22c <config_motors+0x980>)
 800bf94:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800bf96:	79ba      	ldrb	r2, [r7, #6]
 800bf98:	49a1      	ldr	r1, [pc, #644]	; (800c220 <config_motors+0x974>)
 800bf9a:	4613      	mov	r3, r2
 800bf9c:	011b      	lsls	r3, r3, #4
 800bf9e:	1a9b      	subs	r3, r3, r2
 800bfa0:	011b      	lsls	r3, r3, #4
 800bfa2:	440b      	add	r3, r1
 800bfa4:	3340      	adds	r3, #64	; 0x40
 800bfa6:	f04f 0200 	mov.w	r2, #0
 800bfaa:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800bfac:	79ba      	ldrb	r2, [r7, #6]
 800bfae:	499c      	ldr	r1, [pc, #624]	; (800c220 <config_motors+0x974>)
 800bfb0:	4613      	mov	r3, r2
 800bfb2:	011b      	lsls	r3, r3, #4
 800bfb4:	1a9b      	subs	r3, r3, r2
 800bfb6:	011b      	lsls	r3, r3, #4
 800bfb8:	440b      	add	r3, r1
 800bfba:	3350      	adds	r3, #80	; 0x50
 800bfbc:	4a99      	ldr	r2, [pc, #612]	; (800c224 <config_motors+0x978>)
 800bfbe:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800bfc0:	79ba      	ldrb	r2, [r7, #6]
 800bfc2:	4997      	ldr	r1, [pc, #604]	; (800c220 <config_motors+0x974>)
 800bfc4:	4613      	mov	r3, r2
 800bfc6:	011b      	lsls	r3, r3, #4
 800bfc8:	1a9b      	subs	r3, r3, r2
 800bfca:	011b      	lsls	r3, r3, #4
 800bfcc:	440b      	add	r3, r1
 800bfce:	3354      	adds	r3, #84	; 0x54
 800bfd0:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800bfd4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800bfd6:	79ba      	ldrb	r2, [r7, #6]
 800bfd8:	4991      	ldr	r1, [pc, #580]	; (800c220 <config_motors+0x974>)
 800bfda:	4613      	mov	r3, r2
 800bfdc:	011b      	lsls	r3, r3, #4
 800bfde:	1a9b      	subs	r3, r3, r2
 800bfe0:	011b      	lsls	r3, r3, #4
 800bfe2:	440b      	add	r3, r1
 800bfe4:	335c      	adds	r3, #92	; 0x5c
 800bfe6:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800bfea:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 800bfec:	2311      	movs	r3, #17
 800bfee:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	can_motors[motor_id].motor_type = TYPE_M2006;
 800bff0:	79ba      	ldrb	r2, [r7, #6]
 800bff2:	498b      	ldr	r1, [pc, #556]	; (800c220 <config_motors+0x974>)
 800bff4:	4613      	mov	r3, r2
 800bff6:	011b      	lsls	r3, r3, #4
 800bff8:	1a9b      	subs	r3, r3, r2
 800bffa:	011b      	lsls	r3, r3, #4
 800bffc:	440b      	add	r3, r1
 800bffe:	3302      	adds	r3, #2
 800c000:	2202      	movs	r2, #2
 800c002:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&can_motors[motor_id]);
 800c004:	79ba      	ldrb	r2, [r7, #6]
 800c006:	4613      	mov	r3, r2
 800c008:	011b      	lsls	r3, r3, #4
 800c00a:	1a9b      	subs	r3, r3, r2
 800c00c:	011b      	lsls	r3, r3, #4
 800c00e:	4a84      	ldr	r2, [pc, #528]	; (800c220 <config_motors+0x974>)
 800c010:	4413      	add	r3, r2
 800c012:	4618      	mov	r0, r3
 800c014:	f7ff fbe4 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.max_ang = PI * 5000; //so it can rotate 5000 times oops
 800c018:	79ba      	ldrb	r2, [r7, #6]
 800c01a:	4981      	ldr	r1, [pc, #516]	; (800c220 <config_motors+0x974>)
 800c01c:	4613      	mov	r3, r2
 800c01e:	011b      	lsls	r3, r3, #4
 800c020:	1a9b      	subs	r3, r3, r2
 800c022:	011b      	lsls	r3, r3, #4
 800c024:	440b      	add	r3, r1
 800c026:	33b8      	adds	r3, #184	; 0xb8
 800c028:	4a81      	ldr	r2, [pc, #516]	; (800c230 <config_motors+0x984>)
 800c02a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = -PI * 5000;
 800c02c:	79ba      	ldrb	r2, [r7, #6]
 800c02e:	497c      	ldr	r1, [pc, #496]	; (800c220 <config_motors+0x974>)
 800c030:	4613      	mov	r3, r2
 800c032:	011b      	lsls	r3, r3, #4
 800c034:	1a9b      	subs	r3, r3, r2
 800c036:	011b      	lsls	r3, r3, #4
 800c038:	440b      	add	r3, r1
 800c03a:	33b4      	adds	r3, #180	; 0xb4
 800c03c:	4a7d      	ldr	r2, [pc, #500]	; (800c234 <config_motors+0x988>)
 800c03e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c040:	79ba      	ldrb	r2, [r7, #6]
 800c042:	4977      	ldr	r1, [pc, #476]	; (800c220 <config_motors+0x974>)
 800c044:	4613      	mov	r3, r2
 800c046:	011b      	lsls	r3, r3, #4
 800c048:	1a9b      	subs	r3, r3, r2
 800c04a:	011b      	lsls	r3, r3, #4
 800c04c:	440b      	add	r3, r1
 800c04e:	33c4      	adds	r3, #196	; 0xc4
 800c050:	4a79      	ldr	r2, [pc, #484]	; (800c238 <config_motors+0x98c>)
 800c052:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c054:	79ba      	ldrb	r2, [r7, #6]
 800c056:	4972      	ldr	r1, [pc, #456]	; (800c220 <config_motors+0x974>)
 800c058:	4613      	mov	r3, r2
 800c05a:	011b      	lsls	r3, r3, #4
 800c05c:	1a9b      	subs	r3, r3, r2
 800c05e:	011b      	lsls	r3, r3, #4
 800c060:	440b      	add	r3, r1
 800c062:	33c0      	adds	r3, #192	; 0xc0
 800c064:	4a75      	ldr	r2, [pc, #468]	; (800c23c <config_motors+0x990>)
 800c066:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c068:	79ba      	ldrb	r2, [r7, #6]
 800c06a:	496d      	ldr	r1, [pc, #436]	; (800c220 <config_motors+0x974>)
 800c06c:	4613      	mov	r3, r2
 800c06e:	011b      	lsls	r3, r3, #4
 800c070:	1a9b      	subs	r3, r3, r2
 800c072:	011b      	lsls	r3, r3, #4
 800c074:	440b      	add	r3, r1
 800c076:	33d4      	adds	r3, #212	; 0xd4
 800c078:	f04f 0200 	mov.w	r2, #0
 800c07c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 800c07e:	79ba      	ldrb	r2, [r7, #6]
 800c080:	4967      	ldr	r1, [pc, #412]	; (800c220 <config_motors+0x974>)
 800c082:	4613      	mov	r3, r2
 800c084:	011b      	lsls	r3, r3, #4
 800c086:	1a9b      	subs	r3, r3, r2
 800c088:	011b      	lsls	r3, r3, #4
 800c08a:	440b      	add	r3, r1
 800c08c:	3368      	adds	r3, #104	; 0x68
 800c08e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800c092:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 800c094:	79ba      	ldrb	r2, [r7, #6]
 800c096:	4962      	ldr	r1, [pc, #392]	; (800c220 <config_motors+0x974>)
 800c098:	4613      	mov	r3, r2
 800c09a:	011b      	lsls	r3, r3, #4
 800c09c:	1a9b      	subs	r3, r3, r2
 800c09e:	011b      	lsls	r3, r3, #4
 800c0a0:	440b      	add	r3, r1
 800c0a2:	336c      	adds	r3, #108	; 0x6c
 800c0a4:	f04f 0200 	mov.w	r2, #0
 800c0a8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 800c0aa:	79ba      	ldrb	r2, [r7, #6]
 800c0ac:	495c      	ldr	r1, [pc, #368]	; (800c220 <config_motors+0x974>)
 800c0ae:	4613      	mov	r3, r2
 800c0b0:	011b      	lsls	r3, r3, #4
 800c0b2:	1a9b      	subs	r3, r3, r2
 800c0b4:	011b      	lsls	r3, r3, #4
 800c0b6:	440b      	add	r3, r1
 800c0b8:	3370      	adds	r3, #112	; 0x70
 800c0ba:	f04f 0200 	mov.w	r2, #0
 800c0be:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 800c0c0:	79ba      	ldrb	r2, [r7, #6]
 800c0c2:	4957      	ldr	r1, [pc, #348]	; (800c220 <config_motors+0x974>)
 800c0c4:	4613      	mov	r3, r2
 800c0c6:	011b      	lsls	r3, r3, #4
 800c0c8:	1a9b      	subs	r3, r3, r2
 800c0ca:	011b      	lsls	r3, r3, #4
 800c0cc:	440b      	add	r3, r1
 800c0ce:	3380      	adds	r3, #128	; 0x80
 800c0d0:	f04f 0200 	mov.w	r2, #0
 800c0d4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 800c0d6:	79ba      	ldrb	r2, [r7, #6]
 800c0d8:	4951      	ldr	r1, [pc, #324]	; (800c220 <config_motors+0x974>)
 800c0da:	4613      	mov	r3, r2
 800c0dc:	011b      	lsls	r3, r3, #4
 800c0de:	1a9b      	subs	r3, r3, r2
 800c0e0:	011b      	lsls	r3, r3, #4
 800c0e2:	440b      	add	r3, r1
 800c0e4:	3384      	adds	r3, #132	; 0x84
 800c0e6:	4a56      	ldr	r2, [pc, #344]	; (800c240 <config_motors+0x994>)
 800c0e8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 800c0ea:	79ba      	ldrb	r2, [r7, #6]
 800c0ec:	494c      	ldr	r1, [pc, #304]	; (800c220 <config_motors+0x974>)
 800c0ee:	4613      	mov	r3, r2
 800c0f0:	011b      	lsls	r3, r3, #4
 800c0f2:	1a9b      	subs	r3, r3, r2
 800c0f4:	011b      	lsls	r3, r3, #4
 800c0f6:	440b      	add	r3, r1
 800c0f8:	3338      	adds	r3, #56	; 0x38
 800c0fa:	4a52      	ldr	r2, [pc, #328]	; (800c244 <config_motors+0x998>)
 800c0fc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 800c0fe:	79ba      	ldrb	r2, [r7, #6]
 800c100:	4947      	ldr	r1, [pc, #284]	; (800c220 <config_motors+0x974>)
 800c102:	4613      	mov	r3, r2
 800c104:	011b      	lsls	r3, r3, #4
 800c106:	1a9b      	subs	r3, r3, r2
 800c108:	011b      	lsls	r3, r3, #4
 800c10a:	440b      	add	r3, r1
 800c10c:	333c      	adds	r3, #60	; 0x3c
 800c10e:	4a4e      	ldr	r2, [pc, #312]	; (800c248 <config_motors+0x99c>)
 800c110:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 800c112:	79ba      	ldrb	r2, [r7, #6]
 800c114:	4942      	ldr	r1, [pc, #264]	; (800c220 <config_motors+0x974>)
 800c116:	4613      	mov	r3, r2
 800c118:	011b      	lsls	r3, r3, #4
 800c11a:	1a9b      	subs	r3, r3, r2
 800c11c:	011b      	lsls	r3, r3, #4
 800c11e:	440b      	add	r3, r1
 800c120:	3340      	adds	r3, #64	; 0x40
 800c122:	4a4a      	ldr	r2, [pc, #296]	; (800c24c <config_motors+0x9a0>)
 800c124:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 800c126:	79ba      	ldrb	r2, [r7, #6]
 800c128:	493d      	ldr	r1, [pc, #244]	; (800c220 <config_motors+0x974>)
 800c12a:	4613      	mov	r3, r2
 800c12c:	011b      	lsls	r3, r3, #4
 800c12e:	1a9b      	subs	r3, r3, r2
 800c130:	011b      	lsls	r3, r3, #4
 800c132:	440b      	add	r3, r1
 800c134:	3350      	adds	r3, #80	; 0x50
 800c136:	4a3b      	ldr	r2, [pc, #236]	; (800c224 <config_motors+0x978>)
 800c138:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 800c13a:	79ba      	ldrb	r2, [r7, #6]
 800c13c:	4938      	ldr	r1, [pc, #224]	; (800c220 <config_motors+0x974>)
 800c13e:	4613      	mov	r3, r2
 800c140:	011b      	lsls	r3, r3, #4
 800c142:	1a9b      	subs	r3, r3, r2
 800c144:	011b      	lsls	r3, r3, #4
 800c146:	440b      	add	r3, r1
 800c148:	3354      	adds	r3, #84	; 0x54
 800c14a:	4a36      	ldr	r2, [pc, #216]	; (800c224 <config_motors+0x978>)
 800c14c:	601a      	str	r2, [r3, #0]
#endif

#ifdef L1_MOTOR_ID
	motor_id = L1_MOTOR_ID - 1;
 800c14e:	2307      	movs	r3, #7
 800c150:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c152:	79ba      	ldrb	r2, [r7, #6]
 800c154:	4932      	ldr	r1, [pc, #200]	; (800c220 <config_motors+0x974>)
 800c156:	4613      	mov	r3, r2
 800c158:	011b      	lsls	r3, r3, #4
 800c15a:	1a9b      	subs	r3, r3, r2
 800c15c:	011b      	lsls	r3, r3, #4
 800c15e:	440b      	add	r3, r1
 800c160:	3302      	adds	r3, #2
 800c162:	2201      	movs	r2, #1
 800c164:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c166:	79ba      	ldrb	r2, [r7, #6]
 800c168:	4613      	mov	r3, r2
 800c16a:	011b      	lsls	r3, r3, #4
 800c16c:	1a9b      	subs	r3, r3, r2
 800c16e:	011b      	lsls	r3, r3, #4
 800c170:	4a2b      	ldr	r2, [pc, #172]	; (800c220 <config_motors+0x974>)
 800c172:	4413      	add	r3, r2
 800c174:	4618      	mov	r0, r3
 800c176:	f7ff fb33 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c17a:	79ba      	ldrb	r2, [r7, #6]
 800c17c:	4928      	ldr	r1, [pc, #160]	; (800c220 <config_motors+0x974>)
 800c17e:	4613      	mov	r3, r2
 800c180:	011b      	lsls	r3, r3, #4
 800c182:	1a9b      	subs	r3, r3, r2
 800c184:	011b      	lsls	r3, r3, #4
 800c186:	440b      	add	r3, r1
 800c188:	33c8      	adds	r3, #200	; 0xc8
 800c18a:	f04f 0200 	mov.w	r2, #0
 800c18e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = L1_CENTER;
 800c190:	79ba      	ldrb	r2, [r7, #6]
 800c192:	4923      	ldr	r1, [pc, #140]	; (800c220 <config_motors+0x974>)
 800c194:	4613      	mov	r3, r2
 800c196:	011b      	lsls	r3, r3, #4
 800c198:	1a9b      	subs	r3, r3, r2
 800c19a:	011b      	lsls	r3, r3, #4
 800c19c:	440b      	add	r3, r1
 800c19e:	339c      	adds	r3, #156	; 0x9c
 800c1a0:	f641 222c 	movw	r2, #6700	; 0x1a2c
 800c1a4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = L1_MAX_ANG;
 800c1a6:	79ba      	ldrb	r2, [r7, #6]
 800c1a8:	491d      	ldr	r1, [pc, #116]	; (800c220 <config_motors+0x974>)
 800c1aa:	4613      	mov	r3, r2
 800c1ac:	011b      	lsls	r3, r3, #4
 800c1ae:	1a9b      	subs	r3, r3, r2
 800c1b0:	011b      	lsls	r3, r3, #4
 800c1b2:	440b      	add	r3, r1
 800c1b4:	33b8      	adds	r3, #184	; 0xb8
 800c1b6:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c1ba:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = L1_MIN_ANG;
 800c1bc:	79ba      	ldrb	r2, [r7, #6]
 800c1be:	4918      	ldr	r1, [pc, #96]	; (800c220 <config_motors+0x974>)
 800c1c0:	4613      	mov	r3, r2
 800c1c2:	011b      	lsls	r3, r3, #4
 800c1c4:	1a9b      	subs	r3, r3, r2
 800c1c6:	011b      	lsls	r3, r3, #4
 800c1c8:	440b      	add	r3, r1
 800c1ca:	33b4      	adds	r3, #180	; 0xb4
 800c1cc:	4a20      	ldr	r2, [pc, #128]	; (800c250 <config_motors+0x9a4>)
 800c1ce:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c1d0:	79ba      	ldrb	r2, [r7, #6]
 800c1d2:	4913      	ldr	r1, [pc, #76]	; (800c220 <config_motors+0x974>)
 800c1d4:	4613      	mov	r3, r2
 800c1d6:	011b      	lsls	r3, r3, #4
 800c1d8:	1a9b      	subs	r3, r3, r2
 800c1da:	011b      	lsls	r3, r3, #4
 800c1dc:	440b      	add	r3, r1
 800c1de:	33c4      	adds	r3, #196	; 0xc4
 800c1e0:	4a15      	ldr	r2, [pc, #84]	; (800c238 <config_motors+0x98c>)
 800c1e2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c1e4:	79ba      	ldrb	r2, [r7, #6]
 800c1e6:	490e      	ldr	r1, [pc, #56]	; (800c220 <config_motors+0x974>)
 800c1e8:	4613      	mov	r3, r2
 800c1ea:	011b      	lsls	r3, r3, #4
 800c1ec:	1a9b      	subs	r3, r3, r2
 800c1ee:	011b      	lsls	r3, r3, #4
 800c1f0:	440b      	add	r3, r1
 800c1f2:	33c0      	adds	r3, #192	; 0xc0
 800c1f4:	4a11      	ldr	r2, [pc, #68]	; (800c23c <config_motors+0x990>)
 800c1f6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c1f8:	79ba      	ldrb	r2, [r7, #6]
 800c1fa:	4909      	ldr	r1, [pc, #36]	; (800c220 <config_motors+0x974>)
 800c1fc:	4613      	mov	r3, r2
 800c1fe:	011b      	lsls	r3, r3, #4
 800c200:	1a9b      	subs	r3, r3, r2
 800c202:	011b      	lsls	r3, r3, #4
 800c204:	440b      	add	r3, r1
 800c206:	33d4      	adds	r3, #212	; 0xd4
 800c208:	f04f 0200 	mov.w	r2, #0
 800c20c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c20e:	79ba      	ldrb	r2, [r7, #6]
 800c210:	4903      	ldr	r1, [pc, #12]	; (800c220 <config_motors+0x974>)
 800c212:	4613      	mov	r3, r2
 800c214:	011b      	lsls	r3, r3, #4
 800c216:	1a9b      	subs	r3, r3, r2
 800c218:	011b      	lsls	r3, r3, #4
 800c21a:	440b      	add	r3, r1
 800c21c:	3368      	adds	r3, #104	; 0x68
 800c21e:	e019      	b.n	800c254 <config_motors+0x9a8>
 800c220:	200018a8 	.word	0x200018a8
 800c224:	461c4000 	.word	0x461c4000
 800c228:	460ca000 	.word	0x460ca000
 800c22c:	3b03126f 	.word	0x3b03126f
 800c230:	46756fdb 	.word	0x46756fdb
 800c234:	c6756fdb 	.word	0xc6756fdb
 800c238:	40c90fdb 	.word	0x40c90fdb
 800c23c:	c0c90fdb 	.word	0xc0c90fdb
 800c240:	42c80000 	.word	0x42c80000
 800c244:	40e00000 	.word	0x40e00000
 800c248:	3ca3d70a 	.word	0x3ca3d70a
 800c24c:	40400000 	.word	0x40400000
 800c250:	bfc00000 	.word	0xbfc00000
 800c254:	4abe      	ldr	r2, [pc, #760]	; (800c550 <config_motors+0xca4>)
 800c256:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c258:	79ba      	ldrb	r2, [r7, #6]
 800c25a:	49be      	ldr	r1, [pc, #760]	; (800c554 <config_motors+0xca8>)
 800c25c:	4613      	mov	r3, r2
 800c25e:	011b      	lsls	r3, r3, #4
 800c260:	1a9b      	subs	r3, r3, r2
 800c262:	011b      	lsls	r3, r3, #4
 800c264:	440b      	add	r3, r1
 800c266:	336c      	adds	r3, #108	; 0x6c
 800c268:	f04f 0200 	mov.w	r2, #0
 800c26c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c26e:	79ba      	ldrb	r2, [r7, #6]
 800c270:	49b8      	ldr	r1, [pc, #736]	; (800c554 <config_motors+0xca8>)
 800c272:	4613      	mov	r3, r2
 800c274:	011b      	lsls	r3, r3, #4
 800c276:	1a9b      	subs	r3, r3, r2
 800c278:	011b      	lsls	r3, r3, #4
 800c27a:	440b      	add	r3, r1
 800c27c:	3370      	adds	r3, #112	; 0x70
 800c27e:	f04f 0200 	mov.w	r2, #0
 800c282:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c284:	79ba      	ldrb	r2, [r7, #6]
 800c286:	49b3      	ldr	r1, [pc, #716]	; (800c554 <config_motors+0xca8>)
 800c288:	4613      	mov	r3, r2
 800c28a:	011b      	lsls	r3, r3, #4
 800c28c:	1a9b      	subs	r3, r3, r2
 800c28e:	011b      	lsls	r3, r3, #4
 800c290:	440b      	add	r3, r1
 800c292:	3380      	adds	r3, #128	; 0x80
 800c294:	4ab0      	ldr	r2, [pc, #704]	; (800c558 <config_motors+0xcac>)
 800c296:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c298:	79ba      	ldrb	r2, [r7, #6]
 800c29a:	49ae      	ldr	r1, [pc, #696]	; (800c554 <config_motors+0xca8>)
 800c29c:	4613      	mov	r3, r2
 800c29e:	011b      	lsls	r3, r3, #4
 800c2a0:	1a9b      	subs	r3, r3, r2
 800c2a2:	011b      	lsls	r3, r3, #4
 800c2a4:	440b      	add	r3, r1
 800c2a6:	3384      	adds	r3, #132	; 0x84
 800c2a8:	4aa9      	ldr	r2, [pc, #676]	; (800c550 <config_motors+0xca4>)
 800c2aa:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c2ac:	79ba      	ldrb	r2, [r7, #6]
 800c2ae:	49a9      	ldr	r1, [pc, #676]	; (800c554 <config_motors+0xca8>)
 800c2b0:	4613      	mov	r3, r2
 800c2b2:	011b      	lsls	r3, r3, #4
 800c2b4:	1a9b      	subs	r3, r3, r2
 800c2b6:	011b      	lsls	r3, r3, #4
 800c2b8:	440b      	add	r3, r1
 800c2ba:	3338      	adds	r3, #56	; 0x38
 800c2bc:	4aa4      	ldr	r2, [pc, #656]	; (800c550 <config_motors+0xca4>)
 800c2be:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c2c0:	79ba      	ldrb	r2, [r7, #6]
 800c2c2:	49a4      	ldr	r1, [pc, #656]	; (800c554 <config_motors+0xca8>)
 800c2c4:	4613      	mov	r3, r2
 800c2c6:	011b      	lsls	r3, r3, #4
 800c2c8:	1a9b      	subs	r3, r3, r2
 800c2ca:	011b      	lsls	r3, r3, #4
 800c2cc:	440b      	add	r3, r1
 800c2ce:	333c      	adds	r3, #60	; 0x3c
 800c2d0:	4aa2      	ldr	r2, [pc, #648]	; (800c55c <config_motors+0xcb0>)
 800c2d2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c2d4:	79ba      	ldrb	r2, [r7, #6]
 800c2d6:	499f      	ldr	r1, [pc, #636]	; (800c554 <config_motors+0xca8>)
 800c2d8:	4613      	mov	r3, r2
 800c2da:	011b      	lsls	r3, r3, #4
 800c2dc:	1a9b      	subs	r3, r3, r2
 800c2de:	011b      	lsls	r3, r3, #4
 800c2e0:	440b      	add	r3, r1
 800c2e2:	3340      	adds	r3, #64	; 0x40
 800c2e4:	f04f 0200 	mov.w	r2, #0
 800c2e8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c2ea:	79ba      	ldrb	r2, [r7, #6]
 800c2ec:	4999      	ldr	r1, [pc, #612]	; (800c554 <config_motors+0xca8>)
 800c2ee:	4613      	mov	r3, r2
 800c2f0:	011b      	lsls	r3, r3, #4
 800c2f2:	1a9b      	subs	r3, r3, r2
 800c2f4:	011b      	lsls	r3, r3, #4
 800c2f6:	440b      	add	r3, r1
 800c2f8:	3350      	adds	r3, #80	; 0x50
 800c2fa:	4a99      	ldr	r2, [pc, #612]	; (800c560 <config_motors+0xcb4>)
 800c2fc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c2fe:	79ba      	ldrb	r2, [r7, #6]
 800c300:	4994      	ldr	r1, [pc, #592]	; (800c554 <config_motors+0xca8>)
 800c302:	4613      	mov	r3, r2
 800c304:	011b      	lsls	r3, r3, #4
 800c306:	1a9b      	subs	r3, r3, r2
 800c308:	011b      	lsls	r3, r3, #4
 800c30a:	440b      	add	r3, r1
 800c30c:	3354      	adds	r3, #84	; 0x54
 800c30e:	4a95      	ldr	r2, [pc, #596]	; (800c564 <config_motors+0xcb8>)
 800c310:	601a      	str	r2, [r3, #0]
#endif

#ifdef L2_MOTOR_ID
	motor_id = L2_MOTOR_ID - 1;
 800c312:	2306      	movs	r3, #6
 800c314:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c316:	79ba      	ldrb	r2, [r7, #6]
 800c318:	498e      	ldr	r1, [pc, #568]	; (800c554 <config_motors+0xca8>)
 800c31a:	4613      	mov	r3, r2
 800c31c:	011b      	lsls	r3, r3, #4
 800c31e:	1a9b      	subs	r3, r3, r2
 800c320:	011b      	lsls	r3, r3, #4
 800c322:	440b      	add	r3, r1
 800c324:	3302      	adds	r3, #2
 800c326:	2201      	movs	r2, #1
 800c328:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c32a:	79ba      	ldrb	r2, [r7, #6]
 800c32c:	4613      	mov	r3, r2
 800c32e:	011b      	lsls	r3, r3, #4
 800c330:	1a9b      	subs	r3, r3, r2
 800c332:	011b      	lsls	r3, r3, #4
 800c334:	4a87      	ldr	r2, [pc, #540]	; (800c554 <config_motors+0xca8>)
 800c336:	4413      	add	r3, r2
 800c338:	4618      	mov	r0, r3
 800c33a:	f7ff fa51 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c33e:	79ba      	ldrb	r2, [r7, #6]
 800c340:	4984      	ldr	r1, [pc, #528]	; (800c554 <config_motors+0xca8>)
 800c342:	4613      	mov	r3, r2
 800c344:	011b      	lsls	r3, r3, #4
 800c346:	1a9b      	subs	r3, r3, r2
 800c348:	011b      	lsls	r3, r3, #4
 800c34a:	440b      	add	r3, r1
 800c34c:	33c8      	adds	r3, #200	; 0xc8
 800c34e:	f04f 0200 	mov.w	r2, #0
 800c352:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = L2_CENTER;
 800c354:	79ba      	ldrb	r2, [r7, #6]
 800c356:	497f      	ldr	r1, [pc, #508]	; (800c554 <config_motors+0xca8>)
 800c358:	4613      	mov	r3, r2
 800c35a:	011b      	lsls	r3, r3, #4
 800c35c:	1a9b      	subs	r3, r3, r2
 800c35e:	011b      	lsls	r3, r3, #4
 800c360:	440b      	add	r3, r1
 800c362:	339c      	adds	r3, #156	; 0x9c
 800c364:	f640 32b8 	movw	r2, #3000	; 0xbb8
 800c368:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = L2_MAX_ANG;
 800c36a:	79ba      	ldrb	r2, [r7, #6]
 800c36c:	4979      	ldr	r1, [pc, #484]	; (800c554 <config_motors+0xca8>)
 800c36e:	4613      	mov	r3, r2
 800c370:	011b      	lsls	r3, r3, #4
 800c372:	1a9b      	subs	r3, r3, r2
 800c374:	011b      	lsls	r3, r3, #4
 800c376:	440b      	add	r3, r1
 800c378:	33b8      	adds	r3, #184	; 0xb8
 800c37a:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c37e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = L2_MIN_ANG;
 800c380:	79ba      	ldrb	r2, [r7, #6]
 800c382:	4974      	ldr	r1, [pc, #464]	; (800c554 <config_motors+0xca8>)
 800c384:	4613      	mov	r3, r2
 800c386:	011b      	lsls	r3, r3, #4
 800c388:	1a9b      	subs	r3, r3, r2
 800c38a:	011b      	lsls	r3, r3, #4
 800c38c:	440b      	add	r3, r1
 800c38e:	33b4      	adds	r3, #180	; 0xb4
 800c390:	4a75      	ldr	r2, [pc, #468]	; (800c568 <config_motors+0xcbc>)
 800c392:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c394:	79ba      	ldrb	r2, [r7, #6]
 800c396:	496f      	ldr	r1, [pc, #444]	; (800c554 <config_motors+0xca8>)
 800c398:	4613      	mov	r3, r2
 800c39a:	011b      	lsls	r3, r3, #4
 800c39c:	1a9b      	subs	r3, r3, r2
 800c39e:	011b      	lsls	r3, r3, #4
 800c3a0:	440b      	add	r3, r1
 800c3a2:	33c4      	adds	r3, #196	; 0xc4
 800c3a4:	4a71      	ldr	r2, [pc, #452]	; (800c56c <config_motors+0xcc0>)
 800c3a6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c3a8:	79ba      	ldrb	r2, [r7, #6]
 800c3aa:	496a      	ldr	r1, [pc, #424]	; (800c554 <config_motors+0xca8>)
 800c3ac:	4613      	mov	r3, r2
 800c3ae:	011b      	lsls	r3, r3, #4
 800c3b0:	1a9b      	subs	r3, r3, r2
 800c3b2:	011b      	lsls	r3, r3, #4
 800c3b4:	440b      	add	r3, r1
 800c3b6:	33c0      	adds	r3, #192	; 0xc0
 800c3b8:	4a6d      	ldr	r2, [pc, #436]	; (800c570 <config_motors+0xcc4>)
 800c3ba:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c3bc:	79ba      	ldrb	r2, [r7, #6]
 800c3be:	4965      	ldr	r1, [pc, #404]	; (800c554 <config_motors+0xca8>)
 800c3c0:	4613      	mov	r3, r2
 800c3c2:	011b      	lsls	r3, r3, #4
 800c3c4:	1a9b      	subs	r3, r3, r2
 800c3c6:	011b      	lsls	r3, r3, #4
 800c3c8:	440b      	add	r3, r1
 800c3ca:	33d4      	adds	r3, #212	; 0xd4
 800c3cc:	f04f 0200 	mov.w	r2, #0
 800c3d0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c3d2:	79ba      	ldrb	r2, [r7, #6]
 800c3d4:	495f      	ldr	r1, [pc, #380]	; (800c554 <config_motors+0xca8>)
 800c3d6:	4613      	mov	r3, r2
 800c3d8:	011b      	lsls	r3, r3, #4
 800c3da:	1a9b      	subs	r3, r3, r2
 800c3dc:	011b      	lsls	r3, r3, #4
 800c3de:	440b      	add	r3, r1
 800c3e0:	3368      	adds	r3, #104	; 0x68
 800c3e2:	4a5b      	ldr	r2, [pc, #364]	; (800c550 <config_motors+0xca4>)
 800c3e4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c3e6:	79ba      	ldrb	r2, [r7, #6]
 800c3e8:	495a      	ldr	r1, [pc, #360]	; (800c554 <config_motors+0xca8>)
 800c3ea:	4613      	mov	r3, r2
 800c3ec:	011b      	lsls	r3, r3, #4
 800c3ee:	1a9b      	subs	r3, r3, r2
 800c3f0:	011b      	lsls	r3, r3, #4
 800c3f2:	440b      	add	r3, r1
 800c3f4:	336c      	adds	r3, #108	; 0x6c
 800c3f6:	f04f 0200 	mov.w	r2, #0
 800c3fa:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c3fc:	79ba      	ldrb	r2, [r7, #6]
 800c3fe:	4955      	ldr	r1, [pc, #340]	; (800c554 <config_motors+0xca8>)
 800c400:	4613      	mov	r3, r2
 800c402:	011b      	lsls	r3, r3, #4
 800c404:	1a9b      	subs	r3, r3, r2
 800c406:	011b      	lsls	r3, r3, #4
 800c408:	440b      	add	r3, r1
 800c40a:	3370      	adds	r3, #112	; 0x70
 800c40c:	f04f 0200 	mov.w	r2, #0
 800c410:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c412:	79ba      	ldrb	r2, [r7, #6]
 800c414:	494f      	ldr	r1, [pc, #316]	; (800c554 <config_motors+0xca8>)
 800c416:	4613      	mov	r3, r2
 800c418:	011b      	lsls	r3, r3, #4
 800c41a:	1a9b      	subs	r3, r3, r2
 800c41c:	011b      	lsls	r3, r3, #4
 800c41e:	440b      	add	r3, r1
 800c420:	3380      	adds	r3, #128	; 0x80
 800c422:	4a4d      	ldr	r2, [pc, #308]	; (800c558 <config_motors+0xcac>)
 800c424:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c426:	79ba      	ldrb	r2, [r7, #6]
 800c428:	494a      	ldr	r1, [pc, #296]	; (800c554 <config_motors+0xca8>)
 800c42a:	4613      	mov	r3, r2
 800c42c:	011b      	lsls	r3, r3, #4
 800c42e:	1a9b      	subs	r3, r3, r2
 800c430:	011b      	lsls	r3, r3, #4
 800c432:	440b      	add	r3, r1
 800c434:	3384      	adds	r3, #132	; 0x84
 800c436:	4a46      	ldr	r2, [pc, #280]	; (800c550 <config_motors+0xca4>)
 800c438:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c43a:	79ba      	ldrb	r2, [r7, #6]
 800c43c:	4945      	ldr	r1, [pc, #276]	; (800c554 <config_motors+0xca8>)
 800c43e:	4613      	mov	r3, r2
 800c440:	011b      	lsls	r3, r3, #4
 800c442:	1a9b      	subs	r3, r3, r2
 800c444:	011b      	lsls	r3, r3, #4
 800c446:	440b      	add	r3, r1
 800c448:	3338      	adds	r3, #56	; 0x38
 800c44a:	4a41      	ldr	r2, [pc, #260]	; (800c550 <config_motors+0xca4>)
 800c44c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c44e:	79ba      	ldrb	r2, [r7, #6]
 800c450:	4940      	ldr	r1, [pc, #256]	; (800c554 <config_motors+0xca8>)
 800c452:	4613      	mov	r3, r2
 800c454:	011b      	lsls	r3, r3, #4
 800c456:	1a9b      	subs	r3, r3, r2
 800c458:	011b      	lsls	r3, r3, #4
 800c45a:	440b      	add	r3, r1
 800c45c:	333c      	adds	r3, #60	; 0x3c
 800c45e:	4a3f      	ldr	r2, [pc, #252]	; (800c55c <config_motors+0xcb0>)
 800c460:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c462:	79ba      	ldrb	r2, [r7, #6]
 800c464:	493b      	ldr	r1, [pc, #236]	; (800c554 <config_motors+0xca8>)
 800c466:	4613      	mov	r3, r2
 800c468:	011b      	lsls	r3, r3, #4
 800c46a:	1a9b      	subs	r3, r3, r2
 800c46c:	011b      	lsls	r3, r3, #4
 800c46e:	440b      	add	r3, r1
 800c470:	3340      	adds	r3, #64	; 0x40
 800c472:	f04f 0200 	mov.w	r2, #0
 800c476:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c478:	79ba      	ldrb	r2, [r7, #6]
 800c47a:	4936      	ldr	r1, [pc, #216]	; (800c554 <config_motors+0xca8>)
 800c47c:	4613      	mov	r3, r2
 800c47e:	011b      	lsls	r3, r3, #4
 800c480:	1a9b      	subs	r3, r3, r2
 800c482:	011b      	lsls	r3, r3, #4
 800c484:	440b      	add	r3, r1
 800c486:	3350      	adds	r3, #80	; 0x50
 800c488:	4a35      	ldr	r2, [pc, #212]	; (800c560 <config_motors+0xcb4>)
 800c48a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c48c:	79ba      	ldrb	r2, [r7, #6]
 800c48e:	4931      	ldr	r1, [pc, #196]	; (800c554 <config_motors+0xca8>)
 800c490:	4613      	mov	r3, r2
 800c492:	011b      	lsls	r3, r3, #4
 800c494:	1a9b      	subs	r3, r3, r2
 800c496:	011b      	lsls	r3, r3, #4
 800c498:	440b      	add	r3, r1
 800c49a:	3354      	adds	r3, #84	; 0x54
 800c49c:	4a31      	ldr	r2, [pc, #196]	; (800c564 <config_motors+0xcb8>)
 800c49e:	601a      	str	r2, [r3, #0]
#endif

#ifdef R1_MOTOR_ID
	motor_id = R1_MOTOR_ID - 1;
 800c4a0:	2304      	movs	r3, #4
 800c4a2:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c4a4:	79ba      	ldrb	r2, [r7, #6]
 800c4a6:	492b      	ldr	r1, [pc, #172]	; (800c554 <config_motors+0xca8>)
 800c4a8:	4613      	mov	r3, r2
 800c4aa:	011b      	lsls	r3, r3, #4
 800c4ac:	1a9b      	subs	r3, r3, r2
 800c4ae:	011b      	lsls	r3, r3, #4
 800c4b0:	440b      	add	r3, r1
 800c4b2:	3302      	adds	r3, #2
 800c4b4:	2201      	movs	r2, #1
 800c4b6:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c4b8:	79ba      	ldrb	r2, [r7, #6]
 800c4ba:	4613      	mov	r3, r2
 800c4bc:	011b      	lsls	r3, r3, #4
 800c4be:	1a9b      	subs	r3, r3, r2
 800c4c0:	011b      	lsls	r3, r3, #4
 800c4c2:	4a24      	ldr	r2, [pc, #144]	; (800c554 <config_motors+0xca8>)
 800c4c4:	4413      	add	r3, r2
 800c4c6:	4618      	mov	r0, r3
 800c4c8:	f7ff f98a 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;	//1;
 800c4cc:	79ba      	ldrb	r2, [r7, #6]
 800c4ce:	4921      	ldr	r1, [pc, #132]	; (800c554 <config_motors+0xca8>)
 800c4d0:	4613      	mov	r3, r2
 800c4d2:	011b      	lsls	r3, r3, #4
 800c4d4:	1a9b      	subs	r3, r3, r2
 800c4d6:	011b      	lsls	r3, r3, #4
 800c4d8:	440b      	add	r3, r1
 800c4da:	33c8      	adds	r3, #200	; 0xc8
 800c4dc:	f04f 0200 	mov.w	r2, #0
 800c4e0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = R1_CENTER;
 800c4e2:	79ba      	ldrb	r2, [r7, #6]
 800c4e4:	491b      	ldr	r1, [pc, #108]	; (800c554 <config_motors+0xca8>)
 800c4e6:	4613      	mov	r3, r2
 800c4e8:	011b      	lsls	r3, r3, #4
 800c4ea:	1a9b      	subs	r3, r3, r2
 800c4ec:	011b      	lsls	r3, r3, #4
 800c4ee:	440b      	add	r3, r1
 800c4f0:	339c      	adds	r3, #156	; 0x9c
 800c4f2:	f640 42d3 	movw	r2, #3283	; 0xcd3
 800c4f6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = R1_MAX_ANG;
 800c4f8:	79ba      	ldrb	r2, [r7, #6]
 800c4fa:	4916      	ldr	r1, [pc, #88]	; (800c554 <config_motors+0xca8>)
 800c4fc:	4613      	mov	r3, r2
 800c4fe:	011b      	lsls	r3, r3, #4
 800c500:	1a9b      	subs	r3, r3, r2
 800c502:	011b      	lsls	r3, r3, #4
 800c504:	440b      	add	r3, r1
 800c506:	33b8      	adds	r3, #184	; 0xb8
 800c508:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c50c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = R1_MIN_ANG;
 800c50e:	79ba      	ldrb	r2, [r7, #6]
 800c510:	4910      	ldr	r1, [pc, #64]	; (800c554 <config_motors+0xca8>)
 800c512:	4613      	mov	r3, r2
 800c514:	011b      	lsls	r3, r3, #4
 800c516:	1a9b      	subs	r3, r3, r2
 800c518:	011b      	lsls	r3, r3, #4
 800c51a:	440b      	add	r3, r1
 800c51c:	33b4      	adds	r3, #180	; 0xb4
 800c51e:	4a12      	ldr	r2, [pc, #72]	; (800c568 <config_motors+0xcbc>)
 800c520:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c522:	79ba      	ldrb	r2, [r7, #6]
 800c524:	490b      	ldr	r1, [pc, #44]	; (800c554 <config_motors+0xca8>)
 800c526:	4613      	mov	r3, r2
 800c528:	011b      	lsls	r3, r3, #4
 800c52a:	1a9b      	subs	r3, r3, r2
 800c52c:	011b      	lsls	r3, r3, #4
 800c52e:	440b      	add	r3, r1
 800c530:	33c4      	adds	r3, #196	; 0xc4
 800c532:	4a0e      	ldr	r2, [pc, #56]	; (800c56c <config_motors+0xcc0>)
 800c534:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI; //angle before it overflows
 800c536:	79ba      	ldrb	r2, [r7, #6]
 800c538:	4906      	ldr	r1, [pc, #24]	; (800c554 <config_motors+0xca8>)
 800c53a:	4613      	mov	r3, r2
 800c53c:	011b      	lsls	r3, r3, #4
 800c53e:	1a9b      	subs	r3, r3, r2
 800c540:	011b      	lsls	r3, r3, #4
 800c542:	440b      	add	r3, r1
 800c544:	33c0      	adds	r3, #192	; 0xc0
 800c546:	4a0a      	ldr	r2, [pc, #40]	; (800c570 <config_motors+0xcc4>)
 800c548:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c54a:	79ba      	ldrb	r2, [r7, #6]
 800c54c:	e012      	b.n	800c574 <config_motors+0xcc8>
 800c54e:	bf00      	nop
 800c550:	43480000 	.word	0x43480000
 800c554:	200018a8 	.word	0x200018a8
 800c558:	447a0000 	.word	0x447a0000
 800c55c:	3dcccccd 	.word	0x3dcccccd
 800c560:	461c4000 	.word	0x461c4000
 800c564:	469c4000 	.word	0x469c4000
 800c568:	bfc00000 	.word	0xbfc00000
 800c56c:	40c90fdb 	.word	0x40c90fdb
 800c570:	c0c90fdb 	.word	0xc0c90fdb
 800c574:	499d      	ldr	r1, [pc, #628]	; (800c7ec <config_motors+0xf40>)
 800c576:	4613      	mov	r3, r2
 800c578:	011b      	lsls	r3, r3, #4
 800c57a:	1a9b      	subs	r3, r3, r2
 800c57c:	011b      	lsls	r3, r3, #4
 800c57e:	440b      	add	r3, r1
 800c580:	33d4      	adds	r3, #212	; 0xd4
 800c582:	f04f 0200 	mov.w	r2, #0
 800c586:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 800c588:	79ba      	ldrb	r2, [r7, #6]
 800c58a:	4998      	ldr	r1, [pc, #608]	; (800c7ec <config_motors+0xf40>)
 800c58c:	4613      	mov	r3, r2
 800c58e:	011b      	lsls	r3, r3, #4
 800c590:	1a9b      	subs	r3, r3, r2
 800c592:	011b      	lsls	r3, r3, #4
 800c594:	440b      	add	r3, r1
 800c596:	3368      	adds	r3, #104	; 0x68
 800c598:	4a95      	ldr	r2, [pc, #596]	; (800c7f0 <config_motors+0xf44>)
 800c59a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 800c59c:	79ba      	ldrb	r2, [r7, #6]
 800c59e:	4993      	ldr	r1, [pc, #588]	; (800c7ec <config_motors+0xf40>)
 800c5a0:	4613      	mov	r3, r2
 800c5a2:	011b      	lsls	r3, r3, #4
 800c5a4:	1a9b      	subs	r3, r3, r2
 800c5a6:	011b      	lsls	r3, r3, #4
 800c5a8:	440b      	add	r3, r1
 800c5aa:	336c      	adds	r3, #108	; 0x6c
 800c5ac:	f04f 0200 	mov.w	r2, #0
 800c5b0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 800c5b2:	79ba      	ldrb	r2, [r7, #6]
 800c5b4:	498d      	ldr	r1, [pc, #564]	; (800c7ec <config_motors+0xf40>)
 800c5b6:	4613      	mov	r3, r2
 800c5b8:	011b      	lsls	r3, r3, #4
 800c5ba:	1a9b      	subs	r3, r3, r2
 800c5bc:	011b      	lsls	r3, r3, #4
 800c5be:	440b      	add	r3, r1
 800c5c0:	3370      	adds	r3, #112	; 0x70
 800c5c2:	f04f 0200 	mov.w	r2, #0
 800c5c6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 800c5c8:	79ba      	ldrb	r2, [r7, #6]
 800c5ca:	4988      	ldr	r1, [pc, #544]	; (800c7ec <config_motors+0xf40>)
 800c5cc:	4613      	mov	r3, r2
 800c5ce:	011b      	lsls	r3, r3, #4
 800c5d0:	1a9b      	subs	r3, r3, r2
 800c5d2:	011b      	lsls	r3, r3, #4
 800c5d4:	440b      	add	r3, r1
 800c5d6:	3380      	adds	r3, #128	; 0x80
 800c5d8:	4a86      	ldr	r2, [pc, #536]	; (800c7f4 <config_motors+0xf48>)
 800c5da:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 800c5dc:	79ba      	ldrb	r2, [r7, #6]
 800c5de:	4983      	ldr	r1, [pc, #524]	; (800c7ec <config_motors+0xf40>)
 800c5e0:	4613      	mov	r3, r2
 800c5e2:	011b      	lsls	r3, r3, #4
 800c5e4:	1a9b      	subs	r3, r3, r2
 800c5e6:	011b      	lsls	r3, r3, #4
 800c5e8:	440b      	add	r3, r1
 800c5ea:	3384      	adds	r3, #132	; 0x84
 800c5ec:	4a82      	ldr	r2, [pc, #520]	; (800c7f8 <config_motors+0xf4c>)
 800c5ee:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 800c5f0:	79ba      	ldrb	r2, [r7, #6]
 800c5f2:	497e      	ldr	r1, [pc, #504]	; (800c7ec <config_motors+0xf40>)
 800c5f4:	4613      	mov	r3, r2
 800c5f6:	011b      	lsls	r3, r3, #4
 800c5f8:	1a9b      	subs	r3, r3, r2
 800c5fa:	011b      	lsls	r3, r3, #4
 800c5fc:	440b      	add	r3, r1
 800c5fe:	3338      	adds	r3, #56	; 0x38
 800c600:	4a7c      	ldr	r2, [pc, #496]	; (800c7f4 <config_motors+0xf48>)
 800c602:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 800c604:	79ba      	ldrb	r2, [r7, #6]
 800c606:	4979      	ldr	r1, [pc, #484]	; (800c7ec <config_motors+0xf40>)
 800c608:	4613      	mov	r3, r2
 800c60a:	011b      	lsls	r3, r3, #4
 800c60c:	1a9b      	subs	r3, r3, r2
 800c60e:	011b      	lsls	r3, r3, #4
 800c610:	440b      	add	r3, r1
 800c612:	333c      	adds	r3, #60	; 0x3c
 800c614:	4a79      	ldr	r2, [pc, #484]	; (800c7fc <config_motors+0xf50>)
 800c616:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 800c618:	79ba      	ldrb	r2, [r7, #6]
 800c61a:	4974      	ldr	r1, [pc, #464]	; (800c7ec <config_motors+0xf40>)
 800c61c:	4613      	mov	r3, r2
 800c61e:	011b      	lsls	r3, r3, #4
 800c620:	1a9b      	subs	r3, r3, r2
 800c622:	011b      	lsls	r3, r3, #4
 800c624:	440b      	add	r3, r1
 800c626:	3340      	adds	r3, #64	; 0x40
 800c628:	4a72      	ldr	r2, [pc, #456]	; (800c7f4 <config_motors+0xf48>)
 800c62a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 800c62c:	79ba      	ldrb	r2, [r7, #6]
 800c62e:	496f      	ldr	r1, [pc, #444]	; (800c7ec <config_motors+0xf40>)
 800c630:	4613      	mov	r3, r2
 800c632:	011b      	lsls	r3, r3, #4
 800c634:	1a9b      	subs	r3, r3, r2
 800c636:	011b      	lsls	r3, r3, #4
 800c638:	440b      	add	r3, r1
 800c63a:	3350      	adds	r3, #80	; 0x50
 800c63c:	4a70      	ldr	r2, [pc, #448]	; (800c800 <config_motors+0xf54>)
 800c63e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 800c640:	79ba      	ldrb	r2, [r7, #6]
 800c642:	496a      	ldr	r1, [pc, #424]	; (800c7ec <config_motors+0xf40>)
 800c644:	4613      	mov	r3, r2
 800c646:	011b      	lsls	r3, r3, #4
 800c648:	1a9b      	subs	r3, r3, r2
 800c64a:	011b      	lsls	r3, r3, #4
 800c64c:	440b      	add	r3, r1
 800c64e:	3354      	adds	r3, #84	; 0x54
 800c650:	4a6c      	ldr	r2, [pc, #432]	; (800c804 <config_motors+0xf58>)
 800c652:	601a      	str	r2, [r3, #0]
#endif



#ifdef R2_MOTOR_ID
	motor_id = R2_MOTOR_ID - 1;
 800c654:	2305      	movs	r3, #5
 800c656:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c658:	79ba      	ldrb	r2, [r7, #6]
 800c65a:	4964      	ldr	r1, [pc, #400]	; (800c7ec <config_motors+0xf40>)
 800c65c:	4613      	mov	r3, r2
 800c65e:	011b      	lsls	r3, r3, #4
 800c660:	1a9b      	subs	r3, r3, r2
 800c662:	011b      	lsls	r3, r3, #4
 800c664:	440b      	add	r3, r1
 800c666:	3302      	adds	r3, #2
 800c668:	2201      	movs	r2, #1
 800c66a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c66c:	79ba      	ldrb	r2, [r7, #6]
 800c66e:	4613      	mov	r3, r2
 800c670:	011b      	lsls	r3, r3, #4
 800c672:	1a9b      	subs	r3, r3, r2
 800c674:	011b      	lsls	r3, r3, #4
 800c676:	4a5d      	ldr	r2, [pc, #372]	; (800c7ec <config_motors+0xf40>)
 800c678:	4413      	add	r3, r2
 800c67a:	4618      	mov	r0, r3
 800c67c:	f7ff f8b0 	bl	800b7e0 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c680:	79ba      	ldrb	r2, [r7, #6]
 800c682:	495a      	ldr	r1, [pc, #360]	; (800c7ec <config_motors+0xf40>)
 800c684:	4613      	mov	r3, r2
 800c686:	011b      	lsls	r3, r3, #4
 800c688:	1a9b      	subs	r3, r3, r2
 800c68a:	011b      	lsls	r3, r3, #4
 800c68c:	440b      	add	r3, r1
 800c68e:	33c8      	adds	r3, #200	; 0xc8
 800c690:	f04f 0200 	mov.w	r2, #0
 800c694:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = R2_CENTER;
 800c696:	79ba      	ldrb	r2, [r7, #6]
 800c698:	4954      	ldr	r1, [pc, #336]	; (800c7ec <config_motors+0xf40>)
 800c69a:	4613      	mov	r3, r2
 800c69c:	011b      	lsls	r3, r3, #4
 800c69e:	1a9b      	subs	r3, r3, r2
 800c6a0:	011b      	lsls	r3, r3, #4
 800c6a2:	440b      	add	r3, r1
 800c6a4:	339c      	adds	r3, #156	; 0x9c
 800c6a6:	f641 121c 	movw	r2, #6428	; 0x191c
 800c6aa:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = R2_MAX_ANG;
 800c6ac:	79ba      	ldrb	r2, [r7, #6]
 800c6ae:	494f      	ldr	r1, [pc, #316]	; (800c7ec <config_motors+0xf40>)
 800c6b0:	4613      	mov	r3, r2
 800c6b2:	011b      	lsls	r3, r3, #4
 800c6b4:	1a9b      	subs	r3, r3, r2
 800c6b6:	011b      	lsls	r3, r3, #4
 800c6b8:	440b      	add	r3, r1
 800c6ba:	33b8      	adds	r3, #184	; 0xb8
 800c6bc:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c6c0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = R2_MIN_ANG;
 800c6c2:	79ba      	ldrb	r2, [r7, #6]
 800c6c4:	4949      	ldr	r1, [pc, #292]	; (800c7ec <config_motors+0xf40>)
 800c6c6:	4613      	mov	r3, r2
 800c6c8:	011b      	lsls	r3, r3, #4
 800c6ca:	1a9b      	subs	r3, r3, r2
 800c6cc:	011b      	lsls	r3, r3, #4
 800c6ce:	440b      	add	r3, r1
 800c6d0:	33b4      	adds	r3, #180	; 0xb4
 800c6d2:	4a4d      	ldr	r2, [pc, #308]	; (800c808 <config_motors+0xf5c>)
 800c6d4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c6d6:	79ba      	ldrb	r2, [r7, #6]
 800c6d8:	4944      	ldr	r1, [pc, #272]	; (800c7ec <config_motors+0xf40>)
 800c6da:	4613      	mov	r3, r2
 800c6dc:	011b      	lsls	r3, r3, #4
 800c6de:	1a9b      	subs	r3, r3, r2
 800c6e0:	011b      	lsls	r3, r3, #4
 800c6e2:	440b      	add	r3, r1
 800c6e4:	33c4      	adds	r3, #196	; 0xc4
 800c6e6:	4a49      	ldr	r2, [pc, #292]	; (800c80c <config_motors+0xf60>)
 800c6e8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c6ea:	79ba      	ldrb	r2, [r7, #6]
 800c6ec:	493f      	ldr	r1, [pc, #252]	; (800c7ec <config_motors+0xf40>)
 800c6ee:	4613      	mov	r3, r2
 800c6f0:	011b      	lsls	r3, r3, #4
 800c6f2:	1a9b      	subs	r3, r3, r2
 800c6f4:	011b      	lsls	r3, r3, #4
 800c6f6:	440b      	add	r3, r1
 800c6f8:	33c0      	adds	r3, #192	; 0xc0
 800c6fa:	4a45      	ldr	r2, [pc, #276]	; (800c810 <config_motors+0xf64>)
 800c6fc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c6fe:	79ba      	ldrb	r2, [r7, #6]
 800c700:	493a      	ldr	r1, [pc, #232]	; (800c7ec <config_motors+0xf40>)
 800c702:	4613      	mov	r3, r2
 800c704:	011b      	lsls	r3, r3, #4
 800c706:	1a9b      	subs	r3, r3, r2
 800c708:	011b      	lsls	r3, r3, #4
 800c70a:	440b      	add	r3, r1
 800c70c:	33d4      	adds	r3, #212	; 0xd4
 800c70e:	f04f 0200 	mov.w	r2, #0
 800c712:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c714:	79ba      	ldrb	r2, [r7, #6]
 800c716:	4935      	ldr	r1, [pc, #212]	; (800c7ec <config_motors+0xf40>)
 800c718:	4613      	mov	r3, r2
 800c71a:	011b      	lsls	r3, r3, #4
 800c71c:	1a9b      	subs	r3, r3, r2
 800c71e:	011b      	lsls	r3, r3, #4
 800c720:	440b      	add	r3, r1
 800c722:	3368      	adds	r3, #104	; 0x68
 800c724:	4a32      	ldr	r2, [pc, #200]	; (800c7f0 <config_motors+0xf44>)
 800c726:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c728:	79ba      	ldrb	r2, [r7, #6]
 800c72a:	4930      	ldr	r1, [pc, #192]	; (800c7ec <config_motors+0xf40>)
 800c72c:	4613      	mov	r3, r2
 800c72e:	011b      	lsls	r3, r3, #4
 800c730:	1a9b      	subs	r3, r3, r2
 800c732:	011b      	lsls	r3, r3, #4
 800c734:	440b      	add	r3, r1
 800c736:	336c      	adds	r3, #108	; 0x6c
 800c738:	f04f 0200 	mov.w	r2, #0
 800c73c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c73e:	79ba      	ldrb	r2, [r7, #6]
 800c740:	492a      	ldr	r1, [pc, #168]	; (800c7ec <config_motors+0xf40>)
 800c742:	4613      	mov	r3, r2
 800c744:	011b      	lsls	r3, r3, #4
 800c746:	1a9b      	subs	r3, r3, r2
 800c748:	011b      	lsls	r3, r3, #4
 800c74a:	440b      	add	r3, r1
 800c74c:	3370      	adds	r3, #112	; 0x70
 800c74e:	f04f 0200 	mov.w	r2, #0
 800c752:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c754:	79ba      	ldrb	r2, [r7, #6]
 800c756:	4925      	ldr	r1, [pc, #148]	; (800c7ec <config_motors+0xf40>)
 800c758:	4613      	mov	r3, r2
 800c75a:	011b      	lsls	r3, r3, #4
 800c75c:	1a9b      	subs	r3, r3, r2
 800c75e:	011b      	lsls	r3, r3, #4
 800c760:	440b      	add	r3, r1
 800c762:	3380      	adds	r3, #128	; 0x80
 800c764:	4a2b      	ldr	r2, [pc, #172]	; (800c814 <config_motors+0xf68>)
 800c766:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c768:	79ba      	ldrb	r2, [r7, #6]
 800c76a:	4920      	ldr	r1, [pc, #128]	; (800c7ec <config_motors+0xf40>)
 800c76c:	4613      	mov	r3, r2
 800c76e:	011b      	lsls	r3, r3, #4
 800c770:	1a9b      	subs	r3, r3, r2
 800c772:	011b      	lsls	r3, r3, #4
 800c774:	440b      	add	r3, r1
 800c776:	3384      	adds	r3, #132	; 0x84
 800c778:	4a1d      	ldr	r2, [pc, #116]	; (800c7f0 <config_motors+0xf44>)
 800c77a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c77c:	79ba      	ldrb	r2, [r7, #6]
 800c77e:	491b      	ldr	r1, [pc, #108]	; (800c7ec <config_motors+0xf40>)
 800c780:	4613      	mov	r3, r2
 800c782:	011b      	lsls	r3, r3, #4
 800c784:	1a9b      	subs	r3, r3, r2
 800c786:	011b      	lsls	r3, r3, #4
 800c788:	440b      	add	r3, r1
 800c78a:	3338      	adds	r3, #56	; 0x38
 800c78c:	4a18      	ldr	r2, [pc, #96]	; (800c7f0 <config_motors+0xf44>)
 800c78e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c790:	79ba      	ldrb	r2, [r7, #6]
 800c792:	4916      	ldr	r1, [pc, #88]	; (800c7ec <config_motors+0xf40>)
 800c794:	4613      	mov	r3, r2
 800c796:	011b      	lsls	r3, r3, #4
 800c798:	1a9b      	subs	r3, r3, r2
 800c79a:	011b      	lsls	r3, r3, #4
 800c79c:	440b      	add	r3, r1
 800c79e:	333c      	adds	r3, #60	; 0x3c
 800c7a0:	4a1d      	ldr	r2, [pc, #116]	; (800c818 <config_motors+0xf6c>)
 800c7a2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c7a4:	79ba      	ldrb	r2, [r7, #6]
 800c7a6:	4911      	ldr	r1, [pc, #68]	; (800c7ec <config_motors+0xf40>)
 800c7a8:	4613      	mov	r3, r2
 800c7aa:	011b      	lsls	r3, r3, #4
 800c7ac:	1a9b      	subs	r3, r3, r2
 800c7ae:	011b      	lsls	r3, r3, #4
 800c7b0:	440b      	add	r3, r1
 800c7b2:	3340      	adds	r3, #64	; 0x40
 800c7b4:	f04f 0200 	mov.w	r2, #0
 800c7b8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c7ba:	79ba      	ldrb	r2, [r7, #6]
 800c7bc:	490b      	ldr	r1, [pc, #44]	; (800c7ec <config_motors+0xf40>)
 800c7be:	4613      	mov	r3, r2
 800c7c0:	011b      	lsls	r3, r3, #4
 800c7c2:	1a9b      	subs	r3, r3, r2
 800c7c4:	011b      	lsls	r3, r3, #4
 800c7c6:	440b      	add	r3, r1
 800c7c8:	3350      	adds	r3, #80	; 0x50
 800c7ca:	4a14      	ldr	r2, [pc, #80]	; (800c81c <config_motors+0xf70>)
 800c7cc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c7ce:	79ba      	ldrb	r2, [r7, #6]
 800c7d0:	4906      	ldr	r1, [pc, #24]	; (800c7ec <config_motors+0xf40>)
 800c7d2:	4613      	mov	r3, r2
 800c7d4:	011b      	lsls	r3, r3, #4
 800c7d6:	1a9b      	subs	r3, r3, r2
 800c7d8:	011b      	lsls	r3, r3, #4
 800c7da:	440b      	add	r3, r1
 800c7dc:	3354      	adds	r3, #84	; 0x54
 800c7de:	4a09      	ldr	r2, [pc, #36]	; (800c804 <config_motors+0xf58>)
 800c7e0:	601a      	str	r2, [r3, #0]
#endif

}
 800c7e2:	bf00      	nop
 800c7e4:	3708      	adds	r7, #8
 800c7e6:	46bd      	mov	sp, r7
 800c7e8:	bd80      	pop	{r7, pc}
 800c7ea:	bf00      	nop
 800c7ec:	200018a8 	.word	0x200018a8
 800c7f0:	43480000 	.word	0x43480000
 800c7f4:	42c80000 	.word	0x42c80000
 800c7f8:	43c80000 	.word	0x43c80000
 800c7fc:	3ba3d70a 	.word	0x3ba3d70a
 800c800:	459c4000 	.word	0x459c4000
 800c804:	469c4000 	.word	0x469c4000
 800c808:	bfc00000 	.word	0xbfc00000
 800c80c:	40c90fdb 	.word	0x40c90fdb
 800c810:	c0c90fdb 	.word	0xc0c90fdb
 800c814:	447a0000 	.word	0x447a0000
 800c818:	3dcccccd 	.word	0x3dcccccd
 800c81c:	461c4000 	.word	0x461c4000

0800c820 <bz_buzzer>:
void bz_buzzer(uint8_t high, uint8_t low) {
 800c820:	b580      	push	{r7, lr}
 800c822:	b084      	sub	sp, #16
 800c824:	af00      	add	r7, sp, #0
 800c826:	4603      	mov	r3, r0
 800c828:	460a      	mov	r2, r1
 800c82a:	71fb      	strb	r3, [r7, #7]
 800c82c:	4613      	mov	r3, r2
 800c82e:	71bb      	strb	r3, [r7, #6]
	int8_t temp_msg = bz_debug_high;
 800c830:	2309      	movs	r3, #9
 800c832:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < high; i++) {
 800c834:	2300      	movs	r3, #0
 800c836:	73fb      	strb	r3, [r7, #15]
 800c838:	e00d      	b.n	800c856 <bz_buzzer+0x36>
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c83a:	4b1c      	ldr	r3, [pc, #112]	; (800c8ac <bz_buzzer+0x8c>)
 800c83c:	6818      	ldr	r0, [r3, #0]
 800c83e:	f107 010d 	add.w	r1, r7, #13
 800c842:	2300      	movs	r3, #0
 800c844:	2200      	movs	r2, #0
 800c846:	f00f fa77 	bl	801bd38 <xQueueGenericSend>
	for (int8_t i = 0; i < high; i++) {
 800c84a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c84e:	b2db      	uxtb	r3, r3
 800c850:	3301      	adds	r3, #1
 800c852:	b2db      	uxtb	r3, r3
 800c854:	73fb      	strb	r3, [r7, #15]
 800c856:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800c85a:	79fb      	ldrb	r3, [r7, #7]
 800c85c:	429a      	cmp	r2, r3
 800c85e:	dbec      	blt.n	800c83a <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 800c860:	2308      	movs	r3, #8
 800c862:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 800c864:	2300      	movs	r3, #0
 800c866:	73bb      	strb	r3, [r7, #14]
 800c868:	e00d      	b.n	800c886 <bz_buzzer+0x66>
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c86a:	4b10      	ldr	r3, [pc, #64]	; (800c8ac <bz_buzzer+0x8c>)
 800c86c:	6818      	ldr	r0, [r3, #0]
 800c86e:	f107 010d 	add.w	r1, r7, #13
 800c872:	2300      	movs	r3, #0
 800c874:	2200      	movs	r2, #0
 800c876:	f00f fa5f 	bl	801bd38 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800c87a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800c87e:	b2db      	uxtb	r3, r3
 800c880:	3301      	adds	r3, #1
 800c882:	b2db      	uxtb	r3, r3
 800c884:	73bb      	strb	r3, [r7, #14]
 800c886:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800c88a:	79bb      	ldrb	r3, [r7, #6]
 800c88c:	429a      	cmp	r2, r3
 800c88e:	dbec      	blt.n	800c86a <bz_buzzer+0x4a>
	}
	temp_msg = bz_debug_rest;
 800c890:	230a      	movs	r3, #10
 800c892:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c894:	4b05      	ldr	r3, [pc, #20]	; (800c8ac <bz_buzzer+0x8c>)
 800c896:	6818      	ldr	r0, [r3, #0]
 800c898:	f107 010d 	add.w	r1, r7, #13
 800c89c:	2300      	movs	r3, #0
 800c89e:	2200      	movs	r2, #0
 800c8a0:	f00f fa4a 	bl	801bd38 <xQueueGenericSend>
}
 800c8a4:	bf00      	nop
 800c8a6:	3710      	adds	r7, #16
 800c8a8:	46bd      	mov	sp, r7
 800c8aa:	bd80      	pop	{r7, pc}
 800c8ac:	200004e4 	.word	0x200004e4

0800c8b0 <check_motors>:

uint16_t check_motors() {
 800c8b0:	b580      	push	{r7, lr}
 800c8b2:	b082      	sub	sp, #8
 800c8b4:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 800c8b6:	2300      	movs	r3, #0
 800c8b8:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 800c8ba:	f7f5 fcd9 	bl	8002270 <get_microseconds>
 800c8be:	6038      	str	r0, [r7, #0]
	if (curr_time - can_motors[FR_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c8c0:	4b3b      	ldr	r3, [pc, #236]	; (800c9b0 <check_motors+0x100>)
 800c8c2:	f8d3 3c24 	ldr.w	r3, [r3, #3108]	; 0xc24
 800c8c6:	683a      	ldr	r2, [r7, #0]
 800c8c8:	1ad3      	subs	r3, r2, r3
 800c8ca:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c8ce:	d903      	bls.n	800c8d8 <check_motors+0x28>
		error |= 1 << (0);
 800c8d0:	88fb      	ldrh	r3, [r7, #6]
 800c8d2:	f043 0301 	orr.w	r3, r3, #1
 800c8d6:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[FL_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c8d8:	4b35      	ldr	r3, [pc, #212]	; (800c9b0 <check_motors+0x100>)
 800c8da:	f8d3 3d14 	ldr.w	r3, [r3, #3348]	; 0xd14
 800c8de:	683a      	ldr	r2, [r7, #0]
 800c8e0:	1ad3      	subs	r3, r2, r3
 800c8e2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c8e6:	d903      	bls.n	800c8f0 <check_motors+0x40>
		error |= 1 << (1);
 800c8e8:	88fb      	ldrh	r3, [r7, #6]
 800c8ea:	f043 0302 	orr.w	r3, r3, #2
 800c8ee:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[BL_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c8f0:	4b2f      	ldr	r3, [pc, #188]	; (800c9b0 <check_motors+0x100>)
 800c8f2:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	; 0xe04
 800c8f6:	683a      	ldr	r2, [r7, #0]
 800c8f8:	1ad3      	subs	r3, r2, r3
 800c8fa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c8fe:	d903      	bls.n	800c908 <check_motors+0x58>
		error |= 1 << (2);
 800c900:	88fb      	ldrh	r3, [r7, #6]
 800c902:	f043 0304 	orr.w	r3, r3, #4
 800c906:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[BR_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c908:	4b29      	ldr	r3, [pc, #164]	; (800c9b0 <check_motors+0x100>)
 800c90a:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	; 0xef4
 800c90e:	683a      	ldr	r2, [r7, #0]
 800c910:	1ad3      	subs	r3, r2, r3
 800c912:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c916:	d903      	bls.n	800c920 <check_motors+0x70>
		error |= 1 << (3);
 800c918:	88fb      	ldrh	r3, [r7, #6]
 800c91a:	f043 0308 	orr.w	r3, r3, #8
 800c91e:	80fb      	strh	r3, [r7, #6]
	}

	if (curr_time - can_motors[LFRICTION_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c920:	4b23      	ldr	r3, [pc, #140]	; (800c9b0 <check_motors+0x100>)
 800c922:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c926:	f8d3 3584 	ldr.w	r3, [r3, #1412]	; 0x584
 800c92a:	683a      	ldr	r2, [r7, #0]
 800c92c:	1ad3      	subs	r3, r2, r3
 800c92e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c932:	d903      	bls.n	800c93c <check_motors+0x8c>
		error |= 1 << (4);
 800c934:	88fb      	ldrh	r3, [r7, #6]
 800c936:	f043 0310 	orr.w	r3, r3, #16
 800c93a:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[RFRICTION_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c93c:	4b1c      	ldr	r3, [pc, #112]	; (800c9b0 <check_motors+0x100>)
 800c93e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c942:	f8d3 31c4 	ldr.w	r3, [r3, #452]	; 0x1c4
 800c946:	683a      	ldr	r2, [r7, #0]
 800c948:	1ad3      	subs	r3, r2, r3
 800c94a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c94e:	d903      	bls.n	800c958 <check_motors+0xa8>
		error |= 1 << (5);
 800c950:	88fb      	ldrh	r3, [r7, #6]
 800c952:	f043 0320 	orr.w	r3, r3, #32
 800c956:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[FEEDER_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c958:	4b15      	ldr	r3, [pc, #84]	; (800c9b0 <check_motors+0x100>)
 800c95a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c95e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800c962:	683a      	ldr	r2, [r7, #0]
 800c964:	1ad3      	subs	r3, r2, r3
 800c966:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c96a:	d903      	bls.n	800c974 <check_motors+0xc4>
		error |= 1 << 6;
 800c96c:	88fb      	ldrh	r3, [r7, #6]
 800c96e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c972:	80fb      	strh	r3, [r7, #6]

	}

	if (curr_time - can_motors[L1_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c974:	4b0e      	ldr	r3, [pc, #56]	; (800c9b0 <check_motors+0x100>)
 800c976:	f8d3 3774 	ldr.w	r3, [r3, #1908]	; 0x774
 800c97a:	683a      	ldr	r2, [r7, #0]
 800c97c:	1ad3      	subs	r3, r2, r3
 800c97e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c982:	d903      	bls.n	800c98c <check_motors+0xdc>
		error |= 1 << 7;
 800c984:	88fb      	ldrh	r3, [r7, #6]
 800c986:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c98a:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[R1_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800c98c:	4b08      	ldr	r3, [pc, #32]	; (800c9b0 <check_motors+0x100>)
 800c98e:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	; 0x4a4
 800c992:	683a      	ldr	r2, [r7, #0]
 800c994:	1ad3      	subs	r3, r2, r3
 800c996:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800c99a:	d903      	bls.n	800c9a4 <check_motors+0xf4>
		error |= 1 << 8;
 800c99c:	88fb      	ldrh	r3, [r7, #6]
 800c99e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c9a2:	80fb      	strh	r3, [r7, #6]

	}
	return error;
 800c9a4:	88fb      	ldrh	r3, [r7, #6]

}
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	3708      	adds	r7, #8
 800c9aa:	46bd      	mov	sp, r7
 800c9ac:	bd80      	pop	{r7, pc}
 800c9ae:	bf00      	nop
 800c9b0:	200018a8 	.word	0x200018a8

0800c9b4 <motor_calib_task>:

void motor_calib_task(void *argument) {
 800c9b4:	b580      	push	{r7, lr}
 800c9b6:	b084      	sub	sp, #16
 800c9b8:	af00      	add	r7, sp, #0
 800c9ba:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 800c9bc:	2200      	movs	r2, #0
 800c9be:	2100      	movs	r1, #0
 800c9c0:	481d      	ldr	r0, [pc, #116]	; (800ca38 <motor_calib_task+0x84>)
 800c9c2:	f7f4 fc6d 	bl	80012a0 <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 800c9c6:	2200      	movs	r2, #0
 800c9c8:	2100      	movs	r1, #0
 800c9ca:	481c      	ldr	r0, [pc, #112]	; (800ca3c <motor_calib_task+0x88>)
 800c9cc:	f7f4 fc68 	bl	80012a0 <can_start>
	config_motors();
 800c9d0:	f7fe ff6c 	bl	800b8ac <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 800c9d4:	f240 13ff 	movw	r3, #511	; 0x1ff
 800c9d8:	81fb      	strh	r3, [r7, #14]
	vTaskDelay(50);
 800c9da:	2032      	movs	r0, #50	; 0x32
 800c9dc:	f010 f858 	bl	801ca90 <vTaskDelay>
	uint8_t startup = 0;
 800c9e0:	2300      	movs	r3, #0
 800c9e2:	737b      	strb	r3, [r7, #13]
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0){
 800c9e4:	89fb      	ldrh	r3, [r7, #14]
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	d102      	bne.n	800c9f0 <motor_calib_task+0x3c>
		temp_msg = ok;
 800c9ea:	2301      	movs	r3, #1
 800c9ec:	733b      	strb	r3, [r7, #12]
 800c9ee:	e001      	b.n	800c9f4 <motor_calib_task+0x40>
	} else {
		temp_msg = not_ok;
 800c9f0:	2302      	movs	r3, #2
 800c9f2:	733b      	strb	r3, [r7, #12]
	}
	xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c9f4:	4b12      	ldr	r3, [pc, #72]	; (800ca40 <motor_calib_task+0x8c>)
 800c9f6:	6818      	ldr	r0, [r3, #0]
 800c9f8:	f107 010c 	add.w	r1, r7, #12
 800c9fc:	2300      	movs	r3, #0
 800c9fe:	2200      	movs	r2, #0
 800ca00:	f00f f99a 	bl	801bd38 <xQueueGenericSend>

	while (1) {
		error = 0;
 800ca04:	2300      	movs	r3, #0
 800ca06:	81fb      	strh	r3, [r7, #14]

		error = check_motors();
 800ca08:	f7ff ff52 	bl	800c8b0 <check_motors>
 800ca0c:	4603      	mov	r3, r0
 800ca0e:	81fb      	strh	r3, [r7, #14]
		g_motor_fault = error;
 800ca10:	4a0c      	ldr	r2, [pc, #48]	; (800ca44 <motor_calib_task+0x90>)
 800ca12:	89fb      	ldrh	r3, [r7, #14]
 800ca14:	8013      	strh	r3, [r2, #0]
			}
			vTaskDelay(5000);
			continue;
		}
		else if (MOTOR_ONLINE_CHECK == 0) {
			if(error != 0) {
 800ca16:	89fb      	ldrh	r3, [r7, #14]
 800ca18:	2b00      	cmp	r3, #0
 800ca1a:	d008      	beq.n	800ca2e <motor_calib_task+0x7a>
			bz_buzzer(0, 2);
 800ca1c:	2102      	movs	r1, #2
 800ca1e:	2000      	movs	r0, #0
 800ca20:	f7ff fefe 	bl	800c820 <bz_buzzer>
			vTaskDelay(5000);
 800ca24:	f241 3088 	movw	r0, #5000	; 0x1388
 800ca28:	f010 f832 	bl	801ca90 <vTaskDelay>
			continue;
 800ca2c:	e003      	b.n	800ca36 <motor_calib_task+0x82>
			}
		}
		vTaskDelay(10000);
 800ca2e:	f242 7010 	movw	r0, #10000	; 0x2710
 800ca32:	f010 f82d 	bl	801ca90 <vTaskDelay>
		error = 0;
 800ca36:	e7e5      	b.n	800ca04 <motor_calib_task+0x50>
 800ca38:	20000434 	.word	0x20000434
 800ca3c:	2000045c 	.word	0x2000045c
 800ca40:	200004e4 	.word	0x200004e4
 800ca44:	200032f4 	.word	0x200032f4

0800ca48 <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 800ca48:	b580      	push	{r7, lr}
 800ca4a:	b08e      	sub	sp, #56	; 0x38
 800ca4c:	af00      	add	r7, sp, #0
 800ca4e:	ed87 0b04 	vstr	d0, [r7, #16]
 800ca52:	ed87 1b02 	vstr	d1, [r7, #8]
 800ca56:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 800ca58:	687b      	ldr	r3, [r7, #4]
 800ca5a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ca5c:	687b      	ldr	r3, [r7, #4]
 800ca5e:	62da      	str	r2, [r3, #44]	; 0x2c
	pid->last_time[0] = get_microseconds();
 800ca60:	f7f5 fc06 	bl	8002270 <get_microseconds>
 800ca64:	4602      	mov	r2, r0
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	629a      	str	r2, [r3, #40]	; 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 800ca6a:	2301      	movs	r3, #1
 800ca6c:	637b      	str	r3, [r7, #52]	; 0x34
	double Pout = 0;
 800ca6e:	f04f 0200 	mov.w	r2, #0
 800ca72:	f04f 0300 	mov.w	r3, #0
 800ca76:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	double Iout = 0;
 800ca7a:	f04f 0200 	mov.w	r2, #0
 800ca7e:	f04f 0300 	mov.w	r3, #0
 800ca82:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double Dout = 0;
 800ca86:	f04f 0200 	mov.w	r2, #0
 800ca8a:	f04f 0300 	mov.w	r3, #0
 800ca8e:	e9c7 2306 	strd	r2, r3, [r7, #24]

	pid->error[1] = pid->error[0];
 800ca92:	687b      	ldr	r3, [r7, #4]
 800ca94:	68da      	ldr	r2, [r3, #12]
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 800ca9a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ca9e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800caa2:	f7f3 fbf1 	bl	8000288 <__aeabi_dsub>
 800caa6:	4602      	mov	r2, r0
 800caa8:	460b      	mov	r3, r1
 800caaa:	4610      	mov	r0, r2
 800caac:	4619      	mov	r1, r3
 800caae:	f7f4 f89b 	bl	8000be8 <__aeabi_d2f>
 800cab2:	4602      	mov	r2, r0
 800cab4:	687b      	ldr	r3, [r7, #4]
 800cab6:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 800cab8:	687b      	ldr	r3, [r7, #4]
 800caba:	ed93 7a03 	vldr	s14, [r3, #12]
 800cabe:	687b      	ldr	r3, [r7, #4]
 800cac0:	edd3 7a00 	vldr	s15, [r3]
 800cac4:	ee27 7a27 	vmul.f32	s14, s14, s15
 800cac8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800caca:	ee07 3a90 	vmov	s15, r3
 800cace:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cad2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800cad6:	ee17 0a90 	vmov	r0, s15
 800cada:	f7f3 fd35 	bl	8000548 <__aeabi_f2d>
 800cade:	4602      	mov	r2, r0
 800cae0:	460b      	mov	r3, r1
 800cae2:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 800cae6:	687b      	ldr	r3, [r7, #4]
 800cae8:	ed93 7a03 	vldr	s14, [r3, #12]
 800caec:	687b      	ldr	r3, [r7, #4]
 800caee:	edd3 7a04 	vldr	s15, [r3, #16]
 800caf2:	ee37 7a67 	vsub.f32	s14, s14, s15
 800caf6:	687b      	ldr	r3, [r7, #4]
 800caf8:	edd3 7a02 	vldr	s15, [r3, #8]
 800cafc:	ee27 7a27 	vmul.f32	s14, s14, s15
 800cb00:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cb02:	ee07 3a90 	vmov	s15, r3
 800cb06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cb0a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800cb0e:	ee17 0a90 	vmov	r0, s15
 800cb12:	f7f3 fd19 	bl	8000548 <__aeabi_f2d>
 800cb16:	4602      	mov	r2, r0
 800cb18:	460b      	mov	r3, r1
 800cb1a:	e9c7 2306 	strd	r2, r3, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	ed93 7a05 	vldr	s14, [r3, #20]
 800cb24:	687b      	ldr	r3, [r7, #4]
 800cb26:	edd3 6a03 	vldr	s13, [r3, #12]
 800cb2a:	687b      	ldr	r3, [r7, #4]
 800cb2c:	edd3 7a01 	vldr	s15, [r3, #4]
 800cb30:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800cb34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cb36:	ee07 3a90 	vmov	s15, r3
 800cb3a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cb3e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800cb42:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 800cb4c:	687b      	ldr	r3, [r7, #4]
 800cb4e:	f103 0214 	add.w	r2, r3, #20
 800cb52:	687b      	ldr	r3, [r7, #4]
 800cb54:	edd3 7a06 	vldr	s15, [r3, #24]
 800cb58:	eddf 0a1b 	vldr	s1, [pc, #108]	; 800cbc8 <speed_pid+0x180>
 800cb5c:	eeb0 0a67 	vmov.f32	s0, s15
 800cb60:	4610      	mov	r0, r2
 800cb62:	f000 fa8e 	bl	800d082 <float_minmax>
	Iout = pid->integral;
 800cb66:	687b      	ldr	r3, [r7, #4]
 800cb68:	695b      	ldr	r3, [r3, #20]
 800cb6a:	4618      	mov	r0, r3
 800cb6c:	f7f3 fcec 	bl	8000548 <__aeabi_f2d>
 800cb70:	4602      	mov	r2, r0
 800cb72:	460b      	mov	r3, r1
 800cb74:	e9c7 2308 	strd	r2, r3, [r7, #32]
	pid->output = Pout + Iout + Dout;
 800cb78:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800cb7c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800cb80:	f7f3 fb84 	bl	800028c <__adddf3>
 800cb84:	4602      	mov	r2, r0
 800cb86:	460b      	mov	r3, r1
 800cb88:	4610      	mov	r0, r2
 800cb8a:	4619      	mov	r1, r3
 800cb8c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800cb90:	f7f3 fb7c 	bl	800028c <__adddf3>
 800cb94:	4602      	mov	r2, r0
 800cb96:	460b      	mov	r3, r1
 800cb98:	4610      	mov	r0, r2
 800cb9a:	4619      	mov	r1, r3
 800cb9c:	f7f4 f824 	bl	8000be8 <__aeabi_d2f>
 800cba0:	4602      	mov	r2, r0
 800cba2:	687b      	ldr	r3, [r7, #4]
 800cba4:	621a      	str	r2, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	f103 0220 	add.w	r2, r3, #32
 800cbac:	687b      	ldr	r3, [r7, #4]
 800cbae:	edd3 7a07 	vldr	s15, [r3, #28]
 800cbb2:	eddf 0a05 	vldr	s1, [pc, #20]	; 800cbc8 <speed_pid+0x180>
 800cbb6:	eeb0 0a67 	vmov.f32	s0, s15
 800cbba:	4610      	mov	r0, r2
 800cbbc:	f000 fa61 	bl	800d082 <float_minmax>
}
 800cbc0:	bf00      	nop
 800cbc2:	3738      	adds	r7, #56	; 0x38
 800cbc4:	46bd      	mov	sp, r7
 800cbc6:	bd80      	pop	{r7, pc}
 800cbc8:	00000000 	.word	0x00000000

0800cbcc <motor_send_RTOS>:
 * @param id_two	id number of second motor to send can message to
 * @param id_three	id number of third motor to send can message to
 * @param id_four	id number of fourth motor to send can message to
 */

void motor_send_RTOS(void *argument){
 800cbcc:	b580      	push	{r7, lr}
 800cbce:	b086      	sub	sp, #24
 800cbd0:	af02      	add	r7, sp, #8
 800cbd2:	6078      	str	r0, [r7, #4]
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800cbd4:	f010 f8ac 	bl	801cd30 <xTaskGetTickCount>
 800cbd8:	4603      	mov	r3, r0
 800cbda:	60fb      	str	r3, [r7, #12]
	while (1)
	{
		motor_send_can(can_motors, Leftwheel_MOTOR_ID, Rightwheel_MOTOR_ID, 0, 0);
 800cbdc:	2300      	movs	r3, #0
 800cbde:	9300      	str	r3, [sp, #0]
 800cbe0:	2300      	movs	r3, #0
 800cbe2:	2202      	movs	r2, #2
 800cbe4:	2101      	movs	r1, #1
 800cbe6:	4805      	ldr	r0, [pc, #20]	; (800cbfc <motor_send_RTOS+0x30>)
 800cbe8:	f000 f80a 	bl	800cc00 <motor_send_can>
		// joint_motor_send_can(&leg_move, L1_MOTOR_ID, L2_MOTOR_ID, R1_MOTOR_ID, R2_MOTOR_ID);
		vTaskDelayUntil(&xLastWakeTime, 4);
 800cbec:	f107 030c 	add.w	r3, r7, #12
 800cbf0:	2104      	movs	r1, #4
 800cbf2:	4618      	mov	r0, r3
 800cbf4:	f00f fece 	bl	801c994 <vTaskDelayUntil>
		motor_send_can(can_motors, Leftwheel_MOTOR_ID, Rightwheel_MOTOR_ID, 0, 0);
 800cbf8:	e7f0      	b.n	800cbdc <motor_send_RTOS+0x10>
 800cbfa:	bf00      	nop
 800cbfc:	200018a8 	.word	0x200018a8

0800cc00 <motor_send_can>:
	}
}

void motor_send_can(motor_data_t motor_all[], uint8_t id_one, uint8_t id_two, uint8_t id_three, uint8_t id_four) {
 800cc00:	b580      	push	{r7, lr}
 800cc02:	b08e      	sub	sp, #56	; 0x38
 800cc04:	af00      	add	r7, sp, #0
 800cc06:	6078      	str	r0, [r7, #4]
 800cc08:	4608      	mov	r0, r1
 800cc0a:	4611      	mov	r1, r2
 800cc0c:	461a      	mov	r2, r3
 800cc0e:	4603      	mov	r3, r0
 800cc10:	70fb      	strb	r3, [r7, #3]
 800cc12:	460b      	mov	r3, r1
 800cc14:	70bb      	strb	r3, [r7, #2]
 800cc16:	4613      	mov	r3, r2
 800cc18:	707b      	strb	r3, [r7, #1]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	uint32_t temp_checker = 0;
 800cc1a:	2300      	movs	r3, #0
 800cc1c:	637b      	str	r3, [r7, #52]	; 0x34
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 800cc1e:	2300      	movs	r3, #0
 800cc20:	623b      	str	r3, [r7, #32]
	CAN_tx_message.RTR = CAN_RTR_DATA;
 800cc22:	2300      	movs	r3, #0
 800cc24:	627b      	str	r3, [r7, #36]	; 0x24
	CAN_tx_message.DLC = 0x08;
 800cc26:	2308      	movs	r3, #8
 800cc28:	62bb      	str	r3, [r7, #40]	; 0x28
	if (id_one < 25 && id_one > 0) {
 800cc2a:	78fb      	ldrb	r3, [r7, #3]
 800cc2c:	2b18      	cmp	r3, #24
 800cc2e:	d80b      	bhi.n	800cc48 <motor_send_can+0x48>
 800cc30:	78fb      	ldrb	r3, [r7, #3]
 800cc32:	2b00      	cmp	r3, #0
 800cc34:	d008      	beq.n	800cc48 <motor_send_can+0x48>
		temp_checker = temp_checker | 1 << (id_one - 1);
 800cc36:	78fb      	ldrb	r3, [r7, #3]
 800cc38:	3b01      	subs	r3, #1
 800cc3a:	2201      	movs	r2, #1
 800cc3c:	fa02 f303 	lsl.w	r3, r2, r3
 800cc40:	461a      	mov	r2, r3
 800cc42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc44:	4313      	orrs	r3, r2
 800cc46:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_two < 25 && id_two > 0) {
 800cc48:	78bb      	ldrb	r3, [r7, #2]
 800cc4a:	2b18      	cmp	r3, #24
 800cc4c:	d80b      	bhi.n	800cc66 <motor_send_can+0x66>
 800cc4e:	78bb      	ldrb	r3, [r7, #2]
 800cc50:	2b00      	cmp	r3, #0
 800cc52:	d008      	beq.n	800cc66 <motor_send_can+0x66>
		temp_checker = temp_checker | 1 << (id_two - 1);
 800cc54:	78bb      	ldrb	r3, [r7, #2]
 800cc56:	3b01      	subs	r3, #1
 800cc58:	2201      	movs	r2, #1
 800cc5a:	fa02 f303 	lsl.w	r3, r2, r3
 800cc5e:	461a      	mov	r2, r3
 800cc60:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc62:	4313      	orrs	r3, r2
 800cc64:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_three < 25 && id_three > 0) {
 800cc66:	787b      	ldrb	r3, [r7, #1]
 800cc68:	2b18      	cmp	r3, #24
 800cc6a:	d80b      	bhi.n	800cc84 <motor_send_can+0x84>
 800cc6c:	787b      	ldrb	r3, [r7, #1]
 800cc6e:	2b00      	cmp	r3, #0
 800cc70:	d008      	beq.n	800cc84 <motor_send_can+0x84>
		temp_checker = temp_checker | 1 << (id_three - 1);
 800cc72:	787b      	ldrb	r3, [r7, #1]
 800cc74:	3b01      	subs	r3, #1
 800cc76:	2201      	movs	r2, #1
 800cc78:	fa02 f303 	lsl.w	r3, r2, r3
 800cc7c:	461a      	mov	r2, r3
 800cc7e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc80:	4313      	orrs	r3, r2
 800cc82:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_four < 25 && id_four > 0) {
 800cc84:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800cc88:	2b18      	cmp	r3, #24
 800cc8a:	d80d      	bhi.n	800cca8 <motor_send_can+0xa8>
 800cc8c:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800cc90:	2b00      	cmp	r3, #0
 800cc92:	d009      	beq.n	800cca8 <motor_send_can+0xa8>
		temp_checker = temp_checker | 1 << (id_four - 1);
 800cc94:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800cc98:	3b01      	subs	r3, #1
 800cc9a:	2201      	movs	r2, #1
 800cc9c:	fa02 f303 	lsl.w	r3, r2, r3
 800cca0:	461a      	mov	r2, r3
 800cca2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cca4:	4313      	orrs	r3, r2
 800cca6:	637b      	str	r3, [r7, #52]	; 0x34
	}

	if (temp_checker & 0x00000F) {
 800cca8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ccaa:	f003 030f 	and.w	r3, r3, #15
 800ccae:	2b00      	cmp	r3, #0
 800ccb0:	d054      	beq.n	800cd5c <motor_send_can+0x15c>
		CAN_tx_message.StdId = 0x200;
 800ccb2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ccb6:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x0].rpm_pid.output;
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ccbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ccc2:	ee17 3a90 	vmov	r3, s15
 800ccc6:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800ccc8:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cccc:	121b      	asrs	r3, r3, #8
 800ccce:	b21b      	sxth	r3, r3
 800ccd0:	b2db      	uxtb	r3, r3
 800ccd2:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800ccd4:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ccd6:	b2db      	uxtb	r3, r3
 800ccd8:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x1].rpm_pid.output;
 800ccda:	687b      	ldr	r3, [r7, #4]
 800ccdc:	33f0      	adds	r3, #240	; 0xf0
 800ccde:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cce2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cce6:	ee17 3a90 	vmov	r3, s15
 800ccea:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800ccec:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ccf0:	121b      	asrs	r3, r3, #8
 800ccf2:	b21b      	sxth	r3, r3
 800ccf4:	b2db      	uxtb	r3, r3
 800ccf6:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800ccf8:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ccfa:	b2db      	uxtb	r3, r3
 800ccfc:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x2].rpm_pid.output;
 800ccfe:	687b      	ldr	r3, [r7, #4]
 800cd00:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 800cd04:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cd08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd0c:	ee17 3a90 	vmov	r3, s15
 800cd10:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cd12:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cd16:	121b      	asrs	r3, r3, #8
 800cd18:	b21b      	sxth	r3, r3
 800cd1a:	b2db      	uxtb	r3, r3
 800cd1c:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800cd1e:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cd20:	b2db      	uxtb	r3, r3
 800cd22:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x3].rpm_pid.output;
 800cd24:	687b      	ldr	r3, [r7, #4]
 800cd26:	f503 7334 	add.w	r3, r3, #720	; 0x2d0
 800cd2a:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cd2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd32:	ee17 3a90 	vmov	r3, s15
 800cd36:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800cd38:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cd3c:	121b      	asrs	r3, r3, #8
 800cd3e:	b21b      	sxth	r3, r3
 800cd40:	b2db      	uxtb	r3, r3
 800cd42:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800cd44:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cd46:	b2db      	uxtb	r3, r3
 800cd48:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800cd4a:	f107 030c 	add.w	r3, r7, #12
 800cd4e:	f107 0210 	add.w	r2, r7, #16
 800cd52:	f107 0118 	add.w	r1, r7, #24
 800cd56:	48bf      	ldr	r0, [pc, #764]	; (800d054 <motor_send_can+0x454>)
 800cd58:	f003 f8a2 	bl	800fea0 <HAL_CAN_AddTxMessage>
//	 	temp_converter = motor_all[0x7].rpm_pid.output;
//	 	CAN_send_data[6] = temp_converter >> 8;
//	 	CAN_send_data[7] = temp_converter;
//	 	HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
//	 }
	if (temp_checker & 0x000F00) {
 800cd5c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cd5e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800cd62:	2b00      	cmp	r3, #0
 800cd64:	d057      	beq.n	800ce16 <motor_send_can+0x216>
		CAN_tx_message.StdId = 0x2FF;
 800cd66:	f240 23ff 	movw	r3, #767	; 0x2ff
 800cd6a:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x8].rpm_pid.output;
 800cd6c:	687b      	ldr	r3, [r7, #4]
 800cd6e:	f503 63f0 	add.w	r3, r3, #1920	; 0x780
 800cd72:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cd76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd7a:	ee17 3a90 	vmov	r3, s15
 800cd7e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800cd80:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cd84:	121b      	asrs	r3, r3, #8
 800cd86:	b21b      	sxth	r3, r3
 800cd88:	b2db      	uxtb	r3, r3
 800cd8a:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800cd8c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cd8e:	b2db      	uxtb	r3, r3
 800cd90:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x9].rpm_pid.output;
 800cd92:	687b      	ldr	r3, [r7, #4]
 800cd94:	f503 6307 	add.w	r3, r3, #2160	; 0x870
 800cd98:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cd9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cda0:	ee17 3a90 	vmov	r3, s15
 800cda4:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800cda6:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cdaa:	121b      	asrs	r3, r3, #8
 800cdac:	b21b      	sxth	r3, r3
 800cdae:	b2db      	uxtb	r3, r3
 800cdb0:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800cdb2:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cdb4:	b2db      	uxtb	r3, r3
 800cdb6:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0xA].rpm_pid.output;
 800cdb8:	687b      	ldr	r3, [r7, #4]
 800cdba:	f503 6316 	add.w	r3, r3, #2400	; 0x960
 800cdbe:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cdc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cdc6:	ee17 3a90 	vmov	r3, s15
 800cdca:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cdcc:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cdd0:	121b      	asrs	r3, r3, #8
 800cdd2:	b21b      	sxth	r3, r3
 800cdd4:	b2db      	uxtb	r3, r3
 800cdd6:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800cdd8:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cdda:	b2db      	uxtb	r3, r3
 800cddc:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0xB].rpm_pid.output;
 800cdde:	687b      	ldr	r3, [r7, #4]
 800cde0:	f503 6325 	add.w	r3, r3, #2640	; 0xa50
 800cde4:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cde8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cdec:	ee17 3a90 	vmov	r3, s15
 800cdf0:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800cdf2:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cdf6:	121b      	asrs	r3, r3, #8
 800cdf8:	b21b      	sxth	r3, r3
 800cdfa:	b2db      	uxtb	r3, r3
 800cdfc:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800cdfe:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce00:	b2db      	uxtb	r3, r3
 800ce02:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800ce04:	f107 030c 	add.w	r3, r7, #12
 800ce08:	f107 0210 	add.w	r2, r7, #16
 800ce0c:	f107 0118 	add.w	r1, r7, #24
 800ce10:	4890      	ldr	r0, [pc, #576]	; (800d054 <motor_send_can+0x454>)
 800ce12:	f003 f845 	bl	800fea0 <HAL_CAN_AddTxMessage>
	}
#ifndef CHASSIS_MCU
	if (temp_checker & 0x00F000) {
 800ce16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ce18:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800ce1c:	2b00      	cmp	r3, #0
 800ce1e:	d057      	beq.n	800ced0 <motor_send_can+0x2d0>
		CAN_tx_message.StdId = 0x200;
 800ce20:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ce24:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x0 + 12].rpm_pid.output;
 800ce26:	687b      	ldr	r3, [r7, #4]
 800ce28:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800ce2c:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce34:	ee17 3a90 	vmov	r3, s15
 800ce38:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800ce3a:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce3e:	121b      	asrs	r3, r3, #8
 800ce40:	b21b      	sxth	r3, r3
 800ce42:	b2db      	uxtb	r3, r3
 800ce44:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800ce46:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce48:	b2db      	uxtb	r3, r3
 800ce4a:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x1 + 12].rpm_pid.output;
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	f503 6343 	add.w	r3, r3, #3120	; 0xc30
 800ce52:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce5a:	ee17 3a90 	vmov	r3, s15
 800ce5e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800ce60:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce64:	121b      	asrs	r3, r3, #8
 800ce66:	b21b      	sxth	r3, r3
 800ce68:	b2db      	uxtb	r3, r3
 800ce6a:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800ce6c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce6e:	b2db      	uxtb	r3, r3
 800ce70:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x2 + 12].rpm_pid.output;
 800ce72:	687b      	ldr	r3, [r7, #4]
 800ce74:	f503 6352 	add.w	r3, r3, #3360	; 0xd20
 800ce78:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce80:	ee17 3a90 	vmov	r3, s15
 800ce84:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800ce86:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce8a:	121b      	asrs	r3, r3, #8
 800ce8c:	b21b      	sxth	r3, r3
 800ce8e:	b2db      	uxtb	r3, r3
 800ce90:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800ce92:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce94:	b2db      	uxtb	r3, r3
 800ce96:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x3 + 12].rpm_pid.output;
 800ce98:	687b      	ldr	r3, [r7, #4]
 800ce9a:	f503 6361 	add.w	r3, r3, #3600	; 0xe10
 800ce9e:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cea2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cea6:	ee17 3a90 	vmov	r3, s15
 800ceaa:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800ceac:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ceb0:	121b      	asrs	r3, r3, #8
 800ceb2:	b21b      	sxth	r3, r3
 800ceb4:	b2db      	uxtb	r3, r3
 800ceb6:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800ceb8:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ceba:	b2db      	uxtb	r3, r3
 800cebc:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800cebe:	f107 030c 	add.w	r3, r7, #12
 800cec2:	f107 0210 	add.w	r2, r7, #16
 800cec6:	f107 0118 	add.w	r1, r7, #24
 800ceca:	4863      	ldr	r0, [pc, #396]	; (800d058 <motor_send_can+0x458>)
 800cecc:	f002 ffe8 	bl	800fea0 <HAL_CAN_AddTxMessage>
	}
	if (temp_checker & 0x0F0000) {
 800ced0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ced2:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 800ced6:	2b00      	cmp	r3, #0
 800ced8:	d058      	beq.n	800cf8c <motor_send_can+0x38c>
		CAN_tx_message.StdId = 0x1FF;
 800ceda:	f240 13ff 	movw	r3, #511	; 0x1ff
 800cede:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x4 + 12].rpm_pid.output;
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	f503 6370 	add.w	r3, r3, #3840	; 0xf00
 800cee6:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ceea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ceee:	ee17 3a90 	vmov	r3, s15
 800cef2:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800cef4:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cef8:	121b      	asrs	r3, r3, #8
 800cefa:	b21b      	sxth	r3, r3
 800cefc:	b2db      	uxtb	r3, r3
 800cefe:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800cf00:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf02:	b2db      	uxtb	r3, r3
 800cf04:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x5 + 12].rpm_pid.output;
 800cf06:	687b      	ldr	r3, [r7, #4]
 800cf08:	f503 637f 	add.w	r3, r3, #4080	; 0xff0
 800cf0c:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf14:	ee17 3a90 	vmov	r3, s15
 800cf18:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800cf1a:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf1e:	121b      	asrs	r3, r3, #8
 800cf20:	b21b      	sxth	r3, r3
 800cf22:	b2db      	uxtb	r3, r3
 800cf24:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800cf26:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf28:	b2db      	uxtb	r3, r3
 800cf2a:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x6 + 12].rpm_pid.output;
 800cf2c:	687b      	ldr	r3, [r7, #4]
 800cf2e:	f503 5387 	add.w	r3, r3, #4320	; 0x10e0
 800cf32:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf3a:	ee17 3a90 	vmov	r3, s15
 800cf3e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cf40:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf44:	121b      	asrs	r3, r3, #8
 800cf46:	b21b      	sxth	r3, r3
 800cf48:	b2db      	uxtb	r3, r3
 800cf4a:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800cf4c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf4e:	b2db      	uxtb	r3, r3
 800cf50:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x7 + 12].rpm_pid.output;
 800cf52:	687b      	ldr	r3, [r7, #4]
 800cf54:	f503 538e 	add.w	r3, r3, #4544	; 0x11c0
 800cf58:	3310      	adds	r3, #16
 800cf5a:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf62:	ee17 3a90 	vmov	r3, s15
 800cf66:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800cf68:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf6c:	121b      	asrs	r3, r3, #8
 800cf6e:	b21b      	sxth	r3, r3
 800cf70:	b2db      	uxtb	r3, r3
 800cf72:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800cf74:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf76:	b2db      	uxtb	r3, r3
 800cf78:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800cf7a:	f107 030c 	add.w	r3, r7, #12
 800cf7e:	f107 0210 	add.w	r2, r7, #16
 800cf82:	f107 0118 	add.w	r1, r7, #24
 800cf86:	4834      	ldr	r0, [pc, #208]	; (800d058 <motor_send_can+0x458>)
 800cf88:	f002 ff8a 	bl	800fea0 <HAL_CAN_AddTxMessage>
	}
	if (temp_checker & 0xF00000) {
 800cf8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cf8e:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800cf92:	2b00      	cmp	r3, #0
 800cf94:	d059      	beq.n	800d04a <motor_send_can+0x44a>
		CAN_tx_message.StdId = 0x2FF;
 800cf96:	f240 23ff 	movw	r3, #767	; 0x2ff
 800cf9a:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x8 + 12].rpm_pid.output;
 800cf9c:	687b      	ldr	r3, [r7, #4]
 800cf9e:	f503 5396 	add.w	r3, r3, #4800	; 0x12c0
 800cfa2:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cfa6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cfaa:	ee17 3a90 	vmov	r3, s15
 800cfae:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800cfb0:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cfb4:	121b      	asrs	r3, r3, #8
 800cfb6:	b21b      	sxth	r3, r3
 800cfb8:	b2db      	uxtb	r3, r3
 800cfba:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800cfbc:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cfbe:	b2db      	uxtb	r3, r3
 800cfc0:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x9 + 12].rpm_pid.output;
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	f503 539d 	add.w	r3, r3, #5024	; 0x13a0
 800cfc8:	3310      	adds	r3, #16
 800cfca:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cfce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cfd2:	ee17 3a90 	vmov	r3, s15
 800cfd6:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800cfd8:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cfdc:	121b      	asrs	r3, r3, #8
 800cfde:	b21b      	sxth	r3, r3
 800cfe0:	b2db      	uxtb	r3, r3
 800cfe2:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800cfe4:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cfe6:	b2db      	uxtb	r3, r3
 800cfe8:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0xA + 12].rpm_pid.output;
 800cfea:	687b      	ldr	r3, [r7, #4]
 800cfec:	f503 53a5 	add.w	r3, r3, #5280	; 0x14a0
 800cff0:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cff4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cff8:	ee17 3a90 	vmov	r3, s15
 800cffc:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cffe:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d002:	121b      	asrs	r3, r3, #8
 800d004:	b21b      	sxth	r3, r3
 800d006:	b2db      	uxtb	r3, r3
 800d008:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800d00a:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d00c:	b2db      	uxtb	r3, r3
 800d00e:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0xB + 12].rpm_pid.output;
 800d010:	687b      	ldr	r3, [r7, #4]
 800d012:	f503 53ac 	add.w	r3, r3, #5504	; 0x1580
 800d016:	3310      	adds	r3, #16
 800d018:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d01c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d020:	ee17 3a90 	vmov	r3, s15
 800d024:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800d026:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d02a:	121b      	asrs	r3, r3, #8
 800d02c:	b21b      	sxth	r3, r3
 800d02e:	b2db      	uxtb	r3, r3
 800d030:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800d032:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d034:	b2db      	uxtb	r3, r3
 800d036:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800d038:	f107 030c 	add.w	r3, r7, #12
 800d03c:	f107 0210 	add.w	r2, r7, #16
 800d040:	f107 0118 	add.w	r1, r7, #24
 800d044:	4804      	ldr	r0, [pc, #16]	; (800d058 <motor_send_can+0x458>)
 800d046:	f002 ff2b 	bl	800fea0 <HAL_CAN_AddTxMessage>
	}
#endif
}
 800d04a:	bf00      	nop
 800d04c:	3738      	adds	r7, #56	; 0x38
 800d04e:	46bd      	mov	sp, r7
 800d050:	bd80      	pop	{r7, pc}
 800d052:	bf00      	nop
 800d054:	20000434 	.word	0x20000434
 800d058:	2000045c 	.word	0x2000045c

0800d05c <kill_can>:

void kill_can() {
 800d05c:	b480      	push	{r7}
 800d05e:	b089      	sub	sp, #36	; 0x24
 800d060:	af00      	add	r7, sp, #0

	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8] = { 0, };
 800d062:	2300      	movs	r3, #0
 800d064:	603b      	str	r3, [r7, #0]
 800d066:	2300      	movs	r3, #0
 800d068:	607b      	str	r3, [r7, #4]
	uint32_t send_mail_box;
	CAN_tx_message.IDE = CAN_ID_STD;
 800d06a:	2300      	movs	r3, #0
 800d06c:	613b      	str	r3, [r7, #16]
	CAN_tx_message.RTR = CAN_RTR_DATA;
 800d06e:	2300      	movs	r3, #0
 800d070:	617b      	str	r3, [r7, #20]
	CAN_tx_message.DLC = 0x08;
 800d072:	2308      	movs	r3, #8
 800d074:	61bb      	str	r3, [r7, #24]
//	HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
//	CAN_tx_message.StdId = 0x2FF;
//	HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
//
//#endif
}
 800d076:	bf00      	nop
 800d078:	3724      	adds	r7, #36	; 0x24
 800d07a:	46bd      	mov	sp, r7
 800d07c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d080:	4770      	bx	lr

0800d082 <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 800d082:	b480      	push	{r7}
 800d084:	b085      	sub	sp, #20
 800d086:	af00      	add	r7, sp, #0
 800d088:	60f8      	str	r0, [r7, #12]
 800d08a:	ed87 0a02 	vstr	s0, [r7, #8]
 800d08e:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 800d092:	68fb      	ldr	r3, [r7, #12]
 800d094:	edd3 7a00 	vldr	s15, [r3]
 800d098:	ed97 7a02 	vldr	s14, [r7, #8]
 800d09c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d0a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d0a4:	d503      	bpl.n	800d0ae <float_minmax+0x2c>
		*motor_in = motor_max;
 800d0a6:	68fb      	ldr	r3, [r7, #12]
 800d0a8:	68ba      	ldr	r2, [r7, #8]
 800d0aa:	601a      	str	r2, [r3, #0]
 800d0ac:	e012      	b.n	800d0d4 <float_minmax+0x52>
	} else if (*motor_in < -motor_max) {
 800d0ae:	68fb      	ldr	r3, [r7, #12]
 800d0b0:	ed93 7a00 	vldr	s14, [r3]
 800d0b4:	edd7 7a02 	vldr	s15, [r7, #8]
 800d0b8:	eef1 7a67 	vneg.f32	s15, s15
 800d0bc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d0c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d0c4:	d506      	bpl.n	800d0d4 <float_minmax+0x52>
		*motor_in = -motor_max;
 800d0c6:	edd7 7a02 	vldr	s15, [r7, #8]
 800d0ca:	eef1 7a67 	vneg.f32	s15, s15
 800d0ce:	68fb      	ldr	r3, [r7, #12]
 800d0d0:	edc3 7a00 	vstr	s15, [r3]
	}

	if (fabs(*motor_in) < motor_min) {
 800d0d4:	68fb      	ldr	r3, [r7, #12]
 800d0d6:	edd3 7a00 	vldr	s15, [r3]
 800d0da:	eef0 7ae7 	vabs.f32	s15, s15
 800d0de:	ed97 7a01 	vldr	s14, [r7, #4]
 800d0e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d0e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d0ea:	dc00      	bgt.n	800d0ee <float_minmax+0x6c>
		*motor_in = 0;
	}

}
 800d0ec:	e003      	b.n	800d0f6 <float_minmax+0x74>
		*motor_in = 0;
 800d0ee:	68fb      	ldr	r3, [r7, #12]
 800d0f0:	f04f 0200 	mov.w	r2, #0
 800d0f4:	601a      	str	r2, [r3, #0]
}
 800d0f6:	bf00      	nop
 800d0f8:	3714      	adds	r7, #20
 800d0fa:	46bd      	mov	sp, r7
 800d0fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d100:	4770      	bx	lr
 800d102:	0000      	movs	r0, r0
 800d104:	0000      	movs	r0, r0
	...

0800d108 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800d108:	b5b0      	push	{r4, r5, r7, lr}
 800d10a:	b08e      	sub	sp, #56	; 0x38
 800d10c:	af00      	add	r7, sp, #0
 800d10e:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800d110:	f04f 0200 	mov.w	r2, #0
 800d114:	f04f 0300 	mov.w	r3, #0
 800d118:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
	double endtime = 0;
 800d11c:	f04f 0200 	mov.w	r2, #0
 800d120:	f04f 0300 	mov.w	r3, #0
 800d124:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	double dt;
	vTaskDelay(5);
 800d128:	2005      	movs	r0, #5
 800d12a:	f00f fcb1 	bl	801ca90 <vTaskDelay>
	double leftWheel_offset = (double)can_motors[1].raw_data.angle[0];
 800d12e:	4b88      	ldr	r3, [pc, #544]	; (800d350 <motors_process_task+0x248>)
 800d130:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	; 0xf4
 800d134:	4618      	mov	r0, r3
 800d136:	f7f3 f9f5 	bl	8000524 <__aeabi_i2d>
 800d13a:	4602      	mov	r2, r0
 800d13c:	460b      	mov	r3, r1
 800d13e:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)can_motors[0].raw_data.angle[0];
 800d142:	4b83      	ldr	r3, [pc, #524]	; (800d350 <motors_process_task+0x248>)
 800d144:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800d148:	4618      	mov	r0, r3
 800d14a:	f7f3 f9eb 	bl	8000524 <__aeabi_i2d>
 800d14e:	4602      	mov	r2, r0
 800d150:	460b      	mov	r3, r1
 800d152:	e9c7 2306 	strd	r2, r3, [r7, #24]
	can_motors[1].rpm_pid.kp = 5000;
 800d156:	4b7e      	ldr	r3, [pc, #504]	; (800d350 <motors_process_task+0x248>)
 800d158:	4a7e      	ldr	r2, [pc, #504]	; (800d354 <motors_process_task+0x24c>)
 800d15a:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
	can_motors[0].rpm_pid.kp = 5000;
 800d15e:	4b7c      	ldr	r3, [pc, #496]	; (800d350 <motors_process_task+0x248>)
 800d160:	4a7c      	ldr	r2, [pc, #496]	; (800d354 <motors_process_task+0x24c>)
 800d162:	639a      	str	r2, [r3, #56]	; 0x38
	can_motors[1].rpm_pid.ki = 0;
 800d164:	4b7a      	ldr	r3, [pc, #488]	; (800d350 <motors_process_task+0x248>)
 800d166:	f04f 0200 	mov.w	r2, #0
 800d16a:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
	can_motors[0].rpm_pid.ki = 0;
 800d16e:	4b78      	ldr	r3, [pc, #480]	; (800d350 <motors_process_task+0x248>)
 800d170:	f04f 0200 	mov.w	r2, #0
 800d174:	63da      	str	r2, [r3, #60]	; 0x3c
	can_motors[1].rpm_pid.kd = 0;
 800d176:	4b76      	ldr	r3, [pc, #472]	; (800d350 <motors_process_task+0x248>)
 800d178:	f04f 0200 	mov.w	r2, #0
 800d17c:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
	can_motors[0].rpm_pid.kd = 0;
 800d180:	4b73      	ldr	r3, [pc, #460]	; (800d350 <motors_process_task+0x248>)
 800d182:	f04f 0200 	mov.w	r2, #0
 800d186:	641a      	str	r2, [r3, #64]	; 0x40
	can_motors[1].rpm_pid.max_out = 10000;
 800d188:	4b71      	ldr	r3, [pc, #452]	; (800d350 <motors_process_task+0x248>)
 800d18a:	4a73      	ldr	r2, [pc, #460]	; (800d358 <motors_process_task+0x250>)
 800d18c:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	can_motors[0].rpm_pid.max_out = 10000;
 800d190:	4b6f      	ldr	r3, [pc, #444]	; (800d350 <motors_process_task+0x248>)
 800d192:	4a71      	ldr	r2, [pc, #452]	; (800d358 <motors_process_task+0x250>)
 800d194:	655a      	str	r2, [r3, #84]	; 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800d196:	f7f5 f86b 	bl	8002270 <get_microseconds>
 800d19a:	4603      	mov	r3, r0
 800d19c:	4618      	mov	r0, r3
 800d19e:	f7f3 f9b1 	bl	8000504 <__aeabi_ui2d>
 800d1a2:	4602      	mov	r2, r0
 800d1a4:	460b      	mov	r3, r1
 800d1a6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
        dt = endtime - starttime;
 800d1aa:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800d1ae:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800d1b2:	f7f3 f869 	bl	8000288 <__aeabi_dsub>
 800d1b6:	4602      	mov	r2, r0
 800d1b8:	460b      	mov	r3, r1
 800d1ba:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800d1be:	f00f fdb7 	bl	801cd30 <xTaskGetTickCount>
 800d1c2:	4603      	mov	r3, r0
 800d1c4:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(can_motors); // Pass the array directly
 800d1c6:	4862      	ldr	r0, [pc, #392]	; (800d350 <motors_process_task+0x248>)
 800d1c8:	f000 f8e2 	bl	800d390 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&can_motors[8], 3.62+PI, -1);
 800d1cc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d1d0:	ed9f 0a62 	vldr	s0, [pc, #392]	; 800d35c <motors_process_task+0x254>
 800d1d4:	4862      	ldr	r0, [pc, #392]	; (800d360 <motors_process_task+0x258>)
 800d1d6:	f000 f963 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[9], 3.62, -1);
 800d1da:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d1de:	ed9f 0a61 	vldr	s0, [pc, #388]	; 800d364 <motors_process_task+0x25c>
 800d1e2:	4861      	ldr	r0, [pc, #388]	; (800d368 <motors_process_task+0x260>)
 800d1e4:	f000 f95c 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[16], -0.531, 1);
 800d1e8:	2101      	movs	r1, #1
 800d1ea:	ed9f 0a60 	vldr	s0, [pc, #384]	; 800d36c <motors_process_task+0x264>
 800d1ee:	4860      	ldr	r0, [pc, #384]	; (800d370 <motors_process_task+0x268>)
 800d1f0:	f000 f956 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[17], -3.62, 1);
 800d1f4:	2101      	movs	r1, #1
 800d1f6:	ed9f 0a5f 	vldr	s0, [pc, #380]	; 800d374 <motors_process_task+0x26c>
 800d1fa:	485f      	ldr	r0, [pc, #380]	; (800d378 <motors_process_task+0x270>)
 800d1fc:	f000 f950 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[1], 0, -1);
 800d200:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d204:	ed9f 0a5d 	vldr	s0, [pc, #372]	; 800d37c <motors_process_task+0x274>
 800d208:	485d      	ldr	r0, [pc, #372]	; (800d380 <motors_process_task+0x278>)
 800d20a:	f000 f949 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[0], 0, 1);
 800d20e:	2101      	movs	r1, #1
 800d210:	ed9f 0a5a 	vldr	s0, [pc, #360]	; 800d37c <motors_process_task+0x274>
 800d214:	484e      	ldr	r0, [pc, #312]	; (800d350 <motors_process_task+0x248>)
 800d216:	f000 f943 	bl	800d4a0 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&can_motors[8],0,-1.0);
 800d21a:	ed9f 1b49 	vldr	d1, [pc, #292]	; 800d340 <motors_process_task+0x238>
 800d21e:	ed9f 0a57 	vldr	s0, [pc, #348]	; 800d37c <motors_process_task+0x274>
 800d222:	484f      	ldr	r0, [pc, #316]	; (800d360 <motors_process_task+0x258>)
 800d224:	f000 f99c 	bl	800d560 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[9],0,-1.0);
 800d228:	ed9f 1b45 	vldr	d1, [pc, #276]	; 800d340 <motors_process_task+0x238>
 800d22c:	ed9f 0a53 	vldr	s0, [pc, #332]	; 800d37c <motors_process_task+0x274>
 800d230:	484d      	ldr	r0, [pc, #308]	; (800d368 <motors_process_task+0x260>)
 800d232:	f000 f995 	bl	800d560 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[16],0,1.0);
 800d236:	ed9f 1b44 	vldr	d1, [pc, #272]	; 800d348 <motors_process_task+0x240>
 800d23a:	ed9f 0a50 	vldr	s0, [pc, #320]	; 800d37c <motors_process_task+0x274>
 800d23e:	484c      	ldr	r0, [pc, #304]	; (800d370 <motors_process_task+0x268>)
 800d240:	f000 f98e 	bl	800d560 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[17],0,1.0);
 800d244:	ed9f 1b40 	vldr	d1, [pc, #256]	; 800d348 <motors_process_task+0x240>
 800d248:	ed9f 0a4c 	vldr	s0, [pc, #304]	; 800d37c <motors_process_task+0x274>
 800d24c:	484a      	ldr	r0, [pc, #296]	; (800d378 <motors_process_task+0x270>)
 800d24e:	f000 f987 	bl	800d560 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&can_motors[0],15,1.0);
 800d252:	ed9f 1b3d 	vldr	d1, [pc, #244]	; 800d348 <motors_process_task+0x240>
 800d256:	eeb2 0a0e 	vmov.f32	s0, #46	; 0x41700000  15.0
 800d25a:	483d      	ldr	r0, [pc, #244]	; (800d350 <motors_process_task+0x248>)
 800d25c:	f000 fa0c 	bl	800d678 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&can_motors[1],15,-1.0);
 800d260:	ed9f 1b37 	vldr	d1, [pc, #220]	; 800d340 <motors_process_task+0x238>
 800d264:	eeb2 0a0e 	vmov.f32	s0, #46	; 0x41700000  15.0
 800d268:	4845      	ldr	r0, [pc, #276]	; (800d380 <motors_process_task+0x278>)
 800d26a:	f000 fa05 	bl	800d678 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)can_motors[1].torque ,(double)can_motors[1].raw_data.rpm/1000, &can_motors[1].rpm_pid);
 800d26e:	4b38      	ldr	r3, [pc, #224]	; (800d350 <motors_process_task+0x248>)
 800d270:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d274:	4618      	mov	r0, r3
 800d276:	f7f3 f967 	bl	8000548 <__aeabi_f2d>
 800d27a:	4604      	mov	r4, r0
 800d27c:	460d      	mov	r5, r1
 800d27e:	4b34      	ldr	r3, [pc, #208]	; (800d350 <motors_process_task+0x248>)
 800d280:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	; 0xf8
 800d284:	4618      	mov	r0, r3
 800d286:	f7f3 f94d 	bl	8000524 <__aeabi_i2d>
 800d28a:	f04f 0200 	mov.w	r2, #0
 800d28e:	4b3d      	ldr	r3, [pc, #244]	; (800d384 <motors_process_task+0x27c>)
 800d290:	f7f3 fadc 	bl	800084c <__aeabi_ddiv>
 800d294:	4602      	mov	r2, r0
 800d296:	460b      	mov	r3, r1
 800d298:	ec43 2b17 	vmov	d7, r2, r3
 800d29c:	483a      	ldr	r0, [pc, #232]	; (800d388 <motors_process_task+0x280>)
 800d29e:	eeb0 1a47 	vmov.f32	s2, s14
 800d2a2:	eef0 1a67 	vmov.f32	s3, s15
 800d2a6:	ec45 4b10 	vmov	d0, r4, r5
 800d2aa:	f7ff fbcd 	bl	800ca48 <speed_pid>
        speed_pid((double)can_motors[0].torque ,(double)can_motors[0].raw_data.rpm/1000, &can_motors[0].rpm_pid);
 800d2ae:	4b28      	ldr	r3, [pc, #160]	; (800d350 <motors_process_task+0x248>)
 800d2b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d2b2:	4618      	mov	r0, r3
 800d2b4:	f7f3 f948 	bl	8000548 <__aeabi_f2d>
 800d2b8:	4604      	mov	r4, r0
 800d2ba:	460d      	mov	r5, r1
 800d2bc:	4b24      	ldr	r3, [pc, #144]	; (800d350 <motors_process_task+0x248>)
 800d2be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d2c2:	4618      	mov	r0, r3
 800d2c4:	f7f3 f92e 	bl	8000524 <__aeabi_i2d>
 800d2c8:	f04f 0200 	mov.w	r2, #0
 800d2cc:	4b2d      	ldr	r3, [pc, #180]	; (800d384 <motors_process_task+0x27c>)
 800d2ce:	f7f3 fabd 	bl	800084c <__aeabi_ddiv>
 800d2d2:	4602      	mov	r2, r0
 800d2d4:	460b      	mov	r3, r1
 800d2d6:	ec43 2b17 	vmov	d7, r2, r3
 800d2da:	482c      	ldr	r0, [pc, #176]	; (800d38c <motors_process_task+0x284>)
 800d2dc:	eeb0 1a47 	vmov.f32	s2, s14
 800d2e0:	eef0 1a67 	vmov.f32	s3, s15
 800d2e4:	ec45 4b10 	vmov	d0, r4, r5
 800d2e8:	f7ff fbae 	bl	800ca48 <speed_pid>
        can_motors[1].output = can_motors[1].rpm_pid.output;
 800d2ec:	4b18      	ldr	r3, [pc, #96]	; (800d350 <motors_process_task+0x248>)
 800d2ee:	edd3 7a52 	vldr	s15, [r3, #328]	; 0x148
 800d2f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d2f6:	ee17 3a90 	vmov	r3, s15
 800d2fa:	b21a      	sxth	r2, r3
 800d2fc:	4b14      	ldr	r3, [pc, #80]	; (800d350 <motors_process_task+0x248>)
 800d2fe:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
        can_motors[0].output = can_motors[0].rpm_pid.output;
 800d302:	4b13      	ldr	r3, [pc, #76]	; (800d350 <motors_process_task+0x248>)
 800d304:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d308:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d30c:	ee17 3a90 	vmov	r3, s15
 800d310:	b21a      	sxth	r2, r3
 800d312:	4b0f      	ldr	r3, [pc, #60]	; (800d350 <motors_process_task+0x248>)
 800d314:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
        starttime = get_microseconds();
 800d318:	f7f4 ffaa 	bl	8002270 <get_microseconds>
 800d31c:	4603      	mov	r3, r0
 800d31e:	4618      	mov	r0, r3
 800d320:	f7f3 f8f0 	bl	8000504 <__aeabi_ui2d>
 800d324:	4602      	mov	r2, r0
 800d326:	460b      	mov	r3, r1
 800d328:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30




        vTaskDelayUntil(&start_time, 5);
 800d32c:	f107 030c 	add.w	r3, r7, #12
 800d330:	2105      	movs	r1, #5
 800d332:	4618      	mov	r0, r3
 800d334:	f00f fb2e 	bl	801c994 <vTaskDelayUntil>
        endtime = get_microseconds();
 800d338:	e72d      	b.n	800d196 <motors_process_task+0x8e>
 800d33a:	bf00      	nop
 800d33c:	f3af 8000 	nop.w
 800d340:	00000000 	.word	0x00000000
 800d344:	bff00000 	.word	0xbff00000
 800d348:	00000000 	.word	0x00000000
 800d34c:	3ff00000 	.word	0x3ff00000
 800d350:	200018a8 	.word	0x200018a8
 800d354:	459c4000 	.word	0x459c4000
 800d358:	461c4000 	.word	0x461c4000
 800d35c:	40d85ef8 	.word	0x40d85ef8
 800d360:	20002028 	.word	0x20002028
 800d364:	4067ae14 	.word	0x4067ae14
 800d368:	20002118 	.word	0x20002118
 800d36c:	bf07ef9e 	.word	0xbf07ef9e
 800d370:	200027a8 	.word	0x200027a8
 800d374:	c067ae14 	.word	0xc067ae14
 800d378:	20002898 	.word	0x20002898
 800d37c:	00000000 	.word	0x00000000
 800d380:	20001998 	.word	0x20001998
 800d384:	408f4000 	.word	0x408f4000
 800d388:	200019d0 	.word	0x200019d0
 800d38c:	200018e0 	.word	0x200018e0

0800d390 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800d390:	b590      	push	{r4, r7, lr}
 800d392:	b087      	sub	sp, #28
 800d394:	af00      	add	r7, sp, #0
 800d396:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800d398:	2300      	movs	r3, #0
 800d39a:	617b      	str	r3, [r7, #20]
 800d39c:	e06b      	b.n	800d476 <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800d39e:	697a      	ldr	r2, [r7, #20]
 800d3a0:	4613      	mov	r3, r2
 800d3a2:	011b      	lsls	r3, r3, #4
 800d3a4:	1a9b      	subs	r3, r3, r2
 800d3a6:	011b      	lsls	r3, r3, #4
 800d3a8:	461a      	mov	r2, r3
 800d3aa:	687b      	ldr	r3, [r7, #4]
 800d3ac:	4413      	add	r3, r2
 800d3ae:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800d3b2:	4619      	mov	r1, r3
 800d3b4:	697a      	ldr	r2, [r7, #20]
 800d3b6:	4613      	mov	r3, r2
 800d3b8:	011b      	lsls	r3, r3, #4
 800d3ba:	1a9b      	subs	r3, r3, r2
 800d3bc:	011b      	lsls	r3, r3, #4
 800d3be:	461a      	mov	r2, r3
 800d3c0:	687b      	ldr	r3, [r7, #4]
 800d3c2:	4413      	add	r3, r2
 800d3c4:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 800d3c8:	4613      	mov	r3, r2
 800d3ca:	04db      	lsls	r3, r3, #19
 800d3cc:	1a9b      	subs	r3, r3, r2
 800d3ce:	035b      	lsls	r3, r3, #13
 800d3d0:	440b      	add	r3, r1
 800d3d2:	4618      	mov	r0, r3
 800d3d4:	f7f3 f8a6 	bl	8000524 <__aeabi_i2d>
 800d3d8:	4602      	mov	r2, r0
 800d3da:	460b      	mov	r3, r1
 800d3dc:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800d3e0:	a32a      	add	r3, pc, #168	; (adr r3, 800d48c <raw_angle_to_rad+0xfc>)
 800d3e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d3e6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d3ea:	f7f3 fa2f 	bl	800084c <__aeabi_ddiv>
 800d3ee:	4602      	mov	r2, r0
 800d3f0:	460b      	mov	r3, r1
 800d3f2:	4610      	mov	r0, r2
 800d3f4:	4619      	mov	r1, r3
 800d3f6:	4602      	mov	r2, r0
 800d3f8:	460b      	mov	r3, r1
 800d3fa:	f7f2 ff47 	bl	800028c <__adddf3>
 800d3fe:	4602      	mov	r2, r0
 800d400:	460b      	mov	r3, r1
 800d402:	4610      	mov	r0, r2
 800d404:	4619      	mov	r1, r3
 800d406:	a323      	add	r3, pc, #140	; (adr r3, 800d494 <raw_angle_to_rad+0x104>)
 800d408:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d40c:	f7f3 f8f4 	bl	80005f8 <__aeabi_dmul>
 800d410:	4602      	mov	r2, r0
 800d412:	460b      	mov	r3, r1
 800d414:	4610      	mov	r0, r2
 800d416:	4619      	mov	r1, r3
 800d418:	697a      	ldr	r2, [r7, #20]
 800d41a:	4613      	mov	r3, r2
 800d41c:	011b      	lsls	r3, r3, #4
 800d41e:	1a9b      	subs	r3, r3, r2
 800d420:	011b      	lsls	r3, r3, #4
 800d422:	461a      	mov	r2, r3
 800d424:	687b      	ldr	r3, [r7, #4]
 800d426:	189c      	adds	r4, r3, r2
 800d428:	f7f3 fbde 	bl	8000be8 <__aeabi_d2f>
 800d42c:	4603      	mov	r3, r0
 800d42e:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800d430:	a316      	add	r3, pc, #88	; (adr r3, 800d48c <raw_angle_to_rad+0xfc>)
 800d432:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d436:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d43a:	f7f3 fa07 	bl	800084c <__aeabi_ddiv>
 800d43e:	4602      	mov	r2, r0
 800d440:	460b      	mov	r3, r1
 800d442:	4610      	mov	r0, r2
 800d444:	4619      	mov	r1, r3
 800d446:	f04f 0200 	mov.w	r2, #0
 800d44a:	4b0f      	ldr	r3, [pc, #60]	; (800d488 <raw_angle_to_rad+0xf8>)
 800d44c:	f7f3 f8d4 	bl	80005f8 <__aeabi_dmul>
 800d450:	4602      	mov	r2, r0
 800d452:	460b      	mov	r3, r1
 800d454:	4610      	mov	r0, r2
 800d456:	4619      	mov	r1, r3
 800d458:	697a      	ldr	r2, [r7, #20]
 800d45a:	4613      	mov	r3, r2
 800d45c:	011b      	lsls	r3, r3, #4
 800d45e:	1a9b      	subs	r3, r3, r2
 800d460:	011b      	lsls	r3, r3, #4
 800d462:	461a      	mov	r2, r3
 800d464:	687b      	ldr	r3, [r7, #4]
 800d466:	189c      	adds	r4, r3, r2
 800d468:	f7f3 fbbe 	bl	8000be8 <__aeabi_d2f>
 800d46c:	4603      	mov	r3, r0
 800d46e:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800d470:	697b      	ldr	r3, [r7, #20]
 800d472:	3301      	adds	r3, #1
 800d474:	617b      	str	r3, [r7, #20]
 800d476:	697b      	ldr	r3, [r7, #20]
 800d478:	2b17      	cmp	r3, #23
 800d47a:	dd90      	ble.n	800d39e <raw_angle_to_rad+0xe>
    }
}
 800d47c:	bf00      	nop
 800d47e:	bf00      	nop
 800d480:	371c      	adds	r7, #28
 800d482:	46bd      	mov	sp, r7
 800d484:	bd90      	pop	{r4, r7, pc}
 800d486:	bf00      	nop
 800d488:	40768000 	.word	0x40768000
 800d48c:	00000000 	.word	0x00000000
 800d490:	40bfff00 	.word	0x40bfff00
 800d494:	60000000 	.word	0x60000000
 800d498:	400921fb 	.word	0x400921fb
 800d49c:	00000000 	.word	0x00000000

0800d4a0 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800d4a0:	b580      	push	{r7, lr}
 800d4a2:	b084      	sub	sp, #16
 800d4a4:	af00      	add	r7, sp, #0
 800d4a6:	60f8      	str	r0, [r7, #12]
 800d4a8:	ed87 0a02 	vstr	s0, [r7, #8]
 800d4ac:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800d4ae:	687b      	ldr	r3, [r7, #4]
 800d4b0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800d4b4:	d11b      	bne.n	800d4ee <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800d4b6:	68fb      	ldr	r3, [r7, #12]
 800d4b8:	edd3 7a04 	vldr	s15, [r3, #16]
 800d4bc:	ed97 7a02 	vldr	s14, [r7, #8]
 800d4c0:	ee77 7a67 	vsub.f32	s15, s14, s15
 800d4c4:	68fb      	ldr	r3, [r7, #12]
 800d4c6:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800d4ca:	68fb      	ldr	r3, [r7, #12]
 800d4cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d4d0:	425b      	negs	r3, r3
 800d4d2:	4618      	mov	r0, r3
 800d4d4:	f7f3 f826 	bl	8000524 <__aeabi_i2d>
 800d4d8:	a31d      	add	r3, pc, #116	; (adr r3, 800d550 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d4da:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d4de:	f7f3 f88b 	bl	80005f8 <__aeabi_dmul>
 800d4e2:	4602      	mov	r2, r0
 800d4e4:	460b      	mov	r3, r1
 800d4e6:	68f9      	ldr	r1, [r7, #12]
 800d4e8:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800d4ec:	e019      	b.n	800d522 <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800d4ee:	68fb      	ldr	r3, [r7, #12]
 800d4f0:	ed93 7a04 	vldr	s14, [r3, #16]
 800d4f4:	edd7 7a02 	vldr	s15, [r7, #8]
 800d4f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d4fc:	68fb      	ldr	r3, [r7, #12]
 800d4fe:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800d502:	68fb      	ldr	r3, [r7, #12]
 800d504:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d508:	4618      	mov	r0, r3
 800d50a:	f7f3 f80b 	bl	8000524 <__aeabi_i2d>
 800d50e:	a310      	add	r3, pc, #64	; (adr r3, 800d550 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d510:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d514:	f7f3 f870 	bl	80005f8 <__aeabi_dmul>
 800d518:	4602      	mov	r2, r0
 800d51a:	460b      	mov	r3, r1
 800d51c:	68f9      	ldr	r1, [r7, #12]
 800d51e:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800d522:	68fb      	ldr	r3, [r7, #12]
 800d524:	699b      	ldr	r3, [r3, #24]
 800d526:	4618      	mov	r0, r3
 800d528:	f7f3 f80e 	bl	8000548 <__aeabi_f2d>
 800d52c:	a30a      	add	r3, pc, #40	; (adr r3, 800d558 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800d52e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d532:	f7f3 f861 	bl	80005f8 <__aeabi_dmul>
 800d536:	4602      	mov	r2, r0
 800d538:	460b      	mov	r3, r1
 800d53a:	4610      	mov	r0, r2
 800d53c:	4619      	mov	r1, r3
 800d53e:	f7f3 fb53 	bl	8000be8 <__aeabi_d2f>
 800d542:	4602      	mov	r2, r0
 800d544:	68fb      	ldr	r3, [r7, #12]
 800d546:	61da      	str	r2, [r3, #28]

}
 800d548:	bf00      	nop
 800d54a:	3710      	adds	r7, #16
 800d54c:	46bd      	mov	sp, r7
 800d54e:	bd80      	pop	{r7, pc}
 800d550:	0f3cb3e5 	.word	0x0f3cb3e5
 800d554:	3fbaceee 	.word	0x3fbaceee
 800d558:	0d03cf26 	.word	0x0d03cf26
 800d55c:	404ca5dc 	.word	0x404ca5dc

0800d560 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800d560:	b580      	push	{r7, lr}
 800d562:	b086      	sub	sp, #24
 800d564:	af00      	add	r7, sp, #0
 800d566:	60f8      	str	r0, [r7, #12]
 800d568:	ed87 0a02 	vstr	s0, [r7, #8]
 800d56c:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d570:	f04f 0200 	mov.w	r2, #0
 800d574:	f04f 0300 	mov.w	r3, #0
 800d578:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d57c:	68fb      	ldr	r3, [r7, #12]
 800d57e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d582:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d58a:	dd17      	ble.n	800d5bc <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800d58c:	68fb      	ldr	r3, [r7, #12]
 800d58e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d590:	4618      	mov	r0, r3
 800d592:	f7f2 ffd9 	bl	8000548 <__aeabi_f2d>
 800d596:	a333      	add	r3, pc, #204	; (adr r3, 800d664 <motors_torque_to_current_6020+0x104>)
 800d598:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d59c:	f7f3 f82c 	bl	80005f8 <__aeabi_dmul>
 800d5a0:	4602      	mov	r2, r0
 800d5a2:	460b      	mov	r3, r1
 800d5a4:	4610      	mov	r0, r2
 800d5a6:	4619      	mov	r1, r3
 800d5a8:	a330      	add	r3, pc, #192	; (adr r3, 800d66c <motors_torque_to_current_6020+0x10c>)
 800d5aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5ae:	f7f2 fe6d 	bl	800028c <__adddf3>
 800d5b2:	4602      	mov	r2, r0
 800d5b4:	460b      	mov	r3, r1
 800d5b6:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d5ba:	e025      	b.n	800d608 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800d5bc:	68fb      	ldr	r3, [r7, #12]
 800d5be:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d5c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d5c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5ca:	d517      	bpl.n	800d5fc <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800d5cc:	68fb      	ldr	r3, [r7, #12]
 800d5ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5d0:	4618      	mov	r0, r3
 800d5d2:	f7f2 ffb9 	bl	8000548 <__aeabi_f2d>
 800d5d6:	a323      	add	r3, pc, #140	; (adr r3, 800d664 <motors_torque_to_current_6020+0x104>)
 800d5d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5dc:	f7f3 f80c 	bl	80005f8 <__aeabi_dmul>
 800d5e0:	4602      	mov	r2, r0
 800d5e2:	460b      	mov	r3, r1
 800d5e4:	4610      	mov	r0, r2
 800d5e6:	4619      	mov	r1, r3
 800d5e8:	a320      	add	r3, pc, #128	; (adr r3, 800d66c <motors_torque_to_current_6020+0x10c>)
 800d5ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5ee:	f7f2 fe4b 	bl	8000288 <__aeabi_dsub>
 800d5f2:	4602      	mov	r2, r0
 800d5f4:	460b      	mov	r3, r1
 800d5f6:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d5fa:	e005      	b.n	800d608 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800d5fc:	f04f 0200 	mov.w	r2, #0
 800d600:	f04f 0300 	mov.w	r3, #0
 800d604:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800d608:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d60c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d610:	f7f2 fff2 	bl	80005f8 <__aeabi_dmul>
 800d614:	4602      	mov	r2, r0
 800d616:	460b      	mov	r3, r1
 800d618:	4610      	mov	r0, r2
 800d61a:	4619      	mov	r1, r3
 800d61c:	f04f 0200 	mov.w	r2, #0
 800d620:	4b0f      	ldr	r3, [pc, #60]	; (800d660 <motors_torque_to_current_6020+0x100>)
 800d622:	f7f3 f913 	bl	800084c <__aeabi_ddiv>
 800d626:	4602      	mov	r2, r0
 800d628:	460b      	mov	r3, r1
 800d62a:	4610      	mov	r0, r2
 800d62c:	4619      	mov	r1, r3
 800d62e:	a30a      	add	r3, pc, #40	; (adr r3, 800d658 <motors_torque_to_current_6020+0xf8>)
 800d630:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d634:	f7f2 ffe0 	bl	80005f8 <__aeabi_dmul>
 800d638:	4602      	mov	r2, r0
 800d63a:	460b      	mov	r3, r1
 800d63c:	4610      	mov	r0, r2
 800d63e:	4619      	mov	r1, r3
 800d640:	f7f3 fa8a 	bl	8000b58 <__aeabi_d2iz>
 800d644:	4603      	mov	r3, r0
 800d646:	b21a      	sxth	r2, r3
 800d648:	68fb      	ldr	r3, [r7, #12]
 800d64a:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
}
 800d64e:	bf00      	nop
 800d650:	3718      	adds	r7, #24
 800d652:	46bd      	mov	sp, r7
 800d654:	bd80      	pop	{r7, pc}
 800d656:	bf00      	nop
 800d658:	00000000 	.word	0x00000000
 800d65c:	40d00040 	.word	0x40d00040
 800d660:	40080000 	.word	0x40080000
 800d664:	cccccccd 	.word	0xcccccccd
 800d668:	3ffccccc 	.word	0x3ffccccc
 800d66c:	9999999a 	.word	0x9999999a
 800d670:	3fc99999 	.word	0x3fc99999
 800d674:	00000000 	.word	0x00000000

0800d678 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800d678:	b580      	push	{r7, lr}
 800d67a:	b086      	sub	sp, #24
 800d67c:	af00      	add	r7, sp, #0
 800d67e:	60f8      	str	r0, [r7, #12]
 800d680:	ed87 0a02 	vstr	s0, [r7, #8]
 800d684:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d688:	f04f 0200 	mov.w	r2, #0
 800d68c:	f04f 0300 	mov.w	r3, #0
 800d690:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d694:	68fb      	ldr	r3, [r7, #12]
 800d696:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d69a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d6a2:	dd20      	ble.n	800d6e6 <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800d6a4:	68fb      	ldr	r3, [r7, #12]
 800d6a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d6a8:	4618      	mov	r0, r3
 800d6aa:	f7f2 ff4d 	bl	8000548 <__aeabi_f2d>
 800d6ae:	f04f 0200 	mov.w	r2, #0
 800d6b2:	4b55      	ldr	r3, [pc, #340]	; (800d808 <motors_torque_to_current_3508_gearbox+0x190>)
 800d6b4:	f7f3 f8ca 	bl	800084c <__aeabi_ddiv>
 800d6b8:	4602      	mov	r2, r0
 800d6ba:	460b      	mov	r3, r1
 800d6bc:	4610      	mov	r0, r2
 800d6be:	4619      	mov	r1, r3
 800d6c0:	f04f 0200 	mov.w	r2, #0
 800d6c4:	4b51      	ldr	r3, [pc, #324]	; (800d80c <motors_torque_to_current_3508_gearbox+0x194>)
 800d6c6:	f7f2 ff97 	bl	80005f8 <__aeabi_dmul>
 800d6ca:	4602      	mov	r2, r0
 800d6cc:	460b      	mov	r3, r1
 800d6ce:	4610      	mov	r0, r2
 800d6d0:	4619      	mov	r1, r3
 800d6d2:	a349      	add	r3, pc, #292	; (adr r3, 800d7f8 <motors_torque_to_current_3508_gearbox+0x180>)
 800d6d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d6d8:	f7f2 fdd8 	bl	800028c <__adddf3>
 800d6dc:	4602      	mov	r2, r0
 800d6de:	460b      	mov	r3, r1
 800d6e0:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d6e4:	e02e      	b.n	800d744 <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800d6e6:	68fb      	ldr	r3, [r7, #12]
 800d6e8:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d6ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d6f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d6f4:	d520      	bpl.n	800d738 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800d6f6:	68fb      	ldr	r3, [r7, #12]
 800d6f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d6fa:	4618      	mov	r0, r3
 800d6fc:	f7f2 ff24 	bl	8000548 <__aeabi_f2d>
 800d700:	f04f 0200 	mov.w	r2, #0
 800d704:	4b40      	ldr	r3, [pc, #256]	; (800d808 <motors_torque_to_current_3508_gearbox+0x190>)
 800d706:	f7f3 f8a1 	bl	800084c <__aeabi_ddiv>
 800d70a:	4602      	mov	r2, r0
 800d70c:	460b      	mov	r3, r1
 800d70e:	4610      	mov	r0, r2
 800d710:	4619      	mov	r1, r3
 800d712:	f04f 0200 	mov.w	r2, #0
 800d716:	4b3d      	ldr	r3, [pc, #244]	; (800d80c <motors_torque_to_current_3508_gearbox+0x194>)
 800d718:	f7f2 ff6e 	bl	80005f8 <__aeabi_dmul>
 800d71c:	4602      	mov	r2, r0
 800d71e:	460b      	mov	r3, r1
 800d720:	4610      	mov	r0, r2
 800d722:	4619      	mov	r1, r3
 800d724:	a334      	add	r3, pc, #208	; (adr r3, 800d7f8 <motors_torque_to_current_3508_gearbox+0x180>)
 800d726:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d72a:	f7f2 fdad 	bl	8000288 <__aeabi_dsub>
 800d72e:	4602      	mov	r2, r0
 800d730:	460b      	mov	r3, r1
 800d732:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d736:	e005      	b.n	800d744 <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800d738:	f04f 0200 	mov.w	r2, #0
 800d73c:	f04f 0300 	mov.w	r3, #0
 800d740:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800d744:	68b8      	ldr	r0, [r7, #8]
 800d746:	f7f2 feff 	bl	8000548 <__aeabi_f2d>
 800d74a:	4602      	mov	r2, r0
 800d74c:	460b      	mov	r3, r1
 800d74e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d752:	f7f3 f9e1 	bl	8000b18 <__aeabi_dcmpgt>
 800d756:	4603      	mov	r3, r0
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d007      	beq.n	800d76c <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800d75c:	68b8      	ldr	r0, [r7, #8]
 800d75e:	f7f2 fef3 	bl	8000548 <__aeabi_f2d>
 800d762:	4602      	mov	r2, r0
 800d764:	460b      	mov	r3, r1
 800d766:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d76a:	e01e      	b.n	800d7aa <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800d76c:	edd7 7a02 	vldr	s15, [r7, #8]
 800d770:	eef1 7a67 	vneg.f32	s15, s15
 800d774:	ee17 3a90 	vmov	r3, s15
 800d778:	4618      	mov	r0, r3
 800d77a:	f7f2 fee5 	bl	8000548 <__aeabi_f2d>
 800d77e:	4602      	mov	r2, r0
 800d780:	460b      	mov	r3, r1
 800d782:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d786:	f7f3 f9a9 	bl	8000adc <__aeabi_dcmplt>
 800d78a:	4603      	mov	r3, r0
 800d78c:	2b00      	cmp	r3, #0
 800d78e:	d00c      	beq.n	800d7aa <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800d790:	edd7 7a02 	vldr	s15, [r7, #8]
 800d794:	eef1 7a67 	vneg.f32	s15, s15
 800d798:	ee17 3a90 	vmov	r3, s15
 800d79c:	4618      	mov	r0, r3
 800d79e:	f7f2 fed3 	bl	8000548 <__aeabi_f2d>
 800d7a2:	4602      	mov	r2, r0
 800d7a4:	460b      	mov	r3, r1
 800d7a6:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800d7aa:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d7ae:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d7b2:	f7f2 ff21 	bl	80005f8 <__aeabi_dmul>
 800d7b6:	4602      	mov	r2, r0
 800d7b8:	460b      	mov	r3, r1
 800d7ba:	4610      	mov	r0, r2
 800d7bc:	4619      	mov	r1, r3
 800d7be:	f04f 0200 	mov.w	r2, #0
 800d7c2:	4b12      	ldr	r3, [pc, #72]	; (800d80c <motors_torque_to_current_3508_gearbox+0x194>)
 800d7c4:	f7f3 f842 	bl	800084c <__aeabi_ddiv>
 800d7c8:	4602      	mov	r2, r0
 800d7ca:	460b      	mov	r3, r1
 800d7cc:	4610      	mov	r0, r2
 800d7ce:	4619      	mov	r1, r3
 800d7d0:	a30b      	add	r3, pc, #44	; (adr r3, 800d800 <motors_torque_to_current_3508_gearbox+0x188>)
 800d7d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d7d6:	f7f2 ff0f 	bl	80005f8 <__aeabi_dmul>
 800d7da:	4602      	mov	r2, r0
 800d7dc:	460b      	mov	r3, r1
 800d7de:	4610      	mov	r0, r2
 800d7e0:	4619      	mov	r1, r3
 800d7e2:	f7f3 f9b9 	bl	8000b58 <__aeabi_d2iz>
 800d7e6:	4603      	mov	r3, r0
 800d7e8:	b21a      	sxth	r2, r3
 800d7ea:	68fb      	ldr	r3, [r7, #12]
 800d7ec:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
}
 800d7f0:	bf00      	nop
 800d7f2:	3718      	adds	r7, #24
 800d7f4:	46bd      	mov	sp, r7
 800d7f6:	bd80      	pop	{r7, pc}
 800d7f8:	47ae147b 	.word	0x47ae147b
 800d7fc:	3fb47ae1 	.word	0x3fb47ae1
 800d800:	00000000 	.word	0x00000000
 800d804:	40d00040 	.word	0x40d00040
 800d808:	40120000 	.word	0x40120000
 800d80c:	40340000 	.word	0x40340000

0800d810 <arm_sqrt_f32>:
   * <code>in</code> is negative value and returns zero output for negative values.
   */
  static __INLINE arm_status arm_sqrt_f32(
  float32_t in,
  float32_t * pOut)
  {
 800d810:	b580      	push	{r7, lr}
 800d812:	b082      	sub	sp, #8
 800d814:	af00      	add	r7, sp, #0
 800d816:	ed87 0a01 	vstr	s0, [r7, #4]
 800d81a:	6038      	str	r0, [r7, #0]
    if(in >= 0.0f)
 800d81c:	edd7 7a01 	vldr	s15, [r7, #4]
 800d820:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d828:	db0a      	blt.n	800d840 <arm_sqrt_f32+0x30>
#if   (__FPU_USED == 1) && defined ( __CC_ARM   )
      *pOut = __sqrtf(in);
#elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
      *pOut = __builtin_sqrtf(in);
#elif (__FPU_USED == 1) && defined(__GNUC__)
      *pOut = __builtin_sqrtf(in);
 800d82a:	ed97 0a01 	vldr	s0, [r7, #4]
 800d82e:	f016 fe61 	bl	80244f4 <sqrtf>
 800d832:	eef0 7a40 	vmov.f32	s15, s0
 800d836:	683b      	ldr	r3, [r7, #0]
 800d838:	edc3 7a00 	vstr	s15, [r3]
      __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
#else
      *pOut = sqrtf(in);
#endif

      return (ARM_MATH_SUCCESS);
 800d83c:	2300      	movs	r3, #0
 800d83e:	e005      	b.n	800d84c <arm_sqrt_f32+0x3c>
    }
    else
    {
      *pOut = 0.0f;
 800d840:	683b      	ldr	r3, [r7, #0]
 800d842:	f04f 0200 	mov.w	r2, #0
 800d846:	601a      	str	r2, [r3, #0]
      return (ARM_MATH_ARGUMENT_ERROR);
 800d848:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    }
  }
 800d84c:	4618      	mov	r0, r3
 800d84e:	3708      	adds	r7, #8
 800d850:	46bd      	mov	sp, r7
 800d852:	bd80      	pop	{r7, pc}
 800d854:	0000      	movs	r0, r0
	...

0800d858 <referee_processing_task>:
ref_magazine_data_t ref_mag_data;
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;


void referee_processing_task(void *argument) {
 800d858:	b5b0      	push	{r4, r5, r7, lr}
 800d85a:	b0ca      	sub	sp, #296	; 0x128
 800d85c:	af00      	add	r7, sp, #0
 800d85e:	f507 7394 	add.w	r3, r7, #296	; 0x128
 800d862:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800d866:	6018      	str	r0, [r3, #0]
	referee_limiters.robot_level = 0;
 800d868:	4ba0      	ldr	r3, [pc, #640]	; (800daec <referee_processing_task+0x294>)
 800d86a:	2200      	movs	r2, #0
 800d86c:	731a      	strb	r2, [r3, #12]
	queue_t referee_uart_q;
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	referee_limiters.feeding_speed = LV1_FEEDER;
 800d86e:	4b9f      	ldr	r3, [pc, #636]	; (800daec <referee_processing_task+0x294>)
 800d870:	f44f 7252 	mov.w	r2, #840	; 0x348
 800d874:	801a      	strh	r2, [r3, #0]
	referee_limiters.projectile_speed = LV1_PROJECTILE;
 800d876:	4b9d      	ldr	r3, [pc, #628]	; (800daec <referee_processing_task+0x294>)
 800d878:	220d      	movs	r2, #13
 800d87a:	805a      	strh	r2, [r3, #2]
	referee_limiters.wheel_power_limit = LV1_POWER * CHASSIS_POWER_MULT;
 800d87c:	4b9b      	ldr	r3, [pc, #620]	; (800daec <referee_processing_task+0x294>)
 800d87e:	4a9c      	ldr	r2, [pc, #624]	; (800daf0 <referee_processing_task+0x298>)
 800d880:	605a      	str	r2, [r3, #4]
	referee_limiters.robot_level = 1;
 800d882:	4b9a      	ldr	r3, [pc, #616]	; (800daec <referee_processing_task+0x294>)
 800d884:	2201      	movs	r2, #1
 800d886:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800d888:	2100      	movs	r1, #0
 800d88a:	2007      	movs	r0, #7
 800d88c:	f7f4 fc18 	bl	80020c0 <status_led>
	status_led(8, off_led);
 800d890:	2101      	movs	r1, #1
 800d892:	2008      	movs	r0, #8
 800d894:	f7f4 fc14 	bl	80020c0 <status_led>
	uint8_t graphic_sent = 0;
 800d898:	2300      	movs	r3, #0
 800d89a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
	ref_robot_data.robot_id = 0;
 800d89e:	4b95      	ldr	r3, [pc, #596]	; (800daf4 <referee_processing_task+0x29c>)
 800d8a0:	2200      	movs	r2, #0
 800d8a2:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800d8a4:	f107 030c 	add.w	r3, r7, #12
 800d8a8:	f107 0108 	add.w	r1, r7, #8
 800d8ac:	2202      	movs	r2, #2
 800d8ae:	4892      	ldr	r0, [pc, #584]	; (800daf8 <referee_processing_task+0x2a0>)
 800d8b0:	f7f5 fa1a 	bl	8002ce8 <ref_usart_start>
	while (1) {
//			uint32_t ref_check = ulTaskNotifyTake(pdTRUE, 5);
		status_led(5, on_led);
 800d8b4:	2100      	movs	r1, #0
 800d8b6:	2005      	movs	r0, #5
 800d8b8:	f7f4 fc02 	bl	80020c0 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800d8bc:	f107 030c 	add.w	r3, r7, #12
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	f7f4 fe7c 	bl	80025be <queue_get_size>
 800d8c6:	4603      	mov	r3, r0
 800d8c8:	2b07      	cmp	r3, #7
 800d8ca:	f240 80c1 	bls.w	800da50 <referee_processing_task+0x1f8>
			while (queue_get_size(&referee_uart_q) > 7) {
 800d8ce:	e0b4      	b.n	800da3a <referee_processing_task+0x1e2>
				proc_status = ref_process_data(&referee_uart_q, &msg_buffer);
 800d8d0:	f107 030c 	add.w	r3, r7, #12
 800d8d4:	4989      	ldr	r1, [pc, #548]	; (800dafc <referee_processing_task+0x2a4>)
 800d8d6:	4618      	mov	r0, r3
 800d8d8:	f7f4 fe7e 	bl	80025d8 <ref_process_data>
 800d8dc:	4603      	mov	r3, r0
 800d8de:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
				if (proc_status == PROCESS_SUCCESS) {
 800d8e2:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 800d8e6:	2b00      	cmp	r3, #0
 800d8e8:	f040 80a3 	bne.w	800da32 <referee_processing_task+0x1da>
					switch (msg_buffer.cmd_id) {
 800d8ec:	4b83      	ldr	r3, [pc, #524]	; (800dafc <referee_processing_task+0x2a4>)
 800d8ee:	881b      	ldrh	r3, [r3, #0]
 800d8f0:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800d8f4:	f300 809b 	bgt.w	800da2e <referee_processing_task+0x1d6>
 800d8f8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d8fc:	dc04      	bgt.n	800d908 <referee_processing_task+0xb0>
 800d8fe:	2b01      	cmp	r3, #1
 800d900:	d029      	beq.n	800d956 <referee_processing_task+0xfe>
 800d902:	2b03      	cmp	r3, #3
 800d904:	d073      	beq.n	800d9ee <referee_processing_task+0x196>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800d906:	e092      	b.n	800da2e <referee_processing_task+0x1d6>
					switch (msg_buffer.cmd_id) {
 800d908:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 800d90c:	2b07      	cmp	r3, #7
 800d90e:	f200 808e 	bhi.w	800da2e <referee_processing_task+0x1d6>
 800d912:	a201      	add	r2, pc, #4	; (adr r2, 800d918 <referee_processing_task+0xc0>)
 800d914:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d918:	0800d971 	.word	0x0800d971
 800d91c:	0800d9bd 	.word	0x0800d9bd
 800d920:	0800d99f 	.word	0x0800d99f
 800d924:	0800da2f 	.word	0x0800da2f
 800d928:	0800da2f 	.word	0x0800da2f
 800d92c:	0800d9db 	.word	0x0800d9db
 800d930:	0800d939 	.word	0x0800d939
 800d934:	0800da15 	.word	0x0800da15
						memcpy(&ref_shoot_data, &msg_buffer.data,
 800d938:	4a71      	ldr	r2, [pc, #452]	; (800db00 <referee_processing_task+0x2a8>)
 800d93a:	4b70      	ldr	r3, [pc, #448]	; (800dafc <referee_processing_task+0x2a4>)
 800d93c:	3302      	adds	r3, #2
 800d93e:	6818      	ldr	r0, [r3, #0]
 800d940:	6010      	str	r0, [r2, #0]
 800d942:	8899      	ldrh	r1, [r3, #4]
 800d944:	799b      	ldrb	r3, [r3, #6]
 800d946:	8091      	strh	r1, [r2, #4]
 800d948:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800d94a:	4b6e      	ldr	r3, [pc, #440]	; (800db04 <referee_processing_task+0x2ac>)
 800d94c:	681b      	ldr	r3, [r3, #0]
 800d94e:	3301      	adds	r3, #1
 800d950:	4a6c      	ldr	r2, [pc, #432]	; (800db04 <referee_processing_task+0x2ac>)
 800d952:	6013      	str	r3, [r2, #0]
						break;
 800d954:	e071      	b.n	800da3a <referee_processing_task+0x1e2>
							memcpy(&ref_game_state, &msg_buffer.data,
 800d956:	4a6c      	ldr	r2, [pc, #432]	; (800db08 <referee_processing_task+0x2b0>)
 800d958:	4b68      	ldr	r3, [pc, #416]	; (800dafc <referee_processing_task+0x2a4>)
 800d95a:	3302      	adds	r3, #2
 800d95c:	8819      	ldrh	r1, [r3, #0]
 800d95e:	789b      	ldrb	r3, [r3, #2]
 800d960:	8011      	strh	r1, [r2, #0]
 800d962:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800d964:	4b69      	ldr	r3, [pc, #420]	; (800db0c <referee_processing_task+0x2b4>)
 800d966:	681b      	ldr	r3, [r3, #0]
 800d968:	3301      	adds	r3, #1
 800d96a:	4a68      	ldr	r2, [pc, #416]	; (800db0c <referee_processing_task+0x2b4>)
 800d96c:	6013      	str	r3, [r2, #0]
							break;
 800d96e:	e064      	b.n	800da3a <referee_processing_task+0x1e2>
						memcpy(&ref_robot_data, &msg_buffer.data,
 800d970:	4a60      	ldr	r2, [pc, #384]	; (800daf4 <referee_processing_task+0x29c>)
 800d972:	4b62      	ldr	r3, [pc, #392]	; (800dafc <referee_processing_task+0x2a4>)
 800d974:	4614      	mov	r4, r2
 800d976:	1c9d      	adds	r5, r3, #2
 800d978:	6828      	ldr	r0, [r5, #0]
 800d97a:	6869      	ldr	r1, [r5, #4]
 800d97c:	68aa      	ldr	r2, [r5, #8]
 800d97e:	68eb      	ldr	r3, [r5, #12]
 800d980:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d982:	6928      	ldr	r0, [r5, #16]
 800d984:	6969      	ldr	r1, [r5, #20]
 800d986:	c403      	stmia	r4!, {r0, r1}
 800d988:	8b2b      	ldrh	r3, [r5, #24]
 800d98a:	7eaa      	ldrb	r2, [r5, #26]
 800d98c:	8023      	strh	r3, [r4, #0]
 800d98e:	4613      	mov	r3, r2
 800d990:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800d992:	4b5f      	ldr	r3, [pc, #380]	; (800db10 <referee_processing_task+0x2b8>)
 800d994:	681b      	ldr	r3, [r3, #0]
 800d996:	3301      	adds	r3, #1
 800d998:	4a5d      	ldr	r2, [pc, #372]	; (800db10 <referee_processing_task+0x2b8>)
 800d99a:	6013      	str	r3, [r2, #0]
						break;
 800d99c:	e04d      	b.n	800da3a <referee_processing_task+0x1e2>
						memcpy(&ref_robot_pos, &msg_buffer.data,
 800d99e:	4a5d      	ldr	r2, [pc, #372]	; (800db14 <referee_processing_task+0x2bc>)
 800d9a0:	4b56      	ldr	r3, [pc, #344]	; (800dafc <referee_processing_task+0x2a4>)
 800d9a2:	4614      	mov	r4, r2
 800d9a4:	3302      	adds	r3, #2
 800d9a6:	6818      	ldr	r0, [r3, #0]
 800d9a8:	6859      	ldr	r1, [r3, #4]
 800d9aa:	689a      	ldr	r2, [r3, #8]
 800d9ac:	68db      	ldr	r3, [r3, #12]
 800d9ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_robot_pos_txno++;
 800d9b0:	4b59      	ldr	r3, [pc, #356]	; (800db18 <referee_processing_task+0x2c0>)
 800d9b2:	681b      	ldr	r3, [r3, #0]
 800d9b4:	3301      	adds	r3, #1
 800d9b6:	4a58      	ldr	r2, [pc, #352]	; (800db18 <referee_processing_task+0x2c0>)
 800d9b8:	6013      	str	r3, [r2, #0]
						break;
 800d9ba:	e03e      	b.n	800da3a <referee_processing_task+0x1e2>
						memcpy(&ref_power_data, &msg_buffer.data,
 800d9bc:	4b57      	ldr	r3, [pc, #348]	; (800db1c <referee_processing_task+0x2c4>)
 800d9be:	4a4f      	ldr	r2, [pc, #316]	; (800dafc <referee_processing_task+0x2a4>)
 800d9c0:	1c94      	adds	r4, r2, #2
 800d9c2:	6820      	ldr	r0, [r4, #0]
 800d9c4:	6861      	ldr	r1, [r4, #4]
 800d9c6:	68a2      	ldr	r2, [r4, #8]
 800d9c8:	c307      	stmia	r3!, {r0, r1, r2}
 800d9ca:	89a2      	ldrh	r2, [r4, #12]
 800d9cc:	801a      	strh	r2, [r3, #0]
						ref_power_data_txno++;
 800d9ce:	4b54      	ldr	r3, [pc, #336]	; (800db20 <referee_processing_task+0x2c8>)
 800d9d0:	681b      	ldr	r3, [r3, #0]
 800d9d2:	3301      	adds	r3, #1
 800d9d4:	4a52      	ldr	r2, [pc, #328]	; (800db20 <referee_processing_task+0x2c8>)
 800d9d6:	6013      	str	r3, [r2, #0]
						break;
 800d9d8:	e02f      	b.n	800da3a <referee_processing_task+0x1e2>
 800d9da:	4b48      	ldr	r3, [pc, #288]	; (800dafc <referee_processing_task+0x2a4>)
 800d9dc:	789a      	ldrb	r2, [r3, #2]
						memcpy(&ref_dmg_data, &msg_buffer.data,
 800d9de:	4b51      	ldr	r3, [pc, #324]	; (800db24 <referee_processing_task+0x2cc>)
 800d9e0:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800d9e2:	4b51      	ldr	r3, [pc, #324]	; (800db28 <referee_processing_task+0x2d0>)
 800d9e4:	681b      	ldr	r3, [r3, #0]
 800d9e6:	3301      	adds	r3, #1
 800d9e8:	4a4f      	ldr	r2, [pc, #316]	; (800db28 <referee_processing_task+0x2d0>)
 800d9ea:	6013      	str	r3, [r2, #0]
						break;
 800d9ec:	e025      	b.n	800da3a <referee_processing_task+0x1e2>
						memcpy(&ref_robot_hp, &msg_buffer.data,
 800d9ee:	4a4f      	ldr	r2, [pc, #316]	; (800db2c <referee_processing_task+0x2d4>)
 800d9f0:	4b42      	ldr	r3, [pc, #264]	; (800dafc <referee_processing_task+0x2a4>)
 800d9f2:	4614      	mov	r4, r2
 800d9f4:	1c9d      	adds	r5, r3, #2
 800d9f6:	6828      	ldr	r0, [r5, #0]
 800d9f8:	6869      	ldr	r1, [r5, #4]
 800d9fa:	68aa      	ldr	r2, [r5, #8]
 800d9fc:	68eb      	ldr	r3, [r5, #12]
 800d9fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800da00:	6928      	ldr	r0, [r5, #16]
 800da02:	6969      	ldr	r1, [r5, #20]
 800da04:	69aa      	ldr	r2, [r5, #24]
 800da06:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800da08:	4b49      	ldr	r3, [pc, #292]	; (800db30 <referee_processing_task+0x2d8>)
 800da0a:	681b      	ldr	r3, [r3, #0]
 800da0c:	3301      	adds	r3, #1
 800da0e:	4a48      	ldr	r2, [pc, #288]	; (800db30 <referee_processing_task+0x2d8>)
 800da10:	6013      	str	r3, [r2, #0]
						break;
 800da12:	e012      	b.n	800da3a <referee_processing_task+0x1e2>
						memcpy(&ref_mag_data, &msg_buffer.data,
 800da14:	4a47      	ldr	r2, [pc, #284]	; (800db34 <referee_processing_task+0x2dc>)
 800da16:	4b39      	ldr	r3, [pc, #228]	; (800dafc <referee_processing_task+0x2a4>)
 800da18:	3302      	adds	r3, #2
 800da1a:	6818      	ldr	r0, [r3, #0]
 800da1c:	6010      	str	r0, [r2, #0]
 800da1e:	889b      	ldrh	r3, [r3, #4]
 800da20:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800da22:	4b45      	ldr	r3, [pc, #276]	; (800db38 <referee_processing_task+0x2e0>)
 800da24:	681b      	ldr	r3, [r3, #0]
 800da26:	3301      	adds	r3, #1
 800da28:	4a43      	ldr	r2, [pc, #268]	; (800db38 <referee_processing_task+0x2e0>)
 800da2a:	6013      	str	r3, [r2, #0]
						break;
 800da2c:	e005      	b.n	800da3a <referee_processing_task+0x1e2>
						break;
 800da2e:	bf00      	nop
 800da30:	e003      	b.n	800da3a <referee_processing_task+0x1e2>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800da32:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 800da36:	2b02      	cmp	r3, #2
 800da38:	d009      	beq.n	800da4e <referee_processing_task+0x1f6>
			while (queue_get_size(&referee_uart_q) > 7) {
 800da3a:	f107 030c 	add.w	r3, r7, #12
 800da3e:	4618      	mov	r0, r3
 800da40:	f7f4 fdbd 	bl	80025be <queue_get_size>
 800da44:	4603      	mov	r3, r0
 800da46:	2b07      	cmp	r3, #7
 800da48:	f63f af42 	bhi.w	800d8d0 <referee_processing_task+0x78>
 800da4c:	e000      	b.n	800da50 <referee_processing_task+0x1f8>
					break;
 800da4e:	bf00      	nop
				}
			}
		}

		status_led(5, off_led);
 800da50:	2101      	movs	r1, #1
 800da52:	2005      	movs	r0, #5
 800da54:	f7f4 fb34 	bl	80020c0 <status_led>
		static uint32_t last_sent;

		status_led(5, on_led);
 800da58:	2100      	movs	r1, #0
 800da5a:	2005      	movs	r0, #5
 800da5c:	f7f4 fb30 	bl	80020c0 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800da60:	4b24      	ldr	r3, [pc, #144]	; (800daf4 <referee_processing_task+0x29c>)
 800da62:	785b      	ldrb	r3, [r3, #1]
 800da64:	2b01      	cmp	r3, #1
 800da66:	d112      	bne.n	800da8e <referee_processing_task+0x236>
			referee_limiters.feeding_speed = LV1_FEEDER;
 800da68:	4b20      	ldr	r3, [pc, #128]	; (800daec <referee_processing_task+0x294>)
 800da6a:	f44f 7252 	mov.w	r2, #840	; 0x348
 800da6e:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV1_PROJECTILE;
 800da70:	4b1e      	ldr	r3, [pc, #120]	; (800daec <referee_processing_task+0x294>)
 800da72:	220d      	movs	r2, #13
 800da74:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 1;
 800da76:	4b1d      	ldr	r3, [pc, #116]	; (800daec <referee_processing_task+0x294>)
 800da78:	2201      	movs	r2, #1
 800da7a:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800da7c:	2100      	movs	r1, #0
 800da7e:	2007      	movs	r0, #7
 800da80:	f7f4 fb1e 	bl	80020c0 <status_led>
			status_led(8, off_led);
 800da84:	2101      	movs	r1, #1
 800da86:	2008      	movs	r0, #8
 800da88:	f7f4 fb1a 	bl	80020c0 <status_led>
 800da8c:	e05d      	b.n	800db4a <referee_processing_task+0x2f2>
		} else if (ref_robot_data.robot_level == 2) {
 800da8e:	4b19      	ldr	r3, [pc, #100]	; (800daf4 <referee_processing_task+0x29c>)
 800da90:	785b      	ldrb	r3, [r3, #1]
 800da92:	2b02      	cmp	r3, #2
 800da94:	d112      	bne.n	800dabc <referee_processing_task+0x264>
			referee_limiters.feeding_speed = LV2_FEEDER;
 800da96:	4b15      	ldr	r3, [pc, #84]	; (800daec <referee_processing_task+0x294>)
 800da98:	f44f 7252 	mov.w	r2, #840	; 0x348
 800da9c:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV2_PROJECTILE;
 800da9e:	4b13      	ldr	r3, [pc, #76]	; (800daec <referee_processing_task+0x294>)
 800daa0:	220d      	movs	r2, #13
 800daa2:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 2;
 800daa4:	4b11      	ldr	r3, [pc, #68]	; (800daec <referee_processing_task+0x294>)
 800daa6:	2202      	movs	r2, #2
 800daa8:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800daaa:	2101      	movs	r1, #1
 800daac:	2007      	movs	r0, #7
 800daae:	f7f4 fb07 	bl	80020c0 <status_led>
			status_led(8, on_led);
 800dab2:	2100      	movs	r1, #0
 800dab4:	2008      	movs	r0, #8
 800dab6:	f7f4 fb03 	bl	80020c0 <status_led>
 800daba:	e046      	b.n	800db4a <referee_processing_task+0x2f2>
		} else if (ref_robot_data.robot_level == 3) {
 800dabc:	4b0d      	ldr	r3, [pc, #52]	; (800daf4 <referee_processing_task+0x29c>)
 800dabe:	785b      	ldrb	r3, [r3, #1]
 800dac0:	2b03      	cmp	r3, #3
 800dac2:	d13b      	bne.n	800db3c <referee_processing_task+0x2e4>
			referee_limiters.feeding_speed = LV3_FEEDER;
 800dac4:	4b09      	ldr	r3, [pc, #36]	; (800daec <referee_processing_task+0x294>)
 800dac6:	f44f 7252 	mov.w	r2, #840	; 0x348
 800daca:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV3_PROJECTILE;
 800dacc:	4b07      	ldr	r3, [pc, #28]	; (800daec <referee_processing_task+0x294>)
 800dace:	220d      	movs	r2, #13
 800dad0:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 3;
 800dad2:	4b06      	ldr	r3, [pc, #24]	; (800daec <referee_processing_task+0x294>)
 800dad4:	2203      	movs	r2, #3
 800dad6:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800dad8:	2100      	movs	r1, #0
 800dada:	2007      	movs	r0, #7
 800dadc:	f7f4 faf0 	bl	80020c0 <status_led>
			status_led(8, on_led);
 800dae0:	2100      	movs	r1, #0
 800dae2:	2008      	movs	r0, #8
 800dae4:	f7f4 faec 	bl	80020c0 <status_led>
 800dae8:	e02f      	b.n	800db4a <referee_processing_task+0x2f2>
 800daea:	bf00      	nop
 800daec:	200032f8 	.word	0x200032f8
 800daf0:	42700000 	.word	0x42700000
 800daf4:	2000337c 	.word	0x2000337c
 800daf8:	200016e4 	.word	0x200016e4
 800dafc:	20003310 	.word	0x20003310
 800db00:	200033cc 	.word	0x200033cc
 800db04:	200033d4 	.word	0x200033d4
 800db08:	20003354 	.word	0x20003354
 800db0c:	20003358 	.word	0x20003358
 800db10:	20003398 	.word	0x20003398
 800db14:	200033b0 	.word	0x200033b0
 800db18:	200033c0 	.word	0x200033c0
 800db1c:	2000339c 	.word	0x2000339c
 800db20:	200033ac 	.word	0x200033ac
 800db24:	200033c4 	.word	0x200033c4
 800db28:	200033c8 	.word	0x200033c8
 800db2c:	2000335c 	.word	0x2000335c
 800db30:	20003378 	.word	0x20003378
 800db34:	200033d8 	.word	0x200033d8
 800db38:	200033e0 	.word	0x200033e0
		} else {
			referee_limiters.feeding_speed = LV1_FEEDER;
 800db3c:	4b44      	ldr	r3, [pc, #272]	; (800dc50 <referee_processing_task+0x3f8>)
 800db3e:	f44f 7252 	mov.w	r2, #840	; 0x348
 800db42:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV1_PROJECTILE;
 800db44:	4b42      	ldr	r3, [pc, #264]	; (800dc50 <referee_processing_task+0x3f8>)
 800db46:	220d      	movs	r2, #13
 800db48:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800db4a:	4b42      	ldr	r3, [pc, #264]	; (800dc54 <referee_processing_task+0x3fc>)
 800db4c:	785b      	ldrb	r3, [r3, #1]
 800db4e:	2b00      	cmp	r3, #0
 800db50:	d06e      	beq.n	800dc30 <referee_processing_task+0x3d8>
			float temp_buffer = ((((float) ref_power_data.chassis_power_buffer)
 800db52:	4b41      	ldr	r3, [pc, #260]	; (800dc58 <referee_processing_task+0x400>)
 800db54:	891b      	ldrh	r3, [r3, #8]
 800db56:	ee07 3a90 	vmov	s15, r3
 800db5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
					/ 40) + 0.01);
 800db5e:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 800dc5c <referee_processing_task+0x404>
 800db62:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800db66:	ee16 0a90 	vmov	r0, s13
 800db6a:	f7f2 fced 	bl	8000548 <__aeabi_f2d>
 800db6e:	a336      	add	r3, pc, #216	; (adr r3, 800dc48 <referee_processing_task+0x3f0>)
 800db70:	e9d3 2300 	ldrd	r2, r3, [r3]
 800db74:	f7f2 fb8a 	bl	800028c <__adddf3>
 800db78:	4602      	mov	r2, r0
 800db7a:	460b      	mov	r3, r1
			float temp_buffer = ((((float) ref_power_data.chassis_power_buffer)
 800db7c:	4610      	mov	r0, r2
 800db7e:	4619      	mov	r1, r3
 800db80:	f7f3 f832 	bl	8000be8 <__aeabi_d2f>
 800db84:	4603      	mov	r3, r0
 800db86:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800db8a:	edd7 7a48 	vldr	s15, [r7, #288]	; 0x120
 800db8e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800db92:	eef4 7ac7 	vcmpe.f32	s15, s14
 800db96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db9a:	dd02      	ble.n	800dba2 <referee_processing_task+0x34a>
 800db9c:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800dba0:	e001      	b.n	800dba6 <referee_processing_task+0x34e>
 800dba2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800dba6:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
			referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800dbaa:	edd7 7a48 	vldr	s15, [r7, #288]	; 0x120
 800dbae:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800dbb2:	4b27      	ldr	r3, [pc, #156]	; (800dc50 <referee_processing_task+0x3f8>)
 800dbb4:	edc3 7a02 	vstr	s15, [r3, #8]
			float temp_power = ((((float) ref_power_data.chassis_power/(float) ref_robot_data.chassis_power_limit)
 800dbb8:	4b27      	ldr	r3, [pc, #156]	; (800dc58 <referee_processing_task+0x400>)
 800dbba:	ed93 7a01 	vldr	s14, [r3, #4]
 800dbbe:	4b25      	ldr	r3, [pc, #148]	; (800dc54 <referee_processing_task+0x3fc>)
 800dbc0:	8b1b      	ldrh	r3, [r3, #24]
 800dbc2:	ee07 3a90 	vmov	s15, r3
 800dbc6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dbca:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800dbce:	ee16 0a90 	vmov	r0, s13
 800dbd2:	f7f2 fcb9 	bl	8000548 <__aeabi_f2d>
					) * 0.5) + 0.5;
 800dbd6:	f04f 0200 	mov.w	r2, #0
 800dbda:	4b21      	ldr	r3, [pc, #132]	; (800dc60 <referee_processing_task+0x408>)
 800dbdc:	f7f2 fd0c 	bl	80005f8 <__aeabi_dmul>
 800dbe0:	4602      	mov	r2, r0
 800dbe2:	460b      	mov	r3, r1
 800dbe4:	4610      	mov	r0, r2
 800dbe6:	4619      	mov	r1, r3
 800dbe8:	f04f 0200 	mov.w	r2, #0
 800dbec:	4b1c      	ldr	r3, [pc, #112]	; (800dc60 <referee_processing_task+0x408>)
 800dbee:	f7f2 fb4d 	bl	800028c <__adddf3>
 800dbf2:	4602      	mov	r2, r0
 800dbf4:	460b      	mov	r3, r1
			float temp_power = ((((float) ref_power_data.chassis_power/(float) ref_robot_data.chassis_power_limit)
 800dbf6:	4610      	mov	r0, r2
 800dbf8:	4619      	mov	r1, r3
 800dbfa:	f7f2 fff5 	bl	8000be8 <__aeabi_d2f>
 800dbfe:	4603      	mov	r3, r0
 800dc00:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
			temp_power = (temp_power > 1) ? 1 : temp_power;
 800dc04:	edd7 7a47 	vldr	s15, [r7, #284]	; 0x11c
 800dc08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dc0c:	eef4 7ac7 	vcmpe.f32	s15, s14
 800dc10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc14:	dd02      	ble.n	800dc1c <referee_processing_task+0x3c4>
 800dc16:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800dc1a:	e001      	b.n	800dc20 <referee_processing_task+0x3c8>
 800dc1c:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800dc20:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
 800dc24:	480f      	ldr	r0, [pc, #60]	; (800dc64 <referee_processing_task+0x40c>)
 800dc26:	ed97 0a47 	vldr	s0, [r7, #284]	; 0x11c
 800dc2a:	f7ff fdf1 	bl	800d810 <arm_sqrt_f32>
 800dc2e:	e007      	b.n	800dc40 <referee_processing_task+0x3e8>
		} else {
			referee_limiters.wheel_buffer_limit = 1;
 800dc30:	4b07      	ldr	r3, [pc, #28]	; (800dc50 <referee_processing_task+0x3f8>)
 800dc32:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800dc36:	609a      	str	r2, [r3, #8]
			referee_limiters.wheel_power_limit = 1;
 800dc38:	4b05      	ldr	r3, [pc, #20]	; (800dc50 <referee_processing_task+0x3f8>)
 800dc3a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800dc3e:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(10);
 800dc40:	200a      	movs	r0, #10
 800dc42:	f00e ff25 	bl	801ca90 <vTaskDelay>
	while (1) {
 800dc46:	e635      	b.n	800d8b4 <referee_processing_task+0x5c>
 800dc48:	47ae147b 	.word	0x47ae147b
 800dc4c:	3f847ae1 	.word	0x3f847ae1
 800dc50:	200032f8 	.word	0x200032f8
 800dc54:	2000337c 	.word	0x2000337c
 800dc58:	2000339c 	.word	0x2000339c
 800dc5c:	42200000 	.word	0x42200000
 800dc60:	3fe00000 	.word	0x3fe00000
 800dc64:	200032fc 	.word	0x200032fc

0800dc68 <rtIsInf>:
 800dc68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc6a:	b083      	sub	sp, #12
 800dc6c:	af00      	add	r7, sp, #0
 800dc6e:	ed87 0b00 	vstr	d0, [r7]
 800dc72:	683c      	ldr	r4, [r7, #0]
 800dc74:	687b      	ldr	r3, [r7, #4]
 800dc76:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800dc7a:	2301      	movs	r3, #1
 800dc7c:	461e      	mov	r6, r3
 800dc7e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800dc82:	4b0f      	ldr	r3, [pc, #60]	; (800dcc0 <rtIsInf+0x58>)
 800dc84:	4620      	mov	r0, r4
 800dc86:	4629      	mov	r1, r5
 800dc88:	f7f2 ff50 	bl	8000b2c <__aeabi_dcmpun>
 800dc8c:	4603      	mov	r3, r0
 800dc8e:	2b00      	cmp	r3, #0
 800dc90:	d10b      	bne.n	800dcaa <rtIsInf+0x42>
 800dc92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800dc96:	4b0a      	ldr	r3, [pc, #40]	; (800dcc0 <rtIsInf+0x58>)
 800dc98:	4620      	mov	r0, r4
 800dc9a:	4629      	mov	r1, r5
 800dc9c:	f7f2 ff28 	bl	8000af0 <__aeabi_dcmple>
 800dca0:	4603      	mov	r3, r0
 800dca2:	2b00      	cmp	r3, #0
 800dca4:	d101      	bne.n	800dcaa <rtIsInf+0x42>
 800dca6:	2300      	movs	r3, #0
 800dca8:	461e      	mov	r6, r3
 800dcaa:	b2f3      	uxtb	r3, r6
 800dcac:	f083 0301 	eor.w	r3, r3, #1
 800dcb0:	b2db      	uxtb	r3, r3
 800dcb2:	f003 0301 	and.w	r3, r3, #1
 800dcb6:	b2db      	uxtb	r3, r3
 800dcb8:	4618      	mov	r0, r3
 800dcba:	370c      	adds	r7, #12
 800dcbc:	46bd      	mov	sp, r7
 800dcbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dcc0:	7fefffff 	.word	0x7fefffff

0800dcc4 <rtIsNaN>:
 800dcc4:	b580      	push	{r7, lr}
 800dcc6:	b082      	sub	sp, #8
 800dcc8:	af00      	add	r7, sp, #0
 800dcca:	ed87 0b00 	vstr	d0, [r7]
 800dcce:	e9d7 2300 	ldrd	r2, r3, [r7]
 800dcd2:	e9d7 0100 	ldrd	r0, r1, [r7]
 800dcd6:	f7f2 ff29 	bl	8000b2c <__aeabi_dcmpun>
 800dcda:	4603      	mov	r3, r0
 800dcdc:	2b00      	cmp	r3, #0
 800dcde:	d001      	beq.n	800dce4 <rtIsNaN+0x20>
 800dce0:	2301      	movs	r3, #1
 800dce2:	e000      	b.n	800dce6 <rtIsNaN+0x22>
 800dce4:	2300      	movs	r3, #0
 800dce6:	4618      	mov	r0, r3
 800dce8:	3708      	adds	r7, #8
 800dcea:	46bd      	mov	sp, r7
 800dcec:	bd80      	pop	{r7, pc}

0800dcee <startup_task>:
extern remote_cmd_t remote_cmd;
extern float pitch;
extern float yaw;
uint16_t error = 0b111111111;

void startup_task() {
 800dcee:	b580      	push	{r7, lr}
 800dcf0:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800dcf2:	f7f4 f9bf 	bl	8002074 <led_on>
	//buzzer_init();
	imu_init();
 800dcf6:	f7f3 ffc5 	bl	8001c84 <imu_init>
	led_green_off();
 800dcfa:	f7f4 f9ad 	bl	8002058 <led_green_off>
	start_micros_timer();
 800dcfe:	f7f4 fa9f 	bl	8002240 <start_micros_timer>
	led_toggle();
 800dd02:	f7f4 f9d5 	bl	80020b0 <led_toggle>

}
 800dd06:	bf00      	nop
 800dd08:	bd80      	pop	{r7, pc}
	...

0800dd0c <sbc_process_data>:
sbc_data_t sbc_data;
uint8_t sbc_new_data = 0;
uint8_t sbc_dma_buffer[20];
static uint8_t sbc_error;

void sbc_process_data() {
 800dd0c:	b580      	push	{r7, lr}
 800dd0e:	af00      	add	r7, sp, #0
	if (sbc_dma_buffer[0] == 0xa5 && sbc_dma_buffer[14] == 0x5a){
 800dd10:	4b13      	ldr	r3, [pc, #76]	; (800dd60 <sbc_process_data+0x54>)
 800dd12:	781b      	ldrb	r3, [r3, #0]
 800dd14:	2ba5      	cmp	r3, #165	; 0xa5
 800dd16:	d119      	bne.n	800dd4c <sbc_process_data+0x40>
 800dd18:	4b11      	ldr	r3, [pc, #68]	; (800dd60 <sbc_process_data+0x54>)
 800dd1a:	7b9b      	ldrb	r3, [r3, #14]
 800dd1c:	2b5a      	cmp	r3, #90	; 0x5a
 800dd1e:	d115      	bne.n	800dd4c <sbc_process_data+0x40>
		sbc_data.cmd_id = sbc_dma_buffer[1];
 800dd20:	4b0f      	ldr	r3, [pc, #60]	; (800dd60 <sbc_process_data+0x54>)
 800dd22:	785a      	ldrb	r2, [r3, #1]
 800dd24:	4b0f      	ldr	r3, [pc, #60]	; (800dd64 <sbc_process_data+0x58>)
 800dd26:	701a      	strb	r2, [r3, #0]
		memcpy(&sbc_data.data, sbc_dma_buffer+2,12);
 800dd28:	4a0f      	ldr	r2, [pc, #60]	; (800dd68 <sbc_process_data+0x5c>)
 800dd2a:	4b0e      	ldr	r3, [pc, #56]	; (800dd64 <sbc_process_data+0x58>)
 800dd2c:	3301      	adds	r3, #1
 800dd2e:	6810      	ldr	r0, [r2, #0]
 800dd30:	6851      	ldr	r1, [r2, #4]
 800dd32:	6892      	ldr	r2, [r2, #8]
 800dd34:	6018      	str	r0, [r3, #0]
 800dd36:	6059      	str	r1, [r3, #4]
 800dd38:	609a      	str	r2, [r3, #8]
		sbc_new_data = 1;
 800dd3a:	4b0c      	ldr	r3, [pc, #48]	; (800dd6c <sbc_process_data+0x60>)
 800dd3c:	2201      	movs	r2, #1
 800dd3e:	701a      	strb	r2, [r3, #0]
		sbc_last_time = HAL_GetTick();
 800dd40:	f001 fbfc 	bl	800f53c <HAL_GetTick>
 800dd44:	4603      	mov	r3, r0
 800dd46:	4a0a      	ldr	r2, [pc, #40]	; (800dd70 <sbc_process_data+0x64>)
 800dd48:	6013      	str	r3, [r2, #0]
 800dd4a:	e006      	b.n	800dd5a <sbc_process_data+0x4e>
	} else {
		sbc_error +=1;
 800dd4c:	4b09      	ldr	r3, [pc, #36]	; (800dd74 <sbc_process_data+0x68>)
 800dd4e:	781b      	ldrb	r3, [r3, #0]
 800dd50:	3301      	adds	r3, #1
 800dd52:	b2da      	uxtb	r2, r3
 800dd54:	4b07      	ldr	r3, [pc, #28]	; (800dd74 <sbc_process_data+0x68>)
 800dd56:	701a      	strb	r2, [r3, #0]
//	queue_append_bytes(&g_sbc_queue, sbc_dma_buffer, 15);
//	BaseType_t xHigherPriorityTaskWoken;
//	xHigherPriorityTaskWoken = pdFALSE;
//	vTaskNotifyGiveFromISR(telemetry_task_handle, &xHigherPriorityTaskWoken);
//	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
}
 800dd58:	bf00      	nop
 800dd5a:	bf00      	nop
 800dd5c:	bd80      	pop	{r7, pc}
 800dd5e:	bf00      	nop
 800dd60:	20003508 	.word	0x20003508
 800dd64:	200034f8 	.word	0x200034f8
 800dd68:	2000350a 	.word	0x2000350a
 800dd6c:	20003505 	.word	0x20003505
 800dd70:	20003010 	.word	0x20003010
 800dd74:	2000351c 	.word	0x2000351c

0800dd78 <telemetry_task>:

//lol more stuff to add
void telemetry_task(void *argument) {
 800dd78:	b590      	push	{r4, r7, lr}
 800dd7a:	b0d3      	sub	sp, #332	; 0x14c
 800dd7c:	af00      	add	r7, sp, #0
 800dd7e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dd82:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd86:	6018      	str	r0, [r3, #0]

	uint8_t send_buffer[256];
	uint32_t curr_time = HAL_GetTick();
 800dd88:	f001 fbd8 	bl	800f53c <HAL_GetTick>
 800dd8c:	f8c7 0144 	str.w	r0, [r7, #324]	; 0x144
	uint32_t game_data_time = curr_time;
 800dd90:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800dd94:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
	uint32_t imu_data_time = curr_time;
 800dd98:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800dd9c:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
	sbc_game_data_t sbc_game_tx;
	queue_init(&g_sbc_queue);
 800dda0:	4888      	ldr	r0, [pc, #544]	; (800dfc4 <telemetry_task+0x24c>)
 800dda2:	f7f4 fa71 	bl	8002288 <queue_init>

	sbc_game_tx.header = 0xA5;
 800dda6:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddaa:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddae:	22a5      	movs	r2, #165	; 0xa5
 800ddb0:	701a      	strb	r2, [r3, #0]
	sbc_game_tx.cmd_id = 0x80;
 800ddb2:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddb6:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddba:	2280      	movs	r2, #128	; 0x80
 800ddbc:	705a      	strb	r2, [r3, #1]
	sbc_game_tx.team = 1;
 800ddbe:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddc2:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddc6:	2201      	movs	r2, #1
 800ddc8:	709a      	strb	r2, [r3, #2]
	sbc_game_tx.robot_id = 1;
 800ddca:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddce:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddd2:	2201      	movs	r2, #1
 800ddd4:	70da      	strb	r2, [r3, #3]
	sbc_game_tx.robot_level = 1;
 800ddd6:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddda:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddde:	2201      	movs	r2, #1
 800dde0:	711a      	strb	r2, [r3, #4]
	sbc_game_tx.remaining_time = 1000;
 800dde2:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dde6:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ddea:	2200      	movs	r2, #0
 800ddec:	f062 0217 	orn	r2, r2, #23
 800ddf0:	715a      	strb	r2, [r3, #5]
 800ddf2:	2200      	movs	r2, #0
 800ddf4:	f042 0203 	orr.w	r2, r2, #3
 800ddf8:	719a      	strb	r2, [r3, #6]
	sbc_game_tx.ammo = 10;
 800ddfa:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800ddfe:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de02:	2200      	movs	r2, #0
 800de04:	f042 020a 	orr.w	r2, r2, #10
 800de08:	71da      	strb	r2, [r3, #7]
 800de0a:	2200      	movs	r2, #0
 800de0c:	721a      	strb	r2, [r3, #8]
	sbc_game_tx.end_byte = 0x5A;
 800de0e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de12:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de16:	225a      	movs	r2, #90	; 0x5a
 800de18:	739a      	strb	r2, [r3, #14]
	sbc_game_tx.padding[0] = 0;
 800de1a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de1e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de22:	2200      	movs	r2, #0
 800de24:	725a      	strb	r2, [r3, #9]
	sbc_game_tx.padding[1] = 0;
 800de26:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de2a:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de2e:	2200      	movs	r2, #0
 800de30:	729a      	strb	r2, [r3, #10]
	sbc_game_tx.padding[2] = 0;
 800de32:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de36:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de3a:	2200      	movs	r2, #0
 800de3c:	72da      	strb	r2, [r3, #11]
	sbc_game_tx.padding[3] = 0;
 800de3e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de42:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de46:	2200      	movs	r2, #0
 800de48:	731a      	strb	r2, [r3, #12]
	sbc_game_tx.padding[4] = 0;
 800de4a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de4e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800de52:	2200      	movs	r2, #0
 800de54:	735a      	strb	r2, [r3, #13]

	//insert sbc control here, end byte 0x5B
	sbc_imu_data_t sbc_imu_tx;
	sbc_imu_tx.cmd_id = 0x82;
 800de56:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de5a:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800de5e:	2282      	movs	r2, #130	; 0x82
 800de60:	705a      	strb	r2, [r3, #1]
	sbc_imu_tx.end_byte = 0x5C;
 800de62:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de66:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800de6a:	225c      	movs	r2, #92	; 0x5c
 800de6c:	739a      	strb	r2, [r3, #14]
	sbc_imu_tx.header = 0xA5;
 800de6e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de72:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800de76:	22a5      	movs	r2, #165	; 0xa5
 800de78:	701a      	strb	r2, [r3, #0]
	uint8_t tx_buffer[15];;
				init_xvr_usart(sbc_dma_buffer);
 800de7a:	4853      	ldr	r0, [pc, #332]	; (800dfc8 <telemetry_task+0x250>)
 800de7c:	f7f4 fe98 	bl	8002bb0 <init_xvr_usart>
//					break;
//				}
//			}
//		}

		if (ref_robot_data.robot_id != 0){
 800de80:	4b52      	ldr	r3, [pc, #328]	; (800dfcc <telemetry_task+0x254>)
 800de82:	781b      	ldrb	r3, [r3, #0]
 800de84:	2b00      	cmp	r3, #0
 800de86:	d047      	beq.n	800df18 <telemetry_task+0x1a0>
			sbc_game_tx.team = (ref_robot_data.robot_id < 100) ? 1 : 0;
 800de88:	4b50      	ldr	r3, [pc, #320]	; (800dfcc <telemetry_task+0x254>)
 800de8a:	781b      	ldrb	r3, [r3, #0]
 800de8c:	2b63      	cmp	r3, #99	; 0x63
 800de8e:	bf94      	ite	ls
 800de90:	2301      	movls	r3, #1
 800de92:	2300      	movhi	r3, #0
 800de94:	b2db      	uxtb	r3, r3
 800de96:	461a      	mov	r2, r3
 800de98:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800de9c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dea0:	709a      	strb	r2, [r3, #2]
			sbc_game_tx.robot_id = ref_robot_data.robot_id;
 800dea2:	4b4a      	ldr	r3, [pc, #296]	; (800dfcc <telemetry_task+0x254>)
 800dea4:	781a      	ldrb	r2, [r3, #0]
 800dea6:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800deaa:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800deae:	70da      	strb	r2, [r3, #3]
			sbc_game_tx.remaining_time = ref_game_state.stage_remain_time;
 800deb0:	4b47      	ldr	r3, [pc, #284]	; (800dfd0 <telemetry_task+0x258>)
 800deb2:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800deb6:	b29a      	uxth	r2, r3
 800deb8:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800debc:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dec0:	f8a3 2005 	strh.w	r2, [r3, #5]
			sbc_game_tx.ammo = ref_mag_data.magazine_17mm;
 800dec4:	4b43      	ldr	r3, [pc, #268]	; (800dfd4 <telemetry_task+0x25c>)
 800dec6:	881b      	ldrh	r3, [r3, #0]
 800dec8:	b29a      	uxth	r2, r3
 800deca:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dece:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800ded2:	f8a3 2007 	strh.w	r2, [r3, #7]
			memcpy(send_buffer, &sbc_game_tx, 15);
 800ded6:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800deda:	f5a3 7286 	sub.w	r2, r3, #268	; 0x10c
 800dede:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dee2:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dee6:	4614      	mov	r4, r2
 800dee8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800deea:	c407      	stmia	r4!, {r0, r1, r2}
 800deec:	8023      	strh	r3, [r4, #0]
 800deee:	3402      	adds	r4, #2
 800def0:	0c1b      	lsrs	r3, r3, #16
 800def2:	7023      	strb	r3, [r4, #0]
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800def4:	e002      	b.n	800defc <telemetry_task+0x184>
				vTaskDelay(1);
 800def6:	2001      	movs	r0, #1
 800def8:	f00e fdca 	bl	801ca90 <vTaskDelay>
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800defc:	4b36      	ldr	r3, [pc, #216]	; (800dfd8 <telemetry_task+0x260>)
 800defe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800df02:	b2db      	uxtb	r3, r3
 800df04:	2b21      	cmp	r3, #33	; 0x21
 800df06:	d0f6      	beq.n	800def6 <telemetry_task+0x17e>
			}
			HAL_UART_Transmit_IT(&SBC_UART, send_buffer, 15);
 800df08:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800df0c:	220f      	movs	r2, #15
 800df0e:	4619      	mov	r1, r3
 800df10:	4831      	ldr	r0, [pc, #196]	; (800dfd8 <telemetry_task+0x260>)
 800df12:	f008 fe00 	bl	8016b16 <HAL_UART_Transmit_IT>
 800df16:	e043      	b.n	800dfa0 <telemetry_task+0x228>
		} else {
			sbc_game_tx.team = 1;
 800df18:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df1c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df20:	2201      	movs	r2, #1
 800df22:	709a      	strb	r2, [r3, #2]
			sbc_game_tx.robot_id = 0;
 800df24:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df28:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df2c:	2200      	movs	r2, #0
 800df2e:	70da      	strb	r2, [r3, #3]
			sbc_game_tx.remaining_time = 999;
 800df30:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df34:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df38:	2200      	movs	r2, #0
 800df3a:	f062 0218 	orn	r2, r2, #24
 800df3e:	715a      	strb	r2, [r3, #5]
 800df40:	2200      	movs	r2, #0
 800df42:	f042 0203 	orr.w	r2, r2, #3
 800df46:	719a      	strb	r2, [r3, #6]
			sbc_game_tx.ammo = 999;
 800df48:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df4c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df50:	2200      	movs	r2, #0
 800df52:	f062 0218 	orn	r2, r2, #24
 800df56:	71da      	strb	r2, [r3, #7]
 800df58:	2200      	movs	r2, #0
 800df5a:	f042 0203 	orr.w	r2, r2, #3
 800df5e:	721a      	strb	r2, [r3, #8]
			memcpy(send_buffer, &sbc_game_tx, 15);
 800df60:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df64:	f5a3 7286 	sub.w	r2, r3, #268	; 0x10c
 800df68:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df6c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df70:	4614      	mov	r4, r2
 800df72:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800df74:	c407      	stmia	r4!, {r0, r1, r2}
 800df76:	8023      	strh	r3, [r4, #0]
 800df78:	3402      	adds	r4, #2
 800df7a:	0c1b      	lsrs	r3, r3, #16
 800df7c:	7023      	strb	r3, [r4, #0]
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800df7e:	e002      	b.n	800df86 <telemetry_task+0x20e>
				vTaskDelay(1);
 800df80:	2001      	movs	r0, #1
 800df82:	f00e fd85 	bl	801ca90 <vTaskDelay>
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800df86:	4b14      	ldr	r3, [pc, #80]	; (800dfd8 <telemetry_task+0x260>)
 800df88:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800df8c:	b2db      	uxtb	r3, r3
 800df8e:	2b21      	cmp	r3, #33	; 0x21
 800df90:	d0f6      	beq.n	800df80 <telemetry_task+0x208>
			}
			HAL_UART_Transmit_IT(&SBC_UART, send_buffer, 15);
 800df92:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800df96:	220f      	movs	r2, #15
 800df98:	4619      	mov	r1, r3
 800df9a:	480f      	ldr	r0, [pc, #60]	; (800dfd8 <telemetry_task+0x260>)
 800df9c:	f008 fdbb 	bl	8016b16 <HAL_UART_Transmit_IT>
		}

		if (sbc_error >= 1){
 800dfa0:	4b0e      	ldr	r3, [pc, #56]	; (800dfdc <telemetry_task+0x264>)
 800dfa2:	781b      	ldrb	r3, [r3, #0]
 800dfa4:	2b00      	cmp	r3, #0
 800dfa6:	d008      	beq.n	800dfba <telemetry_task+0x242>
			HAL_UART_DMAStop(&SBC_UART);
 800dfa8:	480b      	ldr	r0, [pc, #44]	; (800dfd8 <telemetry_task+0x260>)
 800dfaa:	f008 fe77 	bl	8016c9c <HAL_UART_DMAStop>
			init_xvr_usart(sbc_dma_buffer);
 800dfae:	4806      	ldr	r0, [pc, #24]	; (800dfc8 <telemetry_task+0x250>)
 800dfb0:	f7f4 fdfe 	bl	8002bb0 <init_xvr_usart>
			sbc_error = 0;
 800dfb4:	4b09      	ldr	r3, [pc, #36]	; (800dfdc <telemetry_task+0x264>)
 800dfb6:	2200      	movs	r2, #0
 800dfb8:	701a      	strb	r2, [r3, #0]
		}
		vTaskDelay(1000);
 800dfba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800dfbe:	f00e fd67 	bl	801ca90 <vTaskDelay>
		if (ref_robot_data.robot_id != 0){
 800dfc2:	e75d      	b.n	800de80 <telemetry_task+0x108>
 800dfc4:	200033e8 	.word	0x200033e8
 800dfc8:	20003508 	.word	0x20003508
 800dfcc:	2000337c 	.word	0x2000337c
 800dfd0:	20003354 	.word	0x20003354
 800dfd4:	200033d8 	.word	0x200033d8
 800dfd8:	2000165c 	.word	0x2000165c
 800dfdc:	2000351c 	.word	0x2000351c

0800dfe0 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800dfe0:	b580      	push	{r7, lr}
 800dfe2:	b0c4      	sub	sp, #272	; 0x110
 800dfe4:	af00      	add	r7, sp, #0
 800dfe6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800dfea:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800dfee:	6018      	str	r0, [r3, #0]
 800dff0:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800dff4:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800dff8:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800dffa:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800dffe:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800e002:	2200      	movs	r2, #0
 800e004:	601a      	str	r2, [r3, #0]
 800e006:	3304      	adds	r3, #4
 800e008:	22fc      	movs	r2, #252	; 0xfc
 800e00a:	2100      	movs	r1, #0
 800e00c:	4618      	mov	r0, r3
 800e00e:	f011 fab0 	bl	801f572 <memset>
	memcpy(blank_buffer, buffer, *len);
 800e012:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e016:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800e01a:	681b      	ldr	r3, [r3, #0]
 800e01c:	681a      	ldr	r2, [r3, #0]
 800e01e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e022:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800e026:	f107 0010 	add.w	r0, r7, #16
 800e02a:	6819      	ldr	r1, [r3, #0]
 800e02c:	f011 fa93 	bl	801f556 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800e030:	4a1a      	ldr	r2, [pc, #104]	; (800e09c <usb_vcp_processing+0xbc>)
 800e032:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e036:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800e03a:	4610      	mov	r0, r2
 800e03c:	4619      	mov	r1, r3
 800e03e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e042:	461a      	mov	r2, r3
 800e044:	f011 fa87 	bl	801f556 <memcpy>
	usb_input_len = *len;
 800e048:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e04c:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800e050:	681b      	ldr	r3, [r3, #0]
 800e052:	681b      	ldr	r3, [r3, #0]
 800e054:	4a12      	ldr	r2, [pc, #72]	; (800e0a0 <usb_vcp_processing+0xc0>)
 800e056:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800e058:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e05c:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800e060:	2200      	movs	r2, #0
 800e062:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800e064:	4b0f      	ldr	r3, [pc, #60]	; (800e0a4 <usb_vcp_processing+0xc4>)
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	f107 020c 	add.w	r2, r7, #12
 800e06c:	4611      	mov	r1, r2
 800e06e:	4618      	mov	r0, r3
 800e070:	f00d fffb 	bl	801c06a <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800e074:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e078:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800e07c:	681b      	ldr	r3, [r3, #0]
 800e07e:	2b00      	cmp	r3, #0
 800e080:	d007      	beq.n	800e092 <usb_vcp_processing+0xb2>
 800e082:	4b09      	ldr	r3, [pc, #36]	; (800e0a8 <usb_vcp_processing+0xc8>)
 800e084:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e088:	601a      	str	r2, [r3, #0]
 800e08a:	f3bf 8f4f 	dsb	sy
 800e08e:	f3bf 8f6f 	isb	sy
}
 800e092:	bf00      	nop
 800e094:	f507 7788 	add.w	r7, r7, #272	; 0x110
 800e098:	46bd      	mov	sp, r7
 800e09a:	bd80      	pop	{r7, pc}
 800e09c:	20003520 	.word	0x20003520
 800e0a0:	20003620 	.word	0x20003620
 800e0a4:	200004d4 	.word	0x200004d4
 800e0a8:	e000ed04 	.word	0xe000ed04

0800e0ac <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800e0ac:	b580      	push	{r7, lr}
 800e0ae:	b082      	sub	sp, #8
 800e0b0:	af00      	add	r7, sp, #0
 800e0b2:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800e0b4:	2064      	movs	r0, #100	; 0x64
 800e0b6:	f00e fceb 	bl	801ca90 <vTaskDelay>
 800e0ba:	e7fb      	b.n	800e0b4 <usb_task+0x8>
 800e0bc:	0000      	movs	r0, r0
	...

0800e0c0 <balancing_task>:
//double r1;
//double r4;
double k_check[12] = {0};
float check_x = 0;

void balancing_task(void *argument) {
 800e0c0:	b5b0      	push	{r4, r5, r7, lr}
 800e0c2:	b08a      	sub	sp, #40	; 0x28
 800e0c4:	af00      	add	r7, sp, #0
 800e0c6:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800e0c8:	f04f 0200 	mov.w	r2, #0
 800e0cc:	f04f 0300 	mov.w	r3, #0
 800e0d0:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double endtime = 0;
 800e0d4:	f04f 0200 	mov.w	r2, #0
 800e0d8:	f04f 0300 	mov.w	r3, #0
 800e0dc:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double dt;
    TickType_t start_time;
    Ctrl_Init();
 800e0e0:	f001 f982 	bl	800f3e8 <Ctrl_Init>
    while (1) {
        endtime = get_microseconds();
 800e0e4:	f7f4 f8c4 	bl	8002270 <get_microseconds>
 800e0e8:	4603      	mov	r3, r0
 800e0ea:	4618      	mov	r0, r3
 800e0ec:	f7f2 fa0a 	bl	8000504 <__aeabi_ui2d>
 800e0f0:	4602      	mov	r2, r0
 800e0f2:	460b      	mov	r3, r1
 800e0f4:	e9c7 2306 	strd	r2, r3, [r7, #24]
        dt = endtime - starttime;
 800e0f8:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e0fc:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800e100:	f7f2 f8c2 	bl	8000288 <__aeabi_dsub>
 800e104:	4602      	mov	r2, r0
 800e106:	460b      	mov	r3, r1
 800e108:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800e10c:	f00e fe10 	bl	801cd30 <xTaskGetTickCount>
 800e110:	4603      	mov	r3, r0
 800e112:	60fb      	str	r3, [r7, #12]
        starttime = get_microseconds();
 800e114:	f7f4 f8ac 	bl	8002270 <get_microseconds>
 800e118:	4603      	mov	r3, r0
 800e11a:	4618      	mov	r0, r3
 800e11c:	f7f2 f9f2 	bl	8000504 <__aeabi_ui2d>
 800e120:	4602      	mov	r2, r0
 800e122:	460b      	mov	r3, r1
 800e124:	e9c7 2308 	strd	r2, r3, [r7, #32]

        target.speedCmd = 0;//((float)g_remote_cmd.left_y/660)*1.0f;
 800e128:	4b61      	ldr	r3, [pc, #388]	; (800e2b0 <balancing_task+0x1f0>)
 800e12a:	f04f 0200 	mov.w	r2, #0
 800e12e:	605a      	str	r2, [r3, #4]
        target.yawSpeedCmd = 0;//-((float)g_remote_cmd.left_x/660)*2.0f;
 800e130:	4b5f      	ldr	r3, [pc, #380]	; (800e2b0 <balancing_task+0x1f0>)
 800e132:	f04f 0200 	mov.w	r2, #0
 800e136:	60da      	str	r2, [r3, #12]
        target.legLength = 0;//((float)g_remote_cmd.right_y/660)*0.04 + 0.12f;
 800e138:	4b5d      	ldr	r3, [pc, #372]	; (800e2b0 <balancing_task+0x1f0>)
 800e13a:	f04f 0200 	mov.w	r2, #0
 800e13e:	619a      	str	r2, [r3, #24]
        leftJoint[1].angle = (double)can_motors[8].angle_rad;
 800e140:	4b5c      	ldr	r3, [pc, #368]	; (800e2b4 <balancing_task+0x1f4>)
 800e142:	f503 63f3 	add.w	r3, r3, #1944	; 0x798
 800e146:	681b      	ldr	r3, [r3, #0]
 800e148:	4618      	mov	r0, r3
 800e14a:	f7f2 f9fd 	bl	8000548 <__aeabi_f2d>
 800e14e:	4602      	mov	r2, r0
 800e150:	460b      	mov	r3, r1
 800e152:	4959      	ldr	r1, [pc, #356]	; (800e2b8 <balancing_task+0x1f8>)
 800e154:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
        leftJoint[1].speed = (double)can_motors[8].speed;
 800e158:	4b56      	ldr	r3, [pc, #344]	; (800e2b4 <balancing_task+0x1f4>)
 800e15a:	f503 63f4 	add.w	r3, r3, #1952	; 0x7a0
 800e15e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e162:	4955      	ldr	r1, [pc, #340]	; (800e2b8 <balancing_task+0x1f8>)
 800e164:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
        leftJoint[0].angle = (double)can_motors[9].angle_rad;
 800e168:	4b52      	ldr	r3, [pc, #328]	; (800e2b4 <balancing_task+0x1f4>)
 800e16a:	f603 0388 	addw	r3, r3, #2184	; 0x888
 800e16e:	681b      	ldr	r3, [r3, #0]
 800e170:	4618      	mov	r0, r3
 800e172:	f7f2 f9e9 	bl	8000548 <__aeabi_f2d>
 800e176:	4602      	mov	r2, r0
 800e178:	460b      	mov	r3, r1
 800e17a:	494f      	ldr	r1, [pc, #316]	; (800e2b8 <balancing_task+0x1f8>)
 800e17c:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftJoint[0].speed = (double)can_motors[9].speed;
 800e180:	4b4c      	ldr	r3, [pc, #304]	; (800e2b4 <balancing_task+0x1f4>)
 800e182:	f503 6309 	add.w	r3, r3, #2192	; 0x890
 800e186:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e18a:	494b      	ldr	r1, [pc, #300]	; (800e2b8 <balancing_task+0x1f8>)
 800e18c:	e9c1 2300 	strd	r2, r3, [r1]
        rightJoint[1].angle = (double)can_motors[16].angle_rad;
 800e190:	4b48      	ldr	r3, [pc, #288]	; (800e2b4 <balancing_task+0x1f4>)
 800e192:	f603 7318 	addw	r3, r3, #3864	; 0xf18
 800e196:	681b      	ldr	r3, [r3, #0]
 800e198:	4618      	mov	r0, r3
 800e19a:	f7f2 f9d5 	bl	8000548 <__aeabi_f2d>
 800e19e:	4602      	mov	r2, r0
 800e1a0:	460b      	mov	r3, r1
 800e1a2:	4946      	ldr	r1, [pc, #280]	; (800e2bc <balancing_task+0x1fc>)
 800e1a4:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
        rightJoint[1].speed = (double)can_motors[16].speed;
 800e1a8:	4b42      	ldr	r3, [pc, #264]	; (800e2b4 <balancing_task+0x1f4>)
 800e1aa:	f503 6372 	add.w	r3, r3, #3872	; 0xf20
 800e1ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1b2:	4942      	ldr	r1, [pc, #264]	; (800e2bc <balancing_task+0x1fc>)
 800e1b4:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
        rightJoint[0].angle = (double)can_motors[17].angle_rad;
 800e1b8:	4b3e      	ldr	r3, [pc, #248]	; (800e2b4 <balancing_task+0x1f4>)
 800e1ba:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e1be:	689b      	ldr	r3, [r3, #8]
 800e1c0:	4618      	mov	r0, r3
 800e1c2:	f7f2 f9c1 	bl	8000548 <__aeabi_f2d>
 800e1c6:	4602      	mov	r2, r0
 800e1c8:	460b      	mov	r3, r1
 800e1ca:	493c      	ldr	r1, [pc, #240]	; (800e2bc <balancing_task+0x1fc>)
 800e1cc:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightJoint[0].speed = (double)can_motors[17].speed;
 800e1d0:	4b38      	ldr	r3, [pc, #224]	; (800e2b4 <balancing_task+0x1f4>)
 800e1d2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e1d6:	3310      	adds	r3, #16
 800e1d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1dc:	4937      	ldr	r1, [pc, #220]	; (800e2bc <balancing_task+0x1fc>)
 800e1de:	e9c1 2300 	strd	r2, r3, [r1]
        leftWheel.angle = (double)can_motors[1].angle_rad/19.2;
 800e1e2:	4b34      	ldr	r3, [pc, #208]	; (800e2b4 <balancing_task+0x1f4>)
 800e1e4:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800e1e8:	4618      	mov	r0, r3
 800e1ea:	f7f2 f9ad 	bl	8000548 <__aeabi_f2d>
 800e1ee:	a32c      	add	r3, pc, #176	; (adr r3, 800e2a0 <balancing_task+0x1e0>)
 800e1f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1f4:	f7f2 fb2a 	bl	800084c <__aeabi_ddiv>
 800e1f8:	4602      	mov	r2, r0
 800e1fa:	460b      	mov	r3, r1
 800e1fc:	4930      	ldr	r1, [pc, #192]	; (800e2c0 <balancing_task+0x200>)
 800e1fe:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightWheel.angle = (double)can_motors[0].angle_rad/19.2;
 800e202:	4b2c      	ldr	r3, [pc, #176]	; (800e2b4 <balancing_task+0x1f4>)
 800e204:	699b      	ldr	r3, [r3, #24]
 800e206:	4618      	mov	r0, r3
 800e208:	f7f2 f99e 	bl	8000548 <__aeabi_f2d>
 800e20c:	a324      	add	r3, pc, #144	; (adr r3, 800e2a0 <balancing_task+0x1e0>)
 800e20e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e212:	f7f2 fb1b 	bl	800084c <__aeabi_ddiv>
 800e216:	4602      	mov	r2, r0
 800e218:	460b      	mov	r3, r1
 800e21a:	492a      	ldr	r1, [pc, #168]	; (800e2c4 <balancing_task+0x204>)
 800e21c:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftWheel.speed = -(double)can_motors[1].raw_data.rpm * (2*PI/60) /19.2;
 800e220:	4b24      	ldr	r3, [pc, #144]	; (800e2b4 <balancing_task+0x1f4>)
 800e222:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	; 0xf8
 800e226:	4618      	mov	r0, r3
 800e228:	f7f2 f97c 	bl	8000524 <__aeabi_i2d>
 800e22c:	4602      	mov	r2, r0
 800e22e:	460b      	mov	r3, r1
 800e230:	4614      	mov	r4, r2
 800e232:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 800e236:	a31c      	add	r3, pc, #112	; (adr r3, 800e2a8 <balancing_task+0x1e8>)
 800e238:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e23c:	4620      	mov	r0, r4
 800e23e:	4629      	mov	r1, r5
 800e240:	f7f2 f9da 	bl	80005f8 <__aeabi_dmul>
 800e244:	4602      	mov	r2, r0
 800e246:	460b      	mov	r3, r1
 800e248:	4610      	mov	r0, r2
 800e24a:	4619      	mov	r1, r3
 800e24c:	a314      	add	r3, pc, #80	; (adr r3, 800e2a0 <balancing_task+0x1e0>)
 800e24e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e252:	f7f2 fafb 	bl	800084c <__aeabi_ddiv>
 800e256:	4602      	mov	r2, r0
 800e258:	460b      	mov	r3, r1
 800e25a:	4919      	ldr	r1, [pc, #100]	; (800e2c0 <balancing_task+0x200>)
 800e25c:	e9c1 2300 	strd	r2, r3, [r1]
        rightWheel.speed = (double)can_motors[0].raw_data.rpm * (2*PI/60) /19.2;
 800e260:	4b14      	ldr	r3, [pc, #80]	; (800e2b4 <balancing_task+0x1f4>)
 800e262:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800e266:	4618      	mov	r0, r3
 800e268:	f7f2 f95c 	bl	8000524 <__aeabi_i2d>
 800e26c:	a30e      	add	r3, pc, #56	; (adr r3, 800e2a8 <balancing_task+0x1e8>)
 800e26e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e272:	f7f2 f9c1 	bl	80005f8 <__aeabi_dmul>
 800e276:	4602      	mov	r2, r0
 800e278:	460b      	mov	r3, r1
 800e27a:	4610      	mov	r0, r2
 800e27c:	4619      	mov	r1, r3
 800e27e:	a308      	add	r3, pc, #32	; (adr r3, 800e2a0 <balancing_task+0x1e0>)
 800e280:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e284:	f7f2 fae2 	bl	800084c <__aeabi_ddiv>
 800e288:	4602      	mov	r2, r0
 800e28a:	460b      	mov	r3, r1
 800e28c:	490d      	ldr	r1, [pc, #52]	; (800e2c4 <balancing_task+0x204>)
 800e28e:	e9c1 2300 	strd	r2, r3, [r1]

        vTaskDelayUntil(&start_time, 4);
 800e292:	f107 030c 	add.w	r3, r7, #12
 800e296:	2104      	movs	r1, #4
 800e298:	4618      	mov	r0, r3
 800e29a:	f00e fb7b 	bl	801c994 <vTaskDelayUntil>
        endtime = get_microseconds();
 800e29e:	e721      	b.n	800e0e4 <balancing_task+0x24>
 800e2a0:	33333333 	.word	0x33333333
 800e2a4:	40333333 	.word	0x40333333
 800e2a8:	00000000 	.word	0x00000000
 800e2ac:	3fbaceea 	.word	0x3fbaceea
 800e2b0:	20000028 	.word	0x20000028
 800e2b4:	200018a8 	.word	0x200018a8
 800e2b8:	20003628 	.word	0x20003628
 800e2bc:	200036b8 	.word	0x200036b8
 800e2c0:	20003748 	.word	0x20003748
 800e2c4:	20003790 	.word	0x20003790

0800e2c8 <Ctrl_TargetUpdateTask>:
    }
}

void Ctrl_TargetUpdateTask()
{
 800e2c8:	b580      	push	{r7, lr}
 800e2ca:	b084      	sub	sp, #16
 800e2cc:	af00      	add	r7, sp, #0
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e2ce:	f00e fd2f 	bl	801cd30 <xTaskGetTickCount>
 800e2d2:	4603      	mov	r3, r0
 800e2d4:	607b      	str	r3, [r7, #4]
	float speedSlopeStep = 0.005f;
 800e2d6:	4b56      	ldr	r3, [pc, #344]	; (800e430 <Ctrl_TargetUpdateTask+0x168>)
 800e2d8:	60fb      	str	r3, [r7, #12]
	while(1){
		//根据当前腿长计算速度斜坡步长(腿越短越稳定，加减速斜率越大)
			float legLength = (leftLegPos.length + rightLegPos.length) / 2;
 800e2da:	4b56      	ldr	r3, [pc, #344]	; (800e434 <Ctrl_TargetUpdateTask+0x16c>)
 800e2dc:	ed93 7a01 	vldr	s14, [r3, #4]
 800e2e0:	4b55      	ldr	r3, [pc, #340]	; (800e438 <Ctrl_TargetUpdateTask+0x170>)
 800e2e2:	edd3 7a01 	vldr	s15, [r3, #4]
 800e2e6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e2ea:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800e2ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800e2f2:	edc7 7a02 	vstr	s15, [r7, #8]
			speedSlopeStep = -(legLength - 0.12f) * 0.03f + 0.005f;
 800e2f6:	edd7 7a02 	vldr	s15, [r7, #8]
 800e2fa:	ed9f 7a50 	vldr	s14, [pc, #320]	; 800e43c <Ctrl_TargetUpdateTask+0x174>
 800e2fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e302:	eef1 7a67 	vneg.f32	s15, s15
 800e306:	ed9f 7a4e 	vldr	s14, [pc, #312]	; 800e440 <Ctrl_TargetUpdateTask+0x178>
 800e30a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e30e:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 800e444 <Ctrl_TargetUpdateTask+0x17c>
 800e312:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e316:	edc7 7a03 	vstr	s15, [r7, #12]
			// 		target.speed -= speedSlopeStep;
			// }
            //target.speed = target.speedCmd;

			//计算位置目标，并限制在当前位置的±0.1m内
			target.position += target.speed * 0.004f;
 800e31a:	4b4b      	ldr	r3, [pc, #300]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e31c:	ed93 7a00 	vldr	s14, [r3]
 800e320:	4b49      	ldr	r3, [pc, #292]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e322:	edd3 7a02 	vldr	s15, [r3, #8]
 800e326:	eddf 6a49 	vldr	s13, [pc, #292]	; 800e44c <Ctrl_TargetUpdateTask+0x184>
 800e32a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e32e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e332:	4b45      	ldr	r3, [pc, #276]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e334:	edc3 7a00 	vstr	s15, [r3]
			if(target.position - stateVar.x > 0.1f)
 800e338:	4b43      	ldr	r3, [pc, #268]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e33a:	ed93 7a00 	vldr	s14, [r3]
 800e33e:	4b44      	ldr	r3, [pc, #272]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e340:	edd3 7a02 	vldr	s15, [r3, #8]
 800e344:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e348:	ed9f 7a42 	vldr	s14, [pc, #264]	; 800e454 <Ctrl_TargetUpdateTask+0x18c>
 800e34c:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e354:	dd0a      	ble.n	800e36c <Ctrl_TargetUpdateTask+0xa4>
				target.position = stateVar.x + 0.1f;
 800e356:	4b3e      	ldr	r3, [pc, #248]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e358:	edd3 7a02 	vldr	s15, [r3, #8]
 800e35c:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 800e454 <Ctrl_TargetUpdateTask+0x18c>
 800e360:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e364:	4b38      	ldr	r3, [pc, #224]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e366:	edc3 7a00 	vstr	s15, [r3]
 800e36a:	e018      	b.n	800e39e <Ctrl_TargetUpdateTask+0xd6>
			else if(target.position - stateVar.x < -0.1f)
 800e36c:	4b36      	ldr	r3, [pc, #216]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e36e:	ed93 7a00 	vldr	s14, [r3]
 800e372:	4b37      	ldr	r3, [pc, #220]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e374:	edd3 7a02 	vldr	s15, [r3, #8]
 800e378:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e37c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 800e458 <Ctrl_TargetUpdateTask+0x190>
 800e380:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e388:	d509      	bpl.n	800e39e <Ctrl_TargetUpdateTask+0xd6>
				target.position = stateVar.x - 0.1f;
 800e38a:	4b31      	ldr	r3, [pc, #196]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e38c:	edd3 7a02 	vldr	s15, [r3, #8]
 800e390:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800e454 <Ctrl_TargetUpdateTask+0x18c>
 800e394:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e398:	4b2b      	ldr	r3, [pc, #172]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e39a:	edc3 7a00 	vstr	s15, [r3]

			//限制速度目标在当前速度的±0.3m/s内
			if(target.speed - stateVar.dx > 1.0f)
 800e39e:	4b2a      	ldr	r3, [pc, #168]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e3a0:	ed93 7a02 	vldr	s14, [r3, #8]
 800e3a4:	4b2a      	ldr	r3, [pc, #168]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e3a6:	edd3 7a03 	vldr	s15, [r3, #12]
 800e3aa:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e3ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e3b2:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e3b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3ba:	dd0a      	ble.n	800e3d2 <Ctrl_TargetUpdateTask+0x10a>
				target.speed = stateVar.dx + 1.0f;
 800e3bc:	4b24      	ldr	r3, [pc, #144]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e3be:	edd3 7a03 	vldr	s15, [r3, #12]
 800e3c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e3c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e3ca:	4b1f      	ldr	r3, [pc, #124]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e3cc:	edc3 7a02 	vstr	s15, [r3, #8]
 800e3d0:	e018      	b.n	800e404 <Ctrl_TargetUpdateTask+0x13c>
			else if(target.speed - stateVar.dx < -1.0f)
 800e3d2:	4b1d      	ldr	r3, [pc, #116]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e3d4:	ed93 7a02 	vldr	s14, [r3, #8]
 800e3d8:	4b1d      	ldr	r3, [pc, #116]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e3da:	edd3 7a03 	vldr	s15, [r3, #12]
 800e3de:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e3e2:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 800e3e6:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e3ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e3ee:	d509      	bpl.n	800e404 <Ctrl_TargetUpdateTask+0x13c>
				target.speed = stateVar.dx - 1.0f;
 800e3f0:	4b17      	ldr	r3, [pc, #92]	; (800e450 <Ctrl_TargetUpdateTask+0x188>)
 800e3f2:	edd3 7a03 	vldr	s15, [r3, #12]
 800e3f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e3fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e3fe:	4b12      	ldr	r3, [pc, #72]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e400:	edc3 7a02 	vstr	s15, [r3, #8]

			//计算yaw方位角目标
			target.yawAngle += target.yawSpeedCmd * 0.004f;
 800e404:	4b10      	ldr	r3, [pc, #64]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e406:	ed93 7a04 	vldr	s14, [r3, #16]
 800e40a:	4b0f      	ldr	r3, [pc, #60]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e40c:	edd3 7a03 	vldr	s15, [r3, #12]
 800e410:	eddf 6a0e 	vldr	s13, [pc, #56]	; 800e44c <Ctrl_TargetUpdateTask+0x184>
 800e414:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e418:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e41c:	4b0a      	ldr	r3, [pc, #40]	; (800e448 <Ctrl_TargetUpdateTask+0x180>)
 800e41e:	edc3 7a04 	vstr	s15, [r3, #16]
			vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 800e422:	1d3b      	adds	r3, r7, #4
 800e424:	2104      	movs	r1, #4
 800e426:	4618      	mov	r0, r3
 800e428:	f00e fab4 	bl	801c994 <vTaskDelayUntil>
	while(1){
 800e42c:	e755      	b.n	800e2da <Ctrl_TargetUpdateTask+0x12>
 800e42e:	bf00      	nop
 800e430:	3ba3d70a 	.word	0x3ba3d70a
 800e434:	200037d8 	.word	0x200037d8
 800e438:	200037ec 	.word	0x200037ec
 800e43c:	3df5c28f 	.word	0x3df5c28f
 800e440:	3cf5c28f 	.word	0x3cf5c28f
 800e444:	3ba3d70a 	.word	0x3ba3d70a
 800e448:	20000028 	.word	0x20000028
 800e44c:	3b83126f 	.word	0x3b83126f
 800e450:	20003800 	.word	0x20003800
 800e454:	3dcccccd 	.word	0x3dcccccd
 800e458:	bdcccccd 	.word	0xbdcccccd

0800e45c <LegPos_UpdateTask>:
	}
}

void LegPos_UpdateTask(void *arg)
{
 800e45c:	b580      	push	{r7, lr}
 800e45e:	b08e      	sub	sp, #56	; 0x38
 800e460:	af00      	add	r7, sp, #0
 800e462:	6078      	str	r0, [r7, #4]
	const float lpfRatio = 0.5f; //低通滤波系数(新值的权重)
 800e464:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 800e468:	62fb      	str	r3, [r7, #44]	; 0x2c
	float lastLeftDLength = 0, lastRightDLength = 0;
 800e46a:	f04f 0300 	mov.w	r3, #0
 800e46e:	637b      	str	r3, [r7, #52]	; 0x34
 800e470:	f04f 0300 	mov.w	r3, #0
 800e474:	633b      	str	r3, [r7, #48]	; 0x30
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e476:	f00e fc5b 	bl	801cd30 <xTaskGetTickCount>
 800e47a:	4603      	mov	r3, r0
 800e47c:	62bb      	str	r3, [r7, #40]	; 0x28
	while (1)
	{
		double legPos[2], legSpd[2];

		//计算左腿位置
		leg_pos(leftJoint[1].angle, leftJoint[0].angle, legPos);
 800e47e:	4b81      	ldr	r3, [pc, #516]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e480:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800e484:	4b7f      	ldr	r3, [pc, #508]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e486:	ed93 6b02 	vldr	d6, [r3, #8]
 800e48a:	f107 0318 	add.w	r3, r7, #24
 800e48e:	4618      	mov	r0, r3
 800e490:	eeb0 1a46 	vmov.f32	s2, s12
 800e494:	eef0 1a66 	vmov.f32	s3, s13
 800e498:	eeb0 0a47 	vmov.f32	s0, s14
 800e49c:	eef0 0a67 	vmov.f32	s1, s15
 800e4a0:	f7fb f8aa 	bl	80095f8 <leg_pos>
		leftLegPos.length = legPos[0];
 800e4a4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800e4a8:	4610      	mov	r0, r2
 800e4aa:	4619      	mov	r1, r3
 800e4ac:	f7f2 fb9c 	bl	8000be8 <__aeabi_d2f>
 800e4b0:	4603      	mov	r3, r0
 800e4b2:	4a75      	ldr	r2, [pc, #468]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e4b4:	6053      	str	r3, [r2, #4]
		leftLegPos.angle = legPos[1];
 800e4b6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e4ba:	4610      	mov	r0, r2
 800e4bc:	4619      	mov	r1, r3
 800e4be:	f7f2 fb93 	bl	8000be8 <__aeabi_d2f>
 800e4c2:	4603      	mov	r3, r0
 800e4c4:	4a70      	ldr	r2, [pc, #448]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e4c6:	6013      	str	r3, [r2, #0]

		//计算左腿速度
		leg_spd(leftJoint[1].speed, leftJoint[0].speed, leftJoint[1].angle, leftJoint[0].angle, legSpd);
 800e4c8:	4b6e      	ldr	r3, [pc, #440]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e4ca:	ed93 7b12 	vldr	d7, [r3, #72]	; 0x48
 800e4ce:	4b6d      	ldr	r3, [pc, #436]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e4d0:	ed93 6b00 	vldr	d6, [r3]
 800e4d4:	4b6b      	ldr	r3, [pc, #428]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e4d6:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 800e4da:	4b6a      	ldr	r3, [pc, #424]	; (800e684 <LegPos_UpdateTask+0x228>)
 800e4dc:	ed93 4b02 	vldr	d4, [r3, #8]
 800e4e0:	f107 0308 	add.w	r3, r7, #8
 800e4e4:	4618      	mov	r0, r3
 800e4e6:	eeb0 3a44 	vmov.f32	s6, s8
 800e4ea:	eef0 3a64 	vmov.f32	s7, s9
 800e4ee:	eeb0 2a45 	vmov.f32	s4, s10
 800e4f2:	eef0 2a65 	vmov.f32	s5, s11
 800e4f6:	eeb0 1a46 	vmov.f32	s2, s12
 800e4fa:	eef0 1a66 	vmov.f32	s3, s13
 800e4fe:	eeb0 0a47 	vmov.f32	s0, s14
 800e502:	eef0 0a67 	vmov.f32	s1, s15
 800e506:	f7fb ff6f 	bl	800a3e8 <leg_spd>
		leftLegPos.dLength = legSpd[0];
 800e50a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800e50e:	4610      	mov	r0, r2
 800e510:	4619      	mov	r1, r3
 800e512:	f7f2 fb69 	bl	8000be8 <__aeabi_d2f>
 800e516:	4603      	mov	r3, r0
 800e518:	4a5b      	ldr	r2, [pc, #364]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e51a:	60d3      	str	r3, [r2, #12]
		leftLegPos.dAngle = legSpd[1];
 800e51c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800e520:	4610      	mov	r0, r2
 800e522:	4619      	mov	r1, r3
 800e524:	f7f2 fb60 	bl	8000be8 <__aeabi_d2f>
 800e528:	4603      	mov	r3, r0
 800e52a:	4a57      	ldr	r2, [pc, #348]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e52c:	6093      	str	r3, [r2, #8]

		//计算左腿腿长加速度
		leftLegPos.ddLength = ((leftLegPos.dLength - lastLeftDLength) * 1000 / 4) * lpfRatio + leftLegPos.ddLength * (1 - lpfRatio);
 800e52e:	4b56      	ldr	r3, [pc, #344]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e530:	ed93 7a03 	vldr	s14, [r3, #12]
 800e534:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800e538:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e53c:	ed9f 7a53 	vldr	s14, [pc, #332]	; 800e68c <LegPos_UpdateTask+0x230>
 800e540:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e544:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
 800e548:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e54c:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e550:	ee27 7a27 	vmul.f32	s14, s14, s15
 800e554:	4b4c      	ldr	r3, [pc, #304]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e556:	edd3 6a04 	vldr	s13, [r3, #16]
 800e55a:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800e55e:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e562:	ee76 7a67 	vsub.f32	s15, s12, s15
 800e566:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800e56a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e56e:	4b46      	ldr	r3, [pc, #280]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e570:	edc3 7a04 	vstr	s15, [r3, #16]
		lastLeftDLength = leftLegPos.dLength;
 800e574:	4b44      	ldr	r3, [pc, #272]	; (800e688 <LegPos_UpdateTask+0x22c>)
 800e576:	68db      	ldr	r3, [r3, #12]
 800e578:	637b      	str	r3, [r7, #52]	; 0x34

		//计算右腿位置
		leg_pos(rightJoint[1].angle, rightJoint[0].angle, legPos);
 800e57a:	4b45      	ldr	r3, [pc, #276]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e57c:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800e580:	4b43      	ldr	r3, [pc, #268]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e582:	ed93 6b02 	vldr	d6, [r3, #8]
 800e586:	f107 0318 	add.w	r3, r7, #24
 800e58a:	4618      	mov	r0, r3
 800e58c:	eeb0 1a46 	vmov.f32	s2, s12
 800e590:	eef0 1a66 	vmov.f32	s3, s13
 800e594:	eeb0 0a47 	vmov.f32	s0, s14
 800e598:	eef0 0a67 	vmov.f32	s1, s15
 800e59c:	f7fb f82c 	bl	80095f8 <leg_pos>
		rightLegPos.length = legPos[0];
 800e5a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800e5a4:	4610      	mov	r0, r2
 800e5a6:	4619      	mov	r1, r3
 800e5a8:	f7f2 fb1e 	bl	8000be8 <__aeabi_d2f>
 800e5ac:	4603      	mov	r3, r0
 800e5ae:	4a39      	ldr	r2, [pc, #228]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e5b0:	6053      	str	r3, [r2, #4]
		rightLegPos.angle = legPos[1];
 800e5b2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e5b6:	4610      	mov	r0, r2
 800e5b8:	4619      	mov	r1, r3
 800e5ba:	f7f2 fb15 	bl	8000be8 <__aeabi_d2f>
 800e5be:	4603      	mov	r3, r0
 800e5c0:	4a34      	ldr	r2, [pc, #208]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e5c2:	6013      	str	r3, [r2, #0]

		//计算右腿速度
		leg_spd(rightJoint[1].speed, rightJoint[0].speed, rightJoint[1].angle, rightJoint[0].angle, legSpd);
 800e5c4:	4b32      	ldr	r3, [pc, #200]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e5c6:	ed93 7b12 	vldr	d7, [r3, #72]	; 0x48
 800e5ca:	4b31      	ldr	r3, [pc, #196]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e5cc:	ed93 6b00 	vldr	d6, [r3]
 800e5d0:	4b2f      	ldr	r3, [pc, #188]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e5d2:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 800e5d6:	4b2e      	ldr	r3, [pc, #184]	; (800e690 <LegPos_UpdateTask+0x234>)
 800e5d8:	ed93 4b02 	vldr	d4, [r3, #8]
 800e5dc:	f107 0308 	add.w	r3, r7, #8
 800e5e0:	4618      	mov	r0, r3
 800e5e2:	eeb0 3a44 	vmov.f32	s6, s8
 800e5e6:	eef0 3a64 	vmov.f32	s7, s9
 800e5ea:	eeb0 2a45 	vmov.f32	s4, s10
 800e5ee:	eef0 2a65 	vmov.f32	s5, s11
 800e5f2:	eeb0 1a46 	vmov.f32	s2, s12
 800e5f6:	eef0 1a66 	vmov.f32	s3, s13
 800e5fa:	eeb0 0a47 	vmov.f32	s0, s14
 800e5fe:	eef0 0a67 	vmov.f32	s1, s15
 800e602:	f7fb fef1 	bl	800a3e8 <leg_spd>
		rightLegPos.dLength = legSpd[0];
 800e606:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800e60a:	4610      	mov	r0, r2
 800e60c:	4619      	mov	r1, r3
 800e60e:	f7f2 faeb 	bl	8000be8 <__aeabi_d2f>
 800e612:	4603      	mov	r3, r0
 800e614:	4a1f      	ldr	r2, [pc, #124]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e616:	60d3      	str	r3, [r2, #12]
		rightLegPos.dAngle = legSpd[1];
 800e618:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800e61c:	4610      	mov	r0, r2
 800e61e:	4619      	mov	r1, r3
 800e620:	f7f2 fae2 	bl	8000be8 <__aeabi_d2f>
 800e624:	4603      	mov	r3, r0
 800e626:	4a1b      	ldr	r2, [pc, #108]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e628:	6093      	str	r3, [r2, #8]

		//计算右腿腿长加速度
		rightLegPos.ddLength = ((rightLegPos.dLength - lastRightDLength) * 1000 / 4) * lpfRatio + rightLegPos.ddLength * (1 - lpfRatio);
 800e62a:	4b1a      	ldr	r3, [pc, #104]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e62c:	ed93 7a03 	vldr	s14, [r3, #12]
 800e630:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800e634:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e638:	ed9f 7a14 	vldr	s14, [pc, #80]	; 800e68c <LegPos_UpdateTask+0x230>
 800e63c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e640:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
 800e644:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e648:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e64c:	ee27 7a27 	vmul.f32	s14, s14, s15
 800e650:	4b10      	ldr	r3, [pc, #64]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e652:	edd3 6a04 	vldr	s13, [r3, #16]
 800e656:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800e65a:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e65e:	ee76 7a67 	vsub.f32	s15, s12, s15
 800e662:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800e666:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e66a:	4b0a      	ldr	r3, [pc, #40]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e66c:	edc3 7a04 	vstr	s15, [r3, #16]
		lastRightDLength = rightLegPos.dLength;
 800e670:	4b08      	ldr	r3, [pc, #32]	; (800e694 <LegPos_UpdateTask+0x238>)
 800e672:	68db      	ldr	r3, [r3, #12]
 800e674:	633b      	str	r3, [r7, #48]	; 0x30

		vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 800e676:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e67a:	2104      	movs	r1, #4
 800e67c:	4618      	mov	r0, r3
 800e67e:	f00e f989 	bl	801c994 <vTaskDelayUntil>
	{
 800e682:	e6fc      	b.n	800e47e <LegPos_UpdateTask+0x22>
 800e684:	20003628 	.word	0x20003628
 800e688:	200037d8 	.word	0x200037d8
 800e68c:	447a0000 	.word	0x447a0000
 800e690:	200036b8 	.word	0x200036b8
 800e694:	200037ec 	.word	0x200037ec

0800e698 <Ctrl_Task>:
	}
}

void Ctrl_Task(void *arg)
{
 800e698:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800e69c:	b0ec      	sub	sp, #432	; 0x1b0
 800e69e:	af00      	add	r7, sp, #0
 800e6a0:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e6a4:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 800e6a8:	6018      	str	r0, [r3, #0]
	double starttime = 0;
 800e6aa:	f04f 0200 	mov.w	r2, #0
 800e6ae:	f04f 0300 	mov.w	r3, #0
 800e6b2:	e9c7 236a 	strd	r2, r3, [r7, #424]	; 0x1a8
	double endtime = 0;
 800e6b6:	f04f 0200 	mov.w	r2, #0
 800e6ba:	f04f 0300 	mov.w	r3, #0
 800e6be:	e9c7 2360 	strd	r2, r3, [r7, #384]	; 0x180
	double dt;
	const float wheelRadius = 0.075f; //m，车轮半径
 800e6c2:	4bb7      	ldr	r3, [pc, #732]	; (800e9a0 <Ctrl_Task+0x308>)
 800e6c4:	f8c7 317c 	str.w	r3, [r7, #380]	; 0x17c
	const float legMass = 0.01f; //kg，腿部质量
 800e6c8:	4bb6      	ldr	r3, [pc, #728]	; (800e9a4 <Ctrl_Task+0x30c>)
 800e6ca:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178

	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e6ce:	f00e fb2f 	bl	801cd30 <xTaskGetTickCount>
 800e6d2:	4603      	mov	r3, r0
 800e6d4:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134

	//手动为反馈矩阵和输出叠加一个系数，用于手动优化控制效果
	float kRatio[2][6] = {{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f},
 800e6d8:	4bb3      	ldr	r3, [pc, #716]	; (800e9a8 <Ctrl_Task+0x310>)
 800e6da:	f507 7482 	add.w	r4, r7, #260	; 0x104
 800e6de:	461d      	mov	r5, r3
 800e6e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e6e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e6e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e6e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e6e8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800e6ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f}};
	float lqrTpRatio = 1.0f, lqrTRatio = 1.0f;
 800e6f0:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800e6f4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800e6f8:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800e6fc:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170

	//设定初始目标值
	target.rollAngle = 0.0f;
 800e700:	4baa      	ldr	r3, [pc, #680]	; (800e9ac <Ctrl_Task+0x314>)
 800e702:	f04f 0200 	mov.w	r2, #0
 800e706:	615a      	str	r2, [r3, #20]
	target.legLength = 0.12f;
 800e708:	4ba8      	ldr	r3, [pc, #672]	; (800e9ac <Ctrl_Task+0x314>)
 800e70a:	4aa9      	ldr	r2, [pc, #676]	; (800e9b0 <Ctrl_Task+0x318>)
 800e70c:	619a      	str	r2, [r3, #24]
	target.speed = 0.0f;
 800e70e:	4ba7      	ldr	r3, [pc, #668]	; (800e9ac <Ctrl_Task+0x314>)
 800e710:	f04f 0200 	mov.w	r2, #0
 800e714:	609a      	str	r2, [r3, #8]
	target.position = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 800e716:	4ba7      	ldr	r3, [pc, #668]	; (800e9b4 <Ctrl_Task+0x31c>)
 800e718:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800e71c:	4ba6      	ldr	r3, [pc, #664]	; (800e9b8 <Ctrl_Task+0x320>)
 800e71e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800e722:	f7f1 fdb3 	bl	800028c <__adddf3>
 800e726:	4602      	mov	r2, r0
 800e728:	460b      	mov	r3, r1
 800e72a:	4610      	mov	r0, r2
 800e72c:	4619      	mov	r1, r3
 800e72e:	f04f 0200 	mov.w	r2, #0
 800e732:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e736:	f7f2 f889 	bl	800084c <__aeabi_ddiv>
 800e73a:	4602      	mov	r2, r0
 800e73c:	460b      	mov	r3, r1
 800e73e:	4614      	mov	r4, r2
 800e740:	461d      	mov	r5, r3
 800e742:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e746:	f7f1 feff 	bl	8000548 <__aeabi_f2d>
 800e74a:	4602      	mov	r2, r0
 800e74c:	460b      	mov	r3, r1
 800e74e:	4620      	mov	r0, r4
 800e750:	4629      	mov	r1, r5
 800e752:	f7f1 ff51 	bl	80005f8 <__aeabi_dmul>
 800e756:	4602      	mov	r2, r0
 800e758:	460b      	mov	r3, r1
 800e75a:	4610      	mov	r0, r2
 800e75c:	4619      	mov	r1, r3
 800e75e:	f7f2 fa43 	bl	8000be8 <__aeabi_d2f>
 800e762:	4603      	mov	r3, r0
 800e764:	4a91      	ldr	r2, [pc, #580]	; (800e9ac <Ctrl_Task+0x314>)
 800e766:	6013      	str	r3, [r2, #0]

	while (1)
	{
		endtime = get_microseconds();
 800e768:	f7f3 fd82 	bl	8002270 <get_microseconds>
 800e76c:	4603      	mov	r3, r0
 800e76e:	4618      	mov	r0, r3
 800e770:	f7f1 fec8 	bl	8000504 <__aeabi_ui2d>
 800e774:	4602      	mov	r2, r0
 800e776:	460b      	mov	r3, r1
 800e778:	e9c7 2360 	strd	r2, r3, [r7, #384]	; 0x180
		dt = endtime - starttime;
 800e77c:	e9d7 236a 	ldrd	r2, r3, [r7, #424]	; 0x1a8
 800e780:	e9d7 0160 	ldrd	r0, r1, [r7, #384]	; 0x180
 800e784:	f7f1 fd80 	bl	8000288 <__aeabi_dsub>
 800e788:	4602      	mov	r2, r0
 800e78a:	460b      	mov	r3, r1
 800e78c:	e9c7 235a 	strd	r2, r3, [r7, #360]	; 0x168
		check_dt = dt;
 800e790:	498a      	ldr	r1, [pc, #552]	; (800e9bc <Ctrl_Task+0x324>)
 800e792:	e9d7 235a 	ldrd	r2, r3, [r7, #360]	; 0x168
 800e796:	e9c1 2300 	strd	r2, r3, [r1]
		starttime = get_microseconds();
 800e79a:	f7f3 fd69 	bl	8002270 <get_microseconds>
 800e79e:	4603      	mov	r3, r0
 800e7a0:	4618      	mov	r0, r3
 800e7a2:	f7f1 feaf 	bl	8000504 <__aeabi_ui2d>
 800e7a6:	4602      	mov	r2, r0
 800e7a8:	460b      	mov	r3, r1
 800e7aa:	e9c7 236a 	strd	r2, r3, [r7, #424]	; 0x1a8
		//计算状态变量
		stateVar.phi = imu_heading.pit;
 800e7ae:	4b84      	ldr	r3, [pc, #528]	; (800e9c0 <Ctrl_Task+0x328>)
 800e7b0:	681b      	ldr	r3, [r3, #0]
 800e7b2:	4a84      	ldr	r2, [pc, #528]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e7b4:	6113      	str	r3, [r2, #16]
		stateVar.dPhi = imu_heading.dpit;
 800e7b6:	4b82      	ldr	r3, [pc, #520]	; (800e9c0 <Ctrl_Task+0x328>)
 800e7b8:	68db      	ldr	r3, [r3, #12]
 800e7ba:	4a82      	ldr	r2, [pc, #520]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e7bc:	6153      	str	r3, [r2, #20]
		stateVar.x = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 800e7be:	4b7d      	ldr	r3, [pc, #500]	; (800e9b4 <Ctrl_Task+0x31c>)
 800e7c0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800e7c4:	4b7c      	ldr	r3, [pc, #496]	; (800e9b8 <Ctrl_Task+0x320>)
 800e7c6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800e7ca:	f7f1 fd5f 	bl	800028c <__adddf3>
 800e7ce:	4602      	mov	r2, r0
 800e7d0:	460b      	mov	r3, r1
 800e7d2:	4610      	mov	r0, r2
 800e7d4:	4619      	mov	r1, r3
 800e7d6:	f04f 0200 	mov.w	r2, #0
 800e7da:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e7de:	f7f2 f835 	bl	800084c <__aeabi_ddiv>
 800e7e2:	4602      	mov	r2, r0
 800e7e4:	460b      	mov	r3, r1
 800e7e6:	4614      	mov	r4, r2
 800e7e8:	461d      	mov	r5, r3
 800e7ea:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e7ee:	f7f1 feab 	bl	8000548 <__aeabi_f2d>
 800e7f2:	4602      	mov	r2, r0
 800e7f4:	460b      	mov	r3, r1
 800e7f6:	4620      	mov	r0, r4
 800e7f8:	4629      	mov	r1, r5
 800e7fa:	f7f1 fefd 	bl	80005f8 <__aeabi_dmul>
 800e7fe:	4602      	mov	r2, r0
 800e800:	460b      	mov	r3, r1
 800e802:	4610      	mov	r0, r2
 800e804:	4619      	mov	r1, r3
 800e806:	f7f2 f9ef 	bl	8000be8 <__aeabi_d2f>
 800e80a:	4603      	mov	r3, r0
 800e80c:	4a6d      	ldr	r2, [pc, #436]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e80e:	6093      	str	r3, [r2, #8]
		stateVar.dx = (leftWheel.speed + rightWheel.speed) / 2 * wheelRadius;
 800e810:	4b68      	ldr	r3, [pc, #416]	; (800e9b4 <Ctrl_Task+0x31c>)
 800e812:	e9d3 0100 	ldrd	r0, r1, [r3]
 800e816:	4b68      	ldr	r3, [pc, #416]	; (800e9b8 <Ctrl_Task+0x320>)
 800e818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e81c:	f7f1 fd36 	bl	800028c <__adddf3>
 800e820:	4602      	mov	r2, r0
 800e822:	460b      	mov	r3, r1
 800e824:	4610      	mov	r0, r2
 800e826:	4619      	mov	r1, r3
 800e828:	f04f 0200 	mov.w	r2, #0
 800e82c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e830:	f7f2 f80c 	bl	800084c <__aeabi_ddiv>
 800e834:	4602      	mov	r2, r0
 800e836:	460b      	mov	r3, r1
 800e838:	4614      	mov	r4, r2
 800e83a:	461d      	mov	r5, r3
 800e83c:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e840:	f7f1 fe82 	bl	8000548 <__aeabi_f2d>
 800e844:	4602      	mov	r2, r0
 800e846:	460b      	mov	r3, r1
 800e848:	4620      	mov	r0, r4
 800e84a:	4629      	mov	r1, r5
 800e84c:	f7f1 fed4 	bl	80005f8 <__aeabi_dmul>
 800e850:	4602      	mov	r2, r0
 800e852:	460b      	mov	r3, r1
 800e854:	4610      	mov	r0, r2
 800e856:	4619      	mov	r1, r3
 800e858:	f7f2 f9c6 	bl	8000be8 <__aeabi_d2f>
 800e85c:	4603      	mov	r3, r0
 800e85e:	4a59      	ldr	r2, [pc, #356]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e860:	60d3      	str	r3, [r2, #12]
		stateVar.theta = 0;//(leftLegPos.angle + rightLegPos.angle) / 2 - M_PI_2 - imu_heading.pit;
 800e862:	4b58      	ldr	r3, [pc, #352]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e864:	f04f 0200 	mov.w	r2, #0
 800e868:	601a      	str	r2, [r3, #0]
		stateVar.dTheta = 0;//(leftLegPos.dAngle + rightLegPos.dAngle) / 2 - imu_heading.dpit;
 800e86a:	4b56      	ldr	r3, [pc, #344]	; (800e9c4 <Ctrl_Task+0x32c>)
 800e86c:	f04f 0200 	mov.w	r2, #0
 800e870:	605a      	str	r2, [r3, #4]
		double legLength = 0.12;//(leftLegPos.length + rightLegPos.length) / 2;
 800e872:	a349      	add	r3, pc, #292	; (adr r3, 800e998 <Ctrl_Task+0x300>)
 800e874:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e878:	e9c7 2358 	strd	r2, r3, [r7, #352]	; 0x160
		double dLegLength = 0;//(leftLegPos.dLength + rightLegPos.dLength) / 2;
 800e87c:	f04f 0200 	mov.w	r2, #0
 800e880:	f04f 0300 	mov.w	r3, #0
 800e884:	e9c7 2356 	strd	r2, r3, [r7, #344]	; 0x158

		//如果正在站立准备状态，则不进行后续控制
		if(standupState == StandupState_Prepare)
 800e888:	4b4f      	ldr	r3, [pc, #316]	; (800e9c8 <Ctrl_Task+0x330>)
 800e88a:	781b      	ldrb	r3, [r3, #0]
 800e88c:	2b01      	cmp	r3, #1
 800e88e:	d106      	bne.n	800e89e <Ctrl_Task+0x206>
		{
			vTaskDelayUntil(&xLastWakeTime, 4);
 800e890:	f507 739a 	add.w	r3, r7, #308	; 0x134
 800e894:	2104      	movs	r1, #4
 800e896:	4618      	mov	r0, r3
 800e898:	f00e f87c 	bl	801c994 <vTaskDelayUntil>
 800e89c:	e764      	b.n	800e768 <Ctrl_Task+0xd0>
			continue;
		}

		//计算LQR反馈矩阵
		double kRes[12] = {0}, k[2][6] = {0};
 800e89e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e8a2:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800e8a6:	4618      	mov	r0, r3
 800e8a8:	2360      	movs	r3, #96	; 0x60
 800e8aa:	461a      	mov	r2, r3
 800e8ac:	2100      	movs	r1, #0
 800e8ae:	f010 fe60 	bl	801f572 <memset>
 800e8b2:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e8b6:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800e8ba:	4618      	mov	r0, r3
 800e8bc:	2360      	movs	r3, #96	; 0x60
 800e8be:	461a      	mov	r2, r3
 800e8c0:	2100      	movs	r1, #0
 800e8c2:	f010 fe56 	bl	801f572 <memset>
		lqr_k(legLength, kRes);
 800e8c6:	f107 0308 	add.w	r3, r7, #8
 800e8ca:	4618      	mov	r0, r3
 800e8cc:	ed97 0b58 	vldr	d0, [r7, #352]	; 0x160
 800e8d0:	f7fc fbf6 	bl	800b0c0 <lqr_k>
		lqr_k(0.12, k_check);
 800e8d4:	483d      	ldr	r0, [pc, #244]	; (800e9cc <Ctrl_Task+0x334>)
 800e8d6:	ed9f 0b30 	vldr	d0, [pc, #192]	; 800e998 <Ctrl_Task+0x300>
 800e8da:	f7fc fbf1 	bl	800b0c0 <lqr_k>
		if(groundDetector.isTouchingGround) //正常触地状态
 800e8de:	4b3c      	ldr	r3, [pc, #240]	; (800e9d0 <Ctrl_Task+0x338>)
 800e8e0:	7a1b      	ldrb	r3, [r3, #8]
 800e8e2:	2b00      	cmp	r3, #0
 800e8e4:	d076      	beq.n	800e9d4 <Ctrl_Task+0x33c>
		{
            // double k[2][6] = {
            //     {-0.0224, -2.2530, -11.1054, -1.6155, 2.2361, 0.5513},
            //     {-0.0224, -2.2530, -11.1054, -1.6155, -2.2361, -0.5513}
            // };
			for (int i = 0; i < 6; i++)
 800e8e6:	2300      	movs	r3, #0
 800e8e8:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 800e8ec:	e04c      	b.n	800e988 <Ctrl_Task+0x2f0>
			{
				for (int j = 0; j < 2; j++)
 800e8ee:	2300      	movs	r3, #0
 800e8f0:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800e8f4:	e03f      	b.n	800e976 <Ctrl_Task+0x2de>
					k[j][i] = kRes[i * 2 + j] * kRatio[j][i];
 800e8f6:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800e8fa:	005a      	lsls	r2, r3, #1
 800e8fc:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800e900:	4413      	add	r3, r2
 800e902:	f507 72d8 	add.w	r2, r7, #432	; 0x1b0
 800e906:	f5a2 72d4 	sub.w	r2, r2, #424	; 0x1a8
 800e90a:	00db      	lsls	r3, r3, #3
 800e90c:	4413      	add	r3, r2
 800e90e:	e9d3 4500 	ldrd	r4, r5, [r3]
 800e912:	f8d7 21a0 	ldr.w	r2, [r7, #416]	; 0x1a0
 800e916:	4613      	mov	r3, r2
 800e918:	005b      	lsls	r3, r3, #1
 800e91a:	4413      	add	r3, r2
 800e91c:	005b      	lsls	r3, r3, #1
 800e91e:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 800e922:	4413      	add	r3, r2
 800e924:	009b      	lsls	r3, r3, #2
 800e926:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800e92a:	443b      	add	r3, r7
 800e92c:	3bac      	subs	r3, #172	; 0xac
 800e92e:	681b      	ldr	r3, [r3, #0]
 800e930:	4618      	mov	r0, r3
 800e932:	f7f1 fe09 	bl	8000548 <__aeabi_f2d>
 800e936:	4602      	mov	r2, r0
 800e938:	460b      	mov	r3, r1
 800e93a:	4620      	mov	r0, r4
 800e93c:	4629      	mov	r1, r5
 800e93e:	f7f1 fe5b 	bl	80005f8 <__aeabi_dmul>
 800e942:	4602      	mov	r2, r0
 800e944:	460b      	mov	r3, r1
 800e946:	4610      	mov	r0, r2
 800e948:	4619      	mov	r1, r3
 800e94a:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e94e:	f5a3 74a4 	sub.w	r4, r3, #328	; 0x148
 800e952:	f8d7 21a0 	ldr.w	r2, [r7, #416]	; 0x1a0
 800e956:	4613      	mov	r3, r2
 800e958:	005b      	lsls	r3, r3, #1
 800e95a:	4413      	add	r3, r2
 800e95c:	005b      	lsls	r3, r3, #1
 800e95e:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 800e962:	4413      	add	r3, r2
 800e964:	00db      	lsls	r3, r3, #3
 800e966:	4423      	add	r3, r4
 800e968:	e9c3 0100 	strd	r0, r1, [r3]
				for (int j = 0; j < 2; j++)
 800e96c:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800e970:	3301      	adds	r3, #1
 800e972:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800e976:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800e97a:	2b01      	cmp	r3, #1
 800e97c:	ddbb      	ble.n	800e8f6 <Ctrl_Task+0x25e>
			for (int i = 0; i < 6; i++)
 800e97e:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800e982:	3301      	adds	r3, #1
 800e984:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 800e988:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800e98c:	2b05      	cmp	r3, #5
 800e98e:	ddae      	ble.n	800e8ee <Ctrl_Task+0x256>
 800e990:	e04e      	b.n	800ea30 <Ctrl_Task+0x398>
 800e992:	bf00      	nop
 800e994:	f3af 8000 	nop.w
 800e998:	eb851eb8 	.word	0xeb851eb8
 800e99c:	3fbeb851 	.word	0x3fbeb851
 800e9a0:	3d99999a 	.word	0x3d99999a
 800e9a4:	3c23d70a 	.word	0x3c23d70a
 800e9a8:	08026800 	.word	0x08026800
 800e9ac:	20000028 	.word	0x20000028
 800e9b0:	3df5c28f 	.word	0x3df5c28f
 800e9b4:	20003748 	.word	0x20003748
 800e9b8:	20003790 	.word	0x20003790
 800e9bc:	20003948 	.word	0x20003948
 800e9c0:	2000327c 	.word	0x2000327c
 800e9c4:	20003800 	.word	0x20003800
 800e9c8:	20000050 	.word	0x20000050
 800e9cc:	20003950 	.word	0x20003950
 800e9d0:	20000044 	.word	0x20000044
			}
		}
		else //腿部离地状态，手动修改反馈矩阵，仅保持腿部竖直
		{
			memset(k, 0, sizeof(k));
 800e9d4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e9d8:	2260      	movs	r2, #96	; 0x60
 800e9da:	2100      	movs	r1, #0
 800e9dc:	4618      	mov	r0, r3
 800e9de:	f010 fdc8 	bl	801f572 <memset>
			k[1][0] = kRes[1] * -2;
 800e9e2:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e9e6:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800e9ea:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800e9ee:	f04f 0200 	mov.w	r2, #0
 800e9f2:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 800e9f6:	f7f1 fdff 	bl	80005f8 <__aeabi_dmul>
 800e9fa:	4602      	mov	r2, r0
 800e9fc:	460b      	mov	r3, r1
 800e9fe:	f507 71d8 	add.w	r1, r7, #432	; 0x1b0
 800ea02:	f5a1 71a4 	sub.w	r1, r1, #328	; 0x148
 800ea06:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
			k[1][1] = kRes[3] * -10;
 800ea0a:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ea0e:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800ea12:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800ea16:	f04f 0200 	mov.w	r2, #0
 800ea1a:	4bdb      	ldr	r3, [pc, #876]	; (800ed88 <Ctrl_Task+0x6f0>)
 800ea1c:	f7f1 fdec 	bl	80005f8 <__aeabi_dmul>
 800ea20:	4602      	mov	r2, r0
 800ea22:	460b      	mov	r3, r1
 800ea24:	f507 71d8 	add.w	r1, r7, #432	; 0x1b0
 800ea28:	f5a1 71a4 	sub.w	r1, r1, #328	; 0x148
 800ea2c:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
		}

		//准备状态变量
		float x[6] = {stateVar.theta, stateVar.dTheta, stateVar.x, stateVar.dx, stateVar.phi, stateVar.dPhi};
 800ea30:	4bd6      	ldr	r3, [pc, #856]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea32:	681b      	ldr	r3, [r3, #0]
 800ea34:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 800ea38:	4bd4      	ldr	r3, [pc, #848]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea3a:	685b      	ldr	r3, [r3, #4]
 800ea3c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 800ea40:	4bd2      	ldr	r3, [pc, #840]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea42:	689b      	ldr	r3, [r3, #8]
 800ea44:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800ea48:	4bd0      	ldr	r3, [pc, #832]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea4a:	68db      	ldr	r3, [r3, #12]
 800ea4c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800ea50:	4bce      	ldr	r3, [pc, #824]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea52:	691b      	ldr	r3, [r3, #16]
 800ea54:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800ea58:	4bcc      	ldr	r3, [pc, #816]	; (800ed8c <Ctrl_Task+0x6f4>)
 800ea5a:	695b      	ldr	r3, [r3, #20]
 800ea5c:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
		//与给定量作差
		x[2] -= target.position;
 800ea60:	ed97 7a3d 	vldr	s14, [r7, #244]	; 0xf4
 800ea64:	4bca      	ldr	r3, [pc, #808]	; (800ed90 <Ctrl_Task+0x6f8>)
 800ea66:	edd3 7a00 	vldr	s15, [r3]
 800ea6a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800ea6e:	edc7 7a3d 	vstr	s15, [r7, #244]	; 0xf4
		x[3] -= target.speed;
 800ea72:	ed97 7a3e 	vldr	s14, [r7, #248]	; 0xf8
 800ea76:	4bc6      	ldr	r3, [pc, #792]	; (800ed90 <Ctrl_Task+0x6f8>)
 800ea78:	edd3 7a02 	vldr	s15, [r3, #8]
 800ea7c:	ee77 7a67 	vsub.f32	s15, s14, s15
 800ea80:	edc7 7a3e 	vstr	s15, [r7, #248]	; 0xf8
		check_x = x[2];
 800ea84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ea88:	4ac2      	ldr	r2, [pc, #776]	; (800ed94 <Ctrl_Task+0x6fc>)
 800ea8a:	6013      	str	r3, [r2, #0]
		//矩阵相乘，计算LQR输出
		float lqrOutT = k[0][0] * x[0] + k[0][1] * x[1] + k[0][2] * x[2] + k[0][3] * x[3] + k[0][4] * x[4] + k[0][5] * x[5];
 800ea8c:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ea90:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ea94:	e9d3 4500 	ldrd	r4, r5, [r3]
 800ea98:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800ea9c:	4618      	mov	r0, r3
 800ea9e:	f7f1 fd53 	bl	8000548 <__aeabi_f2d>
 800eaa2:	4602      	mov	r2, r0
 800eaa4:	460b      	mov	r3, r1
 800eaa6:	4620      	mov	r0, r4
 800eaa8:	4629      	mov	r1, r5
 800eaaa:	f7f1 fda5 	bl	80005f8 <__aeabi_dmul>
 800eaae:	4602      	mov	r2, r0
 800eab0:	460b      	mov	r3, r1
 800eab2:	4692      	mov	sl, r2
 800eab4:	469b      	mov	fp, r3
 800eab6:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eaba:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eabe:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 800eac2:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 800eac6:	4618      	mov	r0, r3
 800eac8:	f7f1 fd3e 	bl	8000548 <__aeabi_f2d>
 800eacc:	4602      	mov	r2, r0
 800eace:	460b      	mov	r3, r1
 800ead0:	4620      	mov	r0, r4
 800ead2:	4629      	mov	r1, r5
 800ead4:	f7f1 fd90 	bl	80005f8 <__aeabi_dmul>
 800ead8:	4602      	mov	r2, r0
 800eada:	460b      	mov	r3, r1
 800eadc:	4650      	mov	r0, sl
 800eade:	4659      	mov	r1, fp
 800eae0:	f7f1 fbd4 	bl	800028c <__adddf3>
 800eae4:	4602      	mov	r2, r0
 800eae6:	460b      	mov	r3, r1
 800eae8:	4692      	mov	sl, r2
 800eaea:	469b      	mov	fp, r3
 800eaec:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eaf0:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eaf4:	e9d3 4504 	ldrd	r4, r5, [r3, #16]
 800eaf8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800eafc:	4618      	mov	r0, r3
 800eafe:	f7f1 fd23 	bl	8000548 <__aeabi_f2d>
 800eb02:	4602      	mov	r2, r0
 800eb04:	460b      	mov	r3, r1
 800eb06:	4620      	mov	r0, r4
 800eb08:	4629      	mov	r1, r5
 800eb0a:	f7f1 fd75 	bl	80005f8 <__aeabi_dmul>
 800eb0e:	4602      	mov	r2, r0
 800eb10:	460b      	mov	r3, r1
 800eb12:	4650      	mov	r0, sl
 800eb14:	4659      	mov	r1, fp
 800eb16:	f7f1 fbb9 	bl	800028c <__adddf3>
 800eb1a:	4602      	mov	r2, r0
 800eb1c:	460b      	mov	r3, r1
 800eb1e:	4692      	mov	sl, r2
 800eb20:	469b      	mov	fp, r3
 800eb22:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eb26:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eb2a:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 800eb2e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800eb32:	4618      	mov	r0, r3
 800eb34:	f7f1 fd08 	bl	8000548 <__aeabi_f2d>
 800eb38:	4602      	mov	r2, r0
 800eb3a:	460b      	mov	r3, r1
 800eb3c:	4620      	mov	r0, r4
 800eb3e:	4629      	mov	r1, r5
 800eb40:	f7f1 fd5a 	bl	80005f8 <__aeabi_dmul>
 800eb44:	4602      	mov	r2, r0
 800eb46:	460b      	mov	r3, r1
 800eb48:	4650      	mov	r0, sl
 800eb4a:	4659      	mov	r1, fp
 800eb4c:	f7f1 fb9e 	bl	800028c <__adddf3>
 800eb50:	4602      	mov	r2, r0
 800eb52:	460b      	mov	r3, r1
 800eb54:	4692      	mov	sl, r2
 800eb56:	469b      	mov	fp, r3
 800eb58:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eb5c:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eb60:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 800eb64:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800eb68:	4618      	mov	r0, r3
 800eb6a:	f7f1 fced 	bl	8000548 <__aeabi_f2d>
 800eb6e:	4602      	mov	r2, r0
 800eb70:	460b      	mov	r3, r1
 800eb72:	4620      	mov	r0, r4
 800eb74:	4629      	mov	r1, r5
 800eb76:	f7f1 fd3f 	bl	80005f8 <__aeabi_dmul>
 800eb7a:	4602      	mov	r2, r0
 800eb7c:	460b      	mov	r3, r1
 800eb7e:	4650      	mov	r0, sl
 800eb80:	4659      	mov	r1, fp
 800eb82:	f7f1 fb83 	bl	800028c <__adddf3>
 800eb86:	4602      	mov	r2, r0
 800eb88:	460b      	mov	r3, r1
 800eb8a:	4692      	mov	sl, r2
 800eb8c:	469b      	mov	fp, r3
 800eb8e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eb92:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eb96:	e9d3 450a 	ldrd	r4, r5, [r3, #40]	; 0x28
 800eb9a:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 800eb9e:	4618      	mov	r0, r3
 800eba0:	f7f1 fcd2 	bl	8000548 <__aeabi_f2d>
 800eba4:	4602      	mov	r2, r0
 800eba6:	460b      	mov	r3, r1
 800eba8:	4620      	mov	r0, r4
 800ebaa:	4629      	mov	r1, r5
 800ebac:	f7f1 fd24 	bl	80005f8 <__aeabi_dmul>
 800ebb0:	4602      	mov	r2, r0
 800ebb2:	460b      	mov	r3, r1
 800ebb4:	4650      	mov	r0, sl
 800ebb6:	4659      	mov	r1, fp
 800ebb8:	f7f1 fb68 	bl	800028c <__adddf3>
 800ebbc:	4602      	mov	r2, r0
 800ebbe:	460b      	mov	r3, r1
 800ebc0:	4610      	mov	r0, r2
 800ebc2:	4619      	mov	r1, r3
 800ebc4:	f7f2 f810 	bl	8000be8 <__aeabi_d2f>
 800ebc8:	4603      	mov	r3, r0
 800ebca:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		float lqrOutTp = k[1][0] * x[0] + k[1][1] * x[1] + k[1][2] * x[2] + k[1][3] * x[3] + k[1][4] * x[4] + k[1][5] * x[5];
 800ebce:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ebd2:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ebd6:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	; 0x30
 800ebda:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800ebde:	4618      	mov	r0, r3
 800ebe0:	f7f1 fcb2 	bl	8000548 <__aeabi_f2d>
 800ebe4:	4602      	mov	r2, r0
 800ebe6:	460b      	mov	r3, r1
 800ebe8:	4620      	mov	r0, r4
 800ebea:	4629      	mov	r1, r5
 800ebec:	f7f1 fd04 	bl	80005f8 <__aeabi_dmul>
 800ebf0:	4602      	mov	r2, r0
 800ebf2:	460b      	mov	r3, r1
 800ebf4:	4692      	mov	sl, r2
 800ebf6:	469b      	mov	fp, r3
 800ebf8:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ebfc:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec00:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800ec04:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 800ec08:	4618      	mov	r0, r3
 800ec0a:	f7f1 fc9d 	bl	8000548 <__aeabi_f2d>
 800ec0e:	4602      	mov	r2, r0
 800ec10:	460b      	mov	r3, r1
 800ec12:	4620      	mov	r0, r4
 800ec14:	4629      	mov	r1, r5
 800ec16:	f7f1 fcef 	bl	80005f8 <__aeabi_dmul>
 800ec1a:	4602      	mov	r2, r0
 800ec1c:	460b      	mov	r3, r1
 800ec1e:	4650      	mov	r0, sl
 800ec20:	4659      	mov	r1, fp
 800ec22:	f7f1 fb33 	bl	800028c <__adddf3>
 800ec26:	4602      	mov	r2, r0
 800ec28:	460b      	mov	r3, r1
 800ec2a:	4692      	mov	sl, r2
 800ec2c:	469b      	mov	fp, r3
 800ec2e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec32:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec36:	e9d3 4510 	ldrd	r4, r5, [r3, #64]	; 0x40
 800ec3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ec3e:	4618      	mov	r0, r3
 800ec40:	f7f1 fc82 	bl	8000548 <__aeabi_f2d>
 800ec44:	4602      	mov	r2, r0
 800ec46:	460b      	mov	r3, r1
 800ec48:	4620      	mov	r0, r4
 800ec4a:	4629      	mov	r1, r5
 800ec4c:	f7f1 fcd4 	bl	80005f8 <__aeabi_dmul>
 800ec50:	4602      	mov	r2, r0
 800ec52:	460b      	mov	r3, r1
 800ec54:	4650      	mov	r0, sl
 800ec56:	4659      	mov	r1, fp
 800ec58:	f7f1 fb18 	bl	800028c <__adddf3>
 800ec5c:	4602      	mov	r2, r0
 800ec5e:	460b      	mov	r3, r1
 800ec60:	4692      	mov	sl, r2
 800ec62:	469b      	mov	fp, r3
 800ec64:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec68:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec6c:	e9d3 4512 	ldrd	r4, r5, [r3, #72]	; 0x48
 800ec70:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ec74:	4618      	mov	r0, r3
 800ec76:	f7f1 fc67 	bl	8000548 <__aeabi_f2d>
 800ec7a:	4602      	mov	r2, r0
 800ec7c:	460b      	mov	r3, r1
 800ec7e:	4620      	mov	r0, r4
 800ec80:	4629      	mov	r1, r5
 800ec82:	f7f1 fcb9 	bl	80005f8 <__aeabi_dmul>
 800ec86:	4602      	mov	r2, r0
 800ec88:	460b      	mov	r3, r1
 800ec8a:	4650      	mov	r0, sl
 800ec8c:	4659      	mov	r1, fp
 800ec8e:	f7f1 fafd 	bl	800028c <__adddf3>
 800ec92:	4602      	mov	r2, r0
 800ec94:	460b      	mov	r3, r1
 800ec96:	4692      	mov	sl, r2
 800ec98:	469b      	mov	fp, r3
 800ec9a:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec9e:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eca2:	e9d3 4514 	ldrd	r4, r5, [r3, #80]	; 0x50
 800eca6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ecaa:	4618      	mov	r0, r3
 800ecac:	f7f1 fc4c 	bl	8000548 <__aeabi_f2d>
 800ecb0:	4602      	mov	r2, r0
 800ecb2:	460b      	mov	r3, r1
 800ecb4:	4620      	mov	r0, r4
 800ecb6:	4629      	mov	r1, r5
 800ecb8:	f7f1 fc9e 	bl	80005f8 <__aeabi_dmul>
 800ecbc:	4602      	mov	r2, r0
 800ecbe:	460b      	mov	r3, r1
 800ecc0:	4650      	mov	r0, sl
 800ecc2:	4659      	mov	r1, fp
 800ecc4:	f7f1 fae2 	bl	800028c <__adddf3>
 800ecc8:	4602      	mov	r2, r0
 800ecca:	460b      	mov	r3, r1
 800eccc:	4692      	mov	sl, r2
 800ecce:	469b      	mov	fp, r3
 800ecd0:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ecd4:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ecd8:	e9d3 4516 	ldrd	r4, r5, [r3, #88]	; 0x58
 800ecdc:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 800ece0:	4618      	mov	r0, r3
 800ece2:	f7f1 fc31 	bl	8000548 <__aeabi_f2d>
 800ece6:	4602      	mov	r2, r0
 800ece8:	460b      	mov	r3, r1
 800ecea:	4620      	mov	r0, r4
 800ecec:	4629      	mov	r1, r5
 800ecee:	f7f1 fc83 	bl	80005f8 <__aeabi_dmul>
 800ecf2:	4602      	mov	r2, r0
 800ecf4:	460b      	mov	r3, r1
 800ecf6:	4650      	mov	r0, sl
 800ecf8:	4659      	mov	r1, fp
 800ecfa:	f7f1 fac7 	bl	800028c <__adddf3>
 800ecfe:	4602      	mov	r2, r0
 800ed00:	460b      	mov	r3, r1
 800ed02:	4610      	mov	r0, r2
 800ed04:	4619      	mov	r1, r3
 800ed06:	f7f1 ff6f 	bl	8000be8 <__aeabi_d2f>
 800ed0a:	4603      	mov	r3, r0
 800ed0c:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
		lqrOutT_check = -lqrOutT;
 800ed10:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 800ed14:	eef1 7a67 	vneg.f32	s15, s15
 800ed18:	ee17 3a90 	vmov	r3, s15
 800ed1c:	4618      	mov	r0, r3
 800ed1e:	f7f1 fc13 	bl	8000548 <__aeabi_f2d>
 800ed22:	4602      	mov	r2, r0
 800ed24:	460b      	mov	r3, r1
 800ed26:	491c      	ldr	r1, [pc, #112]	; (800ed98 <Ctrl_Task+0x700>)
 800ed28:	e9c1 2300 	strd	r2, r3, [r1]
		lqrOutTp_check = -lqrOutTp;
 800ed2c:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800ed30:	eef1 7a67 	vneg.f32	s15, s15
 800ed34:	ee17 3a90 	vmov	r3, s15
 800ed38:	4618      	mov	r0, r3
 800ed3a:	f7f1 fc05 	bl	8000548 <__aeabi_f2d>
 800ed3e:	4602      	mov	r2, r0
 800ed40:	460b      	mov	r3, r1
 800ed42:	4916      	ldr	r1, [pc, #88]	; (800ed9c <Ctrl_Task+0x704>)
 800ed44:	e9c1 2300 	strd	r2, r3, [r1]
		//计算yaw轴PID输出
		PID_Compute(&yawPID, target.yawAngle, imu_heading.yaw,0.004,0);
 800ed48:	4b11      	ldr	r3, [pc, #68]	; (800ed90 <Ctrl_Task+0x6f8>)
 800ed4a:	691b      	ldr	r3, [r3, #16]
 800ed4c:	4618      	mov	r0, r3
 800ed4e:	f7f1 fbfb 	bl	8000548 <__aeabi_f2d>
 800ed52:	4604      	mov	r4, r0
 800ed54:	460d      	mov	r5, r1
 800ed56:	4b12      	ldr	r3, [pc, #72]	; (800eda0 <Ctrl_Task+0x708>)
 800ed58:	689b      	ldr	r3, [r3, #8]
 800ed5a:	4618      	mov	r0, r3
 800ed5c:	f7f1 fbf4 	bl	8000548 <__aeabi_f2d>
 800ed60:	4602      	mov	r2, r0
 800ed62:	460b      	mov	r3, r1
 800ed64:	ed9f 3b04 	vldr	d3, [pc, #16]	; 800ed78 <Ctrl_Task+0x6e0>
 800ed68:	ed9f 2b05 	vldr	d2, [pc, #20]	; 800ed80 <Ctrl_Task+0x6e8>
 800ed6c:	ec43 2b11 	vmov	d1, r2, r3
 800ed70:	e018      	b.n	800eda4 <Ctrl_Task+0x70c>
 800ed72:	bf00      	nop
 800ed74:	f3af 8000 	nop.w
	...
 800ed80:	d2f1a9fc 	.word	0xd2f1a9fc
 800ed84:	3f70624d 	.word	0x3f70624d
 800ed88:	c0240000 	.word	0xc0240000
 800ed8c:	20003800 	.word	0x20003800
 800ed90:	20000028 	.word	0x20000028
 800ed94:	200039b0 	.word	0x200039b0
 800ed98:	20003920 	.word	0x20003920
 800ed9c:	20003918 	.word	0x20003918
 800eda0:	2000327c 	.word	0x2000327c
 800eda4:	ec45 4b10 	vmov	d0, r4, r5
 800eda8:	4861      	ldr	r0, [pc, #388]	; (800ef30 <Ctrl_Task+0x898>)
 800edaa:	f7f5 ffed 	bl	8004d88 <PID_Compute>

		//设定车轮电机输出扭矩，为LQR和yaw轴PID输出的叠加
		if(groundDetector.isTouchingGround) //正常接地状态
 800edae:	4b61      	ldr	r3, [pc, #388]	; (800ef34 <Ctrl_Task+0x89c>)
 800edb0:	7a1b      	ldrb	r3, [r3, #8]
 800edb2:	2b00      	cmp	r3, #0
 800edb4:	d033      	beq.n	800ee1e <Ctrl_Task+0x786>
		{
//			Motor_SetTorque(&leftWheel, -lqrOutT * lqrTRatio - yawPID.output);
//			Motor_SetTorque(&rightWheel, -lqrOutT * lqrTRatio + yawPID.output);
			can_motors[1].torque = lqrOutT * lqrTRatio + yawPID.output;
 800edb6:	ed97 7a55 	vldr	s14, [r7, #340]	; 0x154
 800edba:	edd7 7a5c 	vldr	s15, [r7, #368]	; 0x170
 800edbe:	ee67 7a27 	vmul.f32	s15, s14, s15
 800edc2:	ee17 0a90 	vmov	r0, s15
 800edc6:	f7f1 fbbf 	bl	8000548 <__aeabi_f2d>
 800edca:	4b59      	ldr	r3, [pc, #356]	; (800ef30 <Ctrl_Task+0x898>)
 800edcc:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800edd0:	f7f1 fa5c 	bl	800028c <__adddf3>
 800edd4:	4602      	mov	r2, r0
 800edd6:	460b      	mov	r3, r1
 800edd8:	4610      	mov	r0, r2
 800edda:	4619      	mov	r1, r3
 800eddc:	f7f1 ff04 	bl	8000be8 <__aeabi_d2f>
 800ede0:	4603      	mov	r3, r0
 800ede2:	4a55      	ldr	r2, [pc, #340]	; (800ef38 <Ctrl_Task+0x8a0>)
 800ede4:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
			can_motors[0].torque = -lqrOutT * lqrTRatio - yawPID.output;
 800ede8:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 800edec:	eeb1 7a67 	vneg.f32	s14, s15
 800edf0:	edd7 7a5c 	vldr	s15, [r7, #368]	; 0x170
 800edf4:	ee67 7a27 	vmul.f32	s15, s14, s15
 800edf8:	ee17 0a90 	vmov	r0, s15
 800edfc:	f7f1 fba4 	bl	8000548 <__aeabi_f2d>
 800ee00:	4b4b      	ldr	r3, [pc, #300]	; (800ef30 <Ctrl_Task+0x898>)
 800ee02:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800ee06:	f7f1 fa3f 	bl	8000288 <__aeabi_dsub>
 800ee0a:	4602      	mov	r2, r0
 800ee0c:	460b      	mov	r3, r1
 800ee0e:	4610      	mov	r0, r2
 800ee10:	4619      	mov	r1, r3
 800ee12:	f7f1 fee9 	bl	8000be8 <__aeabi_d2f>
 800ee16:	4603      	mov	r3, r0
 800ee18:	4a47      	ldr	r2, [pc, #284]	; (800ef38 <Ctrl_Task+0x8a0>)
 800ee1a:	6293      	str	r3, [r2, #40]	; 0x28
 800ee1c:	e008      	b.n	800ee30 <Ctrl_Task+0x798>
		}
		else //腿部离地状态，关闭车轮电机
		{
//			Motor_SetTorque(&leftWheel, 0);
//			Motor_SetTorque(&rightWheel, 0);
			can_motors[1].torque = 0;
 800ee1e:	4b46      	ldr	r3, [pc, #280]	; (800ef38 <Ctrl_Task+0x8a0>)
 800ee20:	f04f 0200 	mov.w	r2, #0
 800ee24:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			can_motors[0].torque = 0;
 800ee28:	4b43      	ldr	r3, [pc, #268]	; (800ef38 <Ctrl_Task+0x8a0>)
 800ee2a:	f04f 0200 	mov.w	r2, #0
 800ee2e:	629a      	str	r2, [r3, #40]	; 0x28
		}

		//根据离地状态修改目标腿长，并计算腿长PID输出
		PID_Compute(&legLengthPID, (groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? target.legLength : 0.2f, legLength,0.004,0.001);
 800ee30:	4b40      	ldr	r3, [pc, #256]	; (800ef34 <Ctrl_Task+0x89c>)
 800ee32:	7a1b      	ldrb	r3, [r3, #8]
 800ee34:	2b00      	cmp	r3, #0
 800ee36:	d00e      	beq.n	800ee56 <Ctrl_Task+0x7be>
 800ee38:	4b3e      	ldr	r3, [pc, #248]	; (800ef34 <Ctrl_Task+0x89c>)
 800ee3a:	7a5b      	ldrb	r3, [r3, #9]
 800ee3c:	f083 0301 	eor.w	r3, r3, #1
 800ee40:	b2db      	uxtb	r3, r3
 800ee42:	2b00      	cmp	r3, #0
 800ee44:	d007      	beq.n	800ee56 <Ctrl_Task+0x7be>
 800ee46:	4b3d      	ldr	r3, [pc, #244]	; (800ef3c <Ctrl_Task+0x8a4>)
 800ee48:	699b      	ldr	r3, [r3, #24]
 800ee4a:	4618      	mov	r0, r3
 800ee4c:	f7f1 fb7c 	bl	8000548 <__aeabi_f2d>
 800ee50:	4602      	mov	r2, r0
 800ee52:	460b      	mov	r3, r1
 800ee54:	e002      	b.n	800ee5c <Ctrl_Task+0x7c4>
 800ee56:	a330      	add	r3, pc, #192	; (adr r3, 800ef18 <Ctrl_Task+0x880>)
 800ee58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ee5c:	ed9f 3b30 	vldr	d3, [pc, #192]	; 800ef20 <Ctrl_Task+0x888>
 800ee60:	ed9f 2b31 	vldr	d2, [pc, #196]	; 800ef28 <Ctrl_Task+0x890>
 800ee64:	ed97 1b58 	vldr	d1, [r7, #352]	; 0x160
 800ee68:	ec43 2b10 	vmov	d0, r2, r3
 800ee6c:	4834      	ldr	r0, [pc, #208]	; (800ef40 <Ctrl_Task+0x8a8>)
 800ee6e:	f7f5 ff8b 	bl	8004d88 <PID_Compute>
		//计算roll轴PID输出
		PID_Compute(&rollPID, target.rollAngle, imu_heading.rol,0.004,0.001);
 800ee72:	4b32      	ldr	r3, [pc, #200]	; (800ef3c <Ctrl_Task+0x8a4>)
 800ee74:	695b      	ldr	r3, [r3, #20]
 800ee76:	4618      	mov	r0, r3
 800ee78:	f7f1 fb66 	bl	8000548 <__aeabi_f2d>
 800ee7c:	4604      	mov	r4, r0
 800ee7e:	460d      	mov	r5, r1
 800ee80:	4b30      	ldr	r3, [pc, #192]	; (800ef44 <Ctrl_Task+0x8ac>)
 800ee82:	685b      	ldr	r3, [r3, #4]
 800ee84:	4618      	mov	r0, r3
 800ee86:	f7f1 fb5f 	bl	8000548 <__aeabi_f2d>
 800ee8a:	4602      	mov	r2, r0
 800ee8c:	460b      	mov	r3, r1
 800ee8e:	ed9f 3b24 	vldr	d3, [pc, #144]	; 800ef20 <Ctrl_Task+0x888>
 800ee92:	ed9f 2b25 	vldr	d2, [pc, #148]	; 800ef28 <Ctrl_Task+0x890>
 800ee96:	ec43 2b11 	vmov	d1, r2, r3
 800ee9a:	ec45 4b10 	vmov	d0, r4, r5
 800ee9e:	482a      	ldr	r0, [pc, #168]	; (800ef48 <Ctrl_Task+0x8b0>)
 800eea0:	f7f5 ff72 	bl	8004d88 <PID_Compute>
		//根据离地状态计算左右腿推力，若离地则不考虑roll轴PID输出和前馈量
		double leftForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? +rollPID.output : 0) + 13;
 800eea4:	4b26      	ldr	r3, [pc, #152]	; (800ef40 <Ctrl_Task+0x8a8>)
 800eea6:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800eeaa:	4922      	ldr	r1, [pc, #136]	; (800ef34 <Ctrl_Task+0x89c>)
 800eeac:	7a09      	ldrb	r1, [r1, #8]
 800eeae:	2900      	cmp	r1, #0
 800eeb0:	d00a      	beq.n	800eec8 <Ctrl_Task+0x830>
 800eeb2:	4920      	ldr	r1, [pc, #128]	; (800ef34 <Ctrl_Task+0x89c>)
 800eeb4:	7a49      	ldrb	r1, [r1, #9]
 800eeb6:	f081 0101 	eor.w	r1, r1, #1
 800eeba:	b2c9      	uxtb	r1, r1
 800eebc:	2900      	cmp	r1, #0
 800eebe:	d003      	beq.n	800eec8 <Ctrl_Task+0x830>
 800eec0:	4921      	ldr	r1, [pc, #132]	; (800ef48 <Ctrl_Task+0x8b0>)
 800eec2:	e9d1 010e 	ldrd	r0, r1, [r1, #56]	; 0x38
 800eec6:	e003      	b.n	800eed0 <Ctrl_Task+0x838>
 800eec8:	f04f 0000 	mov.w	r0, #0
 800eecc:	f04f 0100 	mov.w	r1, #0
 800eed0:	f7f1 f9dc 	bl	800028c <__adddf3>
 800eed4:	4602      	mov	r2, r0
 800eed6:	460b      	mov	r3, r1
 800eed8:	4610      	mov	r0, r2
 800eeda:	4619      	mov	r1, r3
 800eedc:	f04f 0200 	mov.w	r2, #0
 800eee0:	4b1a      	ldr	r3, [pc, #104]	; (800ef4c <Ctrl_Task+0x8b4>)
 800eee2:	f7f1 f9d3 	bl	800028c <__adddf3>
 800eee6:	4602      	mov	r2, r0
 800eee8:	460b      	mov	r3, r1
 800eeea:	e9c7 2366 	strd	r2, r3, [r7, #408]	; 0x198
		double rightForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? -rollPID.output : 0) + 13;
 800eeee:	4b14      	ldr	r3, [pc, #80]	; (800ef40 <Ctrl_Task+0x8a8>)
 800eef0:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 800eef4:	4b0f      	ldr	r3, [pc, #60]	; (800ef34 <Ctrl_Task+0x89c>)
 800eef6:	7a1b      	ldrb	r3, [r3, #8]
 800eef8:	2b00      	cmp	r3, #0
 800eefa:	d029      	beq.n	800ef50 <Ctrl_Task+0x8b8>
 800eefc:	4b0d      	ldr	r3, [pc, #52]	; (800ef34 <Ctrl_Task+0x89c>)
 800eefe:	7a5b      	ldrb	r3, [r3, #9]
 800ef00:	f083 0301 	eor.w	r3, r3, #1
 800ef04:	b2db      	uxtb	r3, r3
 800ef06:	2b00      	cmp	r3, #0
 800ef08:	d022      	beq.n	800ef50 <Ctrl_Task+0x8b8>
 800ef0a:	4b0f      	ldr	r3, [pc, #60]	; (800ef48 <Ctrl_Task+0x8b0>)
 800ef0c:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800ef10:	4690      	mov	r8, r2
 800ef12:	f083 4900 	eor.w	r9, r3, #2147483648	; 0x80000000
 800ef16:	e01f      	b.n	800ef58 <Ctrl_Task+0x8c0>
 800ef18:	a0000000 	.word	0xa0000000
 800ef1c:	3fc99999 	.word	0x3fc99999
 800ef20:	d2f1a9fc 	.word	0xd2f1a9fc
 800ef24:	3f50624d 	.word	0x3f50624d
 800ef28:	d2f1a9fc 	.word	0xd2f1a9fc
 800ef2c:	3f70624d 	.word	0x3f70624d
 800ef30:	20003898 	.word	0x20003898
 800ef34:	20000044 	.word	0x20000044
 800ef38:	200018a8 	.word	0x200018a8
 800ef3c:	20000028 	.word	0x20000028
 800ef40:	20003858 	.word	0x20003858
 800ef44:	2000327c 	.word	0x2000327c
 800ef48:	200038d8 	.word	0x200038d8
 800ef4c:	402a0000 	.word	0x402a0000
 800ef50:	f04f 0800 	mov.w	r8, #0
 800ef54:	f04f 0900 	mov.w	r9, #0
 800ef58:	4602      	mov	r2, r0
 800ef5a:	460b      	mov	r3, r1
 800ef5c:	4640      	mov	r0, r8
 800ef5e:	4649      	mov	r1, r9
 800ef60:	f7f1 f994 	bl	800028c <__adddf3>
 800ef64:	4602      	mov	r2, r0
 800ef66:	460b      	mov	r3, r1
 800ef68:	4610      	mov	r0, r2
 800ef6a:	4619      	mov	r1, r3
 800ef6c:	f04f 0200 	mov.w	r2, #0
 800ef70:	4b62      	ldr	r3, [pc, #392]	; (800f0fc <Ctrl_Task+0xa64>)
 800ef72:	f7f1 f98b 	bl	800028c <__adddf3>
 800ef76:	4602      	mov	r2, r0
 800ef78:	460b      	mov	r3, r1
 800ef7a:	e9c7 2364 	strd	r2, r3, [r7, #400]	; 0x190
//		double leftForce = legLengthPID.output + 5.0;
//		double rightForce = legLengthPID.output + 5.0;
		if(leftLegPos.length > 0.22f) //保护腿部不能伸太长
 800ef7e:	4b60      	ldr	r3, [pc, #384]	; (800f100 <Ctrl_Task+0xa68>)
 800ef80:	edd3 7a01 	vldr	s15, [r3, #4]
 800ef84:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 800f104 <Ctrl_Task+0xa6c>
 800ef88:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ef8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef90:	dd14      	ble.n	800efbc <Ctrl_Task+0x924>
			leftForce -= (leftLegPos.length - 0.2f) * 1;
 800ef92:	4b5b      	ldr	r3, [pc, #364]	; (800f100 <Ctrl_Task+0xa68>)
 800ef94:	edd3 7a01 	vldr	s15, [r3, #4]
 800ef98:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 800f108 <Ctrl_Task+0xa70>
 800ef9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800efa0:	ee17 0a90 	vmov	r0, s15
 800efa4:	f7f1 fad0 	bl	8000548 <__aeabi_f2d>
 800efa8:	4602      	mov	r2, r0
 800efaa:	460b      	mov	r3, r1
 800efac:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 800efb0:	f7f1 f96a 	bl	8000288 <__aeabi_dsub>
 800efb4:	4602      	mov	r2, r0
 800efb6:	460b      	mov	r3, r1
 800efb8:	e9c7 2366 	strd	r2, r3, [r7, #408]	; 0x198
		if(rightLegPos.length > 0.22f)
 800efbc:	4b53      	ldr	r3, [pc, #332]	; (800f10c <Ctrl_Task+0xa74>)
 800efbe:	edd3 7a01 	vldr	s15, [r3, #4]
 800efc2:	ed9f 7a50 	vldr	s14, [pc, #320]	; 800f104 <Ctrl_Task+0xa6c>
 800efc6:	eef4 7ac7 	vcmpe.f32	s15, s14
 800efca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efce:	dd14      	ble.n	800effa <Ctrl_Task+0x962>
			rightForce -= (rightLegPos.length - 0.2f) * 1;
 800efd0:	4b4e      	ldr	r3, [pc, #312]	; (800f10c <Ctrl_Task+0xa74>)
 800efd2:	edd3 7a01 	vldr	s15, [r3, #4]
 800efd6:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 800f108 <Ctrl_Task+0xa70>
 800efda:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800efde:	ee17 0a90 	vmov	r0, s15
 800efe2:	f7f1 fab1 	bl	8000548 <__aeabi_f2d>
 800efe6:	4602      	mov	r2, r0
 800efe8:	460b      	mov	r3, r1
 800efea:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 800efee:	f7f1 f94b 	bl	8000288 <__aeabi_dsub>
 800eff2:	4602      	mov	r2, r0
 800eff4:	460b      	mov	r3, r1
 800eff6:	e9c7 2364 	strd	r2, r3, [r7, #400]	; 0x190

		//计算左右腿的地面支持力
		groundDetector.leftSupportForce = leftForce + legMass * 9.8f - legMass * (leftLegPos.ddLength - imu_heading.ddz - 9.8f);
 800effa:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800effe:	ed9f 7a44 	vldr	s14, [pc, #272]	; 800f110 <Ctrl_Task+0xa78>
 800f002:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f006:	ee17 0a90 	vmov	r0, s15
 800f00a:	f7f1 fa9d 	bl	8000548 <__aeabi_f2d>
 800f00e:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	; 0x198
 800f012:	f7f1 f93b 	bl	800028c <__adddf3>
 800f016:	4602      	mov	r2, r0
 800f018:	460b      	mov	r3, r1
 800f01a:	4614      	mov	r4, r2
 800f01c:	461d      	mov	r5, r3
 800f01e:	4b38      	ldr	r3, [pc, #224]	; (800f100 <Ctrl_Task+0xa68>)
 800f020:	ed93 7a04 	vldr	s14, [r3, #16]
 800f024:	4b3b      	ldr	r3, [pc, #236]	; (800f114 <Ctrl_Task+0xa7c>)
 800f026:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 800f02a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f02e:	ed9f 7a38 	vldr	s14, [pc, #224]	; 800f110 <Ctrl_Task+0xa78>
 800f032:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800f036:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f03a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f03e:	ee17 0a90 	vmov	r0, s15
 800f042:	f7f1 fa81 	bl	8000548 <__aeabi_f2d>
 800f046:	4602      	mov	r2, r0
 800f048:	460b      	mov	r3, r1
 800f04a:	4620      	mov	r0, r4
 800f04c:	4629      	mov	r1, r5
 800f04e:	f7f1 f91b 	bl	8000288 <__aeabi_dsub>
 800f052:	4602      	mov	r2, r0
 800f054:	460b      	mov	r3, r1
 800f056:	4610      	mov	r0, r2
 800f058:	4619      	mov	r1, r3
 800f05a:	f7f1 fdc5 	bl	8000be8 <__aeabi_d2f>
 800f05e:	4603      	mov	r3, r0
 800f060:	4a2d      	ldr	r2, [pc, #180]	; (800f118 <Ctrl_Task+0xa80>)
 800f062:	6013      	str	r3, [r2, #0]
		groundDetector.rightSupportForce = rightForce + legMass * 9.8f - legMass * (rightLegPos.ddLength - imu_heading.ddz - 9.8f);
 800f064:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f068:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800f110 <Ctrl_Task+0xa78>
 800f06c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f070:	ee17 0a90 	vmov	r0, s15
 800f074:	f7f1 fa68 	bl	8000548 <__aeabi_f2d>
 800f078:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	; 0x190
 800f07c:	f7f1 f906 	bl	800028c <__adddf3>
 800f080:	4602      	mov	r2, r0
 800f082:	460b      	mov	r3, r1
 800f084:	4614      	mov	r4, r2
 800f086:	461d      	mov	r5, r3
 800f088:	4b20      	ldr	r3, [pc, #128]	; (800f10c <Ctrl_Task+0xa74>)
 800f08a:	ed93 7a04 	vldr	s14, [r3, #16]
 800f08e:	4b21      	ldr	r3, [pc, #132]	; (800f114 <Ctrl_Task+0xa7c>)
 800f090:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 800f094:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f098:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 800f110 <Ctrl_Task+0xa78>
 800f09c:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800f0a0:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f0a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f0a8:	ee17 0a90 	vmov	r0, s15
 800f0ac:	f7f1 fa4c 	bl	8000548 <__aeabi_f2d>
 800f0b0:	4602      	mov	r2, r0
 800f0b2:	460b      	mov	r3, r1
 800f0b4:	4620      	mov	r0, r4
 800f0b6:	4629      	mov	r1, r5
 800f0b8:	f7f1 f8e6 	bl	8000288 <__aeabi_dsub>
 800f0bc:	4602      	mov	r2, r0
 800f0be:	460b      	mov	r3, r1
 800f0c0:	4610      	mov	r0, r2
 800f0c2:	4619      	mov	r1, r3
 800f0c4:	f7f1 fd90 	bl	8000be8 <__aeabi_d2f>
 800f0c8:	4603      	mov	r3, r0
 800f0ca:	4a13      	ldr	r2, [pc, #76]	; (800f118 <Ctrl_Task+0xa80>)
 800f0cc:	6053      	str	r3, [r2, #4]
		//更新离地检测器数据
		static uint32_t lastTouchTime = 0;
		bool isTouchingGround = groundDetector.leftSupportForce > -100 && groundDetector.rightSupportForce > -100; //判断当前瞬间是否接地
 800f0ce:	4b12      	ldr	r3, [pc, #72]	; (800f118 <Ctrl_Task+0xa80>)
 800f0d0:	edd3 7a00 	vldr	s15, [r3]
 800f0d4:	ed9f 7a11 	vldr	s14, [pc, #68]	; 800f11c <Ctrl_Task+0xa84>
 800f0d8:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f0dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0e0:	dd1e      	ble.n	800f120 <Ctrl_Task+0xa88>
 800f0e2:	4b0d      	ldr	r3, [pc, #52]	; (800f118 <Ctrl_Task+0xa80>)
 800f0e4:	edd3 7a01 	vldr	s15, [r3, #4]
 800f0e8:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 800f11c <Ctrl_Task+0xa84>
 800f0ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f0f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0f4:	dd14      	ble.n	800f120 <Ctrl_Task+0xa88>
 800f0f6:	2301      	movs	r3, #1
 800f0f8:	e013      	b.n	800f122 <Ctrl_Task+0xa8a>
 800f0fa:	bf00      	nop
 800f0fc:	402a0000 	.word	0x402a0000
 800f100:	200037d8 	.word	0x200037d8
 800f104:	3e6147ae 	.word	0x3e6147ae
 800f108:	3e4ccccd 	.word	0x3e4ccccd
 800f10c:	200037ec 	.word	0x200037ec
 800f110:	411ccccd 	.word	0x411ccccd
 800f114:	2000327c 	.word	0x2000327c
 800f118:	20000044 	.word	0x20000044
 800f11c:	c2c80000 	.word	0xc2c80000
 800f120:	2300      	movs	r3, #0
 800f122:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
 800f126:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f12a:	f003 0301 	and.w	r3, r3, #1
 800f12e:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
		if(!isTouchingGround && (get_microseconds()/1000) - lastTouchTime < 1000) //若上次触地时间距离现在不超过1s，则认为当前瞬间接地，避免弹跳导致误判
 800f132:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f136:	f083 0301 	eor.w	r3, r3, #1
 800f13a:	b2db      	uxtb	r3, r3
 800f13c:	2b00      	cmp	r3, #0
 800f13e:	d00f      	beq.n	800f160 <Ctrl_Task+0xac8>
 800f140:	f7f3 f896 	bl	8002270 <get_microseconds>
 800f144:	4603      	mov	r3, r0
 800f146:	4a98      	ldr	r2, [pc, #608]	; (800f3a8 <Ctrl_Task+0xd10>)
 800f148:	fba2 2303 	umull	r2, r3, r2, r3
 800f14c:	099a      	lsrs	r2, r3, #6
 800f14e:	4b97      	ldr	r3, [pc, #604]	; (800f3ac <Ctrl_Task+0xd14>)
 800f150:	681b      	ldr	r3, [r3, #0]
 800f152:	1ad3      	subs	r3, r2, r3
 800f154:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800f158:	d202      	bcs.n	800f160 <Ctrl_Task+0xac8>
			isTouchingGround = true;
 800f15a:	2301      	movs	r3, #1
 800f15c:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
		if(!groundDetector.isTouchingGround && isTouchingGround) //判断转为接地状态，标记进入缓冲状态
 800f160:	4b93      	ldr	r3, [pc, #588]	; (800f3b0 <Ctrl_Task+0xd18>)
 800f162:	7a1b      	ldrb	r3, [r3, #8]
 800f164:	f083 0301 	eor.w	r3, r3, #1
 800f168:	b2db      	uxtb	r3, r3
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	d013      	beq.n	800f196 <Ctrl_Task+0xafe>
 800f16e:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f172:	2b00      	cmp	r3, #0
 800f174:	d00f      	beq.n	800f196 <Ctrl_Task+0xafe>
		{
			target.position = stateVar.x;
 800f176:	4b8f      	ldr	r3, [pc, #572]	; (800f3b4 <Ctrl_Task+0xd1c>)
 800f178:	689b      	ldr	r3, [r3, #8]
 800f17a:	4a8f      	ldr	r2, [pc, #572]	; (800f3b8 <Ctrl_Task+0xd20>)
 800f17c:	6013      	str	r3, [r2, #0]
			groundDetector.isCuchioning = true;
 800f17e:	4b8c      	ldr	r3, [pc, #560]	; (800f3b0 <Ctrl_Task+0xd18>)
 800f180:	2201      	movs	r2, #1
 800f182:	725a      	strb	r2, [r3, #9]
			lastTouchTime = (get_microseconds()/1000);
 800f184:	f7f3 f874 	bl	8002270 <get_microseconds>
 800f188:	4603      	mov	r3, r0
 800f18a:	4a87      	ldr	r2, [pc, #540]	; (800f3a8 <Ctrl_Task+0xd10>)
 800f18c:	fba2 2303 	umull	r2, r3, r2, r3
 800f190:	099b      	lsrs	r3, r3, #6
 800f192:	4a86      	ldr	r2, [pc, #536]	; (800f3ac <Ctrl_Task+0xd14>)
 800f194:	6013      	str	r3, [r2, #0]
		}
		if(groundDetector.isCuchioning && legLength < target.legLength) //缓冲状态直到腿长压缩到目标腿长结束
 800f196:	4b86      	ldr	r3, [pc, #536]	; (800f3b0 <Ctrl_Task+0xd18>)
 800f198:	7a5b      	ldrb	r3, [r3, #9]
 800f19a:	2b00      	cmp	r3, #0
 800f19c:	d010      	beq.n	800f1c0 <Ctrl_Task+0xb28>
 800f19e:	4b86      	ldr	r3, [pc, #536]	; (800f3b8 <Ctrl_Task+0xd20>)
 800f1a0:	699b      	ldr	r3, [r3, #24]
 800f1a2:	4618      	mov	r0, r3
 800f1a4:	f7f1 f9d0 	bl	8000548 <__aeabi_f2d>
 800f1a8:	4602      	mov	r2, r0
 800f1aa:	460b      	mov	r3, r1
 800f1ac:	e9d7 0158 	ldrd	r0, r1, [r7, #352]	; 0x160
 800f1b0:	f7f1 fc94 	bl	8000adc <__aeabi_dcmplt>
 800f1b4:	4603      	mov	r3, r0
 800f1b6:	2b00      	cmp	r3, #0
 800f1b8:	d002      	beq.n	800f1c0 <Ctrl_Task+0xb28>
			groundDetector.isCuchioning = false;
 800f1ba:	4b7d      	ldr	r3, [pc, #500]	; (800f3b0 <Ctrl_Task+0xd18>)
 800f1bc:	2200      	movs	r2, #0
 800f1be:	725a      	strb	r2, [r3, #9]
		groundDetector.isTouchingGround = isTouchingGround;
 800f1c0:	4a7b      	ldr	r2, [pc, #492]	; (800f3b0 <Ctrl_Task+0xd18>)
 800f1c2:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f1c6:	7213      	strb	r3, [r2, #8]

		//计算左右腿角度差PID输出
		// PID_Compute(&legAnglePID, 0, leftLegPos.angle - rightLegPos.angle,0.004,0.01);
        legAnglePID.output = 0;
 800f1c8:	497c      	ldr	r1, [pc, #496]	; (800f3bc <Ctrl_Task+0xd24>)
 800f1ca:	f04f 0200 	mov.w	r2, #0
 800f1ce:	f04f 0300 	mov.w	r3, #0
 800f1d2:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

		//计算髋关节扭矩输出，为LQR输出和左右腿角度差PID输出的叠加
//		double leftTp = lqrOutTp * lqrTpRatio - legAnglePID.output * (leftLegPos.length / 0.15f);
//		double rightTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (rightLegPos.length / 0.15f);
		double leftTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (leftLegPos.length / 0.1f);
 800f1d6:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800f1da:	eeb1 7a67 	vneg.f32	s14, s15
 800f1de:	edd7 7a5d 	vldr	s15, [r7, #372]	; 0x174
 800f1e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f1e6:	ee17 0a90 	vmov	r0, s15
 800f1ea:	f7f1 f9ad 	bl	8000548 <__aeabi_f2d>
 800f1ee:	4682      	mov	sl, r0
 800f1f0:	468b      	mov	fp, r1
 800f1f2:	4b72      	ldr	r3, [pc, #456]	; (800f3bc <Ctrl_Task+0xd24>)
 800f1f4:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800f1f8:	4b71      	ldr	r3, [pc, #452]	; (800f3c0 <Ctrl_Task+0xd28>)
 800f1fa:	edd3 7a01 	vldr	s15, [r3, #4]
 800f1fe:	ed9f 7a71 	vldr	s14, [pc, #452]	; 800f3c4 <Ctrl_Task+0xd2c>
 800f202:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f206:	ee16 0a90 	vmov	r0, s13
 800f20a:	f7f1 f99d 	bl	8000548 <__aeabi_f2d>
 800f20e:	4602      	mov	r2, r0
 800f210:	460b      	mov	r3, r1
 800f212:	4620      	mov	r0, r4
 800f214:	4629      	mov	r1, r5
 800f216:	f7f1 f9ef 	bl	80005f8 <__aeabi_dmul>
 800f21a:	4602      	mov	r2, r0
 800f21c:	460b      	mov	r3, r1
 800f21e:	4650      	mov	r0, sl
 800f220:	4659      	mov	r1, fp
 800f222:	f7f1 f833 	bl	800028c <__adddf3>
 800f226:	4602      	mov	r2, r0
 800f228:	460b      	mov	r3, r1
 800f22a:	e9c7 2352 	strd	r2, r3, [r7, #328]	; 0x148
		double rightTp = -lqrOutTp * lqrTpRatio - legAnglePID.output * (rightLegPos.length / 0.1f);
 800f22e:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800f232:	eeb1 7a67 	vneg.f32	s14, s15
 800f236:	edd7 7a5d 	vldr	s15, [r7, #372]	; 0x174
 800f23a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f23e:	ee17 0a90 	vmov	r0, s15
 800f242:	f7f1 f981 	bl	8000548 <__aeabi_f2d>
 800f246:	4682      	mov	sl, r0
 800f248:	468b      	mov	fp, r1
 800f24a:	4b5c      	ldr	r3, [pc, #368]	; (800f3bc <Ctrl_Task+0xd24>)
 800f24c:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800f250:	4b5d      	ldr	r3, [pc, #372]	; (800f3c8 <Ctrl_Task+0xd30>)
 800f252:	edd3 7a01 	vldr	s15, [r3, #4]
 800f256:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 800f3c4 <Ctrl_Task+0xd2c>
 800f25a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f25e:	ee16 0a90 	vmov	r0, s13
 800f262:	f7f1 f971 	bl	8000548 <__aeabi_f2d>
 800f266:	4602      	mov	r2, r0
 800f268:	460b      	mov	r3, r1
 800f26a:	4620      	mov	r0, r4
 800f26c:	4629      	mov	r1, r5
 800f26e:	f7f1 f9c3 	bl	80005f8 <__aeabi_dmul>
 800f272:	4602      	mov	r2, r0
 800f274:	460b      	mov	r3, r1
 800f276:	4650      	mov	r0, sl
 800f278:	4659      	mov	r1, fp
 800f27a:	f7f1 f805 	bl	8000288 <__aeabi_dsub>
 800f27e:	4602      	mov	r2, r0
 800f280:	460b      	mov	r3, r1
 800f282:	e9c7 2350 	strd	r2, r3, [r7, #320]	; 0x140



		//使用VMC计算各关节电机输出扭矩
		double leftJointTorque[2]={0};
 800f286:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800f28a:	2200      	movs	r2, #0
 800f28c:	601a      	str	r2, [r3, #0]
 800f28e:	605a      	str	r2, [r3, #4]
 800f290:	609a      	str	r2, [r3, #8]
 800f292:	60da      	str	r2, [r3, #12]
		leg_conv(leftForce, leftTp, leftJoint[1].angle, leftJoint[0].angle, leftJointTorque);
 800f294:	4b4d      	ldr	r3, [pc, #308]	; (800f3cc <Ctrl_Task+0xd34>)
 800f296:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800f29a:	4b4c      	ldr	r3, [pc, #304]	; (800f3cc <Ctrl_Task+0xd34>)
 800f29c:	ed93 6b02 	vldr	d6, [r3, #8]
 800f2a0:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800f2a4:	4618      	mov	r0, r3
 800f2a6:	eeb0 3a46 	vmov.f32	s6, s12
 800f2aa:	eef0 3a66 	vmov.f32	s7, s13
 800f2ae:	eeb0 2a47 	vmov.f32	s4, s14
 800f2b2:	eef0 2a67 	vmov.f32	s5, s15
 800f2b6:	ed97 1b52 	vldr	d1, [r7, #328]	; 0x148
 800f2ba:	ed97 0b66 	vldr	d0, [r7, #408]	; 0x198
 800f2be:	f7fa fb57 	bl	8009970 <leg_conv>
		double rightJointTorque[2]={0};
 800f2c2:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800f2c6:	2200      	movs	r2, #0
 800f2c8:	601a      	str	r2, [r3, #0]
 800f2ca:	605a      	str	r2, [r3, #4]
 800f2cc:	609a      	str	r2, [r3, #8]
 800f2ce:	60da      	str	r2, [r3, #12]
		leg_conv(rightForce, rightTp, rightJoint[1].angle, rightJoint[0].angle, rightJointTorque);
 800f2d0:	4b3f      	ldr	r3, [pc, #252]	; (800f3d0 <Ctrl_Task+0xd38>)
 800f2d2:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800f2d6:	4b3e      	ldr	r3, [pc, #248]	; (800f3d0 <Ctrl_Task+0xd38>)
 800f2d8:	ed93 6b02 	vldr	d6, [r3, #8]
 800f2dc:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800f2e0:	4618      	mov	r0, r3
 800f2e2:	eeb0 3a46 	vmov.f32	s6, s12
 800f2e6:	eef0 3a66 	vmov.f32	s7, s13
 800f2ea:	eeb0 2a47 	vmov.f32	s4, s14
 800f2ee:	eef0 2a67 	vmov.f32	s5, s15
 800f2f2:	ed97 1b50 	vldr	d1, [r7, #320]	; 0x140
 800f2f6:	ed97 0b64 	vldr	d0, [r7, #400]	; 0x190
 800f2fa:	f7fa fb39 	bl	8009970 <leg_conv>

		leftF_check = leftForce;
 800f2fe:	4935      	ldr	r1, [pc, #212]	; (800f3d4 <Ctrl_Task+0xd3c>)
 800f300:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	; 0x198
 800f304:	e9c1 2300 	strd	r2, r3, [r1]
		leftTp_check = leftTp;
 800f308:	4933      	ldr	r1, [pc, #204]	; (800f3d8 <Ctrl_Task+0xd40>)
 800f30a:	e9d7 2352 	ldrd	r2, r3, [r7, #328]	; 0x148
 800f30e:	e9c1 2300 	strd	r2, r3, [r1]
		rightF_check = rightForce;
 800f312:	4932      	ldr	r1, [pc, #200]	; (800f3dc <Ctrl_Task+0xd44>)
 800f314:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	; 0x190
 800f318:	e9c1 2300 	strd	r2, r3, [r1]
		rightTp_check = rightTp;
 800f31c:	4930      	ldr	r1, [pc, #192]	; (800f3e0 <Ctrl_Task+0xd48>)
 800f31e:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	; 0x140
 800f322:	e9c1 2300 	strd	r2, r3, [r1]
		// if (g_remote_cmd.right_switch == 3){
		// 	standupState = StandupState_Standup;
		// }else{
		// 	standupState = StandupState_None;
		// }
		float leftTheta = leftLegPos.angle - imu_heading.pit - M_PI_2;
 800f326:	4b26      	ldr	r3, [pc, #152]	; (800f3c0 <Ctrl_Task+0xd28>)
 800f328:	ed93 7a00 	vldr	s14, [r3]
 800f32c:	4b2d      	ldr	r3, [pc, #180]	; (800f3e4 <Ctrl_Task+0xd4c>)
 800f32e:	edd3 7a00 	vldr	s15, [r3]
 800f332:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f336:	ee17 0a90 	vmov	r0, s15
 800f33a:	f7f1 f905 	bl	8000548 <__aeabi_f2d>
 800f33e:	a318      	add	r3, pc, #96	; (adr r3, 800f3a0 <Ctrl_Task+0xd08>)
 800f340:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f344:	f7f0 ffa0 	bl	8000288 <__aeabi_dsub>
 800f348:	4602      	mov	r2, r0
 800f34a:	460b      	mov	r3, r1
 800f34c:	4610      	mov	r0, r2
 800f34e:	4619      	mov	r1, r3
 800f350:	f7f1 fc4a 	bl	8000be8 <__aeabi_d2f>
 800f354:	4603      	mov	r3, r0
 800f356:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
		float rightTheta = rightLegPos.angle - imu_heading.pit - M_PI_2;
 800f35a:	4b1b      	ldr	r3, [pc, #108]	; (800f3c8 <Ctrl_Task+0xd30>)
 800f35c:	ed93 7a00 	vldr	s14, [r3]
 800f360:	4b20      	ldr	r3, [pc, #128]	; (800f3e4 <Ctrl_Task+0xd4c>)
 800f362:	edd3 7a00 	vldr	s15, [r3]
 800f366:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f36a:	ee17 0a90 	vmov	r0, s15
 800f36e:	f7f1 f8eb 	bl	8000548 <__aeabi_f2d>
 800f372:	a30b      	add	r3, pc, #44	; (adr r3, 800f3a0 <Ctrl_Task+0xd08>)
 800f374:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f378:	f7f0 ff86 	bl	8000288 <__aeabi_dsub>
 800f37c:	4602      	mov	r2, r0
 800f37e:	460b      	mov	r3, r1
 800f380:	4610      	mov	r0, r2
 800f382:	4619      	mov	r1, r3
 800f384:	f7f1 fc30 	bl	8000be8 <__aeabi_d2f>
 800f388:	4603      	mov	r3, r0
 800f38a:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
//		l1 = leftJointTorque[0];
//		l4 = leftJointTorque[1];
//		r1 = rightJointTorque[0];
//		r4 = rightJointTorque[1];

		vTaskDelayUntil(&xLastWakeTime, 4); //4ms控制周期
 800f38e:	f507 739a 	add.w	r3, r7, #308	; 0x134
 800f392:	2104      	movs	r1, #4
 800f394:	4618      	mov	r0, r3
 800f396:	f00d fafd 	bl	801c994 <vTaskDelayUntil>
	{
 800f39a:	f7ff b9e5 	b.w	800e768 <Ctrl_Task+0xd0>
 800f39e:	bf00      	nop
 800f3a0:	54442d18 	.word	0x54442d18
 800f3a4:	3ff921fb 	.word	0x3ff921fb
 800f3a8:	10624dd3 	.word	0x10624dd3
 800f3ac:	200039b4 	.word	0x200039b4
 800f3b0:	20000044 	.word	0x20000044
 800f3b4:	20003800 	.word	0x20003800
 800f3b8:	20000028 	.word	0x20000028
 800f3bc:	20003818 	.word	0x20003818
 800f3c0:	200037d8 	.word	0x200037d8
 800f3c4:	3dcccccd 	.word	0x3dcccccd
 800f3c8:	200037ec 	.word	0x200037ec
 800f3cc:	20003628 	.word	0x20003628
 800f3d0:	200036b8 	.word	0x200036b8
 800f3d4:	20003928 	.word	0x20003928
 800f3d8:	20003930 	.word	0x20003930
 800f3dc:	20003938 	.word	0x20003938
 800f3e0:	20003940 	.word	0x20003940
 800f3e4:	2000327c 	.word	0x2000327c

0800f3e8 <Ctrl_Init>:
	}
}
void Ctrl_Init()
{
 800f3e8:	b580      	push	{r7, lr}
 800f3ea:	af00      	add	r7, sp, #0
	//初始化各个PID参数
//	PID_SetErrLpfRatio(&rollPID.inner, 0.1f);
	PID_Init(&legLengthPID, 500, 0.0, 0.0, -300.0, 300.0);
 800f3ec:	ed9f 4b1a 	vldr	d4, [pc, #104]	; 800f458 <Ctrl_Init+0x70>
 800f3f0:	ed9f 3b1b 	vldr	d3, [pc, #108]	; 800f460 <Ctrl_Init+0x78>
 800f3f4:	ed9f 2b1c 	vldr	d2, [pc, #112]	; 800f468 <Ctrl_Init+0x80>
 800f3f8:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 800f468 <Ctrl_Init+0x80>
 800f3fc:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 800f470 <Ctrl_Init+0x88>
 800f400:	482f      	ldr	r0, [pc, #188]	; (800f4c0 <Ctrl_Init+0xd8>)
 800f402:	f7f5 fc86 	bl	8004d12 <PID_Init>
//	PID_SetErrLpfRatio(&legLengthPID.inner, 0.5f);
	PID_Init(&legAnglePID, 13, 0.0, 0.0, -3.0, 3.0);
 800f406:	ed9f 4b1c 	vldr	d4, [pc, #112]	; 800f478 <Ctrl_Init+0x90>
 800f40a:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 800f480 <Ctrl_Init+0x98>
 800f40e:	ed9f 2b16 	vldr	d2, [pc, #88]	; 800f468 <Ctrl_Init+0x80>
 800f412:	ed9f 1b15 	vldr	d1, [pc, #84]	; 800f468 <Ctrl_Init+0x80>
 800f416:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 800f488 <Ctrl_Init+0xa0>
 800f41a:	482a      	ldr	r0, [pc, #168]	; (800f4c4 <Ctrl_Init+0xdc>)
 800f41c:	f7f5 fc79 	bl	8004d12 <PID_Init>
//	PID_SetErrLpfRatio(&legAnglePID.outer, 0.5f);
	PID_Init(&rollPID, 55, 0.0, 0.0, -50.0, 50.0);
 800f420:	ed9f 4b1b 	vldr	d4, [pc, #108]	; 800f490 <Ctrl_Init+0xa8>
 800f424:	ed9f 3b1c 	vldr	d3, [pc, #112]	; 800f498 <Ctrl_Init+0xb0>
 800f428:	ed9f 2b0f 	vldr	d2, [pc, #60]	; 800f468 <Ctrl_Init+0x80>
 800f42c:	ed9f 1b0e 	vldr	d1, [pc, #56]	; 800f468 <Ctrl_Init+0x80>
 800f430:	ed9f 0b1b 	vldr	d0, [pc, #108]	; 800f4a0 <Ctrl_Init+0xb8>
 800f434:	4824      	ldr	r0, [pc, #144]	; (800f4c8 <Ctrl_Init+0xe0>)
 800f436:	f7f5 fc6c 	bl	8004d12 <PID_Init>
	PID_Init(&yawPID, 0.5f, 0.0, 0.0, -1, 1);
 800f43a:	ed9f 4b1b 	vldr	d4, [pc, #108]	; 800f4a8 <Ctrl_Init+0xc0>
 800f43e:	ed9f 3b1c 	vldr	d3, [pc, #112]	; 800f4b0 <Ctrl_Init+0xc8>
 800f442:	ed9f 2b09 	vldr	d2, [pc, #36]	; 800f468 <Ctrl_Init+0x80>
 800f446:	ed9f 1b08 	vldr	d1, [pc, #32]	; 800f468 <Ctrl_Init+0x80>
 800f44a:	ed9f 0b1b 	vldr	d0, [pc, #108]	; 800f4b8 <Ctrl_Init+0xd0>
 800f44e:	481f      	ldr	r0, [pc, #124]	; (800f4cc <Ctrl_Init+0xe4>)
 800f450:	f7f5 fc5f 	bl	8004d12 <PID_Init>
}
 800f454:	bf00      	nop
 800f456:	bd80      	pop	{r7, pc}
 800f458:	00000000 	.word	0x00000000
 800f45c:	4072c000 	.word	0x4072c000
 800f460:	00000000 	.word	0x00000000
 800f464:	c072c000 	.word	0xc072c000
	...
 800f474:	407f4000 	.word	0x407f4000
 800f478:	00000000 	.word	0x00000000
 800f47c:	40080000 	.word	0x40080000
 800f480:	00000000 	.word	0x00000000
 800f484:	c0080000 	.word	0xc0080000
 800f488:	00000000 	.word	0x00000000
 800f48c:	402a0000 	.word	0x402a0000
 800f490:	00000000 	.word	0x00000000
 800f494:	40490000 	.word	0x40490000
 800f498:	00000000 	.word	0x00000000
 800f49c:	c0490000 	.word	0xc0490000
 800f4a0:	00000000 	.word	0x00000000
 800f4a4:	404b8000 	.word	0x404b8000
 800f4a8:	00000000 	.word	0x00000000
 800f4ac:	3ff00000 	.word	0x3ff00000
 800f4b0:	00000000 	.word	0x00000000
 800f4b4:	bff00000 	.word	0xbff00000
 800f4b8:	00000000 	.word	0x00000000
 800f4bc:	3fe00000 	.word	0x3fe00000
 800f4c0:	20003858 	.word	0x20003858
 800f4c4:	20003818 	.word	0x20003818
 800f4c8:	200038d8 	.word	0x200038d8
 800f4cc:	20003898 	.word	0x20003898

0800f4d0 <HAL_Init>:
 800f4d0:	b580      	push	{r7, lr}
 800f4d2:	af00      	add	r7, sp, #0
 800f4d4:	4b0e      	ldr	r3, [pc, #56]	; (800f510 <HAL_Init+0x40>)
 800f4d6:	681b      	ldr	r3, [r3, #0]
 800f4d8:	4a0d      	ldr	r2, [pc, #52]	; (800f510 <HAL_Init+0x40>)
 800f4da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800f4de:	6013      	str	r3, [r2, #0]
 800f4e0:	4b0b      	ldr	r3, [pc, #44]	; (800f510 <HAL_Init+0x40>)
 800f4e2:	681b      	ldr	r3, [r3, #0]
 800f4e4:	4a0a      	ldr	r2, [pc, #40]	; (800f510 <HAL_Init+0x40>)
 800f4e6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800f4ea:	6013      	str	r3, [r2, #0]
 800f4ec:	4b08      	ldr	r3, [pc, #32]	; (800f510 <HAL_Init+0x40>)
 800f4ee:	681b      	ldr	r3, [r3, #0]
 800f4f0:	4a07      	ldr	r2, [pc, #28]	; (800f510 <HAL_Init+0x40>)
 800f4f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f4f6:	6013      	str	r3, [r2, #0]
 800f4f8:	2003      	movs	r0, #3
 800f4fa:	f001 f9de 	bl	80108ba <HAL_NVIC_SetPriorityGrouping>
 800f4fe:	2000      	movs	r0, #0
 800f500:	f7f4 fcc8 	bl	8003e94 <HAL_InitTick>
 800f504:	f7f4 fc9a 	bl	8003e3c <HAL_MspInit>
 800f508:	2300      	movs	r3, #0
 800f50a:	4618      	mov	r0, r3
 800f50c:	bd80      	pop	{r7, pc}
 800f50e:	bf00      	nop
 800f510:	40023c00 	.word	0x40023c00

0800f514 <HAL_IncTick>:
 800f514:	b480      	push	{r7}
 800f516:	af00      	add	r7, sp, #0
 800f518:	4b06      	ldr	r3, [pc, #24]	; (800f534 <HAL_IncTick+0x20>)
 800f51a:	781b      	ldrb	r3, [r3, #0]
 800f51c:	461a      	mov	r2, r3
 800f51e:	4b06      	ldr	r3, [pc, #24]	; (800f538 <HAL_IncTick+0x24>)
 800f520:	681b      	ldr	r3, [r3, #0]
 800f522:	4413      	add	r3, r2
 800f524:	4a04      	ldr	r2, [pc, #16]	; (800f538 <HAL_IncTick+0x24>)
 800f526:	6013      	str	r3, [r2, #0]
 800f528:	bf00      	nop
 800f52a:	46bd      	mov	sp, r7
 800f52c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f530:	4770      	bx	lr
 800f532:	bf00      	nop
 800f534:	20000058 	.word	0x20000058
 800f538:	200039b8 	.word	0x200039b8

0800f53c <HAL_GetTick>:
 800f53c:	b480      	push	{r7}
 800f53e:	af00      	add	r7, sp, #0
 800f540:	4b03      	ldr	r3, [pc, #12]	; (800f550 <HAL_GetTick+0x14>)
 800f542:	681b      	ldr	r3, [r3, #0]
 800f544:	4618      	mov	r0, r3
 800f546:	46bd      	mov	sp, r7
 800f548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f54c:	4770      	bx	lr
 800f54e:	bf00      	nop
 800f550:	200039b8 	.word	0x200039b8

0800f554 <HAL_Delay>:
 800f554:	b580      	push	{r7, lr}
 800f556:	b084      	sub	sp, #16
 800f558:	af00      	add	r7, sp, #0
 800f55a:	6078      	str	r0, [r7, #4]
 800f55c:	f7ff ffee 	bl	800f53c <HAL_GetTick>
 800f560:	60b8      	str	r0, [r7, #8]
 800f562:	687b      	ldr	r3, [r7, #4]
 800f564:	60fb      	str	r3, [r7, #12]
 800f566:	68fb      	ldr	r3, [r7, #12]
 800f568:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800f56c:	d005      	beq.n	800f57a <HAL_Delay+0x26>
 800f56e:	4b0a      	ldr	r3, [pc, #40]	; (800f598 <HAL_Delay+0x44>)
 800f570:	781b      	ldrb	r3, [r3, #0]
 800f572:	461a      	mov	r2, r3
 800f574:	68fb      	ldr	r3, [r7, #12]
 800f576:	4413      	add	r3, r2
 800f578:	60fb      	str	r3, [r7, #12]
 800f57a:	bf00      	nop
 800f57c:	f7ff ffde 	bl	800f53c <HAL_GetTick>
 800f580:	4602      	mov	r2, r0
 800f582:	68bb      	ldr	r3, [r7, #8]
 800f584:	1ad3      	subs	r3, r2, r3
 800f586:	68fa      	ldr	r2, [r7, #12]
 800f588:	429a      	cmp	r2, r3
 800f58a:	d8f7      	bhi.n	800f57c <HAL_Delay+0x28>
 800f58c:	bf00      	nop
 800f58e:	bf00      	nop
 800f590:	3710      	adds	r7, #16
 800f592:	46bd      	mov	sp, r7
 800f594:	bd80      	pop	{r7, pc}
 800f596:	bf00      	nop
 800f598:	20000058 	.word	0x20000058

0800f59c <HAL_ADC_Init>:
 800f59c:	b580      	push	{r7, lr}
 800f59e:	b084      	sub	sp, #16
 800f5a0:	af00      	add	r7, sp, #0
 800f5a2:	6078      	str	r0, [r7, #4]
 800f5a4:	2300      	movs	r3, #0
 800f5a6:	73fb      	strb	r3, [r7, #15]
 800f5a8:	687b      	ldr	r3, [r7, #4]
 800f5aa:	2b00      	cmp	r3, #0
 800f5ac:	d101      	bne.n	800f5b2 <HAL_ADC_Init+0x16>
 800f5ae:	2301      	movs	r3, #1
 800f5b0:	e033      	b.n	800f61a <HAL_ADC_Init+0x7e>
 800f5b2:	687b      	ldr	r3, [r7, #4]
 800f5b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f5b6:	2b00      	cmp	r3, #0
 800f5b8:	d109      	bne.n	800f5ce <HAL_ADC_Init+0x32>
 800f5ba:	6878      	ldr	r0, [r7, #4]
 800f5bc:	f7f3 fc94 	bl	8002ee8 <HAL_ADC_MspInit>
 800f5c0:	687b      	ldr	r3, [r7, #4]
 800f5c2:	2200      	movs	r2, #0
 800f5c4:	645a      	str	r2, [r3, #68]	; 0x44
 800f5c6:	687b      	ldr	r3, [r7, #4]
 800f5c8:	2200      	movs	r2, #0
 800f5ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f5d2:	f003 0310 	and.w	r3, r3, #16
 800f5d6:	2b00      	cmp	r3, #0
 800f5d8:	d118      	bne.n	800f60c <HAL_ADC_Init+0x70>
 800f5da:	687b      	ldr	r3, [r7, #4]
 800f5dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f5de:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800f5e2:	f023 0302 	bic.w	r3, r3, #2
 800f5e6:	f043 0202 	orr.w	r2, r3, #2
 800f5ea:	687b      	ldr	r3, [r7, #4]
 800f5ec:	641a      	str	r2, [r3, #64]	; 0x40
 800f5ee:	6878      	ldr	r0, [r7, #4]
 800f5f0:	f000 f93a 	bl	800f868 <ADC_Init>
 800f5f4:	687b      	ldr	r3, [r7, #4]
 800f5f6:	2200      	movs	r2, #0
 800f5f8:	645a      	str	r2, [r3, #68]	; 0x44
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f5fe:	f023 0303 	bic.w	r3, r3, #3
 800f602:	f043 0201 	orr.w	r2, r3, #1
 800f606:	687b      	ldr	r3, [r7, #4]
 800f608:	641a      	str	r2, [r3, #64]	; 0x40
 800f60a:	e001      	b.n	800f610 <HAL_ADC_Init+0x74>
 800f60c:	2301      	movs	r3, #1
 800f60e:	73fb      	strb	r3, [r7, #15]
 800f610:	687b      	ldr	r3, [r7, #4]
 800f612:	2200      	movs	r2, #0
 800f614:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f618:	7bfb      	ldrb	r3, [r7, #15]
 800f61a:	4618      	mov	r0, r3
 800f61c:	3710      	adds	r7, #16
 800f61e:	46bd      	mov	sp, r7
 800f620:	bd80      	pop	{r7, pc}
	...

0800f624 <HAL_ADC_ConfigChannel>:
 800f624:	b480      	push	{r7}
 800f626:	b085      	sub	sp, #20
 800f628:	af00      	add	r7, sp, #0
 800f62a:	6078      	str	r0, [r7, #4]
 800f62c:	6039      	str	r1, [r7, #0]
 800f62e:	2300      	movs	r3, #0
 800f630:	60bb      	str	r3, [r7, #8]
 800f632:	687b      	ldr	r3, [r7, #4]
 800f634:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800f638:	2b01      	cmp	r3, #1
 800f63a:	d101      	bne.n	800f640 <HAL_ADC_ConfigChannel+0x1c>
 800f63c:	2302      	movs	r3, #2
 800f63e:	e105      	b.n	800f84c <HAL_ADC_ConfigChannel+0x228>
 800f640:	687b      	ldr	r3, [r7, #4]
 800f642:	2201      	movs	r2, #1
 800f644:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f648:	683b      	ldr	r3, [r7, #0]
 800f64a:	681b      	ldr	r3, [r3, #0]
 800f64c:	2b09      	cmp	r3, #9
 800f64e:	d925      	bls.n	800f69c <HAL_ADC_ConfigChannel+0x78>
 800f650:	687b      	ldr	r3, [r7, #4]
 800f652:	681b      	ldr	r3, [r3, #0]
 800f654:	68d9      	ldr	r1, [r3, #12]
 800f656:	683b      	ldr	r3, [r7, #0]
 800f658:	681b      	ldr	r3, [r3, #0]
 800f65a:	b29b      	uxth	r3, r3
 800f65c:	461a      	mov	r2, r3
 800f65e:	4613      	mov	r3, r2
 800f660:	005b      	lsls	r3, r3, #1
 800f662:	4413      	add	r3, r2
 800f664:	3b1e      	subs	r3, #30
 800f666:	2207      	movs	r2, #7
 800f668:	fa02 f303 	lsl.w	r3, r2, r3
 800f66c:	43da      	mvns	r2, r3
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	681b      	ldr	r3, [r3, #0]
 800f672:	400a      	ands	r2, r1
 800f674:	60da      	str	r2, [r3, #12]
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	681b      	ldr	r3, [r3, #0]
 800f67a:	68d9      	ldr	r1, [r3, #12]
 800f67c:	683b      	ldr	r3, [r7, #0]
 800f67e:	689a      	ldr	r2, [r3, #8]
 800f680:	683b      	ldr	r3, [r7, #0]
 800f682:	681b      	ldr	r3, [r3, #0]
 800f684:	b29b      	uxth	r3, r3
 800f686:	4618      	mov	r0, r3
 800f688:	4603      	mov	r3, r0
 800f68a:	005b      	lsls	r3, r3, #1
 800f68c:	4403      	add	r3, r0
 800f68e:	3b1e      	subs	r3, #30
 800f690:	409a      	lsls	r2, r3
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	681b      	ldr	r3, [r3, #0]
 800f696:	430a      	orrs	r2, r1
 800f698:	60da      	str	r2, [r3, #12]
 800f69a:	e022      	b.n	800f6e2 <HAL_ADC_ConfigChannel+0xbe>
 800f69c:	687b      	ldr	r3, [r7, #4]
 800f69e:	681b      	ldr	r3, [r3, #0]
 800f6a0:	6919      	ldr	r1, [r3, #16]
 800f6a2:	683b      	ldr	r3, [r7, #0]
 800f6a4:	681b      	ldr	r3, [r3, #0]
 800f6a6:	b29b      	uxth	r3, r3
 800f6a8:	461a      	mov	r2, r3
 800f6aa:	4613      	mov	r3, r2
 800f6ac:	005b      	lsls	r3, r3, #1
 800f6ae:	4413      	add	r3, r2
 800f6b0:	2207      	movs	r2, #7
 800f6b2:	fa02 f303 	lsl.w	r3, r2, r3
 800f6b6:	43da      	mvns	r2, r3
 800f6b8:	687b      	ldr	r3, [r7, #4]
 800f6ba:	681b      	ldr	r3, [r3, #0]
 800f6bc:	400a      	ands	r2, r1
 800f6be:	611a      	str	r2, [r3, #16]
 800f6c0:	687b      	ldr	r3, [r7, #4]
 800f6c2:	681b      	ldr	r3, [r3, #0]
 800f6c4:	6919      	ldr	r1, [r3, #16]
 800f6c6:	683b      	ldr	r3, [r7, #0]
 800f6c8:	689a      	ldr	r2, [r3, #8]
 800f6ca:	683b      	ldr	r3, [r7, #0]
 800f6cc:	681b      	ldr	r3, [r3, #0]
 800f6ce:	b29b      	uxth	r3, r3
 800f6d0:	4618      	mov	r0, r3
 800f6d2:	4603      	mov	r3, r0
 800f6d4:	005b      	lsls	r3, r3, #1
 800f6d6:	4403      	add	r3, r0
 800f6d8:	409a      	lsls	r2, r3
 800f6da:	687b      	ldr	r3, [r7, #4]
 800f6dc:	681b      	ldr	r3, [r3, #0]
 800f6de:	430a      	orrs	r2, r1
 800f6e0:	611a      	str	r2, [r3, #16]
 800f6e2:	683b      	ldr	r3, [r7, #0]
 800f6e4:	685b      	ldr	r3, [r3, #4]
 800f6e6:	2b06      	cmp	r3, #6
 800f6e8:	d824      	bhi.n	800f734 <HAL_ADC_ConfigChannel+0x110>
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	681b      	ldr	r3, [r3, #0]
 800f6ee:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800f6f0:	683b      	ldr	r3, [r7, #0]
 800f6f2:	685a      	ldr	r2, [r3, #4]
 800f6f4:	4613      	mov	r3, r2
 800f6f6:	009b      	lsls	r3, r3, #2
 800f6f8:	4413      	add	r3, r2
 800f6fa:	3b05      	subs	r3, #5
 800f6fc:	221f      	movs	r2, #31
 800f6fe:	fa02 f303 	lsl.w	r3, r2, r3
 800f702:	43da      	mvns	r2, r3
 800f704:	687b      	ldr	r3, [r7, #4]
 800f706:	681b      	ldr	r3, [r3, #0]
 800f708:	400a      	ands	r2, r1
 800f70a:	635a      	str	r2, [r3, #52]	; 0x34
 800f70c:	687b      	ldr	r3, [r7, #4]
 800f70e:	681b      	ldr	r3, [r3, #0]
 800f710:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800f712:	683b      	ldr	r3, [r7, #0]
 800f714:	681b      	ldr	r3, [r3, #0]
 800f716:	b29b      	uxth	r3, r3
 800f718:	4618      	mov	r0, r3
 800f71a:	683b      	ldr	r3, [r7, #0]
 800f71c:	685a      	ldr	r2, [r3, #4]
 800f71e:	4613      	mov	r3, r2
 800f720:	009b      	lsls	r3, r3, #2
 800f722:	4413      	add	r3, r2
 800f724:	3b05      	subs	r3, #5
 800f726:	fa00 f203 	lsl.w	r2, r0, r3
 800f72a:	687b      	ldr	r3, [r7, #4]
 800f72c:	681b      	ldr	r3, [r3, #0]
 800f72e:	430a      	orrs	r2, r1
 800f730:	635a      	str	r2, [r3, #52]	; 0x34
 800f732:	e04c      	b.n	800f7ce <HAL_ADC_ConfigChannel+0x1aa>
 800f734:	683b      	ldr	r3, [r7, #0]
 800f736:	685b      	ldr	r3, [r3, #4]
 800f738:	2b0c      	cmp	r3, #12
 800f73a:	d824      	bhi.n	800f786 <HAL_ADC_ConfigChannel+0x162>
 800f73c:	687b      	ldr	r3, [r7, #4]
 800f73e:	681b      	ldr	r3, [r3, #0]
 800f740:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800f742:	683b      	ldr	r3, [r7, #0]
 800f744:	685a      	ldr	r2, [r3, #4]
 800f746:	4613      	mov	r3, r2
 800f748:	009b      	lsls	r3, r3, #2
 800f74a:	4413      	add	r3, r2
 800f74c:	3b23      	subs	r3, #35	; 0x23
 800f74e:	221f      	movs	r2, #31
 800f750:	fa02 f303 	lsl.w	r3, r2, r3
 800f754:	43da      	mvns	r2, r3
 800f756:	687b      	ldr	r3, [r7, #4]
 800f758:	681b      	ldr	r3, [r3, #0]
 800f75a:	400a      	ands	r2, r1
 800f75c:	631a      	str	r2, [r3, #48]	; 0x30
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	681b      	ldr	r3, [r3, #0]
 800f762:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800f764:	683b      	ldr	r3, [r7, #0]
 800f766:	681b      	ldr	r3, [r3, #0]
 800f768:	b29b      	uxth	r3, r3
 800f76a:	4618      	mov	r0, r3
 800f76c:	683b      	ldr	r3, [r7, #0]
 800f76e:	685a      	ldr	r2, [r3, #4]
 800f770:	4613      	mov	r3, r2
 800f772:	009b      	lsls	r3, r3, #2
 800f774:	4413      	add	r3, r2
 800f776:	3b23      	subs	r3, #35	; 0x23
 800f778:	fa00 f203 	lsl.w	r2, r0, r3
 800f77c:	687b      	ldr	r3, [r7, #4]
 800f77e:	681b      	ldr	r3, [r3, #0]
 800f780:	430a      	orrs	r2, r1
 800f782:	631a      	str	r2, [r3, #48]	; 0x30
 800f784:	e023      	b.n	800f7ce <HAL_ADC_ConfigChannel+0x1aa>
 800f786:	687b      	ldr	r3, [r7, #4]
 800f788:	681b      	ldr	r3, [r3, #0]
 800f78a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f78c:	683b      	ldr	r3, [r7, #0]
 800f78e:	685a      	ldr	r2, [r3, #4]
 800f790:	4613      	mov	r3, r2
 800f792:	009b      	lsls	r3, r3, #2
 800f794:	4413      	add	r3, r2
 800f796:	3b41      	subs	r3, #65	; 0x41
 800f798:	221f      	movs	r2, #31
 800f79a:	fa02 f303 	lsl.w	r3, r2, r3
 800f79e:	43da      	mvns	r2, r3
 800f7a0:	687b      	ldr	r3, [r7, #4]
 800f7a2:	681b      	ldr	r3, [r3, #0]
 800f7a4:	400a      	ands	r2, r1
 800f7a6:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7a8:	687b      	ldr	r3, [r7, #4]
 800f7aa:	681b      	ldr	r3, [r3, #0]
 800f7ac:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f7ae:	683b      	ldr	r3, [r7, #0]
 800f7b0:	681b      	ldr	r3, [r3, #0]
 800f7b2:	b29b      	uxth	r3, r3
 800f7b4:	4618      	mov	r0, r3
 800f7b6:	683b      	ldr	r3, [r7, #0]
 800f7b8:	685a      	ldr	r2, [r3, #4]
 800f7ba:	4613      	mov	r3, r2
 800f7bc:	009b      	lsls	r3, r3, #2
 800f7be:	4413      	add	r3, r2
 800f7c0:	3b41      	subs	r3, #65	; 0x41
 800f7c2:	fa00 f203 	lsl.w	r2, r0, r3
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	681b      	ldr	r3, [r3, #0]
 800f7ca:	430a      	orrs	r2, r1
 800f7cc:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7ce:	4b22      	ldr	r3, [pc, #136]	; (800f858 <HAL_ADC_ConfigChannel+0x234>)
 800f7d0:	60fb      	str	r3, [r7, #12]
 800f7d2:	687b      	ldr	r3, [r7, #4]
 800f7d4:	681b      	ldr	r3, [r3, #0]
 800f7d6:	4a21      	ldr	r2, [pc, #132]	; (800f85c <HAL_ADC_ConfigChannel+0x238>)
 800f7d8:	4293      	cmp	r3, r2
 800f7da:	d109      	bne.n	800f7f0 <HAL_ADC_ConfigChannel+0x1cc>
 800f7dc:	683b      	ldr	r3, [r7, #0]
 800f7de:	681b      	ldr	r3, [r3, #0]
 800f7e0:	2b12      	cmp	r3, #18
 800f7e2:	d105      	bne.n	800f7f0 <HAL_ADC_ConfigChannel+0x1cc>
 800f7e4:	68fb      	ldr	r3, [r7, #12]
 800f7e6:	685b      	ldr	r3, [r3, #4]
 800f7e8:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800f7ec:	68fb      	ldr	r3, [r7, #12]
 800f7ee:	605a      	str	r2, [r3, #4]
 800f7f0:	687b      	ldr	r3, [r7, #4]
 800f7f2:	681b      	ldr	r3, [r3, #0]
 800f7f4:	4a19      	ldr	r2, [pc, #100]	; (800f85c <HAL_ADC_ConfigChannel+0x238>)
 800f7f6:	4293      	cmp	r3, r2
 800f7f8:	d123      	bne.n	800f842 <HAL_ADC_ConfigChannel+0x21e>
 800f7fa:	683b      	ldr	r3, [r7, #0]
 800f7fc:	681b      	ldr	r3, [r3, #0]
 800f7fe:	2b10      	cmp	r3, #16
 800f800:	d003      	beq.n	800f80a <HAL_ADC_ConfigChannel+0x1e6>
 800f802:	683b      	ldr	r3, [r7, #0]
 800f804:	681b      	ldr	r3, [r3, #0]
 800f806:	2b11      	cmp	r3, #17
 800f808:	d11b      	bne.n	800f842 <HAL_ADC_ConfigChannel+0x21e>
 800f80a:	68fb      	ldr	r3, [r7, #12]
 800f80c:	685b      	ldr	r3, [r3, #4]
 800f80e:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800f812:	68fb      	ldr	r3, [r7, #12]
 800f814:	605a      	str	r2, [r3, #4]
 800f816:	683b      	ldr	r3, [r7, #0]
 800f818:	681b      	ldr	r3, [r3, #0]
 800f81a:	2b10      	cmp	r3, #16
 800f81c:	d111      	bne.n	800f842 <HAL_ADC_ConfigChannel+0x21e>
 800f81e:	4b10      	ldr	r3, [pc, #64]	; (800f860 <HAL_ADC_ConfigChannel+0x23c>)
 800f820:	681b      	ldr	r3, [r3, #0]
 800f822:	4a10      	ldr	r2, [pc, #64]	; (800f864 <HAL_ADC_ConfigChannel+0x240>)
 800f824:	fba2 2303 	umull	r2, r3, r2, r3
 800f828:	0c9a      	lsrs	r2, r3, #18
 800f82a:	4613      	mov	r3, r2
 800f82c:	009b      	lsls	r3, r3, #2
 800f82e:	4413      	add	r3, r2
 800f830:	005b      	lsls	r3, r3, #1
 800f832:	60bb      	str	r3, [r7, #8]
 800f834:	e002      	b.n	800f83c <HAL_ADC_ConfigChannel+0x218>
 800f836:	68bb      	ldr	r3, [r7, #8]
 800f838:	3b01      	subs	r3, #1
 800f83a:	60bb      	str	r3, [r7, #8]
 800f83c:	68bb      	ldr	r3, [r7, #8]
 800f83e:	2b00      	cmp	r3, #0
 800f840:	d1f9      	bne.n	800f836 <HAL_ADC_ConfigChannel+0x212>
 800f842:	687b      	ldr	r3, [r7, #4]
 800f844:	2200      	movs	r2, #0
 800f846:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f84a:	2300      	movs	r3, #0
 800f84c:	4618      	mov	r0, r3
 800f84e:	3714      	adds	r7, #20
 800f850:	46bd      	mov	sp, r7
 800f852:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f856:	4770      	bx	lr
 800f858:	40012300 	.word	0x40012300
 800f85c:	40012000 	.word	0x40012000
 800f860:	20000004 	.word	0x20000004
 800f864:	431bde83 	.word	0x431bde83

0800f868 <ADC_Init>:
 800f868:	b480      	push	{r7}
 800f86a:	b085      	sub	sp, #20
 800f86c:	af00      	add	r7, sp, #0
 800f86e:	6078      	str	r0, [r7, #4]
 800f870:	4b79      	ldr	r3, [pc, #484]	; (800fa58 <ADC_Init+0x1f0>)
 800f872:	60fb      	str	r3, [r7, #12]
 800f874:	68fb      	ldr	r3, [r7, #12]
 800f876:	685b      	ldr	r3, [r3, #4]
 800f878:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800f87c:	68fb      	ldr	r3, [r7, #12]
 800f87e:	605a      	str	r2, [r3, #4]
 800f880:	68fb      	ldr	r3, [r7, #12]
 800f882:	685a      	ldr	r2, [r3, #4]
 800f884:	687b      	ldr	r3, [r7, #4]
 800f886:	685b      	ldr	r3, [r3, #4]
 800f888:	431a      	orrs	r2, r3
 800f88a:	68fb      	ldr	r3, [r7, #12]
 800f88c:	605a      	str	r2, [r3, #4]
 800f88e:	687b      	ldr	r3, [r7, #4]
 800f890:	681b      	ldr	r3, [r3, #0]
 800f892:	685a      	ldr	r2, [r3, #4]
 800f894:	687b      	ldr	r3, [r7, #4]
 800f896:	681b      	ldr	r3, [r3, #0]
 800f898:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f89c:	605a      	str	r2, [r3, #4]
 800f89e:	687b      	ldr	r3, [r7, #4]
 800f8a0:	681b      	ldr	r3, [r3, #0]
 800f8a2:	6859      	ldr	r1, [r3, #4]
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	691b      	ldr	r3, [r3, #16]
 800f8a8:	021a      	lsls	r2, r3, #8
 800f8aa:	687b      	ldr	r3, [r7, #4]
 800f8ac:	681b      	ldr	r3, [r3, #0]
 800f8ae:	430a      	orrs	r2, r1
 800f8b0:	605a      	str	r2, [r3, #4]
 800f8b2:	687b      	ldr	r3, [r7, #4]
 800f8b4:	681b      	ldr	r3, [r3, #0]
 800f8b6:	685a      	ldr	r2, [r3, #4]
 800f8b8:	687b      	ldr	r3, [r7, #4]
 800f8ba:	681b      	ldr	r3, [r3, #0]
 800f8bc:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800f8c0:	605a      	str	r2, [r3, #4]
 800f8c2:	687b      	ldr	r3, [r7, #4]
 800f8c4:	681b      	ldr	r3, [r3, #0]
 800f8c6:	6859      	ldr	r1, [r3, #4]
 800f8c8:	687b      	ldr	r3, [r7, #4]
 800f8ca:	689a      	ldr	r2, [r3, #8]
 800f8cc:	687b      	ldr	r3, [r7, #4]
 800f8ce:	681b      	ldr	r3, [r3, #0]
 800f8d0:	430a      	orrs	r2, r1
 800f8d2:	605a      	str	r2, [r3, #4]
 800f8d4:	687b      	ldr	r3, [r7, #4]
 800f8d6:	681b      	ldr	r3, [r3, #0]
 800f8d8:	689a      	ldr	r2, [r3, #8]
 800f8da:	687b      	ldr	r3, [r7, #4]
 800f8dc:	681b      	ldr	r3, [r3, #0]
 800f8de:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800f8e2:	609a      	str	r2, [r3, #8]
 800f8e4:	687b      	ldr	r3, [r7, #4]
 800f8e6:	681b      	ldr	r3, [r3, #0]
 800f8e8:	6899      	ldr	r1, [r3, #8]
 800f8ea:	687b      	ldr	r3, [r7, #4]
 800f8ec:	68da      	ldr	r2, [r3, #12]
 800f8ee:	687b      	ldr	r3, [r7, #4]
 800f8f0:	681b      	ldr	r3, [r3, #0]
 800f8f2:	430a      	orrs	r2, r1
 800f8f4:	609a      	str	r2, [r3, #8]
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f8fa:	4a58      	ldr	r2, [pc, #352]	; (800fa5c <ADC_Init+0x1f4>)
 800f8fc:	4293      	cmp	r3, r2
 800f8fe:	d022      	beq.n	800f946 <ADC_Init+0xde>
 800f900:	687b      	ldr	r3, [r7, #4]
 800f902:	681b      	ldr	r3, [r3, #0]
 800f904:	689a      	ldr	r2, [r3, #8]
 800f906:	687b      	ldr	r3, [r7, #4]
 800f908:	681b      	ldr	r3, [r3, #0]
 800f90a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800f90e:	609a      	str	r2, [r3, #8]
 800f910:	687b      	ldr	r3, [r7, #4]
 800f912:	681b      	ldr	r3, [r3, #0]
 800f914:	6899      	ldr	r1, [r3, #8]
 800f916:	687b      	ldr	r3, [r7, #4]
 800f918:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f91a:	687b      	ldr	r3, [r7, #4]
 800f91c:	681b      	ldr	r3, [r3, #0]
 800f91e:	430a      	orrs	r2, r1
 800f920:	609a      	str	r2, [r3, #8]
 800f922:	687b      	ldr	r3, [r7, #4]
 800f924:	681b      	ldr	r3, [r3, #0]
 800f926:	689a      	ldr	r2, [r3, #8]
 800f928:	687b      	ldr	r3, [r7, #4]
 800f92a:	681b      	ldr	r3, [r3, #0]
 800f92c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800f930:	609a      	str	r2, [r3, #8]
 800f932:	687b      	ldr	r3, [r7, #4]
 800f934:	681b      	ldr	r3, [r3, #0]
 800f936:	6899      	ldr	r1, [r3, #8]
 800f938:	687b      	ldr	r3, [r7, #4]
 800f93a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f93c:	687b      	ldr	r3, [r7, #4]
 800f93e:	681b      	ldr	r3, [r3, #0]
 800f940:	430a      	orrs	r2, r1
 800f942:	609a      	str	r2, [r3, #8]
 800f944:	e00f      	b.n	800f966 <ADC_Init+0xfe>
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	681b      	ldr	r3, [r3, #0]
 800f94a:	689a      	ldr	r2, [r3, #8]
 800f94c:	687b      	ldr	r3, [r7, #4]
 800f94e:	681b      	ldr	r3, [r3, #0]
 800f950:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800f954:	609a      	str	r2, [r3, #8]
 800f956:	687b      	ldr	r3, [r7, #4]
 800f958:	681b      	ldr	r3, [r3, #0]
 800f95a:	689a      	ldr	r2, [r3, #8]
 800f95c:	687b      	ldr	r3, [r7, #4]
 800f95e:	681b      	ldr	r3, [r3, #0]
 800f960:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800f964:	609a      	str	r2, [r3, #8]
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	681b      	ldr	r3, [r3, #0]
 800f96a:	689a      	ldr	r2, [r3, #8]
 800f96c:	687b      	ldr	r3, [r7, #4]
 800f96e:	681b      	ldr	r3, [r3, #0]
 800f970:	f022 0202 	bic.w	r2, r2, #2
 800f974:	609a      	str	r2, [r3, #8]
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	681b      	ldr	r3, [r3, #0]
 800f97a:	6899      	ldr	r1, [r3, #8]
 800f97c:	687b      	ldr	r3, [r7, #4]
 800f97e:	7e1b      	ldrb	r3, [r3, #24]
 800f980:	005a      	lsls	r2, r3, #1
 800f982:	687b      	ldr	r3, [r7, #4]
 800f984:	681b      	ldr	r3, [r3, #0]
 800f986:	430a      	orrs	r2, r1
 800f988:	609a      	str	r2, [r3, #8]
 800f98a:	687b      	ldr	r3, [r7, #4]
 800f98c:	f893 3020 	ldrb.w	r3, [r3, #32]
 800f990:	2b00      	cmp	r3, #0
 800f992:	d01b      	beq.n	800f9cc <ADC_Init+0x164>
 800f994:	687b      	ldr	r3, [r7, #4]
 800f996:	681b      	ldr	r3, [r3, #0]
 800f998:	685a      	ldr	r2, [r3, #4]
 800f99a:	687b      	ldr	r3, [r7, #4]
 800f99c:	681b      	ldr	r3, [r3, #0]
 800f99e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f9a2:	605a      	str	r2, [r3, #4]
 800f9a4:	687b      	ldr	r3, [r7, #4]
 800f9a6:	681b      	ldr	r3, [r3, #0]
 800f9a8:	685a      	ldr	r2, [r3, #4]
 800f9aa:	687b      	ldr	r3, [r7, #4]
 800f9ac:	681b      	ldr	r3, [r3, #0]
 800f9ae:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800f9b2:	605a      	str	r2, [r3, #4]
 800f9b4:	687b      	ldr	r3, [r7, #4]
 800f9b6:	681b      	ldr	r3, [r3, #0]
 800f9b8:	6859      	ldr	r1, [r3, #4]
 800f9ba:	687b      	ldr	r3, [r7, #4]
 800f9bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f9be:	3b01      	subs	r3, #1
 800f9c0:	035a      	lsls	r2, r3, #13
 800f9c2:	687b      	ldr	r3, [r7, #4]
 800f9c4:	681b      	ldr	r3, [r3, #0]
 800f9c6:	430a      	orrs	r2, r1
 800f9c8:	605a      	str	r2, [r3, #4]
 800f9ca:	e007      	b.n	800f9dc <ADC_Init+0x174>
 800f9cc:	687b      	ldr	r3, [r7, #4]
 800f9ce:	681b      	ldr	r3, [r3, #0]
 800f9d0:	685a      	ldr	r2, [r3, #4]
 800f9d2:	687b      	ldr	r3, [r7, #4]
 800f9d4:	681b      	ldr	r3, [r3, #0]
 800f9d6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800f9da:	605a      	str	r2, [r3, #4]
 800f9dc:	687b      	ldr	r3, [r7, #4]
 800f9de:	681b      	ldr	r3, [r3, #0]
 800f9e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800f9ea:	62da      	str	r2, [r3, #44]	; 0x2c
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	681b      	ldr	r3, [r3, #0]
 800f9f0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	69db      	ldr	r3, [r3, #28]
 800f9f6:	3b01      	subs	r3, #1
 800f9f8:	051a      	lsls	r2, r3, #20
 800f9fa:	687b      	ldr	r3, [r7, #4]
 800f9fc:	681b      	ldr	r3, [r3, #0]
 800f9fe:	430a      	orrs	r2, r1
 800fa00:	62da      	str	r2, [r3, #44]	; 0x2c
 800fa02:	687b      	ldr	r3, [r7, #4]
 800fa04:	681b      	ldr	r3, [r3, #0]
 800fa06:	689a      	ldr	r2, [r3, #8]
 800fa08:	687b      	ldr	r3, [r7, #4]
 800fa0a:	681b      	ldr	r3, [r3, #0]
 800fa0c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800fa10:	609a      	str	r2, [r3, #8]
 800fa12:	687b      	ldr	r3, [r7, #4]
 800fa14:	681b      	ldr	r3, [r3, #0]
 800fa16:	6899      	ldr	r1, [r3, #8]
 800fa18:	687b      	ldr	r3, [r7, #4]
 800fa1a:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800fa1e:	025a      	lsls	r2, r3, #9
 800fa20:	687b      	ldr	r3, [r7, #4]
 800fa22:	681b      	ldr	r3, [r3, #0]
 800fa24:	430a      	orrs	r2, r1
 800fa26:	609a      	str	r2, [r3, #8]
 800fa28:	687b      	ldr	r3, [r7, #4]
 800fa2a:	681b      	ldr	r3, [r3, #0]
 800fa2c:	689a      	ldr	r2, [r3, #8]
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	681b      	ldr	r3, [r3, #0]
 800fa32:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800fa36:	609a      	str	r2, [r3, #8]
 800fa38:	687b      	ldr	r3, [r7, #4]
 800fa3a:	681b      	ldr	r3, [r3, #0]
 800fa3c:	6899      	ldr	r1, [r3, #8]
 800fa3e:	687b      	ldr	r3, [r7, #4]
 800fa40:	695b      	ldr	r3, [r3, #20]
 800fa42:	029a      	lsls	r2, r3, #10
 800fa44:	687b      	ldr	r3, [r7, #4]
 800fa46:	681b      	ldr	r3, [r3, #0]
 800fa48:	430a      	orrs	r2, r1
 800fa4a:	609a      	str	r2, [r3, #8]
 800fa4c:	bf00      	nop
 800fa4e:	3714      	adds	r7, #20
 800fa50:	46bd      	mov	sp, r7
 800fa52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa56:	4770      	bx	lr
 800fa58:	40012300 	.word	0x40012300
 800fa5c:	0f000001 	.word	0x0f000001

0800fa60 <HAL_CAN_Init>:
 800fa60:	b580      	push	{r7, lr}
 800fa62:	b084      	sub	sp, #16
 800fa64:	af00      	add	r7, sp, #0
 800fa66:	6078      	str	r0, [r7, #4]
 800fa68:	687b      	ldr	r3, [r7, #4]
 800fa6a:	2b00      	cmp	r3, #0
 800fa6c:	d101      	bne.n	800fa72 <HAL_CAN_Init+0x12>
 800fa6e:	2301      	movs	r3, #1
 800fa70:	e0ed      	b.n	800fc4e <HAL_CAN_Init+0x1ee>
 800fa72:	687b      	ldr	r3, [r7, #4]
 800fa74:	f893 3020 	ldrb.w	r3, [r3, #32]
 800fa78:	b2db      	uxtb	r3, r3
 800fa7a:	2b00      	cmp	r3, #0
 800fa7c:	d102      	bne.n	800fa84 <HAL_CAN_Init+0x24>
 800fa7e:	6878      	ldr	r0, [r7, #4]
 800fa80:	f7f3 fae2 	bl	8003048 <HAL_CAN_MspInit>
 800fa84:	687b      	ldr	r3, [r7, #4]
 800fa86:	681b      	ldr	r3, [r3, #0]
 800fa88:	681a      	ldr	r2, [r3, #0]
 800fa8a:	687b      	ldr	r3, [r7, #4]
 800fa8c:	681b      	ldr	r3, [r3, #0]
 800fa8e:	f042 0201 	orr.w	r2, r2, #1
 800fa92:	601a      	str	r2, [r3, #0]
 800fa94:	f7ff fd52 	bl	800f53c <HAL_GetTick>
 800fa98:	60f8      	str	r0, [r7, #12]
 800fa9a:	e012      	b.n	800fac2 <HAL_CAN_Init+0x62>
 800fa9c:	f7ff fd4e 	bl	800f53c <HAL_GetTick>
 800faa0:	4602      	mov	r2, r0
 800faa2:	68fb      	ldr	r3, [r7, #12]
 800faa4:	1ad3      	subs	r3, r2, r3
 800faa6:	2b0a      	cmp	r3, #10
 800faa8:	d90b      	bls.n	800fac2 <HAL_CAN_Init+0x62>
 800faaa:	687b      	ldr	r3, [r7, #4]
 800faac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800faae:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800fab2:	687b      	ldr	r3, [r7, #4]
 800fab4:	625a      	str	r2, [r3, #36]	; 0x24
 800fab6:	687b      	ldr	r3, [r7, #4]
 800fab8:	2205      	movs	r2, #5
 800faba:	f883 2020 	strb.w	r2, [r3, #32]
 800fabe:	2301      	movs	r3, #1
 800fac0:	e0c5      	b.n	800fc4e <HAL_CAN_Init+0x1ee>
 800fac2:	687b      	ldr	r3, [r7, #4]
 800fac4:	681b      	ldr	r3, [r3, #0]
 800fac6:	685b      	ldr	r3, [r3, #4]
 800fac8:	f003 0301 	and.w	r3, r3, #1
 800facc:	2b00      	cmp	r3, #0
 800face:	d0e5      	beq.n	800fa9c <HAL_CAN_Init+0x3c>
 800fad0:	687b      	ldr	r3, [r7, #4]
 800fad2:	681b      	ldr	r3, [r3, #0]
 800fad4:	681a      	ldr	r2, [r3, #0]
 800fad6:	687b      	ldr	r3, [r7, #4]
 800fad8:	681b      	ldr	r3, [r3, #0]
 800fada:	f022 0202 	bic.w	r2, r2, #2
 800fade:	601a      	str	r2, [r3, #0]
 800fae0:	f7ff fd2c 	bl	800f53c <HAL_GetTick>
 800fae4:	60f8      	str	r0, [r7, #12]
 800fae6:	e012      	b.n	800fb0e <HAL_CAN_Init+0xae>
 800fae8:	f7ff fd28 	bl	800f53c <HAL_GetTick>
 800faec:	4602      	mov	r2, r0
 800faee:	68fb      	ldr	r3, [r7, #12]
 800faf0:	1ad3      	subs	r3, r2, r3
 800faf2:	2b0a      	cmp	r3, #10
 800faf4:	d90b      	bls.n	800fb0e <HAL_CAN_Init+0xae>
 800faf6:	687b      	ldr	r3, [r7, #4]
 800faf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fafa:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800fafe:	687b      	ldr	r3, [r7, #4]
 800fb00:	625a      	str	r2, [r3, #36]	; 0x24
 800fb02:	687b      	ldr	r3, [r7, #4]
 800fb04:	2205      	movs	r2, #5
 800fb06:	f883 2020 	strb.w	r2, [r3, #32]
 800fb0a:	2301      	movs	r3, #1
 800fb0c:	e09f      	b.n	800fc4e <HAL_CAN_Init+0x1ee>
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	681b      	ldr	r3, [r3, #0]
 800fb12:	685b      	ldr	r3, [r3, #4]
 800fb14:	f003 0302 	and.w	r3, r3, #2
 800fb18:	2b00      	cmp	r3, #0
 800fb1a:	d1e5      	bne.n	800fae8 <HAL_CAN_Init+0x88>
 800fb1c:	687b      	ldr	r3, [r7, #4]
 800fb1e:	7e1b      	ldrb	r3, [r3, #24]
 800fb20:	2b01      	cmp	r3, #1
 800fb22:	d108      	bne.n	800fb36 <HAL_CAN_Init+0xd6>
 800fb24:	687b      	ldr	r3, [r7, #4]
 800fb26:	681b      	ldr	r3, [r3, #0]
 800fb28:	681a      	ldr	r2, [r3, #0]
 800fb2a:	687b      	ldr	r3, [r7, #4]
 800fb2c:	681b      	ldr	r3, [r3, #0]
 800fb2e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800fb32:	601a      	str	r2, [r3, #0]
 800fb34:	e007      	b.n	800fb46 <HAL_CAN_Init+0xe6>
 800fb36:	687b      	ldr	r3, [r7, #4]
 800fb38:	681b      	ldr	r3, [r3, #0]
 800fb3a:	681a      	ldr	r2, [r3, #0]
 800fb3c:	687b      	ldr	r3, [r7, #4]
 800fb3e:	681b      	ldr	r3, [r3, #0]
 800fb40:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800fb44:	601a      	str	r2, [r3, #0]
 800fb46:	687b      	ldr	r3, [r7, #4]
 800fb48:	7e5b      	ldrb	r3, [r3, #25]
 800fb4a:	2b01      	cmp	r3, #1
 800fb4c:	d108      	bne.n	800fb60 <HAL_CAN_Init+0x100>
 800fb4e:	687b      	ldr	r3, [r7, #4]
 800fb50:	681b      	ldr	r3, [r3, #0]
 800fb52:	681a      	ldr	r2, [r3, #0]
 800fb54:	687b      	ldr	r3, [r7, #4]
 800fb56:	681b      	ldr	r3, [r3, #0]
 800fb58:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800fb5c:	601a      	str	r2, [r3, #0]
 800fb5e:	e007      	b.n	800fb70 <HAL_CAN_Init+0x110>
 800fb60:	687b      	ldr	r3, [r7, #4]
 800fb62:	681b      	ldr	r3, [r3, #0]
 800fb64:	681a      	ldr	r2, [r3, #0]
 800fb66:	687b      	ldr	r3, [r7, #4]
 800fb68:	681b      	ldr	r3, [r3, #0]
 800fb6a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800fb6e:	601a      	str	r2, [r3, #0]
 800fb70:	687b      	ldr	r3, [r7, #4]
 800fb72:	7e9b      	ldrb	r3, [r3, #26]
 800fb74:	2b01      	cmp	r3, #1
 800fb76:	d108      	bne.n	800fb8a <HAL_CAN_Init+0x12a>
 800fb78:	687b      	ldr	r3, [r7, #4]
 800fb7a:	681b      	ldr	r3, [r3, #0]
 800fb7c:	681a      	ldr	r2, [r3, #0]
 800fb7e:	687b      	ldr	r3, [r7, #4]
 800fb80:	681b      	ldr	r3, [r3, #0]
 800fb82:	f042 0220 	orr.w	r2, r2, #32
 800fb86:	601a      	str	r2, [r3, #0]
 800fb88:	e007      	b.n	800fb9a <HAL_CAN_Init+0x13a>
 800fb8a:	687b      	ldr	r3, [r7, #4]
 800fb8c:	681b      	ldr	r3, [r3, #0]
 800fb8e:	681a      	ldr	r2, [r3, #0]
 800fb90:	687b      	ldr	r3, [r7, #4]
 800fb92:	681b      	ldr	r3, [r3, #0]
 800fb94:	f022 0220 	bic.w	r2, r2, #32
 800fb98:	601a      	str	r2, [r3, #0]
 800fb9a:	687b      	ldr	r3, [r7, #4]
 800fb9c:	7edb      	ldrb	r3, [r3, #27]
 800fb9e:	2b01      	cmp	r3, #1
 800fba0:	d108      	bne.n	800fbb4 <HAL_CAN_Init+0x154>
 800fba2:	687b      	ldr	r3, [r7, #4]
 800fba4:	681b      	ldr	r3, [r3, #0]
 800fba6:	681a      	ldr	r2, [r3, #0]
 800fba8:	687b      	ldr	r3, [r7, #4]
 800fbaa:	681b      	ldr	r3, [r3, #0]
 800fbac:	f022 0210 	bic.w	r2, r2, #16
 800fbb0:	601a      	str	r2, [r3, #0]
 800fbb2:	e007      	b.n	800fbc4 <HAL_CAN_Init+0x164>
 800fbb4:	687b      	ldr	r3, [r7, #4]
 800fbb6:	681b      	ldr	r3, [r3, #0]
 800fbb8:	681a      	ldr	r2, [r3, #0]
 800fbba:	687b      	ldr	r3, [r7, #4]
 800fbbc:	681b      	ldr	r3, [r3, #0]
 800fbbe:	f042 0210 	orr.w	r2, r2, #16
 800fbc2:	601a      	str	r2, [r3, #0]
 800fbc4:	687b      	ldr	r3, [r7, #4]
 800fbc6:	7f1b      	ldrb	r3, [r3, #28]
 800fbc8:	2b01      	cmp	r3, #1
 800fbca:	d108      	bne.n	800fbde <HAL_CAN_Init+0x17e>
 800fbcc:	687b      	ldr	r3, [r7, #4]
 800fbce:	681b      	ldr	r3, [r3, #0]
 800fbd0:	681a      	ldr	r2, [r3, #0]
 800fbd2:	687b      	ldr	r3, [r7, #4]
 800fbd4:	681b      	ldr	r3, [r3, #0]
 800fbd6:	f042 0208 	orr.w	r2, r2, #8
 800fbda:	601a      	str	r2, [r3, #0]
 800fbdc:	e007      	b.n	800fbee <HAL_CAN_Init+0x18e>
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	681b      	ldr	r3, [r3, #0]
 800fbe2:	681a      	ldr	r2, [r3, #0]
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	681b      	ldr	r3, [r3, #0]
 800fbe8:	f022 0208 	bic.w	r2, r2, #8
 800fbec:	601a      	str	r2, [r3, #0]
 800fbee:	687b      	ldr	r3, [r7, #4]
 800fbf0:	7f5b      	ldrb	r3, [r3, #29]
 800fbf2:	2b01      	cmp	r3, #1
 800fbf4:	d108      	bne.n	800fc08 <HAL_CAN_Init+0x1a8>
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	681b      	ldr	r3, [r3, #0]
 800fbfa:	681a      	ldr	r2, [r3, #0]
 800fbfc:	687b      	ldr	r3, [r7, #4]
 800fbfe:	681b      	ldr	r3, [r3, #0]
 800fc00:	f042 0204 	orr.w	r2, r2, #4
 800fc04:	601a      	str	r2, [r3, #0]
 800fc06:	e007      	b.n	800fc18 <HAL_CAN_Init+0x1b8>
 800fc08:	687b      	ldr	r3, [r7, #4]
 800fc0a:	681b      	ldr	r3, [r3, #0]
 800fc0c:	681a      	ldr	r2, [r3, #0]
 800fc0e:	687b      	ldr	r3, [r7, #4]
 800fc10:	681b      	ldr	r3, [r3, #0]
 800fc12:	f022 0204 	bic.w	r2, r2, #4
 800fc16:	601a      	str	r2, [r3, #0]
 800fc18:	687b      	ldr	r3, [r7, #4]
 800fc1a:	689a      	ldr	r2, [r3, #8]
 800fc1c:	687b      	ldr	r3, [r7, #4]
 800fc1e:	68db      	ldr	r3, [r3, #12]
 800fc20:	431a      	orrs	r2, r3
 800fc22:	687b      	ldr	r3, [r7, #4]
 800fc24:	691b      	ldr	r3, [r3, #16]
 800fc26:	431a      	orrs	r2, r3
 800fc28:	687b      	ldr	r3, [r7, #4]
 800fc2a:	695b      	ldr	r3, [r3, #20]
 800fc2c:	ea42 0103 	orr.w	r1, r2, r3
 800fc30:	687b      	ldr	r3, [r7, #4]
 800fc32:	685b      	ldr	r3, [r3, #4]
 800fc34:	1e5a      	subs	r2, r3, #1
 800fc36:	687b      	ldr	r3, [r7, #4]
 800fc38:	681b      	ldr	r3, [r3, #0]
 800fc3a:	430a      	orrs	r2, r1
 800fc3c:	61da      	str	r2, [r3, #28]
 800fc3e:	687b      	ldr	r3, [r7, #4]
 800fc40:	2200      	movs	r2, #0
 800fc42:	625a      	str	r2, [r3, #36]	; 0x24
 800fc44:	687b      	ldr	r3, [r7, #4]
 800fc46:	2201      	movs	r2, #1
 800fc48:	f883 2020 	strb.w	r2, [r3, #32]
 800fc4c:	2300      	movs	r3, #0
 800fc4e:	4618      	mov	r0, r3
 800fc50:	3710      	adds	r7, #16
 800fc52:	46bd      	mov	sp, r7
 800fc54:	bd80      	pop	{r7, pc}
	...

0800fc58 <HAL_CAN_ConfigFilter>:
 800fc58:	b480      	push	{r7}
 800fc5a:	b087      	sub	sp, #28
 800fc5c:	af00      	add	r7, sp, #0
 800fc5e:	6078      	str	r0, [r7, #4]
 800fc60:	6039      	str	r1, [r7, #0]
 800fc62:	687b      	ldr	r3, [r7, #4]
 800fc64:	681b      	ldr	r3, [r3, #0]
 800fc66:	617b      	str	r3, [r7, #20]
 800fc68:	687b      	ldr	r3, [r7, #4]
 800fc6a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800fc6e:	74fb      	strb	r3, [r7, #19]
 800fc70:	7cfb      	ldrb	r3, [r7, #19]
 800fc72:	2b01      	cmp	r3, #1
 800fc74:	d003      	beq.n	800fc7e <HAL_CAN_ConfigFilter+0x26>
 800fc76:	7cfb      	ldrb	r3, [r7, #19]
 800fc78:	2b02      	cmp	r3, #2
 800fc7a:	f040 80be 	bne.w	800fdfa <HAL_CAN_ConfigFilter+0x1a2>
 800fc7e:	4b65      	ldr	r3, [pc, #404]	; (800fe14 <HAL_CAN_ConfigFilter+0x1bc>)
 800fc80:	617b      	str	r3, [r7, #20]
 800fc82:	697b      	ldr	r3, [r7, #20]
 800fc84:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800fc88:	f043 0201 	orr.w	r2, r3, #1
 800fc8c:	697b      	ldr	r3, [r7, #20]
 800fc8e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fc92:	697b      	ldr	r3, [r7, #20]
 800fc94:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800fc98:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 800fc9c:	697b      	ldr	r3, [r7, #20]
 800fc9e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fca2:	697b      	ldr	r3, [r7, #20]
 800fca4:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 800fca8:	683b      	ldr	r3, [r7, #0]
 800fcaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fcac:	021b      	lsls	r3, r3, #8
 800fcae:	431a      	orrs	r2, r3
 800fcb0:	697b      	ldr	r3, [r7, #20]
 800fcb2:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fcb6:	683b      	ldr	r3, [r7, #0]
 800fcb8:	695b      	ldr	r3, [r3, #20]
 800fcba:	f003 031f 	and.w	r3, r3, #31
 800fcbe:	2201      	movs	r2, #1
 800fcc0:	fa02 f303 	lsl.w	r3, r2, r3
 800fcc4:	60fb      	str	r3, [r7, #12]
 800fcc6:	697b      	ldr	r3, [r7, #20]
 800fcc8:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 800fccc:	68fb      	ldr	r3, [r7, #12]
 800fcce:	43db      	mvns	r3, r3
 800fcd0:	401a      	ands	r2, r3
 800fcd2:	697b      	ldr	r3, [r7, #20]
 800fcd4:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 800fcd8:	683b      	ldr	r3, [r7, #0]
 800fcda:	69db      	ldr	r3, [r3, #28]
 800fcdc:	2b00      	cmp	r3, #0
 800fcde:	d123      	bne.n	800fd28 <HAL_CAN_ConfigFilter+0xd0>
 800fce0:	697b      	ldr	r3, [r7, #20]
 800fce2:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800fce6:	68fb      	ldr	r3, [r7, #12]
 800fce8:	43db      	mvns	r3, r3
 800fcea:	401a      	ands	r2, r3
 800fcec:	697b      	ldr	r3, [r7, #20]
 800fcee:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800fcf2:	683b      	ldr	r3, [r7, #0]
 800fcf4:	68db      	ldr	r3, [r3, #12]
 800fcf6:	0419      	lsls	r1, r3, #16
 800fcf8:	683b      	ldr	r3, [r7, #0]
 800fcfa:	685b      	ldr	r3, [r3, #4]
 800fcfc:	b29b      	uxth	r3, r3
 800fcfe:	683a      	ldr	r2, [r7, #0]
 800fd00:	6952      	ldr	r2, [r2, #20]
 800fd02:	4319      	orrs	r1, r3
 800fd04:	697b      	ldr	r3, [r7, #20]
 800fd06:	3248      	adds	r2, #72	; 0x48
 800fd08:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800fd0c:	683b      	ldr	r3, [r7, #0]
 800fd0e:	689b      	ldr	r3, [r3, #8]
 800fd10:	0419      	lsls	r1, r3, #16
 800fd12:	683b      	ldr	r3, [r7, #0]
 800fd14:	681b      	ldr	r3, [r3, #0]
 800fd16:	b29a      	uxth	r2, r3
 800fd18:	683b      	ldr	r3, [r7, #0]
 800fd1a:	695b      	ldr	r3, [r3, #20]
 800fd1c:	430a      	orrs	r2, r1
 800fd1e:	6979      	ldr	r1, [r7, #20]
 800fd20:	3348      	adds	r3, #72	; 0x48
 800fd22:	00db      	lsls	r3, r3, #3
 800fd24:	440b      	add	r3, r1
 800fd26:	605a      	str	r2, [r3, #4]
 800fd28:	683b      	ldr	r3, [r7, #0]
 800fd2a:	69db      	ldr	r3, [r3, #28]
 800fd2c:	2b01      	cmp	r3, #1
 800fd2e:	d122      	bne.n	800fd76 <HAL_CAN_ConfigFilter+0x11e>
 800fd30:	697b      	ldr	r3, [r7, #20]
 800fd32:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800fd36:	68fb      	ldr	r3, [r7, #12]
 800fd38:	431a      	orrs	r2, r3
 800fd3a:	697b      	ldr	r3, [r7, #20]
 800fd3c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800fd40:	683b      	ldr	r3, [r7, #0]
 800fd42:	681b      	ldr	r3, [r3, #0]
 800fd44:	0419      	lsls	r1, r3, #16
 800fd46:	683b      	ldr	r3, [r7, #0]
 800fd48:	685b      	ldr	r3, [r3, #4]
 800fd4a:	b29b      	uxth	r3, r3
 800fd4c:	683a      	ldr	r2, [r7, #0]
 800fd4e:	6952      	ldr	r2, [r2, #20]
 800fd50:	4319      	orrs	r1, r3
 800fd52:	697b      	ldr	r3, [r7, #20]
 800fd54:	3248      	adds	r2, #72	; 0x48
 800fd56:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800fd5a:	683b      	ldr	r3, [r7, #0]
 800fd5c:	689b      	ldr	r3, [r3, #8]
 800fd5e:	0419      	lsls	r1, r3, #16
 800fd60:	683b      	ldr	r3, [r7, #0]
 800fd62:	68db      	ldr	r3, [r3, #12]
 800fd64:	b29a      	uxth	r2, r3
 800fd66:	683b      	ldr	r3, [r7, #0]
 800fd68:	695b      	ldr	r3, [r3, #20]
 800fd6a:	430a      	orrs	r2, r1
 800fd6c:	6979      	ldr	r1, [r7, #20]
 800fd6e:	3348      	adds	r3, #72	; 0x48
 800fd70:	00db      	lsls	r3, r3, #3
 800fd72:	440b      	add	r3, r1
 800fd74:	605a      	str	r2, [r3, #4]
 800fd76:	683b      	ldr	r3, [r7, #0]
 800fd78:	699b      	ldr	r3, [r3, #24]
 800fd7a:	2b00      	cmp	r3, #0
 800fd7c:	d109      	bne.n	800fd92 <HAL_CAN_ConfigFilter+0x13a>
 800fd7e:	697b      	ldr	r3, [r7, #20]
 800fd80:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800fd84:	68fb      	ldr	r3, [r7, #12]
 800fd86:	43db      	mvns	r3, r3
 800fd88:	401a      	ands	r2, r3
 800fd8a:	697b      	ldr	r3, [r7, #20]
 800fd8c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800fd90:	e007      	b.n	800fda2 <HAL_CAN_ConfigFilter+0x14a>
 800fd92:	697b      	ldr	r3, [r7, #20]
 800fd94:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800fd98:	68fb      	ldr	r3, [r7, #12]
 800fd9a:	431a      	orrs	r2, r3
 800fd9c:	697b      	ldr	r3, [r7, #20]
 800fd9e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800fda2:	683b      	ldr	r3, [r7, #0]
 800fda4:	691b      	ldr	r3, [r3, #16]
 800fda6:	2b00      	cmp	r3, #0
 800fda8:	d109      	bne.n	800fdbe <HAL_CAN_ConfigFilter+0x166>
 800fdaa:	697b      	ldr	r3, [r7, #20]
 800fdac:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 800fdb0:	68fb      	ldr	r3, [r7, #12]
 800fdb2:	43db      	mvns	r3, r3
 800fdb4:	401a      	ands	r2, r3
 800fdb6:	697b      	ldr	r3, [r7, #20]
 800fdb8:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800fdbc:	e007      	b.n	800fdce <HAL_CAN_ConfigFilter+0x176>
 800fdbe:	697b      	ldr	r3, [r7, #20]
 800fdc0:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 800fdc4:	68fb      	ldr	r3, [r7, #12]
 800fdc6:	431a      	orrs	r2, r3
 800fdc8:	697b      	ldr	r3, [r7, #20]
 800fdca:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800fdce:	683b      	ldr	r3, [r7, #0]
 800fdd0:	6a1b      	ldr	r3, [r3, #32]
 800fdd2:	2b01      	cmp	r3, #1
 800fdd4:	d107      	bne.n	800fde6 <HAL_CAN_ConfigFilter+0x18e>
 800fdd6:	697b      	ldr	r3, [r7, #20]
 800fdd8:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 800fddc:	68fb      	ldr	r3, [r7, #12]
 800fdde:	431a      	orrs	r2, r3
 800fde0:	697b      	ldr	r3, [r7, #20]
 800fde2:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 800fde6:	697b      	ldr	r3, [r7, #20]
 800fde8:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800fdec:	f023 0201 	bic.w	r2, r3, #1
 800fdf0:	697b      	ldr	r3, [r7, #20]
 800fdf2:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fdf6:	2300      	movs	r3, #0
 800fdf8:	e006      	b.n	800fe08 <HAL_CAN_ConfigFilter+0x1b0>
 800fdfa:	687b      	ldr	r3, [r7, #4]
 800fdfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fdfe:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 800fe02:	687b      	ldr	r3, [r7, #4]
 800fe04:	625a      	str	r2, [r3, #36]	; 0x24
 800fe06:	2301      	movs	r3, #1
 800fe08:	4618      	mov	r0, r3
 800fe0a:	371c      	adds	r7, #28
 800fe0c:	46bd      	mov	sp, r7
 800fe0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe12:	4770      	bx	lr
 800fe14:	40006400 	.word	0x40006400

0800fe18 <HAL_CAN_Start>:
 800fe18:	b580      	push	{r7, lr}
 800fe1a:	b084      	sub	sp, #16
 800fe1c:	af00      	add	r7, sp, #0
 800fe1e:	6078      	str	r0, [r7, #4]
 800fe20:	687b      	ldr	r3, [r7, #4]
 800fe22:	f893 3020 	ldrb.w	r3, [r3, #32]
 800fe26:	b2db      	uxtb	r3, r3
 800fe28:	2b01      	cmp	r3, #1
 800fe2a:	d12e      	bne.n	800fe8a <HAL_CAN_Start+0x72>
 800fe2c:	687b      	ldr	r3, [r7, #4]
 800fe2e:	2202      	movs	r2, #2
 800fe30:	f883 2020 	strb.w	r2, [r3, #32]
 800fe34:	687b      	ldr	r3, [r7, #4]
 800fe36:	681b      	ldr	r3, [r3, #0]
 800fe38:	681a      	ldr	r2, [r3, #0]
 800fe3a:	687b      	ldr	r3, [r7, #4]
 800fe3c:	681b      	ldr	r3, [r3, #0]
 800fe3e:	f022 0201 	bic.w	r2, r2, #1
 800fe42:	601a      	str	r2, [r3, #0]
 800fe44:	f7ff fb7a 	bl	800f53c <HAL_GetTick>
 800fe48:	60f8      	str	r0, [r7, #12]
 800fe4a:	e012      	b.n	800fe72 <HAL_CAN_Start+0x5a>
 800fe4c:	f7ff fb76 	bl	800f53c <HAL_GetTick>
 800fe50:	4602      	mov	r2, r0
 800fe52:	68fb      	ldr	r3, [r7, #12]
 800fe54:	1ad3      	subs	r3, r2, r3
 800fe56:	2b0a      	cmp	r3, #10
 800fe58:	d90b      	bls.n	800fe72 <HAL_CAN_Start+0x5a>
 800fe5a:	687b      	ldr	r3, [r7, #4]
 800fe5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fe5e:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800fe62:	687b      	ldr	r3, [r7, #4]
 800fe64:	625a      	str	r2, [r3, #36]	; 0x24
 800fe66:	687b      	ldr	r3, [r7, #4]
 800fe68:	2205      	movs	r2, #5
 800fe6a:	f883 2020 	strb.w	r2, [r3, #32]
 800fe6e:	2301      	movs	r3, #1
 800fe70:	e012      	b.n	800fe98 <HAL_CAN_Start+0x80>
 800fe72:	687b      	ldr	r3, [r7, #4]
 800fe74:	681b      	ldr	r3, [r3, #0]
 800fe76:	685b      	ldr	r3, [r3, #4]
 800fe78:	f003 0301 	and.w	r3, r3, #1
 800fe7c:	2b00      	cmp	r3, #0
 800fe7e:	d1e5      	bne.n	800fe4c <HAL_CAN_Start+0x34>
 800fe80:	687b      	ldr	r3, [r7, #4]
 800fe82:	2200      	movs	r2, #0
 800fe84:	625a      	str	r2, [r3, #36]	; 0x24
 800fe86:	2300      	movs	r3, #0
 800fe88:	e006      	b.n	800fe98 <HAL_CAN_Start+0x80>
 800fe8a:	687b      	ldr	r3, [r7, #4]
 800fe8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fe8e:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 800fe92:	687b      	ldr	r3, [r7, #4]
 800fe94:	625a      	str	r2, [r3, #36]	; 0x24
 800fe96:	2301      	movs	r3, #1
 800fe98:	4618      	mov	r0, r3
 800fe9a:	3710      	adds	r7, #16
 800fe9c:	46bd      	mov	sp, r7
 800fe9e:	bd80      	pop	{r7, pc}

0800fea0 <HAL_CAN_AddTxMessage>:
 800fea0:	b480      	push	{r7}
 800fea2:	b089      	sub	sp, #36	; 0x24
 800fea4:	af00      	add	r7, sp, #0
 800fea6:	60f8      	str	r0, [r7, #12]
 800fea8:	60b9      	str	r1, [r7, #8]
 800feaa:	607a      	str	r2, [r7, #4]
 800feac:	603b      	str	r3, [r7, #0]
 800feae:	68fb      	ldr	r3, [r7, #12]
 800feb0:	f893 3020 	ldrb.w	r3, [r3, #32]
 800feb4:	77fb      	strb	r3, [r7, #31]
 800feb6:	68fb      	ldr	r3, [r7, #12]
 800feb8:	681b      	ldr	r3, [r3, #0]
 800feba:	689b      	ldr	r3, [r3, #8]
 800febc:	61bb      	str	r3, [r7, #24]
 800febe:	7ffb      	ldrb	r3, [r7, #31]
 800fec0:	2b01      	cmp	r3, #1
 800fec2:	d003      	beq.n	800fecc <HAL_CAN_AddTxMessage+0x2c>
 800fec4:	7ffb      	ldrb	r3, [r7, #31]
 800fec6:	2b02      	cmp	r3, #2
 800fec8:	f040 80b8 	bne.w	801003c <HAL_CAN_AddTxMessage+0x19c>
 800fecc:	69bb      	ldr	r3, [r7, #24]
 800fece:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800fed2:	2b00      	cmp	r3, #0
 800fed4:	d10a      	bne.n	800feec <HAL_CAN_AddTxMessage+0x4c>
 800fed6:	69bb      	ldr	r3, [r7, #24]
 800fed8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800fedc:	2b00      	cmp	r3, #0
 800fede:	d105      	bne.n	800feec <HAL_CAN_AddTxMessage+0x4c>
 800fee0:	69bb      	ldr	r3, [r7, #24]
 800fee2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800fee6:	2b00      	cmp	r3, #0
 800fee8:	f000 80a0 	beq.w	801002c <HAL_CAN_AddTxMessage+0x18c>
 800feec:	69bb      	ldr	r3, [r7, #24]
 800feee:	0e1b      	lsrs	r3, r3, #24
 800fef0:	f003 0303 	and.w	r3, r3, #3
 800fef4:	617b      	str	r3, [r7, #20]
 800fef6:	697b      	ldr	r3, [r7, #20]
 800fef8:	2b02      	cmp	r3, #2
 800fefa:	d907      	bls.n	800ff0c <HAL_CAN_AddTxMessage+0x6c>
 800fefc:	68fb      	ldr	r3, [r7, #12]
 800fefe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ff00:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800ff04:	68fb      	ldr	r3, [r7, #12]
 800ff06:	625a      	str	r2, [r3, #36]	; 0x24
 800ff08:	2301      	movs	r3, #1
 800ff0a:	e09e      	b.n	801004a <HAL_CAN_AddTxMessage+0x1aa>
 800ff0c:	2201      	movs	r2, #1
 800ff0e:	697b      	ldr	r3, [r7, #20]
 800ff10:	409a      	lsls	r2, r3
 800ff12:	683b      	ldr	r3, [r7, #0]
 800ff14:	601a      	str	r2, [r3, #0]
 800ff16:	68bb      	ldr	r3, [r7, #8]
 800ff18:	689b      	ldr	r3, [r3, #8]
 800ff1a:	2b00      	cmp	r3, #0
 800ff1c:	d10d      	bne.n	800ff3a <HAL_CAN_AddTxMessage+0x9a>
 800ff1e:	68bb      	ldr	r3, [r7, #8]
 800ff20:	681b      	ldr	r3, [r3, #0]
 800ff22:	055a      	lsls	r2, r3, #21
 800ff24:	68bb      	ldr	r3, [r7, #8]
 800ff26:	68db      	ldr	r3, [r3, #12]
 800ff28:	68f9      	ldr	r1, [r7, #12]
 800ff2a:	6809      	ldr	r1, [r1, #0]
 800ff2c:	431a      	orrs	r2, r3
 800ff2e:	697b      	ldr	r3, [r7, #20]
 800ff30:	3318      	adds	r3, #24
 800ff32:	011b      	lsls	r3, r3, #4
 800ff34:	440b      	add	r3, r1
 800ff36:	601a      	str	r2, [r3, #0]
 800ff38:	e00f      	b.n	800ff5a <HAL_CAN_AddTxMessage+0xba>
 800ff3a:	68bb      	ldr	r3, [r7, #8]
 800ff3c:	685b      	ldr	r3, [r3, #4]
 800ff3e:	00da      	lsls	r2, r3, #3
 800ff40:	68bb      	ldr	r3, [r7, #8]
 800ff42:	689b      	ldr	r3, [r3, #8]
 800ff44:	431a      	orrs	r2, r3
 800ff46:	68bb      	ldr	r3, [r7, #8]
 800ff48:	68db      	ldr	r3, [r3, #12]
 800ff4a:	68f9      	ldr	r1, [r7, #12]
 800ff4c:	6809      	ldr	r1, [r1, #0]
 800ff4e:	431a      	orrs	r2, r3
 800ff50:	697b      	ldr	r3, [r7, #20]
 800ff52:	3318      	adds	r3, #24
 800ff54:	011b      	lsls	r3, r3, #4
 800ff56:	440b      	add	r3, r1
 800ff58:	601a      	str	r2, [r3, #0]
 800ff5a:	68fb      	ldr	r3, [r7, #12]
 800ff5c:	6819      	ldr	r1, [r3, #0]
 800ff5e:	68bb      	ldr	r3, [r7, #8]
 800ff60:	691a      	ldr	r2, [r3, #16]
 800ff62:	697b      	ldr	r3, [r7, #20]
 800ff64:	3318      	adds	r3, #24
 800ff66:	011b      	lsls	r3, r3, #4
 800ff68:	440b      	add	r3, r1
 800ff6a:	3304      	adds	r3, #4
 800ff6c:	601a      	str	r2, [r3, #0]
 800ff6e:	68bb      	ldr	r3, [r7, #8]
 800ff70:	7d1b      	ldrb	r3, [r3, #20]
 800ff72:	2b01      	cmp	r3, #1
 800ff74:	d111      	bne.n	800ff9a <HAL_CAN_AddTxMessage+0xfa>
 800ff76:	68fb      	ldr	r3, [r7, #12]
 800ff78:	681a      	ldr	r2, [r3, #0]
 800ff7a:	697b      	ldr	r3, [r7, #20]
 800ff7c:	3318      	adds	r3, #24
 800ff7e:	011b      	lsls	r3, r3, #4
 800ff80:	4413      	add	r3, r2
 800ff82:	3304      	adds	r3, #4
 800ff84:	681b      	ldr	r3, [r3, #0]
 800ff86:	68fa      	ldr	r2, [r7, #12]
 800ff88:	6811      	ldr	r1, [r2, #0]
 800ff8a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800ff8e:	697b      	ldr	r3, [r7, #20]
 800ff90:	3318      	adds	r3, #24
 800ff92:	011b      	lsls	r3, r3, #4
 800ff94:	440b      	add	r3, r1
 800ff96:	3304      	adds	r3, #4
 800ff98:	601a      	str	r2, [r3, #0]
 800ff9a:	687b      	ldr	r3, [r7, #4]
 800ff9c:	3307      	adds	r3, #7
 800ff9e:	781b      	ldrb	r3, [r3, #0]
 800ffa0:	061a      	lsls	r2, r3, #24
 800ffa2:	687b      	ldr	r3, [r7, #4]
 800ffa4:	3306      	adds	r3, #6
 800ffa6:	781b      	ldrb	r3, [r3, #0]
 800ffa8:	041b      	lsls	r3, r3, #16
 800ffaa:	431a      	orrs	r2, r3
 800ffac:	687b      	ldr	r3, [r7, #4]
 800ffae:	3305      	adds	r3, #5
 800ffb0:	781b      	ldrb	r3, [r3, #0]
 800ffb2:	021b      	lsls	r3, r3, #8
 800ffb4:	4313      	orrs	r3, r2
 800ffb6:	687a      	ldr	r2, [r7, #4]
 800ffb8:	3204      	adds	r2, #4
 800ffba:	7812      	ldrb	r2, [r2, #0]
 800ffbc:	4610      	mov	r0, r2
 800ffbe:	68fa      	ldr	r2, [r7, #12]
 800ffc0:	6811      	ldr	r1, [r2, #0]
 800ffc2:	ea43 0200 	orr.w	r2, r3, r0
 800ffc6:	697b      	ldr	r3, [r7, #20]
 800ffc8:	011b      	lsls	r3, r3, #4
 800ffca:	440b      	add	r3, r1
 800ffcc:	f503 73c6 	add.w	r3, r3, #396	; 0x18c
 800ffd0:	601a      	str	r2, [r3, #0]
 800ffd2:	687b      	ldr	r3, [r7, #4]
 800ffd4:	3303      	adds	r3, #3
 800ffd6:	781b      	ldrb	r3, [r3, #0]
 800ffd8:	061a      	lsls	r2, r3, #24
 800ffda:	687b      	ldr	r3, [r7, #4]
 800ffdc:	3302      	adds	r3, #2
 800ffde:	781b      	ldrb	r3, [r3, #0]
 800ffe0:	041b      	lsls	r3, r3, #16
 800ffe2:	431a      	orrs	r2, r3
 800ffe4:	687b      	ldr	r3, [r7, #4]
 800ffe6:	3301      	adds	r3, #1
 800ffe8:	781b      	ldrb	r3, [r3, #0]
 800ffea:	021b      	lsls	r3, r3, #8
 800ffec:	4313      	orrs	r3, r2
 800ffee:	687a      	ldr	r2, [r7, #4]
 800fff0:	7812      	ldrb	r2, [r2, #0]
 800fff2:	4610      	mov	r0, r2
 800fff4:	68fa      	ldr	r2, [r7, #12]
 800fff6:	6811      	ldr	r1, [r2, #0]
 800fff8:	ea43 0200 	orr.w	r2, r3, r0
 800fffc:	697b      	ldr	r3, [r7, #20]
 800fffe:	011b      	lsls	r3, r3, #4
 8010000:	440b      	add	r3, r1
 8010002:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 8010006:	601a      	str	r2, [r3, #0]
 8010008:	68fb      	ldr	r3, [r7, #12]
 801000a:	681a      	ldr	r2, [r3, #0]
 801000c:	697b      	ldr	r3, [r7, #20]
 801000e:	3318      	adds	r3, #24
 8010010:	011b      	lsls	r3, r3, #4
 8010012:	4413      	add	r3, r2
 8010014:	681b      	ldr	r3, [r3, #0]
 8010016:	68fa      	ldr	r2, [r7, #12]
 8010018:	6811      	ldr	r1, [r2, #0]
 801001a:	f043 0201 	orr.w	r2, r3, #1
 801001e:	697b      	ldr	r3, [r7, #20]
 8010020:	3318      	adds	r3, #24
 8010022:	011b      	lsls	r3, r3, #4
 8010024:	440b      	add	r3, r1
 8010026:	601a      	str	r2, [r3, #0]
 8010028:	2300      	movs	r3, #0
 801002a:	e00e      	b.n	801004a <HAL_CAN_AddTxMessage+0x1aa>
 801002c:	68fb      	ldr	r3, [r7, #12]
 801002e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010030:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8010034:	68fb      	ldr	r3, [r7, #12]
 8010036:	625a      	str	r2, [r3, #36]	; 0x24
 8010038:	2301      	movs	r3, #1
 801003a:	e006      	b.n	801004a <HAL_CAN_AddTxMessage+0x1aa>
 801003c:	68fb      	ldr	r3, [r7, #12]
 801003e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010040:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8010044:	68fb      	ldr	r3, [r7, #12]
 8010046:	625a      	str	r2, [r3, #36]	; 0x24
 8010048:	2301      	movs	r3, #1
 801004a:	4618      	mov	r0, r3
 801004c:	3724      	adds	r7, #36	; 0x24
 801004e:	46bd      	mov	sp, r7
 8010050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010054:	4770      	bx	lr

08010056 <HAL_CAN_GetRxMessage>:
 8010056:	b480      	push	{r7}
 8010058:	b087      	sub	sp, #28
 801005a:	af00      	add	r7, sp, #0
 801005c:	60f8      	str	r0, [r7, #12]
 801005e:	60b9      	str	r1, [r7, #8]
 8010060:	607a      	str	r2, [r7, #4]
 8010062:	603b      	str	r3, [r7, #0]
 8010064:	68fb      	ldr	r3, [r7, #12]
 8010066:	f893 3020 	ldrb.w	r3, [r3, #32]
 801006a:	75fb      	strb	r3, [r7, #23]
 801006c:	7dfb      	ldrb	r3, [r7, #23]
 801006e:	2b01      	cmp	r3, #1
 8010070:	d003      	beq.n	801007a <HAL_CAN_GetRxMessage+0x24>
 8010072:	7dfb      	ldrb	r3, [r7, #23]
 8010074:	2b02      	cmp	r3, #2
 8010076:	f040 80f3 	bne.w	8010260 <HAL_CAN_GetRxMessage+0x20a>
 801007a:	68bb      	ldr	r3, [r7, #8]
 801007c:	2b00      	cmp	r3, #0
 801007e:	d10e      	bne.n	801009e <HAL_CAN_GetRxMessage+0x48>
 8010080:	68fb      	ldr	r3, [r7, #12]
 8010082:	681b      	ldr	r3, [r3, #0]
 8010084:	68db      	ldr	r3, [r3, #12]
 8010086:	f003 0303 	and.w	r3, r3, #3
 801008a:	2b00      	cmp	r3, #0
 801008c:	d116      	bne.n	80100bc <HAL_CAN_GetRxMessage+0x66>
 801008e:	68fb      	ldr	r3, [r7, #12]
 8010090:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010092:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8010096:	68fb      	ldr	r3, [r7, #12]
 8010098:	625a      	str	r2, [r3, #36]	; 0x24
 801009a:	2301      	movs	r3, #1
 801009c:	e0e7      	b.n	801026e <HAL_CAN_GetRxMessage+0x218>
 801009e:	68fb      	ldr	r3, [r7, #12]
 80100a0:	681b      	ldr	r3, [r3, #0]
 80100a2:	691b      	ldr	r3, [r3, #16]
 80100a4:	f003 0303 	and.w	r3, r3, #3
 80100a8:	2b00      	cmp	r3, #0
 80100aa:	d107      	bne.n	80100bc <HAL_CAN_GetRxMessage+0x66>
 80100ac:	68fb      	ldr	r3, [r7, #12]
 80100ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80100b0:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 80100b4:	68fb      	ldr	r3, [r7, #12]
 80100b6:	625a      	str	r2, [r3, #36]	; 0x24
 80100b8:	2301      	movs	r3, #1
 80100ba:	e0d8      	b.n	801026e <HAL_CAN_GetRxMessage+0x218>
 80100bc:	68fb      	ldr	r3, [r7, #12]
 80100be:	681a      	ldr	r2, [r3, #0]
 80100c0:	68bb      	ldr	r3, [r7, #8]
 80100c2:	331b      	adds	r3, #27
 80100c4:	011b      	lsls	r3, r3, #4
 80100c6:	4413      	add	r3, r2
 80100c8:	681b      	ldr	r3, [r3, #0]
 80100ca:	f003 0204 	and.w	r2, r3, #4
 80100ce:	687b      	ldr	r3, [r7, #4]
 80100d0:	609a      	str	r2, [r3, #8]
 80100d2:	687b      	ldr	r3, [r7, #4]
 80100d4:	689b      	ldr	r3, [r3, #8]
 80100d6:	2b00      	cmp	r3, #0
 80100d8:	d10c      	bne.n	80100f4 <HAL_CAN_GetRxMessage+0x9e>
 80100da:	68fb      	ldr	r3, [r7, #12]
 80100dc:	681a      	ldr	r2, [r3, #0]
 80100de:	68bb      	ldr	r3, [r7, #8]
 80100e0:	331b      	adds	r3, #27
 80100e2:	011b      	lsls	r3, r3, #4
 80100e4:	4413      	add	r3, r2
 80100e6:	681b      	ldr	r3, [r3, #0]
 80100e8:	0d5b      	lsrs	r3, r3, #21
 80100ea:	f3c3 020a 	ubfx	r2, r3, #0, #11
 80100ee:	687b      	ldr	r3, [r7, #4]
 80100f0:	601a      	str	r2, [r3, #0]
 80100f2:	e00b      	b.n	801010c <HAL_CAN_GetRxMessage+0xb6>
 80100f4:	68fb      	ldr	r3, [r7, #12]
 80100f6:	681a      	ldr	r2, [r3, #0]
 80100f8:	68bb      	ldr	r3, [r7, #8]
 80100fa:	331b      	adds	r3, #27
 80100fc:	011b      	lsls	r3, r3, #4
 80100fe:	4413      	add	r3, r2
 8010100:	681b      	ldr	r3, [r3, #0]
 8010102:	08db      	lsrs	r3, r3, #3
 8010104:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8010108:	687b      	ldr	r3, [r7, #4]
 801010a:	605a      	str	r2, [r3, #4]
 801010c:	68fb      	ldr	r3, [r7, #12]
 801010e:	681a      	ldr	r2, [r3, #0]
 8010110:	68bb      	ldr	r3, [r7, #8]
 8010112:	331b      	adds	r3, #27
 8010114:	011b      	lsls	r3, r3, #4
 8010116:	4413      	add	r3, r2
 8010118:	681b      	ldr	r3, [r3, #0]
 801011a:	f003 0202 	and.w	r2, r3, #2
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	60da      	str	r2, [r3, #12]
 8010122:	68fb      	ldr	r3, [r7, #12]
 8010124:	681a      	ldr	r2, [r3, #0]
 8010126:	68bb      	ldr	r3, [r7, #8]
 8010128:	331b      	adds	r3, #27
 801012a:	011b      	lsls	r3, r3, #4
 801012c:	4413      	add	r3, r2
 801012e:	3304      	adds	r3, #4
 8010130:	681b      	ldr	r3, [r3, #0]
 8010132:	f003 020f 	and.w	r2, r3, #15
 8010136:	687b      	ldr	r3, [r7, #4]
 8010138:	611a      	str	r2, [r3, #16]
 801013a:	68fb      	ldr	r3, [r7, #12]
 801013c:	681a      	ldr	r2, [r3, #0]
 801013e:	68bb      	ldr	r3, [r7, #8]
 8010140:	331b      	adds	r3, #27
 8010142:	011b      	lsls	r3, r3, #4
 8010144:	4413      	add	r3, r2
 8010146:	3304      	adds	r3, #4
 8010148:	681b      	ldr	r3, [r3, #0]
 801014a:	0a1b      	lsrs	r3, r3, #8
 801014c:	b2da      	uxtb	r2, r3
 801014e:	687b      	ldr	r3, [r7, #4]
 8010150:	619a      	str	r2, [r3, #24]
 8010152:	68fb      	ldr	r3, [r7, #12]
 8010154:	681a      	ldr	r2, [r3, #0]
 8010156:	68bb      	ldr	r3, [r7, #8]
 8010158:	331b      	adds	r3, #27
 801015a:	011b      	lsls	r3, r3, #4
 801015c:	4413      	add	r3, r2
 801015e:	3304      	adds	r3, #4
 8010160:	681b      	ldr	r3, [r3, #0]
 8010162:	0c1b      	lsrs	r3, r3, #16
 8010164:	b29a      	uxth	r2, r3
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	615a      	str	r2, [r3, #20]
 801016a:	68fb      	ldr	r3, [r7, #12]
 801016c:	681a      	ldr	r2, [r3, #0]
 801016e:	68bb      	ldr	r3, [r7, #8]
 8010170:	011b      	lsls	r3, r3, #4
 8010172:	4413      	add	r3, r2
 8010174:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8010178:	681b      	ldr	r3, [r3, #0]
 801017a:	b2da      	uxtb	r2, r3
 801017c:	683b      	ldr	r3, [r7, #0]
 801017e:	701a      	strb	r2, [r3, #0]
 8010180:	68fb      	ldr	r3, [r7, #12]
 8010182:	681a      	ldr	r2, [r3, #0]
 8010184:	68bb      	ldr	r3, [r7, #8]
 8010186:	011b      	lsls	r3, r3, #4
 8010188:	4413      	add	r3, r2
 801018a:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801018e:	681b      	ldr	r3, [r3, #0]
 8010190:	0a1a      	lsrs	r2, r3, #8
 8010192:	683b      	ldr	r3, [r7, #0]
 8010194:	3301      	adds	r3, #1
 8010196:	b2d2      	uxtb	r2, r2
 8010198:	701a      	strb	r2, [r3, #0]
 801019a:	68fb      	ldr	r3, [r7, #12]
 801019c:	681a      	ldr	r2, [r3, #0]
 801019e:	68bb      	ldr	r3, [r7, #8]
 80101a0:	011b      	lsls	r3, r3, #4
 80101a2:	4413      	add	r3, r2
 80101a4:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 80101a8:	681b      	ldr	r3, [r3, #0]
 80101aa:	0c1a      	lsrs	r2, r3, #16
 80101ac:	683b      	ldr	r3, [r7, #0]
 80101ae:	3302      	adds	r3, #2
 80101b0:	b2d2      	uxtb	r2, r2
 80101b2:	701a      	strb	r2, [r3, #0]
 80101b4:	68fb      	ldr	r3, [r7, #12]
 80101b6:	681a      	ldr	r2, [r3, #0]
 80101b8:	68bb      	ldr	r3, [r7, #8]
 80101ba:	011b      	lsls	r3, r3, #4
 80101bc:	4413      	add	r3, r2
 80101be:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 80101c2:	681b      	ldr	r3, [r3, #0]
 80101c4:	0e1a      	lsrs	r2, r3, #24
 80101c6:	683b      	ldr	r3, [r7, #0]
 80101c8:	3303      	adds	r3, #3
 80101ca:	b2d2      	uxtb	r2, r2
 80101cc:	701a      	strb	r2, [r3, #0]
 80101ce:	68fb      	ldr	r3, [r7, #12]
 80101d0:	681a      	ldr	r2, [r3, #0]
 80101d2:	68bb      	ldr	r3, [r7, #8]
 80101d4:	011b      	lsls	r3, r3, #4
 80101d6:	4413      	add	r3, r2
 80101d8:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80101dc:	681a      	ldr	r2, [r3, #0]
 80101de:	683b      	ldr	r3, [r7, #0]
 80101e0:	3304      	adds	r3, #4
 80101e2:	b2d2      	uxtb	r2, r2
 80101e4:	701a      	strb	r2, [r3, #0]
 80101e6:	68fb      	ldr	r3, [r7, #12]
 80101e8:	681a      	ldr	r2, [r3, #0]
 80101ea:	68bb      	ldr	r3, [r7, #8]
 80101ec:	011b      	lsls	r3, r3, #4
 80101ee:	4413      	add	r3, r2
 80101f0:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80101f4:	681b      	ldr	r3, [r3, #0]
 80101f6:	0a1a      	lsrs	r2, r3, #8
 80101f8:	683b      	ldr	r3, [r7, #0]
 80101fa:	3305      	adds	r3, #5
 80101fc:	b2d2      	uxtb	r2, r2
 80101fe:	701a      	strb	r2, [r3, #0]
 8010200:	68fb      	ldr	r3, [r7, #12]
 8010202:	681a      	ldr	r2, [r3, #0]
 8010204:	68bb      	ldr	r3, [r7, #8]
 8010206:	011b      	lsls	r3, r3, #4
 8010208:	4413      	add	r3, r2
 801020a:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 801020e:	681b      	ldr	r3, [r3, #0]
 8010210:	0c1a      	lsrs	r2, r3, #16
 8010212:	683b      	ldr	r3, [r7, #0]
 8010214:	3306      	adds	r3, #6
 8010216:	b2d2      	uxtb	r2, r2
 8010218:	701a      	strb	r2, [r3, #0]
 801021a:	68fb      	ldr	r3, [r7, #12]
 801021c:	681a      	ldr	r2, [r3, #0]
 801021e:	68bb      	ldr	r3, [r7, #8]
 8010220:	011b      	lsls	r3, r3, #4
 8010222:	4413      	add	r3, r2
 8010224:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8010228:	681b      	ldr	r3, [r3, #0]
 801022a:	0e1a      	lsrs	r2, r3, #24
 801022c:	683b      	ldr	r3, [r7, #0]
 801022e:	3307      	adds	r3, #7
 8010230:	b2d2      	uxtb	r2, r2
 8010232:	701a      	strb	r2, [r3, #0]
 8010234:	68bb      	ldr	r3, [r7, #8]
 8010236:	2b00      	cmp	r3, #0
 8010238:	d108      	bne.n	801024c <HAL_CAN_GetRxMessage+0x1f6>
 801023a:	68fb      	ldr	r3, [r7, #12]
 801023c:	681b      	ldr	r3, [r3, #0]
 801023e:	68da      	ldr	r2, [r3, #12]
 8010240:	68fb      	ldr	r3, [r7, #12]
 8010242:	681b      	ldr	r3, [r3, #0]
 8010244:	f042 0220 	orr.w	r2, r2, #32
 8010248:	60da      	str	r2, [r3, #12]
 801024a:	e007      	b.n	801025c <HAL_CAN_GetRxMessage+0x206>
 801024c:	68fb      	ldr	r3, [r7, #12]
 801024e:	681b      	ldr	r3, [r3, #0]
 8010250:	691a      	ldr	r2, [r3, #16]
 8010252:	68fb      	ldr	r3, [r7, #12]
 8010254:	681b      	ldr	r3, [r3, #0]
 8010256:	f042 0220 	orr.w	r2, r2, #32
 801025a:	611a      	str	r2, [r3, #16]
 801025c:	2300      	movs	r3, #0
 801025e:	e006      	b.n	801026e <HAL_CAN_GetRxMessage+0x218>
 8010260:	68fb      	ldr	r3, [r7, #12]
 8010262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010264:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8010268:	68fb      	ldr	r3, [r7, #12]
 801026a:	625a      	str	r2, [r3, #36]	; 0x24
 801026c:	2301      	movs	r3, #1
 801026e:	4618      	mov	r0, r3
 8010270:	371c      	adds	r7, #28
 8010272:	46bd      	mov	sp, r7
 8010274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010278:	4770      	bx	lr

0801027a <HAL_CAN_ActivateNotification>:
 801027a:	b480      	push	{r7}
 801027c:	b085      	sub	sp, #20
 801027e:	af00      	add	r7, sp, #0
 8010280:	6078      	str	r0, [r7, #4]
 8010282:	6039      	str	r1, [r7, #0]
 8010284:	687b      	ldr	r3, [r7, #4]
 8010286:	f893 3020 	ldrb.w	r3, [r3, #32]
 801028a:	73fb      	strb	r3, [r7, #15]
 801028c:	7bfb      	ldrb	r3, [r7, #15]
 801028e:	2b01      	cmp	r3, #1
 8010290:	d002      	beq.n	8010298 <HAL_CAN_ActivateNotification+0x1e>
 8010292:	7bfb      	ldrb	r3, [r7, #15]
 8010294:	2b02      	cmp	r3, #2
 8010296:	d109      	bne.n	80102ac <HAL_CAN_ActivateNotification+0x32>
 8010298:	687b      	ldr	r3, [r7, #4]
 801029a:	681b      	ldr	r3, [r3, #0]
 801029c:	6959      	ldr	r1, [r3, #20]
 801029e:	687b      	ldr	r3, [r7, #4]
 80102a0:	681b      	ldr	r3, [r3, #0]
 80102a2:	683a      	ldr	r2, [r7, #0]
 80102a4:	430a      	orrs	r2, r1
 80102a6:	615a      	str	r2, [r3, #20]
 80102a8:	2300      	movs	r3, #0
 80102aa:	e006      	b.n	80102ba <HAL_CAN_ActivateNotification+0x40>
 80102ac:	687b      	ldr	r3, [r7, #4]
 80102ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102b0:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80102b4:	687b      	ldr	r3, [r7, #4]
 80102b6:	625a      	str	r2, [r3, #36]	; 0x24
 80102b8:	2301      	movs	r3, #1
 80102ba:	4618      	mov	r0, r3
 80102bc:	3714      	adds	r7, #20
 80102be:	46bd      	mov	sp, r7
 80102c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102c4:	4770      	bx	lr

080102c6 <HAL_CAN_DeactivateNotification>:
 80102c6:	b480      	push	{r7}
 80102c8:	b085      	sub	sp, #20
 80102ca:	af00      	add	r7, sp, #0
 80102cc:	6078      	str	r0, [r7, #4]
 80102ce:	6039      	str	r1, [r7, #0]
 80102d0:	687b      	ldr	r3, [r7, #4]
 80102d2:	f893 3020 	ldrb.w	r3, [r3, #32]
 80102d6:	73fb      	strb	r3, [r7, #15]
 80102d8:	7bfb      	ldrb	r3, [r7, #15]
 80102da:	2b01      	cmp	r3, #1
 80102dc:	d002      	beq.n	80102e4 <HAL_CAN_DeactivateNotification+0x1e>
 80102de:	7bfb      	ldrb	r3, [r7, #15]
 80102e0:	2b02      	cmp	r3, #2
 80102e2:	d10a      	bne.n	80102fa <HAL_CAN_DeactivateNotification+0x34>
 80102e4:	687b      	ldr	r3, [r7, #4]
 80102e6:	681b      	ldr	r3, [r3, #0]
 80102e8:	6959      	ldr	r1, [r3, #20]
 80102ea:	683b      	ldr	r3, [r7, #0]
 80102ec:	43da      	mvns	r2, r3
 80102ee:	687b      	ldr	r3, [r7, #4]
 80102f0:	681b      	ldr	r3, [r3, #0]
 80102f2:	400a      	ands	r2, r1
 80102f4:	615a      	str	r2, [r3, #20]
 80102f6:	2300      	movs	r3, #0
 80102f8:	e006      	b.n	8010308 <HAL_CAN_DeactivateNotification+0x42>
 80102fa:	687b      	ldr	r3, [r7, #4]
 80102fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102fe:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8010302:	687b      	ldr	r3, [r7, #4]
 8010304:	625a      	str	r2, [r3, #36]	; 0x24
 8010306:	2301      	movs	r3, #1
 8010308:	4618      	mov	r0, r3
 801030a:	3714      	adds	r7, #20
 801030c:	46bd      	mov	sp, r7
 801030e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010312:	4770      	bx	lr

08010314 <HAL_CAN_IRQHandler>:
 8010314:	b580      	push	{r7, lr}
 8010316:	b08a      	sub	sp, #40	; 0x28
 8010318:	af00      	add	r7, sp, #0
 801031a:	6078      	str	r0, [r7, #4]
 801031c:	2300      	movs	r3, #0
 801031e:	627b      	str	r3, [r7, #36]	; 0x24
 8010320:	687b      	ldr	r3, [r7, #4]
 8010322:	681b      	ldr	r3, [r3, #0]
 8010324:	695b      	ldr	r3, [r3, #20]
 8010326:	623b      	str	r3, [r7, #32]
 8010328:	687b      	ldr	r3, [r7, #4]
 801032a:	681b      	ldr	r3, [r3, #0]
 801032c:	685b      	ldr	r3, [r3, #4]
 801032e:	61fb      	str	r3, [r7, #28]
 8010330:	687b      	ldr	r3, [r7, #4]
 8010332:	681b      	ldr	r3, [r3, #0]
 8010334:	689b      	ldr	r3, [r3, #8]
 8010336:	61bb      	str	r3, [r7, #24]
 8010338:	687b      	ldr	r3, [r7, #4]
 801033a:	681b      	ldr	r3, [r3, #0]
 801033c:	68db      	ldr	r3, [r3, #12]
 801033e:	617b      	str	r3, [r7, #20]
 8010340:	687b      	ldr	r3, [r7, #4]
 8010342:	681b      	ldr	r3, [r3, #0]
 8010344:	691b      	ldr	r3, [r3, #16]
 8010346:	613b      	str	r3, [r7, #16]
 8010348:	687b      	ldr	r3, [r7, #4]
 801034a:	681b      	ldr	r3, [r3, #0]
 801034c:	699b      	ldr	r3, [r3, #24]
 801034e:	60fb      	str	r3, [r7, #12]
 8010350:	6a3b      	ldr	r3, [r7, #32]
 8010352:	f003 0301 	and.w	r3, r3, #1
 8010356:	2b00      	cmp	r3, #0
 8010358:	d07c      	beq.n	8010454 <HAL_CAN_IRQHandler+0x140>
 801035a:	69bb      	ldr	r3, [r7, #24]
 801035c:	f003 0301 	and.w	r3, r3, #1
 8010360:	2b00      	cmp	r3, #0
 8010362:	d023      	beq.n	80103ac <HAL_CAN_IRQHandler+0x98>
 8010364:	687b      	ldr	r3, [r7, #4]
 8010366:	681b      	ldr	r3, [r3, #0]
 8010368:	2201      	movs	r2, #1
 801036a:	609a      	str	r2, [r3, #8]
 801036c:	69bb      	ldr	r3, [r7, #24]
 801036e:	f003 0302 	and.w	r3, r3, #2
 8010372:	2b00      	cmp	r3, #0
 8010374:	d003      	beq.n	801037e <HAL_CAN_IRQHandler+0x6a>
 8010376:	6878      	ldr	r0, [r7, #4]
 8010378:	f000 f983 	bl	8010682 <HAL_CAN_TxMailbox0CompleteCallback>
 801037c:	e016      	b.n	80103ac <HAL_CAN_IRQHandler+0x98>
 801037e:	69bb      	ldr	r3, [r7, #24]
 8010380:	f003 0304 	and.w	r3, r3, #4
 8010384:	2b00      	cmp	r3, #0
 8010386:	d004      	beq.n	8010392 <HAL_CAN_IRQHandler+0x7e>
 8010388:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801038a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801038e:	627b      	str	r3, [r7, #36]	; 0x24
 8010390:	e00c      	b.n	80103ac <HAL_CAN_IRQHandler+0x98>
 8010392:	69bb      	ldr	r3, [r7, #24]
 8010394:	f003 0308 	and.w	r3, r3, #8
 8010398:	2b00      	cmp	r3, #0
 801039a:	d004      	beq.n	80103a6 <HAL_CAN_IRQHandler+0x92>
 801039c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801039e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80103a2:	627b      	str	r3, [r7, #36]	; 0x24
 80103a4:	e002      	b.n	80103ac <HAL_CAN_IRQHandler+0x98>
 80103a6:	6878      	ldr	r0, [r7, #4]
 80103a8:	f000 f989 	bl	80106be <HAL_CAN_TxMailbox0AbortCallback>
 80103ac:	69bb      	ldr	r3, [r7, #24]
 80103ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80103b2:	2b00      	cmp	r3, #0
 80103b4:	d024      	beq.n	8010400 <HAL_CAN_IRQHandler+0xec>
 80103b6:	687b      	ldr	r3, [r7, #4]
 80103b8:	681b      	ldr	r3, [r3, #0]
 80103ba:	f44f 7280 	mov.w	r2, #256	; 0x100
 80103be:	609a      	str	r2, [r3, #8]
 80103c0:	69bb      	ldr	r3, [r7, #24]
 80103c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80103c6:	2b00      	cmp	r3, #0
 80103c8:	d003      	beq.n	80103d2 <HAL_CAN_IRQHandler+0xbe>
 80103ca:	6878      	ldr	r0, [r7, #4]
 80103cc:	f000 f963 	bl	8010696 <HAL_CAN_TxMailbox1CompleteCallback>
 80103d0:	e016      	b.n	8010400 <HAL_CAN_IRQHandler+0xec>
 80103d2:	69bb      	ldr	r3, [r7, #24]
 80103d4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80103d8:	2b00      	cmp	r3, #0
 80103da:	d004      	beq.n	80103e6 <HAL_CAN_IRQHandler+0xd2>
 80103dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80103de:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80103e2:	627b      	str	r3, [r7, #36]	; 0x24
 80103e4:	e00c      	b.n	8010400 <HAL_CAN_IRQHandler+0xec>
 80103e6:	69bb      	ldr	r3, [r7, #24]
 80103e8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80103ec:	2b00      	cmp	r3, #0
 80103ee:	d004      	beq.n	80103fa <HAL_CAN_IRQHandler+0xe6>
 80103f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80103f2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80103f6:	627b      	str	r3, [r7, #36]	; 0x24
 80103f8:	e002      	b.n	8010400 <HAL_CAN_IRQHandler+0xec>
 80103fa:	6878      	ldr	r0, [r7, #4]
 80103fc:	f000 f969 	bl	80106d2 <HAL_CAN_TxMailbox1AbortCallback>
 8010400:	69bb      	ldr	r3, [r7, #24]
 8010402:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8010406:	2b00      	cmp	r3, #0
 8010408:	d024      	beq.n	8010454 <HAL_CAN_IRQHandler+0x140>
 801040a:	687b      	ldr	r3, [r7, #4]
 801040c:	681b      	ldr	r3, [r3, #0]
 801040e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8010412:	609a      	str	r2, [r3, #8]
 8010414:	69bb      	ldr	r3, [r7, #24]
 8010416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801041a:	2b00      	cmp	r3, #0
 801041c:	d003      	beq.n	8010426 <HAL_CAN_IRQHandler+0x112>
 801041e:	6878      	ldr	r0, [r7, #4]
 8010420:	f000 f943 	bl	80106aa <HAL_CAN_TxMailbox2CompleteCallback>
 8010424:	e016      	b.n	8010454 <HAL_CAN_IRQHandler+0x140>
 8010426:	69bb      	ldr	r3, [r7, #24]
 8010428:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 801042c:	2b00      	cmp	r3, #0
 801042e:	d004      	beq.n	801043a <HAL_CAN_IRQHandler+0x126>
 8010430:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010432:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010436:	627b      	str	r3, [r7, #36]	; 0x24
 8010438:	e00c      	b.n	8010454 <HAL_CAN_IRQHandler+0x140>
 801043a:	69bb      	ldr	r3, [r7, #24]
 801043c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8010440:	2b00      	cmp	r3, #0
 8010442:	d004      	beq.n	801044e <HAL_CAN_IRQHandler+0x13a>
 8010444:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010446:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801044a:	627b      	str	r3, [r7, #36]	; 0x24
 801044c:	e002      	b.n	8010454 <HAL_CAN_IRQHandler+0x140>
 801044e:	6878      	ldr	r0, [r7, #4]
 8010450:	f000 f949 	bl	80106e6 <HAL_CAN_TxMailbox2AbortCallback>
 8010454:	6a3b      	ldr	r3, [r7, #32]
 8010456:	f003 0308 	and.w	r3, r3, #8
 801045a:	2b00      	cmp	r3, #0
 801045c:	d00c      	beq.n	8010478 <HAL_CAN_IRQHandler+0x164>
 801045e:	697b      	ldr	r3, [r7, #20]
 8010460:	f003 0310 	and.w	r3, r3, #16
 8010464:	2b00      	cmp	r3, #0
 8010466:	d007      	beq.n	8010478 <HAL_CAN_IRQHandler+0x164>
 8010468:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801046a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801046e:	627b      	str	r3, [r7, #36]	; 0x24
 8010470:	687b      	ldr	r3, [r7, #4]
 8010472:	681b      	ldr	r3, [r3, #0]
 8010474:	2210      	movs	r2, #16
 8010476:	60da      	str	r2, [r3, #12]
 8010478:	6a3b      	ldr	r3, [r7, #32]
 801047a:	f003 0304 	and.w	r3, r3, #4
 801047e:	2b00      	cmp	r3, #0
 8010480:	d00b      	beq.n	801049a <HAL_CAN_IRQHandler+0x186>
 8010482:	697b      	ldr	r3, [r7, #20]
 8010484:	f003 0308 	and.w	r3, r3, #8
 8010488:	2b00      	cmp	r3, #0
 801048a:	d006      	beq.n	801049a <HAL_CAN_IRQHandler+0x186>
 801048c:	687b      	ldr	r3, [r7, #4]
 801048e:	681b      	ldr	r3, [r3, #0]
 8010490:	2208      	movs	r2, #8
 8010492:	60da      	str	r2, [r3, #12]
 8010494:	6878      	ldr	r0, [r7, #4]
 8010496:	f000 f930 	bl	80106fa <HAL_CAN_RxFifo0FullCallback>
 801049a:	6a3b      	ldr	r3, [r7, #32]
 801049c:	f003 0302 	and.w	r3, r3, #2
 80104a0:	2b00      	cmp	r3, #0
 80104a2:	d009      	beq.n	80104b8 <HAL_CAN_IRQHandler+0x1a4>
 80104a4:	687b      	ldr	r3, [r7, #4]
 80104a6:	681b      	ldr	r3, [r3, #0]
 80104a8:	68db      	ldr	r3, [r3, #12]
 80104aa:	f003 0303 	and.w	r3, r3, #3
 80104ae:	2b00      	cmp	r3, #0
 80104b0:	d002      	beq.n	80104b8 <HAL_CAN_IRQHandler+0x1a4>
 80104b2:	6878      	ldr	r0, [r7, #4]
 80104b4:	f7f0 febc 	bl	8001230 <HAL_CAN_RxFifo0MsgPendingCallback>
 80104b8:	6a3b      	ldr	r3, [r7, #32]
 80104ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80104be:	2b00      	cmp	r3, #0
 80104c0:	d00c      	beq.n	80104dc <HAL_CAN_IRQHandler+0x1c8>
 80104c2:	693b      	ldr	r3, [r7, #16]
 80104c4:	f003 0310 	and.w	r3, r3, #16
 80104c8:	2b00      	cmp	r3, #0
 80104ca:	d007      	beq.n	80104dc <HAL_CAN_IRQHandler+0x1c8>
 80104cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80104ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80104d2:	627b      	str	r3, [r7, #36]	; 0x24
 80104d4:	687b      	ldr	r3, [r7, #4]
 80104d6:	681b      	ldr	r3, [r3, #0]
 80104d8:	2210      	movs	r2, #16
 80104da:	611a      	str	r2, [r3, #16]
 80104dc:	6a3b      	ldr	r3, [r7, #32]
 80104de:	f003 0320 	and.w	r3, r3, #32
 80104e2:	2b00      	cmp	r3, #0
 80104e4:	d00b      	beq.n	80104fe <HAL_CAN_IRQHandler+0x1ea>
 80104e6:	693b      	ldr	r3, [r7, #16]
 80104e8:	f003 0308 	and.w	r3, r3, #8
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	d006      	beq.n	80104fe <HAL_CAN_IRQHandler+0x1ea>
 80104f0:	687b      	ldr	r3, [r7, #4]
 80104f2:	681b      	ldr	r3, [r3, #0]
 80104f4:	2208      	movs	r2, #8
 80104f6:	611a      	str	r2, [r3, #16]
 80104f8:	6878      	ldr	r0, [r7, #4]
 80104fa:	f000 f908 	bl	801070e <HAL_CAN_RxFifo1FullCallback>
 80104fe:	6a3b      	ldr	r3, [r7, #32]
 8010500:	f003 0310 	and.w	r3, r3, #16
 8010504:	2b00      	cmp	r3, #0
 8010506:	d009      	beq.n	801051c <HAL_CAN_IRQHandler+0x208>
 8010508:	687b      	ldr	r3, [r7, #4]
 801050a:	681b      	ldr	r3, [r3, #0]
 801050c:	691b      	ldr	r3, [r3, #16]
 801050e:	f003 0303 	and.w	r3, r3, #3
 8010512:	2b00      	cmp	r3, #0
 8010514:	d002      	beq.n	801051c <HAL_CAN_IRQHandler+0x208>
 8010516:	6878      	ldr	r0, [r7, #4]
 8010518:	f7f0 fe95 	bl	8001246 <HAL_CAN_RxFifo1MsgPendingCallback>
 801051c:	6a3b      	ldr	r3, [r7, #32]
 801051e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010522:	2b00      	cmp	r3, #0
 8010524:	d00b      	beq.n	801053e <HAL_CAN_IRQHandler+0x22a>
 8010526:	69fb      	ldr	r3, [r7, #28]
 8010528:	f003 0310 	and.w	r3, r3, #16
 801052c:	2b00      	cmp	r3, #0
 801052e:	d006      	beq.n	801053e <HAL_CAN_IRQHandler+0x22a>
 8010530:	687b      	ldr	r3, [r7, #4]
 8010532:	681b      	ldr	r3, [r3, #0]
 8010534:	2210      	movs	r2, #16
 8010536:	605a      	str	r2, [r3, #4]
 8010538:	6878      	ldr	r0, [r7, #4]
 801053a:	f000 f8f2 	bl	8010722 <HAL_CAN_SleepCallback>
 801053e:	6a3b      	ldr	r3, [r7, #32]
 8010540:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8010544:	2b00      	cmp	r3, #0
 8010546:	d00b      	beq.n	8010560 <HAL_CAN_IRQHandler+0x24c>
 8010548:	69fb      	ldr	r3, [r7, #28]
 801054a:	f003 0308 	and.w	r3, r3, #8
 801054e:	2b00      	cmp	r3, #0
 8010550:	d006      	beq.n	8010560 <HAL_CAN_IRQHandler+0x24c>
 8010552:	687b      	ldr	r3, [r7, #4]
 8010554:	681b      	ldr	r3, [r3, #0]
 8010556:	2208      	movs	r2, #8
 8010558:	605a      	str	r2, [r3, #4]
 801055a:	6878      	ldr	r0, [r7, #4]
 801055c:	f000 f8eb 	bl	8010736 <HAL_CAN_WakeUpFromRxMsgCallback>
 8010560:	6a3b      	ldr	r3, [r7, #32]
 8010562:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8010566:	2b00      	cmp	r3, #0
 8010568:	d07b      	beq.n	8010662 <HAL_CAN_IRQHandler+0x34e>
 801056a:	69fb      	ldr	r3, [r7, #28]
 801056c:	f003 0304 	and.w	r3, r3, #4
 8010570:	2b00      	cmp	r3, #0
 8010572:	d072      	beq.n	801065a <HAL_CAN_IRQHandler+0x346>
 8010574:	6a3b      	ldr	r3, [r7, #32]
 8010576:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801057a:	2b00      	cmp	r3, #0
 801057c:	d008      	beq.n	8010590 <HAL_CAN_IRQHandler+0x27c>
 801057e:	68fb      	ldr	r3, [r7, #12]
 8010580:	f003 0301 	and.w	r3, r3, #1
 8010584:	2b00      	cmp	r3, #0
 8010586:	d003      	beq.n	8010590 <HAL_CAN_IRQHandler+0x27c>
 8010588:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801058a:	f043 0301 	orr.w	r3, r3, #1
 801058e:	627b      	str	r3, [r7, #36]	; 0x24
 8010590:	6a3b      	ldr	r3, [r7, #32]
 8010592:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8010596:	2b00      	cmp	r3, #0
 8010598:	d008      	beq.n	80105ac <HAL_CAN_IRQHandler+0x298>
 801059a:	68fb      	ldr	r3, [r7, #12]
 801059c:	f003 0302 	and.w	r3, r3, #2
 80105a0:	2b00      	cmp	r3, #0
 80105a2:	d003      	beq.n	80105ac <HAL_CAN_IRQHandler+0x298>
 80105a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80105a6:	f043 0302 	orr.w	r3, r3, #2
 80105aa:	627b      	str	r3, [r7, #36]	; 0x24
 80105ac:	6a3b      	ldr	r3, [r7, #32]
 80105ae:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	d008      	beq.n	80105c8 <HAL_CAN_IRQHandler+0x2b4>
 80105b6:	68fb      	ldr	r3, [r7, #12]
 80105b8:	f003 0304 	and.w	r3, r3, #4
 80105bc:	2b00      	cmp	r3, #0
 80105be:	d003      	beq.n	80105c8 <HAL_CAN_IRQHandler+0x2b4>
 80105c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80105c2:	f043 0304 	orr.w	r3, r3, #4
 80105c6:	627b      	str	r3, [r7, #36]	; 0x24
 80105c8:	6a3b      	ldr	r3, [r7, #32]
 80105ca:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80105ce:	2b00      	cmp	r3, #0
 80105d0:	d043      	beq.n	801065a <HAL_CAN_IRQHandler+0x346>
 80105d2:	68fb      	ldr	r3, [r7, #12]
 80105d4:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80105d8:	2b00      	cmp	r3, #0
 80105da:	d03e      	beq.n	801065a <HAL_CAN_IRQHandler+0x346>
 80105dc:	68fb      	ldr	r3, [r7, #12]
 80105de:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80105e2:	2b60      	cmp	r3, #96	; 0x60
 80105e4:	d02b      	beq.n	801063e <HAL_CAN_IRQHandler+0x32a>
 80105e6:	2b60      	cmp	r3, #96	; 0x60
 80105e8:	d82e      	bhi.n	8010648 <HAL_CAN_IRQHandler+0x334>
 80105ea:	2b50      	cmp	r3, #80	; 0x50
 80105ec:	d022      	beq.n	8010634 <HAL_CAN_IRQHandler+0x320>
 80105ee:	2b50      	cmp	r3, #80	; 0x50
 80105f0:	d82a      	bhi.n	8010648 <HAL_CAN_IRQHandler+0x334>
 80105f2:	2b40      	cmp	r3, #64	; 0x40
 80105f4:	d019      	beq.n	801062a <HAL_CAN_IRQHandler+0x316>
 80105f6:	2b40      	cmp	r3, #64	; 0x40
 80105f8:	d826      	bhi.n	8010648 <HAL_CAN_IRQHandler+0x334>
 80105fa:	2b30      	cmp	r3, #48	; 0x30
 80105fc:	d010      	beq.n	8010620 <HAL_CAN_IRQHandler+0x30c>
 80105fe:	2b30      	cmp	r3, #48	; 0x30
 8010600:	d822      	bhi.n	8010648 <HAL_CAN_IRQHandler+0x334>
 8010602:	2b10      	cmp	r3, #16
 8010604:	d002      	beq.n	801060c <HAL_CAN_IRQHandler+0x2f8>
 8010606:	2b20      	cmp	r3, #32
 8010608:	d005      	beq.n	8010616 <HAL_CAN_IRQHandler+0x302>
 801060a:	e01d      	b.n	8010648 <HAL_CAN_IRQHandler+0x334>
 801060c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801060e:	f043 0308 	orr.w	r3, r3, #8
 8010612:	627b      	str	r3, [r7, #36]	; 0x24
 8010614:	e019      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 8010616:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010618:	f043 0310 	orr.w	r3, r3, #16
 801061c:	627b      	str	r3, [r7, #36]	; 0x24
 801061e:	e014      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 8010620:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010622:	f043 0320 	orr.w	r3, r3, #32
 8010626:	627b      	str	r3, [r7, #36]	; 0x24
 8010628:	e00f      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 801062a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801062c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010630:	627b      	str	r3, [r7, #36]	; 0x24
 8010632:	e00a      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 8010634:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010636:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801063a:	627b      	str	r3, [r7, #36]	; 0x24
 801063c:	e005      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 801063e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010640:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010644:	627b      	str	r3, [r7, #36]	; 0x24
 8010646:	e000      	b.n	801064a <HAL_CAN_IRQHandler+0x336>
 8010648:	bf00      	nop
 801064a:	687b      	ldr	r3, [r7, #4]
 801064c:	681b      	ldr	r3, [r3, #0]
 801064e:	699a      	ldr	r2, [r3, #24]
 8010650:	687b      	ldr	r3, [r7, #4]
 8010652:	681b      	ldr	r3, [r3, #0]
 8010654:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8010658:	619a      	str	r2, [r3, #24]
 801065a:	687b      	ldr	r3, [r7, #4]
 801065c:	681b      	ldr	r3, [r3, #0]
 801065e:	2204      	movs	r2, #4
 8010660:	605a      	str	r2, [r3, #4]
 8010662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010664:	2b00      	cmp	r3, #0
 8010666:	d008      	beq.n	801067a <HAL_CAN_IRQHandler+0x366>
 8010668:	687b      	ldr	r3, [r7, #4]
 801066a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801066c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801066e:	431a      	orrs	r2, r3
 8010670:	687b      	ldr	r3, [r7, #4]
 8010672:	625a      	str	r2, [r3, #36]	; 0x24
 8010674:	6878      	ldr	r0, [r7, #4]
 8010676:	f000 f868 	bl	801074a <HAL_CAN_ErrorCallback>
 801067a:	bf00      	nop
 801067c:	3728      	adds	r7, #40	; 0x28
 801067e:	46bd      	mov	sp, r7
 8010680:	bd80      	pop	{r7, pc}

08010682 <HAL_CAN_TxMailbox0CompleteCallback>:
 8010682:	b480      	push	{r7}
 8010684:	b083      	sub	sp, #12
 8010686:	af00      	add	r7, sp, #0
 8010688:	6078      	str	r0, [r7, #4]
 801068a:	bf00      	nop
 801068c:	370c      	adds	r7, #12
 801068e:	46bd      	mov	sp, r7
 8010690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010694:	4770      	bx	lr

08010696 <HAL_CAN_TxMailbox1CompleteCallback>:
 8010696:	b480      	push	{r7}
 8010698:	b083      	sub	sp, #12
 801069a:	af00      	add	r7, sp, #0
 801069c:	6078      	str	r0, [r7, #4]
 801069e:	bf00      	nop
 80106a0:	370c      	adds	r7, #12
 80106a2:	46bd      	mov	sp, r7
 80106a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106a8:	4770      	bx	lr

080106aa <HAL_CAN_TxMailbox2CompleteCallback>:
 80106aa:	b480      	push	{r7}
 80106ac:	b083      	sub	sp, #12
 80106ae:	af00      	add	r7, sp, #0
 80106b0:	6078      	str	r0, [r7, #4]
 80106b2:	bf00      	nop
 80106b4:	370c      	adds	r7, #12
 80106b6:	46bd      	mov	sp, r7
 80106b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106bc:	4770      	bx	lr

080106be <HAL_CAN_TxMailbox0AbortCallback>:
 80106be:	b480      	push	{r7}
 80106c0:	b083      	sub	sp, #12
 80106c2:	af00      	add	r7, sp, #0
 80106c4:	6078      	str	r0, [r7, #4]
 80106c6:	bf00      	nop
 80106c8:	370c      	adds	r7, #12
 80106ca:	46bd      	mov	sp, r7
 80106cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106d0:	4770      	bx	lr

080106d2 <HAL_CAN_TxMailbox1AbortCallback>:
 80106d2:	b480      	push	{r7}
 80106d4:	b083      	sub	sp, #12
 80106d6:	af00      	add	r7, sp, #0
 80106d8:	6078      	str	r0, [r7, #4]
 80106da:	bf00      	nop
 80106dc:	370c      	adds	r7, #12
 80106de:	46bd      	mov	sp, r7
 80106e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106e4:	4770      	bx	lr

080106e6 <HAL_CAN_TxMailbox2AbortCallback>:
 80106e6:	b480      	push	{r7}
 80106e8:	b083      	sub	sp, #12
 80106ea:	af00      	add	r7, sp, #0
 80106ec:	6078      	str	r0, [r7, #4]
 80106ee:	bf00      	nop
 80106f0:	370c      	adds	r7, #12
 80106f2:	46bd      	mov	sp, r7
 80106f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106f8:	4770      	bx	lr

080106fa <HAL_CAN_RxFifo0FullCallback>:
 80106fa:	b480      	push	{r7}
 80106fc:	b083      	sub	sp, #12
 80106fe:	af00      	add	r7, sp, #0
 8010700:	6078      	str	r0, [r7, #4]
 8010702:	bf00      	nop
 8010704:	370c      	adds	r7, #12
 8010706:	46bd      	mov	sp, r7
 8010708:	f85d 7b04 	ldr.w	r7, [sp], #4
 801070c:	4770      	bx	lr

0801070e <HAL_CAN_RxFifo1FullCallback>:
 801070e:	b480      	push	{r7}
 8010710:	b083      	sub	sp, #12
 8010712:	af00      	add	r7, sp, #0
 8010714:	6078      	str	r0, [r7, #4]
 8010716:	bf00      	nop
 8010718:	370c      	adds	r7, #12
 801071a:	46bd      	mov	sp, r7
 801071c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010720:	4770      	bx	lr

08010722 <HAL_CAN_SleepCallback>:
 8010722:	b480      	push	{r7}
 8010724:	b083      	sub	sp, #12
 8010726:	af00      	add	r7, sp, #0
 8010728:	6078      	str	r0, [r7, #4]
 801072a:	bf00      	nop
 801072c:	370c      	adds	r7, #12
 801072e:	46bd      	mov	sp, r7
 8010730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010734:	4770      	bx	lr

08010736 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8010736:	b480      	push	{r7}
 8010738:	b083      	sub	sp, #12
 801073a:	af00      	add	r7, sp, #0
 801073c:	6078      	str	r0, [r7, #4]
 801073e:	bf00      	nop
 8010740:	370c      	adds	r7, #12
 8010742:	46bd      	mov	sp, r7
 8010744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010748:	4770      	bx	lr

0801074a <HAL_CAN_ErrorCallback>:
 801074a:	b480      	push	{r7}
 801074c:	b083      	sub	sp, #12
 801074e:	af00      	add	r7, sp, #0
 8010750:	6078      	str	r0, [r7, #4]
 8010752:	bf00      	nop
 8010754:	370c      	adds	r7, #12
 8010756:	46bd      	mov	sp, r7
 8010758:	f85d 7b04 	ldr.w	r7, [sp], #4
 801075c:	4770      	bx	lr
	...

08010760 <__NVIC_SetPriorityGrouping>:
 8010760:	b480      	push	{r7}
 8010762:	b085      	sub	sp, #20
 8010764:	af00      	add	r7, sp, #0
 8010766:	6078      	str	r0, [r7, #4]
 8010768:	687b      	ldr	r3, [r7, #4]
 801076a:	f003 0307 	and.w	r3, r3, #7
 801076e:	60fb      	str	r3, [r7, #12]
 8010770:	4b0c      	ldr	r3, [pc, #48]	; (80107a4 <__NVIC_SetPriorityGrouping+0x44>)
 8010772:	68db      	ldr	r3, [r3, #12]
 8010774:	60bb      	str	r3, [r7, #8]
 8010776:	68ba      	ldr	r2, [r7, #8]
 8010778:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 801077c:	4013      	ands	r3, r2
 801077e:	60bb      	str	r3, [r7, #8]
 8010780:	68fb      	ldr	r3, [r7, #12]
 8010782:	021a      	lsls	r2, r3, #8
 8010784:	68bb      	ldr	r3, [r7, #8]
 8010786:	4313      	orrs	r3, r2
 8010788:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 801078c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8010790:	60bb      	str	r3, [r7, #8]
 8010792:	4a04      	ldr	r2, [pc, #16]	; (80107a4 <__NVIC_SetPriorityGrouping+0x44>)
 8010794:	68bb      	ldr	r3, [r7, #8]
 8010796:	60d3      	str	r3, [r2, #12]
 8010798:	bf00      	nop
 801079a:	3714      	adds	r7, #20
 801079c:	46bd      	mov	sp, r7
 801079e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107a2:	4770      	bx	lr
 80107a4:	e000ed00 	.word	0xe000ed00

080107a8 <__NVIC_GetPriorityGrouping>:
 80107a8:	b480      	push	{r7}
 80107aa:	af00      	add	r7, sp, #0
 80107ac:	4b04      	ldr	r3, [pc, #16]	; (80107c0 <__NVIC_GetPriorityGrouping+0x18>)
 80107ae:	68db      	ldr	r3, [r3, #12]
 80107b0:	0a1b      	lsrs	r3, r3, #8
 80107b2:	f003 0307 	and.w	r3, r3, #7
 80107b6:	4618      	mov	r0, r3
 80107b8:	46bd      	mov	sp, r7
 80107ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107be:	4770      	bx	lr
 80107c0:	e000ed00 	.word	0xe000ed00

080107c4 <__NVIC_EnableIRQ>:
 80107c4:	b480      	push	{r7}
 80107c6:	b083      	sub	sp, #12
 80107c8:	af00      	add	r7, sp, #0
 80107ca:	4603      	mov	r3, r0
 80107cc:	71fb      	strb	r3, [r7, #7]
 80107ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80107d2:	2b00      	cmp	r3, #0
 80107d4:	db0b      	blt.n	80107ee <__NVIC_EnableIRQ+0x2a>
 80107d6:	79fb      	ldrb	r3, [r7, #7]
 80107d8:	f003 021f 	and.w	r2, r3, #31
 80107dc:	4907      	ldr	r1, [pc, #28]	; (80107fc <__NVIC_EnableIRQ+0x38>)
 80107de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80107e2:	095b      	lsrs	r3, r3, #5
 80107e4:	2001      	movs	r0, #1
 80107e6:	fa00 f202 	lsl.w	r2, r0, r2
 80107ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80107ee:	bf00      	nop
 80107f0:	370c      	adds	r7, #12
 80107f2:	46bd      	mov	sp, r7
 80107f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107f8:	4770      	bx	lr
 80107fa:	bf00      	nop
 80107fc:	e000e100 	.word	0xe000e100

08010800 <__NVIC_SetPriority>:
 8010800:	b480      	push	{r7}
 8010802:	b083      	sub	sp, #12
 8010804:	af00      	add	r7, sp, #0
 8010806:	4603      	mov	r3, r0
 8010808:	6039      	str	r1, [r7, #0]
 801080a:	71fb      	strb	r3, [r7, #7]
 801080c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010810:	2b00      	cmp	r3, #0
 8010812:	db0a      	blt.n	801082a <__NVIC_SetPriority+0x2a>
 8010814:	683b      	ldr	r3, [r7, #0]
 8010816:	b2da      	uxtb	r2, r3
 8010818:	490c      	ldr	r1, [pc, #48]	; (801084c <__NVIC_SetPriority+0x4c>)
 801081a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801081e:	0112      	lsls	r2, r2, #4
 8010820:	b2d2      	uxtb	r2, r2
 8010822:	440b      	add	r3, r1
 8010824:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8010828:	e00a      	b.n	8010840 <__NVIC_SetPriority+0x40>
 801082a:	683b      	ldr	r3, [r7, #0]
 801082c:	b2da      	uxtb	r2, r3
 801082e:	4908      	ldr	r1, [pc, #32]	; (8010850 <__NVIC_SetPriority+0x50>)
 8010830:	79fb      	ldrb	r3, [r7, #7]
 8010832:	f003 030f 	and.w	r3, r3, #15
 8010836:	3b04      	subs	r3, #4
 8010838:	0112      	lsls	r2, r2, #4
 801083a:	b2d2      	uxtb	r2, r2
 801083c:	440b      	add	r3, r1
 801083e:	761a      	strb	r2, [r3, #24]
 8010840:	bf00      	nop
 8010842:	370c      	adds	r7, #12
 8010844:	46bd      	mov	sp, r7
 8010846:	f85d 7b04 	ldr.w	r7, [sp], #4
 801084a:	4770      	bx	lr
 801084c:	e000e100 	.word	0xe000e100
 8010850:	e000ed00 	.word	0xe000ed00

08010854 <NVIC_EncodePriority>:
 8010854:	b480      	push	{r7}
 8010856:	b089      	sub	sp, #36	; 0x24
 8010858:	af00      	add	r7, sp, #0
 801085a:	60f8      	str	r0, [r7, #12]
 801085c:	60b9      	str	r1, [r7, #8]
 801085e:	607a      	str	r2, [r7, #4]
 8010860:	68fb      	ldr	r3, [r7, #12]
 8010862:	f003 0307 	and.w	r3, r3, #7
 8010866:	61fb      	str	r3, [r7, #28]
 8010868:	69fb      	ldr	r3, [r7, #28]
 801086a:	f1c3 0307 	rsb	r3, r3, #7
 801086e:	2b04      	cmp	r3, #4
 8010870:	bf28      	it	cs
 8010872:	2304      	movcs	r3, #4
 8010874:	61bb      	str	r3, [r7, #24]
 8010876:	69fb      	ldr	r3, [r7, #28]
 8010878:	3304      	adds	r3, #4
 801087a:	2b06      	cmp	r3, #6
 801087c:	d902      	bls.n	8010884 <NVIC_EncodePriority+0x30>
 801087e:	69fb      	ldr	r3, [r7, #28]
 8010880:	3b03      	subs	r3, #3
 8010882:	e000      	b.n	8010886 <NVIC_EncodePriority+0x32>
 8010884:	2300      	movs	r3, #0
 8010886:	617b      	str	r3, [r7, #20]
 8010888:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801088c:	69bb      	ldr	r3, [r7, #24]
 801088e:	fa02 f303 	lsl.w	r3, r2, r3
 8010892:	43da      	mvns	r2, r3
 8010894:	68bb      	ldr	r3, [r7, #8]
 8010896:	401a      	ands	r2, r3
 8010898:	697b      	ldr	r3, [r7, #20]
 801089a:	409a      	lsls	r2, r3
 801089c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80108a0:	697b      	ldr	r3, [r7, #20]
 80108a2:	fa01 f303 	lsl.w	r3, r1, r3
 80108a6:	43d9      	mvns	r1, r3
 80108a8:	687b      	ldr	r3, [r7, #4]
 80108aa:	400b      	ands	r3, r1
 80108ac:	4313      	orrs	r3, r2
 80108ae:	4618      	mov	r0, r3
 80108b0:	3724      	adds	r7, #36	; 0x24
 80108b2:	46bd      	mov	sp, r7
 80108b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108b8:	4770      	bx	lr

080108ba <HAL_NVIC_SetPriorityGrouping>:
 80108ba:	b580      	push	{r7, lr}
 80108bc:	b082      	sub	sp, #8
 80108be:	af00      	add	r7, sp, #0
 80108c0:	6078      	str	r0, [r7, #4]
 80108c2:	6878      	ldr	r0, [r7, #4]
 80108c4:	f7ff ff4c 	bl	8010760 <__NVIC_SetPriorityGrouping>
 80108c8:	bf00      	nop
 80108ca:	3708      	adds	r7, #8
 80108cc:	46bd      	mov	sp, r7
 80108ce:	bd80      	pop	{r7, pc}

080108d0 <HAL_NVIC_SetPriority>:
 80108d0:	b580      	push	{r7, lr}
 80108d2:	b086      	sub	sp, #24
 80108d4:	af00      	add	r7, sp, #0
 80108d6:	4603      	mov	r3, r0
 80108d8:	60b9      	str	r1, [r7, #8]
 80108da:	607a      	str	r2, [r7, #4]
 80108dc:	73fb      	strb	r3, [r7, #15]
 80108de:	2300      	movs	r3, #0
 80108e0:	617b      	str	r3, [r7, #20]
 80108e2:	f7ff ff61 	bl	80107a8 <__NVIC_GetPriorityGrouping>
 80108e6:	6178      	str	r0, [r7, #20]
 80108e8:	687a      	ldr	r2, [r7, #4]
 80108ea:	68b9      	ldr	r1, [r7, #8]
 80108ec:	6978      	ldr	r0, [r7, #20]
 80108ee:	f7ff ffb1 	bl	8010854 <NVIC_EncodePriority>
 80108f2:	4602      	mov	r2, r0
 80108f4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80108f8:	4611      	mov	r1, r2
 80108fa:	4618      	mov	r0, r3
 80108fc:	f7ff ff80 	bl	8010800 <__NVIC_SetPriority>
 8010900:	bf00      	nop
 8010902:	3718      	adds	r7, #24
 8010904:	46bd      	mov	sp, r7
 8010906:	bd80      	pop	{r7, pc}

08010908 <HAL_NVIC_EnableIRQ>:
 8010908:	b580      	push	{r7, lr}
 801090a:	b082      	sub	sp, #8
 801090c:	af00      	add	r7, sp, #0
 801090e:	4603      	mov	r3, r0
 8010910:	71fb      	strb	r3, [r7, #7]
 8010912:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010916:	4618      	mov	r0, r3
 8010918:	f7ff ff54 	bl	80107c4 <__NVIC_EnableIRQ>
 801091c:	bf00      	nop
 801091e:	3708      	adds	r7, #8
 8010920:	46bd      	mov	sp, r7
 8010922:	bd80      	pop	{r7, pc}

08010924 <HAL_DMA_Init>:
 8010924:	b580      	push	{r7, lr}
 8010926:	b086      	sub	sp, #24
 8010928:	af00      	add	r7, sp, #0
 801092a:	6078      	str	r0, [r7, #4]
 801092c:	2300      	movs	r3, #0
 801092e:	617b      	str	r3, [r7, #20]
 8010930:	f7fe fe04 	bl	800f53c <HAL_GetTick>
 8010934:	6138      	str	r0, [r7, #16]
 8010936:	687b      	ldr	r3, [r7, #4]
 8010938:	2b00      	cmp	r3, #0
 801093a:	d101      	bne.n	8010940 <HAL_DMA_Init+0x1c>
 801093c:	2301      	movs	r3, #1
 801093e:	e099      	b.n	8010a74 <HAL_DMA_Init+0x150>
 8010940:	687b      	ldr	r3, [r7, #4]
 8010942:	2202      	movs	r2, #2
 8010944:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010948:	687b      	ldr	r3, [r7, #4]
 801094a:	2200      	movs	r2, #0
 801094c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010950:	687b      	ldr	r3, [r7, #4]
 8010952:	681b      	ldr	r3, [r3, #0]
 8010954:	681a      	ldr	r2, [r3, #0]
 8010956:	687b      	ldr	r3, [r7, #4]
 8010958:	681b      	ldr	r3, [r3, #0]
 801095a:	f022 0201 	bic.w	r2, r2, #1
 801095e:	601a      	str	r2, [r3, #0]
 8010960:	e00f      	b.n	8010982 <HAL_DMA_Init+0x5e>
 8010962:	f7fe fdeb 	bl	800f53c <HAL_GetTick>
 8010966:	4602      	mov	r2, r0
 8010968:	693b      	ldr	r3, [r7, #16]
 801096a:	1ad3      	subs	r3, r2, r3
 801096c:	2b05      	cmp	r3, #5
 801096e:	d908      	bls.n	8010982 <HAL_DMA_Init+0x5e>
 8010970:	687b      	ldr	r3, [r7, #4]
 8010972:	2220      	movs	r2, #32
 8010974:	655a      	str	r2, [r3, #84]	; 0x54
 8010976:	687b      	ldr	r3, [r7, #4]
 8010978:	2203      	movs	r2, #3
 801097a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 801097e:	2303      	movs	r3, #3
 8010980:	e078      	b.n	8010a74 <HAL_DMA_Init+0x150>
 8010982:	687b      	ldr	r3, [r7, #4]
 8010984:	681b      	ldr	r3, [r3, #0]
 8010986:	681b      	ldr	r3, [r3, #0]
 8010988:	f003 0301 	and.w	r3, r3, #1
 801098c:	2b00      	cmp	r3, #0
 801098e:	d1e8      	bne.n	8010962 <HAL_DMA_Init+0x3e>
 8010990:	687b      	ldr	r3, [r7, #4]
 8010992:	681b      	ldr	r3, [r3, #0]
 8010994:	681b      	ldr	r3, [r3, #0]
 8010996:	617b      	str	r3, [r7, #20]
 8010998:	697a      	ldr	r2, [r7, #20]
 801099a:	4b38      	ldr	r3, [pc, #224]	; (8010a7c <HAL_DMA_Init+0x158>)
 801099c:	4013      	ands	r3, r2
 801099e:	617b      	str	r3, [r7, #20]
 80109a0:	687b      	ldr	r3, [r7, #4]
 80109a2:	685a      	ldr	r2, [r3, #4]
 80109a4:	687b      	ldr	r3, [r7, #4]
 80109a6:	689b      	ldr	r3, [r3, #8]
 80109a8:	431a      	orrs	r2, r3
 80109aa:	687b      	ldr	r3, [r7, #4]
 80109ac:	68db      	ldr	r3, [r3, #12]
 80109ae:	431a      	orrs	r2, r3
 80109b0:	687b      	ldr	r3, [r7, #4]
 80109b2:	691b      	ldr	r3, [r3, #16]
 80109b4:	431a      	orrs	r2, r3
 80109b6:	687b      	ldr	r3, [r7, #4]
 80109b8:	695b      	ldr	r3, [r3, #20]
 80109ba:	431a      	orrs	r2, r3
 80109bc:	687b      	ldr	r3, [r7, #4]
 80109be:	699b      	ldr	r3, [r3, #24]
 80109c0:	431a      	orrs	r2, r3
 80109c2:	687b      	ldr	r3, [r7, #4]
 80109c4:	69db      	ldr	r3, [r3, #28]
 80109c6:	431a      	orrs	r2, r3
 80109c8:	687b      	ldr	r3, [r7, #4]
 80109ca:	6a1b      	ldr	r3, [r3, #32]
 80109cc:	4313      	orrs	r3, r2
 80109ce:	697a      	ldr	r2, [r7, #20]
 80109d0:	4313      	orrs	r3, r2
 80109d2:	617b      	str	r3, [r7, #20]
 80109d4:	687b      	ldr	r3, [r7, #4]
 80109d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80109d8:	2b04      	cmp	r3, #4
 80109da:	d107      	bne.n	80109ec <HAL_DMA_Init+0xc8>
 80109dc:	687b      	ldr	r3, [r7, #4]
 80109de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80109e0:	687b      	ldr	r3, [r7, #4]
 80109e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80109e4:	4313      	orrs	r3, r2
 80109e6:	697a      	ldr	r2, [r7, #20]
 80109e8:	4313      	orrs	r3, r2
 80109ea:	617b      	str	r3, [r7, #20]
 80109ec:	687b      	ldr	r3, [r7, #4]
 80109ee:	681b      	ldr	r3, [r3, #0]
 80109f0:	697a      	ldr	r2, [r7, #20]
 80109f2:	601a      	str	r2, [r3, #0]
 80109f4:	687b      	ldr	r3, [r7, #4]
 80109f6:	681b      	ldr	r3, [r3, #0]
 80109f8:	695b      	ldr	r3, [r3, #20]
 80109fa:	617b      	str	r3, [r7, #20]
 80109fc:	697b      	ldr	r3, [r7, #20]
 80109fe:	f023 0307 	bic.w	r3, r3, #7
 8010a02:	617b      	str	r3, [r7, #20]
 8010a04:	687b      	ldr	r3, [r7, #4]
 8010a06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a08:	697a      	ldr	r2, [r7, #20]
 8010a0a:	4313      	orrs	r3, r2
 8010a0c:	617b      	str	r3, [r7, #20]
 8010a0e:	687b      	ldr	r3, [r7, #4]
 8010a10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a12:	2b04      	cmp	r3, #4
 8010a14:	d117      	bne.n	8010a46 <HAL_DMA_Init+0x122>
 8010a16:	687b      	ldr	r3, [r7, #4]
 8010a18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010a1a:	697a      	ldr	r2, [r7, #20]
 8010a1c:	4313      	orrs	r3, r2
 8010a1e:	617b      	str	r3, [r7, #20]
 8010a20:	687b      	ldr	r3, [r7, #4]
 8010a22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a24:	2b00      	cmp	r3, #0
 8010a26:	d00e      	beq.n	8010a46 <HAL_DMA_Init+0x122>
 8010a28:	6878      	ldr	r0, [r7, #4]
 8010a2a:	f000 fb0d 	bl	8011048 <DMA_CheckFifoParam>
 8010a2e:	4603      	mov	r3, r0
 8010a30:	2b00      	cmp	r3, #0
 8010a32:	d008      	beq.n	8010a46 <HAL_DMA_Init+0x122>
 8010a34:	687b      	ldr	r3, [r7, #4]
 8010a36:	2240      	movs	r2, #64	; 0x40
 8010a38:	655a      	str	r2, [r3, #84]	; 0x54
 8010a3a:	687b      	ldr	r3, [r7, #4]
 8010a3c:	2201      	movs	r2, #1
 8010a3e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010a42:	2301      	movs	r3, #1
 8010a44:	e016      	b.n	8010a74 <HAL_DMA_Init+0x150>
 8010a46:	687b      	ldr	r3, [r7, #4]
 8010a48:	681b      	ldr	r3, [r3, #0]
 8010a4a:	697a      	ldr	r2, [r7, #20]
 8010a4c:	615a      	str	r2, [r3, #20]
 8010a4e:	6878      	ldr	r0, [r7, #4]
 8010a50:	f000 fac4 	bl	8010fdc <DMA_CalcBaseAndBitshift>
 8010a54:	4603      	mov	r3, r0
 8010a56:	60fb      	str	r3, [r7, #12]
 8010a58:	687b      	ldr	r3, [r7, #4]
 8010a5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010a5c:	223f      	movs	r2, #63	; 0x3f
 8010a5e:	409a      	lsls	r2, r3
 8010a60:	68fb      	ldr	r3, [r7, #12]
 8010a62:	609a      	str	r2, [r3, #8]
 8010a64:	687b      	ldr	r3, [r7, #4]
 8010a66:	2200      	movs	r2, #0
 8010a68:	655a      	str	r2, [r3, #84]	; 0x54
 8010a6a:	687b      	ldr	r3, [r7, #4]
 8010a6c:	2201      	movs	r2, #1
 8010a6e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010a72:	2300      	movs	r3, #0
 8010a74:	4618      	mov	r0, r3
 8010a76:	3718      	adds	r7, #24
 8010a78:	46bd      	mov	sp, r7
 8010a7a:	bd80      	pop	{r7, pc}
 8010a7c:	f010803f 	.word	0xf010803f

08010a80 <HAL_DMA_Start_IT>:
 8010a80:	b580      	push	{r7, lr}
 8010a82:	b086      	sub	sp, #24
 8010a84:	af00      	add	r7, sp, #0
 8010a86:	60f8      	str	r0, [r7, #12]
 8010a88:	60b9      	str	r1, [r7, #8]
 8010a8a:	607a      	str	r2, [r7, #4]
 8010a8c:	603b      	str	r3, [r7, #0]
 8010a8e:	2300      	movs	r3, #0
 8010a90:	75fb      	strb	r3, [r7, #23]
 8010a92:	68fb      	ldr	r3, [r7, #12]
 8010a94:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010a96:	613b      	str	r3, [r7, #16]
 8010a98:	68fb      	ldr	r3, [r7, #12]
 8010a9a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8010a9e:	2b01      	cmp	r3, #1
 8010aa0:	d101      	bne.n	8010aa6 <HAL_DMA_Start_IT+0x26>
 8010aa2:	2302      	movs	r3, #2
 8010aa4:	e040      	b.n	8010b28 <HAL_DMA_Start_IT+0xa8>
 8010aa6:	68fb      	ldr	r3, [r7, #12]
 8010aa8:	2201      	movs	r2, #1
 8010aaa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010aae:	68fb      	ldr	r3, [r7, #12]
 8010ab0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010ab4:	b2db      	uxtb	r3, r3
 8010ab6:	2b01      	cmp	r3, #1
 8010ab8:	d12f      	bne.n	8010b1a <HAL_DMA_Start_IT+0x9a>
 8010aba:	68fb      	ldr	r3, [r7, #12]
 8010abc:	2202      	movs	r2, #2
 8010abe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010ac2:	68fb      	ldr	r3, [r7, #12]
 8010ac4:	2200      	movs	r2, #0
 8010ac6:	655a      	str	r2, [r3, #84]	; 0x54
 8010ac8:	683b      	ldr	r3, [r7, #0]
 8010aca:	687a      	ldr	r2, [r7, #4]
 8010acc:	68b9      	ldr	r1, [r7, #8]
 8010ace:	68f8      	ldr	r0, [r7, #12]
 8010ad0:	f000 fa56 	bl	8010f80 <DMA_SetConfig>
 8010ad4:	68fb      	ldr	r3, [r7, #12]
 8010ad6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010ad8:	223f      	movs	r2, #63	; 0x3f
 8010ada:	409a      	lsls	r2, r3
 8010adc:	693b      	ldr	r3, [r7, #16]
 8010ade:	609a      	str	r2, [r3, #8]
 8010ae0:	68fb      	ldr	r3, [r7, #12]
 8010ae2:	681b      	ldr	r3, [r3, #0]
 8010ae4:	681a      	ldr	r2, [r3, #0]
 8010ae6:	68fb      	ldr	r3, [r7, #12]
 8010ae8:	681b      	ldr	r3, [r3, #0]
 8010aea:	f042 0216 	orr.w	r2, r2, #22
 8010aee:	601a      	str	r2, [r3, #0]
 8010af0:	68fb      	ldr	r3, [r7, #12]
 8010af2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010af4:	2b00      	cmp	r3, #0
 8010af6:	d007      	beq.n	8010b08 <HAL_DMA_Start_IT+0x88>
 8010af8:	68fb      	ldr	r3, [r7, #12]
 8010afa:	681b      	ldr	r3, [r3, #0]
 8010afc:	681a      	ldr	r2, [r3, #0]
 8010afe:	68fb      	ldr	r3, [r7, #12]
 8010b00:	681b      	ldr	r3, [r3, #0]
 8010b02:	f042 0208 	orr.w	r2, r2, #8
 8010b06:	601a      	str	r2, [r3, #0]
 8010b08:	68fb      	ldr	r3, [r7, #12]
 8010b0a:	681b      	ldr	r3, [r3, #0]
 8010b0c:	681a      	ldr	r2, [r3, #0]
 8010b0e:	68fb      	ldr	r3, [r7, #12]
 8010b10:	681b      	ldr	r3, [r3, #0]
 8010b12:	f042 0201 	orr.w	r2, r2, #1
 8010b16:	601a      	str	r2, [r3, #0]
 8010b18:	e005      	b.n	8010b26 <HAL_DMA_Start_IT+0xa6>
 8010b1a:	68fb      	ldr	r3, [r7, #12]
 8010b1c:	2200      	movs	r2, #0
 8010b1e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010b22:	2302      	movs	r3, #2
 8010b24:	75fb      	strb	r3, [r7, #23]
 8010b26:	7dfb      	ldrb	r3, [r7, #23]
 8010b28:	4618      	mov	r0, r3
 8010b2a:	3718      	adds	r7, #24
 8010b2c:	46bd      	mov	sp, r7
 8010b2e:	bd80      	pop	{r7, pc}

08010b30 <HAL_DMA_Abort>:
 8010b30:	b580      	push	{r7, lr}
 8010b32:	b084      	sub	sp, #16
 8010b34:	af00      	add	r7, sp, #0
 8010b36:	6078      	str	r0, [r7, #4]
 8010b38:	687b      	ldr	r3, [r7, #4]
 8010b3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010b3c:	60fb      	str	r3, [r7, #12]
 8010b3e:	f7fe fcfd 	bl	800f53c <HAL_GetTick>
 8010b42:	60b8      	str	r0, [r7, #8]
 8010b44:	687b      	ldr	r3, [r7, #4]
 8010b46:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010b4a:	b2db      	uxtb	r3, r3
 8010b4c:	2b02      	cmp	r3, #2
 8010b4e:	d008      	beq.n	8010b62 <HAL_DMA_Abort+0x32>
 8010b50:	687b      	ldr	r3, [r7, #4]
 8010b52:	2280      	movs	r2, #128	; 0x80
 8010b54:	655a      	str	r2, [r3, #84]	; 0x54
 8010b56:	687b      	ldr	r3, [r7, #4]
 8010b58:	2200      	movs	r2, #0
 8010b5a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010b5e:	2301      	movs	r3, #1
 8010b60:	e052      	b.n	8010c08 <HAL_DMA_Abort+0xd8>
 8010b62:	687b      	ldr	r3, [r7, #4]
 8010b64:	681b      	ldr	r3, [r3, #0]
 8010b66:	681a      	ldr	r2, [r3, #0]
 8010b68:	687b      	ldr	r3, [r7, #4]
 8010b6a:	681b      	ldr	r3, [r3, #0]
 8010b6c:	f022 0216 	bic.w	r2, r2, #22
 8010b70:	601a      	str	r2, [r3, #0]
 8010b72:	687b      	ldr	r3, [r7, #4]
 8010b74:	681b      	ldr	r3, [r3, #0]
 8010b76:	695a      	ldr	r2, [r3, #20]
 8010b78:	687b      	ldr	r3, [r7, #4]
 8010b7a:	681b      	ldr	r3, [r3, #0]
 8010b7c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8010b80:	615a      	str	r2, [r3, #20]
 8010b82:	687b      	ldr	r3, [r7, #4]
 8010b84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010b86:	2b00      	cmp	r3, #0
 8010b88:	d103      	bne.n	8010b92 <HAL_DMA_Abort+0x62>
 8010b8a:	687b      	ldr	r3, [r7, #4]
 8010b8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010b8e:	2b00      	cmp	r3, #0
 8010b90:	d007      	beq.n	8010ba2 <HAL_DMA_Abort+0x72>
 8010b92:	687b      	ldr	r3, [r7, #4]
 8010b94:	681b      	ldr	r3, [r3, #0]
 8010b96:	681a      	ldr	r2, [r3, #0]
 8010b98:	687b      	ldr	r3, [r7, #4]
 8010b9a:	681b      	ldr	r3, [r3, #0]
 8010b9c:	f022 0208 	bic.w	r2, r2, #8
 8010ba0:	601a      	str	r2, [r3, #0]
 8010ba2:	687b      	ldr	r3, [r7, #4]
 8010ba4:	681b      	ldr	r3, [r3, #0]
 8010ba6:	681a      	ldr	r2, [r3, #0]
 8010ba8:	687b      	ldr	r3, [r7, #4]
 8010baa:	681b      	ldr	r3, [r3, #0]
 8010bac:	f022 0201 	bic.w	r2, r2, #1
 8010bb0:	601a      	str	r2, [r3, #0]
 8010bb2:	e013      	b.n	8010bdc <HAL_DMA_Abort+0xac>
 8010bb4:	f7fe fcc2 	bl	800f53c <HAL_GetTick>
 8010bb8:	4602      	mov	r2, r0
 8010bba:	68bb      	ldr	r3, [r7, #8]
 8010bbc:	1ad3      	subs	r3, r2, r3
 8010bbe:	2b05      	cmp	r3, #5
 8010bc0:	d90c      	bls.n	8010bdc <HAL_DMA_Abort+0xac>
 8010bc2:	687b      	ldr	r3, [r7, #4]
 8010bc4:	2220      	movs	r2, #32
 8010bc6:	655a      	str	r2, [r3, #84]	; 0x54
 8010bc8:	687b      	ldr	r3, [r7, #4]
 8010bca:	2203      	movs	r2, #3
 8010bcc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010bd0:	687b      	ldr	r3, [r7, #4]
 8010bd2:	2200      	movs	r2, #0
 8010bd4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010bd8:	2303      	movs	r3, #3
 8010bda:	e015      	b.n	8010c08 <HAL_DMA_Abort+0xd8>
 8010bdc:	687b      	ldr	r3, [r7, #4]
 8010bde:	681b      	ldr	r3, [r3, #0]
 8010be0:	681b      	ldr	r3, [r3, #0]
 8010be2:	f003 0301 	and.w	r3, r3, #1
 8010be6:	2b00      	cmp	r3, #0
 8010be8:	d1e4      	bne.n	8010bb4 <HAL_DMA_Abort+0x84>
 8010bea:	687b      	ldr	r3, [r7, #4]
 8010bec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010bee:	223f      	movs	r2, #63	; 0x3f
 8010bf0:	409a      	lsls	r2, r3
 8010bf2:	68fb      	ldr	r3, [r7, #12]
 8010bf4:	609a      	str	r2, [r3, #8]
 8010bf6:	687b      	ldr	r3, [r7, #4]
 8010bf8:	2201      	movs	r2, #1
 8010bfa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010bfe:	687b      	ldr	r3, [r7, #4]
 8010c00:	2200      	movs	r2, #0
 8010c02:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010c06:	2300      	movs	r3, #0
 8010c08:	4618      	mov	r0, r3
 8010c0a:	3710      	adds	r7, #16
 8010c0c:	46bd      	mov	sp, r7
 8010c0e:	bd80      	pop	{r7, pc}

08010c10 <HAL_DMA_Abort_IT>:
 8010c10:	b480      	push	{r7}
 8010c12:	b083      	sub	sp, #12
 8010c14:	af00      	add	r7, sp, #0
 8010c16:	6078      	str	r0, [r7, #4]
 8010c18:	687b      	ldr	r3, [r7, #4]
 8010c1a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010c1e:	b2db      	uxtb	r3, r3
 8010c20:	2b02      	cmp	r3, #2
 8010c22:	d004      	beq.n	8010c2e <HAL_DMA_Abort_IT+0x1e>
 8010c24:	687b      	ldr	r3, [r7, #4]
 8010c26:	2280      	movs	r2, #128	; 0x80
 8010c28:	655a      	str	r2, [r3, #84]	; 0x54
 8010c2a:	2301      	movs	r3, #1
 8010c2c:	e00c      	b.n	8010c48 <HAL_DMA_Abort_IT+0x38>
 8010c2e:	687b      	ldr	r3, [r7, #4]
 8010c30:	2205      	movs	r2, #5
 8010c32:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010c36:	687b      	ldr	r3, [r7, #4]
 8010c38:	681b      	ldr	r3, [r3, #0]
 8010c3a:	681a      	ldr	r2, [r3, #0]
 8010c3c:	687b      	ldr	r3, [r7, #4]
 8010c3e:	681b      	ldr	r3, [r3, #0]
 8010c40:	f022 0201 	bic.w	r2, r2, #1
 8010c44:	601a      	str	r2, [r3, #0]
 8010c46:	2300      	movs	r3, #0
 8010c48:	4618      	mov	r0, r3
 8010c4a:	370c      	adds	r7, #12
 8010c4c:	46bd      	mov	sp, r7
 8010c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c52:	4770      	bx	lr

08010c54 <HAL_DMA_IRQHandler>:
 8010c54:	b580      	push	{r7, lr}
 8010c56:	b086      	sub	sp, #24
 8010c58:	af00      	add	r7, sp, #0
 8010c5a:	6078      	str	r0, [r7, #4]
 8010c5c:	2300      	movs	r3, #0
 8010c5e:	60bb      	str	r3, [r7, #8]
 8010c60:	4b8e      	ldr	r3, [pc, #568]	; (8010e9c <HAL_DMA_IRQHandler+0x248>)
 8010c62:	681b      	ldr	r3, [r3, #0]
 8010c64:	4a8e      	ldr	r2, [pc, #568]	; (8010ea0 <HAL_DMA_IRQHandler+0x24c>)
 8010c66:	fba2 2303 	umull	r2, r3, r2, r3
 8010c6a:	0a9b      	lsrs	r3, r3, #10
 8010c6c:	617b      	str	r3, [r7, #20]
 8010c6e:	687b      	ldr	r3, [r7, #4]
 8010c70:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010c72:	613b      	str	r3, [r7, #16]
 8010c74:	693b      	ldr	r3, [r7, #16]
 8010c76:	681b      	ldr	r3, [r3, #0]
 8010c78:	60fb      	str	r3, [r7, #12]
 8010c7a:	687b      	ldr	r3, [r7, #4]
 8010c7c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010c7e:	2208      	movs	r2, #8
 8010c80:	409a      	lsls	r2, r3
 8010c82:	68fb      	ldr	r3, [r7, #12]
 8010c84:	4013      	ands	r3, r2
 8010c86:	2b00      	cmp	r3, #0
 8010c88:	d01a      	beq.n	8010cc0 <HAL_DMA_IRQHandler+0x6c>
 8010c8a:	687b      	ldr	r3, [r7, #4]
 8010c8c:	681b      	ldr	r3, [r3, #0]
 8010c8e:	681b      	ldr	r3, [r3, #0]
 8010c90:	f003 0304 	and.w	r3, r3, #4
 8010c94:	2b00      	cmp	r3, #0
 8010c96:	d013      	beq.n	8010cc0 <HAL_DMA_IRQHandler+0x6c>
 8010c98:	687b      	ldr	r3, [r7, #4]
 8010c9a:	681b      	ldr	r3, [r3, #0]
 8010c9c:	681a      	ldr	r2, [r3, #0]
 8010c9e:	687b      	ldr	r3, [r7, #4]
 8010ca0:	681b      	ldr	r3, [r3, #0]
 8010ca2:	f022 0204 	bic.w	r2, r2, #4
 8010ca6:	601a      	str	r2, [r3, #0]
 8010ca8:	687b      	ldr	r3, [r7, #4]
 8010caa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010cac:	2208      	movs	r2, #8
 8010cae:	409a      	lsls	r2, r3
 8010cb0:	693b      	ldr	r3, [r7, #16]
 8010cb2:	609a      	str	r2, [r3, #8]
 8010cb4:	687b      	ldr	r3, [r7, #4]
 8010cb6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010cb8:	f043 0201 	orr.w	r2, r3, #1
 8010cbc:	687b      	ldr	r3, [r7, #4]
 8010cbe:	655a      	str	r2, [r3, #84]	; 0x54
 8010cc0:	687b      	ldr	r3, [r7, #4]
 8010cc2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010cc4:	2201      	movs	r2, #1
 8010cc6:	409a      	lsls	r2, r3
 8010cc8:	68fb      	ldr	r3, [r7, #12]
 8010cca:	4013      	ands	r3, r2
 8010ccc:	2b00      	cmp	r3, #0
 8010cce:	d012      	beq.n	8010cf6 <HAL_DMA_IRQHandler+0xa2>
 8010cd0:	687b      	ldr	r3, [r7, #4]
 8010cd2:	681b      	ldr	r3, [r3, #0]
 8010cd4:	695b      	ldr	r3, [r3, #20]
 8010cd6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8010cda:	2b00      	cmp	r3, #0
 8010cdc:	d00b      	beq.n	8010cf6 <HAL_DMA_IRQHandler+0xa2>
 8010cde:	687b      	ldr	r3, [r7, #4]
 8010ce0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010ce2:	2201      	movs	r2, #1
 8010ce4:	409a      	lsls	r2, r3
 8010ce6:	693b      	ldr	r3, [r7, #16]
 8010ce8:	609a      	str	r2, [r3, #8]
 8010cea:	687b      	ldr	r3, [r7, #4]
 8010cec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010cee:	f043 0202 	orr.w	r2, r3, #2
 8010cf2:	687b      	ldr	r3, [r7, #4]
 8010cf4:	655a      	str	r2, [r3, #84]	; 0x54
 8010cf6:	687b      	ldr	r3, [r7, #4]
 8010cf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010cfa:	2204      	movs	r2, #4
 8010cfc:	409a      	lsls	r2, r3
 8010cfe:	68fb      	ldr	r3, [r7, #12]
 8010d00:	4013      	ands	r3, r2
 8010d02:	2b00      	cmp	r3, #0
 8010d04:	d012      	beq.n	8010d2c <HAL_DMA_IRQHandler+0xd8>
 8010d06:	687b      	ldr	r3, [r7, #4]
 8010d08:	681b      	ldr	r3, [r3, #0]
 8010d0a:	681b      	ldr	r3, [r3, #0]
 8010d0c:	f003 0302 	and.w	r3, r3, #2
 8010d10:	2b00      	cmp	r3, #0
 8010d12:	d00b      	beq.n	8010d2c <HAL_DMA_IRQHandler+0xd8>
 8010d14:	687b      	ldr	r3, [r7, #4]
 8010d16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010d18:	2204      	movs	r2, #4
 8010d1a:	409a      	lsls	r2, r3
 8010d1c:	693b      	ldr	r3, [r7, #16]
 8010d1e:	609a      	str	r2, [r3, #8]
 8010d20:	687b      	ldr	r3, [r7, #4]
 8010d22:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010d24:	f043 0204 	orr.w	r2, r3, #4
 8010d28:	687b      	ldr	r3, [r7, #4]
 8010d2a:	655a      	str	r2, [r3, #84]	; 0x54
 8010d2c:	687b      	ldr	r3, [r7, #4]
 8010d2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010d30:	2210      	movs	r2, #16
 8010d32:	409a      	lsls	r2, r3
 8010d34:	68fb      	ldr	r3, [r7, #12]
 8010d36:	4013      	ands	r3, r2
 8010d38:	2b00      	cmp	r3, #0
 8010d3a:	d043      	beq.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d3c:	687b      	ldr	r3, [r7, #4]
 8010d3e:	681b      	ldr	r3, [r3, #0]
 8010d40:	681b      	ldr	r3, [r3, #0]
 8010d42:	f003 0308 	and.w	r3, r3, #8
 8010d46:	2b00      	cmp	r3, #0
 8010d48:	d03c      	beq.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d4a:	687b      	ldr	r3, [r7, #4]
 8010d4c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010d4e:	2210      	movs	r2, #16
 8010d50:	409a      	lsls	r2, r3
 8010d52:	693b      	ldr	r3, [r7, #16]
 8010d54:	609a      	str	r2, [r3, #8]
 8010d56:	687b      	ldr	r3, [r7, #4]
 8010d58:	681b      	ldr	r3, [r3, #0]
 8010d5a:	681b      	ldr	r3, [r3, #0]
 8010d5c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8010d60:	2b00      	cmp	r3, #0
 8010d62:	d018      	beq.n	8010d96 <HAL_DMA_IRQHandler+0x142>
 8010d64:	687b      	ldr	r3, [r7, #4]
 8010d66:	681b      	ldr	r3, [r3, #0]
 8010d68:	681b      	ldr	r3, [r3, #0]
 8010d6a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8010d6e:	2b00      	cmp	r3, #0
 8010d70:	d108      	bne.n	8010d84 <HAL_DMA_IRQHandler+0x130>
 8010d72:	687b      	ldr	r3, [r7, #4]
 8010d74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010d76:	2b00      	cmp	r3, #0
 8010d78:	d024      	beq.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d7a:	687b      	ldr	r3, [r7, #4]
 8010d7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010d7e:	6878      	ldr	r0, [r7, #4]
 8010d80:	4798      	blx	r3
 8010d82:	e01f      	b.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d84:	687b      	ldr	r3, [r7, #4]
 8010d86:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d88:	2b00      	cmp	r3, #0
 8010d8a:	d01b      	beq.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d8c:	687b      	ldr	r3, [r7, #4]
 8010d8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d90:	6878      	ldr	r0, [r7, #4]
 8010d92:	4798      	blx	r3
 8010d94:	e016      	b.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010d96:	687b      	ldr	r3, [r7, #4]
 8010d98:	681b      	ldr	r3, [r3, #0]
 8010d9a:	681b      	ldr	r3, [r3, #0]
 8010d9c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010da0:	2b00      	cmp	r3, #0
 8010da2:	d107      	bne.n	8010db4 <HAL_DMA_IRQHandler+0x160>
 8010da4:	687b      	ldr	r3, [r7, #4]
 8010da6:	681b      	ldr	r3, [r3, #0]
 8010da8:	681a      	ldr	r2, [r3, #0]
 8010daa:	687b      	ldr	r3, [r7, #4]
 8010dac:	681b      	ldr	r3, [r3, #0]
 8010dae:	f022 0208 	bic.w	r2, r2, #8
 8010db2:	601a      	str	r2, [r3, #0]
 8010db4:	687b      	ldr	r3, [r7, #4]
 8010db6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010db8:	2b00      	cmp	r3, #0
 8010dba:	d003      	beq.n	8010dc4 <HAL_DMA_IRQHandler+0x170>
 8010dbc:	687b      	ldr	r3, [r7, #4]
 8010dbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010dc0:	6878      	ldr	r0, [r7, #4]
 8010dc2:	4798      	blx	r3
 8010dc4:	687b      	ldr	r3, [r7, #4]
 8010dc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010dc8:	2220      	movs	r2, #32
 8010dca:	409a      	lsls	r2, r3
 8010dcc:	68fb      	ldr	r3, [r7, #12]
 8010dce:	4013      	ands	r3, r2
 8010dd0:	2b00      	cmp	r3, #0
 8010dd2:	f000 808f 	beq.w	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010dd6:	687b      	ldr	r3, [r7, #4]
 8010dd8:	681b      	ldr	r3, [r3, #0]
 8010dda:	681b      	ldr	r3, [r3, #0]
 8010ddc:	f003 0310 	and.w	r3, r3, #16
 8010de0:	2b00      	cmp	r3, #0
 8010de2:	f000 8087 	beq.w	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010de6:	687b      	ldr	r3, [r7, #4]
 8010de8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010dea:	2220      	movs	r2, #32
 8010dec:	409a      	lsls	r2, r3
 8010dee:	693b      	ldr	r3, [r7, #16]
 8010df0:	609a      	str	r2, [r3, #8]
 8010df2:	687b      	ldr	r3, [r7, #4]
 8010df4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010df8:	b2db      	uxtb	r3, r3
 8010dfa:	2b05      	cmp	r3, #5
 8010dfc:	d136      	bne.n	8010e6c <HAL_DMA_IRQHandler+0x218>
 8010dfe:	687b      	ldr	r3, [r7, #4]
 8010e00:	681b      	ldr	r3, [r3, #0]
 8010e02:	681a      	ldr	r2, [r3, #0]
 8010e04:	687b      	ldr	r3, [r7, #4]
 8010e06:	681b      	ldr	r3, [r3, #0]
 8010e08:	f022 0216 	bic.w	r2, r2, #22
 8010e0c:	601a      	str	r2, [r3, #0]
 8010e0e:	687b      	ldr	r3, [r7, #4]
 8010e10:	681b      	ldr	r3, [r3, #0]
 8010e12:	695a      	ldr	r2, [r3, #20]
 8010e14:	687b      	ldr	r3, [r7, #4]
 8010e16:	681b      	ldr	r3, [r3, #0]
 8010e18:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8010e1c:	615a      	str	r2, [r3, #20]
 8010e1e:	687b      	ldr	r3, [r7, #4]
 8010e20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010e22:	2b00      	cmp	r3, #0
 8010e24:	d103      	bne.n	8010e2e <HAL_DMA_IRQHandler+0x1da>
 8010e26:	687b      	ldr	r3, [r7, #4]
 8010e28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010e2a:	2b00      	cmp	r3, #0
 8010e2c:	d007      	beq.n	8010e3e <HAL_DMA_IRQHandler+0x1ea>
 8010e2e:	687b      	ldr	r3, [r7, #4]
 8010e30:	681b      	ldr	r3, [r3, #0]
 8010e32:	681a      	ldr	r2, [r3, #0]
 8010e34:	687b      	ldr	r3, [r7, #4]
 8010e36:	681b      	ldr	r3, [r3, #0]
 8010e38:	f022 0208 	bic.w	r2, r2, #8
 8010e3c:	601a      	str	r2, [r3, #0]
 8010e3e:	687b      	ldr	r3, [r7, #4]
 8010e40:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e42:	223f      	movs	r2, #63	; 0x3f
 8010e44:	409a      	lsls	r2, r3
 8010e46:	693b      	ldr	r3, [r7, #16]
 8010e48:	609a      	str	r2, [r3, #8]
 8010e4a:	687b      	ldr	r3, [r7, #4]
 8010e4c:	2201      	movs	r2, #1
 8010e4e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010e52:	687b      	ldr	r3, [r7, #4]
 8010e54:	2200      	movs	r2, #0
 8010e56:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010e5a:	687b      	ldr	r3, [r7, #4]
 8010e5c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010e5e:	2b00      	cmp	r3, #0
 8010e60:	d07e      	beq.n	8010f60 <HAL_DMA_IRQHandler+0x30c>
 8010e62:	687b      	ldr	r3, [r7, #4]
 8010e64:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010e66:	6878      	ldr	r0, [r7, #4]
 8010e68:	4798      	blx	r3
 8010e6a:	e079      	b.n	8010f60 <HAL_DMA_IRQHandler+0x30c>
 8010e6c:	687b      	ldr	r3, [r7, #4]
 8010e6e:	681b      	ldr	r3, [r3, #0]
 8010e70:	681b      	ldr	r3, [r3, #0]
 8010e72:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8010e76:	2b00      	cmp	r3, #0
 8010e78:	d01d      	beq.n	8010eb6 <HAL_DMA_IRQHandler+0x262>
 8010e7a:	687b      	ldr	r3, [r7, #4]
 8010e7c:	681b      	ldr	r3, [r3, #0]
 8010e7e:	681b      	ldr	r3, [r3, #0]
 8010e80:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8010e84:	2b00      	cmp	r3, #0
 8010e86:	d10d      	bne.n	8010ea4 <HAL_DMA_IRQHandler+0x250>
 8010e88:	687b      	ldr	r3, [r7, #4]
 8010e8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010e8c:	2b00      	cmp	r3, #0
 8010e8e:	d031      	beq.n	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010e90:	687b      	ldr	r3, [r7, #4]
 8010e92:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010e94:	6878      	ldr	r0, [r7, #4]
 8010e96:	4798      	blx	r3
 8010e98:	e02c      	b.n	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010e9a:	bf00      	nop
 8010e9c:	20000004 	.word	0x20000004
 8010ea0:	1b4e81b5 	.word	0x1b4e81b5
 8010ea4:	687b      	ldr	r3, [r7, #4]
 8010ea6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ea8:	2b00      	cmp	r3, #0
 8010eaa:	d023      	beq.n	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010eac:	687b      	ldr	r3, [r7, #4]
 8010eae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010eb0:	6878      	ldr	r0, [r7, #4]
 8010eb2:	4798      	blx	r3
 8010eb4:	e01e      	b.n	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	681b      	ldr	r3, [r3, #0]
 8010eba:	681b      	ldr	r3, [r3, #0]
 8010ebc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010ec0:	2b00      	cmp	r3, #0
 8010ec2:	d10f      	bne.n	8010ee4 <HAL_DMA_IRQHandler+0x290>
 8010ec4:	687b      	ldr	r3, [r7, #4]
 8010ec6:	681b      	ldr	r3, [r3, #0]
 8010ec8:	681a      	ldr	r2, [r3, #0]
 8010eca:	687b      	ldr	r3, [r7, #4]
 8010ecc:	681b      	ldr	r3, [r3, #0]
 8010ece:	f022 0210 	bic.w	r2, r2, #16
 8010ed2:	601a      	str	r2, [r3, #0]
 8010ed4:	687b      	ldr	r3, [r7, #4]
 8010ed6:	2201      	movs	r2, #1
 8010ed8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010edc:	687b      	ldr	r3, [r7, #4]
 8010ede:	2200      	movs	r2, #0
 8010ee0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010ee4:	687b      	ldr	r3, [r7, #4]
 8010ee6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ee8:	2b00      	cmp	r3, #0
 8010eea:	d003      	beq.n	8010ef4 <HAL_DMA_IRQHandler+0x2a0>
 8010eec:	687b      	ldr	r3, [r7, #4]
 8010eee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ef0:	6878      	ldr	r0, [r7, #4]
 8010ef2:	4798      	blx	r3
 8010ef4:	687b      	ldr	r3, [r7, #4]
 8010ef6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010ef8:	2b00      	cmp	r3, #0
 8010efa:	d032      	beq.n	8010f62 <HAL_DMA_IRQHandler+0x30e>
 8010efc:	687b      	ldr	r3, [r7, #4]
 8010efe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010f00:	f003 0301 	and.w	r3, r3, #1
 8010f04:	2b00      	cmp	r3, #0
 8010f06:	d022      	beq.n	8010f4e <HAL_DMA_IRQHandler+0x2fa>
 8010f08:	687b      	ldr	r3, [r7, #4]
 8010f0a:	2205      	movs	r2, #5
 8010f0c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010f10:	687b      	ldr	r3, [r7, #4]
 8010f12:	681b      	ldr	r3, [r3, #0]
 8010f14:	681a      	ldr	r2, [r3, #0]
 8010f16:	687b      	ldr	r3, [r7, #4]
 8010f18:	681b      	ldr	r3, [r3, #0]
 8010f1a:	f022 0201 	bic.w	r2, r2, #1
 8010f1e:	601a      	str	r2, [r3, #0]
 8010f20:	68bb      	ldr	r3, [r7, #8]
 8010f22:	3301      	adds	r3, #1
 8010f24:	60bb      	str	r3, [r7, #8]
 8010f26:	697a      	ldr	r2, [r7, #20]
 8010f28:	429a      	cmp	r2, r3
 8010f2a:	d307      	bcc.n	8010f3c <HAL_DMA_IRQHandler+0x2e8>
 8010f2c:	687b      	ldr	r3, [r7, #4]
 8010f2e:	681b      	ldr	r3, [r3, #0]
 8010f30:	681b      	ldr	r3, [r3, #0]
 8010f32:	f003 0301 	and.w	r3, r3, #1
 8010f36:	2b00      	cmp	r3, #0
 8010f38:	d1f2      	bne.n	8010f20 <HAL_DMA_IRQHandler+0x2cc>
 8010f3a:	e000      	b.n	8010f3e <HAL_DMA_IRQHandler+0x2ea>
 8010f3c:	bf00      	nop
 8010f3e:	687b      	ldr	r3, [r7, #4]
 8010f40:	2201      	movs	r2, #1
 8010f42:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010f46:	687b      	ldr	r3, [r7, #4]
 8010f48:	2200      	movs	r2, #0
 8010f4a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010f4e:	687b      	ldr	r3, [r7, #4]
 8010f50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010f52:	2b00      	cmp	r3, #0
 8010f54:	d005      	beq.n	8010f62 <HAL_DMA_IRQHandler+0x30e>
 8010f56:	687b      	ldr	r3, [r7, #4]
 8010f58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010f5a:	6878      	ldr	r0, [r7, #4]
 8010f5c:	4798      	blx	r3
 8010f5e:	e000      	b.n	8010f62 <HAL_DMA_IRQHandler+0x30e>
 8010f60:	bf00      	nop
 8010f62:	3718      	adds	r7, #24
 8010f64:	46bd      	mov	sp, r7
 8010f66:	bd80      	pop	{r7, pc}

08010f68 <HAL_DMA_GetError>:
 8010f68:	b480      	push	{r7}
 8010f6a:	b083      	sub	sp, #12
 8010f6c:	af00      	add	r7, sp, #0
 8010f6e:	6078      	str	r0, [r7, #4]
 8010f70:	687b      	ldr	r3, [r7, #4]
 8010f72:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010f74:	4618      	mov	r0, r3
 8010f76:	370c      	adds	r7, #12
 8010f78:	46bd      	mov	sp, r7
 8010f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f7e:	4770      	bx	lr

08010f80 <DMA_SetConfig>:
 8010f80:	b480      	push	{r7}
 8010f82:	b085      	sub	sp, #20
 8010f84:	af00      	add	r7, sp, #0
 8010f86:	60f8      	str	r0, [r7, #12]
 8010f88:	60b9      	str	r1, [r7, #8]
 8010f8a:	607a      	str	r2, [r7, #4]
 8010f8c:	603b      	str	r3, [r7, #0]
 8010f8e:	68fb      	ldr	r3, [r7, #12]
 8010f90:	681b      	ldr	r3, [r3, #0]
 8010f92:	681a      	ldr	r2, [r3, #0]
 8010f94:	68fb      	ldr	r3, [r7, #12]
 8010f96:	681b      	ldr	r3, [r3, #0]
 8010f98:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8010f9c:	601a      	str	r2, [r3, #0]
 8010f9e:	68fb      	ldr	r3, [r7, #12]
 8010fa0:	681b      	ldr	r3, [r3, #0]
 8010fa2:	683a      	ldr	r2, [r7, #0]
 8010fa4:	605a      	str	r2, [r3, #4]
 8010fa6:	68fb      	ldr	r3, [r7, #12]
 8010fa8:	689b      	ldr	r3, [r3, #8]
 8010faa:	2b40      	cmp	r3, #64	; 0x40
 8010fac:	d108      	bne.n	8010fc0 <DMA_SetConfig+0x40>
 8010fae:	68fb      	ldr	r3, [r7, #12]
 8010fb0:	681b      	ldr	r3, [r3, #0]
 8010fb2:	687a      	ldr	r2, [r7, #4]
 8010fb4:	609a      	str	r2, [r3, #8]
 8010fb6:	68fb      	ldr	r3, [r7, #12]
 8010fb8:	681b      	ldr	r3, [r3, #0]
 8010fba:	68ba      	ldr	r2, [r7, #8]
 8010fbc:	60da      	str	r2, [r3, #12]
 8010fbe:	e007      	b.n	8010fd0 <DMA_SetConfig+0x50>
 8010fc0:	68fb      	ldr	r3, [r7, #12]
 8010fc2:	681b      	ldr	r3, [r3, #0]
 8010fc4:	68ba      	ldr	r2, [r7, #8]
 8010fc6:	609a      	str	r2, [r3, #8]
 8010fc8:	68fb      	ldr	r3, [r7, #12]
 8010fca:	681b      	ldr	r3, [r3, #0]
 8010fcc:	687a      	ldr	r2, [r7, #4]
 8010fce:	60da      	str	r2, [r3, #12]
 8010fd0:	bf00      	nop
 8010fd2:	3714      	adds	r7, #20
 8010fd4:	46bd      	mov	sp, r7
 8010fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fda:	4770      	bx	lr

08010fdc <DMA_CalcBaseAndBitshift>:
 8010fdc:	b480      	push	{r7}
 8010fde:	b085      	sub	sp, #20
 8010fe0:	af00      	add	r7, sp, #0
 8010fe2:	6078      	str	r0, [r7, #4]
 8010fe4:	687b      	ldr	r3, [r7, #4]
 8010fe6:	681b      	ldr	r3, [r3, #0]
 8010fe8:	b2db      	uxtb	r3, r3
 8010fea:	3b10      	subs	r3, #16
 8010fec:	4a14      	ldr	r2, [pc, #80]	; (8011040 <DMA_CalcBaseAndBitshift+0x64>)
 8010fee:	fba2 2303 	umull	r2, r3, r2, r3
 8010ff2:	091b      	lsrs	r3, r3, #4
 8010ff4:	60fb      	str	r3, [r7, #12]
 8010ff6:	4a13      	ldr	r2, [pc, #76]	; (8011044 <DMA_CalcBaseAndBitshift+0x68>)
 8010ff8:	68fb      	ldr	r3, [r7, #12]
 8010ffa:	4413      	add	r3, r2
 8010ffc:	781b      	ldrb	r3, [r3, #0]
 8010ffe:	461a      	mov	r2, r3
 8011000:	687b      	ldr	r3, [r7, #4]
 8011002:	65da      	str	r2, [r3, #92]	; 0x5c
 8011004:	68fb      	ldr	r3, [r7, #12]
 8011006:	2b03      	cmp	r3, #3
 8011008:	d909      	bls.n	801101e <DMA_CalcBaseAndBitshift+0x42>
 801100a:	687b      	ldr	r3, [r7, #4]
 801100c:	681b      	ldr	r3, [r3, #0]
 801100e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8011012:	f023 0303 	bic.w	r3, r3, #3
 8011016:	1d1a      	adds	r2, r3, #4
 8011018:	687b      	ldr	r3, [r7, #4]
 801101a:	659a      	str	r2, [r3, #88]	; 0x58
 801101c:	e007      	b.n	801102e <DMA_CalcBaseAndBitshift+0x52>
 801101e:	687b      	ldr	r3, [r7, #4]
 8011020:	681b      	ldr	r3, [r3, #0]
 8011022:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8011026:	f023 0303 	bic.w	r3, r3, #3
 801102a:	687a      	ldr	r2, [r7, #4]
 801102c:	6593      	str	r3, [r2, #88]	; 0x58
 801102e:	687b      	ldr	r3, [r7, #4]
 8011030:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8011032:	4618      	mov	r0, r3
 8011034:	3714      	adds	r7, #20
 8011036:	46bd      	mov	sp, r7
 8011038:	f85d 7b04 	ldr.w	r7, [sp], #4
 801103c:	4770      	bx	lr
 801103e:	bf00      	nop
 8011040:	aaaaaaab 	.word	0xaaaaaaab
 8011044:	08026ec0 	.word	0x08026ec0

08011048 <DMA_CheckFifoParam>:
 8011048:	b480      	push	{r7}
 801104a:	b085      	sub	sp, #20
 801104c:	af00      	add	r7, sp, #0
 801104e:	6078      	str	r0, [r7, #4]
 8011050:	2300      	movs	r3, #0
 8011052:	73fb      	strb	r3, [r7, #15]
 8011054:	687b      	ldr	r3, [r7, #4]
 8011056:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011058:	60bb      	str	r3, [r7, #8]
 801105a:	687b      	ldr	r3, [r7, #4]
 801105c:	699b      	ldr	r3, [r3, #24]
 801105e:	2b00      	cmp	r3, #0
 8011060:	d11f      	bne.n	80110a2 <DMA_CheckFifoParam+0x5a>
 8011062:	68bb      	ldr	r3, [r7, #8]
 8011064:	2b03      	cmp	r3, #3
 8011066:	d856      	bhi.n	8011116 <DMA_CheckFifoParam+0xce>
 8011068:	a201      	add	r2, pc, #4	; (adr r2, 8011070 <DMA_CheckFifoParam+0x28>)
 801106a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801106e:	bf00      	nop
 8011070:	08011081 	.word	0x08011081
 8011074:	08011093 	.word	0x08011093
 8011078:	08011081 	.word	0x08011081
 801107c:	08011117 	.word	0x08011117
 8011080:	687b      	ldr	r3, [r7, #4]
 8011082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011084:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8011088:	2b00      	cmp	r3, #0
 801108a:	d046      	beq.n	801111a <DMA_CheckFifoParam+0xd2>
 801108c:	2301      	movs	r3, #1
 801108e:	73fb      	strb	r3, [r7, #15]
 8011090:	e043      	b.n	801111a <DMA_CheckFifoParam+0xd2>
 8011092:	687b      	ldr	r3, [r7, #4]
 8011094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011096:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 801109a:	d140      	bne.n	801111e <DMA_CheckFifoParam+0xd6>
 801109c:	2301      	movs	r3, #1
 801109e:	73fb      	strb	r3, [r7, #15]
 80110a0:	e03d      	b.n	801111e <DMA_CheckFifoParam+0xd6>
 80110a2:	687b      	ldr	r3, [r7, #4]
 80110a4:	699b      	ldr	r3, [r3, #24]
 80110a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80110aa:	d121      	bne.n	80110f0 <DMA_CheckFifoParam+0xa8>
 80110ac:	68bb      	ldr	r3, [r7, #8]
 80110ae:	2b03      	cmp	r3, #3
 80110b0:	d837      	bhi.n	8011122 <DMA_CheckFifoParam+0xda>
 80110b2:	a201      	add	r2, pc, #4	; (adr r2, 80110b8 <DMA_CheckFifoParam+0x70>)
 80110b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80110b8:	080110c9 	.word	0x080110c9
 80110bc:	080110cf 	.word	0x080110cf
 80110c0:	080110c9 	.word	0x080110c9
 80110c4:	080110e1 	.word	0x080110e1
 80110c8:	2301      	movs	r3, #1
 80110ca:	73fb      	strb	r3, [r7, #15]
 80110cc:	e030      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 80110ce:	687b      	ldr	r3, [r7, #4]
 80110d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110d2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80110d6:	2b00      	cmp	r3, #0
 80110d8:	d025      	beq.n	8011126 <DMA_CheckFifoParam+0xde>
 80110da:	2301      	movs	r3, #1
 80110dc:	73fb      	strb	r3, [r7, #15]
 80110de:	e022      	b.n	8011126 <DMA_CheckFifoParam+0xde>
 80110e0:	687b      	ldr	r3, [r7, #4]
 80110e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110e4:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80110e8:	d11f      	bne.n	801112a <DMA_CheckFifoParam+0xe2>
 80110ea:	2301      	movs	r3, #1
 80110ec:	73fb      	strb	r3, [r7, #15]
 80110ee:	e01c      	b.n	801112a <DMA_CheckFifoParam+0xe2>
 80110f0:	68bb      	ldr	r3, [r7, #8]
 80110f2:	2b02      	cmp	r3, #2
 80110f4:	d903      	bls.n	80110fe <DMA_CheckFifoParam+0xb6>
 80110f6:	68bb      	ldr	r3, [r7, #8]
 80110f8:	2b03      	cmp	r3, #3
 80110fa:	d003      	beq.n	8011104 <DMA_CheckFifoParam+0xbc>
 80110fc:	e018      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 80110fe:	2301      	movs	r3, #1
 8011100:	73fb      	strb	r3, [r7, #15]
 8011102:	e015      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 8011104:	687b      	ldr	r3, [r7, #4]
 8011106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011108:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801110c:	2b00      	cmp	r3, #0
 801110e:	d00e      	beq.n	801112e <DMA_CheckFifoParam+0xe6>
 8011110:	2301      	movs	r3, #1
 8011112:	73fb      	strb	r3, [r7, #15]
 8011114:	e00b      	b.n	801112e <DMA_CheckFifoParam+0xe6>
 8011116:	bf00      	nop
 8011118:	e00a      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 801111a:	bf00      	nop
 801111c:	e008      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 801111e:	bf00      	nop
 8011120:	e006      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 8011122:	bf00      	nop
 8011124:	e004      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 8011126:	bf00      	nop
 8011128:	e002      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 801112a:	bf00      	nop
 801112c:	e000      	b.n	8011130 <DMA_CheckFifoParam+0xe8>
 801112e:	bf00      	nop
 8011130:	7bfb      	ldrb	r3, [r7, #15]
 8011132:	4618      	mov	r0, r3
 8011134:	3714      	adds	r7, #20
 8011136:	46bd      	mov	sp, r7
 8011138:	f85d 7b04 	ldr.w	r7, [sp], #4
 801113c:	4770      	bx	lr
 801113e:	bf00      	nop

08011140 <HAL_GPIO_Init>:
 8011140:	b480      	push	{r7}
 8011142:	b089      	sub	sp, #36	; 0x24
 8011144:	af00      	add	r7, sp, #0
 8011146:	6078      	str	r0, [r7, #4]
 8011148:	6039      	str	r1, [r7, #0]
 801114a:	2300      	movs	r3, #0
 801114c:	617b      	str	r3, [r7, #20]
 801114e:	2300      	movs	r3, #0
 8011150:	613b      	str	r3, [r7, #16]
 8011152:	2300      	movs	r3, #0
 8011154:	61bb      	str	r3, [r7, #24]
 8011156:	2300      	movs	r3, #0
 8011158:	61fb      	str	r3, [r7, #28]
 801115a:	e16b      	b.n	8011434 <HAL_GPIO_Init+0x2f4>
 801115c:	2201      	movs	r2, #1
 801115e:	69fb      	ldr	r3, [r7, #28]
 8011160:	fa02 f303 	lsl.w	r3, r2, r3
 8011164:	617b      	str	r3, [r7, #20]
 8011166:	683b      	ldr	r3, [r7, #0]
 8011168:	681b      	ldr	r3, [r3, #0]
 801116a:	697a      	ldr	r2, [r7, #20]
 801116c:	4013      	ands	r3, r2
 801116e:	613b      	str	r3, [r7, #16]
 8011170:	693a      	ldr	r2, [r7, #16]
 8011172:	697b      	ldr	r3, [r7, #20]
 8011174:	429a      	cmp	r2, r3
 8011176:	f040 815a 	bne.w	801142e <HAL_GPIO_Init+0x2ee>
 801117a:	683b      	ldr	r3, [r7, #0]
 801117c:	685b      	ldr	r3, [r3, #4]
 801117e:	f003 0303 	and.w	r3, r3, #3
 8011182:	2b01      	cmp	r3, #1
 8011184:	d005      	beq.n	8011192 <HAL_GPIO_Init+0x52>
 8011186:	683b      	ldr	r3, [r7, #0]
 8011188:	685b      	ldr	r3, [r3, #4]
 801118a:	f003 0303 	and.w	r3, r3, #3
 801118e:	2b02      	cmp	r3, #2
 8011190:	d130      	bne.n	80111f4 <HAL_GPIO_Init+0xb4>
 8011192:	687b      	ldr	r3, [r7, #4]
 8011194:	689b      	ldr	r3, [r3, #8]
 8011196:	61bb      	str	r3, [r7, #24]
 8011198:	69fb      	ldr	r3, [r7, #28]
 801119a:	005b      	lsls	r3, r3, #1
 801119c:	2203      	movs	r2, #3
 801119e:	fa02 f303 	lsl.w	r3, r2, r3
 80111a2:	43db      	mvns	r3, r3
 80111a4:	69ba      	ldr	r2, [r7, #24]
 80111a6:	4013      	ands	r3, r2
 80111a8:	61bb      	str	r3, [r7, #24]
 80111aa:	683b      	ldr	r3, [r7, #0]
 80111ac:	68da      	ldr	r2, [r3, #12]
 80111ae:	69fb      	ldr	r3, [r7, #28]
 80111b0:	005b      	lsls	r3, r3, #1
 80111b2:	fa02 f303 	lsl.w	r3, r2, r3
 80111b6:	69ba      	ldr	r2, [r7, #24]
 80111b8:	4313      	orrs	r3, r2
 80111ba:	61bb      	str	r3, [r7, #24]
 80111bc:	687b      	ldr	r3, [r7, #4]
 80111be:	69ba      	ldr	r2, [r7, #24]
 80111c0:	609a      	str	r2, [r3, #8]
 80111c2:	687b      	ldr	r3, [r7, #4]
 80111c4:	685b      	ldr	r3, [r3, #4]
 80111c6:	61bb      	str	r3, [r7, #24]
 80111c8:	2201      	movs	r2, #1
 80111ca:	69fb      	ldr	r3, [r7, #28]
 80111cc:	fa02 f303 	lsl.w	r3, r2, r3
 80111d0:	43db      	mvns	r3, r3
 80111d2:	69ba      	ldr	r2, [r7, #24]
 80111d4:	4013      	ands	r3, r2
 80111d6:	61bb      	str	r3, [r7, #24]
 80111d8:	683b      	ldr	r3, [r7, #0]
 80111da:	685b      	ldr	r3, [r3, #4]
 80111dc:	091b      	lsrs	r3, r3, #4
 80111de:	f003 0201 	and.w	r2, r3, #1
 80111e2:	69fb      	ldr	r3, [r7, #28]
 80111e4:	fa02 f303 	lsl.w	r3, r2, r3
 80111e8:	69ba      	ldr	r2, [r7, #24]
 80111ea:	4313      	orrs	r3, r2
 80111ec:	61bb      	str	r3, [r7, #24]
 80111ee:	687b      	ldr	r3, [r7, #4]
 80111f0:	69ba      	ldr	r2, [r7, #24]
 80111f2:	605a      	str	r2, [r3, #4]
 80111f4:	683b      	ldr	r3, [r7, #0]
 80111f6:	685b      	ldr	r3, [r3, #4]
 80111f8:	f003 0303 	and.w	r3, r3, #3
 80111fc:	2b03      	cmp	r3, #3
 80111fe:	d017      	beq.n	8011230 <HAL_GPIO_Init+0xf0>
 8011200:	687b      	ldr	r3, [r7, #4]
 8011202:	68db      	ldr	r3, [r3, #12]
 8011204:	61bb      	str	r3, [r7, #24]
 8011206:	69fb      	ldr	r3, [r7, #28]
 8011208:	005b      	lsls	r3, r3, #1
 801120a:	2203      	movs	r2, #3
 801120c:	fa02 f303 	lsl.w	r3, r2, r3
 8011210:	43db      	mvns	r3, r3
 8011212:	69ba      	ldr	r2, [r7, #24]
 8011214:	4013      	ands	r3, r2
 8011216:	61bb      	str	r3, [r7, #24]
 8011218:	683b      	ldr	r3, [r7, #0]
 801121a:	689a      	ldr	r2, [r3, #8]
 801121c:	69fb      	ldr	r3, [r7, #28]
 801121e:	005b      	lsls	r3, r3, #1
 8011220:	fa02 f303 	lsl.w	r3, r2, r3
 8011224:	69ba      	ldr	r2, [r7, #24]
 8011226:	4313      	orrs	r3, r2
 8011228:	61bb      	str	r3, [r7, #24]
 801122a:	687b      	ldr	r3, [r7, #4]
 801122c:	69ba      	ldr	r2, [r7, #24]
 801122e:	60da      	str	r2, [r3, #12]
 8011230:	683b      	ldr	r3, [r7, #0]
 8011232:	685b      	ldr	r3, [r3, #4]
 8011234:	f003 0303 	and.w	r3, r3, #3
 8011238:	2b02      	cmp	r3, #2
 801123a:	d123      	bne.n	8011284 <HAL_GPIO_Init+0x144>
 801123c:	69fb      	ldr	r3, [r7, #28]
 801123e:	08da      	lsrs	r2, r3, #3
 8011240:	687b      	ldr	r3, [r7, #4]
 8011242:	3208      	adds	r2, #8
 8011244:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8011248:	61bb      	str	r3, [r7, #24]
 801124a:	69fb      	ldr	r3, [r7, #28]
 801124c:	f003 0307 	and.w	r3, r3, #7
 8011250:	009b      	lsls	r3, r3, #2
 8011252:	220f      	movs	r2, #15
 8011254:	fa02 f303 	lsl.w	r3, r2, r3
 8011258:	43db      	mvns	r3, r3
 801125a:	69ba      	ldr	r2, [r7, #24]
 801125c:	4013      	ands	r3, r2
 801125e:	61bb      	str	r3, [r7, #24]
 8011260:	683b      	ldr	r3, [r7, #0]
 8011262:	691a      	ldr	r2, [r3, #16]
 8011264:	69fb      	ldr	r3, [r7, #28]
 8011266:	f003 0307 	and.w	r3, r3, #7
 801126a:	009b      	lsls	r3, r3, #2
 801126c:	fa02 f303 	lsl.w	r3, r2, r3
 8011270:	69ba      	ldr	r2, [r7, #24]
 8011272:	4313      	orrs	r3, r2
 8011274:	61bb      	str	r3, [r7, #24]
 8011276:	69fb      	ldr	r3, [r7, #28]
 8011278:	08da      	lsrs	r2, r3, #3
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	3208      	adds	r2, #8
 801127e:	69b9      	ldr	r1, [r7, #24]
 8011280:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8011284:	687b      	ldr	r3, [r7, #4]
 8011286:	681b      	ldr	r3, [r3, #0]
 8011288:	61bb      	str	r3, [r7, #24]
 801128a:	69fb      	ldr	r3, [r7, #28]
 801128c:	005b      	lsls	r3, r3, #1
 801128e:	2203      	movs	r2, #3
 8011290:	fa02 f303 	lsl.w	r3, r2, r3
 8011294:	43db      	mvns	r3, r3
 8011296:	69ba      	ldr	r2, [r7, #24]
 8011298:	4013      	ands	r3, r2
 801129a:	61bb      	str	r3, [r7, #24]
 801129c:	683b      	ldr	r3, [r7, #0]
 801129e:	685b      	ldr	r3, [r3, #4]
 80112a0:	f003 0203 	and.w	r2, r3, #3
 80112a4:	69fb      	ldr	r3, [r7, #28]
 80112a6:	005b      	lsls	r3, r3, #1
 80112a8:	fa02 f303 	lsl.w	r3, r2, r3
 80112ac:	69ba      	ldr	r2, [r7, #24]
 80112ae:	4313      	orrs	r3, r2
 80112b0:	61bb      	str	r3, [r7, #24]
 80112b2:	687b      	ldr	r3, [r7, #4]
 80112b4:	69ba      	ldr	r2, [r7, #24]
 80112b6:	601a      	str	r2, [r3, #0]
 80112b8:	683b      	ldr	r3, [r7, #0]
 80112ba:	685b      	ldr	r3, [r3, #4]
 80112bc:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80112c0:	2b00      	cmp	r3, #0
 80112c2:	f000 80b4 	beq.w	801142e <HAL_GPIO_Init+0x2ee>
 80112c6:	2300      	movs	r3, #0
 80112c8:	60fb      	str	r3, [r7, #12]
 80112ca:	4b60      	ldr	r3, [pc, #384]	; (801144c <HAL_GPIO_Init+0x30c>)
 80112cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80112ce:	4a5f      	ldr	r2, [pc, #380]	; (801144c <HAL_GPIO_Init+0x30c>)
 80112d0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80112d4:	6453      	str	r3, [r2, #68]	; 0x44
 80112d6:	4b5d      	ldr	r3, [pc, #372]	; (801144c <HAL_GPIO_Init+0x30c>)
 80112d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80112da:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80112de:	60fb      	str	r3, [r7, #12]
 80112e0:	68fb      	ldr	r3, [r7, #12]
 80112e2:	4a5b      	ldr	r2, [pc, #364]	; (8011450 <HAL_GPIO_Init+0x310>)
 80112e4:	69fb      	ldr	r3, [r7, #28]
 80112e6:	089b      	lsrs	r3, r3, #2
 80112e8:	3302      	adds	r3, #2
 80112ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80112ee:	61bb      	str	r3, [r7, #24]
 80112f0:	69fb      	ldr	r3, [r7, #28]
 80112f2:	f003 0303 	and.w	r3, r3, #3
 80112f6:	009b      	lsls	r3, r3, #2
 80112f8:	220f      	movs	r2, #15
 80112fa:	fa02 f303 	lsl.w	r3, r2, r3
 80112fe:	43db      	mvns	r3, r3
 8011300:	69ba      	ldr	r2, [r7, #24]
 8011302:	4013      	ands	r3, r2
 8011304:	61bb      	str	r3, [r7, #24]
 8011306:	687b      	ldr	r3, [r7, #4]
 8011308:	4a52      	ldr	r2, [pc, #328]	; (8011454 <HAL_GPIO_Init+0x314>)
 801130a:	4293      	cmp	r3, r2
 801130c:	d02b      	beq.n	8011366 <HAL_GPIO_Init+0x226>
 801130e:	687b      	ldr	r3, [r7, #4]
 8011310:	4a51      	ldr	r2, [pc, #324]	; (8011458 <HAL_GPIO_Init+0x318>)
 8011312:	4293      	cmp	r3, r2
 8011314:	d025      	beq.n	8011362 <HAL_GPIO_Init+0x222>
 8011316:	687b      	ldr	r3, [r7, #4]
 8011318:	4a50      	ldr	r2, [pc, #320]	; (801145c <HAL_GPIO_Init+0x31c>)
 801131a:	4293      	cmp	r3, r2
 801131c:	d01f      	beq.n	801135e <HAL_GPIO_Init+0x21e>
 801131e:	687b      	ldr	r3, [r7, #4]
 8011320:	4a4f      	ldr	r2, [pc, #316]	; (8011460 <HAL_GPIO_Init+0x320>)
 8011322:	4293      	cmp	r3, r2
 8011324:	d019      	beq.n	801135a <HAL_GPIO_Init+0x21a>
 8011326:	687b      	ldr	r3, [r7, #4]
 8011328:	4a4e      	ldr	r2, [pc, #312]	; (8011464 <HAL_GPIO_Init+0x324>)
 801132a:	4293      	cmp	r3, r2
 801132c:	d013      	beq.n	8011356 <HAL_GPIO_Init+0x216>
 801132e:	687b      	ldr	r3, [r7, #4]
 8011330:	4a4d      	ldr	r2, [pc, #308]	; (8011468 <HAL_GPIO_Init+0x328>)
 8011332:	4293      	cmp	r3, r2
 8011334:	d00d      	beq.n	8011352 <HAL_GPIO_Init+0x212>
 8011336:	687b      	ldr	r3, [r7, #4]
 8011338:	4a4c      	ldr	r2, [pc, #304]	; (801146c <HAL_GPIO_Init+0x32c>)
 801133a:	4293      	cmp	r3, r2
 801133c:	d007      	beq.n	801134e <HAL_GPIO_Init+0x20e>
 801133e:	687b      	ldr	r3, [r7, #4]
 8011340:	4a4b      	ldr	r2, [pc, #300]	; (8011470 <HAL_GPIO_Init+0x330>)
 8011342:	4293      	cmp	r3, r2
 8011344:	d101      	bne.n	801134a <HAL_GPIO_Init+0x20a>
 8011346:	2307      	movs	r3, #7
 8011348:	e00e      	b.n	8011368 <HAL_GPIO_Init+0x228>
 801134a:	2308      	movs	r3, #8
 801134c:	e00c      	b.n	8011368 <HAL_GPIO_Init+0x228>
 801134e:	2306      	movs	r3, #6
 8011350:	e00a      	b.n	8011368 <HAL_GPIO_Init+0x228>
 8011352:	2305      	movs	r3, #5
 8011354:	e008      	b.n	8011368 <HAL_GPIO_Init+0x228>
 8011356:	2304      	movs	r3, #4
 8011358:	e006      	b.n	8011368 <HAL_GPIO_Init+0x228>
 801135a:	2303      	movs	r3, #3
 801135c:	e004      	b.n	8011368 <HAL_GPIO_Init+0x228>
 801135e:	2302      	movs	r3, #2
 8011360:	e002      	b.n	8011368 <HAL_GPIO_Init+0x228>
 8011362:	2301      	movs	r3, #1
 8011364:	e000      	b.n	8011368 <HAL_GPIO_Init+0x228>
 8011366:	2300      	movs	r3, #0
 8011368:	69fa      	ldr	r2, [r7, #28]
 801136a:	f002 0203 	and.w	r2, r2, #3
 801136e:	0092      	lsls	r2, r2, #2
 8011370:	4093      	lsls	r3, r2
 8011372:	69ba      	ldr	r2, [r7, #24]
 8011374:	4313      	orrs	r3, r2
 8011376:	61bb      	str	r3, [r7, #24]
 8011378:	4935      	ldr	r1, [pc, #212]	; (8011450 <HAL_GPIO_Init+0x310>)
 801137a:	69fb      	ldr	r3, [r7, #28]
 801137c:	089b      	lsrs	r3, r3, #2
 801137e:	3302      	adds	r3, #2
 8011380:	69ba      	ldr	r2, [r7, #24]
 8011382:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8011386:	4b3b      	ldr	r3, [pc, #236]	; (8011474 <HAL_GPIO_Init+0x334>)
 8011388:	689b      	ldr	r3, [r3, #8]
 801138a:	61bb      	str	r3, [r7, #24]
 801138c:	693b      	ldr	r3, [r7, #16]
 801138e:	43db      	mvns	r3, r3
 8011390:	69ba      	ldr	r2, [r7, #24]
 8011392:	4013      	ands	r3, r2
 8011394:	61bb      	str	r3, [r7, #24]
 8011396:	683b      	ldr	r3, [r7, #0]
 8011398:	685b      	ldr	r3, [r3, #4]
 801139a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801139e:	2b00      	cmp	r3, #0
 80113a0:	d003      	beq.n	80113aa <HAL_GPIO_Init+0x26a>
 80113a2:	69ba      	ldr	r2, [r7, #24]
 80113a4:	693b      	ldr	r3, [r7, #16]
 80113a6:	4313      	orrs	r3, r2
 80113a8:	61bb      	str	r3, [r7, #24]
 80113aa:	4a32      	ldr	r2, [pc, #200]	; (8011474 <HAL_GPIO_Init+0x334>)
 80113ac:	69bb      	ldr	r3, [r7, #24]
 80113ae:	6093      	str	r3, [r2, #8]
 80113b0:	4b30      	ldr	r3, [pc, #192]	; (8011474 <HAL_GPIO_Init+0x334>)
 80113b2:	68db      	ldr	r3, [r3, #12]
 80113b4:	61bb      	str	r3, [r7, #24]
 80113b6:	693b      	ldr	r3, [r7, #16]
 80113b8:	43db      	mvns	r3, r3
 80113ba:	69ba      	ldr	r2, [r7, #24]
 80113bc:	4013      	ands	r3, r2
 80113be:	61bb      	str	r3, [r7, #24]
 80113c0:	683b      	ldr	r3, [r7, #0]
 80113c2:	685b      	ldr	r3, [r3, #4]
 80113c4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80113c8:	2b00      	cmp	r3, #0
 80113ca:	d003      	beq.n	80113d4 <HAL_GPIO_Init+0x294>
 80113cc:	69ba      	ldr	r2, [r7, #24]
 80113ce:	693b      	ldr	r3, [r7, #16]
 80113d0:	4313      	orrs	r3, r2
 80113d2:	61bb      	str	r3, [r7, #24]
 80113d4:	4a27      	ldr	r2, [pc, #156]	; (8011474 <HAL_GPIO_Init+0x334>)
 80113d6:	69bb      	ldr	r3, [r7, #24]
 80113d8:	60d3      	str	r3, [r2, #12]
 80113da:	4b26      	ldr	r3, [pc, #152]	; (8011474 <HAL_GPIO_Init+0x334>)
 80113dc:	685b      	ldr	r3, [r3, #4]
 80113de:	61bb      	str	r3, [r7, #24]
 80113e0:	693b      	ldr	r3, [r7, #16]
 80113e2:	43db      	mvns	r3, r3
 80113e4:	69ba      	ldr	r2, [r7, #24]
 80113e6:	4013      	ands	r3, r2
 80113e8:	61bb      	str	r3, [r7, #24]
 80113ea:	683b      	ldr	r3, [r7, #0]
 80113ec:	685b      	ldr	r3, [r3, #4]
 80113ee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80113f2:	2b00      	cmp	r3, #0
 80113f4:	d003      	beq.n	80113fe <HAL_GPIO_Init+0x2be>
 80113f6:	69ba      	ldr	r2, [r7, #24]
 80113f8:	693b      	ldr	r3, [r7, #16]
 80113fa:	4313      	orrs	r3, r2
 80113fc:	61bb      	str	r3, [r7, #24]
 80113fe:	4a1d      	ldr	r2, [pc, #116]	; (8011474 <HAL_GPIO_Init+0x334>)
 8011400:	69bb      	ldr	r3, [r7, #24]
 8011402:	6053      	str	r3, [r2, #4]
 8011404:	4b1b      	ldr	r3, [pc, #108]	; (8011474 <HAL_GPIO_Init+0x334>)
 8011406:	681b      	ldr	r3, [r3, #0]
 8011408:	61bb      	str	r3, [r7, #24]
 801140a:	693b      	ldr	r3, [r7, #16]
 801140c:	43db      	mvns	r3, r3
 801140e:	69ba      	ldr	r2, [r7, #24]
 8011410:	4013      	ands	r3, r2
 8011412:	61bb      	str	r3, [r7, #24]
 8011414:	683b      	ldr	r3, [r7, #0]
 8011416:	685b      	ldr	r3, [r3, #4]
 8011418:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801141c:	2b00      	cmp	r3, #0
 801141e:	d003      	beq.n	8011428 <HAL_GPIO_Init+0x2e8>
 8011420:	69ba      	ldr	r2, [r7, #24]
 8011422:	693b      	ldr	r3, [r7, #16]
 8011424:	4313      	orrs	r3, r2
 8011426:	61bb      	str	r3, [r7, #24]
 8011428:	4a12      	ldr	r2, [pc, #72]	; (8011474 <HAL_GPIO_Init+0x334>)
 801142a:	69bb      	ldr	r3, [r7, #24]
 801142c:	6013      	str	r3, [r2, #0]
 801142e:	69fb      	ldr	r3, [r7, #28]
 8011430:	3301      	adds	r3, #1
 8011432:	61fb      	str	r3, [r7, #28]
 8011434:	69fb      	ldr	r3, [r7, #28]
 8011436:	2b0f      	cmp	r3, #15
 8011438:	f67f ae90 	bls.w	801115c <HAL_GPIO_Init+0x1c>
 801143c:	bf00      	nop
 801143e:	bf00      	nop
 8011440:	3724      	adds	r7, #36	; 0x24
 8011442:	46bd      	mov	sp, r7
 8011444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011448:	4770      	bx	lr
 801144a:	bf00      	nop
 801144c:	40023800 	.word	0x40023800
 8011450:	40013800 	.word	0x40013800
 8011454:	40020000 	.word	0x40020000
 8011458:	40020400 	.word	0x40020400
 801145c:	40020800 	.word	0x40020800
 8011460:	40020c00 	.word	0x40020c00
 8011464:	40021000 	.word	0x40021000
 8011468:	40021400 	.word	0x40021400
 801146c:	40021800 	.word	0x40021800
 8011470:	40021c00 	.word	0x40021c00
 8011474:	40013c00 	.word	0x40013c00

08011478 <HAL_GPIO_WritePin>:
 8011478:	b480      	push	{r7}
 801147a:	b083      	sub	sp, #12
 801147c:	af00      	add	r7, sp, #0
 801147e:	6078      	str	r0, [r7, #4]
 8011480:	460b      	mov	r3, r1
 8011482:	807b      	strh	r3, [r7, #2]
 8011484:	4613      	mov	r3, r2
 8011486:	707b      	strb	r3, [r7, #1]
 8011488:	787b      	ldrb	r3, [r7, #1]
 801148a:	2b00      	cmp	r3, #0
 801148c:	d003      	beq.n	8011496 <HAL_GPIO_WritePin+0x1e>
 801148e:	887a      	ldrh	r2, [r7, #2]
 8011490:	687b      	ldr	r3, [r7, #4]
 8011492:	619a      	str	r2, [r3, #24]
 8011494:	e003      	b.n	801149e <HAL_GPIO_WritePin+0x26>
 8011496:	887b      	ldrh	r3, [r7, #2]
 8011498:	041a      	lsls	r2, r3, #16
 801149a:	687b      	ldr	r3, [r7, #4]
 801149c:	619a      	str	r2, [r3, #24]
 801149e:	bf00      	nop
 80114a0:	370c      	adds	r7, #12
 80114a2:	46bd      	mov	sp, r7
 80114a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114a8:	4770      	bx	lr
	...

080114ac <HAL_GPIO_EXTI_IRQHandler>:
 80114ac:	b580      	push	{r7, lr}
 80114ae:	b082      	sub	sp, #8
 80114b0:	af00      	add	r7, sp, #0
 80114b2:	4603      	mov	r3, r0
 80114b4:	80fb      	strh	r3, [r7, #6]
 80114b6:	4b08      	ldr	r3, [pc, #32]	; (80114d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80114b8:	695a      	ldr	r2, [r3, #20]
 80114ba:	88fb      	ldrh	r3, [r7, #6]
 80114bc:	4013      	ands	r3, r2
 80114be:	2b00      	cmp	r3, #0
 80114c0:	d006      	beq.n	80114d0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80114c2:	4a05      	ldr	r2, [pc, #20]	; (80114d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80114c4:	88fb      	ldrh	r3, [r7, #6]
 80114c6:	6153      	str	r3, [r2, #20]
 80114c8:	88fb      	ldrh	r3, [r7, #6]
 80114ca:	4618      	mov	r0, r3
 80114cc:	f7f0 fd56 	bl	8001f7c <HAL_GPIO_EXTI_Callback>
 80114d0:	bf00      	nop
 80114d2:	3708      	adds	r7, #8
 80114d4:	46bd      	mov	sp, r7
 80114d6:	bd80      	pop	{r7, pc}
 80114d8:	40013c00 	.word	0x40013c00

080114dc <HAL_I2C_Init>:
 80114dc:	b580      	push	{r7, lr}
 80114de:	b084      	sub	sp, #16
 80114e0:	af00      	add	r7, sp, #0
 80114e2:	6078      	str	r0, [r7, #4]
 80114e4:	687b      	ldr	r3, [r7, #4]
 80114e6:	2b00      	cmp	r3, #0
 80114e8:	d101      	bne.n	80114ee <HAL_I2C_Init+0x12>
 80114ea:	2301      	movs	r3, #1
 80114ec:	e12b      	b.n	8011746 <HAL_I2C_Init+0x26a>
 80114ee:	687b      	ldr	r3, [r7, #4]
 80114f0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80114f4:	b2db      	uxtb	r3, r3
 80114f6:	2b00      	cmp	r3, #0
 80114f8:	d106      	bne.n	8011508 <HAL_I2C_Init+0x2c>
 80114fa:	687b      	ldr	r3, [r7, #4]
 80114fc:	2200      	movs	r2, #0
 80114fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011502:	6878      	ldr	r0, [r7, #4]
 8011504:	f7f2 f9dc 	bl	80038c0 <HAL_I2C_MspInit>
 8011508:	687b      	ldr	r3, [r7, #4]
 801150a:	2224      	movs	r2, #36	; 0x24
 801150c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011510:	687b      	ldr	r3, [r7, #4]
 8011512:	681b      	ldr	r3, [r3, #0]
 8011514:	681a      	ldr	r2, [r3, #0]
 8011516:	687b      	ldr	r3, [r7, #4]
 8011518:	681b      	ldr	r3, [r3, #0]
 801151a:	f022 0201 	bic.w	r2, r2, #1
 801151e:	601a      	str	r2, [r3, #0]
 8011520:	687b      	ldr	r3, [r7, #4]
 8011522:	681b      	ldr	r3, [r3, #0]
 8011524:	681a      	ldr	r2, [r3, #0]
 8011526:	687b      	ldr	r3, [r7, #4]
 8011528:	681b      	ldr	r3, [r3, #0]
 801152a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 801152e:	601a      	str	r2, [r3, #0]
 8011530:	687b      	ldr	r3, [r7, #4]
 8011532:	681b      	ldr	r3, [r3, #0]
 8011534:	681a      	ldr	r2, [r3, #0]
 8011536:	687b      	ldr	r3, [r7, #4]
 8011538:	681b      	ldr	r3, [r3, #0]
 801153a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 801153e:	601a      	str	r2, [r3, #0]
 8011540:	f003 fc0c 	bl	8014d5c <HAL_RCC_GetPCLK1Freq>
 8011544:	60f8      	str	r0, [r7, #12]
 8011546:	687b      	ldr	r3, [r7, #4]
 8011548:	685b      	ldr	r3, [r3, #4]
 801154a:	4a81      	ldr	r2, [pc, #516]	; (8011750 <HAL_I2C_Init+0x274>)
 801154c:	4293      	cmp	r3, r2
 801154e:	d807      	bhi.n	8011560 <HAL_I2C_Init+0x84>
 8011550:	68fb      	ldr	r3, [r7, #12]
 8011552:	4a80      	ldr	r2, [pc, #512]	; (8011754 <HAL_I2C_Init+0x278>)
 8011554:	4293      	cmp	r3, r2
 8011556:	bf94      	ite	ls
 8011558:	2301      	movls	r3, #1
 801155a:	2300      	movhi	r3, #0
 801155c:	b2db      	uxtb	r3, r3
 801155e:	e006      	b.n	801156e <HAL_I2C_Init+0x92>
 8011560:	68fb      	ldr	r3, [r7, #12]
 8011562:	4a7d      	ldr	r2, [pc, #500]	; (8011758 <HAL_I2C_Init+0x27c>)
 8011564:	4293      	cmp	r3, r2
 8011566:	bf94      	ite	ls
 8011568:	2301      	movls	r3, #1
 801156a:	2300      	movhi	r3, #0
 801156c:	b2db      	uxtb	r3, r3
 801156e:	2b00      	cmp	r3, #0
 8011570:	d001      	beq.n	8011576 <HAL_I2C_Init+0x9a>
 8011572:	2301      	movs	r3, #1
 8011574:	e0e7      	b.n	8011746 <HAL_I2C_Init+0x26a>
 8011576:	68fb      	ldr	r3, [r7, #12]
 8011578:	4a78      	ldr	r2, [pc, #480]	; (801175c <HAL_I2C_Init+0x280>)
 801157a:	fba2 2303 	umull	r2, r3, r2, r3
 801157e:	0c9b      	lsrs	r3, r3, #18
 8011580:	60bb      	str	r3, [r7, #8]
 8011582:	687b      	ldr	r3, [r7, #4]
 8011584:	681b      	ldr	r3, [r3, #0]
 8011586:	685b      	ldr	r3, [r3, #4]
 8011588:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 801158c:	687b      	ldr	r3, [r7, #4]
 801158e:	681b      	ldr	r3, [r3, #0]
 8011590:	68ba      	ldr	r2, [r7, #8]
 8011592:	430a      	orrs	r2, r1
 8011594:	605a      	str	r2, [r3, #4]
 8011596:	687b      	ldr	r3, [r7, #4]
 8011598:	681b      	ldr	r3, [r3, #0]
 801159a:	6a1b      	ldr	r3, [r3, #32]
 801159c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80115a0:	687b      	ldr	r3, [r7, #4]
 80115a2:	685b      	ldr	r3, [r3, #4]
 80115a4:	4a6a      	ldr	r2, [pc, #424]	; (8011750 <HAL_I2C_Init+0x274>)
 80115a6:	4293      	cmp	r3, r2
 80115a8:	d802      	bhi.n	80115b0 <HAL_I2C_Init+0xd4>
 80115aa:	68bb      	ldr	r3, [r7, #8]
 80115ac:	3301      	adds	r3, #1
 80115ae:	e009      	b.n	80115c4 <HAL_I2C_Init+0xe8>
 80115b0:	68bb      	ldr	r3, [r7, #8]
 80115b2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80115b6:	fb02 f303 	mul.w	r3, r2, r3
 80115ba:	4a69      	ldr	r2, [pc, #420]	; (8011760 <HAL_I2C_Init+0x284>)
 80115bc:	fba2 2303 	umull	r2, r3, r2, r3
 80115c0:	099b      	lsrs	r3, r3, #6
 80115c2:	3301      	adds	r3, #1
 80115c4:	687a      	ldr	r2, [r7, #4]
 80115c6:	6812      	ldr	r2, [r2, #0]
 80115c8:	430b      	orrs	r3, r1
 80115ca:	6213      	str	r3, [r2, #32]
 80115cc:	687b      	ldr	r3, [r7, #4]
 80115ce:	681b      	ldr	r3, [r3, #0]
 80115d0:	69db      	ldr	r3, [r3, #28]
 80115d2:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80115d6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80115da:	687b      	ldr	r3, [r7, #4]
 80115dc:	685b      	ldr	r3, [r3, #4]
 80115de:	495c      	ldr	r1, [pc, #368]	; (8011750 <HAL_I2C_Init+0x274>)
 80115e0:	428b      	cmp	r3, r1
 80115e2:	d819      	bhi.n	8011618 <HAL_I2C_Init+0x13c>
 80115e4:	68fb      	ldr	r3, [r7, #12]
 80115e6:	1e59      	subs	r1, r3, #1
 80115e8:	687b      	ldr	r3, [r7, #4]
 80115ea:	685b      	ldr	r3, [r3, #4]
 80115ec:	005b      	lsls	r3, r3, #1
 80115ee:	fbb1 f3f3 	udiv	r3, r1, r3
 80115f2:	1c59      	adds	r1, r3, #1
 80115f4:	f640 73fc 	movw	r3, #4092	; 0xffc
 80115f8:	400b      	ands	r3, r1
 80115fa:	2b00      	cmp	r3, #0
 80115fc:	d00a      	beq.n	8011614 <HAL_I2C_Init+0x138>
 80115fe:	68fb      	ldr	r3, [r7, #12]
 8011600:	1e59      	subs	r1, r3, #1
 8011602:	687b      	ldr	r3, [r7, #4]
 8011604:	685b      	ldr	r3, [r3, #4]
 8011606:	005b      	lsls	r3, r3, #1
 8011608:	fbb1 f3f3 	udiv	r3, r1, r3
 801160c:	3301      	adds	r3, #1
 801160e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011612:	e051      	b.n	80116b8 <HAL_I2C_Init+0x1dc>
 8011614:	2304      	movs	r3, #4
 8011616:	e04f      	b.n	80116b8 <HAL_I2C_Init+0x1dc>
 8011618:	687b      	ldr	r3, [r7, #4]
 801161a:	689b      	ldr	r3, [r3, #8]
 801161c:	2b00      	cmp	r3, #0
 801161e:	d111      	bne.n	8011644 <HAL_I2C_Init+0x168>
 8011620:	68fb      	ldr	r3, [r7, #12]
 8011622:	1e58      	subs	r0, r3, #1
 8011624:	687b      	ldr	r3, [r7, #4]
 8011626:	6859      	ldr	r1, [r3, #4]
 8011628:	460b      	mov	r3, r1
 801162a:	005b      	lsls	r3, r3, #1
 801162c:	440b      	add	r3, r1
 801162e:	fbb0 f3f3 	udiv	r3, r0, r3
 8011632:	3301      	adds	r3, #1
 8011634:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011638:	2b00      	cmp	r3, #0
 801163a:	bf0c      	ite	eq
 801163c:	2301      	moveq	r3, #1
 801163e:	2300      	movne	r3, #0
 8011640:	b2db      	uxtb	r3, r3
 8011642:	e012      	b.n	801166a <HAL_I2C_Init+0x18e>
 8011644:	68fb      	ldr	r3, [r7, #12]
 8011646:	1e58      	subs	r0, r3, #1
 8011648:	687b      	ldr	r3, [r7, #4]
 801164a:	6859      	ldr	r1, [r3, #4]
 801164c:	460b      	mov	r3, r1
 801164e:	009b      	lsls	r3, r3, #2
 8011650:	440b      	add	r3, r1
 8011652:	0099      	lsls	r1, r3, #2
 8011654:	440b      	add	r3, r1
 8011656:	fbb0 f3f3 	udiv	r3, r0, r3
 801165a:	3301      	adds	r3, #1
 801165c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011660:	2b00      	cmp	r3, #0
 8011662:	bf0c      	ite	eq
 8011664:	2301      	moveq	r3, #1
 8011666:	2300      	movne	r3, #0
 8011668:	b2db      	uxtb	r3, r3
 801166a:	2b00      	cmp	r3, #0
 801166c:	d001      	beq.n	8011672 <HAL_I2C_Init+0x196>
 801166e:	2301      	movs	r3, #1
 8011670:	e022      	b.n	80116b8 <HAL_I2C_Init+0x1dc>
 8011672:	687b      	ldr	r3, [r7, #4]
 8011674:	689b      	ldr	r3, [r3, #8]
 8011676:	2b00      	cmp	r3, #0
 8011678:	d10e      	bne.n	8011698 <HAL_I2C_Init+0x1bc>
 801167a:	68fb      	ldr	r3, [r7, #12]
 801167c:	1e58      	subs	r0, r3, #1
 801167e:	687b      	ldr	r3, [r7, #4]
 8011680:	6859      	ldr	r1, [r3, #4]
 8011682:	460b      	mov	r3, r1
 8011684:	005b      	lsls	r3, r3, #1
 8011686:	440b      	add	r3, r1
 8011688:	fbb0 f3f3 	udiv	r3, r0, r3
 801168c:	3301      	adds	r3, #1
 801168e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011692:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8011696:	e00f      	b.n	80116b8 <HAL_I2C_Init+0x1dc>
 8011698:	68fb      	ldr	r3, [r7, #12]
 801169a:	1e58      	subs	r0, r3, #1
 801169c:	687b      	ldr	r3, [r7, #4]
 801169e:	6859      	ldr	r1, [r3, #4]
 80116a0:	460b      	mov	r3, r1
 80116a2:	009b      	lsls	r3, r3, #2
 80116a4:	440b      	add	r3, r1
 80116a6:	0099      	lsls	r1, r3, #2
 80116a8:	440b      	add	r3, r1
 80116aa:	fbb0 f3f3 	udiv	r3, r0, r3
 80116ae:	3301      	adds	r3, #1
 80116b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80116b4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80116b8:	6879      	ldr	r1, [r7, #4]
 80116ba:	6809      	ldr	r1, [r1, #0]
 80116bc:	4313      	orrs	r3, r2
 80116be:	61cb      	str	r3, [r1, #28]
 80116c0:	687b      	ldr	r3, [r7, #4]
 80116c2:	681b      	ldr	r3, [r3, #0]
 80116c4:	681b      	ldr	r3, [r3, #0]
 80116c6:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80116ca:	687b      	ldr	r3, [r7, #4]
 80116cc:	69da      	ldr	r2, [r3, #28]
 80116ce:	687b      	ldr	r3, [r7, #4]
 80116d0:	6a1b      	ldr	r3, [r3, #32]
 80116d2:	431a      	orrs	r2, r3
 80116d4:	687b      	ldr	r3, [r7, #4]
 80116d6:	681b      	ldr	r3, [r3, #0]
 80116d8:	430a      	orrs	r2, r1
 80116da:	601a      	str	r2, [r3, #0]
 80116dc:	687b      	ldr	r3, [r7, #4]
 80116de:	681b      	ldr	r3, [r3, #0]
 80116e0:	689b      	ldr	r3, [r3, #8]
 80116e2:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80116e6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80116ea:	687a      	ldr	r2, [r7, #4]
 80116ec:	6911      	ldr	r1, [r2, #16]
 80116ee:	687a      	ldr	r2, [r7, #4]
 80116f0:	68d2      	ldr	r2, [r2, #12]
 80116f2:	4311      	orrs	r1, r2
 80116f4:	687a      	ldr	r2, [r7, #4]
 80116f6:	6812      	ldr	r2, [r2, #0]
 80116f8:	430b      	orrs	r3, r1
 80116fa:	6093      	str	r3, [r2, #8]
 80116fc:	687b      	ldr	r3, [r7, #4]
 80116fe:	681b      	ldr	r3, [r3, #0]
 8011700:	68db      	ldr	r3, [r3, #12]
 8011702:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8011706:	687b      	ldr	r3, [r7, #4]
 8011708:	695a      	ldr	r2, [r3, #20]
 801170a:	687b      	ldr	r3, [r7, #4]
 801170c:	699b      	ldr	r3, [r3, #24]
 801170e:	431a      	orrs	r2, r3
 8011710:	687b      	ldr	r3, [r7, #4]
 8011712:	681b      	ldr	r3, [r3, #0]
 8011714:	430a      	orrs	r2, r1
 8011716:	60da      	str	r2, [r3, #12]
 8011718:	687b      	ldr	r3, [r7, #4]
 801171a:	681b      	ldr	r3, [r3, #0]
 801171c:	681a      	ldr	r2, [r3, #0]
 801171e:	687b      	ldr	r3, [r7, #4]
 8011720:	681b      	ldr	r3, [r3, #0]
 8011722:	f042 0201 	orr.w	r2, r2, #1
 8011726:	601a      	str	r2, [r3, #0]
 8011728:	687b      	ldr	r3, [r7, #4]
 801172a:	2200      	movs	r2, #0
 801172c:	641a      	str	r2, [r3, #64]	; 0x40
 801172e:	687b      	ldr	r3, [r7, #4]
 8011730:	2220      	movs	r2, #32
 8011732:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011736:	687b      	ldr	r3, [r7, #4]
 8011738:	2200      	movs	r2, #0
 801173a:	631a      	str	r2, [r3, #48]	; 0x30
 801173c:	687b      	ldr	r3, [r7, #4]
 801173e:	2200      	movs	r2, #0
 8011740:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011744:	2300      	movs	r3, #0
 8011746:	4618      	mov	r0, r3
 8011748:	3710      	adds	r7, #16
 801174a:	46bd      	mov	sp, r7
 801174c:	bd80      	pop	{r7, pc}
 801174e:	bf00      	nop
 8011750:	000186a0 	.word	0x000186a0
 8011754:	001e847f 	.word	0x001e847f
 8011758:	003d08ff 	.word	0x003d08ff
 801175c:	431bde83 	.word	0x431bde83
 8011760:	10624dd3 	.word	0x10624dd3

08011764 <HAL_I2C_Mem_Write>:
 8011764:	b580      	push	{r7, lr}
 8011766:	b088      	sub	sp, #32
 8011768:	af02      	add	r7, sp, #8
 801176a:	60f8      	str	r0, [r7, #12]
 801176c:	4608      	mov	r0, r1
 801176e:	4611      	mov	r1, r2
 8011770:	461a      	mov	r2, r3
 8011772:	4603      	mov	r3, r0
 8011774:	817b      	strh	r3, [r7, #10]
 8011776:	460b      	mov	r3, r1
 8011778:	813b      	strh	r3, [r7, #8]
 801177a:	4613      	mov	r3, r2
 801177c:	80fb      	strh	r3, [r7, #6]
 801177e:	f7fd fedd 	bl	800f53c <HAL_GetTick>
 8011782:	6178      	str	r0, [r7, #20]
 8011784:	68fb      	ldr	r3, [r7, #12]
 8011786:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801178a:	b2db      	uxtb	r3, r3
 801178c:	2b20      	cmp	r3, #32
 801178e:	f040 80d9 	bne.w	8011944 <HAL_I2C_Mem_Write+0x1e0>
 8011792:	697b      	ldr	r3, [r7, #20]
 8011794:	9300      	str	r3, [sp, #0]
 8011796:	2319      	movs	r3, #25
 8011798:	2201      	movs	r2, #1
 801179a:	496d      	ldr	r1, [pc, #436]	; (8011950 <HAL_I2C_Mem_Write+0x1ec>)
 801179c:	68f8      	ldr	r0, [r7, #12]
 801179e:	f001 fa53 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 80117a2:	4603      	mov	r3, r0
 80117a4:	2b00      	cmp	r3, #0
 80117a6:	d001      	beq.n	80117ac <HAL_I2C_Mem_Write+0x48>
 80117a8:	2302      	movs	r3, #2
 80117aa:	e0cc      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 80117ac:	68fb      	ldr	r3, [r7, #12]
 80117ae:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80117b2:	2b01      	cmp	r3, #1
 80117b4:	d101      	bne.n	80117ba <HAL_I2C_Mem_Write+0x56>
 80117b6:	2302      	movs	r3, #2
 80117b8:	e0c5      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 80117ba:	68fb      	ldr	r3, [r7, #12]
 80117bc:	2201      	movs	r2, #1
 80117be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80117c2:	68fb      	ldr	r3, [r7, #12]
 80117c4:	681b      	ldr	r3, [r3, #0]
 80117c6:	681b      	ldr	r3, [r3, #0]
 80117c8:	f003 0301 	and.w	r3, r3, #1
 80117cc:	2b01      	cmp	r3, #1
 80117ce:	d007      	beq.n	80117e0 <HAL_I2C_Mem_Write+0x7c>
 80117d0:	68fb      	ldr	r3, [r7, #12]
 80117d2:	681b      	ldr	r3, [r3, #0]
 80117d4:	681a      	ldr	r2, [r3, #0]
 80117d6:	68fb      	ldr	r3, [r7, #12]
 80117d8:	681b      	ldr	r3, [r3, #0]
 80117da:	f042 0201 	orr.w	r2, r2, #1
 80117de:	601a      	str	r2, [r3, #0]
 80117e0:	68fb      	ldr	r3, [r7, #12]
 80117e2:	681b      	ldr	r3, [r3, #0]
 80117e4:	681a      	ldr	r2, [r3, #0]
 80117e6:	68fb      	ldr	r3, [r7, #12]
 80117e8:	681b      	ldr	r3, [r3, #0]
 80117ea:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80117ee:	601a      	str	r2, [r3, #0]
 80117f0:	68fb      	ldr	r3, [r7, #12]
 80117f2:	2221      	movs	r2, #33	; 0x21
 80117f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80117f8:	68fb      	ldr	r3, [r7, #12]
 80117fa:	2240      	movs	r2, #64	; 0x40
 80117fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011800:	68fb      	ldr	r3, [r7, #12]
 8011802:	2200      	movs	r2, #0
 8011804:	641a      	str	r2, [r3, #64]	; 0x40
 8011806:	68fb      	ldr	r3, [r7, #12]
 8011808:	6a3a      	ldr	r2, [r7, #32]
 801180a:	625a      	str	r2, [r3, #36]	; 0x24
 801180c:	68fb      	ldr	r3, [r7, #12]
 801180e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8011810:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011812:	68fb      	ldr	r3, [r7, #12]
 8011814:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011816:	b29a      	uxth	r2, r3
 8011818:	68fb      	ldr	r3, [r7, #12]
 801181a:	851a      	strh	r2, [r3, #40]	; 0x28
 801181c:	68fb      	ldr	r3, [r7, #12]
 801181e:	4a4d      	ldr	r2, [pc, #308]	; (8011954 <HAL_I2C_Mem_Write+0x1f0>)
 8011820:	62da      	str	r2, [r3, #44]	; 0x2c
 8011822:	88f8      	ldrh	r0, [r7, #6]
 8011824:	893a      	ldrh	r2, [r7, #8]
 8011826:	8979      	ldrh	r1, [r7, #10]
 8011828:	697b      	ldr	r3, [r7, #20]
 801182a:	9301      	str	r3, [sp, #4]
 801182c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801182e:	9300      	str	r3, [sp, #0]
 8011830:	4603      	mov	r3, r0
 8011832:	68f8      	ldr	r0, [r7, #12]
 8011834:	f000 fed0 	bl	80125d8 <I2C_RequestMemoryWrite>
 8011838:	4603      	mov	r3, r0
 801183a:	2b00      	cmp	r3, #0
 801183c:	d052      	beq.n	80118e4 <HAL_I2C_Mem_Write+0x180>
 801183e:	2301      	movs	r3, #1
 8011840:	e081      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 8011842:	697a      	ldr	r2, [r7, #20]
 8011844:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8011846:	68f8      	ldr	r0, [r7, #12]
 8011848:	f001 fad4 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 801184c:	4603      	mov	r3, r0
 801184e:	2b00      	cmp	r3, #0
 8011850:	d00d      	beq.n	801186e <HAL_I2C_Mem_Write+0x10a>
 8011852:	68fb      	ldr	r3, [r7, #12]
 8011854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011856:	2b04      	cmp	r3, #4
 8011858:	d107      	bne.n	801186a <HAL_I2C_Mem_Write+0x106>
 801185a:	68fb      	ldr	r3, [r7, #12]
 801185c:	681b      	ldr	r3, [r3, #0]
 801185e:	681a      	ldr	r2, [r3, #0]
 8011860:	68fb      	ldr	r3, [r7, #12]
 8011862:	681b      	ldr	r3, [r3, #0]
 8011864:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011868:	601a      	str	r2, [r3, #0]
 801186a:	2301      	movs	r3, #1
 801186c:	e06b      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 801186e:	68fb      	ldr	r3, [r7, #12]
 8011870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011872:	781a      	ldrb	r2, [r3, #0]
 8011874:	68fb      	ldr	r3, [r7, #12]
 8011876:	681b      	ldr	r3, [r3, #0]
 8011878:	611a      	str	r2, [r3, #16]
 801187a:	68fb      	ldr	r3, [r7, #12]
 801187c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801187e:	1c5a      	adds	r2, r3, #1
 8011880:	68fb      	ldr	r3, [r7, #12]
 8011882:	625a      	str	r2, [r3, #36]	; 0x24
 8011884:	68fb      	ldr	r3, [r7, #12]
 8011886:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011888:	3b01      	subs	r3, #1
 801188a:	b29a      	uxth	r2, r3
 801188c:	68fb      	ldr	r3, [r7, #12]
 801188e:	851a      	strh	r2, [r3, #40]	; 0x28
 8011890:	68fb      	ldr	r3, [r7, #12]
 8011892:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011894:	b29b      	uxth	r3, r3
 8011896:	3b01      	subs	r3, #1
 8011898:	b29a      	uxth	r2, r3
 801189a:	68fb      	ldr	r3, [r7, #12]
 801189c:	855a      	strh	r2, [r3, #42]	; 0x2a
 801189e:	68fb      	ldr	r3, [r7, #12]
 80118a0:	681b      	ldr	r3, [r3, #0]
 80118a2:	695b      	ldr	r3, [r3, #20]
 80118a4:	f003 0304 	and.w	r3, r3, #4
 80118a8:	2b04      	cmp	r3, #4
 80118aa:	d11b      	bne.n	80118e4 <HAL_I2C_Mem_Write+0x180>
 80118ac:	68fb      	ldr	r3, [r7, #12]
 80118ae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80118b0:	2b00      	cmp	r3, #0
 80118b2:	d017      	beq.n	80118e4 <HAL_I2C_Mem_Write+0x180>
 80118b4:	68fb      	ldr	r3, [r7, #12]
 80118b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80118b8:	781a      	ldrb	r2, [r3, #0]
 80118ba:	68fb      	ldr	r3, [r7, #12]
 80118bc:	681b      	ldr	r3, [r3, #0]
 80118be:	611a      	str	r2, [r3, #16]
 80118c0:	68fb      	ldr	r3, [r7, #12]
 80118c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80118c4:	1c5a      	adds	r2, r3, #1
 80118c6:	68fb      	ldr	r3, [r7, #12]
 80118c8:	625a      	str	r2, [r3, #36]	; 0x24
 80118ca:	68fb      	ldr	r3, [r7, #12]
 80118cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80118ce:	3b01      	subs	r3, #1
 80118d0:	b29a      	uxth	r2, r3
 80118d2:	68fb      	ldr	r3, [r7, #12]
 80118d4:	851a      	strh	r2, [r3, #40]	; 0x28
 80118d6:	68fb      	ldr	r3, [r7, #12]
 80118d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80118da:	b29b      	uxth	r3, r3
 80118dc:	3b01      	subs	r3, #1
 80118de:	b29a      	uxth	r2, r3
 80118e0:	68fb      	ldr	r3, [r7, #12]
 80118e2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80118e4:	68fb      	ldr	r3, [r7, #12]
 80118e6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80118e8:	2b00      	cmp	r3, #0
 80118ea:	d1aa      	bne.n	8011842 <HAL_I2C_Mem_Write+0xde>
 80118ec:	697a      	ldr	r2, [r7, #20]
 80118ee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80118f0:	68f8      	ldr	r0, [r7, #12]
 80118f2:	f001 fac0 	bl	8012e76 <I2C_WaitOnBTFFlagUntilTimeout>
 80118f6:	4603      	mov	r3, r0
 80118f8:	2b00      	cmp	r3, #0
 80118fa:	d00d      	beq.n	8011918 <HAL_I2C_Mem_Write+0x1b4>
 80118fc:	68fb      	ldr	r3, [r7, #12]
 80118fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011900:	2b04      	cmp	r3, #4
 8011902:	d107      	bne.n	8011914 <HAL_I2C_Mem_Write+0x1b0>
 8011904:	68fb      	ldr	r3, [r7, #12]
 8011906:	681b      	ldr	r3, [r3, #0]
 8011908:	681a      	ldr	r2, [r3, #0]
 801190a:	68fb      	ldr	r3, [r7, #12]
 801190c:	681b      	ldr	r3, [r3, #0]
 801190e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011912:	601a      	str	r2, [r3, #0]
 8011914:	2301      	movs	r3, #1
 8011916:	e016      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 8011918:	68fb      	ldr	r3, [r7, #12]
 801191a:	681b      	ldr	r3, [r3, #0]
 801191c:	681a      	ldr	r2, [r3, #0]
 801191e:	68fb      	ldr	r3, [r7, #12]
 8011920:	681b      	ldr	r3, [r3, #0]
 8011922:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011926:	601a      	str	r2, [r3, #0]
 8011928:	68fb      	ldr	r3, [r7, #12]
 801192a:	2220      	movs	r2, #32
 801192c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011930:	68fb      	ldr	r3, [r7, #12]
 8011932:	2200      	movs	r2, #0
 8011934:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011938:	68fb      	ldr	r3, [r7, #12]
 801193a:	2200      	movs	r2, #0
 801193c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011940:	2300      	movs	r3, #0
 8011942:	e000      	b.n	8011946 <HAL_I2C_Mem_Write+0x1e2>
 8011944:	2302      	movs	r3, #2
 8011946:	4618      	mov	r0, r3
 8011948:	3718      	adds	r7, #24
 801194a:	46bd      	mov	sp, r7
 801194c:	bd80      	pop	{r7, pc}
 801194e:	bf00      	nop
 8011950:	00100002 	.word	0x00100002
 8011954:	ffff0000 	.word	0xffff0000

08011958 <HAL_I2C_Mem_Read>:
 8011958:	b580      	push	{r7, lr}
 801195a:	b08c      	sub	sp, #48	; 0x30
 801195c:	af02      	add	r7, sp, #8
 801195e:	60f8      	str	r0, [r7, #12]
 8011960:	4608      	mov	r0, r1
 8011962:	4611      	mov	r1, r2
 8011964:	461a      	mov	r2, r3
 8011966:	4603      	mov	r3, r0
 8011968:	817b      	strh	r3, [r7, #10]
 801196a:	460b      	mov	r3, r1
 801196c:	813b      	strh	r3, [r7, #8]
 801196e:	4613      	mov	r3, r2
 8011970:	80fb      	strh	r3, [r7, #6]
 8011972:	f7fd fde3 	bl	800f53c <HAL_GetTick>
 8011976:	6278      	str	r0, [r7, #36]	; 0x24
 8011978:	68fb      	ldr	r3, [r7, #12]
 801197a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801197e:	b2db      	uxtb	r3, r3
 8011980:	2b20      	cmp	r3, #32
 8011982:	f040 8208 	bne.w	8011d96 <HAL_I2C_Mem_Read+0x43e>
 8011986:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011988:	9300      	str	r3, [sp, #0]
 801198a:	2319      	movs	r3, #25
 801198c:	2201      	movs	r2, #1
 801198e:	497b      	ldr	r1, [pc, #492]	; (8011b7c <HAL_I2C_Mem_Read+0x224>)
 8011990:	68f8      	ldr	r0, [r7, #12]
 8011992:	f001 f959 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8011996:	4603      	mov	r3, r0
 8011998:	2b00      	cmp	r3, #0
 801199a:	d001      	beq.n	80119a0 <HAL_I2C_Mem_Read+0x48>
 801199c:	2302      	movs	r3, #2
 801199e:	e1fb      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 80119a0:	68fb      	ldr	r3, [r7, #12]
 80119a2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80119a6:	2b01      	cmp	r3, #1
 80119a8:	d101      	bne.n	80119ae <HAL_I2C_Mem_Read+0x56>
 80119aa:	2302      	movs	r3, #2
 80119ac:	e1f4      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 80119ae:	68fb      	ldr	r3, [r7, #12]
 80119b0:	2201      	movs	r2, #1
 80119b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80119b6:	68fb      	ldr	r3, [r7, #12]
 80119b8:	681b      	ldr	r3, [r3, #0]
 80119ba:	681b      	ldr	r3, [r3, #0]
 80119bc:	f003 0301 	and.w	r3, r3, #1
 80119c0:	2b01      	cmp	r3, #1
 80119c2:	d007      	beq.n	80119d4 <HAL_I2C_Mem_Read+0x7c>
 80119c4:	68fb      	ldr	r3, [r7, #12]
 80119c6:	681b      	ldr	r3, [r3, #0]
 80119c8:	681a      	ldr	r2, [r3, #0]
 80119ca:	68fb      	ldr	r3, [r7, #12]
 80119cc:	681b      	ldr	r3, [r3, #0]
 80119ce:	f042 0201 	orr.w	r2, r2, #1
 80119d2:	601a      	str	r2, [r3, #0]
 80119d4:	68fb      	ldr	r3, [r7, #12]
 80119d6:	681b      	ldr	r3, [r3, #0]
 80119d8:	681a      	ldr	r2, [r3, #0]
 80119da:	68fb      	ldr	r3, [r7, #12]
 80119dc:	681b      	ldr	r3, [r3, #0]
 80119de:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80119e2:	601a      	str	r2, [r3, #0]
 80119e4:	68fb      	ldr	r3, [r7, #12]
 80119e6:	2222      	movs	r2, #34	; 0x22
 80119e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80119ec:	68fb      	ldr	r3, [r7, #12]
 80119ee:	2240      	movs	r2, #64	; 0x40
 80119f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80119f4:	68fb      	ldr	r3, [r7, #12]
 80119f6:	2200      	movs	r2, #0
 80119f8:	641a      	str	r2, [r3, #64]	; 0x40
 80119fa:	68fb      	ldr	r3, [r7, #12]
 80119fc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80119fe:	625a      	str	r2, [r3, #36]	; 0x24
 8011a00:	68fb      	ldr	r3, [r7, #12]
 8011a02:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8011a04:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011a06:	68fb      	ldr	r3, [r7, #12]
 8011a08:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011a0a:	b29a      	uxth	r2, r3
 8011a0c:	68fb      	ldr	r3, [r7, #12]
 8011a0e:	851a      	strh	r2, [r3, #40]	; 0x28
 8011a10:	68fb      	ldr	r3, [r7, #12]
 8011a12:	4a5b      	ldr	r2, [pc, #364]	; (8011b80 <HAL_I2C_Mem_Read+0x228>)
 8011a14:	62da      	str	r2, [r3, #44]	; 0x2c
 8011a16:	88f8      	ldrh	r0, [r7, #6]
 8011a18:	893a      	ldrh	r2, [r7, #8]
 8011a1a:	8979      	ldrh	r1, [r7, #10]
 8011a1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011a1e:	9301      	str	r3, [sp, #4]
 8011a20:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011a22:	9300      	str	r3, [sp, #0]
 8011a24:	4603      	mov	r3, r0
 8011a26:	68f8      	ldr	r0, [r7, #12]
 8011a28:	f000 fe6c 	bl	8012704 <I2C_RequestMemoryRead>
 8011a2c:	4603      	mov	r3, r0
 8011a2e:	2b00      	cmp	r3, #0
 8011a30:	d001      	beq.n	8011a36 <HAL_I2C_Mem_Read+0xde>
 8011a32:	2301      	movs	r3, #1
 8011a34:	e1b0      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011a36:	68fb      	ldr	r3, [r7, #12]
 8011a38:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011a3a:	2b00      	cmp	r3, #0
 8011a3c:	d113      	bne.n	8011a66 <HAL_I2C_Mem_Read+0x10e>
 8011a3e:	2300      	movs	r3, #0
 8011a40:	623b      	str	r3, [r7, #32]
 8011a42:	68fb      	ldr	r3, [r7, #12]
 8011a44:	681b      	ldr	r3, [r3, #0]
 8011a46:	695b      	ldr	r3, [r3, #20]
 8011a48:	623b      	str	r3, [r7, #32]
 8011a4a:	68fb      	ldr	r3, [r7, #12]
 8011a4c:	681b      	ldr	r3, [r3, #0]
 8011a4e:	699b      	ldr	r3, [r3, #24]
 8011a50:	623b      	str	r3, [r7, #32]
 8011a52:	6a3b      	ldr	r3, [r7, #32]
 8011a54:	68fb      	ldr	r3, [r7, #12]
 8011a56:	681b      	ldr	r3, [r3, #0]
 8011a58:	681a      	ldr	r2, [r3, #0]
 8011a5a:	68fb      	ldr	r3, [r7, #12]
 8011a5c:	681b      	ldr	r3, [r3, #0]
 8011a5e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011a62:	601a      	str	r2, [r3, #0]
 8011a64:	e184      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011a66:	68fb      	ldr	r3, [r7, #12]
 8011a68:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011a6a:	2b01      	cmp	r3, #1
 8011a6c:	d11b      	bne.n	8011aa6 <HAL_I2C_Mem_Read+0x14e>
 8011a6e:	68fb      	ldr	r3, [r7, #12]
 8011a70:	681b      	ldr	r3, [r3, #0]
 8011a72:	681a      	ldr	r2, [r3, #0]
 8011a74:	68fb      	ldr	r3, [r7, #12]
 8011a76:	681b      	ldr	r3, [r3, #0]
 8011a78:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011a7c:	601a      	str	r2, [r3, #0]
 8011a7e:	2300      	movs	r3, #0
 8011a80:	61fb      	str	r3, [r7, #28]
 8011a82:	68fb      	ldr	r3, [r7, #12]
 8011a84:	681b      	ldr	r3, [r3, #0]
 8011a86:	695b      	ldr	r3, [r3, #20]
 8011a88:	61fb      	str	r3, [r7, #28]
 8011a8a:	68fb      	ldr	r3, [r7, #12]
 8011a8c:	681b      	ldr	r3, [r3, #0]
 8011a8e:	699b      	ldr	r3, [r3, #24]
 8011a90:	61fb      	str	r3, [r7, #28]
 8011a92:	69fb      	ldr	r3, [r7, #28]
 8011a94:	68fb      	ldr	r3, [r7, #12]
 8011a96:	681b      	ldr	r3, [r3, #0]
 8011a98:	681a      	ldr	r2, [r3, #0]
 8011a9a:	68fb      	ldr	r3, [r7, #12]
 8011a9c:	681b      	ldr	r3, [r3, #0]
 8011a9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011aa2:	601a      	str	r2, [r3, #0]
 8011aa4:	e164      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011aa6:	68fb      	ldr	r3, [r7, #12]
 8011aa8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011aaa:	2b02      	cmp	r3, #2
 8011aac:	d11b      	bne.n	8011ae6 <HAL_I2C_Mem_Read+0x18e>
 8011aae:	68fb      	ldr	r3, [r7, #12]
 8011ab0:	681b      	ldr	r3, [r3, #0]
 8011ab2:	681a      	ldr	r2, [r3, #0]
 8011ab4:	68fb      	ldr	r3, [r7, #12]
 8011ab6:	681b      	ldr	r3, [r3, #0]
 8011ab8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011abc:	601a      	str	r2, [r3, #0]
 8011abe:	68fb      	ldr	r3, [r7, #12]
 8011ac0:	681b      	ldr	r3, [r3, #0]
 8011ac2:	681a      	ldr	r2, [r3, #0]
 8011ac4:	68fb      	ldr	r3, [r7, #12]
 8011ac6:	681b      	ldr	r3, [r3, #0]
 8011ac8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8011acc:	601a      	str	r2, [r3, #0]
 8011ace:	2300      	movs	r3, #0
 8011ad0:	61bb      	str	r3, [r7, #24]
 8011ad2:	68fb      	ldr	r3, [r7, #12]
 8011ad4:	681b      	ldr	r3, [r3, #0]
 8011ad6:	695b      	ldr	r3, [r3, #20]
 8011ad8:	61bb      	str	r3, [r7, #24]
 8011ada:	68fb      	ldr	r3, [r7, #12]
 8011adc:	681b      	ldr	r3, [r3, #0]
 8011ade:	699b      	ldr	r3, [r3, #24]
 8011ae0:	61bb      	str	r3, [r7, #24]
 8011ae2:	69bb      	ldr	r3, [r7, #24]
 8011ae4:	e144      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011ae6:	2300      	movs	r3, #0
 8011ae8:	617b      	str	r3, [r7, #20]
 8011aea:	68fb      	ldr	r3, [r7, #12]
 8011aec:	681b      	ldr	r3, [r3, #0]
 8011aee:	695b      	ldr	r3, [r3, #20]
 8011af0:	617b      	str	r3, [r7, #20]
 8011af2:	68fb      	ldr	r3, [r7, #12]
 8011af4:	681b      	ldr	r3, [r3, #0]
 8011af6:	699b      	ldr	r3, [r3, #24]
 8011af8:	617b      	str	r3, [r7, #20]
 8011afa:	697b      	ldr	r3, [r7, #20]
 8011afc:	e138      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011afe:	68fb      	ldr	r3, [r7, #12]
 8011b00:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011b02:	2b03      	cmp	r3, #3
 8011b04:	f200 80f1 	bhi.w	8011cea <HAL_I2C_Mem_Read+0x392>
 8011b08:	68fb      	ldr	r3, [r7, #12]
 8011b0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011b0c:	2b01      	cmp	r3, #1
 8011b0e:	d123      	bne.n	8011b58 <HAL_I2C_Mem_Read+0x200>
 8011b10:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011b12:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8011b14:	68f8      	ldr	r0, [r7, #12]
 8011b16:	f001 f9ef 	bl	8012ef8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8011b1a:	4603      	mov	r3, r0
 8011b1c:	2b00      	cmp	r3, #0
 8011b1e:	d001      	beq.n	8011b24 <HAL_I2C_Mem_Read+0x1cc>
 8011b20:	2301      	movs	r3, #1
 8011b22:	e139      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011b24:	68fb      	ldr	r3, [r7, #12]
 8011b26:	681b      	ldr	r3, [r3, #0]
 8011b28:	691a      	ldr	r2, [r3, #16]
 8011b2a:	68fb      	ldr	r3, [r7, #12]
 8011b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b2e:	b2d2      	uxtb	r2, r2
 8011b30:	701a      	strb	r2, [r3, #0]
 8011b32:	68fb      	ldr	r3, [r7, #12]
 8011b34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b36:	1c5a      	adds	r2, r3, #1
 8011b38:	68fb      	ldr	r3, [r7, #12]
 8011b3a:	625a      	str	r2, [r3, #36]	; 0x24
 8011b3c:	68fb      	ldr	r3, [r7, #12]
 8011b3e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011b40:	3b01      	subs	r3, #1
 8011b42:	b29a      	uxth	r2, r3
 8011b44:	68fb      	ldr	r3, [r7, #12]
 8011b46:	851a      	strh	r2, [r3, #40]	; 0x28
 8011b48:	68fb      	ldr	r3, [r7, #12]
 8011b4a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011b4c:	b29b      	uxth	r3, r3
 8011b4e:	3b01      	subs	r3, #1
 8011b50:	b29a      	uxth	r2, r3
 8011b52:	68fb      	ldr	r3, [r7, #12]
 8011b54:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011b56:	e10b      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011b58:	68fb      	ldr	r3, [r7, #12]
 8011b5a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011b5c:	2b02      	cmp	r3, #2
 8011b5e:	d14e      	bne.n	8011bfe <HAL_I2C_Mem_Read+0x2a6>
 8011b60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011b62:	9300      	str	r3, [sp, #0]
 8011b64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011b66:	2200      	movs	r2, #0
 8011b68:	4906      	ldr	r1, [pc, #24]	; (8011b84 <HAL_I2C_Mem_Read+0x22c>)
 8011b6a:	68f8      	ldr	r0, [r7, #12]
 8011b6c:	f001 f86c 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8011b70:	4603      	mov	r3, r0
 8011b72:	2b00      	cmp	r3, #0
 8011b74:	d008      	beq.n	8011b88 <HAL_I2C_Mem_Read+0x230>
 8011b76:	2301      	movs	r3, #1
 8011b78:	e10e      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011b7a:	bf00      	nop
 8011b7c:	00100002 	.word	0x00100002
 8011b80:	ffff0000 	.word	0xffff0000
 8011b84:	00010004 	.word	0x00010004
 8011b88:	68fb      	ldr	r3, [r7, #12]
 8011b8a:	681b      	ldr	r3, [r3, #0]
 8011b8c:	681a      	ldr	r2, [r3, #0]
 8011b8e:	68fb      	ldr	r3, [r7, #12]
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011b96:	601a      	str	r2, [r3, #0]
 8011b98:	68fb      	ldr	r3, [r7, #12]
 8011b9a:	681b      	ldr	r3, [r3, #0]
 8011b9c:	691a      	ldr	r2, [r3, #16]
 8011b9e:	68fb      	ldr	r3, [r7, #12]
 8011ba0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ba2:	b2d2      	uxtb	r2, r2
 8011ba4:	701a      	strb	r2, [r3, #0]
 8011ba6:	68fb      	ldr	r3, [r7, #12]
 8011ba8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011baa:	1c5a      	adds	r2, r3, #1
 8011bac:	68fb      	ldr	r3, [r7, #12]
 8011bae:	625a      	str	r2, [r3, #36]	; 0x24
 8011bb0:	68fb      	ldr	r3, [r7, #12]
 8011bb2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011bb4:	3b01      	subs	r3, #1
 8011bb6:	b29a      	uxth	r2, r3
 8011bb8:	68fb      	ldr	r3, [r7, #12]
 8011bba:	851a      	strh	r2, [r3, #40]	; 0x28
 8011bbc:	68fb      	ldr	r3, [r7, #12]
 8011bbe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011bc0:	b29b      	uxth	r3, r3
 8011bc2:	3b01      	subs	r3, #1
 8011bc4:	b29a      	uxth	r2, r3
 8011bc6:	68fb      	ldr	r3, [r7, #12]
 8011bc8:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011bca:	68fb      	ldr	r3, [r7, #12]
 8011bcc:	681b      	ldr	r3, [r3, #0]
 8011bce:	691a      	ldr	r2, [r3, #16]
 8011bd0:	68fb      	ldr	r3, [r7, #12]
 8011bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bd4:	b2d2      	uxtb	r2, r2
 8011bd6:	701a      	strb	r2, [r3, #0]
 8011bd8:	68fb      	ldr	r3, [r7, #12]
 8011bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bdc:	1c5a      	adds	r2, r3, #1
 8011bde:	68fb      	ldr	r3, [r7, #12]
 8011be0:	625a      	str	r2, [r3, #36]	; 0x24
 8011be2:	68fb      	ldr	r3, [r7, #12]
 8011be4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011be6:	3b01      	subs	r3, #1
 8011be8:	b29a      	uxth	r2, r3
 8011bea:	68fb      	ldr	r3, [r7, #12]
 8011bec:	851a      	strh	r2, [r3, #40]	; 0x28
 8011bee:	68fb      	ldr	r3, [r7, #12]
 8011bf0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011bf2:	b29b      	uxth	r3, r3
 8011bf4:	3b01      	subs	r3, #1
 8011bf6:	b29a      	uxth	r2, r3
 8011bf8:	68fb      	ldr	r3, [r7, #12]
 8011bfa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011bfc:	e0b8      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011bfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011c00:	9300      	str	r3, [sp, #0]
 8011c02:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011c04:	2200      	movs	r2, #0
 8011c06:	4966      	ldr	r1, [pc, #408]	; (8011da0 <HAL_I2C_Mem_Read+0x448>)
 8011c08:	68f8      	ldr	r0, [r7, #12]
 8011c0a:	f001 f81d 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8011c0e:	4603      	mov	r3, r0
 8011c10:	2b00      	cmp	r3, #0
 8011c12:	d001      	beq.n	8011c18 <HAL_I2C_Mem_Read+0x2c0>
 8011c14:	2301      	movs	r3, #1
 8011c16:	e0bf      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011c18:	68fb      	ldr	r3, [r7, #12]
 8011c1a:	681b      	ldr	r3, [r3, #0]
 8011c1c:	681a      	ldr	r2, [r3, #0]
 8011c1e:	68fb      	ldr	r3, [r7, #12]
 8011c20:	681b      	ldr	r3, [r3, #0]
 8011c22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011c26:	601a      	str	r2, [r3, #0]
 8011c28:	68fb      	ldr	r3, [r7, #12]
 8011c2a:	681b      	ldr	r3, [r3, #0]
 8011c2c:	691a      	ldr	r2, [r3, #16]
 8011c2e:	68fb      	ldr	r3, [r7, #12]
 8011c30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c32:	b2d2      	uxtb	r2, r2
 8011c34:	701a      	strb	r2, [r3, #0]
 8011c36:	68fb      	ldr	r3, [r7, #12]
 8011c38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c3a:	1c5a      	adds	r2, r3, #1
 8011c3c:	68fb      	ldr	r3, [r7, #12]
 8011c3e:	625a      	str	r2, [r3, #36]	; 0x24
 8011c40:	68fb      	ldr	r3, [r7, #12]
 8011c42:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011c44:	3b01      	subs	r3, #1
 8011c46:	b29a      	uxth	r2, r3
 8011c48:	68fb      	ldr	r3, [r7, #12]
 8011c4a:	851a      	strh	r2, [r3, #40]	; 0x28
 8011c4c:	68fb      	ldr	r3, [r7, #12]
 8011c4e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011c50:	b29b      	uxth	r3, r3
 8011c52:	3b01      	subs	r3, #1
 8011c54:	b29a      	uxth	r2, r3
 8011c56:	68fb      	ldr	r3, [r7, #12]
 8011c58:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011c5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011c5c:	9300      	str	r3, [sp, #0]
 8011c5e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011c60:	2200      	movs	r2, #0
 8011c62:	494f      	ldr	r1, [pc, #316]	; (8011da0 <HAL_I2C_Mem_Read+0x448>)
 8011c64:	68f8      	ldr	r0, [r7, #12]
 8011c66:	f000 ffef 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8011c6a:	4603      	mov	r3, r0
 8011c6c:	2b00      	cmp	r3, #0
 8011c6e:	d001      	beq.n	8011c74 <HAL_I2C_Mem_Read+0x31c>
 8011c70:	2301      	movs	r3, #1
 8011c72:	e091      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011c74:	68fb      	ldr	r3, [r7, #12]
 8011c76:	681b      	ldr	r3, [r3, #0]
 8011c78:	681a      	ldr	r2, [r3, #0]
 8011c7a:	68fb      	ldr	r3, [r7, #12]
 8011c7c:	681b      	ldr	r3, [r3, #0]
 8011c7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011c82:	601a      	str	r2, [r3, #0]
 8011c84:	68fb      	ldr	r3, [r7, #12]
 8011c86:	681b      	ldr	r3, [r3, #0]
 8011c88:	691a      	ldr	r2, [r3, #16]
 8011c8a:	68fb      	ldr	r3, [r7, #12]
 8011c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c8e:	b2d2      	uxtb	r2, r2
 8011c90:	701a      	strb	r2, [r3, #0]
 8011c92:	68fb      	ldr	r3, [r7, #12]
 8011c94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c96:	1c5a      	adds	r2, r3, #1
 8011c98:	68fb      	ldr	r3, [r7, #12]
 8011c9a:	625a      	str	r2, [r3, #36]	; 0x24
 8011c9c:	68fb      	ldr	r3, [r7, #12]
 8011c9e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011ca0:	3b01      	subs	r3, #1
 8011ca2:	b29a      	uxth	r2, r3
 8011ca4:	68fb      	ldr	r3, [r7, #12]
 8011ca6:	851a      	strh	r2, [r3, #40]	; 0x28
 8011ca8:	68fb      	ldr	r3, [r7, #12]
 8011caa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011cac:	b29b      	uxth	r3, r3
 8011cae:	3b01      	subs	r3, #1
 8011cb0:	b29a      	uxth	r2, r3
 8011cb2:	68fb      	ldr	r3, [r7, #12]
 8011cb4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011cb6:	68fb      	ldr	r3, [r7, #12]
 8011cb8:	681b      	ldr	r3, [r3, #0]
 8011cba:	691a      	ldr	r2, [r3, #16]
 8011cbc:	68fb      	ldr	r3, [r7, #12]
 8011cbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011cc0:	b2d2      	uxtb	r2, r2
 8011cc2:	701a      	strb	r2, [r3, #0]
 8011cc4:	68fb      	ldr	r3, [r7, #12]
 8011cc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011cc8:	1c5a      	adds	r2, r3, #1
 8011cca:	68fb      	ldr	r3, [r7, #12]
 8011ccc:	625a      	str	r2, [r3, #36]	; 0x24
 8011cce:	68fb      	ldr	r3, [r7, #12]
 8011cd0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011cd2:	3b01      	subs	r3, #1
 8011cd4:	b29a      	uxth	r2, r3
 8011cd6:	68fb      	ldr	r3, [r7, #12]
 8011cd8:	851a      	strh	r2, [r3, #40]	; 0x28
 8011cda:	68fb      	ldr	r3, [r7, #12]
 8011cdc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011cde:	b29b      	uxth	r3, r3
 8011ce0:	3b01      	subs	r3, #1
 8011ce2:	b29a      	uxth	r2, r3
 8011ce4:	68fb      	ldr	r3, [r7, #12]
 8011ce6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011ce8:	e042      	b.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011cea:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011cec:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8011cee:	68f8      	ldr	r0, [r7, #12]
 8011cf0:	f001 f902 	bl	8012ef8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8011cf4:	4603      	mov	r3, r0
 8011cf6:	2b00      	cmp	r3, #0
 8011cf8:	d001      	beq.n	8011cfe <HAL_I2C_Mem_Read+0x3a6>
 8011cfa:	2301      	movs	r3, #1
 8011cfc:	e04c      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011cfe:	68fb      	ldr	r3, [r7, #12]
 8011d00:	681b      	ldr	r3, [r3, #0]
 8011d02:	691a      	ldr	r2, [r3, #16]
 8011d04:	68fb      	ldr	r3, [r7, #12]
 8011d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d08:	b2d2      	uxtb	r2, r2
 8011d0a:	701a      	strb	r2, [r3, #0]
 8011d0c:	68fb      	ldr	r3, [r7, #12]
 8011d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d10:	1c5a      	adds	r2, r3, #1
 8011d12:	68fb      	ldr	r3, [r7, #12]
 8011d14:	625a      	str	r2, [r3, #36]	; 0x24
 8011d16:	68fb      	ldr	r3, [r7, #12]
 8011d18:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011d1a:	3b01      	subs	r3, #1
 8011d1c:	b29a      	uxth	r2, r3
 8011d1e:	68fb      	ldr	r3, [r7, #12]
 8011d20:	851a      	strh	r2, [r3, #40]	; 0x28
 8011d22:	68fb      	ldr	r3, [r7, #12]
 8011d24:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011d26:	b29b      	uxth	r3, r3
 8011d28:	3b01      	subs	r3, #1
 8011d2a:	b29a      	uxth	r2, r3
 8011d2c:	68fb      	ldr	r3, [r7, #12]
 8011d2e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011d30:	68fb      	ldr	r3, [r7, #12]
 8011d32:	681b      	ldr	r3, [r3, #0]
 8011d34:	695b      	ldr	r3, [r3, #20]
 8011d36:	f003 0304 	and.w	r3, r3, #4
 8011d3a:	2b04      	cmp	r3, #4
 8011d3c:	d118      	bne.n	8011d70 <HAL_I2C_Mem_Read+0x418>
 8011d3e:	68fb      	ldr	r3, [r7, #12]
 8011d40:	681b      	ldr	r3, [r3, #0]
 8011d42:	691a      	ldr	r2, [r3, #16]
 8011d44:	68fb      	ldr	r3, [r7, #12]
 8011d46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d48:	b2d2      	uxtb	r2, r2
 8011d4a:	701a      	strb	r2, [r3, #0]
 8011d4c:	68fb      	ldr	r3, [r7, #12]
 8011d4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d50:	1c5a      	adds	r2, r3, #1
 8011d52:	68fb      	ldr	r3, [r7, #12]
 8011d54:	625a      	str	r2, [r3, #36]	; 0x24
 8011d56:	68fb      	ldr	r3, [r7, #12]
 8011d58:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011d5a:	3b01      	subs	r3, #1
 8011d5c:	b29a      	uxth	r2, r3
 8011d5e:	68fb      	ldr	r3, [r7, #12]
 8011d60:	851a      	strh	r2, [r3, #40]	; 0x28
 8011d62:	68fb      	ldr	r3, [r7, #12]
 8011d64:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011d66:	b29b      	uxth	r3, r3
 8011d68:	3b01      	subs	r3, #1
 8011d6a:	b29a      	uxth	r2, r3
 8011d6c:	68fb      	ldr	r3, [r7, #12]
 8011d6e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011d70:	68fb      	ldr	r3, [r7, #12]
 8011d72:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011d74:	2b00      	cmp	r3, #0
 8011d76:	f47f aec2 	bne.w	8011afe <HAL_I2C_Mem_Read+0x1a6>
 8011d7a:	68fb      	ldr	r3, [r7, #12]
 8011d7c:	2220      	movs	r2, #32
 8011d7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011d82:	68fb      	ldr	r3, [r7, #12]
 8011d84:	2200      	movs	r2, #0
 8011d86:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011d8a:	68fb      	ldr	r3, [r7, #12]
 8011d8c:	2200      	movs	r2, #0
 8011d8e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011d92:	2300      	movs	r3, #0
 8011d94:	e000      	b.n	8011d98 <HAL_I2C_Mem_Read+0x440>
 8011d96:	2302      	movs	r3, #2
 8011d98:	4618      	mov	r0, r3
 8011d9a:	3728      	adds	r7, #40	; 0x28
 8011d9c:	46bd      	mov	sp, r7
 8011d9e:	bd80      	pop	{r7, pc}
 8011da0:	00010004 	.word	0x00010004

08011da4 <HAL_I2C_Mem_Read_DMA>:
 8011da4:	b580      	push	{r7, lr}
 8011da6:	b08c      	sub	sp, #48	; 0x30
 8011da8:	af02      	add	r7, sp, #8
 8011daa:	60f8      	str	r0, [r7, #12]
 8011dac:	4608      	mov	r0, r1
 8011dae:	4611      	mov	r1, r2
 8011db0:	461a      	mov	r2, r3
 8011db2:	4603      	mov	r3, r0
 8011db4:	817b      	strh	r3, [r7, #10]
 8011db6:	460b      	mov	r3, r1
 8011db8:	813b      	strh	r3, [r7, #8]
 8011dba:	4613      	mov	r3, r2
 8011dbc:	80fb      	strh	r3, [r7, #6]
 8011dbe:	f7fd fbbd 	bl	800f53c <HAL_GetTick>
 8011dc2:	6278      	str	r0, [r7, #36]	; 0x24
 8011dc4:	2300      	movs	r3, #0
 8011dc6:	61fb      	str	r3, [r7, #28]
 8011dc8:	68fb      	ldr	r3, [r7, #12]
 8011dca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8011dce:	b2db      	uxtb	r3, r3
 8011dd0:	2b20      	cmp	r3, #32
 8011dd2:	f040 8176 	bne.w	80120c2 <HAL_I2C_Mem_Read_DMA+0x31e>
 8011dd6:	4b95      	ldr	r3, [pc, #596]	; (801202c <HAL_I2C_Mem_Read_DMA+0x288>)
 8011dd8:	681b      	ldr	r3, [r3, #0]
 8011dda:	08db      	lsrs	r3, r3, #3
 8011ddc:	4a94      	ldr	r2, [pc, #592]	; (8012030 <HAL_I2C_Mem_Read_DMA+0x28c>)
 8011dde:	fba2 2303 	umull	r2, r3, r2, r3
 8011de2:	0a1a      	lsrs	r2, r3, #8
 8011de4:	4613      	mov	r3, r2
 8011de6:	009b      	lsls	r3, r3, #2
 8011de8:	4413      	add	r3, r2
 8011dea:	009a      	lsls	r2, r3, #2
 8011dec:	4413      	add	r3, r2
 8011dee:	61fb      	str	r3, [r7, #28]
 8011df0:	69fb      	ldr	r3, [r7, #28]
 8011df2:	3b01      	subs	r3, #1
 8011df4:	61fb      	str	r3, [r7, #28]
 8011df6:	69fb      	ldr	r3, [r7, #28]
 8011df8:	2b00      	cmp	r3, #0
 8011dfa:	d116      	bne.n	8011e2a <HAL_I2C_Mem_Read_DMA+0x86>
 8011dfc:	68fb      	ldr	r3, [r7, #12]
 8011dfe:	2200      	movs	r2, #0
 8011e00:	631a      	str	r2, [r3, #48]	; 0x30
 8011e02:	68fb      	ldr	r3, [r7, #12]
 8011e04:	2220      	movs	r2, #32
 8011e06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011e0a:	68fb      	ldr	r3, [r7, #12]
 8011e0c:	2200      	movs	r2, #0
 8011e0e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011e12:	68fb      	ldr	r3, [r7, #12]
 8011e14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e16:	f043 0220 	orr.w	r2, r3, #32
 8011e1a:	68fb      	ldr	r3, [r7, #12]
 8011e1c:	641a      	str	r2, [r3, #64]	; 0x40
 8011e1e:	68fb      	ldr	r3, [r7, #12]
 8011e20:	2200      	movs	r2, #0
 8011e22:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011e26:	2301      	movs	r3, #1
 8011e28:	e14c      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8011e2a:	68fb      	ldr	r3, [r7, #12]
 8011e2c:	681b      	ldr	r3, [r3, #0]
 8011e2e:	699b      	ldr	r3, [r3, #24]
 8011e30:	f003 0302 	and.w	r3, r3, #2
 8011e34:	2b02      	cmp	r3, #2
 8011e36:	d0db      	beq.n	8011df0 <HAL_I2C_Mem_Read_DMA+0x4c>
 8011e38:	68fb      	ldr	r3, [r7, #12]
 8011e3a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8011e3e:	2b01      	cmp	r3, #1
 8011e40:	d101      	bne.n	8011e46 <HAL_I2C_Mem_Read_DMA+0xa2>
 8011e42:	2302      	movs	r3, #2
 8011e44:	e13e      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8011e46:	68fb      	ldr	r3, [r7, #12]
 8011e48:	2201      	movs	r2, #1
 8011e4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011e4e:	68fb      	ldr	r3, [r7, #12]
 8011e50:	681b      	ldr	r3, [r3, #0]
 8011e52:	681b      	ldr	r3, [r3, #0]
 8011e54:	f003 0301 	and.w	r3, r3, #1
 8011e58:	2b01      	cmp	r3, #1
 8011e5a:	d007      	beq.n	8011e6c <HAL_I2C_Mem_Read_DMA+0xc8>
 8011e5c:	68fb      	ldr	r3, [r7, #12]
 8011e5e:	681b      	ldr	r3, [r3, #0]
 8011e60:	681a      	ldr	r2, [r3, #0]
 8011e62:	68fb      	ldr	r3, [r7, #12]
 8011e64:	681b      	ldr	r3, [r3, #0]
 8011e66:	f042 0201 	orr.w	r2, r2, #1
 8011e6a:	601a      	str	r2, [r3, #0]
 8011e6c:	68fb      	ldr	r3, [r7, #12]
 8011e6e:	681b      	ldr	r3, [r3, #0]
 8011e70:	681a      	ldr	r2, [r3, #0]
 8011e72:	68fb      	ldr	r3, [r7, #12]
 8011e74:	681b      	ldr	r3, [r3, #0]
 8011e76:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8011e7a:	601a      	str	r2, [r3, #0]
 8011e7c:	68fb      	ldr	r3, [r7, #12]
 8011e7e:	2222      	movs	r2, #34	; 0x22
 8011e80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011e84:	68fb      	ldr	r3, [r7, #12]
 8011e86:	2240      	movs	r2, #64	; 0x40
 8011e88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011e8c:	68fb      	ldr	r3, [r7, #12]
 8011e8e:	2200      	movs	r2, #0
 8011e90:	641a      	str	r2, [r3, #64]	; 0x40
 8011e92:	68fb      	ldr	r3, [r7, #12]
 8011e94:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8011e96:	625a      	str	r2, [r3, #36]	; 0x24
 8011e98:	68fb      	ldr	r3, [r7, #12]
 8011e9a:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8011e9c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011e9e:	68fb      	ldr	r3, [r7, #12]
 8011ea0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011ea2:	b29a      	uxth	r2, r3
 8011ea4:	68fb      	ldr	r3, [r7, #12]
 8011ea6:	851a      	strh	r2, [r3, #40]	; 0x28
 8011ea8:	68fb      	ldr	r3, [r7, #12]
 8011eaa:	4a62      	ldr	r2, [pc, #392]	; (8012034 <HAL_I2C_Mem_Read_DMA+0x290>)
 8011eac:	62da      	str	r2, [r3, #44]	; 0x2c
 8011eae:	897a      	ldrh	r2, [r7, #10]
 8011eb0:	68fb      	ldr	r3, [r7, #12]
 8011eb2:	645a      	str	r2, [r3, #68]	; 0x44
 8011eb4:	893a      	ldrh	r2, [r7, #8]
 8011eb6:	68fb      	ldr	r3, [r7, #12]
 8011eb8:	649a      	str	r2, [r3, #72]	; 0x48
 8011eba:	88fa      	ldrh	r2, [r7, #6]
 8011ebc:	68fb      	ldr	r3, [r7, #12]
 8011ebe:	64da      	str	r2, [r3, #76]	; 0x4c
 8011ec0:	68fb      	ldr	r3, [r7, #12]
 8011ec2:	2200      	movs	r2, #0
 8011ec4:	651a      	str	r2, [r3, #80]	; 0x50
 8011ec6:	68fb      	ldr	r3, [r7, #12]
 8011ec8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011eca:	2b00      	cmp	r3, #0
 8011ecc:	f000 80cc 	beq.w	8012068 <HAL_I2C_Mem_Read_DMA+0x2c4>
 8011ed0:	68fb      	ldr	r3, [r7, #12]
 8011ed2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ed4:	2b00      	cmp	r3, #0
 8011ed6:	d02d      	beq.n	8011f34 <HAL_I2C_Mem_Read_DMA+0x190>
 8011ed8:	68fb      	ldr	r3, [r7, #12]
 8011eda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011edc:	4a56      	ldr	r2, [pc, #344]	; (8012038 <HAL_I2C_Mem_Read_DMA+0x294>)
 8011ede:	63da      	str	r2, [r3, #60]	; 0x3c
 8011ee0:	68fb      	ldr	r3, [r7, #12]
 8011ee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ee4:	4a55      	ldr	r2, [pc, #340]	; (801203c <HAL_I2C_Mem_Read_DMA+0x298>)
 8011ee6:	64da      	str	r2, [r3, #76]	; 0x4c
 8011ee8:	68fb      	ldr	r3, [r7, #12]
 8011eea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011eec:	2200      	movs	r2, #0
 8011eee:	641a      	str	r2, [r3, #64]	; 0x40
 8011ef0:	68fb      	ldr	r3, [r7, #12]
 8011ef2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ef4:	2200      	movs	r2, #0
 8011ef6:	645a      	str	r2, [r3, #68]	; 0x44
 8011ef8:	68fb      	ldr	r3, [r7, #12]
 8011efa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011efc:	2200      	movs	r2, #0
 8011efe:	649a      	str	r2, [r3, #72]	; 0x48
 8011f00:	68fb      	ldr	r3, [r7, #12]
 8011f02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011f04:	2200      	movs	r2, #0
 8011f06:	651a      	str	r2, [r3, #80]	; 0x50
 8011f08:	68fb      	ldr	r3, [r7, #12]
 8011f0a:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8011f0c:	68fb      	ldr	r3, [r7, #12]
 8011f0e:	681b      	ldr	r3, [r3, #0]
 8011f10:	3310      	adds	r3, #16
 8011f12:	4619      	mov	r1, r3
 8011f14:	68fb      	ldr	r3, [r7, #12]
 8011f16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f18:	461a      	mov	r2, r3
 8011f1a:	68fb      	ldr	r3, [r7, #12]
 8011f1c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011f1e:	f7fe fdaf 	bl	8010a80 <HAL_DMA_Start_IT>
 8011f22:	4603      	mov	r3, r0
 8011f24:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8011f28:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8011f2c:	2b00      	cmp	r3, #0
 8011f2e:	f040 8087 	bne.w	8012040 <HAL_I2C_Mem_Read_DMA+0x29c>
 8011f32:	e013      	b.n	8011f5c <HAL_I2C_Mem_Read_DMA+0x1b8>
 8011f34:	68fb      	ldr	r3, [r7, #12]
 8011f36:	2220      	movs	r2, #32
 8011f38:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011f3c:	68fb      	ldr	r3, [r7, #12]
 8011f3e:	2200      	movs	r2, #0
 8011f40:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011f44:	68fb      	ldr	r3, [r7, #12]
 8011f46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011f48:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8011f4c:	68fb      	ldr	r3, [r7, #12]
 8011f4e:	641a      	str	r2, [r3, #64]	; 0x40
 8011f50:	68fb      	ldr	r3, [r7, #12]
 8011f52:	2200      	movs	r2, #0
 8011f54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011f58:	2301      	movs	r3, #1
 8011f5a:	e0b3      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8011f5c:	88f8      	ldrh	r0, [r7, #6]
 8011f5e:	893a      	ldrh	r2, [r7, #8]
 8011f60:	8979      	ldrh	r1, [r7, #10]
 8011f62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011f64:	9301      	str	r3, [sp, #4]
 8011f66:	2323      	movs	r3, #35	; 0x23
 8011f68:	9300      	str	r3, [sp, #0]
 8011f6a:	4603      	mov	r3, r0
 8011f6c:	68f8      	ldr	r0, [r7, #12]
 8011f6e:	f000 fbc9 	bl	8012704 <I2C_RequestMemoryRead>
 8011f72:	4603      	mov	r3, r0
 8011f74:	2b00      	cmp	r3, #0
 8011f76:	d023      	beq.n	8011fc0 <HAL_I2C_Mem_Read_DMA+0x21c>
 8011f78:	68fb      	ldr	r3, [r7, #12]
 8011f7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011f7c:	4618      	mov	r0, r3
 8011f7e:	f7fe fe47 	bl	8010c10 <HAL_DMA_Abort_IT>
 8011f82:	4603      	mov	r3, r0
 8011f84:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8011f88:	68fb      	ldr	r3, [r7, #12]
 8011f8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011f8c:	2200      	movs	r2, #0
 8011f8e:	63da      	str	r2, [r3, #60]	; 0x3c
 8011f90:	68fb      	ldr	r3, [r7, #12]
 8011f92:	681b      	ldr	r3, [r3, #0]
 8011f94:	681a      	ldr	r2, [r3, #0]
 8011f96:	68fb      	ldr	r3, [r7, #12]
 8011f98:	681b      	ldr	r3, [r3, #0]
 8011f9a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011f9e:	601a      	str	r2, [r3, #0]
 8011fa0:	68fb      	ldr	r3, [r7, #12]
 8011fa2:	2200      	movs	r2, #0
 8011fa4:	851a      	strh	r2, [r3, #40]	; 0x28
 8011fa6:	68fb      	ldr	r3, [r7, #12]
 8011fa8:	2200      	movs	r2, #0
 8011faa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011fac:	68fb      	ldr	r3, [r7, #12]
 8011fae:	681b      	ldr	r3, [r3, #0]
 8011fb0:	681a      	ldr	r2, [r3, #0]
 8011fb2:	68fb      	ldr	r3, [r7, #12]
 8011fb4:	681b      	ldr	r3, [r3, #0]
 8011fb6:	f022 0201 	bic.w	r2, r2, #1
 8011fba:	601a      	str	r2, [r3, #0]
 8011fbc:	2301      	movs	r3, #1
 8011fbe:	e081      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8011fc0:	68fb      	ldr	r3, [r7, #12]
 8011fc2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011fc4:	2b01      	cmp	r3, #1
 8011fc6:	d108      	bne.n	8011fda <HAL_I2C_Mem_Read_DMA+0x236>
 8011fc8:	68fb      	ldr	r3, [r7, #12]
 8011fca:	681b      	ldr	r3, [r3, #0]
 8011fcc:	681a      	ldr	r2, [r3, #0]
 8011fce:	68fb      	ldr	r3, [r7, #12]
 8011fd0:	681b      	ldr	r3, [r3, #0]
 8011fd2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011fd6:	601a      	str	r2, [r3, #0]
 8011fd8:	e007      	b.n	8011fea <HAL_I2C_Mem_Read_DMA+0x246>
 8011fda:	68fb      	ldr	r3, [r7, #12]
 8011fdc:	681b      	ldr	r3, [r3, #0]
 8011fde:	685a      	ldr	r2, [r3, #4]
 8011fe0:	68fb      	ldr	r3, [r7, #12]
 8011fe2:	681b      	ldr	r3, [r3, #0]
 8011fe4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8011fe8:	605a      	str	r2, [r3, #4]
 8011fea:	2300      	movs	r3, #0
 8011fec:	61bb      	str	r3, [r7, #24]
 8011fee:	68fb      	ldr	r3, [r7, #12]
 8011ff0:	681b      	ldr	r3, [r3, #0]
 8011ff2:	695b      	ldr	r3, [r3, #20]
 8011ff4:	61bb      	str	r3, [r7, #24]
 8011ff6:	68fb      	ldr	r3, [r7, #12]
 8011ff8:	681b      	ldr	r3, [r3, #0]
 8011ffa:	699b      	ldr	r3, [r3, #24]
 8011ffc:	61bb      	str	r3, [r7, #24]
 8011ffe:	69bb      	ldr	r3, [r7, #24]
 8012000:	68fb      	ldr	r3, [r7, #12]
 8012002:	2200      	movs	r2, #0
 8012004:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012008:	68fb      	ldr	r3, [r7, #12]
 801200a:	681b      	ldr	r3, [r3, #0]
 801200c:	685a      	ldr	r2, [r3, #4]
 801200e:	68fb      	ldr	r3, [r7, #12]
 8012010:	681b      	ldr	r3, [r3, #0]
 8012012:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8012016:	605a      	str	r2, [r3, #4]
 8012018:	68fb      	ldr	r3, [r7, #12]
 801201a:	681b      	ldr	r3, [r3, #0]
 801201c:	685a      	ldr	r2, [r3, #4]
 801201e:	68fb      	ldr	r3, [r7, #12]
 8012020:	681b      	ldr	r3, [r3, #0]
 8012022:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8012026:	605a      	str	r2, [r3, #4]
 8012028:	e049      	b.n	80120be <HAL_I2C_Mem_Read_DMA+0x31a>
 801202a:	bf00      	nop
 801202c:	20000004 	.word	0x20000004
 8012030:	14f8b589 	.word	0x14f8b589
 8012034:	ffff0000 	.word	0xffff0000
 8012038:	080128d5 	.word	0x080128d5
 801203c:	08012a7f 	.word	0x08012a7f
 8012040:	68fb      	ldr	r3, [r7, #12]
 8012042:	2220      	movs	r2, #32
 8012044:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012048:	68fb      	ldr	r3, [r7, #12]
 801204a:	2200      	movs	r2, #0
 801204c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012050:	68fb      	ldr	r3, [r7, #12]
 8012052:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012054:	f043 0210 	orr.w	r2, r3, #16
 8012058:	68fb      	ldr	r3, [r7, #12]
 801205a:	641a      	str	r2, [r3, #64]	; 0x40
 801205c:	68fb      	ldr	r3, [r7, #12]
 801205e:	2200      	movs	r2, #0
 8012060:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012064:	2301      	movs	r3, #1
 8012066:	e02d      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8012068:	88f8      	ldrh	r0, [r7, #6]
 801206a:	893a      	ldrh	r2, [r7, #8]
 801206c:	8979      	ldrh	r1, [r7, #10]
 801206e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012070:	9301      	str	r3, [sp, #4]
 8012072:	2323      	movs	r3, #35	; 0x23
 8012074:	9300      	str	r3, [sp, #0]
 8012076:	4603      	mov	r3, r0
 8012078:	68f8      	ldr	r0, [r7, #12]
 801207a:	f000 fb43 	bl	8012704 <I2C_RequestMemoryRead>
 801207e:	4603      	mov	r3, r0
 8012080:	2b00      	cmp	r3, #0
 8012082:	d001      	beq.n	8012088 <HAL_I2C_Mem_Read_DMA+0x2e4>
 8012084:	2301      	movs	r3, #1
 8012086:	e01d      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 8012088:	2300      	movs	r3, #0
 801208a:	617b      	str	r3, [r7, #20]
 801208c:	68fb      	ldr	r3, [r7, #12]
 801208e:	681b      	ldr	r3, [r3, #0]
 8012090:	695b      	ldr	r3, [r3, #20]
 8012092:	617b      	str	r3, [r7, #20]
 8012094:	68fb      	ldr	r3, [r7, #12]
 8012096:	681b      	ldr	r3, [r3, #0]
 8012098:	699b      	ldr	r3, [r3, #24]
 801209a:	617b      	str	r3, [r7, #20]
 801209c:	697b      	ldr	r3, [r7, #20]
 801209e:	68fb      	ldr	r3, [r7, #12]
 80120a0:	681b      	ldr	r3, [r3, #0]
 80120a2:	681a      	ldr	r2, [r3, #0]
 80120a4:	68fb      	ldr	r3, [r7, #12]
 80120a6:	681b      	ldr	r3, [r3, #0]
 80120a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80120ac:	601a      	str	r2, [r3, #0]
 80120ae:	68fb      	ldr	r3, [r7, #12]
 80120b0:	2220      	movs	r2, #32
 80120b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80120b6:	68fb      	ldr	r3, [r7, #12]
 80120b8:	2200      	movs	r2, #0
 80120ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80120be:	2300      	movs	r3, #0
 80120c0:	e000      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x320>
 80120c2:	2302      	movs	r3, #2
 80120c4:	4618      	mov	r0, r3
 80120c6:	3728      	adds	r7, #40	; 0x28
 80120c8:	46bd      	mov	sp, r7
 80120ca:	bd80      	pop	{r7, pc}

080120cc <HAL_I2C_ER_IRQHandler>:
 80120cc:	b580      	push	{r7, lr}
 80120ce:	b08a      	sub	sp, #40	; 0x28
 80120d0:	af00      	add	r7, sp, #0
 80120d2:	6078      	str	r0, [r7, #4]
 80120d4:	687b      	ldr	r3, [r7, #4]
 80120d6:	681b      	ldr	r3, [r3, #0]
 80120d8:	695b      	ldr	r3, [r3, #20]
 80120da:	623b      	str	r3, [r7, #32]
 80120dc:	687b      	ldr	r3, [r7, #4]
 80120de:	681b      	ldr	r3, [r3, #0]
 80120e0:	685b      	ldr	r3, [r3, #4]
 80120e2:	61fb      	str	r3, [r7, #28]
 80120e4:	2300      	movs	r3, #0
 80120e6:	627b      	str	r3, [r7, #36]	; 0x24
 80120e8:	687b      	ldr	r3, [r7, #4]
 80120ea:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80120ee:	76fb      	strb	r3, [r7, #27]
 80120f0:	6a3b      	ldr	r3, [r7, #32]
 80120f2:	0a1b      	lsrs	r3, r3, #8
 80120f4:	f003 0301 	and.w	r3, r3, #1
 80120f8:	2b00      	cmp	r3, #0
 80120fa:	d00e      	beq.n	801211a <HAL_I2C_ER_IRQHandler+0x4e>
 80120fc:	69fb      	ldr	r3, [r7, #28]
 80120fe:	0a1b      	lsrs	r3, r3, #8
 8012100:	f003 0301 	and.w	r3, r3, #1
 8012104:	2b00      	cmp	r3, #0
 8012106:	d008      	beq.n	801211a <HAL_I2C_ER_IRQHandler+0x4e>
 8012108:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801210a:	f043 0301 	orr.w	r3, r3, #1
 801210e:	627b      	str	r3, [r7, #36]	; 0x24
 8012110:	687b      	ldr	r3, [r7, #4]
 8012112:	681b      	ldr	r3, [r3, #0]
 8012114:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8012118:	615a      	str	r2, [r3, #20]
 801211a:	6a3b      	ldr	r3, [r7, #32]
 801211c:	0a5b      	lsrs	r3, r3, #9
 801211e:	f003 0301 	and.w	r3, r3, #1
 8012122:	2b00      	cmp	r3, #0
 8012124:	d00e      	beq.n	8012144 <HAL_I2C_ER_IRQHandler+0x78>
 8012126:	69fb      	ldr	r3, [r7, #28]
 8012128:	0a1b      	lsrs	r3, r3, #8
 801212a:	f003 0301 	and.w	r3, r3, #1
 801212e:	2b00      	cmp	r3, #0
 8012130:	d008      	beq.n	8012144 <HAL_I2C_ER_IRQHandler+0x78>
 8012132:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012134:	f043 0302 	orr.w	r3, r3, #2
 8012138:	627b      	str	r3, [r7, #36]	; 0x24
 801213a:	687b      	ldr	r3, [r7, #4]
 801213c:	681b      	ldr	r3, [r3, #0]
 801213e:	f46f 7200 	mvn.w	r2, #512	; 0x200
 8012142:	615a      	str	r2, [r3, #20]
 8012144:	6a3b      	ldr	r3, [r7, #32]
 8012146:	0a9b      	lsrs	r3, r3, #10
 8012148:	f003 0301 	and.w	r3, r3, #1
 801214c:	2b00      	cmp	r3, #0
 801214e:	d03f      	beq.n	80121d0 <HAL_I2C_ER_IRQHandler+0x104>
 8012150:	69fb      	ldr	r3, [r7, #28]
 8012152:	0a1b      	lsrs	r3, r3, #8
 8012154:	f003 0301 	and.w	r3, r3, #1
 8012158:	2b00      	cmp	r3, #0
 801215a:	d039      	beq.n	80121d0 <HAL_I2C_ER_IRQHandler+0x104>
 801215c:	7efb      	ldrb	r3, [r7, #27]
 801215e:	76bb      	strb	r3, [r7, #26]
 8012160:	687b      	ldr	r3, [r7, #4]
 8012162:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8012164:	b29b      	uxth	r3, r3
 8012166:	617b      	str	r3, [r7, #20]
 8012168:	687b      	ldr	r3, [r7, #4]
 801216a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801216e:	74fb      	strb	r3, [r7, #19]
 8012170:	687b      	ldr	r3, [r7, #4]
 8012172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012174:	60fb      	str	r3, [r7, #12]
 8012176:	7ebb      	ldrb	r3, [r7, #26]
 8012178:	2b20      	cmp	r3, #32
 801217a:	d112      	bne.n	80121a2 <HAL_I2C_ER_IRQHandler+0xd6>
 801217c:	697b      	ldr	r3, [r7, #20]
 801217e:	2b00      	cmp	r3, #0
 8012180:	d10f      	bne.n	80121a2 <HAL_I2C_ER_IRQHandler+0xd6>
 8012182:	7cfb      	ldrb	r3, [r7, #19]
 8012184:	2b21      	cmp	r3, #33	; 0x21
 8012186:	d008      	beq.n	801219a <HAL_I2C_ER_IRQHandler+0xce>
 8012188:	7cfb      	ldrb	r3, [r7, #19]
 801218a:	2b29      	cmp	r3, #41	; 0x29
 801218c:	d005      	beq.n	801219a <HAL_I2C_ER_IRQHandler+0xce>
 801218e:	7cfb      	ldrb	r3, [r7, #19]
 8012190:	2b28      	cmp	r3, #40	; 0x28
 8012192:	d106      	bne.n	80121a2 <HAL_I2C_ER_IRQHandler+0xd6>
 8012194:	68fb      	ldr	r3, [r7, #12]
 8012196:	2b21      	cmp	r3, #33	; 0x21
 8012198:	d103      	bne.n	80121a2 <HAL_I2C_ER_IRQHandler+0xd6>
 801219a:	6878      	ldr	r0, [r7, #4]
 801219c:	f000 f87a 	bl	8012294 <I2C_Slave_AF>
 80121a0:	e016      	b.n	80121d0 <HAL_I2C_ER_IRQHandler+0x104>
 80121a2:	687b      	ldr	r3, [r7, #4]
 80121a4:	681b      	ldr	r3, [r3, #0]
 80121a6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80121aa:	615a      	str	r2, [r3, #20]
 80121ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80121ae:	f043 0304 	orr.w	r3, r3, #4
 80121b2:	627b      	str	r3, [r7, #36]	; 0x24
 80121b4:	7efb      	ldrb	r3, [r7, #27]
 80121b6:	2b10      	cmp	r3, #16
 80121b8:	d002      	beq.n	80121c0 <HAL_I2C_ER_IRQHandler+0xf4>
 80121ba:	7efb      	ldrb	r3, [r7, #27]
 80121bc:	2b40      	cmp	r3, #64	; 0x40
 80121be:	d107      	bne.n	80121d0 <HAL_I2C_ER_IRQHandler+0x104>
 80121c0:	687b      	ldr	r3, [r7, #4]
 80121c2:	681b      	ldr	r3, [r3, #0]
 80121c4:	681a      	ldr	r2, [r3, #0]
 80121c6:	687b      	ldr	r3, [r7, #4]
 80121c8:	681b      	ldr	r3, [r3, #0]
 80121ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80121ce:	601a      	str	r2, [r3, #0]
 80121d0:	6a3b      	ldr	r3, [r7, #32]
 80121d2:	0adb      	lsrs	r3, r3, #11
 80121d4:	f003 0301 	and.w	r3, r3, #1
 80121d8:	2b00      	cmp	r3, #0
 80121da:	d00e      	beq.n	80121fa <HAL_I2C_ER_IRQHandler+0x12e>
 80121dc:	69fb      	ldr	r3, [r7, #28]
 80121de:	0a1b      	lsrs	r3, r3, #8
 80121e0:	f003 0301 	and.w	r3, r3, #1
 80121e4:	2b00      	cmp	r3, #0
 80121e6:	d008      	beq.n	80121fa <HAL_I2C_ER_IRQHandler+0x12e>
 80121e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80121ea:	f043 0308 	orr.w	r3, r3, #8
 80121ee:	627b      	str	r3, [r7, #36]	; 0x24
 80121f0:	687b      	ldr	r3, [r7, #4]
 80121f2:	681b      	ldr	r3, [r3, #0]
 80121f4:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 80121f8:	615a      	str	r2, [r3, #20]
 80121fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80121fc:	2b00      	cmp	r3, #0
 80121fe:	d008      	beq.n	8012212 <HAL_I2C_ER_IRQHandler+0x146>
 8012200:	687b      	ldr	r3, [r7, #4]
 8012202:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8012204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012206:	431a      	orrs	r2, r3
 8012208:	687b      	ldr	r3, [r7, #4]
 801220a:	641a      	str	r2, [r3, #64]	; 0x40
 801220c:	6878      	ldr	r0, [r7, #4]
 801220e:	f000 f8b1 	bl	8012374 <I2C_ITError>
 8012212:	bf00      	nop
 8012214:	3728      	adds	r7, #40	; 0x28
 8012216:	46bd      	mov	sp, r7
 8012218:	bd80      	pop	{r7, pc}

0801221a <HAL_I2C_MasterRxCpltCallback>:
 801221a:	b480      	push	{r7}
 801221c:	b083      	sub	sp, #12
 801221e:	af00      	add	r7, sp, #0
 8012220:	6078      	str	r0, [r7, #4]
 8012222:	bf00      	nop
 8012224:	370c      	adds	r7, #12
 8012226:	46bd      	mov	sp, r7
 8012228:	f85d 7b04 	ldr.w	r7, [sp], #4
 801222c:	4770      	bx	lr

0801222e <HAL_I2C_SlaveTxCpltCallback>:
 801222e:	b480      	push	{r7}
 8012230:	b083      	sub	sp, #12
 8012232:	af00      	add	r7, sp, #0
 8012234:	6078      	str	r0, [r7, #4]
 8012236:	bf00      	nop
 8012238:	370c      	adds	r7, #12
 801223a:	46bd      	mov	sp, r7
 801223c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012240:	4770      	bx	lr

08012242 <HAL_I2C_SlaveRxCpltCallback>:
 8012242:	b480      	push	{r7}
 8012244:	b083      	sub	sp, #12
 8012246:	af00      	add	r7, sp, #0
 8012248:	6078      	str	r0, [r7, #4]
 801224a:	bf00      	nop
 801224c:	370c      	adds	r7, #12
 801224e:	46bd      	mov	sp, r7
 8012250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012254:	4770      	bx	lr

08012256 <HAL_I2C_ListenCpltCallback>:
 8012256:	b480      	push	{r7}
 8012258:	b083      	sub	sp, #12
 801225a:	af00      	add	r7, sp, #0
 801225c:	6078      	str	r0, [r7, #4]
 801225e:	bf00      	nop
 8012260:	370c      	adds	r7, #12
 8012262:	46bd      	mov	sp, r7
 8012264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012268:	4770      	bx	lr

0801226a <HAL_I2C_ErrorCallback>:
 801226a:	b480      	push	{r7}
 801226c:	b083      	sub	sp, #12
 801226e:	af00      	add	r7, sp, #0
 8012270:	6078      	str	r0, [r7, #4]
 8012272:	bf00      	nop
 8012274:	370c      	adds	r7, #12
 8012276:	46bd      	mov	sp, r7
 8012278:	f85d 7b04 	ldr.w	r7, [sp], #4
 801227c:	4770      	bx	lr

0801227e <HAL_I2C_AbortCpltCallback>:
 801227e:	b480      	push	{r7}
 8012280:	b083      	sub	sp, #12
 8012282:	af00      	add	r7, sp, #0
 8012284:	6078      	str	r0, [r7, #4]
 8012286:	bf00      	nop
 8012288:	370c      	adds	r7, #12
 801228a:	46bd      	mov	sp, r7
 801228c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012290:	4770      	bx	lr
	...

08012294 <I2C_Slave_AF>:
 8012294:	b580      	push	{r7, lr}
 8012296:	b084      	sub	sp, #16
 8012298:	af00      	add	r7, sp, #0
 801229a:	6078      	str	r0, [r7, #4]
 801229c:	687b      	ldr	r3, [r7, #4]
 801229e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80122a2:	73fb      	strb	r3, [r7, #15]
 80122a4:	687b      	ldr	r3, [r7, #4]
 80122a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122a8:	60bb      	str	r3, [r7, #8]
 80122aa:	68bb      	ldr	r3, [r7, #8]
 80122ac:	2b08      	cmp	r3, #8
 80122ae:	d002      	beq.n	80122b6 <I2C_Slave_AF+0x22>
 80122b0:	68bb      	ldr	r3, [r7, #8]
 80122b2:	2b20      	cmp	r3, #32
 80122b4:	d129      	bne.n	801230a <I2C_Slave_AF+0x76>
 80122b6:	7bfb      	ldrb	r3, [r7, #15]
 80122b8:	2b28      	cmp	r3, #40	; 0x28
 80122ba:	d126      	bne.n	801230a <I2C_Slave_AF+0x76>
 80122bc:	687b      	ldr	r3, [r7, #4]
 80122be:	4a2c      	ldr	r2, [pc, #176]	; (8012370 <I2C_Slave_AF+0xdc>)
 80122c0:	62da      	str	r2, [r3, #44]	; 0x2c
 80122c2:	687b      	ldr	r3, [r7, #4]
 80122c4:	681b      	ldr	r3, [r3, #0]
 80122c6:	685a      	ldr	r2, [r3, #4]
 80122c8:	687b      	ldr	r3, [r7, #4]
 80122ca:	681b      	ldr	r3, [r3, #0]
 80122cc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80122d0:	605a      	str	r2, [r3, #4]
 80122d2:	687b      	ldr	r3, [r7, #4]
 80122d4:	681b      	ldr	r3, [r3, #0]
 80122d6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80122da:	615a      	str	r2, [r3, #20]
 80122dc:	687b      	ldr	r3, [r7, #4]
 80122de:	681b      	ldr	r3, [r3, #0]
 80122e0:	681a      	ldr	r2, [r3, #0]
 80122e2:	687b      	ldr	r3, [r7, #4]
 80122e4:	681b      	ldr	r3, [r3, #0]
 80122e6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80122ea:	601a      	str	r2, [r3, #0]
 80122ec:	687b      	ldr	r3, [r7, #4]
 80122ee:	2200      	movs	r2, #0
 80122f0:	631a      	str	r2, [r3, #48]	; 0x30
 80122f2:	687b      	ldr	r3, [r7, #4]
 80122f4:	2220      	movs	r2, #32
 80122f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80122fa:	687b      	ldr	r3, [r7, #4]
 80122fc:	2200      	movs	r2, #0
 80122fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012302:	6878      	ldr	r0, [r7, #4]
 8012304:	f7ff ffa7 	bl	8012256 <HAL_I2C_ListenCpltCallback>
 8012308:	e02e      	b.n	8012368 <I2C_Slave_AF+0xd4>
 801230a:	7bfb      	ldrb	r3, [r7, #15]
 801230c:	2b21      	cmp	r3, #33	; 0x21
 801230e:	d126      	bne.n	801235e <I2C_Slave_AF+0xca>
 8012310:	687b      	ldr	r3, [r7, #4]
 8012312:	4a17      	ldr	r2, [pc, #92]	; (8012370 <I2C_Slave_AF+0xdc>)
 8012314:	62da      	str	r2, [r3, #44]	; 0x2c
 8012316:	687b      	ldr	r3, [r7, #4]
 8012318:	2221      	movs	r2, #33	; 0x21
 801231a:	631a      	str	r2, [r3, #48]	; 0x30
 801231c:	687b      	ldr	r3, [r7, #4]
 801231e:	2220      	movs	r2, #32
 8012320:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012324:	687b      	ldr	r3, [r7, #4]
 8012326:	2200      	movs	r2, #0
 8012328:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801232c:	687b      	ldr	r3, [r7, #4]
 801232e:	681b      	ldr	r3, [r3, #0]
 8012330:	685a      	ldr	r2, [r3, #4]
 8012332:	687b      	ldr	r3, [r7, #4]
 8012334:	681b      	ldr	r3, [r3, #0]
 8012336:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 801233a:	605a      	str	r2, [r3, #4]
 801233c:	687b      	ldr	r3, [r7, #4]
 801233e:	681b      	ldr	r3, [r3, #0]
 8012340:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012344:	615a      	str	r2, [r3, #20]
 8012346:	687b      	ldr	r3, [r7, #4]
 8012348:	681b      	ldr	r3, [r3, #0]
 801234a:	681a      	ldr	r2, [r3, #0]
 801234c:	687b      	ldr	r3, [r7, #4]
 801234e:	681b      	ldr	r3, [r3, #0]
 8012350:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012354:	601a      	str	r2, [r3, #0]
 8012356:	6878      	ldr	r0, [r7, #4]
 8012358:	f7ff ff69 	bl	801222e <HAL_I2C_SlaveTxCpltCallback>
 801235c:	e004      	b.n	8012368 <I2C_Slave_AF+0xd4>
 801235e:	687b      	ldr	r3, [r7, #4]
 8012360:	681b      	ldr	r3, [r3, #0]
 8012362:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012366:	615a      	str	r2, [r3, #20]
 8012368:	bf00      	nop
 801236a:	3710      	adds	r7, #16
 801236c:	46bd      	mov	sp, r7
 801236e:	bd80      	pop	{r7, pc}
 8012370:	ffff0000 	.word	0xffff0000

08012374 <I2C_ITError>:
 8012374:	b580      	push	{r7, lr}
 8012376:	b084      	sub	sp, #16
 8012378:	af00      	add	r7, sp, #0
 801237a:	6078      	str	r0, [r7, #4]
 801237c:	687b      	ldr	r3, [r7, #4]
 801237e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012382:	73fb      	strb	r3, [r7, #15]
 8012384:	687b      	ldr	r3, [r7, #4]
 8012386:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 801238a:	73bb      	strb	r3, [r7, #14]
 801238c:	7bbb      	ldrb	r3, [r7, #14]
 801238e:	2b10      	cmp	r3, #16
 8012390:	d002      	beq.n	8012398 <I2C_ITError+0x24>
 8012392:	7bbb      	ldrb	r3, [r7, #14]
 8012394:	2b40      	cmp	r3, #64	; 0x40
 8012396:	d10a      	bne.n	80123ae <I2C_ITError+0x3a>
 8012398:	7bfb      	ldrb	r3, [r7, #15]
 801239a:	2b22      	cmp	r3, #34	; 0x22
 801239c:	d107      	bne.n	80123ae <I2C_ITError+0x3a>
 801239e:	687b      	ldr	r3, [r7, #4]
 80123a0:	681b      	ldr	r3, [r3, #0]
 80123a2:	681a      	ldr	r2, [r3, #0]
 80123a4:	687b      	ldr	r3, [r7, #4]
 80123a6:	681b      	ldr	r3, [r3, #0]
 80123a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80123ac:	601a      	str	r2, [r3, #0]
 80123ae:	7bfb      	ldrb	r3, [r7, #15]
 80123b0:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80123b4:	2b28      	cmp	r3, #40	; 0x28
 80123b6:	d107      	bne.n	80123c8 <I2C_ITError+0x54>
 80123b8:	687b      	ldr	r3, [r7, #4]
 80123ba:	2200      	movs	r2, #0
 80123bc:	631a      	str	r2, [r3, #48]	; 0x30
 80123be:	687b      	ldr	r3, [r7, #4]
 80123c0:	2228      	movs	r2, #40	; 0x28
 80123c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80123c6:	e015      	b.n	80123f4 <I2C_ITError+0x80>
 80123c8:	687b      	ldr	r3, [r7, #4]
 80123ca:	681b      	ldr	r3, [r3, #0]
 80123cc:	685b      	ldr	r3, [r3, #4]
 80123ce:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80123d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80123d6:	d00a      	beq.n	80123ee <I2C_ITError+0x7a>
 80123d8:	7bfb      	ldrb	r3, [r7, #15]
 80123da:	2b60      	cmp	r3, #96	; 0x60
 80123dc:	d007      	beq.n	80123ee <I2C_ITError+0x7a>
 80123de:	687b      	ldr	r3, [r7, #4]
 80123e0:	2220      	movs	r2, #32
 80123e2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80123e6:	687b      	ldr	r3, [r7, #4]
 80123e8:	2200      	movs	r2, #0
 80123ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80123ee:	687b      	ldr	r3, [r7, #4]
 80123f0:	2200      	movs	r2, #0
 80123f2:	631a      	str	r2, [r3, #48]	; 0x30
 80123f4:	687b      	ldr	r3, [r7, #4]
 80123f6:	681b      	ldr	r3, [r3, #0]
 80123f8:	685b      	ldr	r3, [r3, #4]
 80123fa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80123fe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012402:	d162      	bne.n	80124ca <I2C_ITError+0x156>
 8012404:	687b      	ldr	r3, [r7, #4]
 8012406:	681b      	ldr	r3, [r3, #0]
 8012408:	685a      	ldr	r2, [r3, #4]
 801240a:	687b      	ldr	r3, [r7, #4]
 801240c:	681b      	ldr	r3, [r3, #0]
 801240e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012412:	605a      	str	r2, [r3, #4]
 8012414:	687b      	ldr	r3, [r7, #4]
 8012416:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012418:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801241c:	b2db      	uxtb	r3, r3
 801241e:	2b01      	cmp	r3, #1
 8012420:	d020      	beq.n	8012464 <I2C_ITError+0xf0>
 8012422:	687b      	ldr	r3, [r7, #4]
 8012424:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012426:	4a6a      	ldr	r2, [pc, #424]	; (80125d0 <I2C_ITError+0x25c>)
 8012428:	651a      	str	r2, [r3, #80]	; 0x50
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801242e:	4618      	mov	r0, r3
 8012430:	f7fe fbee 	bl	8010c10 <HAL_DMA_Abort_IT>
 8012434:	4603      	mov	r3, r0
 8012436:	2b00      	cmp	r3, #0
 8012438:	f000 8089 	beq.w	801254e <I2C_ITError+0x1da>
 801243c:	687b      	ldr	r3, [r7, #4]
 801243e:	681b      	ldr	r3, [r3, #0]
 8012440:	681a      	ldr	r2, [r3, #0]
 8012442:	687b      	ldr	r3, [r7, #4]
 8012444:	681b      	ldr	r3, [r3, #0]
 8012446:	f022 0201 	bic.w	r2, r2, #1
 801244a:	601a      	str	r2, [r3, #0]
 801244c:	687b      	ldr	r3, [r7, #4]
 801244e:	2220      	movs	r2, #32
 8012450:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012454:	687b      	ldr	r3, [r7, #4]
 8012456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012458:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801245a:	687a      	ldr	r2, [r7, #4]
 801245c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 801245e:	4610      	mov	r0, r2
 8012460:	4798      	blx	r3
 8012462:	e074      	b.n	801254e <I2C_ITError+0x1da>
 8012464:	687b      	ldr	r3, [r7, #4]
 8012466:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012468:	4a59      	ldr	r2, [pc, #356]	; (80125d0 <I2C_ITError+0x25c>)
 801246a:	651a      	str	r2, [r3, #80]	; 0x50
 801246c:	687b      	ldr	r3, [r7, #4]
 801246e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012470:	4618      	mov	r0, r3
 8012472:	f7fe fbcd 	bl	8010c10 <HAL_DMA_Abort_IT>
 8012476:	4603      	mov	r3, r0
 8012478:	2b00      	cmp	r3, #0
 801247a:	d068      	beq.n	801254e <I2C_ITError+0x1da>
 801247c:	687b      	ldr	r3, [r7, #4]
 801247e:	681b      	ldr	r3, [r3, #0]
 8012480:	695b      	ldr	r3, [r3, #20]
 8012482:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012486:	2b40      	cmp	r3, #64	; 0x40
 8012488:	d10b      	bne.n	80124a2 <I2C_ITError+0x12e>
 801248a:	687b      	ldr	r3, [r7, #4]
 801248c:	681b      	ldr	r3, [r3, #0]
 801248e:	691a      	ldr	r2, [r3, #16]
 8012490:	687b      	ldr	r3, [r7, #4]
 8012492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012494:	b2d2      	uxtb	r2, r2
 8012496:	701a      	strb	r2, [r3, #0]
 8012498:	687b      	ldr	r3, [r7, #4]
 801249a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801249c:	1c5a      	adds	r2, r3, #1
 801249e:	687b      	ldr	r3, [r7, #4]
 80124a0:	625a      	str	r2, [r3, #36]	; 0x24
 80124a2:	687b      	ldr	r3, [r7, #4]
 80124a4:	681b      	ldr	r3, [r3, #0]
 80124a6:	681a      	ldr	r2, [r3, #0]
 80124a8:	687b      	ldr	r3, [r7, #4]
 80124aa:	681b      	ldr	r3, [r3, #0]
 80124ac:	f022 0201 	bic.w	r2, r2, #1
 80124b0:	601a      	str	r2, [r3, #0]
 80124b2:	687b      	ldr	r3, [r7, #4]
 80124b4:	2220      	movs	r2, #32
 80124b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80124ba:	687b      	ldr	r3, [r7, #4]
 80124bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80124c0:	687a      	ldr	r2, [r7, #4]
 80124c2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80124c4:	4610      	mov	r0, r2
 80124c6:	4798      	blx	r3
 80124c8:	e041      	b.n	801254e <I2C_ITError+0x1da>
 80124ca:	687b      	ldr	r3, [r7, #4]
 80124cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80124d0:	b2db      	uxtb	r3, r3
 80124d2:	2b60      	cmp	r3, #96	; 0x60
 80124d4:	d125      	bne.n	8012522 <I2C_ITError+0x1ae>
 80124d6:	687b      	ldr	r3, [r7, #4]
 80124d8:	2220      	movs	r2, #32
 80124da:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80124de:	687b      	ldr	r3, [r7, #4]
 80124e0:	2200      	movs	r2, #0
 80124e2:	641a      	str	r2, [r3, #64]	; 0x40
 80124e4:	687b      	ldr	r3, [r7, #4]
 80124e6:	681b      	ldr	r3, [r3, #0]
 80124e8:	695b      	ldr	r3, [r3, #20]
 80124ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80124ee:	2b40      	cmp	r3, #64	; 0x40
 80124f0:	d10b      	bne.n	801250a <I2C_ITError+0x196>
 80124f2:	687b      	ldr	r3, [r7, #4]
 80124f4:	681b      	ldr	r3, [r3, #0]
 80124f6:	691a      	ldr	r2, [r3, #16]
 80124f8:	687b      	ldr	r3, [r7, #4]
 80124fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124fc:	b2d2      	uxtb	r2, r2
 80124fe:	701a      	strb	r2, [r3, #0]
 8012500:	687b      	ldr	r3, [r7, #4]
 8012502:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012504:	1c5a      	adds	r2, r3, #1
 8012506:	687b      	ldr	r3, [r7, #4]
 8012508:	625a      	str	r2, [r3, #36]	; 0x24
 801250a:	687b      	ldr	r3, [r7, #4]
 801250c:	681b      	ldr	r3, [r3, #0]
 801250e:	681a      	ldr	r2, [r3, #0]
 8012510:	687b      	ldr	r3, [r7, #4]
 8012512:	681b      	ldr	r3, [r3, #0]
 8012514:	f022 0201 	bic.w	r2, r2, #1
 8012518:	601a      	str	r2, [r3, #0]
 801251a:	6878      	ldr	r0, [r7, #4]
 801251c:	f7ff feaf 	bl	801227e <HAL_I2C_AbortCpltCallback>
 8012520:	e015      	b.n	801254e <I2C_ITError+0x1da>
 8012522:	687b      	ldr	r3, [r7, #4]
 8012524:	681b      	ldr	r3, [r3, #0]
 8012526:	695b      	ldr	r3, [r3, #20]
 8012528:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801252c:	2b40      	cmp	r3, #64	; 0x40
 801252e:	d10b      	bne.n	8012548 <I2C_ITError+0x1d4>
 8012530:	687b      	ldr	r3, [r7, #4]
 8012532:	681b      	ldr	r3, [r3, #0]
 8012534:	691a      	ldr	r2, [r3, #16]
 8012536:	687b      	ldr	r3, [r7, #4]
 8012538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801253a:	b2d2      	uxtb	r2, r2
 801253c:	701a      	strb	r2, [r3, #0]
 801253e:	687b      	ldr	r3, [r7, #4]
 8012540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012542:	1c5a      	adds	r2, r3, #1
 8012544:	687b      	ldr	r3, [r7, #4]
 8012546:	625a      	str	r2, [r3, #36]	; 0x24
 8012548:	6878      	ldr	r0, [r7, #4]
 801254a:	f7ff fe8e 	bl	801226a <HAL_I2C_ErrorCallback>
 801254e:	687b      	ldr	r3, [r7, #4]
 8012550:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012552:	60bb      	str	r3, [r7, #8]
 8012554:	68bb      	ldr	r3, [r7, #8]
 8012556:	f003 0301 	and.w	r3, r3, #1
 801255a:	2b00      	cmp	r3, #0
 801255c:	d10e      	bne.n	801257c <I2C_ITError+0x208>
 801255e:	68bb      	ldr	r3, [r7, #8]
 8012560:	f003 0302 	and.w	r3, r3, #2
 8012564:	2b00      	cmp	r3, #0
 8012566:	d109      	bne.n	801257c <I2C_ITError+0x208>
 8012568:	68bb      	ldr	r3, [r7, #8]
 801256a:	f003 0304 	and.w	r3, r3, #4
 801256e:	2b00      	cmp	r3, #0
 8012570:	d104      	bne.n	801257c <I2C_ITError+0x208>
 8012572:	68bb      	ldr	r3, [r7, #8]
 8012574:	f003 0308 	and.w	r3, r3, #8
 8012578:	2b00      	cmp	r3, #0
 801257a:	d007      	beq.n	801258c <I2C_ITError+0x218>
 801257c:	687b      	ldr	r3, [r7, #4]
 801257e:	681b      	ldr	r3, [r3, #0]
 8012580:	685a      	ldr	r2, [r3, #4]
 8012582:	687b      	ldr	r3, [r7, #4]
 8012584:	681b      	ldr	r3, [r3, #0]
 8012586:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 801258a:	605a      	str	r2, [r3, #4]
 801258c:	687b      	ldr	r3, [r7, #4]
 801258e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012592:	73fb      	strb	r3, [r7, #15]
 8012594:	687b      	ldr	r3, [r7, #4]
 8012596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012598:	f003 0304 	and.w	r3, r3, #4
 801259c:	2b04      	cmp	r3, #4
 801259e:	d113      	bne.n	80125c8 <I2C_ITError+0x254>
 80125a0:	7bfb      	ldrb	r3, [r7, #15]
 80125a2:	2b28      	cmp	r3, #40	; 0x28
 80125a4:	d110      	bne.n	80125c8 <I2C_ITError+0x254>
 80125a6:	687b      	ldr	r3, [r7, #4]
 80125a8:	4a0a      	ldr	r2, [pc, #40]	; (80125d4 <I2C_ITError+0x260>)
 80125aa:	62da      	str	r2, [r3, #44]	; 0x2c
 80125ac:	687b      	ldr	r3, [r7, #4]
 80125ae:	2200      	movs	r2, #0
 80125b0:	631a      	str	r2, [r3, #48]	; 0x30
 80125b2:	687b      	ldr	r3, [r7, #4]
 80125b4:	2220      	movs	r2, #32
 80125b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80125ba:	687b      	ldr	r3, [r7, #4]
 80125bc:	2200      	movs	r2, #0
 80125be:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80125c2:	6878      	ldr	r0, [r7, #4]
 80125c4:	f7ff fe47 	bl	8012256 <HAL_I2C_ListenCpltCallback>
 80125c8:	bf00      	nop
 80125ca:	3710      	adds	r7, #16
 80125cc:	46bd      	mov	sp, r7
 80125ce:	bd80      	pop	{r7, pc}
 80125d0:	08012af9 	.word	0x08012af9
 80125d4:	ffff0000 	.word	0xffff0000

080125d8 <I2C_RequestMemoryWrite>:
 80125d8:	b580      	push	{r7, lr}
 80125da:	b088      	sub	sp, #32
 80125dc:	af02      	add	r7, sp, #8
 80125de:	60f8      	str	r0, [r7, #12]
 80125e0:	4608      	mov	r0, r1
 80125e2:	4611      	mov	r1, r2
 80125e4:	461a      	mov	r2, r3
 80125e6:	4603      	mov	r3, r0
 80125e8:	817b      	strh	r3, [r7, #10]
 80125ea:	460b      	mov	r3, r1
 80125ec:	813b      	strh	r3, [r7, #8]
 80125ee:	4613      	mov	r3, r2
 80125f0:	80fb      	strh	r3, [r7, #6]
 80125f2:	68fb      	ldr	r3, [r7, #12]
 80125f4:	681b      	ldr	r3, [r3, #0]
 80125f6:	681a      	ldr	r2, [r3, #0]
 80125f8:	68fb      	ldr	r3, [r7, #12]
 80125fa:	681b      	ldr	r3, [r3, #0]
 80125fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8012600:	601a      	str	r2, [r3, #0]
 8012602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012604:	9300      	str	r3, [sp, #0]
 8012606:	6a3b      	ldr	r3, [r7, #32]
 8012608:	2200      	movs	r2, #0
 801260a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 801260e:	68f8      	ldr	r0, [r7, #12]
 8012610:	f000 fb1a 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8012614:	4603      	mov	r3, r0
 8012616:	2b00      	cmp	r3, #0
 8012618:	d00d      	beq.n	8012636 <I2C_RequestMemoryWrite+0x5e>
 801261a:	68fb      	ldr	r3, [r7, #12]
 801261c:	681b      	ldr	r3, [r3, #0]
 801261e:	681b      	ldr	r3, [r3, #0]
 8012620:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012624:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012628:	d103      	bne.n	8012632 <I2C_RequestMemoryWrite+0x5a>
 801262a:	68fb      	ldr	r3, [r7, #12]
 801262c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8012630:	641a      	str	r2, [r3, #64]	; 0x40
 8012632:	2303      	movs	r3, #3
 8012634:	e05f      	b.n	80126f6 <I2C_RequestMemoryWrite+0x11e>
 8012636:	897b      	ldrh	r3, [r7, #10]
 8012638:	b2db      	uxtb	r3, r3
 801263a:	461a      	mov	r2, r3
 801263c:	68fb      	ldr	r3, [r7, #12]
 801263e:	681b      	ldr	r3, [r3, #0]
 8012640:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8012644:	611a      	str	r2, [r3, #16]
 8012646:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012648:	6a3a      	ldr	r2, [r7, #32]
 801264a:	492d      	ldr	r1, [pc, #180]	; (8012700 <I2C_RequestMemoryWrite+0x128>)
 801264c:	68f8      	ldr	r0, [r7, #12]
 801264e:	f000 fb52 	bl	8012cf6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8012652:	4603      	mov	r3, r0
 8012654:	2b00      	cmp	r3, #0
 8012656:	d001      	beq.n	801265c <I2C_RequestMemoryWrite+0x84>
 8012658:	2301      	movs	r3, #1
 801265a:	e04c      	b.n	80126f6 <I2C_RequestMemoryWrite+0x11e>
 801265c:	2300      	movs	r3, #0
 801265e:	617b      	str	r3, [r7, #20]
 8012660:	68fb      	ldr	r3, [r7, #12]
 8012662:	681b      	ldr	r3, [r3, #0]
 8012664:	695b      	ldr	r3, [r3, #20]
 8012666:	617b      	str	r3, [r7, #20]
 8012668:	68fb      	ldr	r3, [r7, #12]
 801266a:	681b      	ldr	r3, [r3, #0]
 801266c:	699b      	ldr	r3, [r3, #24]
 801266e:	617b      	str	r3, [r7, #20]
 8012670:	697b      	ldr	r3, [r7, #20]
 8012672:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012674:	6a39      	ldr	r1, [r7, #32]
 8012676:	68f8      	ldr	r0, [r7, #12]
 8012678:	f000 fbbc 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 801267c:	4603      	mov	r3, r0
 801267e:	2b00      	cmp	r3, #0
 8012680:	d00d      	beq.n	801269e <I2C_RequestMemoryWrite+0xc6>
 8012682:	68fb      	ldr	r3, [r7, #12]
 8012684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012686:	2b04      	cmp	r3, #4
 8012688:	d107      	bne.n	801269a <I2C_RequestMemoryWrite+0xc2>
 801268a:	68fb      	ldr	r3, [r7, #12]
 801268c:	681b      	ldr	r3, [r3, #0]
 801268e:	681a      	ldr	r2, [r3, #0]
 8012690:	68fb      	ldr	r3, [r7, #12]
 8012692:	681b      	ldr	r3, [r3, #0]
 8012694:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012698:	601a      	str	r2, [r3, #0]
 801269a:	2301      	movs	r3, #1
 801269c:	e02b      	b.n	80126f6 <I2C_RequestMemoryWrite+0x11e>
 801269e:	88fb      	ldrh	r3, [r7, #6]
 80126a0:	2b01      	cmp	r3, #1
 80126a2:	d105      	bne.n	80126b0 <I2C_RequestMemoryWrite+0xd8>
 80126a4:	893b      	ldrh	r3, [r7, #8]
 80126a6:	b2da      	uxtb	r2, r3
 80126a8:	68fb      	ldr	r3, [r7, #12]
 80126aa:	681b      	ldr	r3, [r3, #0]
 80126ac:	611a      	str	r2, [r3, #16]
 80126ae:	e021      	b.n	80126f4 <I2C_RequestMemoryWrite+0x11c>
 80126b0:	893b      	ldrh	r3, [r7, #8]
 80126b2:	0a1b      	lsrs	r3, r3, #8
 80126b4:	b29b      	uxth	r3, r3
 80126b6:	b2da      	uxtb	r2, r3
 80126b8:	68fb      	ldr	r3, [r7, #12]
 80126ba:	681b      	ldr	r3, [r3, #0]
 80126bc:	611a      	str	r2, [r3, #16]
 80126be:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80126c0:	6a39      	ldr	r1, [r7, #32]
 80126c2:	68f8      	ldr	r0, [r7, #12]
 80126c4:	f000 fb96 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 80126c8:	4603      	mov	r3, r0
 80126ca:	2b00      	cmp	r3, #0
 80126cc:	d00d      	beq.n	80126ea <I2C_RequestMemoryWrite+0x112>
 80126ce:	68fb      	ldr	r3, [r7, #12]
 80126d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80126d2:	2b04      	cmp	r3, #4
 80126d4:	d107      	bne.n	80126e6 <I2C_RequestMemoryWrite+0x10e>
 80126d6:	68fb      	ldr	r3, [r7, #12]
 80126d8:	681b      	ldr	r3, [r3, #0]
 80126da:	681a      	ldr	r2, [r3, #0]
 80126dc:	68fb      	ldr	r3, [r7, #12]
 80126de:	681b      	ldr	r3, [r3, #0]
 80126e0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80126e4:	601a      	str	r2, [r3, #0]
 80126e6:	2301      	movs	r3, #1
 80126e8:	e005      	b.n	80126f6 <I2C_RequestMemoryWrite+0x11e>
 80126ea:	893b      	ldrh	r3, [r7, #8]
 80126ec:	b2da      	uxtb	r2, r3
 80126ee:	68fb      	ldr	r3, [r7, #12]
 80126f0:	681b      	ldr	r3, [r3, #0]
 80126f2:	611a      	str	r2, [r3, #16]
 80126f4:	2300      	movs	r3, #0
 80126f6:	4618      	mov	r0, r3
 80126f8:	3718      	adds	r7, #24
 80126fa:	46bd      	mov	sp, r7
 80126fc:	bd80      	pop	{r7, pc}
 80126fe:	bf00      	nop
 8012700:	00010002 	.word	0x00010002

08012704 <I2C_RequestMemoryRead>:
 8012704:	b580      	push	{r7, lr}
 8012706:	b088      	sub	sp, #32
 8012708:	af02      	add	r7, sp, #8
 801270a:	60f8      	str	r0, [r7, #12]
 801270c:	4608      	mov	r0, r1
 801270e:	4611      	mov	r1, r2
 8012710:	461a      	mov	r2, r3
 8012712:	4603      	mov	r3, r0
 8012714:	817b      	strh	r3, [r7, #10]
 8012716:	460b      	mov	r3, r1
 8012718:	813b      	strh	r3, [r7, #8]
 801271a:	4613      	mov	r3, r2
 801271c:	80fb      	strh	r3, [r7, #6]
 801271e:	68fb      	ldr	r3, [r7, #12]
 8012720:	681b      	ldr	r3, [r3, #0]
 8012722:	681a      	ldr	r2, [r3, #0]
 8012724:	68fb      	ldr	r3, [r7, #12]
 8012726:	681b      	ldr	r3, [r3, #0]
 8012728:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801272c:	601a      	str	r2, [r3, #0]
 801272e:	68fb      	ldr	r3, [r7, #12]
 8012730:	681b      	ldr	r3, [r3, #0]
 8012732:	681a      	ldr	r2, [r3, #0]
 8012734:	68fb      	ldr	r3, [r7, #12]
 8012736:	681b      	ldr	r3, [r3, #0]
 8012738:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801273c:	601a      	str	r2, [r3, #0]
 801273e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012740:	9300      	str	r3, [sp, #0]
 8012742:	6a3b      	ldr	r3, [r7, #32]
 8012744:	2200      	movs	r2, #0
 8012746:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 801274a:	68f8      	ldr	r0, [r7, #12]
 801274c:	f000 fa7c 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 8012750:	4603      	mov	r3, r0
 8012752:	2b00      	cmp	r3, #0
 8012754:	d00d      	beq.n	8012772 <I2C_RequestMemoryRead+0x6e>
 8012756:	68fb      	ldr	r3, [r7, #12]
 8012758:	681b      	ldr	r3, [r3, #0]
 801275a:	681b      	ldr	r3, [r3, #0]
 801275c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012760:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012764:	d103      	bne.n	801276e <I2C_RequestMemoryRead+0x6a>
 8012766:	68fb      	ldr	r3, [r7, #12]
 8012768:	f44f 7200 	mov.w	r2, #512	; 0x200
 801276c:	641a      	str	r2, [r3, #64]	; 0x40
 801276e:	2303      	movs	r3, #3
 8012770:	e0aa      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 8012772:	897b      	ldrh	r3, [r7, #10]
 8012774:	b2db      	uxtb	r3, r3
 8012776:	461a      	mov	r2, r3
 8012778:	68fb      	ldr	r3, [r7, #12]
 801277a:	681b      	ldr	r3, [r3, #0]
 801277c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8012780:	611a      	str	r2, [r3, #16]
 8012782:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012784:	6a3a      	ldr	r2, [r7, #32]
 8012786:	4952      	ldr	r1, [pc, #328]	; (80128d0 <I2C_RequestMemoryRead+0x1cc>)
 8012788:	68f8      	ldr	r0, [r7, #12]
 801278a:	f000 fab4 	bl	8012cf6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 801278e:	4603      	mov	r3, r0
 8012790:	2b00      	cmp	r3, #0
 8012792:	d001      	beq.n	8012798 <I2C_RequestMemoryRead+0x94>
 8012794:	2301      	movs	r3, #1
 8012796:	e097      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 8012798:	2300      	movs	r3, #0
 801279a:	617b      	str	r3, [r7, #20]
 801279c:	68fb      	ldr	r3, [r7, #12]
 801279e:	681b      	ldr	r3, [r3, #0]
 80127a0:	695b      	ldr	r3, [r3, #20]
 80127a2:	617b      	str	r3, [r7, #20]
 80127a4:	68fb      	ldr	r3, [r7, #12]
 80127a6:	681b      	ldr	r3, [r3, #0]
 80127a8:	699b      	ldr	r3, [r3, #24]
 80127aa:	617b      	str	r3, [r7, #20]
 80127ac:	697b      	ldr	r3, [r7, #20]
 80127ae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80127b0:	6a39      	ldr	r1, [r7, #32]
 80127b2:	68f8      	ldr	r0, [r7, #12]
 80127b4:	f000 fb1e 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 80127b8:	4603      	mov	r3, r0
 80127ba:	2b00      	cmp	r3, #0
 80127bc:	d00d      	beq.n	80127da <I2C_RequestMemoryRead+0xd6>
 80127be:	68fb      	ldr	r3, [r7, #12]
 80127c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80127c2:	2b04      	cmp	r3, #4
 80127c4:	d107      	bne.n	80127d6 <I2C_RequestMemoryRead+0xd2>
 80127c6:	68fb      	ldr	r3, [r7, #12]
 80127c8:	681b      	ldr	r3, [r3, #0]
 80127ca:	681a      	ldr	r2, [r3, #0]
 80127cc:	68fb      	ldr	r3, [r7, #12]
 80127ce:	681b      	ldr	r3, [r3, #0]
 80127d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80127d4:	601a      	str	r2, [r3, #0]
 80127d6:	2301      	movs	r3, #1
 80127d8:	e076      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 80127da:	88fb      	ldrh	r3, [r7, #6]
 80127dc:	2b01      	cmp	r3, #1
 80127de:	d105      	bne.n	80127ec <I2C_RequestMemoryRead+0xe8>
 80127e0:	893b      	ldrh	r3, [r7, #8]
 80127e2:	b2da      	uxtb	r2, r3
 80127e4:	68fb      	ldr	r3, [r7, #12]
 80127e6:	681b      	ldr	r3, [r3, #0]
 80127e8:	611a      	str	r2, [r3, #16]
 80127ea:	e021      	b.n	8012830 <I2C_RequestMemoryRead+0x12c>
 80127ec:	893b      	ldrh	r3, [r7, #8]
 80127ee:	0a1b      	lsrs	r3, r3, #8
 80127f0:	b29b      	uxth	r3, r3
 80127f2:	b2da      	uxtb	r2, r3
 80127f4:	68fb      	ldr	r3, [r7, #12]
 80127f6:	681b      	ldr	r3, [r3, #0]
 80127f8:	611a      	str	r2, [r3, #16]
 80127fa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80127fc:	6a39      	ldr	r1, [r7, #32]
 80127fe:	68f8      	ldr	r0, [r7, #12]
 8012800:	f000 faf8 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 8012804:	4603      	mov	r3, r0
 8012806:	2b00      	cmp	r3, #0
 8012808:	d00d      	beq.n	8012826 <I2C_RequestMemoryRead+0x122>
 801280a:	68fb      	ldr	r3, [r7, #12]
 801280c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801280e:	2b04      	cmp	r3, #4
 8012810:	d107      	bne.n	8012822 <I2C_RequestMemoryRead+0x11e>
 8012812:	68fb      	ldr	r3, [r7, #12]
 8012814:	681b      	ldr	r3, [r3, #0]
 8012816:	681a      	ldr	r2, [r3, #0]
 8012818:	68fb      	ldr	r3, [r7, #12]
 801281a:	681b      	ldr	r3, [r3, #0]
 801281c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012820:	601a      	str	r2, [r3, #0]
 8012822:	2301      	movs	r3, #1
 8012824:	e050      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 8012826:	893b      	ldrh	r3, [r7, #8]
 8012828:	b2da      	uxtb	r2, r3
 801282a:	68fb      	ldr	r3, [r7, #12]
 801282c:	681b      	ldr	r3, [r3, #0]
 801282e:	611a      	str	r2, [r3, #16]
 8012830:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012832:	6a39      	ldr	r1, [r7, #32]
 8012834:	68f8      	ldr	r0, [r7, #12]
 8012836:	f000 fadd 	bl	8012df4 <I2C_WaitOnTXEFlagUntilTimeout>
 801283a:	4603      	mov	r3, r0
 801283c:	2b00      	cmp	r3, #0
 801283e:	d00d      	beq.n	801285c <I2C_RequestMemoryRead+0x158>
 8012840:	68fb      	ldr	r3, [r7, #12]
 8012842:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012844:	2b04      	cmp	r3, #4
 8012846:	d107      	bne.n	8012858 <I2C_RequestMemoryRead+0x154>
 8012848:	68fb      	ldr	r3, [r7, #12]
 801284a:	681b      	ldr	r3, [r3, #0]
 801284c:	681a      	ldr	r2, [r3, #0]
 801284e:	68fb      	ldr	r3, [r7, #12]
 8012850:	681b      	ldr	r3, [r3, #0]
 8012852:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012856:	601a      	str	r2, [r3, #0]
 8012858:	2301      	movs	r3, #1
 801285a:	e035      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 801285c:	68fb      	ldr	r3, [r7, #12]
 801285e:	681b      	ldr	r3, [r3, #0]
 8012860:	681a      	ldr	r2, [r3, #0]
 8012862:	68fb      	ldr	r3, [r7, #12]
 8012864:	681b      	ldr	r3, [r3, #0]
 8012866:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801286a:	601a      	str	r2, [r3, #0]
 801286c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801286e:	9300      	str	r3, [sp, #0]
 8012870:	6a3b      	ldr	r3, [r7, #32]
 8012872:	2200      	movs	r2, #0
 8012874:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8012878:	68f8      	ldr	r0, [r7, #12]
 801287a:	f000 f9e5 	bl	8012c48 <I2C_WaitOnFlagUntilTimeout>
 801287e:	4603      	mov	r3, r0
 8012880:	2b00      	cmp	r3, #0
 8012882:	d00d      	beq.n	80128a0 <I2C_RequestMemoryRead+0x19c>
 8012884:	68fb      	ldr	r3, [r7, #12]
 8012886:	681b      	ldr	r3, [r3, #0]
 8012888:	681b      	ldr	r3, [r3, #0]
 801288a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801288e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012892:	d103      	bne.n	801289c <I2C_RequestMemoryRead+0x198>
 8012894:	68fb      	ldr	r3, [r7, #12]
 8012896:	f44f 7200 	mov.w	r2, #512	; 0x200
 801289a:	641a      	str	r2, [r3, #64]	; 0x40
 801289c:	2303      	movs	r3, #3
 801289e:	e013      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 80128a0:	897b      	ldrh	r3, [r7, #10]
 80128a2:	b2db      	uxtb	r3, r3
 80128a4:	f043 0301 	orr.w	r3, r3, #1
 80128a8:	b2da      	uxtb	r2, r3
 80128aa:	68fb      	ldr	r3, [r7, #12]
 80128ac:	681b      	ldr	r3, [r3, #0]
 80128ae:	611a      	str	r2, [r3, #16]
 80128b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80128b2:	6a3a      	ldr	r2, [r7, #32]
 80128b4:	4906      	ldr	r1, [pc, #24]	; (80128d0 <I2C_RequestMemoryRead+0x1cc>)
 80128b6:	68f8      	ldr	r0, [r7, #12]
 80128b8:	f000 fa1d 	bl	8012cf6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80128bc:	4603      	mov	r3, r0
 80128be:	2b00      	cmp	r3, #0
 80128c0:	d001      	beq.n	80128c6 <I2C_RequestMemoryRead+0x1c2>
 80128c2:	2301      	movs	r3, #1
 80128c4:	e000      	b.n	80128c8 <I2C_RequestMemoryRead+0x1c4>
 80128c6:	2300      	movs	r3, #0
 80128c8:	4618      	mov	r0, r3
 80128ca:	3718      	adds	r7, #24
 80128cc:	46bd      	mov	sp, r7
 80128ce:	bd80      	pop	{r7, pc}
 80128d0:	00010002 	.word	0x00010002

080128d4 <I2C_DMAXferCplt>:
 80128d4:	b580      	push	{r7, lr}
 80128d6:	b086      	sub	sp, #24
 80128d8:	af00      	add	r7, sp, #0
 80128da:	6078      	str	r0, [r7, #4]
 80128dc:	687b      	ldr	r3, [r7, #4]
 80128de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80128e0:	617b      	str	r3, [r7, #20]
 80128e2:	697b      	ldr	r3, [r7, #20]
 80128e4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80128e8:	74fb      	strb	r3, [r7, #19]
 80128ea:	697b      	ldr	r3, [r7, #20]
 80128ec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80128f0:	74bb      	strb	r3, [r7, #18]
 80128f2:	697b      	ldr	r3, [r7, #20]
 80128f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128f6:	60fb      	str	r3, [r7, #12]
 80128f8:	697b      	ldr	r3, [r7, #20]
 80128fa:	681b      	ldr	r3, [r3, #0]
 80128fc:	685a      	ldr	r2, [r3, #4]
 80128fe:	697b      	ldr	r3, [r7, #20]
 8012900:	681b      	ldr	r3, [r3, #0]
 8012902:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8012906:	605a      	str	r2, [r3, #4]
 8012908:	697b      	ldr	r3, [r7, #20]
 801290a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801290c:	2b00      	cmp	r3, #0
 801290e:	d003      	beq.n	8012918 <I2C_DMAXferCplt+0x44>
 8012910:	697b      	ldr	r3, [r7, #20]
 8012912:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012914:	2200      	movs	r2, #0
 8012916:	63da      	str	r2, [r3, #60]	; 0x3c
 8012918:	697b      	ldr	r3, [r7, #20]
 801291a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801291c:	2b00      	cmp	r3, #0
 801291e:	d003      	beq.n	8012928 <I2C_DMAXferCplt+0x54>
 8012920:	697b      	ldr	r3, [r7, #20]
 8012922:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012924:	2200      	movs	r2, #0
 8012926:	63da      	str	r2, [r3, #60]	; 0x3c
 8012928:	7cfb      	ldrb	r3, [r7, #19]
 801292a:	f003 0321 	and.w	r3, r3, #33	; 0x21
 801292e:	2b21      	cmp	r3, #33	; 0x21
 8012930:	d007      	beq.n	8012942 <I2C_DMAXferCplt+0x6e>
 8012932:	7cfb      	ldrb	r3, [r7, #19]
 8012934:	f003 0322 	and.w	r3, r3, #34	; 0x22
 8012938:	2b22      	cmp	r3, #34	; 0x22
 801293a:	d131      	bne.n	80129a0 <I2C_DMAXferCplt+0xcc>
 801293c:	7cbb      	ldrb	r3, [r7, #18]
 801293e:	2b20      	cmp	r3, #32
 8012940:	d12e      	bne.n	80129a0 <I2C_DMAXferCplt+0xcc>
 8012942:	697b      	ldr	r3, [r7, #20]
 8012944:	681b      	ldr	r3, [r3, #0]
 8012946:	685a      	ldr	r2, [r3, #4]
 8012948:	697b      	ldr	r3, [r7, #20]
 801294a:	681b      	ldr	r3, [r3, #0]
 801294c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012950:	605a      	str	r2, [r3, #4]
 8012952:	697b      	ldr	r3, [r7, #20]
 8012954:	2200      	movs	r2, #0
 8012956:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012958:	7cfb      	ldrb	r3, [r7, #19]
 801295a:	2b29      	cmp	r3, #41	; 0x29
 801295c:	d10a      	bne.n	8012974 <I2C_DMAXferCplt+0xa0>
 801295e:	697b      	ldr	r3, [r7, #20]
 8012960:	2221      	movs	r2, #33	; 0x21
 8012962:	631a      	str	r2, [r3, #48]	; 0x30
 8012964:	697b      	ldr	r3, [r7, #20]
 8012966:	2228      	movs	r2, #40	; 0x28
 8012968:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801296c:	6978      	ldr	r0, [r7, #20]
 801296e:	f7ff fc5e 	bl	801222e <HAL_I2C_SlaveTxCpltCallback>
 8012972:	e00c      	b.n	801298e <I2C_DMAXferCplt+0xba>
 8012974:	7cfb      	ldrb	r3, [r7, #19]
 8012976:	2b2a      	cmp	r3, #42	; 0x2a
 8012978:	d109      	bne.n	801298e <I2C_DMAXferCplt+0xba>
 801297a:	697b      	ldr	r3, [r7, #20]
 801297c:	2222      	movs	r2, #34	; 0x22
 801297e:	631a      	str	r2, [r3, #48]	; 0x30
 8012980:	697b      	ldr	r3, [r7, #20]
 8012982:	2228      	movs	r2, #40	; 0x28
 8012984:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012988:	6978      	ldr	r0, [r7, #20]
 801298a:	f7ff fc5a 	bl	8012242 <HAL_I2C_SlaveRxCpltCallback>
 801298e:	697b      	ldr	r3, [r7, #20]
 8012990:	681b      	ldr	r3, [r3, #0]
 8012992:	685a      	ldr	r2, [r3, #4]
 8012994:	697b      	ldr	r3, [r7, #20]
 8012996:	681b      	ldr	r3, [r3, #0]
 8012998:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 801299c:	605a      	str	r2, [r3, #4]
 801299e:	e06a      	b.n	8012a76 <I2C_DMAXferCplt+0x1a2>
 80129a0:	697b      	ldr	r3, [r7, #20]
 80129a2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80129a6:	b2db      	uxtb	r3, r3
 80129a8:	2b00      	cmp	r3, #0
 80129aa:	d064      	beq.n	8012a76 <I2C_DMAXferCplt+0x1a2>
 80129ac:	697b      	ldr	r3, [r7, #20]
 80129ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80129b0:	b29b      	uxth	r3, r3
 80129b2:	2b01      	cmp	r3, #1
 80129b4:	d107      	bne.n	80129c6 <I2C_DMAXferCplt+0xf2>
 80129b6:	697b      	ldr	r3, [r7, #20]
 80129b8:	681b      	ldr	r3, [r3, #0]
 80129ba:	681a      	ldr	r2, [r3, #0]
 80129bc:	697b      	ldr	r3, [r7, #20]
 80129be:	681b      	ldr	r3, [r3, #0]
 80129c0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80129c4:	601a      	str	r2, [r3, #0]
 80129c6:	697b      	ldr	r3, [r7, #20]
 80129c8:	681b      	ldr	r3, [r3, #0]
 80129ca:	685a      	ldr	r2, [r3, #4]
 80129cc:	697b      	ldr	r3, [r7, #20]
 80129ce:	681b      	ldr	r3, [r3, #0]
 80129d0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80129d4:	605a      	str	r2, [r3, #4]
 80129d6:	68fb      	ldr	r3, [r7, #12]
 80129d8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80129dc:	d009      	beq.n	80129f2 <I2C_DMAXferCplt+0x11e>
 80129de:	68fb      	ldr	r3, [r7, #12]
 80129e0:	2b08      	cmp	r3, #8
 80129e2:	d006      	beq.n	80129f2 <I2C_DMAXferCplt+0x11e>
 80129e4:	68fb      	ldr	r3, [r7, #12]
 80129e6:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80129ea:	d002      	beq.n	80129f2 <I2C_DMAXferCplt+0x11e>
 80129ec:	68fb      	ldr	r3, [r7, #12]
 80129ee:	2b20      	cmp	r3, #32
 80129f0:	d107      	bne.n	8012a02 <I2C_DMAXferCplt+0x12e>
 80129f2:	697b      	ldr	r3, [r7, #20]
 80129f4:	681b      	ldr	r3, [r3, #0]
 80129f6:	681a      	ldr	r2, [r3, #0]
 80129f8:	697b      	ldr	r3, [r7, #20]
 80129fa:	681b      	ldr	r3, [r3, #0]
 80129fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012a00:	601a      	str	r2, [r3, #0]
 8012a02:	697b      	ldr	r3, [r7, #20]
 8012a04:	681b      	ldr	r3, [r3, #0]
 8012a06:	685a      	ldr	r2, [r3, #4]
 8012a08:	697b      	ldr	r3, [r7, #20]
 8012a0a:	681b      	ldr	r3, [r3, #0]
 8012a0c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8012a10:	605a      	str	r2, [r3, #4]
 8012a12:	697b      	ldr	r3, [r7, #20]
 8012a14:	681b      	ldr	r3, [r3, #0]
 8012a16:	685a      	ldr	r2, [r3, #4]
 8012a18:	697b      	ldr	r3, [r7, #20]
 8012a1a:	681b      	ldr	r3, [r3, #0]
 8012a1c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012a20:	605a      	str	r2, [r3, #4]
 8012a22:	697b      	ldr	r3, [r7, #20]
 8012a24:	2200      	movs	r2, #0
 8012a26:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012a28:	697b      	ldr	r3, [r7, #20]
 8012a2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012a2c:	2b00      	cmp	r3, #0
 8012a2e:	d003      	beq.n	8012a38 <I2C_DMAXferCplt+0x164>
 8012a30:	6978      	ldr	r0, [r7, #20]
 8012a32:	f7ff fc1a 	bl	801226a <HAL_I2C_ErrorCallback>
 8012a36:	e01e      	b.n	8012a76 <I2C_DMAXferCplt+0x1a2>
 8012a38:	697b      	ldr	r3, [r7, #20]
 8012a3a:	2220      	movs	r2, #32
 8012a3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012a40:	697b      	ldr	r3, [r7, #20]
 8012a42:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8012a46:	b2db      	uxtb	r3, r3
 8012a48:	2b40      	cmp	r3, #64	; 0x40
 8012a4a:	d10a      	bne.n	8012a62 <I2C_DMAXferCplt+0x18e>
 8012a4c:	697b      	ldr	r3, [r7, #20]
 8012a4e:	2200      	movs	r2, #0
 8012a50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012a54:	697b      	ldr	r3, [r7, #20]
 8012a56:	2200      	movs	r2, #0
 8012a58:	631a      	str	r2, [r3, #48]	; 0x30
 8012a5a:	6978      	ldr	r0, [r7, #20]
 8012a5c:	f7ef fac0 	bl	8001fe0 <HAL_I2C_MemRxCpltCallback>
 8012a60:	e009      	b.n	8012a76 <I2C_DMAXferCplt+0x1a2>
 8012a62:	697b      	ldr	r3, [r7, #20]
 8012a64:	2200      	movs	r2, #0
 8012a66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012a6a:	697b      	ldr	r3, [r7, #20]
 8012a6c:	2212      	movs	r2, #18
 8012a6e:	631a      	str	r2, [r3, #48]	; 0x30
 8012a70:	6978      	ldr	r0, [r7, #20]
 8012a72:	f7ff fbd2 	bl	801221a <HAL_I2C_MasterRxCpltCallback>
 8012a76:	bf00      	nop
 8012a78:	3718      	adds	r7, #24
 8012a7a:	46bd      	mov	sp, r7
 8012a7c:	bd80      	pop	{r7, pc}

08012a7e <I2C_DMAError>:
 8012a7e:	b580      	push	{r7, lr}
 8012a80:	b084      	sub	sp, #16
 8012a82:	af00      	add	r7, sp, #0
 8012a84:	6078      	str	r0, [r7, #4]
 8012a86:	687b      	ldr	r3, [r7, #4]
 8012a88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a8a:	60fb      	str	r3, [r7, #12]
 8012a8c:	68fb      	ldr	r3, [r7, #12]
 8012a8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a90:	2b00      	cmp	r3, #0
 8012a92:	d003      	beq.n	8012a9c <I2C_DMAError+0x1e>
 8012a94:	68fb      	ldr	r3, [r7, #12]
 8012a96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a98:	2200      	movs	r2, #0
 8012a9a:	63da      	str	r2, [r3, #60]	; 0x3c
 8012a9c:	68fb      	ldr	r3, [r7, #12]
 8012a9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012aa0:	2b00      	cmp	r3, #0
 8012aa2:	d003      	beq.n	8012aac <I2C_DMAError+0x2e>
 8012aa4:	68fb      	ldr	r3, [r7, #12]
 8012aa6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012aa8:	2200      	movs	r2, #0
 8012aaa:	63da      	str	r2, [r3, #60]	; 0x3c
 8012aac:	6878      	ldr	r0, [r7, #4]
 8012aae:	f7fe fa5b 	bl	8010f68 <HAL_DMA_GetError>
 8012ab2:	4603      	mov	r3, r0
 8012ab4:	2b02      	cmp	r3, #2
 8012ab6:	d01b      	beq.n	8012af0 <I2C_DMAError+0x72>
 8012ab8:	68fb      	ldr	r3, [r7, #12]
 8012aba:	681b      	ldr	r3, [r3, #0]
 8012abc:	681a      	ldr	r2, [r3, #0]
 8012abe:	68fb      	ldr	r3, [r7, #12]
 8012ac0:	681b      	ldr	r3, [r3, #0]
 8012ac2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012ac6:	601a      	str	r2, [r3, #0]
 8012ac8:	68fb      	ldr	r3, [r7, #12]
 8012aca:	2200      	movs	r2, #0
 8012acc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012ace:	68fb      	ldr	r3, [r7, #12]
 8012ad0:	2220      	movs	r2, #32
 8012ad2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ad6:	68fb      	ldr	r3, [r7, #12]
 8012ad8:	2200      	movs	r2, #0
 8012ada:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012ade:	68fb      	ldr	r3, [r7, #12]
 8012ae0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012ae2:	f043 0210 	orr.w	r2, r3, #16
 8012ae6:	68fb      	ldr	r3, [r7, #12]
 8012ae8:	641a      	str	r2, [r3, #64]	; 0x40
 8012aea:	68f8      	ldr	r0, [r7, #12]
 8012aec:	f7ff fbbd 	bl	801226a <HAL_I2C_ErrorCallback>
 8012af0:	bf00      	nop
 8012af2:	3710      	adds	r7, #16
 8012af4:	46bd      	mov	sp, r7
 8012af6:	bd80      	pop	{r7, pc}

08012af8 <I2C_DMAAbort>:
 8012af8:	b580      	push	{r7, lr}
 8012afa:	b086      	sub	sp, #24
 8012afc:	af00      	add	r7, sp, #0
 8012afe:	6078      	str	r0, [r7, #4]
 8012b00:	2300      	movs	r3, #0
 8012b02:	60fb      	str	r3, [r7, #12]
 8012b04:	687b      	ldr	r3, [r7, #4]
 8012b06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b08:	617b      	str	r3, [r7, #20]
 8012b0a:	697b      	ldr	r3, [r7, #20]
 8012b0c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012b10:	74fb      	strb	r3, [r7, #19]
 8012b12:	4b4b      	ldr	r3, [pc, #300]	; (8012c40 <I2C_DMAAbort+0x148>)
 8012b14:	681b      	ldr	r3, [r3, #0]
 8012b16:	08db      	lsrs	r3, r3, #3
 8012b18:	4a4a      	ldr	r2, [pc, #296]	; (8012c44 <I2C_DMAAbort+0x14c>)
 8012b1a:	fba2 2303 	umull	r2, r3, r2, r3
 8012b1e:	0a1a      	lsrs	r2, r3, #8
 8012b20:	4613      	mov	r3, r2
 8012b22:	009b      	lsls	r3, r3, #2
 8012b24:	4413      	add	r3, r2
 8012b26:	00da      	lsls	r2, r3, #3
 8012b28:	1ad3      	subs	r3, r2, r3
 8012b2a:	60fb      	str	r3, [r7, #12]
 8012b2c:	68fb      	ldr	r3, [r7, #12]
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	d106      	bne.n	8012b40 <I2C_DMAAbort+0x48>
 8012b32:	697b      	ldr	r3, [r7, #20]
 8012b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012b36:	f043 0220 	orr.w	r2, r3, #32
 8012b3a:	697b      	ldr	r3, [r7, #20]
 8012b3c:	641a      	str	r2, [r3, #64]	; 0x40
 8012b3e:	e00a      	b.n	8012b56 <I2C_DMAAbort+0x5e>
 8012b40:	68fb      	ldr	r3, [r7, #12]
 8012b42:	3b01      	subs	r3, #1
 8012b44:	60fb      	str	r3, [r7, #12]
 8012b46:	697b      	ldr	r3, [r7, #20]
 8012b48:	681b      	ldr	r3, [r3, #0]
 8012b4a:	681b      	ldr	r3, [r3, #0]
 8012b4c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8012b50:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8012b54:	d0ea      	beq.n	8012b2c <I2C_DMAAbort+0x34>
 8012b56:	697b      	ldr	r3, [r7, #20]
 8012b58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012b5a:	2b00      	cmp	r3, #0
 8012b5c:	d003      	beq.n	8012b66 <I2C_DMAAbort+0x6e>
 8012b5e:	697b      	ldr	r3, [r7, #20]
 8012b60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012b62:	2200      	movs	r2, #0
 8012b64:	63da      	str	r2, [r3, #60]	; 0x3c
 8012b66:	697b      	ldr	r3, [r7, #20]
 8012b68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b6a:	2b00      	cmp	r3, #0
 8012b6c:	d003      	beq.n	8012b76 <I2C_DMAAbort+0x7e>
 8012b6e:	697b      	ldr	r3, [r7, #20]
 8012b70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b72:	2200      	movs	r2, #0
 8012b74:	63da      	str	r2, [r3, #60]	; 0x3c
 8012b76:	697b      	ldr	r3, [r7, #20]
 8012b78:	681b      	ldr	r3, [r3, #0]
 8012b7a:	681a      	ldr	r2, [r3, #0]
 8012b7c:	697b      	ldr	r3, [r7, #20]
 8012b7e:	681b      	ldr	r3, [r3, #0]
 8012b80:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012b84:	601a      	str	r2, [r3, #0]
 8012b86:	697b      	ldr	r3, [r7, #20]
 8012b88:	2200      	movs	r2, #0
 8012b8a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012b8c:	697b      	ldr	r3, [r7, #20]
 8012b8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012b90:	2b00      	cmp	r3, #0
 8012b92:	d003      	beq.n	8012b9c <I2C_DMAAbort+0xa4>
 8012b94:	697b      	ldr	r3, [r7, #20]
 8012b96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012b98:	2200      	movs	r2, #0
 8012b9a:	651a      	str	r2, [r3, #80]	; 0x50
 8012b9c:	697b      	ldr	r3, [r7, #20]
 8012b9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ba0:	2b00      	cmp	r3, #0
 8012ba2:	d003      	beq.n	8012bac <I2C_DMAAbort+0xb4>
 8012ba4:	697b      	ldr	r3, [r7, #20]
 8012ba6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ba8:	2200      	movs	r2, #0
 8012baa:	651a      	str	r2, [r3, #80]	; 0x50
 8012bac:	697b      	ldr	r3, [r7, #20]
 8012bae:	681b      	ldr	r3, [r3, #0]
 8012bb0:	681a      	ldr	r2, [r3, #0]
 8012bb2:	697b      	ldr	r3, [r7, #20]
 8012bb4:	681b      	ldr	r3, [r3, #0]
 8012bb6:	f022 0201 	bic.w	r2, r2, #1
 8012bba:	601a      	str	r2, [r3, #0]
 8012bbc:	697b      	ldr	r3, [r7, #20]
 8012bbe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012bc2:	b2db      	uxtb	r3, r3
 8012bc4:	2b60      	cmp	r3, #96	; 0x60
 8012bc6:	d10e      	bne.n	8012be6 <I2C_DMAAbort+0xee>
 8012bc8:	697b      	ldr	r3, [r7, #20]
 8012bca:	2220      	movs	r2, #32
 8012bcc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012bd0:	697b      	ldr	r3, [r7, #20]
 8012bd2:	2200      	movs	r2, #0
 8012bd4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012bd8:	697b      	ldr	r3, [r7, #20]
 8012bda:	2200      	movs	r2, #0
 8012bdc:	641a      	str	r2, [r3, #64]	; 0x40
 8012bde:	6978      	ldr	r0, [r7, #20]
 8012be0:	f7ff fb4d 	bl	801227e <HAL_I2C_AbortCpltCallback>
 8012be4:	e027      	b.n	8012c36 <I2C_DMAAbort+0x13e>
 8012be6:	7cfb      	ldrb	r3, [r7, #19]
 8012be8:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8012bec:	2b28      	cmp	r3, #40	; 0x28
 8012bee:	d117      	bne.n	8012c20 <I2C_DMAAbort+0x128>
 8012bf0:	697b      	ldr	r3, [r7, #20]
 8012bf2:	681b      	ldr	r3, [r3, #0]
 8012bf4:	681a      	ldr	r2, [r3, #0]
 8012bf6:	697b      	ldr	r3, [r7, #20]
 8012bf8:	681b      	ldr	r3, [r3, #0]
 8012bfa:	f042 0201 	orr.w	r2, r2, #1
 8012bfe:	601a      	str	r2, [r3, #0]
 8012c00:	697b      	ldr	r3, [r7, #20]
 8012c02:	681b      	ldr	r3, [r3, #0]
 8012c04:	681a      	ldr	r2, [r3, #0]
 8012c06:	697b      	ldr	r3, [r7, #20]
 8012c08:	681b      	ldr	r3, [r3, #0]
 8012c0a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012c0e:	601a      	str	r2, [r3, #0]
 8012c10:	697b      	ldr	r3, [r7, #20]
 8012c12:	2200      	movs	r2, #0
 8012c14:	631a      	str	r2, [r3, #48]	; 0x30
 8012c16:	697b      	ldr	r3, [r7, #20]
 8012c18:	2228      	movs	r2, #40	; 0x28
 8012c1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012c1e:	e007      	b.n	8012c30 <I2C_DMAAbort+0x138>
 8012c20:	697b      	ldr	r3, [r7, #20]
 8012c22:	2220      	movs	r2, #32
 8012c24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012c28:	697b      	ldr	r3, [r7, #20]
 8012c2a:	2200      	movs	r2, #0
 8012c2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012c30:	6978      	ldr	r0, [r7, #20]
 8012c32:	f7ff fb1a 	bl	801226a <HAL_I2C_ErrorCallback>
 8012c36:	bf00      	nop
 8012c38:	3718      	adds	r7, #24
 8012c3a:	46bd      	mov	sp, r7
 8012c3c:	bd80      	pop	{r7, pc}
 8012c3e:	bf00      	nop
 8012c40:	20000004 	.word	0x20000004
 8012c44:	14f8b589 	.word	0x14f8b589

08012c48 <I2C_WaitOnFlagUntilTimeout>:
 8012c48:	b580      	push	{r7, lr}
 8012c4a:	b084      	sub	sp, #16
 8012c4c:	af00      	add	r7, sp, #0
 8012c4e:	60f8      	str	r0, [r7, #12]
 8012c50:	60b9      	str	r1, [r7, #8]
 8012c52:	603b      	str	r3, [r7, #0]
 8012c54:	4613      	mov	r3, r2
 8012c56:	71fb      	strb	r3, [r7, #7]
 8012c58:	e025      	b.n	8012ca6 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012c5a:	683b      	ldr	r3, [r7, #0]
 8012c5c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012c60:	d021      	beq.n	8012ca6 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012c62:	f7fc fc6b 	bl	800f53c <HAL_GetTick>
 8012c66:	4602      	mov	r2, r0
 8012c68:	69bb      	ldr	r3, [r7, #24]
 8012c6a:	1ad3      	subs	r3, r2, r3
 8012c6c:	683a      	ldr	r2, [r7, #0]
 8012c6e:	429a      	cmp	r2, r3
 8012c70:	d302      	bcc.n	8012c78 <I2C_WaitOnFlagUntilTimeout+0x30>
 8012c72:	683b      	ldr	r3, [r7, #0]
 8012c74:	2b00      	cmp	r3, #0
 8012c76:	d116      	bne.n	8012ca6 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012c78:	68fb      	ldr	r3, [r7, #12]
 8012c7a:	2200      	movs	r2, #0
 8012c7c:	631a      	str	r2, [r3, #48]	; 0x30
 8012c7e:	68fb      	ldr	r3, [r7, #12]
 8012c80:	2220      	movs	r2, #32
 8012c82:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012c86:	68fb      	ldr	r3, [r7, #12]
 8012c88:	2200      	movs	r2, #0
 8012c8a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012c8e:	68fb      	ldr	r3, [r7, #12]
 8012c90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012c92:	f043 0220 	orr.w	r2, r3, #32
 8012c96:	68fb      	ldr	r3, [r7, #12]
 8012c98:	641a      	str	r2, [r3, #64]	; 0x40
 8012c9a:	68fb      	ldr	r3, [r7, #12]
 8012c9c:	2200      	movs	r2, #0
 8012c9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012ca2:	2301      	movs	r3, #1
 8012ca4:	e023      	b.n	8012cee <I2C_WaitOnFlagUntilTimeout+0xa6>
 8012ca6:	68bb      	ldr	r3, [r7, #8]
 8012ca8:	0c1b      	lsrs	r3, r3, #16
 8012caa:	b2db      	uxtb	r3, r3
 8012cac:	2b01      	cmp	r3, #1
 8012cae:	d10d      	bne.n	8012ccc <I2C_WaitOnFlagUntilTimeout+0x84>
 8012cb0:	68fb      	ldr	r3, [r7, #12]
 8012cb2:	681b      	ldr	r3, [r3, #0]
 8012cb4:	695b      	ldr	r3, [r3, #20]
 8012cb6:	43da      	mvns	r2, r3
 8012cb8:	68bb      	ldr	r3, [r7, #8]
 8012cba:	4013      	ands	r3, r2
 8012cbc:	b29b      	uxth	r3, r3
 8012cbe:	2b00      	cmp	r3, #0
 8012cc0:	bf0c      	ite	eq
 8012cc2:	2301      	moveq	r3, #1
 8012cc4:	2300      	movne	r3, #0
 8012cc6:	b2db      	uxtb	r3, r3
 8012cc8:	461a      	mov	r2, r3
 8012cca:	e00c      	b.n	8012ce6 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8012ccc:	68fb      	ldr	r3, [r7, #12]
 8012cce:	681b      	ldr	r3, [r3, #0]
 8012cd0:	699b      	ldr	r3, [r3, #24]
 8012cd2:	43da      	mvns	r2, r3
 8012cd4:	68bb      	ldr	r3, [r7, #8]
 8012cd6:	4013      	ands	r3, r2
 8012cd8:	b29b      	uxth	r3, r3
 8012cda:	2b00      	cmp	r3, #0
 8012cdc:	bf0c      	ite	eq
 8012cde:	2301      	moveq	r3, #1
 8012ce0:	2300      	movne	r3, #0
 8012ce2:	b2db      	uxtb	r3, r3
 8012ce4:	461a      	mov	r2, r3
 8012ce6:	79fb      	ldrb	r3, [r7, #7]
 8012ce8:	429a      	cmp	r2, r3
 8012cea:	d0b6      	beq.n	8012c5a <I2C_WaitOnFlagUntilTimeout+0x12>
 8012cec:	2300      	movs	r3, #0
 8012cee:	4618      	mov	r0, r3
 8012cf0:	3710      	adds	r7, #16
 8012cf2:	46bd      	mov	sp, r7
 8012cf4:	bd80      	pop	{r7, pc}

08012cf6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8012cf6:	b580      	push	{r7, lr}
 8012cf8:	b084      	sub	sp, #16
 8012cfa:	af00      	add	r7, sp, #0
 8012cfc:	60f8      	str	r0, [r7, #12]
 8012cfe:	60b9      	str	r1, [r7, #8]
 8012d00:	607a      	str	r2, [r7, #4]
 8012d02:	603b      	str	r3, [r7, #0]
 8012d04:	e051      	b.n	8012daa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012d06:	68fb      	ldr	r3, [r7, #12]
 8012d08:	681b      	ldr	r3, [r3, #0]
 8012d0a:	695b      	ldr	r3, [r3, #20]
 8012d0c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8012d10:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012d14:	d123      	bne.n	8012d5e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8012d16:	68fb      	ldr	r3, [r7, #12]
 8012d18:	681b      	ldr	r3, [r3, #0]
 8012d1a:	681a      	ldr	r2, [r3, #0]
 8012d1c:	68fb      	ldr	r3, [r7, #12]
 8012d1e:	681b      	ldr	r3, [r3, #0]
 8012d20:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012d24:	601a      	str	r2, [r3, #0]
 8012d26:	68fb      	ldr	r3, [r7, #12]
 8012d28:	681b      	ldr	r3, [r3, #0]
 8012d2a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012d2e:	615a      	str	r2, [r3, #20]
 8012d30:	68fb      	ldr	r3, [r7, #12]
 8012d32:	2200      	movs	r2, #0
 8012d34:	631a      	str	r2, [r3, #48]	; 0x30
 8012d36:	68fb      	ldr	r3, [r7, #12]
 8012d38:	2220      	movs	r2, #32
 8012d3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012d3e:	68fb      	ldr	r3, [r7, #12]
 8012d40:	2200      	movs	r2, #0
 8012d42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012d46:	68fb      	ldr	r3, [r7, #12]
 8012d48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012d4a:	f043 0204 	orr.w	r2, r3, #4
 8012d4e:	68fb      	ldr	r3, [r7, #12]
 8012d50:	641a      	str	r2, [r3, #64]	; 0x40
 8012d52:	68fb      	ldr	r3, [r7, #12]
 8012d54:	2200      	movs	r2, #0
 8012d56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012d5a:	2301      	movs	r3, #1
 8012d5c:	e046      	b.n	8012dec <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8012d5e:	687b      	ldr	r3, [r7, #4]
 8012d60:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012d64:	d021      	beq.n	8012daa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012d66:	f7fc fbe9 	bl	800f53c <HAL_GetTick>
 8012d6a:	4602      	mov	r2, r0
 8012d6c:	683b      	ldr	r3, [r7, #0]
 8012d6e:	1ad3      	subs	r3, r2, r3
 8012d70:	687a      	ldr	r2, [r7, #4]
 8012d72:	429a      	cmp	r2, r3
 8012d74:	d302      	bcc.n	8012d7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8012d76:	687b      	ldr	r3, [r7, #4]
 8012d78:	2b00      	cmp	r3, #0
 8012d7a:	d116      	bne.n	8012daa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012d7c:	68fb      	ldr	r3, [r7, #12]
 8012d7e:	2200      	movs	r2, #0
 8012d80:	631a      	str	r2, [r3, #48]	; 0x30
 8012d82:	68fb      	ldr	r3, [r7, #12]
 8012d84:	2220      	movs	r2, #32
 8012d86:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012d8a:	68fb      	ldr	r3, [r7, #12]
 8012d8c:	2200      	movs	r2, #0
 8012d8e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012d92:	68fb      	ldr	r3, [r7, #12]
 8012d94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012d96:	f043 0220 	orr.w	r2, r3, #32
 8012d9a:	68fb      	ldr	r3, [r7, #12]
 8012d9c:	641a      	str	r2, [r3, #64]	; 0x40
 8012d9e:	68fb      	ldr	r3, [r7, #12]
 8012da0:	2200      	movs	r2, #0
 8012da2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012da6:	2301      	movs	r3, #1
 8012da8:	e020      	b.n	8012dec <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8012daa:	68bb      	ldr	r3, [r7, #8]
 8012dac:	0c1b      	lsrs	r3, r3, #16
 8012dae:	b2db      	uxtb	r3, r3
 8012db0:	2b01      	cmp	r3, #1
 8012db2:	d10c      	bne.n	8012dce <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8012db4:	68fb      	ldr	r3, [r7, #12]
 8012db6:	681b      	ldr	r3, [r3, #0]
 8012db8:	695b      	ldr	r3, [r3, #20]
 8012dba:	43da      	mvns	r2, r3
 8012dbc:	68bb      	ldr	r3, [r7, #8]
 8012dbe:	4013      	ands	r3, r2
 8012dc0:	b29b      	uxth	r3, r3
 8012dc2:	2b00      	cmp	r3, #0
 8012dc4:	bf14      	ite	ne
 8012dc6:	2301      	movne	r3, #1
 8012dc8:	2300      	moveq	r3, #0
 8012dca:	b2db      	uxtb	r3, r3
 8012dcc:	e00b      	b.n	8012de6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8012dce:	68fb      	ldr	r3, [r7, #12]
 8012dd0:	681b      	ldr	r3, [r3, #0]
 8012dd2:	699b      	ldr	r3, [r3, #24]
 8012dd4:	43da      	mvns	r2, r3
 8012dd6:	68bb      	ldr	r3, [r7, #8]
 8012dd8:	4013      	ands	r3, r2
 8012dda:	b29b      	uxth	r3, r3
 8012ddc:	2b00      	cmp	r3, #0
 8012dde:	bf14      	ite	ne
 8012de0:	2301      	movne	r3, #1
 8012de2:	2300      	moveq	r3, #0
 8012de4:	b2db      	uxtb	r3, r3
 8012de6:	2b00      	cmp	r3, #0
 8012de8:	d18d      	bne.n	8012d06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8012dea:	2300      	movs	r3, #0
 8012dec:	4618      	mov	r0, r3
 8012dee:	3710      	adds	r7, #16
 8012df0:	46bd      	mov	sp, r7
 8012df2:	bd80      	pop	{r7, pc}

08012df4 <I2C_WaitOnTXEFlagUntilTimeout>:
 8012df4:	b580      	push	{r7, lr}
 8012df6:	b084      	sub	sp, #16
 8012df8:	af00      	add	r7, sp, #0
 8012dfa:	60f8      	str	r0, [r7, #12]
 8012dfc:	60b9      	str	r1, [r7, #8]
 8012dfe:	607a      	str	r2, [r7, #4]
 8012e00:	e02d      	b.n	8012e5e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012e02:	68f8      	ldr	r0, [r7, #12]
 8012e04:	f000 f8ce 	bl	8012fa4 <I2C_IsAcknowledgeFailed>
 8012e08:	4603      	mov	r3, r0
 8012e0a:	2b00      	cmp	r3, #0
 8012e0c:	d001      	beq.n	8012e12 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8012e0e:	2301      	movs	r3, #1
 8012e10:	e02d      	b.n	8012e6e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8012e12:	68bb      	ldr	r3, [r7, #8]
 8012e14:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012e18:	d021      	beq.n	8012e5e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012e1a:	f7fc fb8f 	bl	800f53c <HAL_GetTick>
 8012e1e:	4602      	mov	r2, r0
 8012e20:	687b      	ldr	r3, [r7, #4]
 8012e22:	1ad3      	subs	r3, r2, r3
 8012e24:	68ba      	ldr	r2, [r7, #8]
 8012e26:	429a      	cmp	r2, r3
 8012e28:	d302      	bcc.n	8012e30 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8012e2a:	68bb      	ldr	r3, [r7, #8]
 8012e2c:	2b00      	cmp	r3, #0
 8012e2e:	d116      	bne.n	8012e5e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012e30:	68fb      	ldr	r3, [r7, #12]
 8012e32:	2200      	movs	r2, #0
 8012e34:	631a      	str	r2, [r3, #48]	; 0x30
 8012e36:	68fb      	ldr	r3, [r7, #12]
 8012e38:	2220      	movs	r2, #32
 8012e3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012e3e:	68fb      	ldr	r3, [r7, #12]
 8012e40:	2200      	movs	r2, #0
 8012e42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012e46:	68fb      	ldr	r3, [r7, #12]
 8012e48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012e4a:	f043 0220 	orr.w	r2, r3, #32
 8012e4e:	68fb      	ldr	r3, [r7, #12]
 8012e50:	641a      	str	r2, [r3, #64]	; 0x40
 8012e52:	68fb      	ldr	r3, [r7, #12]
 8012e54:	2200      	movs	r2, #0
 8012e56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012e5a:	2301      	movs	r3, #1
 8012e5c:	e007      	b.n	8012e6e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8012e5e:	68fb      	ldr	r3, [r7, #12]
 8012e60:	681b      	ldr	r3, [r3, #0]
 8012e62:	695b      	ldr	r3, [r3, #20]
 8012e64:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8012e68:	2b80      	cmp	r3, #128	; 0x80
 8012e6a:	d1ca      	bne.n	8012e02 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8012e6c:	2300      	movs	r3, #0
 8012e6e:	4618      	mov	r0, r3
 8012e70:	3710      	adds	r7, #16
 8012e72:	46bd      	mov	sp, r7
 8012e74:	bd80      	pop	{r7, pc}

08012e76 <I2C_WaitOnBTFFlagUntilTimeout>:
 8012e76:	b580      	push	{r7, lr}
 8012e78:	b084      	sub	sp, #16
 8012e7a:	af00      	add	r7, sp, #0
 8012e7c:	60f8      	str	r0, [r7, #12]
 8012e7e:	60b9      	str	r1, [r7, #8]
 8012e80:	607a      	str	r2, [r7, #4]
 8012e82:	e02d      	b.n	8012ee0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8012e84:	68f8      	ldr	r0, [r7, #12]
 8012e86:	f000 f88d 	bl	8012fa4 <I2C_IsAcknowledgeFailed>
 8012e8a:	4603      	mov	r3, r0
 8012e8c:	2b00      	cmp	r3, #0
 8012e8e:	d001      	beq.n	8012e94 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8012e90:	2301      	movs	r3, #1
 8012e92:	e02d      	b.n	8012ef0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8012e94:	68bb      	ldr	r3, [r7, #8]
 8012e96:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012e9a:	d021      	beq.n	8012ee0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8012e9c:	f7fc fb4e 	bl	800f53c <HAL_GetTick>
 8012ea0:	4602      	mov	r2, r0
 8012ea2:	687b      	ldr	r3, [r7, #4]
 8012ea4:	1ad3      	subs	r3, r2, r3
 8012ea6:	68ba      	ldr	r2, [r7, #8]
 8012ea8:	429a      	cmp	r2, r3
 8012eaa:	d302      	bcc.n	8012eb2 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8012eac:	68bb      	ldr	r3, [r7, #8]
 8012eae:	2b00      	cmp	r3, #0
 8012eb0:	d116      	bne.n	8012ee0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8012eb2:	68fb      	ldr	r3, [r7, #12]
 8012eb4:	2200      	movs	r2, #0
 8012eb6:	631a      	str	r2, [r3, #48]	; 0x30
 8012eb8:	68fb      	ldr	r3, [r7, #12]
 8012eba:	2220      	movs	r2, #32
 8012ebc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ec0:	68fb      	ldr	r3, [r7, #12]
 8012ec2:	2200      	movs	r2, #0
 8012ec4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012ec8:	68fb      	ldr	r3, [r7, #12]
 8012eca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012ecc:	f043 0220 	orr.w	r2, r3, #32
 8012ed0:	68fb      	ldr	r3, [r7, #12]
 8012ed2:	641a      	str	r2, [r3, #64]	; 0x40
 8012ed4:	68fb      	ldr	r3, [r7, #12]
 8012ed6:	2200      	movs	r2, #0
 8012ed8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012edc:	2301      	movs	r3, #1
 8012ede:	e007      	b.n	8012ef0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8012ee0:	68fb      	ldr	r3, [r7, #12]
 8012ee2:	681b      	ldr	r3, [r3, #0]
 8012ee4:	695b      	ldr	r3, [r3, #20]
 8012ee6:	f003 0304 	and.w	r3, r3, #4
 8012eea:	2b04      	cmp	r3, #4
 8012eec:	d1ca      	bne.n	8012e84 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8012eee:	2300      	movs	r3, #0
 8012ef0:	4618      	mov	r0, r3
 8012ef2:	3710      	adds	r7, #16
 8012ef4:	46bd      	mov	sp, r7
 8012ef6:	bd80      	pop	{r7, pc}

08012ef8 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8012ef8:	b580      	push	{r7, lr}
 8012efa:	b084      	sub	sp, #16
 8012efc:	af00      	add	r7, sp, #0
 8012efe:	60f8      	str	r0, [r7, #12]
 8012f00:	60b9      	str	r1, [r7, #8]
 8012f02:	607a      	str	r2, [r7, #4]
 8012f04:	e042      	b.n	8012f8c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8012f06:	68fb      	ldr	r3, [r7, #12]
 8012f08:	681b      	ldr	r3, [r3, #0]
 8012f0a:	695b      	ldr	r3, [r3, #20]
 8012f0c:	f003 0310 	and.w	r3, r3, #16
 8012f10:	2b10      	cmp	r3, #16
 8012f12:	d119      	bne.n	8012f48 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8012f14:	68fb      	ldr	r3, [r7, #12]
 8012f16:	681b      	ldr	r3, [r3, #0]
 8012f18:	f06f 0210 	mvn.w	r2, #16
 8012f1c:	615a      	str	r2, [r3, #20]
 8012f1e:	68fb      	ldr	r3, [r7, #12]
 8012f20:	2200      	movs	r2, #0
 8012f22:	631a      	str	r2, [r3, #48]	; 0x30
 8012f24:	68fb      	ldr	r3, [r7, #12]
 8012f26:	2220      	movs	r2, #32
 8012f28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012f2c:	68fb      	ldr	r3, [r7, #12]
 8012f2e:	2200      	movs	r2, #0
 8012f30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012f34:	68fb      	ldr	r3, [r7, #12]
 8012f36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8012f38:	68fb      	ldr	r3, [r7, #12]
 8012f3a:	641a      	str	r2, [r3, #64]	; 0x40
 8012f3c:	68fb      	ldr	r3, [r7, #12]
 8012f3e:	2200      	movs	r2, #0
 8012f40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012f44:	2301      	movs	r3, #1
 8012f46:	e029      	b.n	8012f9c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8012f48:	f7fc faf8 	bl	800f53c <HAL_GetTick>
 8012f4c:	4602      	mov	r2, r0
 8012f4e:	687b      	ldr	r3, [r7, #4]
 8012f50:	1ad3      	subs	r3, r2, r3
 8012f52:	68ba      	ldr	r2, [r7, #8]
 8012f54:	429a      	cmp	r2, r3
 8012f56:	d302      	bcc.n	8012f5e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8012f58:	68bb      	ldr	r3, [r7, #8]
 8012f5a:	2b00      	cmp	r3, #0
 8012f5c:	d116      	bne.n	8012f8c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8012f5e:	68fb      	ldr	r3, [r7, #12]
 8012f60:	2200      	movs	r2, #0
 8012f62:	631a      	str	r2, [r3, #48]	; 0x30
 8012f64:	68fb      	ldr	r3, [r7, #12]
 8012f66:	2220      	movs	r2, #32
 8012f68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012f6c:	68fb      	ldr	r3, [r7, #12]
 8012f6e:	2200      	movs	r2, #0
 8012f70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012f74:	68fb      	ldr	r3, [r7, #12]
 8012f76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012f78:	f043 0220 	orr.w	r2, r3, #32
 8012f7c:	68fb      	ldr	r3, [r7, #12]
 8012f7e:	641a      	str	r2, [r3, #64]	; 0x40
 8012f80:	68fb      	ldr	r3, [r7, #12]
 8012f82:	2200      	movs	r2, #0
 8012f84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012f88:	2301      	movs	r3, #1
 8012f8a:	e007      	b.n	8012f9c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8012f8c:	68fb      	ldr	r3, [r7, #12]
 8012f8e:	681b      	ldr	r3, [r3, #0]
 8012f90:	695b      	ldr	r3, [r3, #20]
 8012f92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012f96:	2b40      	cmp	r3, #64	; 0x40
 8012f98:	d1b5      	bne.n	8012f06 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8012f9a:	2300      	movs	r3, #0
 8012f9c:	4618      	mov	r0, r3
 8012f9e:	3710      	adds	r7, #16
 8012fa0:	46bd      	mov	sp, r7
 8012fa2:	bd80      	pop	{r7, pc}

08012fa4 <I2C_IsAcknowledgeFailed>:
 8012fa4:	b480      	push	{r7}
 8012fa6:	b083      	sub	sp, #12
 8012fa8:	af00      	add	r7, sp, #0
 8012faa:	6078      	str	r0, [r7, #4]
 8012fac:	687b      	ldr	r3, [r7, #4]
 8012fae:	681b      	ldr	r3, [r3, #0]
 8012fb0:	695b      	ldr	r3, [r3, #20]
 8012fb2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8012fb6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012fba:	d11b      	bne.n	8012ff4 <I2C_IsAcknowledgeFailed+0x50>
 8012fbc:	687b      	ldr	r3, [r7, #4]
 8012fbe:	681b      	ldr	r3, [r3, #0]
 8012fc0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012fc4:	615a      	str	r2, [r3, #20]
 8012fc6:	687b      	ldr	r3, [r7, #4]
 8012fc8:	2200      	movs	r2, #0
 8012fca:	631a      	str	r2, [r3, #48]	; 0x30
 8012fcc:	687b      	ldr	r3, [r7, #4]
 8012fce:	2220      	movs	r2, #32
 8012fd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012fd4:	687b      	ldr	r3, [r7, #4]
 8012fd6:	2200      	movs	r2, #0
 8012fd8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012fdc:	687b      	ldr	r3, [r7, #4]
 8012fde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012fe0:	f043 0204 	orr.w	r2, r3, #4
 8012fe4:	687b      	ldr	r3, [r7, #4]
 8012fe6:	641a      	str	r2, [r3, #64]	; 0x40
 8012fe8:	687b      	ldr	r3, [r7, #4]
 8012fea:	2200      	movs	r2, #0
 8012fec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012ff0:	2301      	movs	r3, #1
 8012ff2:	e000      	b.n	8012ff6 <I2C_IsAcknowledgeFailed+0x52>
 8012ff4:	2300      	movs	r3, #0
 8012ff6:	4618      	mov	r0, r3
 8012ff8:	370c      	adds	r7, #12
 8012ffa:	46bd      	mov	sp, r7
 8012ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013000:	4770      	bx	lr

08013002 <HAL_PCD_Init>:
 8013002:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013004:	b08f      	sub	sp, #60	; 0x3c
 8013006:	af0a      	add	r7, sp, #40	; 0x28
 8013008:	6078      	str	r0, [r7, #4]
 801300a:	687b      	ldr	r3, [r7, #4]
 801300c:	2b00      	cmp	r3, #0
 801300e:	d101      	bne.n	8013014 <HAL_PCD_Init+0x12>
 8013010:	2301      	movs	r3, #1
 8013012:	e10f      	b.n	8013234 <HAL_PCD_Init+0x232>
 8013014:	687b      	ldr	r3, [r7, #4]
 8013016:	681b      	ldr	r3, [r3, #0]
 8013018:	60bb      	str	r3, [r7, #8]
 801301a:	687b      	ldr	r3, [r7, #4]
 801301c:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 8013020:	b2db      	uxtb	r3, r3
 8013022:	2b00      	cmp	r3, #0
 8013024:	d106      	bne.n	8013034 <HAL_PCD_Init+0x32>
 8013026:	687b      	ldr	r3, [r7, #4]
 8013028:	2200      	movs	r2, #0
 801302a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 801302e:	6878      	ldr	r0, [r7, #4]
 8013030:	f00b fe54 	bl	801ecdc <HAL_PCD_MspInit>
 8013034:	687b      	ldr	r3, [r7, #4]
 8013036:	2203      	movs	r2, #3
 8013038:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 801303c:	68bb      	ldr	r3, [r7, #8]
 801303e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013040:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013044:	2b00      	cmp	r3, #0
 8013046:	d102      	bne.n	801304e <HAL_PCD_Init+0x4c>
 8013048:	687b      	ldr	r3, [r7, #4]
 801304a:	2200      	movs	r2, #0
 801304c:	611a      	str	r2, [r3, #16]
 801304e:	687b      	ldr	r3, [r7, #4]
 8013050:	681b      	ldr	r3, [r3, #0]
 8013052:	4618      	mov	r0, r3
 8013054:	f004 ff55 	bl	8017f02 <USB_DisableGlobalInt>
 8013058:	687b      	ldr	r3, [r7, #4]
 801305a:	681b      	ldr	r3, [r3, #0]
 801305c:	603b      	str	r3, [r7, #0]
 801305e:	687e      	ldr	r6, [r7, #4]
 8013060:	466d      	mov	r5, sp
 8013062:	f106 0410 	add.w	r4, r6, #16
 8013066:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013068:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801306a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801306c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801306e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8013072:	e885 0003 	stmia.w	r5, {r0, r1}
 8013076:	1d33      	adds	r3, r6, #4
 8013078:	cb0e      	ldmia	r3, {r1, r2, r3}
 801307a:	6838      	ldr	r0, [r7, #0]
 801307c:	f004 fe2c 	bl	8017cd8 <USB_CoreInit>
 8013080:	4603      	mov	r3, r0
 8013082:	2b00      	cmp	r3, #0
 8013084:	d005      	beq.n	8013092 <HAL_PCD_Init+0x90>
 8013086:	687b      	ldr	r3, [r7, #4]
 8013088:	2202      	movs	r2, #2
 801308a:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 801308e:	2301      	movs	r3, #1
 8013090:	e0d0      	b.n	8013234 <HAL_PCD_Init+0x232>
 8013092:	687b      	ldr	r3, [r7, #4]
 8013094:	681b      	ldr	r3, [r3, #0]
 8013096:	2100      	movs	r1, #0
 8013098:	4618      	mov	r0, r3
 801309a:	f004 ff43 	bl	8017f24 <USB_SetCurrentMode>
 801309e:	2300      	movs	r3, #0
 80130a0:	73fb      	strb	r3, [r7, #15]
 80130a2:	e04a      	b.n	801313a <HAL_PCD_Init+0x138>
 80130a4:	7bfa      	ldrb	r2, [r7, #15]
 80130a6:	6879      	ldr	r1, [r7, #4]
 80130a8:	4613      	mov	r3, r2
 80130aa:	00db      	lsls	r3, r3, #3
 80130ac:	4413      	add	r3, r2
 80130ae:	009b      	lsls	r3, r3, #2
 80130b0:	440b      	add	r3, r1
 80130b2:	333d      	adds	r3, #61	; 0x3d
 80130b4:	2201      	movs	r2, #1
 80130b6:	701a      	strb	r2, [r3, #0]
 80130b8:	7bfa      	ldrb	r2, [r7, #15]
 80130ba:	6879      	ldr	r1, [r7, #4]
 80130bc:	4613      	mov	r3, r2
 80130be:	00db      	lsls	r3, r3, #3
 80130c0:	4413      	add	r3, r2
 80130c2:	009b      	lsls	r3, r3, #2
 80130c4:	440b      	add	r3, r1
 80130c6:	333c      	adds	r3, #60	; 0x3c
 80130c8:	7bfa      	ldrb	r2, [r7, #15]
 80130ca:	701a      	strb	r2, [r3, #0]
 80130cc:	7bfa      	ldrb	r2, [r7, #15]
 80130ce:	7bfb      	ldrb	r3, [r7, #15]
 80130d0:	b298      	uxth	r0, r3
 80130d2:	6879      	ldr	r1, [r7, #4]
 80130d4:	4613      	mov	r3, r2
 80130d6:	00db      	lsls	r3, r3, #3
 80130d8:	4413      	add	r3, r2
 80130da:	009b      	lsls	r3, r3, #2
 80130dc:	440b      	add	r3, r1
 80130de:	3344      	adds	r3, #68	; 0x44
 80130e0:	4602      	mov	r2, r0
 80130e2:	801a      	strh	r2, [r3, #0]
 80130e4:	7bfa      	ldrb	r2, [r7, #15]
 80130e6:	6879      	ldr	r1, [r7, #4]
 80130e8:	4613      	mov	r3, r2
 80130ea:	00db      	lsls	r3, r3, #3
 80130ec:	4413      	add	r3, r2
 80130ee:	009b      	lsls	r3, r3, #2
 80130f0:	440b      	add	r3, r1
 80130f2:	3340      	adds	r3, #64	; 0x40
 80130f4:	2200      	movs	r2, #0
 80130f6:	701a      	strb	r2, [r3, #0]
 80130f8:	7bfa      	ldrb	r2, [r7, #15]
 80130fa:	6879      	ldr	r1, [r7, #4]
 80130fc:	4613      	mov	r3, r2
 80130fe:	00db      	lsls	r3, r3, #3
 8013100:	4413      	add	r3, r2
 8013102:	009b      	lsls	r3, r3, #2
 8013104:	440b      	add	r3, r1
 8013106:	3348      	adds	r3, #72	; 0x48
 8013108:	2200      	movs	r2, #0
 801310a:	601a      	str	r2, [r3, #0]
 801310c:	7bfa      	ldrb	r2, [r7, #15]
 801310e:	6879      	ldr	r1, [r7, #4]
 8013110:	4613      	mov	r3, r2
 8013112:	00db      	lsls	r3, r3, #3
 8013114:	4413      	add	r3, r2
 8013116:	009b      	lsls	r3, r3, #2
 8013118:	440b      	add	r3, r1
 801311a:	334c      	adds	r3, #76	; 0x4c
 801311c:	2200      	movs	r2, #0
 801311e:	601a      	str	r2, [r3, #0]
 8013120:	7bfa      	ldrb	r2, [r7, #15]
 8013122:	6879      	ldr	r1, [r7, #4]
 8013124:	4613      	mov	r3, r2
 8013126:	00db      	lsls	r3, r3, #3
 8013128:	4413      	add	r3, r2
 801312a:	009b      	lsls	r3, r3, #2
 801312c:	440b      	add	r3, r1
 801312e:	3354      	adds	r3, #84	; 0x54
 8013130:	2200      	movs	r2, #0
 8013132:	601a      	str	r2, [r3, #0]
 8013134:	7bfb      	ldrb	r3, [r7, #15]
 8013136:	3301      	adds	r3, #1
 8013138:	73fb      	strb	r3, [r7, #15]
 801313a:	7bfa      	ldrb	r2, [r7, #15]
 801313c:	687b      	ldr	r3, [r7, #4]
 801313e:	685b      	ldr	r3, [r3, #4]
 8013140:	429a      	cmp	r2, r3
 8013142:	d3af      	bcc.n	80130a4 <HAL_PCD_Init+0xa2>
 8013144:	2300      	movs	r3, #0
 8013146:	73fb      	strb	r3, [r7, #15]
 8013148:	e044      	b.n	80131d4 <HAL_PCD_Init+0x1d2>
 801314a:	7bfa      	ldrb	r2, [r7, #15]
 801314c:	6879      	ldr	r1, [r7, #4]
 801314e:	4613      	mov	r3, r2
 8013150:	00db      	lsls	r3, r3, #3
 8013152:	4413      	add	r3, r2
 8013154:	009b      	lsls	r3, r3, #2
 8013156:	440b      	add	r3, r1
 8013158:	f203 237d 	addw	r3, r3, #637	; 0x27d
 801315c:	2200      	movs	r2, #0
 801315e:	701a      	strb	r2, [r3, #0]
 8013160:	7bfa      	ldrb	r2, [r7, #15]
 8013162:	6879      	ldr	r1, [r7, #4]
 8013164:	4613      	mov	r3, r2
 8013166:	00db      	lsls	r3, r3, #3
 8013168:	4413      	add	r3, r2
 801316a:	009b      	lsls	r3, r3, #2
 801316c:	440b      	add	r3, r1
 801316e:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 8013172:	7bfa      	ldrb	r2, [r7, #15]
 8013174:	701a      	strb	r2, [r3, #0]
 8013176:	7bfa      	ldrb	r2, [r7, #15]
 8013178:	6879      	ldr	r1, [r7, #4]
 801317a:	4613      	mov	r3, r2
 801317c:	00db      	lsls	r3, r3, #3
 801317e:	4413      	add	r3, r2
 8013180:	009b      	lsls	r3, r3, #2
 8013182:	440b      	add	r3, r1
 8013184:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8013188:	2200      	movs	r2, #0
 801318a:	701a      	strb	r2, [r3, #0]
 801318c:	7bfa      	ldrb	r2, [r7, #15]
 801318e:	6879      	ldr	r1, [r7, #4]
 8013190:	4613      	mov	r3, r2
 8013192:	00db      	lsls	r3, r3, #3
 8013194:	4413      	add	r3, r2
 8013196:	009b      	lsls	r3, r3, #2
 8013198:	440b      	add	r3, r1
 801319a:	f503 7322 	add.w	r3, r3, #648	; 0x288
 801319e:	2200      	movs	r2, #0
 80131a0:	601a      	str	r2, [r3, #0]
 80131a2:	7bfa      	ldrb	r2, [r7, #15]
 80131a4:	6879      	ldr	r1, [r7, #4]
 80131a6:	4613      	mov	r3, r2
 80131a8:	00db      	lsls	r3, r3, #3
 80131aa:	4413      	add	r3, r2
 80131ac:	009b      	lsls	r3, r3, #2
 80131ae:	440b      	add	r3, r1
 80131b0:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 80131b4:	2200      	movs	r2, #0
 80131b6:	601a      	str	r2, [r3, #0]
 80131b8:	7bfa      	ldrb	r2, [r7, #15]
 80131ba:	6879      	ldr	r1, [r7, #4]
 80131bc:	4613      	mov	r3, r2
 80131be:	00db      	lsls	r3, r3, #3
 80131c0:	4413      	add	r3, r2
 80131c2:	009b      	lsls	r3, r3, #2
 80131c4:	440b      	add	r3, r1
 80131c6:	f503 7325 	add.w	r3, r3, #660	; 0x294
 80131ca:	2200      	movs	r2, #0
 80131cc:	601a      	str	r2, [r3, #0]
 80131ce:	7bfb      	ldrb	r3, [r7, #15]
 80131d0:	3301      	adds	r3, #1
 80131d2:	73fb      	strb	r3, [r7, #15]
 80131d4:	7bfa      	ldrb	r2, [r7, #15]
 80131d6:	687b      	ldr	r3, [r7, #4]
 80131d8:	685b      	ldr	r3, [r3, #4]
 80131da:	429a      	cmp	r2, r3
 80131dc:	d3b5      	bcc.n	801314a <HAL_PCD_Init+0x148>
 80131de:	687b      	ldr	r3, [r7, #4]
 80131e0:	681b      	ldr	r3, [r3, #0]
 80131e2:	603b      	str	r3, [r7, #0]
 80131e4:	687e      	ldr	r6, [r7, #4]
 80131e6:	466d      	mov	r5, sp
 80131e8:	f106 0410 	add.w	r4, r6, #16
 80131ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80131ee:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80131f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80131f2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80131f4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80131f8:	e885 0003 	stmia.w	r5, {r0, r1}
 80131fc:	1d33      	adds	r3, r6, #4
 80131fe:	cb0e      	ldmia	r3, {r1, r2, r3}
 8013200:	6838      	ldr	r0, [r7, #0]
 8013202:	f004 fedb 	bl	8017fbc <USB_DevInit>
 8013206:	4603      	mov	r3, r0
 8013208:	2b00      	cmp	r3, #0
 801320a:	d005      	beq.n	8013218 <HAL_PCD_Init+0x216>
 801320c:	687b      	ldr	r3, [r7, #4]
 801320e:	2202      	movs	r2, #2
 8013210:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8013214:	2301      	movs	r3, #1
 8013216:	e00d      	b.n	8013234 <HAL_PCD_Init+0x232>
 8013218:	687b      	ldr	r3, [r7, #4]
 801321a:	2200      	movs	r2, #0
 801321c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8013220:	687b      	ldr	r3, [r7, #4]
 8013222:	2201      	movs	r2, #1
 8013224:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8013228:	687b      	ldr	r3, [r7, #4]
 801322a:	681b      	ldr	r3, [r3, #0]
 801322c:	4618      	mov	r0, r3
 801322e:	f006 f82a 	bl	8019286 <USB_DevDisconnect>
 8013232:	2300      	movs	r3, #0
 8013234:	4618      	mov	r0, r3
 8013236:	3714      	adds	r7, #20
 8013238:	46bd      	mov	sp, r7
 801323a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801323c <HAL_PCD_Start>:
 801323c:	b580      	push	{r7, lr}
 801323e:	b084      	sub	sp, #16
 8013240:	af00      	add	r7, sp, #0
 8013242:	6078      	str	r0, [r7, #4]
 8013244:	687b      	ldr	r3, [r7, #4]
 8013246:	681b      	ldr	r3, [r3, #0]
 8013248:	60fb      	str	r3, [r7, #12]
 801324a:	687b      	ldr	r3, [r7, #4]
 801324c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013250:	2b01      	cmp	r3, #1
 8013252:	d101      	bne.n	8013258 <HAL_PCD_Start+0x1c>
 8013254:	2302      	movs	r3, #2
 8013256:	e020      	b.n	801329a <HAL_PCD_Start+0x5e>
 8013258:	687b      	ldr	r3, [r7, #4]
 801325a:	2201      	movs	r2, #1
 801325c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013260:	687b      	ldr	r3, [r7, #4]
 8013262:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013264:	2b01      	cmp	r3, #1
 8013266:	d109      	bne.n	801327c <HAL_PCD_Start+0x40>
 8013268:	687b      	ldr	r3, [r7, #4]
 801326a:	699b      	ldr	r3, [r3, #24]
 801326c:	2b01      	cmp	r3, #1
 801326e:	d005      	beq.n	801327c <HAL_PCD_Start+0x40>
 8013270:	68fb      	ldr	r3, [r7, #12]
 8013272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013274:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8013278:	68fb      	ldr	r3, [r7, #12]
 801327a:	639a      	str	r2, [r3, #56]	; 0x38
 801327c:	687b      	ldr	r3, [r7, #4]
 801327e:	681b      	ldr	r3, [r3, #0]
 8013280:	4618      	mov	r0, r3
 8013282:	f004 fe2d 	bl	8017ee0 <USB_EnableGlobalInt>
 8013286:	687b      	ldr	r3, [r7, #4]
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	4618      	mov	r0, r3
 801328c:	f005 ffda 	bl	8019244 <USB_DevConnect>
 8013290:	687b      	ldr	r3, [r7, #4]
 8013292:	2200      	movs	r2, #0
 8013294:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013298:	2300      	movs	r3, #0
 801329a:	4618      	mov	r0, r3
 801329c:	3710      	adds	r7, #16
 801329e:	46bd      	mov	sp, r7
 80132a0:	bd80      	pop	{r7, pc}

080132a2 <HAL_PCD_IRQHandler>:
 80132a2:	b590      	push	{r4, r7, lr}
 80132a4:	b08d      	sub	sp, #52	; 0x34
 80132a6:	af00      	add	r7, sp, #0
 80132a8:	6078      	str	r0, [r7, #4]
 80132aa:	687b      	ldr	r3, [r7, #4]
 80132ac:	681b      	ldr	r3, [r3, #0]
 80132ae:	623b      	str	r3, [r7, #32]
 80132b0:	6a3b      	ldr	r3, [r7, #32]
 80132b2:	61fb      	str	r3, [r7, #28]
 80132b4:	687b      	ldr	r3, [r7, #4]
 80132b6:	681b      	ldr	r3, [r3, #0]
 80132b8:	4618      	mov	r0, r3
 80132ba:	f006 f898 	bl	80193ee <USB_GetMode>
 80132be:	4603      	mov	r3, r0
 80132c0:	2b00      	cmp	r3, #0
 80132c2:	f040 848a 	bne.w	8013bda <HAL_PCD_IRQHandler+0x938>
 80132c6:	687b      	ldr	r3, [r7, #4]
 80132c8:	681b      	ldr	r3, [r3, #0]
 80132ca:	4618      	mov	r0, r3
 80132cc:	f005 fffc 	bl	80192c8 <USB_ReadInterrupts>
 80132d0:	4603      	mov	r3, r0
 80132d2:	2b00      	cmp	r3, #0
 80132d4:	f000 8480 	beq.w	8013bd8 <HAL_PCD_IRQHandler+0x936>
 80132d8:	69fb      	ldr	r3, [r7, #28]
 80132da:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80132de:	689b      	ldr	r3, [r3, #8]
 80132e0:	0a1b      	lsrs	r3, r3, #8
 80132e2:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80132e6:	687b      	ldr	r3, [r7, #4]
 80132e8:	f8c3 24fc 	str.w	r2, [r3, #1276]	; 0x4fc
 80132ec:	687b      	ldr	r3, [r7, #4]
 80132ee:	681b      	ldr	r3, [r3, #0]
 80132f0:	4618      	mov	r0, r3
 80132f2:	f005 ffe9 	bl	80192c8 <USB_ReadInterrupts>
 80132f6:	4603      	mov	r3, r0
 80132f8:	f003 0302 	and.w	r3, r3, #2
 80132fc:	2b02      	cmp	r3, #2
 80132fe:	d107      	bne.n	8013310 <HAL_PCD_IRQHandler+0x6e>
 8013300:	687b      	ldr	r3, [r7, #4]
 8013302:	681b      	ldr	r3, [r3, #0]
 8013304:	695a      	ldr	r2, [r3, #20]
 8013306:	687b      	ldr	r3, [r7, #4]
 8013308:	681b      	ldr	r3, [r3, #0]
 801330a:	f002 0202 	and.w	r2, r2, #2
 801330e:	615a      	str	r2, [r3, #20]
 8013310:	687b      	ldr	r3, [r7, #4]
 8013312:	681b      	ldr	r3, [r3, #0]
 8013314:	4618      	mov	r0, r3
 8013316:	f005 ffd7 	bl	80192c8 <USB_ReadInterrupts>
 801331a:	4603      	mov	r3, r0
 801331c:	f003 0310 	and.w	r3, r3, #16
 8013320:	2b10      	cmp	r3, #16
 8013322:	d161      	bne.n	80133e8 <HAL_PCD_IRQHandler+0x146>
 8013324:	687b      	ldr	r3, [r7, #4]
 8013326:	681b      	ldr	r3, [r3, #0]
 8013328:	699a      	ldr	r2, [r3, #24]
 801332a:	687b      	ldr	r3, [r7, #4]
 801332c:	681b      	ldr	r3, [r3, #0]
 801332e:	f022 0210 	bic.w	r2, r2, #16
 8013332:	619a      	str	r2, [r3, #24]
 8013334:	6a3b      	ldr	r3, [r7, #32]
 8013336:	6a1b      	ldr	r3, [r3, #32]
 8013338:	61bb      	str	r3, [r7, #24]
 801333a:	69bb      	ldr	r3, [r7, #24]
 801333c:	f003 020f 	and.w	r2, r3, #15
 8013340:	4613      	mov	r3, r2
 8013342:	00db      	lsls	r3, r3, #3
 8013344:	4413      	add	r3, r2
 8013346:	009b      	lsls	r3, r3, #2
 8013348:	f503 731e 	add.w	r3, r3, #632	; 0x278
 801334c:	687a      	ldr	r2, [r7, #4]
 801334e:	4413      	add	r3, r2
 8013350:	3304      	adds	r3, #4
 8013352:	617b      	str	r3, [r7, #20]
 8013354:	69bb      	ldr	r3, [r7, #24]
 8013356:	0c5b      	lsrs	r3, r3, #17
 8013358:	f003 030f 	and.w	r3, r3, #15
 801335c:	2b02      	cmp	r3, #2
 801335e:	d124      	bne.n	80133aa <HAL_PCD_IRQHandler+0x108>
 8013360:	69ba      	ldr	r2, [r7, #24]
 8013362:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 8013366:	4013      	ands	r3, r2
 8013368:	2b00      	cmp	r3, #0
 801336a:	d035      	beq.n	80133d8 <HAL_PCD_IRQHandler+0x136>
 801336c:	697b      	ldr	r3, [r7, #20]
 801336e:	6919      	ldr	r1, [r3, #16]
 8013370:	69bb      	ldr	r3, [r7, #24]
 8013372:	091b      	lsrs	r3, r3, #4
 8013374:	b29b      	uxth	r3, r3
 8013376:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801337a:	b29b      	uxth	r3, r3
 801337c:	461a      	mov	r2, r3
 801337e:	6a38      	ldr	r0, [r7, #32]
 8013380:	f005 fe0e 	bl	8018fa0 <USB_ReadPacket>
 8013384:	697b      	ldr	r3, [r7, #20]
 8013386:	691a      	ldr	r2, [r3, #16]
 8013388:	69bb      	ldr	r3, [r7, #24]
 801338a:	091b      	lsrs	r3, r3, #4
 801338c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8013390:	441a      	add	r2, r3
 8013392:	697b      	ldr	r3, [r7, #20]
 8013394:	611a      	str	r2, [r3, #16]
 8013396:	697b      	ldr	r3, [r7, #20]
 8013398:	6a1a      	ldr	r2, [r3, #32]
 801339a:	69bb      	ldr	r3, [r7, #24]
 801339c:	091b      	lsrs	r3, r3, #4
 801339e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80133a2:	441a      	add	r2, r3
 80133a4:	697b      	ldr	r3, [r7, #20]
 80133a6:	621a      	str	r2, [r3, #32]
 80133a8:	e016      	b.n	80133d8 <HAL_PCD_IRQHandler+0x136>
 80133aa:	69bb      	ldr	r3, [r7, #24]
 80133ac:	0c5b      	lsrs	r3, r3, #17
 80133ae:	f003 030f 	and.w	r3, r3, #15
 80133b2:	2b06      	cmp	r3, #6
 80133b4:	d110      	bne.n	80133d8 <HAL_PCD_IRQHandler+0x136>
 80133b6:	687b      	ldr	r3, [r7, #4]
 80133b8:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80133bc:	2208      	movs	r2, #8
 80133be:	4619      	mov	r1, r3
 80133c0:	6a38      	ldr	r0, [r7, #32]
 80133c2:	f005 fded 	bl	8018fa0 <USB_ReadPacket>
 80133c6:	697b      	ldr	r3, [r7, #20]
 80133c8:	6a1a      	ldr	r2, [r3, #32]
 80133ca:	69bb      	ldr	r3, [r7, #24]
 80133cc:	091b      	lsrs	r3, r3, #4
 80133ce:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80133d2:	441a      	add	r2, r3
 80133d4:	697b      	ldr	r3, [r7, #20]
 80133d6:	621a      	str	r2, [r3, #32]
 80133d8:	687b      	ldr	r3, [r7, #4]
 80133da:	681b      	ldr	r3, [r3, #0]
 80133dc:	699a      	ldr	r2, [r3, #24]
 80133de:	687b      	ldr	r3, [r7, #4]
 80133e0:	681b      	ldr	r3, [r3, #0]
 80133e2:	f042 0210 	orr.w	r2, r2, #16
 80133e6:	619a      	str	r2, [r3, #24]
 80133e8:	687b      	ldr	r3, [r7, #4]
 80133ea:	681b      	ldr	r3, [r3, #0]
 80133ec:	4618      	mov	r0, r3
 80133ee:	f005 ff6b 	bl	80192c8 <USB_ReadInterrupts>
 80133f2:	4603      	mov	r3, r0
 80133f4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80133f8:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80133fc:	f040 80a7 	bne.w	801354e <HAL_PCD_IRQHandler+0x2ac>
 8013400:	2300      	movs	r3, #0
 8013402:	627b      	str	r3, [r7, #36]	; 0x24
 8013404:	687b      	ldr	r3, [r7, #4]
 8013406:	681b      	ldr	r3, [r3, #0]
 8013408:	4618      	mov	r0, r3
 801340a:	f005 ff70 	bl	80192ee <USB_ReadDevAllOutEpInterrupt>
 801340e:	62b8      	str	r0, [r7, #40]	; 0x28
 8013410:	e099      	b.n	8013546 <HAL_PCD_IRQHandler+0x2a4>
 8013412:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013414:	f003 0301 	and.w	r3, r3, #1
 8013418:	2b00      	cmp	r3, #0
 801341a:	f000 808e 	beq.w	801353a <HAL_PCD_IRQHandler+0x298>
 801341e:	687b      	ldr	r3, [r7, #4]
 8013420:	681b      	ldr	r3, [r3, #0]
 8013422:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013424:	b2d2      	uxtb	r2, r2
 8013426:	4611      	mov	r1, r2
 8013428:	4618      	mov	r0, r3
 801342a:	f005 ff94 	bl	8019356 <USB_ReadDevOutEPInterrupt>
 801342e:	6138      	str	r0, [r7, #16]
 8013430:	693b      	ldr	r3, [r7, #16]
 8013432:	f003 0301 	and.w	r3, r3, #1
 8013436:	2b00      	cmp	r3, #0
 8013438:	d00c      	beq.n	8013454 <HAL_PCD_IRQHandler+0x1b2>
 801343a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801343c:	015a      	lsls	r2, r3, #5
 801343e:	69fb      	ldr	r3, [r7, #28]
 8013440:	4413      	add	r3, r2
 8013442:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013446:	461a      	mov	r2, r3
 8013448:	2301      	movs	r3, #1
 801344a:	6093      	str	r3, [r2, #8]
 801344c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801344e:	6878      	ldr	r0, [r7, #4]
 8013450:	f000 fec2 	bl	80141d8 <PCD_EP_OutXfrComplete_int>
 8013454:	693b      	ldr	r3, [r7, #16]
 8013456:	f003 0308 	and.w	r3, r3, #8
 801345a:	2b00      	cmp	r3, #0
 801345c:	d00c      	beq.n	8013478 <HAL_PCD_IRQHandler+0x1d6>
 801345e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013460:	015a      	lsls	r2, r3, #5
 8013462:	69fb      	ldr	r3, [r7, #28]
 8013464:	4413      	add	r3, r2
 8013466:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801346a:	461a      	mov	r2, r3
 801346c:	2308      	movs	r3, #8
 801346e:	6093      	str	r3, [r2, #8]
 8013470:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013472:	6878      	ldr	r0, [r7, #4]
 8013474:	f000 ff98 	bl	80143a8 <PCD_EP_OutSetupPacket_int>
 8013478:	693b      	ldr	r3, [r7, #16]
 801347a:	f003 0310 	and.w	r3, r3, #16
 801347e:	2b00      	cmp	r3, #0
 8013480:	d008      	beq.n	8013494 <HAL_PCD_IRQHandler+0x1f2>
 8013482:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013484:	015a      	lsls	r2, r3, #5
 8013486:	69fb      	ldr	r3, [r7, #28]
 8013488:	4413      	add	r3, r2
 801348a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801348e:	461a      	mov	r2, r3
 8013490:	2310      	movs	r3, #16
 8013492:	6093      	str	r3, [r2, #8]
 8013494:	693b      	ldr	r3, [r7, #16]
 8013496:	f003 0302 	and.w	r3, r3, #2
 801349a:	2b00      	cmp	r3, #0
 801349c:	d030      	beq.n	8013500 <HAL_PCD_IRQHandler+0x25e>
 801349e:	6a3b      	ldr	r3, [r7, #32]
 80134a0:	695b      	ldr	r3, [r3, #20]
 80134a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80134a6:	2b80      	cmp	r3, #128	; 0x80
 80134a8:	d109      	bne.n	80134be <HAL_PCD_IRQHandler+0x21c>
 80134aa:	69fb      	ldr	r3, [r7, #28]
 80134ac:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80134b0:	685b      	ldr	r3, [r3, #4]
 80134b2:	69fa      	ldr	r2, [r7, #28]
 80134b4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80134b8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80134bc:	6053      	str	r3, [r2, #4]
 80134be:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80134c0:	4613      	mov	r3, r2
 80134c2:	00db      	lsls	r3, r3, #3
 80134c4:	4413      	add	r3, r2
 80134c6:	009b      	lsls	r3, r3, #2
 80134c8:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80134cc:	687a      	ldr	r2, [r7, #4]
 80134ce:	4413      	add	r3, r2
 80134d0:	3304      	adds	r3, #4
 80134d2:	617b      	str	r3, [r7, #20]
 80134d4:	697b      	ldr	r3, [r7, #20]
 80134d6:	78db      	ldrb	r3, [r3, #3]
 80134d8:	2b01      	cmp	r3, #1
 80134da:	d108      	bne.n	80134ee <HAL_PCD_IRQHandler+0x24c>
 80134dc:	697b      	ldr	r3, [r7, #20]
 80134de:	2200      	movs	r2, #0
 80134e0:	70da      	strb	r2, [r3, #3]
 80134e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134e4:	b2db      	uxtb	r3, r3
 80134e6:	4619      	mov	r1, r3
 80134e8:	6878      	ldr	r0, [r7, #4]
 80134ea:	f00b fd09 	bl	801ef00 <HAL_PCD_ISOOUTIncompleteCallback>
 80134ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134f0:	015a      	lsls	r2, r3, #5
 80134f2:	69fb      	ldr	r3, [r7, #28]
 80134f4:	4413      	add	r3, r2
 80134f6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80134fa:	461a      	mov	r2, r3
 80134fc:	2302      	movs	r3, #2
 80134fe:	6093      	str	r3, [r2, #8]
 8013500:	693b      	ldr	r3, [r7, #16]
 8013502:	f003 0320 	and.w	r3, r3, #32
 8013506:	2b00      	cmp	r3, #0
 8013508:	d008      	beq.n	801351c <HAL_PCD_IRQHandler+0x27a>
 801350a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801350c:	015a      	lsls	r2, r3, #5
 801350e:	69fb      	ldr	r3, [r7, #28]
 8013510:	4413      	add	r3, r2
 8013512:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013516:	461a      	mov	r2, r3
 8013518:	2320      	movs	r3, #32
 801351a:	6093      	str	r3, [r2, #8]
 801351c:	693b      	ldr	r3, [r7, #16]
 801351e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8013522:	2b00      	cmp	r3, #0
 8013524:	d009      	beq.n	801353a <HAL_PCD_IRQHandler+0x298>
 8013526:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013528:	015a      	lsls	r2, r3, #5
 801352a:	69fb      	ldr	r3, [r7, #28]
 801352c:	4413      	add	r3, r2
 801352e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013532:	461a      	mov	r2, r3
 8013534:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013538:	6093      	str	r3, [r2, #8]
 801353a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801353c:	3301      	adds	r3, #1
 801353e:	627b      	str	r3, [r7, #36]	; 0x24
 8013540:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013542:	085b      	lsrs	r3, r3, #1
 8013544:	62bb      	str	r3, [r7, #40]	; 0x28
 8013546:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013548:	2b00      	cmp	r3, #0
 801354a:	f47f af62 	bne.w	8013412 <HAL_PCD_IRQHandler+0x170>
 801354e:	687b      	ldr	r3, [r7, #4]
 8013550:	681b      	ldr	r3, [r3, #0]
 8013552:	4618      	mov	r0, r3
 8013554:	f005 feb8 	bl	80192c8 <USB_ReadInterrupts>
 8013558:	4603      	mov	r3, r0
 801355a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 801355e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8013562:	f040 80db 	bne.w	801371c <HAL_PCD_IRQHandler+0x47a>
 8013566:	687b      	ldr	r3, [r7, #4]
 8013568:	681b      	ldr	r3, [r3, #0]
 801356a:	4618      	mov	r0, r3
 801356c:	f005 fed9 	bl	8019322 <USB_ReadDevAllInEpInterrupt>
 8013570:	62b8      	str	r0, [r7, #40]	; 0x28
 8013572:	2300      	movs	r3, #0
 8013574:	627b      	str	r3, [r7, #36]	; 0x24
 8013576:	e0cd      	b.n	8013714 <HAL_PCD_IRQHandler+0x472>
 8013578:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801357a:	f003 0301 	and.w	r3, r3, #1
 801357e:	2b00      	cmp	r3, #0
 8013580:	f000 80c2 	beq.w	8013708 <HAL_PCD_IRQHandler+0x466>
 8013584:	687b      	ldr	r3, [r7, #4]
 8013586:	681b      	ldr	r3, [r3, #0]
 8013588:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801358a:	b2d2      	uxtb	r2, r2
 801358c:	4611      	mov	r1, r2
 801358e:	4618      	mov	r0, r3
 8013590:	f005 feff 	bl	8019392 <USB_ReadDevInEPInterrupt>
 8013594:	6138      	str	r0, [r7, #16]
 8013596:	693b      	ldr	r3, [r7, #16]
 8013598:	f003 0301 	and.w	r3, r3, #1
 801359c:	2b00      	cmp	r3, #0
 801359e:	d057      	beq.n	8013650 <HAL_PCD_IRQHandler+0x3ae>
 80135a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80135a2:	f003 030f 	and.w	r3, r3, #15
 80135a6:	2201      	movs	r2, #1
 80135a8:	fa02 f303 	lsl.w	r3, r2, r3
 80135ac:	60fb      	str	r3, [r7, #12]
 80135ae:	69fb      	ldr	r3, [r7, #28]
 80135b0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80135b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80135b6:	68fb      	ldr	r3, [r7, #12]
 80135b8:	43db      	mvns	r3, r3
 80135ba:	69f9      	ldr	r1, [r7, #28]
 80135bc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80135c0:	4013      	ands	r3, r2
 80135c2:	634b      	str	r3, [r1, #52]	; 0x34
 80135c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80135c6:	015a      	lsls	r2, r3, #5
 80135c8:	69fb      	ldr	r3, [r7, #28]
 80135ca:	4413      	add	r3, r2
 80135cc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80135d0:	461a      	mov	r2, r3
 80135d2:	2301      	movs	r3, #1
 80135d4:	6093      	str	r3, [r2, #8]
 80135d6:	687b      	ldr	r3, [r7, #4]
 80135d8:	691b      	ldr	r3, [r3, #16]
 80135da:	2b01      	cmp	r3, #1
 80135dc:	d132      	bne.n	8013644 <HAL_PCD_IRQHandler+0x3a2>
 80135de:	6879      	ldr	r1, [r7, #4]
 80135e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80135e2:	4613      	mov	r3, r2
 80135e4:	00db      	lsls	r3, r3, #3
 80135e6:	4413      	add	r3, r2
 80135e8:	009b      	lsls	r3, r3, #2
 80135ea:	440b      	add	r3, r1
 80135ec:	334c      	adds	r3, #76	; 0x4c
 80135ee:	6819      	ldr	r1, [r3, #0]
 80135f0:	6878      	ldr	r0, [r7, #4]
 80135f2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80135f4:	4613      	mov	r3, r2
 80135f6:	00db      	lsls	r3, r3, #3
 80135f8:	4413      	add	r3, r2
 80135fa:	009b      	lsls	r3, r3, #2
 80135fc:	4403      	add	r3, r0
 80135fe:	3348      	adds	r3, #72	; 0x48
 8013600:	681b      	ldr	r3, [r3, #0]
 8013602:	4419      	add	r1, r3
 8013604:	6878      	ldr	r0, [r7, #4]
 8013606:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013608:	4613      	mov	r3, r2
 801360a:	00db      	lsls	r3, r3, #3
 801360c:	4413      	add	r3, r2
 801360e:	009b      	lsls	r3, r3, #2
 8013610:	4403      	add	r3, r0
 8013612:	334c      	adds	r3, #76	; 0x4c
 8013614:	6019      	str	r1, [r3, #0]
 8013616:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013618:	2b00      	cmp	r3, #0
 801361a:	d113      	bne.n	8013644 <HAL_PCD_IRQHandler+0x3a2>
 801361c:	6879      	ldr	r1, [r7, #4]
 801361e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013620:	4613      	mov	r3, r2
 8013622:	00db      	lsls	r3, r3, #3
 8013624:	4413      	add	r3, r2
 8013626:	009b      	lsls	r3, r3, #2
 8013628:	440b      	add	r3, r1
 801362a:	3354      	adds	r3, #84	; 0x54
 801362c:	681b      	ldr	r3, [r3, #0]
 801362e:	2b00      	cmp	r3, #0
 8013630:	d108      	bne.n	8013644 <HAL_PCD_IRQHandler+0x3a2>
 8013632:	687b      	ldr	r3, [r7, #4]
 8013634:	6818      	ldr	r0, [r3, #0]
 8013636:	687b      	ldr	r3, [r7, #4]
 8013638:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 801363c:	461a      	mov	r2, r3
 801363e:	2101      	movs	r1, #1
 8013640:	f005 ff06 	bl	8019450 <USB_EP0_OutStart>
 8013644:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013646:	b2db      	uxtb	r3, r3
 8013648:	4619      	mov	r1, r3
 801364a:	6878      	ldr	r0, [r7, #4]
 801364c:	f00b fbc7 	bl	801edde <HAL_PCD_DataInStageCallback>
 8013650:	693b      	ldr	r3, [r7, #16]
 8013652:	f003 0308 	and.w	r3, r3, #8
 8013656:	2b00      	cmp	r3, #0
 8013658:	d008      	beq.n	801366c <HAL_PCD_IRQHandler+0x3ca>
 801365a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801365c:	015a      	lsls	r2, r3, #5
 801365e:	69fb      	ldr	r3, [r7, #28]
 8013660:	4413      	add	r3, r2
 8013662:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013666:	461a      	mov	r2, r3
 8013668:	2308      	movs	r3, #8
 801366a:	6093      	str	r3, [r2, #8]
 801366c:	693b      	ldr	r3, [r7, #16]
 801366e:	f003 0310 	and.w	r3, r3, #16
 8013672:	2b00      	cmp	r3, #0
 8013674:	d008      	beq.n	8013688 <HAL_PCD_IRQHandler+0x3e6>
 8013676:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013678:	015a      	lsls	r2, r3, #5
 801367a:	69fb      	ldr	r3, [r7, #28]
 801367c:	4413      	add	r3, r2
 801367e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013682:	461a      	mov	r2, r3
 8013684:	2310      	movs	r3, #16
 8013686:	6093      	str	r3, [r2, #8]
 8013688:	693b      	ldr	r3, [r7, #16]
 801368a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801368e:	2b00      	cmp	r3, #0
 8013690:	d008      	beq.n	80136a4 <HAL_PCD_IRQHandler+0x402>
 8013692:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013694:	015a      	lsls	r2, r3, #5
 8013696:	69fb      	ldr	r3, [r7, #28]
 8013698:	4413      	add	r3, r2
 801369a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801369e:	461a      	mov	r2, r3
 80136a0:	2340      	movs	r3, #64	; 0x40
 80136a2:	6093      	str	r3, [r2, #8]
 80136a4:	693b      	ldr	r3, [r7, #16]
 80136a6:	f003 0302 	and.w	r3, r3, #2
 80136aa:	2b00      	cmp	r3, #0
 80136ac:	d023      	beq.n	80136f6 <HAL_PCD_IRQHandler+0x454>
 80136ae:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80136b0:	6a38      	ldr	r0, [r7, #32]
 80136b2:	f004 fde7 	bl	8018284 <USB_FlushTxFifo>
 80136b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80136b8:	4613      	mov	r3, r2
 80136ba:	00db      	lsls	r3, r3, #3
 80136bc:	4413      	add	r3, r2
 80136be:	009b      	lsls	r3, r3, #2
 80136c0:	3338      	adds	r3, #56	; 0x38
 80136c2:	687a      	ldr	r2, [r7, #4]
 80136c4:	4413      	add	r3, r2
 80136c6:	3304      	adds	r3, #4
 80136c8:	617b      	str	r3, [r7, #20]
 80136ca:	697b      	ldr	r3, [r7, #20]
 80136cc:	78db      	ldrb	r3, [r3, #3]
 80136ce:	2b01      	cmp	r3, #1
 80136d0:	d108      	bne.n	80136e4 <HAL_PCD_IRQHandler+0x442>
 80136d2:	697b      	ldr	r3, [r7, #20]
 80136d4:	2200      	movs	r2, #0
 80136d6:	70da      	strb	r2, [r3, #3]
 80136d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80136da:	b2db      	uxtb	r3, r3
 80136dc:	4619      	mov	r1, r3
 80136de:	6878      	ldr	r0, [r7, #4]
 80136e0:	f00b fc20 	bl	801ef24 <HAL_PCD_ISOINIncompleteCallback>
 80136e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80136e6:	015a      	lsls	r2, r3, #5
 80136e8:	69fb      	ldr	r3, [r7, #28]
 80136ea:	4413      	add	r3, r2
 80136ec:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80136f0:	461a      	mov	r2, r3
 80136f2:	2302      	movs	r3, #2
 80136f4:	6093      	str	r3, [r2, #8]
 80136f6:	693b      	ldr	r3, [r7, #16]
 80136f8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80136fc:	2b00      	cmp	r3, #0
 80136fe:	d003      	beq.n	8013708 <HAL_PCD_IRQHandler+0x466>
 8013700:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013702:	6878      	ldr	r0, [r7, #4]
 8013704:	f000 fcdb 	bl	80140be <PCD_WriteEmptyTxFifo>
 8013708:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801370a:	3301      	adds	r3, #1
 801370c:	627b      	str	r3, [r7, #36]	; 0x24
 801370e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013710:	085b      	lsrs	r3, r3, #1
 8013712:	62bb      	str	r3, [r7, #40]	; 0x28
 8013714:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013716:	2b00      	cmp	r3, #0
 8013718:	f47f af2e 	bne.w	8013578 <HAL_PCD_IRQHandler+0x2d6>
 801371c:	687b      	ldr	r3, [r7, #4]
 801371e:	681b      	ldr	r3, [r3, #0]
 8013720:	4618      	mov	r0, r3
 8013722:	f005 fdd1 	bl	80192c8 <USB_ReadInterrupts>
 8013726:	4603      	mov	r3, r0
 8013728:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801372c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8013730:	d122      	bne.n	8013778 <HAL_PCD_IRQHandler+0x4d6>
 8013732:	69fb      	ldr	r3, [r7, #28]
 8013734:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013738:	685b      	ldr	r3, [r3, #4]
 801373a:	69fa      	ldr	r2, [r7, #28]
 801373c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013740:	f023 0301 	bic.w	r3, r3, #1
 8013744:	6053      	str	r3, [r2, #4]
 8013746:	687b      	ldr	r3, [r7, #4]
 8013748:	f893 34f4 	ldrb.w	r3, [r3, #1268]	; 0x4f4
 801374c:	2b01      	cmp	r3, #1
 801374e:	d108      	bne.n	8013762 <HAL_PCD_IRQHandler+0x4c0>
 8013750:	687b      	ldr	r3, [r7, #4]
 8013752:	2200      	movs	r2, #0
 8013754:	f883 24f4 	strb.w	r2, [r3, #1268]	; 0x4f4
 8013758:	2100      	movs	r1, #0
 801375a:	6878      	ldr	r0, [r7, #4]
 801375c:	f000 fec2 	bl	80144e4 <HAL_PCDEx_LPM_Callback>
 8013760:	e002      	b.n	8013768 <HAL_PCD_IRQHandler+0x4c6>
 8013762:	6878      	ldr	r0, [r7, #4]
 8013764:	f00b fbb8 	bl	801eed8 <HAL_PCD_ResumeCallback>
 8013768:	687b      	ldr	r3, [r7, #4]
 801376a:	681b      	ldr	r3, [r3, #0]
 801376c:	695a      	ldr	r2, [r3, #20]
 801376e:	687b      	ldr	r3, [r7, #4]
 8013770:	681b      	ldr	r3, [r3, #0]
 8013772:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8013776:	615a      	str	r2, [r3, #20]
 8013778:	687b      	ldr	r3, [r7, #4]
 801377a:	681b      	ldr	r3, [r3, #0]
 801377c:	4618      	mov	r0, r3
 801377e:	f005 fda3 	bl	80192c8 <USB_ReadInterrupts>
 8013782:	4603      	mov	r3, r0
 8013784:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8013788:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801378c:	d112      	bne.n	80137b4 <HAL_PCD_IRQHandler+0x512>
 801378e:	69fb      	ldr	r3, [r7, #28]
 8013790:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013794:	689b      	ldr	r3, [r3, #8]
 8013796:	f003 0301 	and.w	r3, r3, #1
 801379a:	2b01      	cmp	r3, #1
 801379c:	d102      	bne.n	80137a4 <HAL_PCD_IRQHandler+0x502>
 801379e:	6878      	ldr	r0, [r7, #4]
 80137a0:	f00b fb6e 	bl	801ee80 <HAL_PCD_SuspendCallback>
 80137a4:	687b      	ldr	r3, [r7, #4]
 80137a6:	681b      	ldr	r3, [r3, #0]
 80137a8:	695a      	ldr	r2, [r3, #20]
 80137aa:	687b      	ldr	r3, [r7, #4]
 80137ac:	681b      	ldr	r3, [r3, #0]
 80137ae:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 80137b2:	615a      	str	r2, [r3, #20]
 80137b4:	687b      	ldr	r3, [r7, #4]
 80137b6:	681b      	ldr	r3, [r3, #0]
 80137b8:	4618      	mov	r0, r3
 80137ba:	f005 fd85 	bl	80192c8 <USB_ReadInterrupts>
 80137be:	4603      	mov	r3, r0
 80137c0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80137c4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80137c8:	f040 80b7 	bne.w	801393a <HAL_PCD_IRQHandler+0x698>
 80137cc:	69fb      	ldr	r3, [r7, #28]
 80137ce:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80137d2:	685b      	ldr	r3, [r3, #4]
 80137d4:	69fa      	ldr	r2, [r7, #28]
 80137d6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80137da:	f023 0301 	bic.w	r3, r3, #1
 80137de:	6053      	str	r3, [r2, #4]
 80137e0:	687b      	ldr	r3, [r7, #4]
 80137e2:	681b      	ldr	r3, [r3, #0]
 80137e4:	2110      	movs	r1, #16
 80137e6:	4618      	mov	r0, r3
 80137e8:	f004 fd4c 	bl	8018284 <USB_FlushTxFifo>
 80137ec:	2300      	movs	r3, #0
 80137ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80137f0:	e046      	b.n	8013880 <HAL_PCD_IRQHandler+0x5de>
 80137f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80137f4:	015a      	lsls	r2, r3, #5
 80137f6:	69fb      	ldr	r3, [r7, #28]
 80137f8:	4413      	add	r3, r2
 80137fa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80137fe:	461a      	mov	r2, r3
 8013800:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8013804:	6093      	str	r3, [r2, #8]
 8013806:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013808:	015a      	lsls	r2, r3, #5
 801380a:	69fb      	ldr	r3, [r7, #28]
 801380c:	4413      	add	r3, r2
 801380e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013812:	681b      	ldr	r3, [r3, #0]
 8013814:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8013816:	0151      	lsls	r1, r2, #5
 8013818:	69fa      	ldr	r2, [r7, #28]
 801381a:	440a      	add	r2, r1
 801381c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8013820:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8013824:	6013      	str	r3, [r2, #0]
 8013826:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013828:	015a      	lsls	r2, r3, #5
 801382a:	69fb      	ldr	r3, [r7, #28]
 801382c:	4413      	add	r3, r2
 801382e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013832:	461a      	mov	r2, r3
 8013834:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8013838:	6093      	str	r3, [r2, #8]
 801383a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801383c:	015a      	lsls	r2, r3, #5
 801383e:	69fb      	ldr	r3, [r7, #28]
 8013840:	4413      	add	r3, r2
 8013842:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013846:	681b      	ldr	r3, [r3, #0]
 8013848:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801384a:	0151      	lsls	r1, r2, #5
 801384c:	69fa      	ldr	r2, [r7, #28]
 801384e:	440a      	add	r2, r1
 8013850:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8013854:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8013858:	6013      	str	r3, [r2, #0]
 801385a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801385c:	015a      	lsls	r2, r3, #5
 801385e:	69fb      	ldr	r3, [r7, #28]
 8013860:	4413      	add	r3, r2
 8013862:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013866:	681b      	ldr	r3, [r3, #0]
 8013868:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801386a:	0151      	lsls	r1, r2, #5
 801386c:	69fa      	ldr	r2, [r7, #28]
 801386e:	440a      	add	r2, r1
 8013870:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8013874:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8013878:	6013      	str	r3, [r2, #0]
 801387a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801387c:	3301      	adds	r3, #1
 801387e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013880:	687b      	ldr	r3, [r7, #4]
 8013882:	685b      	ldr	r3, [r3, #4]
 8013884:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8013886:	429a      	cmp	r2, r3
 8013888:	d3b3      	bcc.n	80137f2 <HAL_PCD_IRQHandler+0x550>
 801388a:	69fb      	ldr	r3, [r7, #28]
 801388c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013890:	69db      	ldr	r3, [r3, #28]
 8013892:	69fa      	ldr	r2, [r7, #28]
 8013894:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013898:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 801389c:	61d3      	str	r3, [r2, #28]
 801389e:	687b      	ldr	r3, [r7, #4]
 80138a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138a2:	2b00      	cmp	r3, #0
 80138a4:	d016      	beq.n	80138d4 <HAL_PCD_IRQHandler+0x632>
 80138a6:	69fb      	ldr	r3, [r7, #28]
 80138a8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80138b0:	69fa      	ldr	r2, [r7, #28]
 80138b2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80138b6:	f043 030b 	orr.w	r3, r3, #11
 80138ba:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 80138be:	69fb      	ldr	r3, [r7, #28]
 80138c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80138c6:	69fa      	ldr	r2, [r7, #28]
 80138c8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80138cc:	f043 030b 	orr.w	r3, r3, #11
 80138d0:	6453      	str	r3, [r2, #68]	; 0x44
 80138d2:	e015      	b.n	8013900 <HAL_PCD_IRQHandler+0x65e>
 80138d4:	69fb      	ldr	r3, [r7, #28]
 80138d6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138da:	695b      	ldr	r3, [r3, #20]
 80138dc:	69fa      	ldr	r2, [r7, #28]
 80138de:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80138e2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80138e6:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 80138ea:	6153      	str	r3, [r2, #20]
 80138ec:	69fb      	ldr	r3, [r7, #28]
 80138ee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138f2:	691b      	ldr	r3, [r3, #16]
 80138f4:	69fa      	ldr	r2, [r7, #28]
 80138f6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80138fa:	f043 030b 	orr.w	r3, r3, #11
 80138fe:	6113      	str	r3, [r2, #16]
 8013900:	69fb      	ldr	r3, [r7, #28]
 8013902:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013906:	681b      	ldr	r3, [r3, #0]
 8013908:	69fa      	ldr	r2, [r7, #28]
 801390a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801390e:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8013912:	6013      	str	r3, [r2, #0]
 8013914:	687b      	ldr	r3, [r7, #4]
 8013916:	6818      	ldr	r0, [r3, #0]
 8013918:	687b      	ldr	r3, [r7, #4]
 801391a:	691b      	ldr	r3, [r3, #16]
 801391c:	b2d9      	uxtb	r1, r3
 801391e:	687b      	ldr	r3, [r7, #4]
 8013920:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8013924:	461a      	mov	r2, r3
 8013926:	f005 fd93 	bl	8019450 <USB_EP0_OutStart>
 801392a:	687b      	ldr	r3, [r7, #4]
 801392c:	681b      	ldr	r3, [r3, #0]
 801392e:	695a      	ldr	r2, [r3, #20]
 8013930:	687b      	ldr	r3, [r7, #4]
 8013932:	681b      	ldr	r3, [r3, #0]
 8013934:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8013938:	615a      	str	r2, [r3, #20]
 801393a:	687b      	ldr	r3, [r7, #4]
 801393c:	681b      	ldr	r3, [r3, #0]
 801393e:	4618      	mov	r0, r3
 8013940:	f005 fcc2 	bl	80192c8 <USB_ReadInterrupts>
 8013944:	4603      	mov	r3, r0
 8013946:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 801394a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801394e:	d124      	bne.n	801399a <HAL_PCD_IRQHandler+0x6f8>
 8013950:	687b      	ldr	r3, [r7, #4]
 8013952:	681b      	ldr	r3, [r3, #0]
 8013954:	4618      	mov	r0, r3
 8013956:	f005 fd58 	bl	801940a <USB_ActivateSetup>
 801395a:	687b      	ldr	r3, [r7, #4]
 801395c:	681b      	ldr	r3, [r3, #0]
 801395e:	4618      	mov	r0, r3
 8013960:	f004 fd0d 	bl	801837e <USB_GetDevSpeed>
 8013964:	4603      	mov	r3, r0
 8013966:	461a      	mov	r2, r3
 8013968:	687b      	ldr	r3, [r7, #4]
 801396a:	60da      	str	r2, [r3, #12]
 801396c:	687b      	ldr	r3, [r7, #4]
 801396e:	681c      	ldr	r4, [r3, #0]
 8013970:	f001 f9e8 	bl	8014d44 <HAL_RCC_GetHCLKFreq>
 8013974:	4601      	mov	r1, r0
 8013976:	687b      	ldr	r3, [r7, #4]
 8013978:	68db      	ldr	r3, [r3, #12]
 801397a:	b2db      	uxtb	r3, r3
 801397c:	461a      	mov	r2, r3
 801397e:	4620      	mov	r0, r4
 8013980:	f004 fa0c 	bl	8017d9c <USB_SetTurnaroundTime>
 8013984:	6878      	ldr	r0, [r7, #4]
 8013986:	f00b fa52 	bl	801ee2e <HAL_PCD_ResetCallback>
 801398a:	687b      	ldr	r3, [r7, #4]
 801398c:	681b      	ldr	r3, [r3, #0]
 801398e:	695a      	ldr	r2, [r3, #20]
 8013990:	687b      	ldr	r3, [r7, #4]
 8013992:	681b      	ldr	r3, [r3, #0]
 8013994:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8013998:	615a      	str	r2, [r3, #20]
 801399a:	687b      	ldr	r3, [r7, #4]
 801399c:	681b      	ldr	r3, [r3, #0]
 801399e:	4618      	mov	r0, r3
 80139a0:	f005 fc92 	bl	80192c8 <USB_ReadInterrupts>
 80139a4:	4603      	mov	r3, r0
 80139a6:	f003 0308 	and.w	r3, r3, #8
 80139aa:	2b08      	cmp	r3, #8
 80139ac:	d10a      	bne.n	80139c4 <HAL_PCD_IRQHandler+0x722>
 80139ae:	6878      	ldr	r0, [r7, #4]
 80139b0:	f00b fa2f 	bl	801ee12 <HAL_PCD_SOFCallback>
 80139b4:	687b      	ldr	r3, [r7, #4]
 80139b6:	681b      	ldr	r3, [r3, #0]
 80139b8:	695a      	ldr	r2, [r3, #20]
 80139ba:	687b      	ldr	r3, [r7, #4]
 80139bc:	681b      	ldr	r3, [r3, #0]
 80139be:	f002 0208 	and.w	r2, r2, #8
 80139c2:	615a      	str	r2, [r3, #20]
 80139c4:	687b      	ldr	r3, [r7, #4]
 80139c6:	681b      	ldr	r3, [r3, #0]
 80139c8:	4618      	mov	r0, r3
 80139ca:	f005 fc7d 	bl	80192c8 <USB_ReadInterrupts>
 80139ce:	4603      	mov	r3, r0
 80139d0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80139d4:	2b80      	cmp	r3, #128	; 0x80
 80139d6:	d122      	bne.n	8013a1e <HAL_PCD_IRQHandler+0x77c>
 80139d8:	6a3b      	ldr	r3, [r7, #32]
 80139da:	699b      	ldr	r3, [r3, #24]
 80139dc:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80139e0:	6a3b      	ldr	r3, [r7, #32]
 80139e2:	619a      	str	r2, [r3, #24]
 80139e4:	2301      	movs	r3, #1
 80139e6:	627b      	str	r3, [r7, #36]	; 0x24
 80139e8:	e014      	b.n	8013a14 <HAL_PCD_IRQHandler+0x772>
 80139ea:	6879      	ldr	r1, [r7, #4]
 80139ec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80139ee:	4613      	mov	r3, r2
 80139f0:	00db      	lsls	r3, r3, #3
 80139f2:	4413      	add	r3, r2
 80139f4:	009b      	lsls	r3, r3, #2
 80139f6:	440b      	add	r3, r1
 80139f8:	f203 237f 	addw	r3, r3, #639	; 0x27f
 80139fc:	781b      	ldrb	r3, [r3, #0]
 80139fe:	2b01      	cmp	r3, #1
 8013a00:	d105      	bne.n	8013a0e <HAL_PCD_IRQHandler+0x76c>
 8013a02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013a04:	b2db      	uxtb	r3, r3
 8013a06:	4619      	mov	r1, r3
 8013a08:	6878      	ldr	r0, [r7, #4]
 8013a0a:	f000 fb27 	bl	801405c <HAL_PCD_EP_Abort>
 8013a0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013a10:	3301      	adds	r3, #1
 8013a12:	627b      	str	r3, [r7, #36]	; 0x24
 8013a14:	687b      	ldr	r3, [r7, #4]
 8013a16:	685b      	ldr	r3, [r3, #4]
 8013a18:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013a1a:	429a      	cmp	r2, r3
 8013a1c:	d3e5      	bcc.n	80139ea <HAL_PCD_IRQHandler+0x748>
 8013a1e:	687b      	ldr	r3, [r7, #4]
 8013a20:	681b      	ldr	r3, [r3, #0]
 8013a22:	4618      	mov	r0, r3
 8013a24:	f005 fc50 	bl	80192c8 <USB_ReadInterrupts>
 8013a28:	4603      	mov	r3, r0
 8013a2a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8013a2e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8013a32:	d13b      	bne.n	8013aac <HAL_PCD_IRQHandler+0x80a>
 8013a34:	2301      	movs	r3, #1
 8013a36:	627b      	str	r3, [r7, #36]	; 0x24
 8013a38:	e02b      	b.n	8013a92 <HAL_PCD_IRQHandler+0x7f0>
 8013a3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013a3c:	015a      	lsls	r2, r3, #5
 8013a3e:	69fb      	ldr	r3, [r7, #28]
 8013a40:	4413      	add	r3, r2
 8013a42:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013a46:	681b      	ldr	r3, [r3, #0]
 8013a48:	61bb      	str	r3, [r7, #24]
 8013a4a:	6879      	ldr	r1, [r7, #4]
 8013a4c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013a4e:	4613      	mov	r3, r2
 8013a50:	00db      	lsls	r3, r3, #3
 8013a52:	4413      	add	r3, r2
 8013a54:	009b      	lsls	r3, r3, #2
 8013a56:	440b      	add	r3, r1
 8013a58:	3340      	adds	r3, #64	; 0x40
 8013a5a:	781b      	ldrb	r3, [r3, #0]
 8013a5c:	2b01      	cmp	r3, #1
 8013a5e:	d115      	bne.n	8013a8c <HAL_PCD_IRQHandler+0x7ea>
 8013a60:	69bb      	ldr	r3, [r7, #24]
 8013a62:	2b00      	cmp	r3, #0
 8013a64:	da12      	bge.n	8013a8c <HAL_PCD_IRQHandler+0x7ea>
 8013a66:	6879      	ldr	r1, [r7, #4]
 8013a68:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013a6a:	4613      	mov	r3, r2
 8013a6c:	00db      	lsls	r3, r3, #3
 8013a6e:	4413      	add	r3, r2
 8013a70:	009b      	lsls	r3, r3, #2
 8013a72:	440b      	add	r3, r1
 8013a74:	333f      	adds	r3, #63	; 0x3f
 8013a76:	2201      	movs	r2, #1
 8013a78:	701a      	strb	r2, [r3, #0]
 8013a7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013a7c:	b2db      	uxtb	r3, r3
 8013a7e:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8013a82:	b2db      	uxtb	r3, r3
 8013a84:	4619      	mov	r1, r3
 8013a86:	6878      	ldr	r0, [r7, #4]
 8013a88:	f000 fae8 	bl	801405c <HAL_PCD_EP_Abort>
 8013a8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013a8e:	3301      	adds	r3, #1
 8013a90:	627b      	str	r3, [r7, #36]	; 0x24
 8013a92:	687b      	ldr	r3, [r7, #4]
 8013a94:	685b      	ldr	r3, [r3, #4]
 8013a96:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013a98:	429a      	cmp	r2, r3
 8013a9a:	d3ce      	bcc.n	8013a3a <HAL_PCD_IRQHandler+0x798>
 8013a9c:	687b      	ldr	r3, [r7, #4]
 8013a9e:	681b      	ldr	r3, [r3, #0]
 8013aa0:	695a      	ldr	r2, [r3, #20]
 8013aa2:	687b      	ldr	r3, [r7, #4]
 8013aa4:	681b      	ldr	r3, [r3, #0]
 8013aa6:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8013aaa:	615a      	str	r2, [r3, #20]
 8013aac:	687b      	ldr	r3, [r7, #4]
 8013aae:	681b      	ldr	r3, [r3, #0]
 8013ab0:	4618      	mov	r0, r3
 8013ab2:	f005 fc09 	bl	80192c8 <USB_ReadInterrupts>
 8013ab6:	4603      	mov	r3, r0
 8013ab8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8013abc:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8013ac0:	d155      	bne.n	8013b6e <HAL_PCD_IRQHandler+0x8cc>
 8013ac2:	2301      	movs	r3, #1
 8013ac4:	627b      	str	r3, [r7, #36]	; 0x24
 8013ac6:	e045      	b.n	8013b54 <HAL_PCD_IRQHandler+0x8b2>
 8013ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013aca:	015a      	lsls	r2, r3, #5
 8013acc:	69fb      	ldr	r3, [r7, #28]
 8013ace:	4413      	add	r3, r2
 8013ad0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013ad4:	681b      	ldr	r3, [r3, #0]
 8013ad6:	61bb      	str	r3, [r7, #24]
 8013ad8:	6879      	ldr	r1, [r7, #4]
 8013ada:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013adc:	4613      	mov	r3, r2
 8013ade:	00db      	lsls	r3, r3, #3
 8013ae0:	4413      	add	r3, r2
 8013ae2:	009b      	lsls	r3, r3, #2
 8013ae4:	440b      	add	r3, r1
 8013ae6:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8013aea:	781b      	ldrb	r3, [r3, #0]
 8013aec:	2b01      	cmp	r3, #1
 8013aee:	d12e      	bne.n	8013b4e <HAL_PCD_IRQHandler+0x8ac>
 8013af0:	69bb      	ldr	r3, [r7, #24]
 8013af2:	2b00      	cmp	r3, #0
 8013af4:	da2b      	bge.n	8013b4e <HAL_PCD_IRQHandler+0x8ac>
 8013af6:	69bb      	ldr	r3, [r7, #24]
 8013af8:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8013afc:	687b      	ldr	r3, [r7, #4]
 8013afe:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	; 0x4fc
 8013b02:	f003 0301 	and.w	r3, r3, #1
 8013b06:	429a      	cmp	r2, r3
 8013b08:	d121      	bne.n	8013b4e <HAL_PCD_IRQHandler+0x8ac>
 8013b0a:	6879      	ldr	r1, [r7, #4]
 8013b0c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013b0e:	4613      	mov	r3, r2
 8013b10:	00db      	lsls	r3, r3, #3
 8013b12:	4413      	add	r3, r2
 8013b14:	009b      	lsls	r3, r3, #2
 8013b16:	440b      	add	r3, r1
 8013b18:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8013b1c:	2201      	movs	r2, #1
 8013b1e:	701a      	strb	r2, [r3, #0]
 8013b20:	6a3b      	ldr	r3, [r7, #32]
 8013b22:	699b      	ldr	r3, [r3, #24]
 8013b24:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8013b28:	6a3b      	ldr	r3, [r7, #32]
 8013b2a:	619a      	str	r2, [r3, #24]
 8013b2c:	6a3b      	ldr	r3, [r7, #32]
 8013b2e:	695b      	ldr	r3, [r3, #20]
 8013b30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013b34:	2b00      	cmp	r3, #0
 8013b36:	d10a      	bne.n	8013b4e <HAL_PCD_IRQHandler+0x8ac>
 8013b38:	69fb      	ldr	r3, [r7, #28]
 8013b3a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013b3e:	685b      	ldr	r3, [r3, #4]
 8013b40:	69fa      	ldr	r2, [r7, #28]
 8013b42:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013b46:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8013b4a:	6053      	str	r3, [r2, #4]
 8013b4c:	e007      	b.n	8013b5e <HAL_PCD_IRQHandler+0x8bc>
 8013b4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013b50:	3301      	adds	r3, #1
 8013b52:	627b      	str	r3, [r7, #36]	; 0x24
 8013b54:	687b      	ldr	r3, [r7, #4]
 8013b56:	685b      	ldr	r3, [r3, #4]
 8013b58:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013b5a:	429a      	cmp	r2, r3
 8013b5c:	d3b4      	bcc.n	8013ac8 <HAL_PCD_IRQHandler+0x826>
 8013b5e:	687b      	ldr	r3, [r7, #4]
 8013b60:	681b      	ldr	r3, [r3, #0]
 8013b62:	695a      	ldr	r2, [r3, #20]
 8013b64:	687b      	ldr	r3, [r7, #4]
 8013b66:	681b      	ldr	r3, [r3, #0]
 8013b68:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8013b6c:	615a      	str	r2, [r3, #20]
 8013b6e:	687b      	ldr	r3, [r7, #4]
 8013b70:	681b      	ldr	r3, [r3, #0]
 8013b72:	4618      	mov	r0, r3
 8013b74:	f005 fba8 	bl	80192c8 <USB_ReadInterrupts>
 8013b78:	4603      	mov	r3, r0
 8013b7a:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8013b7e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013b82:	d10a      	bne.n	8013b9a <HAL_PCD_IRQHandler+0x8f8>
 8013b84:	6878      	ldr	r0, [r7, #4]
 8013b86:	f00b f9df 	bl	801ef48 <HAL_PCD_ConnectCallback>
 8013b8a:	687b      	ldr	r3, [r7, #4]
 8013b8c:	681b      	ldr	r3, [r3, #0]
 8013b8e:	695a      	ldr	r2, [r3, #20]
 8013b90:	687b      	ldr	r3, [r7, #4]
 8013b92:	681b      	ldr	r3, [r3, #0]
 8013b94:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8013b98:	615a      	str	r2, [r3, #20]
 8013b9a:	687b      	ldr	r3, [r7, #4]
 8013b9c:	681b      	ldr	r3, [r3, #0]
 8013b9e:	4618      	mov	r0, r3
 8013ba0:	f005 fb92 	bl	80192c8 <USB_ReadInterrupts>
 8013ba4:	4603      	mov	r3, r0
 8013ba6:	f003 0304 	and.w	r3, r3, #4
 8013baa:	2b04      	cmp	r3, #4
 8013bac:	d115      	bne.n	8013bda <HAL_PCD_IRQHandler+0x938>
 8013bae:	687b      	ldr	r3, [r7, #4]
 8013bb0:	681b      	ldr	r3, [r3, #0]
 8013bb2:	685b      	ldr	r3, [r3, #4]
 8013bb4:	61bb      	str	r3, [r7, #24]
 8013bb6:	69bb      	ldr	r3, [r7, #24]
 8013bb8:	f003 0304 	and.w	r3, r3, #4
 8013bbc:	2b00      	cmp	r3, #0
 8013bbe:	d002      	beq.n	8013bc6 <HAL_PCD_IRQHandler+0x924>
 8013bc0:	6878      	ldr	r0, [r7, #4]
 8013bc2:	f00b f9cf 	bl	801ef64 <HAL_PCD_DisconnectCallback>
 8013bc6:	687b      	ldr	r3, [r7, #4]
 8013bc8:	681b      	ldr	r3, [r3, #0]
 8013bca:	6859      	ldr	r1, [r3, #4]
 8013bcc:	687b      	ldr	r3, [r7, #4]
 8013bce:	681b      	ldr	r3, [r3, #0]
 8013bd0:	69ba      	ldr	r2, [r7, #24]
 8013bd2:	430a      	orrs	r2, r1
 8013bd4:	605a      	str	r2, [r3, #4]
 8013bd6:	e000      	b.n	8013bda <HAL_PCD_IRQHandler+0x938>
 8013bd8:	bf00      	nop
 8013bda:	3734      	adds	r7, #52	; 0x34
 8013bdc:	46bd      	mov	sp, r7
 8013bde:	bd90      	pop	{r4, r7, pc}

08013be0 <HAL_PCD_SetAddress>:
 8013be0:	b580      	push	{r7, lr}
 8013be2:	b082      	sub	sp, #8
 8013be4:	af00      	add	r7, sp, #0
 8013be6:	6078      	str	r0, [r7, #4]
 8013be8:	460b      	mov	r3, r1
 8013bea:	70fb      	strb	r3, [r7, #3]
 8013bec:	687b      	ldr	r3, [r7, #4]
 8013bee:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013bf2:	2b01      	cmp	r3, #1
 8013bf4:	d101      	bne.n	8013bfa <HAL_PCD_SetAddress+0x1a>
 8013bf6:	2302      	movs	r3, #2
 8013bf8:	e013      	b.n	8013c22 <HAL_PCD_SetAddress+0x42>
 8013bfa:	687b      	ldr	r3, [r7, #4]
 8013bfc:	2201      	movs	r2, #1
 8013bfe:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013c02:	687b      	ldr	r3, [r7, #4]
 8013c04:	78fa      	ldrb	r2, [r7, #3]
 8013c06:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8013c0a:	687b      	ldr	r3, [r7, #4]
 8013c0c:	681b      	ldr	r3, [r3, #0]
 8013c0e:	78fa      	ldrb	r2, [r7, #3]
 8013c10:	4611      	mov	r1, r2
 8013c12:	4618      	mov	r0, r3
 8013c14:	f005 faf0 	bl	80191f8 <USB_SetDevAddress>
 8013c18:	687b      	ldr	r3, [r7, #4]
 8013c1a:	2200      	movs	r2, #0
 8013c1c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013c20:	2300      	movs	r3, #0
 8013c22:	4618      	mov	r0, r3
 8013c24:	3708      	adds	r7, #8
 8013c26:	46bd      	mov	sp, r7
 8013c28:	bd80      	pop	{r7, pc}

08013c2a <HAL_PCD_EP_Open>:
 8013c2a:	b580      	push	{r7, lr}
 8013c2c:	b084      	sub	sp, #16
 8013c2e:	af00      	add	r7, sp, #0
 8013c30:	6078      	str	r0, [r7, #4]
 8013c32:	4608      	mov	r0, r1
 8013c34:	4611      	mov	r1, r2
 8013c36:	461a      	mov	r2, r3
 8013c38:	4603      	mov	r3, r0
 8013c3a:	70fb      	strb	r3, [r7, #3]
 8013c3c:	460b      	mov	r3, r1
 8013c3e:	803b      	strh	r3, [r7, #0]
 8013c40:	4613      	mov	r3, r2
 8013c42:	70bb      	strb	r3, [r7, #2]
 8013c44:	2300      	movs	r3, #0
 8013c46:	72fb      	strb	r3, [r7, #11]
 8013c48:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013c4c:	2b00      	cmp	r3, #0
 8013c4e:	da0f      	bge.n	8013c70 <HAL_PCD_EP_Open+0x46>
 8013c50:	78fb      	ldrb	r3, [r7, #3]
 8013c52:	f003 020f 	and.w	r2, r3, #15
 8013c56:	4613      	mov	r3, r2
 8013c58:	00db      	lsls	r3, r3, #3
 8013c5a:	4413      	add	r3, r2
 8013c5c:	009b      	lsls	r3, r3, #2
 8013c5e:	3338      	adds	r3, #56	; 0x38
 8013c60:	687a      	ldr	r2, [r7, #4]
 8013c62:	4413      	add	r3, r2
 8013c64:	3304      	adds	r3, #4
 8013c66:	60fb      	str	r3, [r7, #12]
 8013c68:	68fb      	ldr	r3, [r7, #12]
 8013c6a:	2201      	movs	r2, #1
 8013c6c:	705a      	strb	r2, [r3, #1]
 8013c6e:	e00f      	b.n	8013c90 <HAL_PCD_EP_Open+0x66>
 8013c70:	78fb      	ldrb	r3, [r7, #3]
 8013c72:	f003 020f 	and.w	r2, r3, #15
 8013c76:	4613      	mov	r3, r2
 8013c78:	00db      	lsls	r3, r3, #3
 8013c7a:	4413      	add	r3, r2
 8013c7c:	009b      	lsls	r3, r3, #2
 8013c7e:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013c82:	687a      	ldr	r2, [r7, #4]
 8013c84:	4413      	add	r3, r2
 8013c86:	3304      	adds	r3, #4
 8013c88:	60fb      	str	r3, [r7, #12]
 8013c8a:	68fb      	ldr	r3, [r7, #12]
 8013c8c:	2200      	movs	r2, #0
 8013c8e:	705a      	strb	r2, [r3, #1]
 8013c90:	78fb      	ldrb	r3, [r7, #3]
 8013c92:	f003 030f 	and.w	r3, r3, #15
 8013c96:	b2da      	uxtb	r2, r3
 8013c98:	68fb      	ldr	r3, [r7, #12]
 8013c9a:	701a      	strb	r2, [r3, #0]
 8013c9c:	883a      	ldrh	r2, [r7, #0]
 8013c9e:	68fb      	ldr	r3, [r7, #12]
 8013ca0:	60da      	str	r2, [r3, #12]
 8013ca2:	68fb      	ldr	r3, [r7, #12]
 8013ca4:	78ba      	ldrb	r2, [r7, #2]
 8013ca6:	711a      	strb	r2, [r3, #4]
 8013ca8:	68fb      	ldr	r3, [r7, #12]
 8013caa:	785b      	ldrb	r3, [r3, #1]
 8013cac:	2b00      	cmp	r3, #0
 8013cae:	d004      	beq.n	8013cba <HAL_PCD_EP_Open+0x90>
 8013cb0:	68fb      	ldr	r3, [r7, #12]
 8013cb2:	781b      	ldrb	r3, [r3, #0]
 8013cb4:	b29a      	uxth	r2, r3
 8013cb6:	68fb      	ldr	r3, [r7, #12]
 8013cb8:	811a      	strh	r2, [r3, #8]
 8013cba:	78bb      	ldrb	r3, [r7, #2]
 8013cbc:	2b02      	cmp	r3, #2
 8013cbe:	d102      	bne.n	8013cc6 <HAL_PCD_EP_Open+0x9c>
 8013cc0:	68fb      	ldr	r3, [r7, #12]
 8013cc2:	2200      	movs	r2, #0
 8013cc4:	715a      	strb	r2, [r3, #5]
 8013cc6:	687b      	ldr	r3, [r7, #4]
 8013cc8:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013ccc:	2b01      	cmp	r3, #1
 8013cce:	d101      	bne.n	8013cd4 <HAL_PCD_EP_Open+0xaa>
 8013cd0:	2302      	movs	r3, #2
 8013cd2:	e00e      	b.n	8013cf2 <HAL_PCD_EP_Open+0xc8>
 8013cd4:	687b      	ldr	r3, [r7, #4]
 8013cd6:	2201      	movs	r2, #1
 8013cd8:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013cdc:	687b      	ldr	r3, [r7, #4]
 8013cde:	681b      	ldr	r3, [r3, #0]
 8013ce0:	68f9      	ldr	r1, [r7, #12]
 8013ce2:	4618      	mov	r0, r3
 8013ce4:	f004 fb70 	bl	80183c8 <USB_ActivateEndpoint>
 8013ce8:	687b      	ldr	r3, [r7, #4]
 8013cea:	2200      	movs	r2, #0
 8013cec:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013cf0:	7afb      	ldrb	r3, [r7, #11]
 8013cf2:	4618      	mov	r0, r3
 8013cf4:	3710      	adds	r7, #16
 8013cf6:	46bd      	mov	sp, r7
 8013cf8:	bd80      	pop	{r7, pc}

08013cfa <HAL_PCD_EP_Close>:
 8013cfa:	b580      	push	{r7, lr}
 8013cfc:	b084      	sub	sp, #16
 8013cfe:	af00      	add	r7, sp, #0
 8013d00:	6078      	str	r0, [r7, #4]
 8013d02:	460b      	mov	r3, r1
 8013d04:	70fb      	strb	r3, [r7, #3]
 8013d06:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013d0a:	2b00      	cmp	r3, #0
 8013d0c:	da0f      	bge.n	8013d2e <HAL_PCD_EP_Close+0x34>
 8013d0e:	78fb      	ldrb	r3, [r7, #3]
 8013d10:	f003 020f 	and.w	r2, r3, #15
 8013d14:	4613      	mov	r3, r2
 8013d16:	00db      	lsls	r3, r3, #3
 8013d18:	4413      	add	r3, r2
 8013d1a:	009b      	lsls	r3, r3, #2
 8013d1c:	3338      	adds	r3, #56	; 0x38
 8013d1e:	687a      	ldr	r2, [r7, #4]
 8013d20:	4413      	add	r3, r2
 8013d22:	3304      	adds	r3, #4
 8013d24:	60fb      	str	r3, [r7, #12]
 8013d26:	68fb      	ldr	r3, [r7, #12]
 8013d28:	2201      	movs	r2, #1
 8013d2a:	705a      	strb	r2, [r3, #1]
 8013d2c:	e00f      	b.n	8013d4e <HAL_PCD_EP_Close+0x54>
 8013d2e:	78fb      	ldrb	r3, [r7, #3]
 8013d30:	f003 020f 	and.w	r2, r3, #15
 8013d34:	4613      	mov	r3, r2
 8013d36:	00db      	lsls	r3, r3, #3
 8013d38:	4413      	add	r3, r2
 8013d3a:	009b      	lsls	r3, r3, #2
 8013d3c:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013d40:	687a      	ldr	r2, [r7, #4]
 8013d42:	4413      	add	r3, r2
 8013d44:	3304      	adds	r3, #4
 8013d46:	60fb      	str	r3, [r7, #12]
 8013d48:	68fb      	ldr	r3, [r7, #12]
 8013d4a:	2200      	movs	r2, #0
 8013d4c:	705a      	strb	r2, [r3, #1]
 8013d4e:	78fb      	ldrb	r3, [r7, #3]
 8013d50:	f003 030f 	and.w	r3, r3, #15
 8013d54:	b2da      	uxtb	r2, r3
 8013d56:	68fb      	ldr	r3, [r7, #12]
 8013d58:	701a      	strb	r2, [r3, #0]
 8013d5a:	687b      	ldr	r3, [r7, #4]
 8013d5c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013d60:	2b01      	cmp	r3, #1
 8013d62:	d101      	bne.n	8013d68 <HAL_PCD_EP_Close+0x6e>
 8013d64:	2302      	movs	r3, #2
 8013d66:	e00e      	b.n	8013d86 <HAL_PCD_EP_Close+0x8c>
 8013d68:	687b      	ldr	r3, [r7, #4]
 8013d6a:	2201      	movs	r2, #1
 8013d6c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013d70:	687b      	ldr	r3, [r7, #4]
 8013d72:	681b      	ldr	r3, [r3, #0]
 8013d74:	68f9      	ldr	r1, [r7, #12]
 8013d76:	4618      	mov	r0, r3
 8013d78:	f004 fbae 	bl	80184d8 <USB_DeactivateEndpoint>
 8013d7c:	687b      	ldr	r3, [r7, #4]
 8013d7e:	2200      	movs	r2, #0
 8013d80:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013d84:	2300      	movs	r3, #0
 8013d86:	4618      	mov	r0, r3
 8013d88:	3710      	adds	r7, #16
 8013d8a:	46bd      	mov	sp, r7
 8013d8c:	bd80      	pop	{r7, pc}

08013d8e <HAL_PCD_EP_Receive>:
 8013d8e:	b580      	push	{r7, lr}
 8013d90:	b086      	sub	sp, #24
 8013d92:	af00      	add	r7, sp, #0
 8013d94:	60f8      	str	r0, [r7, #12]
 8013d96:	607a      	str	r2, [r7, #4]
 8013d98:	603b      	str	r3, [r7, #0]
 8013d9a:	460b      	mov	r3, r1
 8013d9c:	72fb      	strb	r3, [r7, #11]
 8013d9e:	7afb      	ldrb	r3, [r7, #11]
 8013da0:	f003 020f 	and.w	r2, r3, #15
 8013da4:	4613      	mov	r3, r2
 8013da6:	00db      	lsls	r3, r3, #3
 8013da8:	4413      	add	r3, r2
 8013daa:	009b      	lsls	r3, r3, #2
 8013dac:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013db0:	68fa      	ldr	r2, [r7, #12]
 8013db2:	4413      	add	r3, r2
 8013db4:	3304      	adds	r3, #4
 8013db6:	617b      	str	r3, [r7, #20]
 8013db8:	697b      	ldr	r3, [r7, #20]
 8013dba:	687a      	ldr	r2, [r7, #4]
 8013dbc:	611a      	str	r2, [r3, #16]
 8013dbe:	697b      	ldr	r3, [r7, #20]
 8013dc0:	683a      	ldr	r2, [r7, #0]
 8013dc2:	619a      	str	r2, [r3, #24]
 8013dc4:	697b      	ldr	r3, [r7, #20]
 8013dc6:	2200      	movs	r2, #0
 8013dc8:	621a      	str	r2, [r3, #32]
 8013dca:	697b      	ldr	r3, [r7, #20]
 8013dcc:	2200      	movs	r2, #0
 8013dce:	705a      	strb	r2, [r3, #1]
 8013dd0:	7afb      	ldrb	r3, [r7, #11]
 8013dd2:	f003 030f 	and.w	r3, r3, #15
 8013dd6:	b2da      	uxtb	r2, r3
 8013dd8:	697b      	ldr	r3, [r7, #20]
 8013dda:	701a      	strb	r2, [r3, #0]
 8013ddc:	68fb      	ldr	r3, [r7, #12]
 8013dde:	691b      	ldr	r3, [r3, #16]
 8013de0:	2b01      	cmp	r3, #1
 8013de2:	d102      	bne.n	8013dea <HAL_PCD_EP_Receive+0x5c>
 8013de4:	687a      	ldr	r2, [r7, #4]
 8013de6:	697b      	ldr	r3, [r7, #20]
 8013de8:	615a      	str	r2, [r3, #20]
 8013dea:	7afb      	ldrb	r3, [r7, #11]
 8013dec:	f003 030f 	and.w	r3, r3, #15
 8013df0:	2b00      	cmp	r3, #0
 8013df2:	d109      	bne.n	8013e08 <HAL_PCD_EP_Receive+0x7a>
 8013df4:	68fb      	ldr	r3, [r7, #12]
 8013df6:	6818      	ldr	r0, [r3, #0]
 8013df8:	68fb      	ldr	r3, [r7, #12]
 8013dfa:	691b      	ldr	r3, [r3, #16]
 8013dfc:	b2db      	uxtb	r3, r3
 8013dfe:	461a      	mov	r2, r3
 8013e00:	6979      	ldr	r1, [r7, #20]
 8013e02:	f004 fe8d 	bl	8018b20 <USB_EP0StartXfer>
 8013e06:	e008      	b.n	8013e1a <HAL_PCD_EP_Receive+0x8c>
 8013e08:	68fb      	ldr	r3, [r7, #12]
 8013e0a:	6818      	ldr	r0, [r3, #0]
 8013e0c:	68fb      	ldr	r3, [r7, #12]
 8013e0e:	691b      	ldr	r3, [r3, #16]
 8013e10:	b2db      	uxtb	r3, r3
 8013e12:	461a      	mov	r2, r3
 8013e14:	6979      	ldr	r1, [r7, #20]
 8013e16:	f004 fc3b 	bl	8018690 <USB_EPStartXfer>
 8013e1a:	2300      	movs	r3, #0
 8013e1c:	4618      	mov	r0, r3
 8013e1e:	3718      	adds	r7, #24
 8013e20:	46bd      	mov	sp, r7
 8013e22:	bd80      	pop	{r7, pc}

08013e24 <HAL_PCD_EP_GetRxCount>:
 8013e24:	b480      	push	{r7}
 8013e26:	b083      	sub	sp, #12
 8013e28:	af00      	add	r7, sp, #0
 8013e2a:	6078      	str	r0, [r7, #4]
 8013e2c:	460b      	mov	r3, r1
 8013e2e:	70fb      	strb	r3, [r7, #3]
 8013e30:	78fb      	ldrb	r3, [r7, #3]
 8013e32:	f003 020f 	and.w	r2, r3, #15
 8013e36:	6879      	ldr	r1, [r7, #4]
 8013e38:	4613      	mov	r3, r2
 8013e3a:	00db      	lsls	r3, r3, #3
 8013e3c:	4413      	add	r3, r2
 8013e3e:	009b      	lsls	r3, r3, #2
 8013e40:	440b      	add	r3, r1
 8013e42:	f503 7327 	add.w	r3, r3, #668	; 0x29c
 8013e46:	681b      	ldr	r3, [r3, #0]
 8013e48:	4618      	mov	r0, r3
 8013e4a:	370c      	adds	r7, #12
 8013e4c:	46bd      	mov	sp, r7
 8013e4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e52:	4770      	bx	lr

08013e54 <HAL_PCD_EP_Transmit>:
 8013e54:	b580      	push	{r7, lr}
 8013e56:	b086      	sub	sp, #24
 8013e58:	af00      	add	r7, sp, #0
 8013e5a:	60f8      	str	r0, [r7, #12]
 8013e5c:	607a      	str	r2, [r7, #4]
 8013e5e:	603b      	str	r3, [r7, #0]
 8013e60:	460b      	mov	r3, r1
 8013e62:	72fb      	strb	r3, [r7, #11]
 8013e64:	7afb      	ldrb	r3, [r7, #11]
 8013e66:	f003 020f 	and.w	r2, r3, #15
 8013e6a:	4613      	mov	r3, r2
 8013e6c:	00db      	lsls	r3, r3, #3
 8013e6e:	4413      	add	r3, r2
 8013e70:	009b      	lsls	r3, r3, #2
 8013e72:	3338      	adds	r3, #56	; 0x38
 8013e74:	68fa      	ldr	r2, [r7, #12]
 8013e76:	4413      	add	r3, r2
 8013e78:	3304      	adds	r3, #4
 8013e7a:	617b      	str	r3, [r7, #20]
 8013e7c:	697b      	ldr	r3, [r7, #20]
 8013e7e:	687a      	ldr	r2, [r7, #4]
 8013e80:	611a      	str	r2, [r3, #16]
 8013e82:	697b      	ldr	r3, [r7, #20]
 8013e84:	683a      	ldr	r2, [r7, #0]
 8013e86:	619a      	str	r2, [r3, #24]
 8013e88:	697b      	ldr	r3, [r7, #20]
 8013e8a:	2200      	movs	r2, #0
 8013e8c:	621a      	str	r2, [r3, #32]
 8013e8e:	697b      	ldr	r3, [r7, #20]
 8013e90:	2201      	movs	r2, #1
 8013e92:	705a      	strb	r2, [r3, #1]
 8013e94:	7afb      	ldrb	r3, [r7, #11]
 8013e96:	f003 030f 	and.w	r3, r3, #15
 8013e9a:	b2da      	uxtb	r2, r3
 8013e9c:	697b      	ldr	r3, [r7, #20]
 8013e9e:	701a      	strb	r2, [r3, #0]
 8013ea0:	68fb      	ldr	r3, [r7, #12]
 8013ea2:	691b      	ldr	r3, [r3, #16]
 8013ea4:	2b01      	cmp	r3, #1
 8013ea6:	d102      	bne.n	8013eae <HAL_PCD_EP_Transmit+0x5a>
 8013ea8:	687a      	ldr	r2, [r7, #4]
 8013eaa:	697b      	ldr	r3, [r7, #20]
 8013eac:	615a      	str	r2, [r3, #20]
 8013eae:	7afb      	ldrb	r3, [r7, #11]
 8013eb0:	f003 030f 	and.w	r3, r3, #15
 8013eb4:	2b00      	cmp	r3, #0
 8013eb6:	d109      	bne.n	8013ecc <HAL_PCD_EP_Transmit+0x78>
 8013eb8:	68fb      	ldr	r3, [r7, #12]
 8013eba:	6818      	ldr	r0, [r3, #0]
 8013ebc:	68fb      	ldr	r3, [r7, #12]
 8013ebe:	691b      	ldr	r3, [r3, #16]
 8013ec0:	b2db      	uxtb	r3, r3
 8013ec2:	461a      	mov	r2, r3
 8013ec4:	6979      	ldr	r1, [r7, #20]
 8013ec6:	f004 fe2b 	bl	8018b20 <USB_EP0StartXfer>
 8013eca:	e008      	b.n	8013ede <HAL_PCD_EP_Transmit+0x8a>
 8013ecc:	68fb      	ldr	r3, [r7, #12]
 8013ece:	6818      	ldr	r0, [r3, #0]
 8013ed0:	68fb      	ldr	r3, [r7, #12]
 8013ed2:	691b      	ldr	r3, [r3, #16]
 8013ed4:	b2db      	uxtb	r3, r3
 8013ed6:	461a      	mov	r2, r3
 8013ed8:	6979      	ldr	r1, [r7, #20]
 8013eda:	f004 fbd9 	bl	8018690 <USB_EPStartXfer>
 8013ede:	2300      	movs	r3, #0
 8013ee0:	4618      	mov	r0, r3
 8013ee2:	3718      	adds	r7, #24
 8013ee4:	46bd      	mov	sp, r7
 8013ee6:	bd80      	pop	{r7, pc}

08013ee8 <HAL_PCD_EP_SetStall>:
 8013ee8:	b580      	push	{r7, lr}
 8013eea:	b084      	sub	sp, #16
 8013eec:	af00      	add	r7, sp, #0
 8013eee:	6078      	str	r0, [r7, #4]
 8013ef0:	460b      	mov	r3, r1
 8013ef2:	70fb      	strb	r3, [r7, #3]
 8013ef4:	78fb      	ldrb	r3, [r7, #3]
 8013ef6:	f003 020f 	and.w	r2, r3, #15
 8013efa:	687b      	ldr	r3, [r7, #4]
 8013efc:	685b      	ldr	r3, [r3, #4]
 8013efe:	429a      	cmp	r2, r3
 8013f00:	d901      	bls.n	8013f06 <HAL_PCD_EP_SetStall+0x1e>
 8013f02:	2301      	movs	r3, #1
 8013f04:	e050      	b.n	8013fa8 <HAL_PCD_EP_SetStall+0xc0>
 8013f06:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013f0a:	2b00      	cmp	r3, #0
 8013f0c:	da0f      	bge.n	8013f2e <HAL_PCD_EP_SetStall+0x46>
 8013f0e:	78fb      	ldrb	r3, [r7, #3]
 8013f10:	f003 020f 	and.w	r2, r3, #15
 8013f14:	4613      	mov	r3, r2
 8013f16:	00db      	lsls	r3, r3, #3
 8013f18:	4413      	add	r3, r2
 8013f1a:	009b      	lsls	r3, r3, #2
 8013f1c:	3338      	adds	r3, #56	; 0x38
 8013f1e:	687a      	ldr	r2, [r7, #4]
 8013f20:	4413      	add	r3, r2
 8013f22:	3304      	adds	r3, #4
 8013f24:	60fb      	str	r3, [r7, #12]
 8013f26:	68fb      	ldr	r3, [r7, #12]
 8013f28:	2201      	movs	r2, #1
 8013f2a:	705a      	strb	r2, [r3, #1]
 8013f2c:	e00d      	b.n	8013f4a <HAL_PCD_EP_SetStall+0x62>
 8013f2e:	78fa      	ldrb	r2, [r7, #3]
 8013f30:	4613      	mov	r3, r2
 8013f32:	00db      	lsls	r3, r3, #3
 8013f34:	4413      	add	r3, r2
 8013f36:	009b      	lsls	r3, r3, #2
 8013f38:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013f3c:	687a      	ldr	r2, [r7, #4]
 8013f3e:	4413      	add	r3, r2
 8013f40:	3304      	adds	r3, #4
 8013f42:	60fb      	str	r3, [r7, #12]
 8013f44:	68fb      	ldr	r3, [r7, #12]
 8013f46:	2200      	movs	r2, #0
 8013f48:	705a      	strb	r2, [r3, #1]
 8013f4a:	68fb      	ldr	r3, [r7, #12]
 8013f4c:	2201      	movs	r2, #1
 8013f4e:	709a      	strb	r2, [r3, #2]
 8013f50:	78fb      	ldrb	r3, [r7, #3]
 8013f52:	f003 030f 	and.w	r3, r3, #15
 8013f56:	b2da      	uxtb	r2, r3
 8013f58:	68fb      	ldr	r3, [r7, #12]
 8013f5a:	701a      	strb	r2, [r3, #0]
 8013f5c:	687b      	ldr	r3, [r7, #4]
 8013f5e:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013f62:	2b01      	cmp	r3, #1
 8013f64:	d101      	bne.n	8013f6a <HAL_PCD_EP_SetStall+0x82>
 8013f66:	2302      	movs	r3, #2
 8013f68:	e01e      	b.n	8013fa8 <HAL_PCD_EP_SetStall+0xc0>
 8013f6a:	687b      	ldr	r3, [r7, #4]
 8013f6c:	2201      	movs	r2, #1
 8013f6e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013f72:	687b      	ldr	r3, [r7, #4]
 8013f74:	681b      	ldr	r3, [r3, #0]
 8013f76:	68f9      	ldr	r1, [r7, #12]
 8013f78:	4618      	mov	r0, r3
 8013f7a:	f005 f869 	bl	8019050 <USB_EPSetStall>
 8013f7e:	78fb      	ldrb	r3, [r7, #3]
 8013f80:	f003 030f 	and.w	r3, r3, #15
 8013f84:	2b00      	cmp	r3, #0
 8013f86:	d10a      	bne.n	8013f9e <HAL_PCD_EP_SetStall+0xb6>
 8013f88:	687b      	ldr	r3, [r7, #4]
 8013f8a:	6818      	ldr	r0, [r3, #0]
 8013f8c:	687b      	ldr	r3, [r7, #4]
 8013f8e:	691b      	ldr	r3, [r3, #16]
 8013f90:	b2d9      	uxtb	r1, r3
 8013f92:	687b      	ldr	r3, [r7, #4]
 8013f94:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8013f98:	461a      	mov	r2, r3
 8013f9a:	f005 fa59 	bl	8019450 <USB_EP0_OutStart>
 8013f9e:	687b      	ldr	r3, [r7, #4]
 8013fa0:	2200      	movs	r2, #0
 8013fa2:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013fa6:	2300      	movs	r3, #0
 8013fa8:	4618      	mov	r0, r3
 8013faa:	3710      	adds	r7, #16
 8013fac:	46bd      	mov	sp, r7
 8013fae:	bd80      	pop	{r7, pc}

08013fb0 <HAL_PCD_EP_ClrStall>:
 8013fb0:	b580      	push	{r7, lr}
 8013fb2:	b084      	sub	sp, #16
 8013fb4:	af00      	add	r7, sp, #0
 8013fb6:	6078      	str	r0, [r7, #4]
 8013fb8:	460b      	mov	r3, r1
 8013fba:	70fb      	strb	r3, [r7, #3]
 8013fbc:	78fb      	ldrb	r3, [r7, #3]
 8013fbe:	f003 020f 	and.w	r2, r3, #15
 8013fc2:	687b      	ldr	r3, [r7, #4]
 8013fc4:	685b      	ldr	r3, [r3, #4]
 8013fc6:	429a      	cmp	r2, r3
 8013fc8:	d901      	bls.n	8013fce <HAL_PCD_EP_ClrStall+0x1e>
 8013fca:	2301      	movs	r3, #1
 8013fcc:	e042      	b.n	8014054 <HAL_PCD_EP_ClrStall+0xa4>
 8013fce:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013fd2:	2b00      	cmp	r3, #0
 8013fd4:	da0f      	bge.n	8013ff6 <HAL_PCD_EP_ClrStall+0x46>
 8013fd6:	78fb      	ldrb	r3, [r7, #3]
 8013fd8:	f003 020f 	and.w	r2, r3, #15
 8013fdc:	4613      	mov	r3, r2
 8013fde:	00db      	lsls	r3, r3, #3
 8013fe0:	4413      	add	r3, r2
 8013fe2:	009b      	lsls	r3, r3, #2
 8013fe4:	3338      	adds	r3, #56	; 0x38
 8013fe6:	687a      	ldr	r2, [r7, #4]
 8013fe8:	4413      	add	r3, r2
 8013fea:	3304      	adds	r3, #4
 8013fec:	60fb      	str	r3, [r7, #12]
 8013fee:	68fb      	ldr	r3, [r7, #12]
 8013ff0:	2201      	movs	r2, #1
 8013ff2:	705a      	strb	r2, [r3, #1]
 8013ff4:	e00f      	b.n	8014016 <HAL_PCD_EP_ClrStall+0x66>
 8013ff6:	78fb      	ldrb	r3, [r7, #3]
 8013ff8:	f003 020f 	and.w	r2, r3, #15
 8013ffc:	4613      	mov	r3, r2
 8013ffe:	00db      	lsls	r3, r3, #3
 8014000:	4413      	add	r3, r2
 8014002:	009b      	lsls	r3, r3, #2
 8014004:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8014008:	687a      	ldr	r2, [r7, #4]
 801400a:	4413      	add	r3, r2
 801400c:	3304      	adds	r3, #4
 801400e:	60fb      	str	r3, [r7, #12]
 8014010:	68fb      	ldr	r3, [r7, #12]
 8014012:	2200      	movs	r2, #0
 8014014:	705a      	strb	r2, [r3, #1]
 8014016:	68fb      	ldr	r3, [r7, #12]
 8014018:	2200      	movs	r2, #0
 801401a:	709a      	strb	r2, [r3, #2]
 801401c:	78fb      	ldrb	r3, [r7, #3]
 801401e:	f003 030f 	and.w	r3, r3, #15
 8014022:	b2da      	uxtb	r2, r3
 8014024:	68fb      	ldr	r3, [r7, #12]
 8014026:	701a      	strb	r2, [r3, #0]
 8014028:	687b      	ldr	r3, [r7, #4]
 801402a:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 801402e:	2b01      	cmp	r3, #1
 8014030:	d101      	bne.n	8014036 <HAL_PCD_EP_ClrStall+0x86>
 8014032:	2302      	movs	r3, #2
 8014034:	e00e      	b.n	8014054 <HAL_PCD_EP_ClrStall+0xa4>
 8014036:	687b      	ldr	r3, [r7, #4]
 8014038:	2201      	movs	r2, #1
 801403a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 801403e:	687b      	ldr	r3, [r7, #4]
 8014040:	681b      	ldr	r3, [r3, #0]
 8014042:	68f9      	ldr	r1, [r7, #12]
 8014044:	4618      	mov	r0, r3
 8014046:	f005 f871 	bl	801912c <USB_EPClearStall>
 801404a:	687b      	ldr	r3, [r7, #4]
 801404c:	2200      	movs	r2, #0
 801404e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8014052:	2300      	movs	r3, #0
 8014054:	4618      	mov	r0, r3
 8014056:	3710      	adds	r7, #16
 8014058:	46bd      	mov	sp, r7
 801405a:	bd80      	pop	{r7, pc}

0801405c <HAL_PCD_EP_Abort>:
 801405c:	b580      	push	{r7, lr}
 801405e:	b084      	sub	sp, #16
 8014060:	af00      	add	r7, sp, #0
 8014062:	6078      	str	r0, [r7, #4]
 8014064:	460b      	mov	r3, r1
 8014066:	70fb      	strb	r3, [r7, #3]
 8014068:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801406c:	2b00      	cmp	r3, #0
 801406e:	da0c      	bge.n	801408a <HAL_PCD_EP_Abort+0x2e>
 8014070:	78fb      	ldrb	r3, [r7, #3]
 8014072:	f003 020f 	and.w	r2, r3, #15
 8014076:	4613      	mov	r3, r2
 8014078:	00db      	lsls	r3, r3, #3
 801407a:	4413      	add	r3, r2
 801407c:	009b      	lsls	r3, r3, #2
 801407e:	3338      	adds	r3, #56	; 0x38
 8014080:	687a      	ldr	r2, [r7, #4]
 8014082:	4413      	add	r3, r2
 8014084:	3304      	adds	r3, #4
 8014086:	60fb      	str	r3, [r7, #12]
 8014088:	e00c      	b.n	80140a4 <HAL_PCD_EP_Abort+0x48>
 801408a:	78fb      	ldrb	r3, [r7, #3]
 801408c:	f003 020f 	and.w	r2, r3, #15
 8014090:	4613      	mov	r3, r2
 8014092:	00db      	lsls	r3, r3, #3
 8014094:	4413      	add	r3, r2
 8014096:	009b      	lsls	r3, r3, #2
 8014098:	f503 731e 	add.w	r3, r3, #632	; 0x278
 801409c:	687a      	ldr	r2, [r7, #4]
 801409e:	4413      	add	r3, r2
 80140a0:	3304      	adds	r3, #4
 80140a2:	60fb      	str	r3, [r7, #12]
 80140a4:	687b      	ldr	r3, [r7, #4]
 80140a6:	681b      	ldr	r3, [r3, #0]
 80140a8:	68f9      	ldr	r1, [r7, #12]
 80140aa:	4618      	mov	r0, r3
 80140ac:	f004 fe90 	bl	8018dd0 <USB_EPStopXfer>
 80140b0:	4603      	mov	r3, r0
 80140b2:	72fb      	strb	r3, [r7, #11]
 80140b4:	7afb      	ldrb	r3, [r7, #11]
 80140b6:	4618      	mov	r0, r3
 80140b8:	3710      	adds	r7, #16
 80140ba:	46bd      	mov	sp, r7
 80140bc:	bd80      	pop	{r7, pc}

080140be <PCD_WriteEmptyTxFifo>:
 80140be:	b580      	push	{r7, lr}
 80140c0:	b08a      	sub	sp, #40	; 0x28
 80140c2:	af02      	add	r7, sp, #8
 80140c4:	6078      	str	r0, [r7, #4]
 80140c6:	6039      	str	r1, [r7, #0]
 80140c8:	687b      	ldr	r3, [r7, #4]
 80140ca:	681b      	ldr	r3, [r3, #0]
 80140cc:	617b      	str	r3, [r7, #20]
 80140ce:	697b      	ldr	r3, [r7, #20]
 80140d0:	613b      	str	r3, [r7, #16]
 80140d2:	683a      	ldr	r2, [r7, #0]
 80140d4:	4613      	mov	r3, r2
 80140d6:	00db      	lsls	r3, r3, #3
 80140d8:	4413      	add	r3, r2
 80140da:	009b      	lsls	r3, r3, #2
 80140dc:	3338      	adds	r3, #56	; 0x38
 80140de:	687a      	ldr	r2, [r7, #4]
 80140e0:	4413      	add	r3, r2
 80140e2:	3304      	adds	r3, #4
 80140e4:	60fb      	str	r3, [r7, #12]
 80140e6:	68fb      	ldr	r3, [r7, #12]
 80140e8:	6a1a      	ldr	r2, [r3, #32]
 80140ea:	68fb      	ldr	r3, [r7, #12]
 80140ec:	699b      	ldr	r3, [r3, #24]
 80140ee:	429a      	cmp	r2, r3
 80140f0:	d901      	bls.n	80140f6 <PCD_WriteEmptyTxFifo+0x38>
 80140f2:	2301      	movs	r3, #1
 80140f4:	e06c      	b.n	80141d0 <PCD_WriteEmptyTxFifo+0x112>
 80140f6:	68fb      	ldr	r3, [r7, #12]
 80140f8:	699a      	ldr	r2, [r3, #24]
 80140fa:	68fb      	ldr	r3, [r7, #12]
 80140fc:	6a1b      	ldr	r3, [r3, #32]
 80140fe:	1ad3      	subs	r3, r2, r3
 8014100:	61fb      	str	r3, [r7, #28]
 8014102:	68fb      	ldr	r3, [r7, #12]
 8014104:	68db      	ldr	r3, [r3, #12]
 8014106:	69fa      	ldr	r2, [r7, #28]
 8014108:	429a      	cmp	r2, r3
 801410a:	d902      	bls.n	8014112 <PCD_WriteEmptyTxFifo+0x54>
 801410c:	68fb      	ldr	r3, [r7, #12]
 801410e:	68db      	ldr	r3, [r3, #12]
 8014110:	61fb      	str	r3, [r7, #28]
 8014112:	69fb      	ldr	r3, [r7, #28]
 8014114:	3303      	adds	r3, #3
 8014116:	089b      	lsrs	r3, r3, #2
 8014118:	61bb      	str	r3, [r7, #24]
 801411a:	e02b      	b.n	8014174 <PCD_WriteEmptyTxFifo+0xb6>
 801411c:	68fb      	ldr	r3, [r7, #12]
 801411e:	699a      	ldr	r2, [r3, #24]
 8014120:	68fb      	ldr	r3, [r7, #12]
 8014122:	6a1b      	ldr	r3, [r3, #32]
 8014124:	1ad3      	subs	r3, r2, r3
 8014126:	61fb      	str	r3, [r7, #28]
 8014128:	68fb      	ldr	r3, [r7, #12]
 801412a:	68db      	ldr	r3, [r3, #12]
 801412c:	69fa      	ldr	r2, [r7, #28]
 801412e:	429a      	cmp	r2, r3
 8014130:	d902      	bls.n	8014138 <PCD_WriteEmptyTxFifo+0x7a>
 8014132:	68fb      	ldr	r3, [r7, #12]
 8014134:	68db      	ldr	r3, [r3, #12]
 8014136:	61fb      	str	r3, [r7, #28]
 8014138:	69fb      	ldr	r3, [r7, #28]
 801413a:	3303      	adds	r3, #3
 801413c:	089b      	lsrs	r3, r3, #2
 801413e:	61bb      	str	r3, [r7, #24]
 8014140:	68fb      	ldr	r3, [r7, #12]
 8014142:	6919      	ldr	r1, [r3, #16]
 8014144:	683b      	ldr	r3, [r7, #0]
 8014146:	b2da      	uxtb	r2, r3
 8014148:	69fb      	ldr	r3, [r7, #28]
 801414a:	b298      	uxth	r0, r3
 801414c:	687b      	ldr	r3, [r7, #4]
 801414e:	691b      	ldr	r3, [r3, #16]
 8014150:	b2db      	uxtb	r3, r3
 8014152:	9300      	str	r3, [sp, #0]
 8014154:	4603      	mov	r3, r0
 8014156:	6978      	ldr	r0, [r7, #20]
 8014158:	f004 fee4 	bl	8018f24 <USB_WritePacket>
 801415c:	68fb      	ldr	r3, [r7, #12]
 801415e:	691a      	ldr	r2, [r3, #16]
 8014160:	69fb      	ldr	r3, [r7, #28]
 8014162:	441a      	add	r2, r3
 8014164:	68fb      	ldr	r3, [r7, #12]
 8014166:	611a      	str	r2, [r3, #16]
 8014168:	68fb      	ldr	r3, [r7, #12]
 801416a:	6a1a      	ldr	r2, [r3, #32]
 801416c:	69fb      	ldr	r3, [r7, #28]
 801416e:	441a      	add	r2, r3
 8014170:	68fb      	ldr	r3, [r7, #12]
 8014172:	621a      	str	r2, [r3, #32]
 8014174:	683b      	ldr	r3, [r7, #0]
 8014176:	015a      	lsls	r2, r3, #5
 8014178:	693b      	ldr	r3, [r7, #16]
 801417a:	4413      	add	r3, r2
 801417c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8014180:	699b      	ldr	r3, [r3, #24]
 8014182:	b29b      	uxth	r3, r3
 8014184:	69ba      	ldr	r2, [r7, #24]
 8014186:	429a      	cmp	r2, r3
 8014188:	d809      	bhi.n	801419e <PCD_WriteEmptyTxFifo+0xe0>
 801418a:	68fb      	ldr	r3, [r7, #12]
 801418c:	6a1a      	ldr	r2, [r3, #32]
 801418e:	68fb      	ldr	r3, [r7, #12]
 8014190:	699b      	ldr	r3, [r3, #24]
 8014192:	429a      	cmp	r2, r3
 8014194:	d203      	bcs.n	801419e <PCD_WriteEmptyTxFifo+0xe0>
 8014196:	68fb      	ldr	r3, [r7, #12]
 8014198:	699b      	ldr	r3, [r3, #24]
 801419a:	2b00      	cmp	r3, #0
 801419c:	d1be      	bne.n	801411c <PCD_WriteEmptyTxFifo+0x5e>
 801419e:	68fb      	ldr	r3, [r7, #12]
 80141a0:	699a      	ldr	r2, [r3, #24]
 80141a2:	68fb      	ldr	r3, [r7, #12]
 80141a4:	6a1b      	ldr	r3, [r3, #32]
 80141a6:	429a      	cmp	r2, r3
 80141a8:	d811      	bhi.n	80141ce <PCD_WriteEmptyTxFifo+0x110>
 80141aa:	683b      	ldr	r3, [r7, #0]
 80141ac:	f003 030f 	and.w	r3, r3, #15
 80141b0:	2201      	movs	r2, #1
 80141b2:	fa02 f303 	lsl.w	r3, r2, r3
 80141b6:	60bb      	str	r3, [r7, #8]
 80141b8:	693b      	ldr	r3, [r7, #16]
 80141ba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80141be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80141c0:	68bb      	ldr	r3, [r7, #8]
 80141c2:	43db      	mvns	r3, r3
 80141c4:	6939      	ldr	r1, [r7, #16]
 80141c6:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80141ca:	4013      	ands	r3, r2
 80141cc:	634b      	str	r3, [r1, #52]	; 0x34
 80141ce:	2300      	movs	r3, #0
 80141d0:	4618      	mov	r0, r3
 80141d2:	3720      	adds	r7, #32
 80141d4:	46bd      	mov	sp, r7
 80141d6:	bd80      	pop	{r7, pc}

080141d8 <PCD_EP_OutXfrComplete_int>:
 80141d8:	b580      	push	{r7, lr}
 80141da:	b088      	sub	sp, #32
 80141dc:	af00      	add	r7, sp, #0
 80141de:	6078      	str	r0, [r7, #4]
 80141e0:	6039      	str	r1, [r7, #0]
 80141e2:	687b      	ldr	r3, [r7, #4]
 80141e4:	681b      	ldr	r3, [r3, #0]
 80141e6:	61fb      	str	r3, [r7, #28]
 80141e8:	69fb      	ldr	r3, [r7, #28]
 80141ea:	61bb      	str	r3, [r7, #24]
 80141ec:	69fb      	ldr	r3, [r7, #28]
 80141ee:	333c      	adds	r3, #60	; 0x3c
 80141f0:	3304      	adds	r3, #4
 80141f2:	681b      	ldr	r3, [r3, #0]
 80141f4:	617b      	str	r3, [r7, #20]
 80141f6:	683b      	ldr	r3, [r7, #0]
 80141f8:	015a      	lsls	r2, r3, #5
 80141fa:	69bb      	ldr	r3, [r7, #24]
 80141fc:	4413      	add	r3, r2
 80141fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8014202:	689b      	ldr	r3, [r3, #8]
 8014204:	613b      	str	r3, [r7, #16]
 8014206:	687b      	ldr	r3, [r7, #4]
 8014208:	691b      	ldr	r3, [r3, #16]
 801420a:	2b01      	cmp	r3, #1
 801420c:	d17b      	bne.n	8014306 <PCD_EP_OutXfrComplete_int+0x12e>
 801420e:	693b      	ldr	r3, [r7, #16]
 8014210:	f003 0308 	and.w	r3, r3, #8
 8014214:	2b00      	cmp	r3, #0
 8014216:	d015      	beq.n	8014244 <PCD_EP_OutXfrComplete_int+0x6c>
 8014218:	697b      	ldr	r3, [r7, #20]
 801421a:	4a61      	ldr	r2, [pc, #388]	; (80143a0 <PCD_EP_OutXfrComplete_int+0x1c8>)
 801421c:	4293      	cmp	r3, r2
 801421e:	f240 80b9 	bls.w	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014222:	693b      	ldr	r3, [r7, #16]
 8014224:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8014228:	2b00      	cmp	r3, #0
 801422a:	f000 80b3 	beq.w	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 801422e:	683b      	ldr	r3, [r7, #0]
 8014230:	015a      	lsls	r2, r3, #5
 8014232:	69bb      	ldr	r3, [r7, #24]
 8014234:	4413      	add	r3, r2
 8014236:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801423a:	461a      	mov	r2, r3
 801423c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014240:	6093      	str	r3, [r2, #8]
 8014242:	e0a7      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014244:	693b      	ldr	r3, [r7, #16]
 8014246:	f003 0320 	and.w	r3, r3, #32
 801424a:	2b00      	cmp	r3, #0
 801424c:	d009      	beq.n	8014262 <PCD_EP_OutXfrComplete_int+0x8a>
 801424e:	683b      	ldr	r3, [r7, #0]
 8014250:	015a      	lsls	r2, r3, #5
 8014252:	69bb      	ldr	r3, [r7, #24]
 8014254:	4413      	add	r3, r2
 8014256:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801425a:	461a      	mov	r2, r3
 801425c:	2320      	movs	r3, #32
 801425e:	6093      	str	r3, [r2, #8]
 8014260:	e098      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014262:	693b      	ldr	r3, [r7, #16]
 8014264:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8014268:	2b00      	cmp	r3, #0
 801426a:	f040 8093 	bne.w	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 801426e:	697b      	ldr	r3, [r7, #20]
 8014270:	4a4b      	ldr	r2, [pc, #300]	; (80143a0 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8014272:	4293      	cmp	r3, r2
 8014274:	d90f      	bls.n	8014296 <PCD_EP_OutXfrComplete_int+0xbe>
 8014276:	693b      	ldr	r3, [r7, #16]
 8014278:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 801427c:	2b00      	cmp	r3, #0
 801427e:	d00a      	beq.n	8014296 <PCD_EP_OutXfrComplete_int+0xbe>
 8014280:	683b      	ldr	r3, [r7, #0]
 8014282:	015a      	lsls	r2, r3, #5
 8014284:	69bb      	ldr	r3, [r7, #24]
 8014286:	4413      	add	r3, r2
 8014288:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801428c:	461a      	mov	r2, r3
 801428e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014292:	6093      	str	r3, [r2, #8]
 8014294:	e07e      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014296:	683a      	ldr	r2, [r7, #0]
 8014298:	4613      	mov	r3, r2
 801429a:	00db      	lsls	r3, r3, #3
 801429c:	4413      	add	r3, r2
 801429e:	009b      	lsls	r3, r3, #2
 80142a0:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80142a4:	687a      	ldr	r2, [r7, #4]
 80142a6:	4413      	add	r3, r2
 80142a8:	3304      	adds	r3, #4
 80142aa:	60fb      	str	r3, [r7, #12]
 80142ac:	68fb      	ldr	r3, [r7, #12]
 80142ae:	69da      	ldr	r2, [r3, #28]
 80142b0:	683b      	ldr	r3, [r7, #0]
 80142b2:	0159      	lsls	r1, r3, #5
 80142b4:	69bb      	ldr	r3, [r7, #24]
 80142b6:	440b      	add	r3, r1
 80142b8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80142bc:	691b      	ldr	r3, [r3, #16]
 80142be:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80142c2:	1ad2      	subs	r2, r2, r3
 80142c4:	68fb      	ldr	r3, [r7, #12]
 80142c6:	621a      	str	r2, [r3, #32]
 80142c8:	683b      	ldr	r3, [r7, #0]
 80142ca:	2b00      	cmp	r3, #0
 80142cc:	d114      	bne.n	80142f8 <PCD_EP_OutXfrComplete_int+0x120>
 80142ce:	68fb      	ldr	r3, [r7, #12]
 80142d0:	699b      	ldr	r3, [r3, #24]
 80142d2:	2b00      	cmp	r3, #0
 80142d4:	d109      	bne.n	80142ea <PCD_EP_OutXfrComplete_int+0x112>
 80142d6:	687b      	ldr	r3, [r7, #4]
 80142d8:	6818      	ldr	r0, [r3, #0]
 80142da:	687b      	ldr	r3, [r7, #4]
 80142dc:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80142e0:	461a      	mov	r2, r3
 80142e2:	2101      	movs	r1, #1
 80142e4:	f005 f8b4 	bl	8019450 <USB_EP0_OutStart>
 80142e8:	e006      	b.n	80142f8 <PCD_EP_OutXfrComplete_int+0x120>
 80142ea:	68fb      	ldr	r3, [r7, #12]
 80142ec:	691a      	ldr	r2, [r3, #16]
 80142ee:	68fb      	ldr	r3, [r7, #12]
 80142f0:	6a1b      	ldr	r3, [r3, #32]
 80142f2:	441a      	add	r2, r3
 80142f4:	68fb      	ldr	r3, [r7, #12]
 80142f6:	611a      	str	r2, [r3, #16]
 80142f8:	683b      	ldr	r3, [r7, #0]
 80142fa:	b2db      	uxtb	r3, r3
 80142fc:	4619      	mov	r1, r3
 80142fe:	6878      	ldr	r0, [r7, #4]
 8014300:	f00a fd52 	bl	801eda8 <HAL_PCD_DataOutStageCallback>
 8014304:	e046      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014306:	697b      	ldr	r3, [r7, #20]
 8014308:	4a26      	ldr	r2, [pc, #152]	; (80143a4 <PCD_EP_OutXfrComplete_int+0x1cc>)
 801430a:	4293      	cmp	r3, r2
 801430c:	d124      	bne.n	8014358 <PCD_EP_OutXfrComplete_int+0x180>
 801430e:	693b      	ldr	r3, [r7, #16]
 8014310:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8014314:	2b00      	cmp	r3, #0
 8014316:	d00a      	beq.n	801432e <PCD_EP_OutXfrComplete_int+0x156>
 8014318:	683b      	ldr	r3, [r7, #0]
 801431a:	015a      	lsls	r2, r3, #5
 801431c:	69bb      	ldr	r3, [r7, #24]
 801431e:	4413      	add	r3, r2
 8014320:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8014324:	461a      	mov	r2, r3
 8014326:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801432a:	6093      	str	r3, [r2, #8]
 801432c:	e032      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 801432e:	693b      	ldr	r3, [r7, #16]
 8014330:	f003 0320 	and.w	r3, r3, #32
 8014334:	2b00      	cmp	r3, #0
 8014336:	d008      	beq.n	801434a <PCD_EP_OutXfrComplete_int+0x172>
 8014338:	683b      	ldr	r3, [r7, #0]
 801433a:	015a      	lsls	r2, r3, #5
 801433c:	69bb      	ldr	r3, [r7, #24]
 801433e:	4413      	add	r3, r2
 8014340:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8014344:	461a      	mov	r2, r3
 8014346:	2320      	movs	r3, #32
 8014348:	6093      	str	r3, [r2, #8]
 801434a:	683b      	ldr	r3, [r7, #0]
 801434c:	b2db      	uxtb	r3, r3
 801434e:	4619      	mov	r1, r3
 8014350:	6878      	ldr	r0, [r7, #4]
 8014352:	f00a fd29 	bl	801eda8 <HAL_PCD_DataOutStageCallback>
 8014356:	e01d      	b.n	8014394 <PCD_EP_OutXfrComplete_int+0x1bc>
 8014358:	683b      	ldr	r3, [r7, #0]
 801435a:	2b00      	cmp	r3, #0
 801435c:	d114      	bne.n	8014388 <PCD_EP_OutXfrComplete_int+0x1b0>
 801435e:	6879      	ldr	r1, [r7, #4]
 8014360:	683a      	ldr	r2, [r7, #0]
 8014362:	4613      	mov	r3, r2
 8014364:	00db      	lsls	r3, r3, #3
 8014366:	4413      	add	r3, r2
 8014368:	009b      	lsls	r3, r3, #2
 801436a:	440b      	add	r3, r1
 801436c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8014370:	681b      	ldr	r3, [r3, #0]
 8014372:	2b00      	cmp	r3, #0
 8014374:	d108      	bne.n	8014388 <PCD_EP_OutXfrComplete_int+0x1b0>
 8014376:	687b      	ldr	r3, [r7, #4]
 8014378:	6818      	ldr	r0, [r3, #0]
 801437a:	687b      	ldr	r3, [r7, #4]
 801437c:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8014380:	461a      	mov	r2, r3
 8014382:	2100      	movs	r1, #0
 8014384:	f005 f864 	bl	8019450 <USB_EP0_OutStart>
 8014388:	683b      	ldr	r3, [r7, #0]
 801438a:	b2db      	uxtb	r3, r3
 801438c:	4619      	mov	r1, r3
 801438e:	6878      	ldr	r0, [r7, #4]
 8014390:	f00a fd0a 	bl	801eda8 <HAL_PCD_DataOutStageCallback>
 8014394:	2300      	movs	r3, #0
 8014396:	4618      	mov	r0, r3
 8014398:	3720      	adds	r7, #32
 801439a:	46bd      	mov	sp, r7
 801439c:	bd80      	pop	{r7, pc}
 801439e:	bf00      	nop
 80143a0:	4f54300a 	.word	0x4f54300a
 80143a4:	4f54310a 	.word	0x4f54310a

080143a8 <PCD_EP_OutSetupPacket_int>:
 80143a8:	b580      	push	{r7, lr}
 80143aa:	b086      	sub	sp, #24
 80143ac:	af00      	add	r7, sp, #0
 80143ae:	6078      	str	r0, [r7, #4]
 80143b0:	6039      	str	r1, [r7, #0]
 80143b2:	687b      	ldr	r3, [r7, #4]
 80143b4:	681b      	ldr	r3, [r3, #0]
 80143b6:	617b      	str	r3, [r7, #20]
 80143b8:	697b      	ldr	r3, [r7, #20]
 80143ba:	613b      	str	r3, [r7, #16]
 80143bc:	697b      	ldr	r3, [r7, #20]
 80143be:	333c      	adds	r3, #60	; 0x3c
 80143c0:	3304      	adds	r3, #4
 80143c2:	681b      	ldr	r3, [r3, #0]
 80143c4:	60fb      	str	r3, [r7, #12]
 80143c6:	683b      	ldr	r3, [r7, #0]
 80143c8:	015a      	lsls	r2, r3, #5
 80143ca:	693b      	ldr	r3, [r7, #16]
 80143cc:	4413      	add	r3, r2
 80143ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80143d2:	689b      	ldr	r3, [r3, #8]
 80143d4:	60bb      	str	r3, [r7, #8]
 80143d6:	68fb      	ldr	r3, [r7, #12]
 80143d8:	4a15      	ldr	r2, [pc, #84]	; (8014430 <PCD_EP_OutSetupPacket_int+0x88>)
 80143da:	4293      	cmp	r3, r2
 80143dc:	d90e      	bls.n	80143fc <PCD_EP_OutSetupPacket_int+0x54>
 80143de:	68bb      	ldr	r3, [r7, #8]
 80143e0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80143e4:	2b00      	cmp	r3, #0
 80143e6:	d009      	beq.n	80143fc <PCD_EP_OutSetupPacket_int+0x54>
 80143e8:	683b      	ldr	r3, [r7, #0]
 80143ea:	015a      	lsls	r2, r3, #5
 80143ec:	693b      	ldr	r3, [r7, #16]
 80143ee:	4413      	add	r3, r2
 80143f0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80143f4:	461a      	mov	r2, r3
 80143f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80143fa:	6093      	str	r3, [r2, #8]
 80143fc:	6878      	ldr	r0, [r7, #4]
 80143fe:	f00a fcc1 	bl	801ed84 <HAL_PCD_SetupStageCallback>
 8014402:	68fb      	ldr	r3, [r7, #12]
 8014404:	4a0a      	ldr	r2, [pc, #40]	; (8014430 <PCD_EP_OutSetupPacket_int+0x88>)
 8014406:	4293      	cmp	r3, r2
 8014408:	d90c      	bls.n	8014424 <PCD_EP_OutSetupPacket_int+0x7c>
 801440a:	687b      	ldr	r3, [r7, #4]
 801440c:	691b      	ldr	r3, [r3, #16]
 801440e:	2b01      	cmp	r3, #1
 8014410:	d108      	bne.n	8014424 <PCD_EP_OutSetupPacket_int+0x7c>
 8014412:	687b      	ldr	r3, [r7, #4]
 8014414:	6818      	ldr	r0, [r3, #0]
 8014416:	687b      	ldr	r3, [r7, #4]
 8014418:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 801441c:	461a      	mov	r2, r3
 801441e:	2101      	movs	r1, #1
 8014420:	f005 f816 	bl	8019450 <USB_EP0_OutStart>
 8014424:	2300      	movs	r3, #0
 8014426:	4618      	mov	r0, r3
 8014428:	3718      	adds	r7, #24
 801442a:	46bd      	mov	sp, r7
 801442c:	bd80      	pop	{r7, pc}
 801442e:	bf00      	nop
 8014430:	4f54300a 	.word	0x4f54300a

08014434 <HAL_PCDEx_SetTxFiFo>:
 8014434:	b480      	push	{r7}
 8014436:	b085      	sub	sp, #20
 8014438:	af00      	add	r7, sp, #0
 801443a:	6078      	str	r0, [r7, #4]
 801443c:	460b      	mov	r3, r1
 801443e:	70fb      	strb	r3, [r7, #3]
 8014440:	4613      	mov	r3, r2
 8014442:	803b      	strh	r3, [r7, #0]
 8014444:	687b      	ldr	r3, [r7, #4]
 8014446:	681b      	ldr	r3, [r3, #0]
 8014448:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801444a:	60bb      	str	r3, [r7, #8]
 801444c:	78fb      	ldrb	r3, [r7, #3]
 801444e:	2b00      	cmp	r3, #0
 8014450:	d107      	bne.n	8014462 <HAL_PCDEx_SetTxFiFo+0x2e>
 8014452:	883b      	ldrh	r3, [r7, #0]
 8014454:	0419      	lsls	r1, r3, #16
 8014456:	687b      	ldr	r3, [r7, #4]
 8014458:	681b      	ldr	r3, [r3, #0]
 801445a:	68ba      	ldr	r2, [r7, #8]
 801445c:	430a      	orrs	r2, r1
 801445e:	629a      	str	r2, [r3, #40]	; 0x28
 8014460:	e028      	b.n	80144b4 <HAL_PCDEx_SetTxFiFo+0x80>
 8014462:	687b      	ldr	r3, [r7, #4]
 8014464:	681b      	ldr	r3, [r3, #0]
 8014466:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014468:	0c1b      	lsrs	r3, r3, #16
 801446a:	68ba      	ldr	r2, [r7, #8]
 801446c:	4413      	add	r3, r2
 801446e:	60bb      	str	r3, [r7, #8]
 8014470:	2300      	movs	r3, #0
 8014472:	73fb      	strb	r3, [r7, #15]
 8014474:	e00d      	b.n	8014492 <HAL_PCDEx_SetTxFiFo+0x5e>
 8014476:	687b      	ldr	r3, [r7, #4]
 8014478:	681a      	ldr	r2, [r3, #0]
 801447a:	7bfb      	ldrb	r3, [r7, #15]
 801447c:	3340      	adds	r3, #64	; 0x40
 801447e:	009b      	lsls	r3, r3, #2
 8014480:	4413      	add	r3, r2
 8014482:	685b      	ldr	r3, [r3, #4]
 8014484:	0c1b      	lsrs	r3, r3, #16
 8014486:	68ba      	ldr	r2, [r7, #8]
 8014488:	4413      	add	r3, r2
 801448a:	60bb      	str	r3, [r7, #8]
 801448c:	7bfb      	ldrb	r3, [r7, #15]
 801448e:	3301      	adds	r3, #1
 8014490:	73fb      	strb	r3, [r7, #15]
 8014492:	7bfa      	ldrb	r2, [r7, #15]
 8014494:	78fb      	ldrb	r3, [r7, #3]
 8014496:	3b01      	subs	r3, #1
 8014498:	429a      	cmp	r2, r3
 801449a:	d3ec      	bcc.n	8014476 <HAL_PCDEx_SetTxFiFo+0x42>
 801449c:	883b      	ldrh	r3, [r7, #0]
 801449e:	0418      	lsls	r0, r3, #16
 80144a0:	687b      	ldr	r3, [r7, #4]
 80144a2:	6819      	ldr	r1, [r3, #0]
 80144a4:	78fb      	ldrb	r3, [r7, #3]
 80144a6:	3b01      	subs	r3, #1
 80144a8:	68ba      	ldr	r2, [r7, #8]
 80144aa:	4302      	orrs	r2, r0
 80144ac:	3340      	adds	r3, #64	; 0x40
 80144ae:	009b      	lsls	r3, r3, #2
 80144b0:	440b      	add	r3, r1
 80144b2:	605a      	str	r2, [r3, #4]
 80144b4:	2300      	movs	r3, #0
 80144b6:	4618      	mov	r0, r3
 80144b8:	3714      	adds	r7, #20
 80144ba:	46bd      	mov	sp, r7
 80144bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144c0:	4770      	bx	lr

080144c2 <HAL_PCDEx_SetRxFiFo>:
 80144c2:	b480      	push	{r7}
 80144c4:	b083      	sub	sp, #12
 80144c6:	af00      	add	r7, sp, #0
 80144c8:	6078      	str	r0, [r7, #4]
 80144ca:	460b      	mov	r3, r1
 80144cc:	807b      	strh	r3, [r7, #2]
 80144ce:	687b      	ldr	r3, [r7, #4]
 80144d0:	681b      	ldr	r3, [r3, #0]
 80144d2:	887a      	ldrh	r2, [r7, #2]
 80144d4:	625a      	str	r2, [r3, #36]	; 0x24
 80144d6:	2300      	movs	r3, #0
 80144d8:	4618      	mov	r0, r3
 80144da:	370c      	adds	r7, #12
 80144dc:	46bd      	mov	sp, r7
 80144de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144e2:	4770      	bx	lr

080144e4 <HAL_PCDEx_LPM_Callback>:
 80144e4:	b480      	push	{r7}
 80144e6:	b083      	sub	sp, #12
 80144e8:	af00      	add	r7, sp, #0
 80144ea:	6078      	str	r0, [r7, #4]
 80144ec:	460b      	mov	r3, r1
 80144ee:	70fb      	strb	r3, [r7, #3]
 80144f0:	bf00      	nop
 80144f2:	370c      	adds	r7, #12
 80144f4:	46bd      	mov	sp, r7
 80144f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144fa:	4770      	bx	lr

080144fc <HAL_RCC_OscConfig>:
 80144fc:	b580      	push	{r7, lr}
 80144fe:	b086      	sub	sp, #24
 8014500:	af00      	add	r7, sp, #0
 8014502:	6078      	str	r0, [r7, #4]
 8014504:	687b      	ldr	r3, [r7, #4]
 8014506:	2b00      	cmp	r3, #0
 8014508:	d101      	bne.n	801450e <HAL_RCC_OscConfig+0x12>
 801450a:	2301      	movs	r3, #1
 801450c:	e267      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801450e:	687b      	ldr	r3, [r7, #4]
 8014510:	681b      	ldr	r3, [r3, #0]
 8014512:	f003 0301 	and.w	r3, r3, #1
 8014516:	2b00      	cmp	r3, #0
 8014518:	d075      	beq.n	8014606 <HAL_RCC_OscConfig+0x10a>
 801451a:	4b88      	ldr	r3, [pc, #544]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801451c:	689b      	ldr	r3, [r3, #8]
 801451e:	f003 030c 	and.w	r3, r3, #12
 8014522:	2b04      	cmp	r3, #4
 8014524:	d00c      	beq.n	8014540 <HAL_RCC_OscConfig+0x44>
 8014526:	4b85      	ldr	r3, [pc, #532]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014528:	689b      	ldr	r3, [r3, #8]
 801452a:	f003 030c 	and.w	r3, r3, #12
 801452e:	2b08      	cmp	r3, #8
 8014530:	d112      	bne.n	8014558 <HAL_RCC_OscConfig+0x5c>
 8014532:	4b82      	ldr	r3, [pc, #520]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014534:	685b      	ldr	r3, [r3, #4]
 8014536:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801453a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801453e:	d10b      	bne.n	8014558 <HAL_RCC_OscConfig+0x5c>
 8014540:	4b7e      	ldr	r3, [pc, #504]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014542:	681b      	ldr	r3, [r3, #0]
 8014544:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8014548:	2b00      	cmp	r3, #0
 801454a:	d05b      	beq.n	8014604 <HAL_RCC_OscConfig+0x108>
 801454c:	687b      	ldr	r3, [r7, #4]
 801454e:	685b      	ldr	r3, [r3, #4]
 8014550:	2b00      	cmp	r3, #0
 8014552:	d157      	bne.n	8014604 <HAL_RCC_OscConfig+0x108>
 8014554:	2301      	movs	r3, #1
 8014556:	e242      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 8014558:	687b      	ldr	r3, [r7, #4]
 801455a:	685b      	ldr	r3, [r3, #4]
 801455c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8014560:	d106      	bne.n	8014570 <HAL_RCC_OscConfig+0x74>
 8014562:	4b76      	ldr	r3, [pc, #472]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014564:	681b      	ldr	r3, [r3, #0]
 8014566:	4a75      	ldr	r2, [pc, #468]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014568:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801456c:	6013      	str	r3, [r2, #0]
 801456e:	e01d      	b.n	80145ac <HAL_RCC_OscConfig+0xb0>
 8014570:	687b      	ldr	r3, [r7, #4]
 8014572:	685b      	ldr	r3, [r3, #4]
 8014574:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8014578:	d10c      	bne.n	8014594 <HAL_RCC_OscConfig+0x98>
 801457a:	4b70      	ldr	r3, [pc, #448]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801457c:	681b      	ldr	r3, [r3, #0]
 801457e:	4a6f      	ldr	r2, [pc, #444]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014580:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8014584:	6013      	str	r3, [r2, #0]
 8014586:	4b6d      	ldr	r3, [pc, #436]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014588:	681b      	ldr	r3, [r3, #0]
 801458a:	4a6c      	ldr	r2, [pc, #432]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801458c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8014590:	6013      	str	r3, [r2, #0]
 8014592:	e00b      	b.n	80145ac <HAL_RCC_OscConfig+0xb0>
 8014594:	4b69      	ldr	r3, [pc, #420]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014596:	681b      	ldr	r3, [r3, #0]
 8014598:	4a68      	ldr	r2, [pc, #416]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801459a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801459e:	6013      	str	r3, [r2, #0]
 80145a0:	4b66      	ldr	r3, [pc, #408]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80145a2:	681b      	ldr	r3, [r3, #0]
 80145a4:	4a65      	ldr	r2, [pc, #404]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80145a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80145aa:	6013      	str	r3, [r2, #0]
 80145ac:	687b      	ldr	r3, [r7, #4]
 80145ae:	685b      	ldr	r3, [r3, #4]
 80145b0:	2b00      	cmp	r3, #0
 80145b2:	d013      	beq.n	80145dc <HAL_RCC_OscConfig+0xe0>
 80145b4:	f7fa ffc2 	bl	800f53c <HAL_GetTick>
 80145b8:	6138      	str	r0, [r7, #16]
 80145ba:	e008      	b.n	80145ce <HAL_RCC_OscConfig+0xd2>
 80145bc:	f7fa ffbe 	bl	800f53c <HAL_GetTick>
 80145c0:	4602      	mov	r2, r0
 80145c2:	693b      	ldr	r3, [r7, #16]
 80145c4:	1ad3      	subs	r3, r2, r3
 80145c6:	2b64      	cmp	r3, #100	; 0x64
 80145c8:	d901      	bls.n	80145ce <HAL_RCC_OscConfig+0xd2>
 80145ca:	2303      	movs	r3, #3
 80145cc:	e207      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80145ce:	4b5b      	ldr	r3, [pc, #364]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80145d0:	681b      	ldr	r3, [r3, #0]
 80145d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80145d6:	2b00      	cmp	r3, #0
 80145d8:	d0f0      	beq.n	80145bc <HAL_RCC_OscConfig+0xc0>
 80145da:	e014      	b.n	8014606 <HAL_RCC_OscConfig+0x10a>
 80145dc:	f7fa ffae 	bl	800f53c <HAL_GetTick>
 80145e0:	6138      	str	r0, [r7, #16]
 80145e2:	e008      	b.n	80145f6 <HAL_RCC_OscConfig+0xfa>
 80145e4:	f7fa ffaa 	bl	800f53c <HAL_GetTick>
 80145e8:	4602      	mov	r2, r0
 80145ea:	693b      	ldr	r3, [r7, #16]
 80145ec:	1ad3      	subs	r3, r2, r3
 80145ee:	2b64      	cmp	r3, #100	; 0x64
 80145f0:	d901      	bls.n	80145f6 <HAL_RCC_OscConfig+0xfa>
 80145f2:	2303      	movs	r3, #3
 80145f4:	e1f3      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80145f6:	4b51      	ldr	r3, [pc, #324]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80145f8:	681b      	ldr	r3, [r3, #0]
 80145fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80145fe:	2b00      	cmp	r3, #0
 8014600:	d1f0      	bne.n	80145e4 <HAL_RCC_OscConfig+0xe8>
 8014602:	e000      	b.n	8014606 <HAL_RCC_OscConfig+0x10a>
 8014604:	bf00      	nop
 8014606:	687b      	ldr	r3, [r7, #4]
 8014608:	681b      	ldr	r3, [r3, #0]
 801460a:	f003 0302 	and.w	r3, r3, #2
 801460e:	2b00      	cmp	r3, #0
 8014610:	d063      	beq.n	80146da <HAL_RCC_OscConfig+0x1de>
 8014612:	4b4a      	ldr	r3, [pc, #296]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014614:	689b      	ldr	r3, [r3, #8]
 8014616:	f003 030c 	and.w	r3, r3, #12
 801461a:	2b00      	cmp	r3, #0
 801461c:	d00b      	beq.n	8014636 <HAL_RCC_OscConfig+0x13a>
 801461e:	4b47      	ldr	r3, [pc, #284]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014620:	689b      	ldr	r3, [r3, #8]
 8014622:	f003 030c 	and.w	r3, r3, #12
 8014626:	2b08      	cmp	r3, #8
 8014628:	d11c      	bne.n	8014664 <HAL_RCC_OscConfig+0x168>
 801462a:	4b44      	ldr	r3, [pc, #272]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801462c:	685b      	ldr	r3, [r3, #4]
 801462e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8014632:	2b00      	cmp	r3, #0
 8014634:	d116      	bne.n	8014664 <HAL_RCC_OscConfig+0x168>
 8014636:	4b41      	ldr	r3, [pc, #260]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014638:	681b      	ldr	r3, [r3, #0]
 801463a:	f003 0302 	and.w	r3, r3, #2
 801463e:	2b00      	cmp	r3, #0
 8014640:	d005      	beq.n	801464e <HAL_RCC_OscConfig+0x152>
 8014642:	687b      	ldr	r3, [r7, #4]
 8014644:	68db      	ldr	r3, [r3, #12]
 8014646:	2b01      	cmp	r3, #1
 8014648:	d001      	beq.n	801464e <HAL_RCC_OscConfig+0x152>
 801464a:	2301      	movs	r3, #1
 801464c:	e1c7      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801464e:	4b3b      	ldr	r3, [pc, #236]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014650:	681b      	ldr	r3, [r3, #0]
 8014652:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8014656:	687b      	ldr	r3, [r7, #4]
 8014658:	691b      	ldr	r3, [r3, #16]
 801465a:	00db      	lsls	r3, r3, #3
 801465c:	4937      	ldr	r1, [pc, #220]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801465e:	4313      	orrs	r3, r2
 8014660:	600b      	str	r3, [r1, #0]
 8014662:	e03a      	b.n	80146da <HAL_RCC_OscConfig+0x1de>
 8014664:	687b      	ldr	r3, [r7, #4]
 8014666:	68db      	ldr	r3, [r3, #12]
 8014668:	2b00      	cmp	r3, #0
 801466a:	d020      	beq.n	80146ae <HAL_RCC_OscConfig+0x1b2>
 801466c:	4b34      	ldr	r3, [pc, #208]	; (8014740 <HAL_RCC_OscConfig+0x244>)
 801466e:	2201      	movs	r2, #1
 8014670:	601a      	str	r2, [r3, #0]
 8014672:	f7fa ff63 	bl	800f53c <HAL_GetTick>
 8014676:	6138      	str	r0, [r7, #16]
 8014678:	e008      	b.n	801468c <HAL_RCC_OscConfig+0x190>
 801467a:	f7fa ff5f 	bl	800f53c <HAL_GetTick>
 801467e:	4602      	mov	r2, r0
 8014680:	693b      	ldr	r3, [r7, #16]
 8014682:	1ad3      	subs	r3, r2, r3
 8014684:	2b02      	cmp	r3, #2
 8014686:	d901      	bls.n	801468c <HAL_RCC_OscConfig+0x190>
 8014688:	2303      	movs	r3, #3
 801468a:	e1a8      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801468c:	4b2b      	ldr	r3, [pc, #172]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801468e:	681b      	ldr	r3, [r3, #0]
 8014690:	f003 0302 	and.w	r3, r3, #2
 8014694:	2b00      	cmp	r3, #0
 8014696:	d0f0      	beq.n	801467a <HAL_RCC_OscConfig+0x17e>
 8014698:	4b28      	ldr	r3, [pc, #160]	; (801473c <HAL_RCC_OscConfig+0x240>)
 801469a:	681b      	ldr	r3, [r3, #0]
 801469c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80146a0:	687b      	ldr	r3, [r7, #4]
 80146a2:	691b      	ldr	r3, [r3, #16]
 80146a4:	00db      	lsls	r3, r3, #3
 80146a6:	4925      	ldr	r1, [pc, #148]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80146a8:	4313      	orrs	r3, r2
 80146aa:	600b      	str	r3, [r1, #0]
 80146ac:	e015      	b.n	80146da <HAL_RCC_OscConfig+0x1de>
 80146ae:	4b24      	ldr	r3, [pc, #144]	; (8014740 <HAL_RCC_OscConfig+0x244>)
 80146b0:	2200      	movs	r2, #0
 80146b2:	601a      	str	r2, [r3, #0]
 80146b4:	f7fa ff42 	bl	800f53c <HAL_GetTick>
 80146b8:	6138      	str	r0, [r7, #16]
 80146ba:	e008      	b.n	80146ce <HAL_RCC_OscConfig+0x1d2>
 80146bc:	f7fa ff3e 	bl	800f53c <HAL_GetTick>
 80146c0:	4602      	mov	r2, r0
 80146c2:	693b      	ldr	r3, [r7, #16]
 80146c4:	1ad3      	subs	r3, r2, r3
 80146c6:	2b02      	cmp	r3, #2
 80146c8:	d901      	bls.n	80146ce <HAL_RCC_OscConfig+0x1d2>
 80146ca:	2303      	movs	r3, #3
 80146cc:	e187      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80146ce:	4b1b      	ldr	r3, [pc, #108]	; (801473c <HAL_RCC_OscConfig+0x240>)
 80146d0:	681b      	ldr	r3, [r3, #0]
 80146d2:	f003 0302 	and.w	r3, r3, #2
 80146d6:	2b00      	cmp	r3, #0
 80146d8:	d1f0      	bne.n	80146bc <HAL_RCC_OscConfig+0x1c0>
 80146da:	687b      	ldr	r3, [r7, #4]
 80146dc:	681b      	ldr	r3, [r3, #0]
 80146de:	f003 0308 	and.w	r3, r3, #8
 80146e2:	2b00      	cmp	r3, #0
 80146e4:	d036      	beq.n	8014754 <HAL_RCC_OscConfig+0x258>
 80146e6:	687b      	ldr	r3, [r7, #4]
 80146e8:	695b      	ldr	r3, [r3, #20]
 80146ea:	2b00      	cmp	r3, #0
 80146ec:	d016      	beq.n	801471c <HAL_RCC_OscConfig+0x220>
 80146ee:	4b15      	ldr	r3, [pc, #84]	; (8014744 <HAL_RCC_OscConfig+0x248>)
 80146f0:	2201      	movs	r2, #1
 80146f2:	601a      	str	r2, [r3, #0]
 80146f4:	f7fa ff22 	bl	800f53c <HAL_GetTick>
 80146f8:	6138      	str	r0, [r7, #16]
 80146fa:	e008      	b.n	801470e <HAL_RCC_OscConfig+0x212>
 80146fc:	f7fa ff1e 	bl	800f53c <HAL_GetTick>
 8014700:	4602      	mov	r2, r0
 8014702:	693b      	ldr	r3, [r7, #16]
 8014704:	1ad3      	subs	r3, r2, r3
 8014706:	2b02      	cmp	r3, #2
 8014708:	d901      	bls.n	801470e <HAL_RCC_OscConfig+0x212>
 801470a:	2303      	movs	r3, #3
 801470c:	e167      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801470e:	4b0b      	ldr	r3, [pc, #44]	; (801473c <HAL_RCC_OscConfig+0x240>)
 8014710:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014712:	f003 0302 	and.w	r3, r3, #2
 8014716:	2b00      	cmp	r3, #0
 8014718:	d0f0      	beq.n	80146fc <HAL_RCC_OscConfig+0x200>
 801471a:	e01b      	b.n	8014754 <HAL_RCC_OscConfig+0x258>
 801471c:	4b09      	ldr	r3, [pc, #36]	; (8014744 <HAL_RCC_OscConfig+0x248>)
 801471e:	2200      	movs	r2, #0
 8014720:	601a      	str	r2, [r3, #0]
 8014722:	f7fa ff0b 	bl	800f53c <HAL_GetTick>
 8014726:	6138      	str	r0, [r7, #16]
 8014728:	e00e      	b.n	8014748 <HAL_RCC_OscConfig+0x24c>
 801472a:	f7fa ff07 	bl	800f53c <HAL_GetTick>
 801472e:	4602      	mov	r2, r0
 8014730:	693b      	ldr	r3, [r7, #16]
 8014732:	1ad3      	subs	r3, r2, r3
 8014734:	2b02      	cmp	r3, #2
 8014736:	d907      	bls.n	8014748 <HAL_RCC_OscConfig+0x24c>
 8014738:	2303      	movs	r3, #3
 801473a:	e150      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801473c:	40023800 	.word	0x40023800
 8014740:	42470000 	.word	0x42470000
 8014744:	42470e80 	.word	0x42470e80
 8014748:	4b88      	ldr	r3, [pc, #544]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801474a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801474c:	f003 0302 	and.w	r3, r3, #2
 8014750:	2b00      	cmp	r3, #0
 8014752:	d1ea      	bne.n	801472a <HAL_RCC_OscConfig+0x22e>
 8014754:	687b      	ldr	r3, [r7, #4]
 8014756:	681b      	ldr	r3, [r3, #0]
 8014758:	f003 0304 	and.w	r3, r3, #4
 801475c:	2b00      	cmp	r3, #0
 801475e:	f000 8097 	beq.w	8014890 <HAL_RCC_OscConfig+0x394>
 8014762:	2300      	movs	r3, #0
 8014764:	75fb      	strb	r3, [r7, #23]
 8014766:	4b81      	ldr	r3, [pc, #516]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014768:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801476a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801476e:	2b00      	cmp	r3, #0
 8014770:	d10f      	bne.n	8014792 <HAL_RCC_OscConfig+0x296>
 8014772:	2300      	movs	r3, #0
 8014774:	60bb      	str	r3, [r7, #8]
 8014776:	4b7d      	ldr	r3, [pc, #500]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014778:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801477a:	4a7c      	ldr	r2, [pc, #496]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801477c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8014780:	6413      	str	r3, [r2, #64]	; 0x40
 8014782:	4b7a      	ldr	r3, [pc, #488]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014784:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014786:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801478a:	60bb      	str	r3, [r7, #8]
 801478c:	68bb      	ldr	r3, [r7, #8]
 801478e:	2301      	movs	r3, #1
 8014790:	75fb      	strb	r3, [r7, #23]
 8014792:	4b77      	ldr	r3, [pc, #476]	; (8014970 <HAL_RCC_OscConfig+0x474>)
 8014794:	681b      	ldr	r3, [r3, #0]
 8014796:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801479a:	2b00      	cmp	r3, #0
 801479c:	d118      	bne.n	80147d0 <HAL_RCC_OscConfig+0x2d4>
 801479e:	4b74      	ldr	r3, [pc, #464]	; (8014970 <HAL_RCC_OscConfig+0x474>)
 80147a0:	681b      	ldr	r3, [r3, #0]
 80147a2:	4a73      	ldr	r2, [pc, #460]	; (8014970 <HAL_RCC_OscConfig+0x474>)
 80147a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80147a8:	6013      	str	r3, [r2, #0]
 80147aa:	f7fa fec7 	bl	800f53c <HAL_GetTick>
 80147ae:	6138      	str	r0, [r7, #16]
 80147b0:	e008      	b.n	80147c4 <HAL_RCC_OscConfig+0x2c8>
 80147b2:	f7fa fec3 	bl	800f53c <HAL_GetTick>
 80147b6:	4602      	mov	r2, r0
 80147b8:	693b      	ldr	r3, [r7, #16]
 80147ba:	1ad3      	subs	r3, r2, r3
 80147bc:	2b02      	cmp	r3, #2
 80147be:	d901      	bls.n	80147c4 <HAL_RCC_OscConfig+0x2c8>
 80147c0:	2303      	movs	r3, #3
 80147c2:	e10c      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80147c4:	4b6a      	ldr	r3, [pc, #424]	; (8014970 <HAL_RCC_OscConfig+0x474>)
 80147c6:	681b      	ldr	r3, [r3, #0]
 80147c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80147cc:	2b00      	cmp	r3, #0
 80147ce:	d0f0      	beq.n	80147b2 <HAL_RCC_OscConfig+0x2b6>
 80147d0:	687b      	ldr	r3, [r7, #4]
 80147d2:	689b      	ldr	r3, [r3, #8]
 80147d4:	2b01      	cmp	r3, #1
 80147d6:	d106      	bne.n	80147e6 <HAL_RCC_OscConfig+0x2ea>
 80147d8:	4b64      	ldr	r3, [pc, #400]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80147da:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80147dc:	4a63      	ldr	r2, [pc, #396]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80147de:	f043 0301 	orr.w	r3, r3, #1
 80147e2:	6713      	str	r3, [r2, #112]	; 0x70
 80147e4:	e01c      	b.n	8014820 <HAL_RCC_OscConfig+0x324>
 80147e6:	687b      	ldr	r3, [r7, #4]
 80147e8:	689b      	ldr	r3, [r3, #8]
 80147ea:	2b05      	cmp	r3, #5
 80147ec:	d10c      	bne.n	8014808 <HAL_RCC_OscConfig+0x30c>
 80147ee:	4b5f      	ldr	r3, [pc, #380]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80147f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80147f2:	4a5e      	ldr	r2, [pc, #376]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80147f4:	f043 0304 	orr.w	r3, r3, #4
 80147f8:	6713      	str	r3, [r2, #112]	; 0x70
 80147fa:	4b5c      	ldr	r3, [pc, #368]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80147fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80147fe:	4a5b      	ldr	r2, [pc, #364]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014800:	f043 0301 	orr.w	r3, r3, #1
 8014804:	6713      	str	r3, [r2, #112]	; 0x70
 8014806:	e00b      	b.n	8014820 <HAL_RCC_OscConfig+0x324>
 8014808:	4b58      	ldr	r3, [pc, #352]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801480a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801480c:	4a57      	ldr	r2, [pc, #348]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801480e:	f023 0301 	bic.w	r3, r3, #1
 8014812:	6713      	str	r3, [r2, #112]	; 0x70
 8014814:	4b55      	ldr	r3, [pc, #340]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014816:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014818:	4a54      	ldr	r2, [pc, #336]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801481a:	f023 0304 	bic.w	r3, r3, #4
 801481e:	6713      	str	r3, [r2, #112]	; 0x70
 8014820:	687b      	ldr	r3, [r7, #4]
 8014822:	689b      	ldr	r3, [r3, #8]
 8014824:	2b00      	cmp	r3, #0
 8014826:	d015      	beq.n	8014854 <HAL_RCC_OscConfig+0x358>
 8014828:	f7fa fe88 	bl	800f53c <HAL_GetTick>
 801482c:	6138      	str	r0, [r7, #16]
 801482e:	e00a      	b.n	8014846 <HAL_RCC_OscConfig+0x34a>
 8014830:	f7fa fe84 	bl	800f53c <HAL_GetTick>
 8014834:	4602      	mov	r2, r0
 8014836:	693b      	ldr	r3, [r7, #16]
 8014838:	1ad3      	subs	r3, r2, r3
 801483a:	f241 3288 	movw	r2, #5000	; 0x1388
 801483e:	4293      	cmp	r3, r2
 8014840:	d901      	bls.n	8014846 <HAL_RCC_OscConfig+0x34a>
 8014842:	2303      	movs	r3, #3
 8014844:	e0cb      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 8014846:	4b49      	ldr	r3, [pc, #292]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014848:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801484a:	f003 0302 	and.w	r3, r3, #2
 801484e:	2b00      	cmp	r3, #0
 8014850:	d0ee      	beq.n	8014830 <HAL_RCC_OscConfig+0x334>
 8014852:	e014      	b.n	801487e <HAL_RCC_OscConfig+0x382>
 8014854:	f7fa fe72 	bl	800f53c <HAL_GetTick>
 8014858:	6138      	str	r0, [r7, #16]
 801485a:	e00a      	b.n	8014872 <HAL_RCC_OscConfig+0x376>
 801485c:	f7fa fe6e 	bl	800f53c <HAL_GetTick>
 8014860:	4602      	mov	r2, r0
 8014862:	693b      	ldr	r3, [r7, #16]
 8014864:	1ad3      	subs	r3, r2, r3
 8014866:	f241 3288 	movw	r2, #5000	; 0x1388
 801486a:	4293      	cmp	r3, r2
 801486c:	d901      	bls.n	8014872 <HAL_RCC_OscConfig+0x376>
 801486e:	2303      	movs	r3, #3
 8014870:	e0b5      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 8014872:	4b3e      	ldr	r3, [pc, #248]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014874:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014876:	f003 0302 	and.w	r3, r3, #2
 801487a:	2b00      	cmp	r3, #0
 801487c:	d1ee      	bne.n	801485c <HAL_RCC_OscConfig+0x360>
 801487e:	7dfb      	ldrb	r3, [r7, #23]
 8014880:	2b01      	cmp	r3, #1
 8014882:	d105      	bne.n	8014890 <HAL_RCC_OscConfig+0x394>
 8014884:	4b39      	ldr	r3, [pc, #228]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014886:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014888:	4a38      	ldr	r2, [pc, #224]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801488a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801488e:	6413      	str	r3, [r2, #64]	; 0x40
 8014890:	687b      	ldr	r3, [r7, #4]
 8014892:	699b      	ldr	r3, [r3, #24]
 8014894:	2b00      	cmp	r3, #0
 8014896:	f000 80a1 	beq.w	80149dc <HAL_RCC_OscConfig+0x4e0>
 801489a:	4b34      	ldr	r3, [pc, #208]	; (801496c <HAL_RCC_OscConfig+0x470>)
 801489c:	689b      	ldr	r3, [r3, #8]
 801489e:	f003 030c 	and.w	r3, r3, #12
 80148a2:	2b08      	cmp	r3, #8
 80148a4:	d05c      	beq.n	8014960 <HAL_RCC_OscConfig+0x464>
 80148a6:	687b      	ldr	r3, [r7, #4]
 80148a8:	699b      	ldr	r3, [r3, #24]
 80148aa:	2b02      	cmp	r3, #2
 80148ac:	d141      	bne.n	8014932 <HAL_RCC_OscConfig+0x436>
 80148ae:	4b31      	ldr	r3, [pc, #196]	; (8014974 <HAL_RCC_OscConfig+0x478>)
 80148b0:	2200      	movs	r2, #0
 80148b2:	601a      	str	r2, [r3, #0]
 80148b4:	f7fa fe42 	bl	800f53c <HAL_GetTick>
 80148b8:	6138      	str	r0, [r7, #16]
 80148ba:	e008      	b.n	80148ce <HAL_RCC_OscConfig+0x3d2>
 80148bc:	f7fa fe3e 	bl	800f53c <HAL_GetTick>
 80148c0:	4602      	mov	r2, r0
 80148c2:	693b      	ldr	r3, [r7, #16]
 80148c4:	1ad3      	subs	r3, r2, r3
 80148c6:	2b02      	cmp	r3, #2
 80148c8:	d901      	bls.n	80148ce <HAL_RCC_OscConfig+0x3d2>
 80148ca:	2303      	movs	r3, #3
 80148cc:	e087      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80148ce:	4b27      	ldr	r3, [pc, #156]	; (801496c <HAL_RCC_OscConfig+0x470>)
 80148d0:	681b      	ldr	r3, [r3, #0]
 80148d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80148d6:	2b00      	cmp	r3, #0
 80148d8:	d1f0      	bne.n	80148bc <HAL_RCC_OscConfig+0x3c0>
 80148da:	687b      	ldr	r3, [r7, #4]
 80148dc:	69da      	ldr	r2, [r3, #28]
 80148de:	687b      	ldr	r3, [r7, #4]
 80148e0:	6a1b      	ldr	r3, [r3, #32]
 80148e2:	431a      	orrs	r2, r3
 80148e4:	687b      	ldr	r3, [r7, #4]
 80148e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80148e8:	019b      	lsls	r3, r3, #6
 80148ea:	431a      	orrs	r2, r3
 80148ec:	687b      	ldr	r3, [r7, #4]
 80148ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80148f0:	085b      	lsrs	r3, r3, #1
 80148f2:	3b01      	subs	r3, #1
 80148f4:	041b      	lsls	r3, r3, #16
 80148f6:	431a      	orrs	r2, r3
 80148f8:	687b      	ldr	r3, [r7, #4]
 80148fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80148fc:	061b      	lsls	r3, r3, #24
 80148fe:	491b      	ldr	r1, [pc, #108]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014900:	4313      	orrs	r3, r2
 8014902:	604b      	str	r3, [r1, #4]
 8014904:	4b1b      	ldr	r3, [pc, #108]	; (8014974 <HAL_RCC_OscConfig+0x478>)
 8014906:	2201      	movs	r2, #1
 8014908:	601a      	str	r2, [r3, #0]
 801490a:	f7fa fe17 	bl	800f53c <HAL_GetTick>
 801490e:	6138      	str	r0, [r7, #16]
 8014910:	e008      	b.n	8014924 <HAL_RCC_OscConfig+0x428>
 8014912:	f7fa fe13 	bl	800f53c <HAL_GetTick>
 8014916:	4602      	mov	r2, r0
 8014918:	693b      	ldr	r3, [r7, #16]
 801491a:	1ad3      	subs	r3, r2, r3
 801491c:	2b02      	cmp	r3, #2
 801491e:	d901      	bls.n	8014924 <HAL_RCC_OscConfig+0x428>
 8014920:	2303      	movs	r3, #3
 8014922:	e05c      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 8014924:	4b11      	ldr	r3, [pc, #68]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014926:	681b      	ldr	r3, [r3, #0]
 8014928:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801492c:	2b00      	cmp	r3, #0
 801492e:	d0f0      	beq.n	8014912 <HAL_RCC_OscConfig+0x416>
 8014930:	e054      	b.n	80149dc <HAL_RCC_OscConfig+0x4e0>
 8014932:	4b10      	ldr	r3, [pc, #64]	; (8014974 <HAL_RCC_OscConfig+0x478>)
 8014934:	2200      	movs	r2, #0
 8014936:	601a      	str	r2, [r3, #0]
 8014938:	f7fa fe00 	bl	800f53c <HAL_GetTick>
 801493c:	6138      	str	r0, [r7, #16]
 801493e:	e008      	b.n	8014952 <HAL_RCC_OscConfig+0x456>
 8014940:	f7fa fdfc 	bl	800f53c <HAL_GetTick>
 8014944:	4602      	mov	r2, r0
 8014946:	693b      	ldr	r3, [r7, #16]
 8014948:	1ad3      	subs	r3, r2, r3
 801494a:	2b02      	cmp	r3, #2
 801494c:	d901      	bls.n	8014952 <HAL_RCC_OscConfig+0x456>
 801494e:	2303      	movs	r3, #3
 8014950:	e045      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 8014952:	4b06      	ldr	r3, [pc, #24]	; (801496c <HAL_RCC_OscConfig+0x470>)
 8014954:	681b      	ldr	r3, [r3, #0]
 8014956:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801495a:	2b00      	cmp	r3, #0
 801495c:	d1f0      	bne.n	8014940 <HAL_RCC_OscConfig+0x444>
 801495e:	e03d      	b.n	80149dc <HAL_RCC_OscConfig+0x4e0>
 8014960:	687b      	ldr	r3, [r7, #4]
 8014962:	699b      	ldr	r3, [r3, #24]
 8014964:	2b01      	cmp	r3, #1
 8014966:	d107      	bne.n	8014978 <HAL_RCC_OscConfig+0x47c>
 8014968:	2301      	movs	r3, #1
 801496a:	e038      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 801496c:	40023800 	.word	0x40023800
 8014970:	40007000 	.word	0x40007000
 8014974:	42470060 	.word	0x42470060
 8014978:	4b1b      	ldr	r3, [pc, #108]	; (80149e8 <HAL_RCC_OscConfig+0x4ec>)
 801497a:	685b      	ldr	r3, [r3, #4]
 801497c:	60fb      	str	r3, [r7, #12]
 801497e:	687b      	ldr	r3, [r7, #4]
 8014980:	699b      	ldr	r3, [r3, #24]
 8014982:	2b01      	cmp	r3, #1
 8014984:	d028      	beq.n	80149d8 <HAL_RCC_OscConfig+0x4dc>
 8014986:	68fb      	ldr	r3, [r7, #12]
 8014988:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 801498c:	687b      	ldr	r3, [r7, #4]
 801498e:	69db      	ldr	r3, [r3, #28]
 8014990:	429a      	cmp	r2, r3
 8014992:	d121      	bne.n	80149d8 <HAL_RCC_OscConfig+0x4dc>
 8014994:	68fb      	ldr	r3, [r7, #12]
 8014996:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 801499a:	687b      	ldr	r3, [r7, #4]
 801499c:	6a1b      	ldr	r3, [r3, #32]
 801499e:	429a      	cmp	r2, r3
 80149a0:	d11a      	bne.n	80149d8 <HAL_RCC_OscConfig+0x4dc>
 80149a2:	68fa      	ldr	r2, [r7, #12]
 80149a4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80149a8:	4013      	ands	r3, r2
 80149aa:	687a      	ldr	r2, [r7, #4]
 80149ac:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80149ae:	0192      	lsls	r2, r2, #6
 80149b0:	4293      	cmp	r3, r2
 80149b2:	d111      	bne.n	80149d8 <HAL_RCC_OscConfig+0x4dc>
 80149b4:	68fb      	ldr	r3, [r7, #12]
 80149b6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80149ba:	687b      	ldr	r3, [r7, #4]
 80149bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80149be:	085b      	lsrs	r3, r3, #1
 80149c0:	3b01      	subs	r3, #1
 80149c2:	041b      	lsls	r3, r3, #16
 80149c4:	429a      	cmp	r2, r3
 80149c6:	d107      	bne.n	80149d8 <HAL_RCC_OscConfig+0x4dc>
 80149c8:	68fb      	ldr	r3, [r7, #12]
 80149ca:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80149ce:	687b      	ldr	r3, [r7, #4]
 80149d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80149d2:	061b      	lsls	r3, r3, #24
 80149d4:	429a      	cmp	r2, r3
 80149d6:	d001      	beq.n	80149dc <HAL_RCC_OscConfig+0x4e0>
 80149d8:	2301      	movs	r3, #1
 80149da:	e000      	b.n	80149de <HAL_RCC_OscConfig+0x4e2>
 80149dc:	2300      	movs	r3, #0
 80149de:	4618      	mov	r0, r3
 80149e0:	3718      	adds	r7, #24
 80149e2:	46bd      	mov	sp, r7
 80149e4:	bd80      	pop	{r7, pc}
 80149e6:	bf00      	nop
 80149e8:	40023800 	.word	0x40023800

080149ec <HAL_RCC_ClockConfig>:
 80149ec:	b580      	push	{r7, lr}
 80149ee:	b084      	sub	sp, #16
 80149f0:	af00      	add	r7, sp, #0
 80149f2:	6078      	str	r0, [r7, #4]
 80149f4:	6039      	str	r1, [r7, #0]
 80149f6:	687b      	ldr	r3, [r7, #4]
 80149f8:	2b00      	cmp	r3, #0
 80149fa:	d101      	bne.n	8014a00 <HAL_RCC_ClockConfig+0x14>
 80149fc:	2301      	movs	r3, #1
 80149fe:	e0cc      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014a00:	4b68      	ldr	r3, [pc, #416]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014a02:	681b      	ldr	r3, [r3, #0]
 8014a04:	f003 0307 	and.w	r3, r3, #7
 8014a08:	683a      	ldr	r2, [r7, #0]
 8014a0a:	429a      	cmp	r2, r3
 8014a0c:	d90c      	bls.n	8014a28 <HAL_RCC_ClockConfig+0x3c>
 8014a0e:	4b65      	ldr	r3, [pc, #404]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014a10:	683a      	ldr	r2, [r7, #0]
 8014a12:	b2d2      	uxtb	r2, r2
 8014a14:	701a      	strb	r2, [r3, #0]
 8014a16:	4b63      	ldr	r3, [pc, #396]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014a18:	681b      	ldr	r3, [r3, #0]
 8014a1a:	f003 0307 	and.w	r3, r3, #7
 8014a1e:	683a      	ldr	r2, [r7, #0]
 8014a20:	429a      	cmp	r2, r3
 8014a22:	d001      	beq.n	8014a28 <HAL_RCC_ClockConfig+0x3c>
 8014a24:	2301      	movs	r3, #1
 8014a26:	e0b8      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014a28:	687b      	ldr	r3, [r7, #4]
 8014a2a:	681b      	ldr	r3, [r3, #0]
 8014a2c:	f003 0302 	and.w	r3, r3, #2
 8014a30:	2b00      	cmp	r3, #0
 8014a32:	d020      	beq.n	8014a76 <HAL_RCC_ClockConfig+0x8a>
 8014a34:	687b      	ldr	r3, [r7, #4]
 8014a36:	681b      	ldr	r3, [r3, #0]
 8014a38:	f003 0304 	and.w	r3, r3, #4
 8014a3c:	2b00      	cmp	r3, #0
 8014a3e:	d005      	beq.n	8014a4c <HAL_RCC_ClockConfig+0x60>
 8014a40:	4b59      	ldr	r3, [pc, #356]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a42:	689b      	ldr	r3, [r3, #8]
 8014a44:	4a58      	ldr	r2, [pc, #352]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a46:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8014a4a:	6093      	str	r3, [r2, #8]
 8014a4c:	687b      	ldr	r3, [r7, #4]
 8014a4e:	681b      	ldr	r3, [r3, #0]
 8014a50:	f003 0308 	and.w	r3, r3, #8
 8014a54:	2b00      	cmp	r3, #0
 8014a56:	d005      	beq.n	8014a64 <HAL_RCC_ClockConfig+0x78>
 8014a58:	4b53      	ldr	r3, [pc, #332]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a5a:	689b      	ldr	r3, [r3, #8]
 8014a5c:	4a52      	ldr	r2, [pc, #328]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a5e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8014a62:	6093      	str	r3, [r2, #8]
 8014a64:	4b50      	ldr	r3, [pc, #320]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a66:	689b      	ldr	r3, [r3, #8]
 8014a68:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8014a6c:	687b      	ldr	r3, [r7, #4]
 8014a6e:	689b      	ldr	r3, [r3, #8]
 8014a70:	494d      	ldr	r1, [pc, #308]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a72:	4313      	orrs	r3, r2
 8014a74:	608b      	str	r3, [r1, #8]
 8014a76:	687b      	ldr	r3, [r7, #4]
 8014a78:	681b      	ldr	r3, [r3, #0]
 8014a7a:	f003 0301 	and.w	r3, r3, #1
 8014a7e:	2b00      	cmp	r3, #0
 8014a80:	d044      	beq.n	8014b0c <HAL_RCC_ClockConfig+0x120>
 8014a82:	687b      	ldr	r3, [r7, #4]
 8014a84:	685b      	ldr	r3, [r3, #4]
 8014a86:	2b01      	cmp	r3, #1
 8014a88:	d107      	bne.n	8014a9a <HAL_RCC_ClockConfig+0xae>
 8014a8a:	4b47      	ldr	r3, [pc, #284]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014a8c:	681b      	ldr	r3, [r3, #0]
 8014a8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8014a92:	2b00      	cmp	r3, #0
 8014a94:	d119      	bne.n	8014aca <HAL_RCC_ClockConfig+0xde>
 8014a96:	2301      	movs	r3, #1
 8014a98:	e07f      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014a9a:	687b      	ldr	r3, [r7, #4]
 8014a9c:	685b      	ldr	r3, [r3, #4]
 8014a9e:	2b02      	cmp	r3, #2
 8014aa0:	d003      	beq.n	8014aaa <HAL_RCC_ClockConfig+0xbe>
 8014aa2:	687b      	ldr	r3, [r7, #4]
 8014aa4:	685b      	ldr	r3, [r3, #4]
 8014aa6:	2b03      	cmp	r3, #3
 8014aa8:	d107      	bne.n	8014aba <HAL_RCC_ClockConfig+0xce>
 8014aaa:	4b3f      	ldr	r3, [pc, #252]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014aac:	681b      	ldr	r3, [r3, #0]
 8014aae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8014ab2:	2b00      	cmp	r3, #0
 8014ab4:	d109      	bne.n	8014aca <HAL_RCC_ClockConfig+0xde>
 8014ab6:	2301      	movs	r3, #1
 8014ab8:	e06f      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014aba:	4b3b      	ldr	r3, [pc, #236]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014abc:	681b      	ldr	r3, [r3, #0]
 8014abe:	f003 0302 	and.w	r3, r3, #2
 8014ac2:	2b00      	cmp	r3, #0
 8014ac4:	d101      	bne.n	8014aca <HAL_RCC_ClockConfig+0xde>
 8014ac6:	2301      	movs	r3, #1
 8014ac8:	e067      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014aca:	4b37      	ldr	r3, [pc, #220]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014acc:	689b      	ldr	r3, [r3, #8]
 8014ace:	f023 0203 	bic.w	r2, r3, #3
 8014ad2:	687b      	ldr	r3, [r7, #4]
 8014ad4:	685b      	ldr	r3, [r3, #4]
 8014ad6:	4934      	ldr	r1, [pc, #208]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014ad8:	4313      	orrs	r3, r2
 8014ada:	608b      	str	r3, [r1, #8]
 8014adc:	f7fa fd2e 	bl	800f53c <HAL_GetTick>
 8014ae0:	60f8      	str	r0, [r7, #12]
 8014ae2:	e00a      	b.n	8014afa <HAL_RCC_ClockConfig+0x10e>
 8014ae4:	f7fa fd2a 	bl	800f53c <HAL_GetTick>
 8014ae8:	4602      	mov	r2, r0
 8014aea:	68fb      	ldr	r3, [r7, #12]
 8014aec:	1ad3      	subs	r3, r2, r3
 8014aee:	f241 3288 	movw	r2, #5000	; 0x1388
 8014af2:	4293      	cmp	r3, r2
 8014af4:	d901      	bls.n	8014afa <HAL_RCC_ClockConfig+0x10e>
 8014af6:	2303      	movs	r3, #3
 8014af8:	e04f      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014afa:	4b2b      	ldr	r3, [pc, #172]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014afc:	689b      	ldr	r3, [r3, #8]
 8014afe:	f003 020c 	and.w	r2, r3, #12
 8014b02:	687b      	ldr	r3, [r7, #4]
 8014b04:	685b      	ldr	r3, [r3, #4]
 8014b06:	009b      	lsls	r3, r3, #2
 8014b08:	429a      	cmp	r2, r3
 8014b0a:	d1eb      	bne.n	8014ae4 <HAL_RCC_ClockConfig+0xf8>
 8014b0c:	4b25      	ldr	r3, [pc, #148]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014b0e:	681b      	ldr	r3, [r3, #0]
 8014b10:	f003 0307 	and.w	r3, r3, #7
 8014b14:	683a      	ldr	r2, [r7, #0]
 8014b16:	429a      	cmp	r2, r3
 8014b18:	d20c      	bcs.n	8014b34 <HAL_RCC_ClockConfig+0x148>
 8014b1a:	4b22      	ldr	r3, [pc, #136]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014b1c:	683a      	ldr	r2, [r7, #0]
 8014b1e:	b2d2      	uxtb	r2, r2
 8014b20:	701a      	strb	r2, [r3, #0]
 8014b22:	4b20      	ldr	r3, [pc, #128]	; (8014ba4 <HAL_RCC_ClockConfig+0x1b8>)
 8014b24:	681b      	ldr	r3, [r3, #0]
 8014b26:	f003 0307 	and.w	r3, r3, #7
 8014b2a:	683a      	ldr	r2, [r7, #0]
 8014b2c:	429a      	cmp	r2, r3
 8014b2e:	d001      	beq.n	8014b34 <HAL_RCC_ClockConfig+0x148>
 8014b30:	2301      	movs	r3, #1
 8014b32:	e032      	b.n	8014b9a <HAL_RCC_ClockConfig+0x1ae>
 8014b34:	687b      	ldr	r3, [r7, #4]
 8014b36:	681b      	ldr	r3, [r3, #0]
 8014b38:	f003 0304 	and.w	r3, r3, #4
 8014b3c:	2b00      	cmp	r3, #0
 8014b3e:	d008      	beq.n	8014b52 <HAL_RCC_ClockConfig+0x166>
 8014b40:	4b19      	ldr	r3, [pc, #100]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014b42:	689b      	ldr	r3, [r3, #8]
 8014b44:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8014b48:	687b      	ldr	r3, [r7, #4]
 8014b4a:	68db      	ldr	r3, [r3, #12]
 8014b4c:	4916      	ldr	r1, [pc, #88]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014b4e:	4313      	orrs	r3, r2
 8014b50:	608b      	str	r3, [r1, #8]
 8014b52:	687b      	ldr	r3, [r7, #4]
 8014b54:	681b      	ldr	r3, [r3, #0]
 8014b56:	f003 0308 	and.w	r3, r3, #8
 8014b5a:	2b00      	cmp	r3, #0
 8014b5c:	d009      	beq.n	8014b72 <HAL_RCC_ClockConfig+0x186>
 8014b5e:	4b12      	ldr	r3, [pc, #72]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014b60:	689b      	ldr	r3, [r3, #8]
 8014b62:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8014b66:	687b      	ldr	r3, [r7, #4]
 8014b68:	691b      	ldr	r3, [r3, #16]
 8014b6a:	00db      	lsls	r3, r3, #3
 8014b6c:	490e      	ldr	r1, [pc, #56]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014b6e:	4313      	orrs	r3, r2
 8014b70:	608b      	str	r3, [r1, #8]
 8014b72:	f000 f821 	bl	8014bb8 <HAL_RCC_GetSysClockFreq>
 8014b76:	4602      	mov	r2, r0
 8014b78:	4b0b      	ldr	r3, [pc, #44]	; (8014ba8 <HAL_RCC_ClockConfig+0x1bc>)
 8014b7a:	689b      	ldr	r3, [r3, #8]
 8014b7c:	091b      	lsrs	r3, r3, #4
 8014b7e:	f003 030f 	and.w	r3, r3, #15
 8014b82:	490a      	ldr	r1, [pc, #40]	; (8014bac <HAL_RCC_ClockConfig+0x1c0>)
 8014b84:	5ccb      	ldrb	r3, [r1, r3]
 8014b86:	fa22 f303 	lsr.w	r3, r2, r3
 8014b8a:	4a09      	ldr	r2, [pc, #36]	; (8014bb0 <HAL_RCC_ClockConfig+0x1c4>)
 8014b8c:	6013      	str	r3, [r2, #0]
 8014b8e:	4b09      	ldr	r3, [pc, #36]	; (8014bb4 <HAL_RCC_ClockConfig+0x1c8>)
 8014b90:	681b      	ldr	r3, [r3, #0]
 8014b92:	4618      	mov	r0, r3
 8014b94:	f7ef f97e 	bl	8003e94 <HAL_InitTick>
 8014b98:	2300      	movs	r3, #0
 8014b9a:	4618      	mov	r0, r3
 8014b9c:	3710      	adds	r7, #16
 8014b9e:	46bd      	mov	sp, r7
 8014ba0:	bd80      	pop	{r7, pc}
 8014ba2:	bf00      	nop
 8014ba4:	40023c00 	.word	0x40023c00
 8014ba8:	40023800 	.word	0x40023800
 8014bac:	08026bb8 	.word	0x08026bb8
 8014bb0:	20000004 	.word	0x20000004
 8014bb4:	20000054 	.word	0x20000054

08014bb8 <HAL_RCC_GetSysClockFreq>:
 8014bb8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8014bbc:	b090      	sub	sp, #64	; 0x40
 8014bbe:	af00      	add	r7, sp, #0
 8014bc0:	2300      	movs	r3, #0
 8014bc2:	637b      	str	r3, [r7, #52]	; 0x34
 8014bc4:	2300      	movs	r3, #0
 8014bc6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014bc8:	2300      	movs	r3, #0
 8014bca:	633b      	str	r3, [r7, #48]	; 0x30
 8014bcc:	2300      	movs	r3, #0
 8014bce:	63bb      	str	r3, [r7, #56]	; 0x38
 8014bd0:	4b59      	ldr	r3, [pc, #356]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014bd2:	689b      	ldr	r3, [r3, #8]
 8014bd4:	f003 030c 	and.w	r3, r3, #12
 8014bd8:	2b08      	cmp	r3, #8
 8014bda:	d00d      	beq.n	8014bf8 <HAL_RCC_GetSysClockFreq+0x40>
 8014bdc:	2b08      	cmp	r3, #8
 8014bde:	f200 80a1 	bhi.w	8014d24 <HAL_RCC_GetSysClockFreq+0x16c>
 8014be2:	2b00      	cmp	r3, #0
 8014be4:	d002      	beq.n	8014bec <HAL_RCC_GetSysClockFreq+0x34>
 8014be6:	2b04      	cmp	r3, #4
 8014be8:	d003      	beq.n	8014bf2 <HAL_RCC_GetSysClockFreq+0x3a>
 8014bea:	e09b      	b.n	8014d24 <HAL_RCC_GetSysClockFreq+0x16c>
 8014bec:	4b53      	ldr	r3, [pc, #332]	; (8014d3c <HAL_RCC_GetSysClockFreq+0x184>)
 8014bee:	63bb      	str	r3, [r7, #56]	; 0x38
 8014bf0:	e09b      	b.n	8014d2a <HAL_RCC_GetSysClockFreq+0x172>
 8014bf2:	4b53      	ldr	r3, [pc, #332]	; (8014d40 <HAL_RCC_GetSysClockFreq+0x188>)
 8014bf4:	63bb      	str	r3, [r7, #56]	; 0x38
 8014bf6:	e098      	b.n	8014d2a <HAL_RCC_GetSysClockFreq+0x172>
 8014bf8:	4b4f      	ldr	r3, [pc, #316]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014bfa:	685b      	ldr	r3, [r3, #4]
 8014bfc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8014c00:	637b      	str	r3, [r7, #52]	; 0x34
 8014c02:	4b4d      	ldr	r3, [pc, #308]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014c04:	685b      	ldr	r3, [r3, #4]
 8014c06:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8014c0a:	2b00      	cmp	r3, #0
 8014c0c:	d028      	beq.n	8014c60 <HAL_RCC_GetSysClockFreq+0xa8>
 8014c0e:	4b4a      	ldr	r3, [pc, #296]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014c10:	685b      	ldr	r3, [r3, #4]
 8014c12:	099b      	lsrs	r3, r3, #6
 8014c14:	2200      	movs	r2, #0
 8014c16:	623b      	str	r3, [r7, #32]
 8014c18:	627a      	str	r2, [r7, #36]	; 0x24
 8014c1a:	6a3b      	ldr	r3, [r7, #32]
 8014c1c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8014c20:	2100      	movs	r1, #0
 8014c22:	4b47      	ldr	r3, [pc, #284]	; (8014d40 <HAL_RCC_GetSysClockFreq+0x188>)
 8014c24:	fb03 f201 	mul.w	r2, r3, r1
 8014c28:	2300      	movs	r3, #0
 8014c2a:	fb00 f303 	mul.w	r3, r0, r3
 8014c2e:	4413      	add	r3, r2
 8014c30:	4a43      	ldr	r2, [pc, #268]	; (8014d40 <HAL_RCC_GetSysClockFreq+0x188>)
 8014c32:	fba0 1202 	umull	r1, r2, r0, r2
 8014c36:	62fa      	str	r2, [r7, #44]	; 0x2c
 8014c38:	460a      	mov	r2, r1
 8014c3a:	62ba      	str	r2, [r7, #40]	; 0x28
 8014c3c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8014c3e:	4413      	add	r3, r2
 8014c40:	62fb      	str	r3, [r7, #44]	; 0x2c
 8014c42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014c44:	2200      	movs	r2, #0
 8014c46:	61bb      	str	r3, [r7, #24]
 8014c48:	61fa      	str	r2, [r7, #28]
 8014c4a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8014c4e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8014c52:	f7ec f819 	bl	8000c88 <__aeabi_uldivmod>
 8014c56:	4602      	mov	r2, r0
 8014c58:	460b      	mov	r3, r1
 8014c5a:	4613      	mov	r3, r2
 8014c5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014c5e:	e053      	b.n	8014d08 <HAL_RCC_GetSysClockFreq+0x150>
 8014c60:	4b35      	ldr	r3, [pc, #212]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014c62:	685b      	ldr	r3, [r3, #4]
 8014c64:	099b      	lsrs	r3, r3, #6
 8014c66:	2200      	movs	r2, #0
 8014c68:	613b      	str	r3, [r7, #16]
 8014c6a:	617a      	str	r2, [r7, #20]
 8014c6c:	693b      	ldr	r3, [r7, #16]
 8014c6e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8014c72:	f04f 0b00 	mov.w	fp, #0
 8014c76:	4652      	mov	r2, sl
 8014c78:	465b      	mov	r3, fp
 8014c7a:	f04f 0000 	mov.w	r0, #0
 8014c7e:	f04f 0100 	mov.w	r1, #0
 8014c82:	0159      	lsls	r1, r3, #5
 8014c84:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8014c88:	0150      	lsls	r0, r2, #5
 8014c8a:	4602      	mov	r2, r0
 8014c8c:	460b      	mov	r3, r1
 8014c8e:	ebb2 080a 	subs.w	r8, r2, sl
 8014c92:	eb63 090b 	sbc.w	r9, r3, fp
 8014c96:	f04f 0200 	mov.w	r2, #0
 8014c9a:	f04f 0300 	mov.w	r3, #0
 8014c9e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8014ca2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8014ca6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8014caa:	ebb2 0408 	subs.w	r4, r2, r8
 8014cae:	eb63 0509 	sbc.w	r5, r3, r9
 8014cb2:	f04f 0200 	mov.w	r2, #0
 8014cb6:	f04f 0300 	mov.w	r3, #0
 8014cba:	00eb      	lsls	r3, r5, #3
 8014cbc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8014cc0:	00e2      	lsls	r2, r4, #3
 8014cc2:	4614      	mov	r4, r2
 8014cc4:	461d      	mov	r5, r3
 8014cc6:	eb14 030a 	adds.w	r3, r4, sl
 8014cca:	603b      	str	r3, [r7, #0]
 8014ccc:	eb45 030b 	adc.w	r3, r5, fp
 8014cd0:	607b      	str	r3, [r7, #4]
 8014cd2:	f04f 0200 	mov.w	r2, #0
 8014cd6:	f04f 0300 	mov.w	r3, #0
 8014cda:	e9d7 4500 	ldrd	r4, r5, [r7]
 8014cde:	4629      	mov	r1, r5
 8014ce0:	028b      	lsls	r3, r1, #10
 8014ce2:	4621      	mov	r1, r4
 8014ce4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8014ce8:	4621      	mov	r1, r4
 8014cea:	028a      	lsls	r2, r1, #10
 8014cec:	4610      	mov	r0, r2
 8014cee:	4619      	mov	r1, r3
 8014cf0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014cf2:	2200      	movs	r2, #0
 8014cf4:	60bb      	str	r3, [r7, #8]
 8014cf6:	60fa      	str	r2, [r7, #12]
 8014cf8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8014cfc:	f7eb ffc4 	bl	8000c88 <__aeabi_uldivmod>
 8014d00:	4602      	mov	r2, r0
 8014d02:	460b      	mov	r3, r1
 8014d04:	4613      	mov	r3, r2
 8014d06:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014d08:	4b0b      	ldr	r3, [pc, #44]	; (8014d38 <HAL_RCC_GetSysClockFreq+0x180>)
 8014d0a:	685b      	ldr	r3, [r3, #4]
 8014d0c:	0c1b      	lsrs	r3, r3, #16
 8014d0e:	f003 0303 	and.w	r3, r3, #3
 8014d12:	3301      	adds	r3, #1
 8014d14:	005b      	lsls	r3, r3, #1
 8014d16:	633b      	str	r3, [r7, #48]	; 0x30
 8014d18:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8014d1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8014d1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8014d20:	63bb      	str	r3, [r7, #56]	; 0x38
 8014d22:	e002      	b.n	8014d2a <HAL_RCC_GetSysClockFreq+0x172>
 8014d24:	4b05      	ldr	r3, [pc, #20]	; (8014d3c <HAL_RCC_GetSysClockFreq+0x184>)
 8014d26:	63bb      	str	r3, [r7, #56]	; 0x38
 8014d28:	bf00      	nop
 8014d2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8014d2c:	4618      	mov	r0, r3
 8014d2e:	3740      	adds	r7, #64	; 0x40
 8014d30:	46bd      	mov	sp, r7
 8014d32:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8014d36:	bf00      	nop
 8014d38:	40023800 	.word	0x40023800
 8014d3c:	00f42400 	.word	0x00f42400
 8014d40:	00b71b00 	.word	0x00b71b00

08014d44 <HAL_RCC_GetHCLKFreq>:
 8014d44:	b480      	push	{r7}
 8014d46:	af00      	add	r7, sp, #0
 8014d48:	4b03      	ldr	r3, [pc, #12]	; (8014d58 <HAL_RCC_GetHCLKFreq+0x14>)
 8014d4a:	681b      	ldr	r3, [r3, #0]
 8014d4c:	4618      	mov	r0, r3
 8014d4e:	46bd      	mov	sp, r7
 8014d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d54:	4770      	bx	lr
 8014d56:	bf00      	nop
 8014d58:	20000004 	.word	0x20000004

08014d5c <HAL_RCC_GetPCLK1Freq>:
 8014d5c:	b580      	push	{r7, lr}
 8014d5e:	af00      	add	r7, sp, #0
 8014d60:	f7ff fff0 	bl	8014d44 <HAL_RCC_GetHCLKFreq>
 8014d64:	4602      	mov	r2, r0
 8014d66:	4b05      	ldr	r3, [pc, #20]	; (8014d7c <HAL_RCC_GetPCLK1Freq+0x20>)
 8014d68:	689b      	ldr	r3, [r3, #8]
 8014d6a:	0a9b      	lsrs	r3, r3, #10
 8014d6c:	f003 0307 	and.w	r3, r3, #7
 8014d70:	4903      	ldr	r1, [pc, #12]	; (8014d80 <HAL_RCC_GetPCLK1Freq+0x24>)
 8014d72:	5ccb      	ldrb	r3, [r1, r3]
 8014d74:	fa22 f303 	lsr.w	r3, r2, r3
 8014d78:	4618      	mov	r0, r3
 8014d7a:	bd80      	pop	{r7, pc}
 8014d7c:	40023800 	.word	0x40023800
 8014d80:	08026bc8 	.word	0x08026bc8

08014d84 <HAL_RCC_GetPCLK2Freq>:
 8014d84:	b580      	push	{r7, lr}
 8014d86:	af00      	add	r7, sp, #0
 8014d88:	f7ff ffdc 	bl	8014d44 <HAL_RCC_GetHCLKFreq>
 8014d8c:	4602      	mov	r2, r0
 8014d8e:	4b05      	ldr	r3, [pc, #20]	; (8014da4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8014d90:	689b      	ldr	r3, [r3, #8]
 8014d92:	0b5b      	lsrs	r3, r3, #13
 8014d94:	f003 0307 	and.w	r3, r3, #7
 8014d98:	4903      	ldr	r1, [pc, #12]	; (8014da8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8014d9a:	5ccb      	ldrb	r3, [r1, r3]
 8014d9c:	fa22 f303 	lsr.w	r3, r2, r3
 8014da0:	4618      	mov	r0, r3
 8014da2:	bd80      	pop	{r7, pc}
 8014da4:	40023800 	.word	0x40023800
 8014da8:	08026bc8 	.word	0x08026bc8

08014dac <HAL_RCC_GetClockConfig>:
 8014dac:	b480      	push	{r7}
 8014dae:	b083      	sub	sp, #12
 8014db0:	af00      	add	r7, sp, #0
 8014db2:	6078      	str	r0, [r7, #4]
 8014db4:	6039      	str	r1, [r7, #0]
 8014db6:	687b      	ldr	r3, [r7, #4]
 8014db8:	220f      	movs	r2, #15
 8014dba:	601a      	str	r2, [r3, #0]
 8014dbc:	4b12      	ldr	r3, [pc, #72]	; (8014e08 <HAL_RCC_GetClockConfig+0x5c>)
 8014dbe:	689b      	ldr	r3, [r3, #8]
 8014dc0:	f003 0203 	and.w	r2, r3, #3
 8014dc4:	687b      	ldr	r3, [r7, #4]
 8014dc6:	605a      	str	r2, [r3, #4]
 8014dc8:	4b0f      	ldr	r3, [pc, #60]	; (8014e08 <HAL_RCC_GetClockConfig+0x5c>)
 8014dca:	689b      	ldr	r3, [r3, #8]
 8014dcc:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8014dd0:	687b      	ldr	r3, [r7, #4]
 8014dd2:	609a      	str	r2, [r3, #8]
 8014dd4:	4b0c      	ldr	r3, [pc, #48]	; (8014e08 <HAL_RCC_GetClockConfig+0x5c>)
 8014dd6:	689b      	ldr	r3, [r3, #8]
 8014dd8:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8014ddc:	687b      	ldr	r3, [r7, #4]
 8014dde:	60da      	str	r2, [r3, #12]
 8014de0:	4b09      	ldr	r3, [pc, #36]	; (8014e08 <HAL_RCC_GetClockConfig+0x5c>)
 8014de2:	689b      	ldr	r3, [r3, #8]
 8014de4:	08db      	lsrs	r3, r3, #3
 8014de6:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8014dea:	687b      	ldr	r3, [r7, #4]
 8014dec:	611a      	str	r2, [r3, #16]
 8014dee:	4b07      	ldr	r3, [pc, #28]	; (8014e0c <HAL_RCC_GetClockConfig+0x60>)
 8014df0:	681b      	ldr	r3, [r3, #0]
 8014df2:	f003 0207 	and.w	r2, r3, #7
 8014df6:	683b      	ldr	r3, [r7, #0]
 8014df8:	601a      	str	r2, [r3, #0]
 8014dfa:	bf00      	nop
 8014dfc:	370c      	adds	r7, #12
 8014dfe:	46bd      	mov	sp, r7
 8014e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e04:	4770      	bx	lr
 8014e06:	bf00      	nop
 8014e08:	40023800 	.word	0x40023800
 8014e0c:	40023c00 	.word	0x40023c00

08014e10 <HAL_RNG_Init>:
 8014e10:	b580      	push	{r7, lr}
 8014e12:	b082      	sub	sp, #8
 8014e14:	af00      	add	r7, sp, #0
 8014e16:	6078      	str	r0, [r7, #4]
 8014e18:	687b      	ldr	r3, [r7, #4]
 8014e1a:	2b00      	cmp	r3, #0
 8014e1c:	d101      	bne.n	8014e22 <HAL_RNG_Init+0x12>
 8014e1e:	2301      	movs	r3, #1
 8014e20:	e01c      	b.n	8014e5c <HAL_RNG_Init+0x4c>
 8014e22:	687b      	ldr	r3, [r7, #4]
 8014e24:	795b      	ldrb	r3, [r3, #5]
 8014e26:	b2db      	uxtb	r3, r3
 8014e28:	2b00      	cmp	r3, #0
 8014e2a:	d105      	bne.n	8014e38 <HAL_RNG_Init+0x28>
 8014e2c:	687b      	ldr	r3, [r7, #4]
 8014e2e:	2200      	movs	r2, #0
 8014e30:	711a      	strb	r2, [r3, #4]
 8014e32:	6878      	ldr	r0, [r7, #4]
 8014e34:	f7ee fede 	bl	8003bf4 <HAL_RNG_MspInit>
 8014e38:	687b      	ldr	r3, [r7, #4]
 8014e3a:	2202      	movs	r2, #2
 8014e3c:	715a      	strb	r2, [r3, #5]
 8014e3e:	687b      	ldr	r3, [r7, #4]
 8014e40:	681b      	ldr	r3, [r3, #0]
 8014e42:	681a      	ldr	r2, [r3, #0]
 8014e44:	687b      	ldr	r3, [r7, #4]
 8014e46:	681b      	ldr	r3, [r3, #0]
 8014e48:	f042 0204 	orr.w	r2, r2, #4
 8014e4c:	601a      	str	r2, [r3, #0]
 8014e4e:	687b      	ldr	r3, [r7, #4]
 8014e50:	2201      	movs	r2, #1
 8014e52:	715a      	strb	r2, [r3, #5]
 8014e54:	687b      	ldr	r3, [r7, #4]
 8014e56:	2200      	movs	r2, #0
 8014e58:	609a      	str	r2, [r3, #8]
 8014e5a:	2300      	movs	r3, #0
 8014e5c:	4618      	mov	r0, r3
 8014e5e:	3708      	adds	r7, #8
 8014e60:	46bd      	mov	sp, r7
 8014e62:	bd80      	pop	{r7, pc}

08014e64 <HAL_SPI_Init>:
 8014e64:	b580      	push	{r7, lr}
 8014e66:	b082      	sub	sp, #8
 8014e68:	af00      	add	r7, sp, #0
 8014e6a:	6078      	str	r0, [r7, #4]
 8014e6c:	687b      	ldr	r3, [r7, #4]
 8014e6e:	2b00      	cmp	r3, #0
 8014e70:	d101      	bne.n	8014e76 <HAL_SPI_Init+0x12>
 8014e72:	2301      	movs	r3, #1
 8014e74:	e07b      	b.n	8014f6e <HAL_SPI_Init+0x10a>
 8014e76:	687b      	ldr	r3, [r7, #4]
 8014e78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014e7a:	2b00      	cmp	r3, #0
 8014e7c:	d108      	bne.n	8014e90 <HAL_SPI_Init+0x2c>
 8014e7e:	687b      	ldr	r3, [r7, #4]
 8014e80:	685b      	ldr	r3, [r3, #4]
 8014e82:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8014e86:	d009      	beq.n	8014e9c <HAL_SPI_Init+0x38>
 8014e88:	687b      	ldr	r3, [r7, #4]
 8014e8a:	2200      	movs	r2, #0
 8014e8c:	61da      	str	r2, [r3, #28]
 8014e8e:	e005      	b.n	8014e9c <HAL_SPI_Init+0x38>
 8014e90:	687b      	ldr	r3, [r7, #4]
 8014e92:	2200      	movs	r2, #0
 8014e94:	611a      	str	r2, [r3, #16]
 8014e96:	687b      	ldr	r3, [r7, #4]
 8014e98:	2200      	movs	r2, #0
 8014e9a:	615a      	str	r2, [r3, #20]
 8014e9c:	687b      	ldr	r3, [r7, #4]
 8014e9e:	2200      	movs	r2, #0
 8014ea0:	629a      	str	r2, [r3, #40]	; 0x28
 8014ea2:	687b      	ldr	r3, [r7, #4]
 8014ea4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8014ea8:	b2db      	uxtb	r3, r3
 8014eaa:	2b00      	cmp	r3, #0
 8014eac:	d106      	bne.n	8014ebc <HAL_SPI_Init+0x58>
 8014eae:	687b      	ldr	r3, [r7, #4]
 8014eb0:	2200      	movs	r2, #0
 8014eb2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8014eb6:	6878      	ldr	r0, [r7, #4]
 8014eb8:	f7ee fef4 	bl	8003ca4 <HAL_SPI_MspInit>
 8014ebc:	687b      	ldr	r3, [r7, #4]
 8014ebe:	2202      	movs	r2, #2
 8014ec0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8014ec4:	687b      	ldr	r3, [r7, #4]
 8014ec6:	681b      	ldr	r3, [r3, #0]
 8014ec8:	681a      	ldr	r2, [r3, #0]
 8014eca:	687b      	ldr	r3, [r7, #4]
 8014ecc:	681b      	ldr	r3, [r3, #0]
 8014ece:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8014ed2:	601a      	str	r2, [r3, #0]
 8014ed4:	687b      	ldr	r3, [r7, #4]
 8014ed6:	685b      	ldr	r3, [r3, #4]
 8014ed8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8014edc:	687b      	ldr	r3, [r7, #4]
 8014ede:	689b      	ldr	r3, [r3, #8]
 8014ee0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8014ee4:	431a      	orrs	r2, r3
 8014ee6:	687b      	ldr	r3, [r7, #4]
 8014ee8:	68db      	ldr	r3, [r3, #12]
 8014eea:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8014eee:	431a      	orrs	r2, r3
 8014ef0:	687b      	ldr	r3, [r7, #4]
 8014ef2:	691b      	ldr	r3, [r3, #16]
 8014ef4:	f003 0302 	and.w	r3, r3, #2
 8014ef8:	431a      	orrs	r2, r3
 8014efa:	687b      	ldr	r3, [r7, #4]
 8014efc:	695b      	ldr	r3, [r3, #20]
 8014efe:	f003 0301 	and.w	r3, r3, #1
 8014f02:	431a      	orrs	r2, r3
 8014f04:	687b      	ldr	r3, [r7, #4]
 8014f06:	699b      	ldr	r3, [r3, #24]
 8014f08:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8014f0c:	431a      	orrs	r2, r3
 8014f0e:	687b      	ldr	r3, [r7, #4]
 8014f10:	69db      	ldr	r3, [r3, #28]
 8014f12:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8014f16:	431a      	orrs	r2, r3
 8014f18:	687b      	ldr	r3, [r7, #4]
 8014f1a:	6a1b      	ldr	r3, [r3, #32]
 8014f1c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8014f20:	ea42 0103 	orr.w	r1, r2, r3
 8014f24:	687b      	ldr	r3, [r7, #4]
 8014f26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014f28:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8014f2c:	687b      	ldr	r3, [r7, #4]
 8014f2e:	681b      	ldr	r3, [r3, #0]
 8014f30:	430a      	orrs	r2, r1
 8014f32:	601a      	str	r2, [r3, #0]
 8014f34:	687b      	ldr	r3, [r7, #4]
 8014f36:	699b      	ldr	r3, [r3, #24]
 8014f38:	0c1b      	lsrs	r3, r3, #16
 8014f3a:	f003 0104 	and.w	r1, r3, #4
 8014f3e:	687b      	ldr	r3, [r7, #4]
 8014f40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014f42:	f003 0210 	and.w	r2, r3, #16
 8014f46:	687b      	ldr	r3, [r7, #4]
 8014f48:	681b      	ldr	r3, [r3, #0]
 8014f4a:	430a      	orrs	r2, r1
 8014f4c:	605a      	str	r2, [r3, #4]
 8014f4e:	687b      	ldr	r3, [r7, #4]
 8014f50:	681b      	ldr	r3, [r3, #0]
 8014f52:	69da      	ldr	r2, [r3, #28]
 8014f54:	687b      	ldr	r3, [r7, #4]
 8014f56:	681b      	ldr	r3, [r3, #0]
 8014f58:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8014f5c:	61da      	str	r2, [r3, #28]
 8014f5e:	687b      	ldr	r3, [r7, #4]
 8014f60:	2200      	movs	r2, #0
 8014f62:	655a      	str	r2, [r3, #84]	; 0x54
 8014f64:	687b      	ldr	r3, [r7, #4]
 8014f66:	2201      	movs	r2, #1
 8014f68:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8014f6c:	2300      	movs	r3, #0
 8014f6e:	4618      	mov	r0, r3
 8014f70:	3708      	adds	r7, #8
 8014f72:	46bd      	mov	sp, r7
 8014f74:	bd80      	pop	{r7, pc}

08014f76 <HAL_SPI_Receive>:
 8014f76:	b580      	push	{r7, lr}
 8014f78:	b088      	sub	sp, #32
 8014f7a:	af02      	add	r7, sp, #8
 8014f7c:	60f8      	str	r0, [r7, #12]
 8014f7e:	60b9      	str	r1, [r7, #8]
 8014f80:	603b      	str	r3, [r7, #0]
 8014f82:	4613      	mov	r3, r2
 8014f84:	80fb      	strh	r3, [r7, #6]
 8014f86:	2300      	movs	r3, #0
 8014f88:	75fb      	strb	r3, [r7, #23]
 8014f8a:	68fb      	ldr	r3, [r7, #12]
 8014f8c:	685b      	ldr	r3, [r3, #4]
 8014f8e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8014f92:	d112      	bne.n	8014fba <HAL_SPI_Receive+0x44>
 8014f94:	68fb      	ldr	r3, [r7, #12]
 8014f96:	689b      	ldr	r3, [r3, #8]
 8014f98:	2b00      	cmp	r3, #0
 8014f9a:	d10e      	bne.n	8014fba <HAL_SPI_Receive+0x44>
 8014f9c:	68fb      	ldr	r3, [r7, #12]
 8014f9e:	2204      	movs	r2, #4
 8014fa0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8014fa4:	88fa      	ldrh	r2, [r7, #6]
 8014fa6:	683b      	ldr	r3, [r7, #0]
 8014fa8:	9300      	str	r3, [sp, #0]
 8014faa:	4613      	mov	r3, r2
 8014fac:	68ba      	ldr	r2, [r7, #8]
 8014fae:	68b9      	ldr	r1, [r7, #8]
 8014fb0:	68f8      	ldr	r0, [r7, #12]
 8014fb2:	f000 f8f1 	bl	8015198 <HAL_SPI_TransmitReceive>
 8014fb6:	4603      	mov	r3, r0
 8014fb8:	e0ea      	b.n	8015190 <HAL_SPI_Receive+0x21a>
 8014fba:	68fb      	ldr	r3, [r7, #12]
 8014fbc:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8014fc0:	2b01      	cmp	r3, #1
 8014fc2:	d101      	bne.n	8014fc8 <HAL_SPI_Receive+0x52>
 8014fc4:	2302      	movs	r3, #2
 8014fc6:	e0e3      	b.n	8015190 <HAL_SPI_Receive+0x21a>
 8014fc8:	68fb      	ldr	r3, [r7, #12]
 8014fca:	2201      	movs	r2, #1
 8014fcc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8014fd0:	f7fa fab4 	bl	800f53c <HAL_GetTick>
 8014fd4:	6138      	str	r0, [r7, #16]
 8014fd6:	68fb      	ldr	r3, [r7, #12]
 8014fd8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8014fdc:	b2db      	uxtb	r3, r3
 8014fde:	2b01      	cmp	r3, #1
 8014fe0:	d002      	beq.n	8014fe8 <HAL_SPI_Receive+0x72>
 8014fe2:	2302      	movs	r3, #2
 8014fe4:	75fb      	strb	r3, [r7, #23]
 8014fe6:	e0ca      	b.n	801517e <HAL_SPI_Receive+0x208>
 8014fe8:	68bb      	ldr	r3, [r7, #8]
 8014fea:	2b00      	cmp	r3, #0
 8014fec:	d002      	beq.n	8014ff4 <HAL_SPI_Receive+0x7e>
 8014fee:	88fb      	ldrh	r3, [r7, #6]
 8014ff0:	2b00      	cmp	r3, #0
 8014ff2:	d102      	bne.n	8014ffa <HAL_SPI_Receive+0x84>
 8014ff4:	2301      	movs	r3, #1
 8014ff6:	75fb      	strb	r3, [r7, #23]
 8014ff8:	e0c1      	b.n	801517e <HAL_SPI_Receive+0x208>
 8014ffa:	68fb      	ldr	r3, [r7, #12]
 8014ffc:	2204      	movs	r2, #4
 8014ffe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8015002:	68fb      	ldr	r3, [r7, #12]
 8015004:	2200      	movs	r2, #0
 8015006:	655a      	str	r2, [r3, #84]	; 0x54
 8015008:	68fb      	ldr	r3, [r7, #12]
 801500a:	68ba      	ldr	r2, [r7, #8]
 801500c:	639a      	str	r2, [r3, #56]	; 0x38
 801500e:	68fb      	ldr	r3, [r7, #12]
 8015010:	88fa      	ldrh	r2, [r7, #6]
 8015012:	879a      	strh	r2, [r3, #60]	; 0x3c
 8015014:	68fb      	ldr	r3, [r7, #12]
 8015016:	88fa      	ldrh	r2, [r7, #6]
 8015018:	87da      	strh	r2, [r3, #62]	; 0x3e
 801501a:	68fb      	ldr	r3, [r7, #12]
 801501c:	2200      	movs	r2, #0
 801501e:	631a      	str	r2, [r3, #48]	; 0x30
 8015020:	68fb      	ldr	r3, [r7, #12]
 8015022:	2200      	movs	r2, #0
 8015024:	869a      	strh	r2, [r3, #52]	; 0x34
 8015026:	68fb      	ldr	r3, [r7, #12]
 8015028:	2200      	movs	r2, #0
 801502a:	86da      	strh	r2, [r3, #54]	; 0x36
 801502c:	68fb      	ldr	r3, [r7, #12]
 801502e:	2200      	movs	r2, #0
 8015030:	641a      	str	r2, [r3, #64]	; 0x40
 8015032:	68fb      	ldr	r3, [r7, #12]
 8015034:	2200      	movs	r2, #0
 8015036:	645a      	str	r2, [r3, #68]	; 0x44
 8015038:	68fb      	ldr	r3, [r7, #12]
 801503a:	689b      	ldr	r3, [r3, #8]
 801503c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8015040:	d10f      	bne.n	8015062 <HAL_SPI_Receive+0xec>
 8015042:	68fb      	ldr	r3, [r7, #12]
 8015044:	681b      	ldr	r3, [r3, #0]
 8015046:	681a      	ldr	r2, [r3, #0]
 8015048:	68fb      	ldr	r3, [r7, #12]
 801504a:	681b      	ldr	r3, [r3, #0]
 801504c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8015050:	601a      	str	r2, [r3, #0]
 8015052:	68fb      	ldr	r3, [r7, #12]
 8015054:	681b      	ldr	r3, [r3, #0]
 8015056:	681a      	ldr	r2, [r3, #0]
 8015058:	68fb      	ldr	r3, [r7, #12]
 801505a:	681b      	ldr	r3, [r3, #0]
 801505c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8015060:	601a      	str	r2, [r3, #0]
 8015062:	68fb      	ldr	r3, [r7, #12]
 8015064:	681b      	ldr	r3, [r3, #0]
 8015066:	681b      	ldr	r3, [r3, #0]
 8015068:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801506c:	2b40      	cmp	r3, #64	; 0x40
 801506e:	d007      	beq.n	8015080 <HAL_SPI_Receive+0x10a>
 8015070:	68fb      	ldr	r3, [r7, #12]
 8015072:	681b      	ldr	r3, [r3, #0]
 8015074:	681a      	ldr	r2, [r3, #0]
 8015076:	68fb      	ldr	r3, [r7, #12]
 8015078:	681b      	ldr	r3, [r3, #0]
 801507a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801507e:	601a      	str	r2, [r3, #0]
 8015080:	68fb      	ldr	r3, [r7, #12]
 8015082:	68db      	ldr	r3, [r3, #12]
 8015084:	2b00      	cmp	r3, #0
 8015086:	d162      	bne.n	801514e <HAL_SPI_Receive+0x1d8>
 8015088:	e02e      	b.n	80150e8 <HAL_SPI_Receive+0x172>
 801508a:	68fb      	ldr	r3, [r7, #12]
 801508c:	681b      	ldr	r3, [r3, #0]
 801508e:	689b      	ldr	r3, [r3, #8]
 8015090:	f003 0301 	and.w	r3, r3, #1
 8015094:	2b01      	cmp	r3, #1
 8015096:	d115      	bne.n	80150c4 <HAL_SPI_Receive+0x14e>
 8015098:	68fb      	ldr	r3, [r7, #12]
 801509a:	681b      	ldr	r3, [r3, #0]
 801509c:	f103 020c 	add.w	r2, r3, #12
 80150a0:	68fb      	ldr	r3, [r7, #12]
 80150a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80150a4:	7812      	ldrb	r2, [r2, #0]
 80150a6:	b2d2      	uxtb	r2, r2
 80150a8:	701a      	strb	r2, [r3, #0]
 80150aa:	68fb      	ldr	r3, [r7, #12]
 80150ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80150ae:	1c5a      	adds	r2, r3, #1
 80150b0:	68fb      	ldr	r3, [r7, #12]
 80150b2:	639a      	str	r2, [r3, #56]	; 0x38
 80150b4:	68fb      	ldr	r3, [r7, #12]
 80150b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80150b8:	b29b      	uxth	r3, r3
 80150ba:	3b01      	subs	r3, #1
 80150bc:	b29a      	uxth	r2, r3
 80150be:	68fb      	ldr	r3, [r7, #12]
 80150c0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80150c2:	e011      	b.n	80150e8 <HAL_SPI_Receive+0x172>
 80150c4:	f7fa fa3a 	bl	800f53c <HAL_GetTick>
 80150c8:	4602      	mov	r2, r0
 80150ca:	693b      	ldr	r3, [r7, #16]
 80150cc:	1ad3      	subs	r3, r2, r3
 80150ce:	683a      	ldr	r2, [r7, #0]
 80150d0:	429a      	cmp	r2, r3
 80150d2:	d803      	bhi.n	80150dc <HAL_SPI_Receive+0x166>
 80150d4:	683b      	ldr	r3, [r7, #0]
 80150d6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80150da:	d102      	bne.n	80150e2 <HAL_SPI_Receive+0x16c>
 80150dc:	683b      	ldr	r3, [r7, #0]
 80150de:	2b00      	cmp	r3, #0
 80150e0:	d102      	bne.n	80150e8 <HAL_SPI_Receive+0x172>
 80150e2:	2303      	movs	r3, #3
 80150e4:	75fb      	strb	r3, [r7, #23]
 80150e6:	e04a      	b.n	801517e <HAL_SPI_Receive+0x208>
 80150e8:	68fb      	ldr	r3, [r7, #12]
 80150ea:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80150ec:	b29b      	uxth	r3, r3
 80150ee:	2b00      	cmp	r3, #0
 80150f0:	d1cb      	bne.n	801508a <HAL_SPI_Receive+0x114>
 80150f2:	e031      	b.n	8015158 <HAL_SPI_Receive+0x1e2>
 80150f4:	68fb      	ldr	r3, [r7, #12]
 80150f6:	681b      	ldr	r3, [r3, #0]
 80150f8:	689b      	ldr	r3, [r3, #8]
 80150fa:	f003 0301 	and.w	r3, r3, #1
 80150fe:	2b01      	cmp	r3, #1
 8015100:	d113      	bne.n	801512a <HAL_SPI_Receive+0x1b4>
 8015102:	68fb      	ldr	r3, [r7, #12]
 8015104:	681b      	ldr	r3, [r3, #0]
 8015106:	68da      	ldr	r2, [r3, #12]
 8015108:	68fb      	ldr	r3, [r7, #12]
 801510a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801510c:	b292      	uxth	r2, r2
 801510e:	801a      	strh	r2, [r3, #0]
 8015110:	68fb      	ldr	r3, [r7, #12]
 8015112:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015114:	1c9a      	adds	r2, r3, #2
 8015116:	68fb      	ldr	r3, [r7, #12]
 8015118:	639a      	str	r2, [r3, #56]	; 0x38
 801511a:	68fb      	ldr	r3, [r7, #12]
 801511c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 801511e:	b29b      	uxth	r3, r3
 8015120:	3b01      	subs	r3, #1
 8015122:	b29a      	uxth	r2, r3
 8015124:	68fb      	ldr	r3, [r7, #12]
 8015126:	87da      	strh	r2, [r3, #62]	; 0x3e
 8015128:	e011      	b.n	801514e <HAL_SPI_Receive+0x1d8>
 801512a:	f7fa fa07 	bl	800f53c <HAL_GetTick>
 801512e:	4602      	mov	r2, r0
 8015130:	693b      	ldr	r3, [r7, #16]
 8015132:	1ad3      	subs	r3, r2, r3
 8015134:	683a      	ldr	r2, [r7, #0]
 8015136:	429a      	cmp	r2, r3
 8015138:	d803      	bhi.n	8015142 <HAL_SPI_Receive+0x1cc>
 801513a:	683b      	ldr	r3, [r7, #0]
 801513c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8015140:	d102      	bne.n	8015148 <HAL_SPI_Receive+0x1d2>
 8015142:	683b      	ldr	r3, [r7, #0]
 8015144:	2b00      	cmp	r3, #0
 8015146:	d102      	bne.n	801514e <HAL_SPI_Receive+0x1d8>
 8015148:	2303      	movs	r3, #3
 801514a:	75fb      	strb	r3, [r7, #23]
 801514c:	e017      	b.n	801517e <HAL_SPI_Receive+0x208>
 801514e:	68fb      	ldr	r3, [r7, #12]
 8015150:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015152:	b29b      	uxth	r3, r3
 8015154:	2b00      	cmp	r3, #0
 8015156:	d1cd      	bne.n	80150f4 <HAL_SPI_Receive+0x17e>
 8015158:	693a      	ldr	r2, [r7, #16]
 801515a:	6839      	ldr	r1, [r7, #0]
 801515c:	68f8      	ldr	r0, [r7, #12]
 801515e:	f000 fa45 	bl	80155ec <SPI_EndRxTransaction>
 8015162:	4603      	mov	r3, r0
 8015164:	2b00      	cmp	r3, #0
 8015166:	d002      	beq.n	801516e <HAL_SPI_Receive+0x1f8>
 8015168:	68fb      	ldr	r3, [r7, #12]
 801516a:	2220      	movs	r2, #32
 801516c:	655a      	str	r2, [r3, #84]	; 0x54
 801516e:	68fb      	ldr	r3, [r7, #12]
 8015170:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015172:	2b00      	cmp	r3, #0
 8015174:	d002      	beq.n	801517c <HAL_SPI_Receive+0x206>
 8015176:	2301      	movs	r3, #1
 8015178:	75fb      	strb	r3, [r7, #23]
 801517a:	e000      	b.n	801517e <HAL_SPI_Receive+0x208>
 801517c:	bf00      	nop
 801517e:	68fb      	ldr	r3, [r7, #12]
 8015180:	2201      	movs	r2, #1
 8015182:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8015186:	68fb      	ldr	r3, [r7, #12]
 8015188:	2200      	movs	r2, #0
 801518a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801518e:	7dfb      	ldrb	r3, [r7, #23]
 8015190:	4618      	mov	r0, r3
 8015192:	3718      	adds	r7, #24
 8015194:	46bd      	mov	sp, r7
 8015196:	bd80      	pop	{r7, pc}

08015198 <HAL_SPI_TransmitReceive>:
 8015198:	b580      	push	{r7, lr}
 801519a:	b08c      	sub	sp, #48	; 0x30
 801519c:	af00      	add	r7, sp, #0
 801519e:	60f8      	str	r0, [r7, #12]
 80151a0:	60b9      	str	r1, [r7, #8]
 80151a2:	607a      	str	r2, [r7, #4]
 80151a4:	807b      	strh	r3, [r7, #2]
 80151a6:	2301      	movs	r3, #1
 80151a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80151aa:	2300      	movs	r3, #0
 80151ac:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80151b0:	68fb      	ldr	r3, [r7, #12]
 80151b2:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80151b6:	2b01      	cmp	r3, #1
 80151b8:	d101      	bne.n	80151be <HAL_SPI_TransmitReceive+0x26>
 80151ba:	2302      	movs	r3, #2
 80151bc:	e18a      	b.n	80154d4 <HAL_SPI_TransmitReceive+0x33c>
 80151be:	68fb      	ldr	r3, [r7, #12]
 80151c0:	2201      	movs	r2, #1
 80151c2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80151c6:	f7fa f9b9 	bl	800f53c <HAL_GetTick>
 80151ca:	6278      	str	r0, [r7, #36]	; 0x24
 80151cc:	68fb      	ldr	r3, [r7, #12]
 80151ce:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80151d2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80151d6:	68fb      	ldr	r3, [r7, #12]
 80151d8:	685b      	ldr	r3, [r3, #4]
 80151da:	61fb      	str	r3, [r7, #28]
 80151dc:	887b      	ldrh	r3, [r7, #2]
 80151de:	837b      	strh	r3, [r7, #26]
 80151e0:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80151e4:	2b01      	cmp	r3, #1
 80151e6:	d00f      	beq.n	8015208 <HAL_SPI_TransmitReceive+0x70>
 80151e8:	69fb      	ldr	r3, [r7, #28]
 80151ea:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80151ee:	d107      	bne.n	8015200 <HAL_SPI_TransmitReceive+0x68>
 80151f0:	68fb      	ldr	r3, [r7, #12]
 80151f2:	689b      	ldr	r3, [r3, #8]
 80151f4:	2b00      	cmp	r3, #0
 80151f6:	d103      	bne.n	8015200 <HAL_SPI_TransmitReceive+0x68>
 80151f8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80151fc:	2b04      	cmp	r3, #4
 80151fe:	d003      	beq.n	8015208 <HAL_SPI_TransmitReceive+0x70>
 8015200:	2302      	movs	r3, #2
 8015202:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8015206:	e15b      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 8015208:	68bb      	ldr	r3, [r7, #8]
 801520a:	2b00      	cmp	r3, #0
 801520c:	d005      	beq.n	801521a <HAL_SPI_TransmitReceive+0x82>
 801520e:	687b      	ldr	r3, [r7, #4]
 8015210:	2b00      	cmp	r3, #0
 8015212:	d002      	beq.n	801521a <HAL_SPI_TransmitReceive+0x82>
 8015214:	887b      	ldrh	r3, [r7, #2]
 8015216:	2b00      	cmp	r3, #0
 8015218:	d103      	bne.n	8015222 <HAL_SPI_TransmitReceive+0x8a>
 801521a:	2301      	movs	r3, #1
 801521c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8015220:	e14e      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 8015222:	68fb      	ldr	r3, [r7, #12]
 8015224:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8015228:	b2db      	uxtb	r3, r3
 801522a:	2b04      	cmp	r3, #4
 801522c:	d003      	beq.n	8015236 <HAL_SPI_TransmitReceive+0x9e>
 801522e:	68fb      	ldr	r3, [r7, #12]
 8015230:	2205      	movs	r2, #5
 8015232:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8015236:	68fb      	ldr	r3, [r7, #12]
 8015238:	2200      	movs	r2, #0
 801523a:	655a      	str	r2, [r3, #84]	; 0x54
 801523c:	68fb      	ldr	r3, [r7, #12]
 801523e:	687a      	ldr	r2, [r7, #4]
 8015240:	639a      	str	r2, [r3, #56]	; 0x38
 8015242:	68fb      	ldr	r3, [r7, #12]
 8015244:	887a      	ldrh	r2, [r7, #2]
 8015246:	87da      	strh	r2, [r3, #62]	; 0x3e
 8015248:	68fb      	ldr	r3, [r7, #12]
 801524a:	887a      	ldrh	r2, [r7, #2]
 801524c:	879a      	strh	r2, [r3, #60]	; 0x3c
 801524e:	68fb      	ldr	r3, [r7, #12]
 8015250:	68ba      	ldr	r2, [r7, #8]
 8015252:	631a      	str	r2, [r3, #48]	; 0x30
 8015254:	68fb      	ldr	r3, [r7, #12]
 8015256:	887a      	ldrh	r2, [r7, #2]
 8015258:	86da      	strh	r2, [r3, #54]	; 0x36
 801525a:	68fb      	ldr	r3, [r7, #12]
 801525c:	887a      	ldrh	r2, [r7, #2]
 801525e:	869a      	strh	r2, [r3, #52]	; 0x34
 8015260:	68fb      	ldr	r3, [r7, #12]
 8015262:	2200      	movs	r2, #0
 8015264:	641a      	str	r2, [r3, #64]	; 0x40
 8015266:	68fb      	ldr	r3, [r7, #12]
 8015268:	2200      	movs	r2, #0
 801526a:	645a      	str	r2, [r3, #68]	; 0x44
 801526c:	68fb      	ldr	r3, [r7, #12]
 801526e:	681b      	ldr	r3, [r3, #0]
 8015270:	681b      	ldr	r3, [r3, #0]
 8015272:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015276:	2b40      	cmp	r3, #64	; 0x40
 8015278:	d007      	beq.n	801528a <HAL_SPI_TransmitReceive+0xf2>
 801527a:	68fb      	ldr	r3, [r7, #12]
 801527c:	681b      	ldr	r3, [r3, #0]
 801527e:	681a      	ldr	r2, [r3, #0]
 8015280:	68fb      	ldr	r3, [r7, #12]
 8015282:	681b      	ldr	r3, [r3, #0]
 8015284:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8015288:	601a      	str	r2, [r3, #0]
 801528a:	68fb      	ldr	r3, [r7, #12]
 801528c:	68db      	ldr	r3, [r3, #12]
 801528e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8015292:	d178      	bne.n	8015386 <HAL_SPI_TransmitReceive+0x1ee>
 8015294:	68fb      	ldr	r3, [r7, #12]
 8015296:	685b      	ldr	r3, [r3, #4]
 8015298:	2b00      	cmp	r3, #0
 801529a:	d002      	beq.n	80152a2 <HAL_SPI_TransmitReceive+0x10a>
 801529c:	8b7b      	ldrh	r3, [r7, #26]
 801529e:	2b01      	cmp	r3, #1
 80152a0:	d166      	bne.n	8015370 <HAL_SPI_TransmitReceive+0x1d8>
 80152a2:	68fb      	ldr	r3, [r7, #12]
 80152a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80152a6:	881a      	ldrh	r2, [r3, #0]
 80152a8:	68fb      	ldr	r3, [r7, #12]
 80152aa:	681b      	ldr	r3, [r3, #0]
 80152ac:	60da      	str	r2, [r3, #12]
 80152ae:	68fb      	ldr	r3, [r7, #12]
 80152b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80152b2:	1c9a      	adds	r2, r3, #2
 80152b4:	68fb      	ldr	r3, [r7, #12]
 80152b6:	631a      	str	r2, [r3, #48]	; 0x30
 80152b8:	68fb      	ldr	r3, [r7, #12]
 80152ba:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80152bc:	b29b      	uxth	r3, r3
 80152be:	3b01      	subs	r3, #1
 80152c0:	b29a      	uxth	r2, r3
 80152c2:	68fb      	ldr	r3, [r7, #12]
 80152c4:	86da      	strh	r2, [r3, #54]	; 0x36
 80152c6:	e053      	b.n	8015370 <HAL_SPI_TransmitReceive+0x1d8>
 80152c8:	68fb      	ldr	r3, [r7, #12]
 80152ca:	681b      	ldr	r3, [r3, #0]
 80152cc:	689b      	ldr	r3, [r3, #8]
 80152ce:	f003 0302 	and.w	r3, r3, #2
 80152d2:	2b02      	cmp	r3, #2
 80152d4:	d11b      	bne.n	801530e <HAL_SPI_TransmitReceive+0x176>
 80152d6:	68fb      	ldr	r3, [r7, #12]
 80152d8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80152da:	b29b      	uxth	r3, r3
 80152dc:	2b00      	cmp	r3, #0
 80152de:	d016      	beq.n	801530e <HAL_SPI_TransmitReceive+0x176>
 80152e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80152e2:	2b01      	cmp	r3, #1
 80152e4:	d113      	bne.n	801530e <HAL_SPI_TransmitReceive+0x176>
 80152e6:	68fb      	ldr	r3, [r7, #12]
 80152e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80152ea:	881a      	ldrh	r2, [r3, #0]
 80152ec:	68fb      	ldr	r3, [r7, #12]
 80152ee:	681b      	ldr	r3, [r3, #0]
 80152f0:	60da      	str	r2, [r3, #12]
 80152f2:	68fb      	ldr	r3, [r7, #12]
 80152f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80152f6:	1c9a      	adds	r2, r3, #2
 80152f8:	68fb      	ldr	r3, [r7, #12]
 80152fa:	631a      	str	r2, [r3, #48]	; 0x30
 80152fc:	68fb      	ldr	r3, [r7, #12]
 80152fe:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015300:	b29b      	uxth	r3, r3
 8015302:	3b01      	subs	r3, #1
 8015304:	b29a      	uxth	r2, r3
 8015306:	68fb      	ldr	r3, [r7, #12]
 8015308:	86da      	strh	r2, [r3, #54]	; 0x36
 801530a:	2300      	movs	r3, #0
 801530c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801530e:	68fb      	ldr	r3, [r7, #12]
 8015310:	681b      	ldr	r3, [r3, #0]
 8015312:	689b      	ldr	r3, [r3, #8]
 8015314:	f003 0301 	and.w	r3, r3, #1
 8015318:	2b01      	cmp	r3, #1
 801531a:	d119      	bne.n	8015350 <HAL_SPI_TransmitReceive+0x1b8>
 801531c:	68fb      	ldr	r3, [r7, #12]
 801531e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015320:	b29b      	uxth	r3, r3
 8015322:	2b00      	cmp	r3, #0
 8015324:	d014      	beq.n	8015350 <HAL_SPI_TransmitReceive+0x1b8>
 8015326:	68fb      	ldr	r3, [r7, #12]
 8015328:	681b      	ldr	r3, [r3, #0]
 801532a:	68da      	ldr	r2, [r3, #12]
 801532c:	68fb      	ldr	r3, [r7, #12]
 801532e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015330:	b292      	uxth	r2, r2
 8015332:	801a      	strh	r2, [r3, #0]
 8015334:	68fb      	ldr	r3, [r7, #12]
 8015336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015338:	1c9a      	adds	r2, r3, #2
 801533a:	68fb      	ldr	r3, [r7, #12]
 801533c:	639a      	str	r2, [r3, #56]	; 0x38
 801533e:	68fb      	ldr	r3, [r7, #12]
 8015340:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015342:	b29b      	uxth	r3, r3
 8015344:	3b01      	subs	r3, #1
 8015346:	b29a      	uxth	r2, r3
 8015348:	68fb      	ldr	r3, [r7, #12]
 801534a:	87da      	strh	r2, [r3, #62]	; 0x3e
 801534c:	2301      	movs	r3, #1
 801534e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015350:	f7fa f8f4 	bl	800f53c <HAL_GetTick>
 8015354:	4602      	mov	r2, r0
 8015356:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015358:	1ad3      	subs	r3, r2, r3
 801535a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801535c:	429a      	cmp	r2, r3
 801535e:	d807      	bhi.n	8015370 <HAL_SPI_TransmitReceive+0x1d8>
 8015360:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015362:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8015366:	d003      	beq.n	8015370 <HAL_SPI_TransmitReceive+0x1d8>
 8015368:	2303      	movs	r3, #3
 801536a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801536e:	e0a7      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 8015370:	68fb      	ldr	r3, [r7, #12]
 8015372:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015374:	b29b      	uxth	r3, r3
 8015376:	2b00      	cmp	r3, #0
 8015378:	d1a6      	bne.n	80152c8 <HAL_SPI_TransmitReceive+0x130>
 801537a:	68fb      	ldr	r3, [r7, #12]
 801537c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 801537e:	b29b      	uxth	r3, r3
 8015380:	2b00      	cmp	r3, #0
 8015382:	d1a1      	bne.n	80152c8 <HAL_SPI_TransmitReceive+0x130>
 8015384:	e07c      	b.n	8015480 <HAL_SPI_TransmitReceive+0x2e8>
 8015386:	68fb      	ldr	r3, [r7, #12]
 8015388:	685b      	ldr	r3, [r3, #4]
 801538a:	2b00      	cmp	r3, #0
 801538c:	d002      	beq.n	8015394 <HAL_SPI_TransmitReceive+0x1fc>
 801538e:	8b7b      	ldrh	r3, [r7, #26]
 8015390:	2b01      	cmp	r3, #1
 8015392:	d16b      	bne.n	801546c <HAL_SPI_TransmitReceive+0x2d4>
 8015394:	68fb      	ldr	r3, [r7, #12]
 8015396:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8015398:	68fb      	ldr	r3, [r7, #12]
 801539a:	681b      	ldr	r3, [r3, #0]
 801539c:	330c      	adds	r3, #12
 801539e:	7812      	ldrb	r2, [r2, #0]
 80153a0:	701a      	strb	r2, [r3, #0]
 80153a2:	68fb      	ldr	r3, [r7, #12]
 80153a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80153a6:	1c5a      	adds	r2, r3, #1
 80153a8:	68fb      	ldr	r3, [r7, #12]
 80153aa:	631a      	str	r2, [r3, #48]	; 0x30
 80153ac:	68fb      	ldr	r3, [r7, #12]
 80153ae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80153b0:	b29b      	uxth	r3, r3
 80153b2:	3b01      	subs	r3, #1
 80153b4:	b29a      	uxth	r2, r3
 80153b6:	68fb      	ldr	r3, [r7, #12]
 80153b8:	86da      	strh	r2, [r3, #54]	; 0x36
 80153ba:	e057      	b.n	801546c <HAL_SPI_TransmitReceive+0x2d4>
 80153bc:	68fb      	ldr	r3, [r7, #12]
 80153be:	681b      	ldr	r3, [r3, #0]
 80153c0:	689b      	ldr	r3, [r3, #8]
 80153c2:	f003 0302 	and.w	r3, r3, #2
 80153c6:	2b02      	cmp	r3, #2
 80153c8:	d11c      	bne.n	8015404 <HAL_SPI_TransmitReceive+0x26c>
 80153ca:	68fb      	ldr	r3, [r7, #12]
 80153cc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80153ce:	b29b      	uxth	r3, r3
 80153d0:	2b00      	cmp	r3, #0
 80153d2:	d017      	beq.n	8015404 <HAL_SPI_TransmitReceive+0x26c>
 80153d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80153d6:	2b01      	cmp	r3, #1
 80153d8:	d114      	bne.n	8015404 <HAL_SPI_TransmitReceive+0x26c>
 80153da:	68fb      	ldr	r3, [r7, #12]
 80153dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80153de:	68fb      	ldr	r3, [r7, #12]
 80153e0:	681b      	ldr	r3, [r3, #0]
 80153e2:	330c      	adds	r3, #12
 80153e4:	7812      	ldrb	r2, [r2, #0]
 80153e6:	701a      	strb	r2, [r3, #0]
 80153e8:	68fb      	ldr	r3, [r7, #12]
 80153ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80153ec:	1c5a      	adds	r2, r3, #1
 80153ee:	68fb      	ldr	r3, [r7, #12]
 80153f0:	631a      	str	r2, [r3, #48]	; 0x30
 80153f2:	68fb      	ldr	r3, [r7, #12]
 80153f4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80153f6:	b29b      	uxth	r3, r3
 80153f8:	3b01      	subs	r3, #1
 80153fa:	b29a      	uxth	r2, r3
 80153fc:	68fb      	ldr	r3, [r7, #12]
 80153fe:	86da      	strh	r2, [r3, #54]	; 0x36
 8015400:	2300      	movs	r3, #0
 8015402:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015404:	68fb      	ldr	r3, [r7, #12]
 8015406:	681b      	ldr	r3, [r3, #0]
 8015408:	689b      	ldr	r3, [r3, #8]
 801540a:	f003 0301 	and.w	r3, r3, #1
 801540e:	2b01      	cmp	r3, #1
 8015410:	d119      	bne.n	8015446 <HAL_SPI_TransmitReceive+0x2ae>
 8015412:	68fb      	ldr	r3, [r7, #12]
 8015414:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015416:	b29b      	uxth	r3, r3
 8015418:	2b00      	cmp	r3, #0
 801541a:	d014      	beq.n	8015446 <HAL_SPI_TransmitReceive+0x2ae>
 801541c:	68fb      	ldr	r3, [r7, #12]
 801541e:	681b      	ldr	r3, [r3, #0]
 8015420:	68da      	ldr	r2, [r3, #12]
 8015422:	68fb      	ldr	r3, [r7, #12]
 8015424:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015426:	b2d2      	uxtb	r2, r2
 8015428:	701a      	strb	r2, [r3, #0]
 801542a:	68fb      	ldr	r3, [r7, #12]
 801542c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801542e:	1c5a      	adds	r2, r3, #1
 8015430:	68fb      	ldr	r3, [r7, #12]
 8015432:	639a      	str	r2, [r3, #56]	; 0x38
 8015434:	68fb      	ldr	r3, [r7, #12]
 8015436:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015438:	b29b      	uxth	r3, r3
 801543a:	3b01      	subs	r3, #1
 801543c:	b29a      	uxth	r2, r3
 801543e:	68fb      	ldr	r3, [r7, #12]
 8015440:	87da      	strh	r2, [r3, #62]	; 0x3e
 8015442:	2301      	movs	r3, #1
 8015444:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015446:	f7fa f879 	bl	800f53c <HAL_GetTick>
 801544a:	4602      	mov	r2, r0
 801544c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801544e:	1ad3      	subs	r3, r2, r3
 8015450:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8015452:	429a      	cmp	r2, r3
 8015454:	d803      	bhi.n	801545e <HAL_SPI_TransmitReceive+0x2c6>
 8015456:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015458:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801545c:	d102      	bne.n	8015464 <HAL_SPI_TransmitReceive+0x2cc>
 801545e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015460:	2b00      	cmp	r3, #0
 8015462:	d103      	bne.n	801546c <HAL_SPI_TransmitReceive+0x2d4>
 8015464:	2303      	movs	r3, #3
 8015466:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801546a:	e029      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 801546c:	68fb      	ldr	r3, [r7, #12]
 801546e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015470:	b29b      	uxth	r3, r3
 8015472:	2b00      	cmp	r3, #0
 8015474:	d1a2      	bne.n	80153bc <HAL_SPI_TransmitReceive+0x224>
 8015476:	68fb      	ldr	r3, [r7, #12]
 8015478:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 801547a:	b29b      	uxth	r3, r3
 801547c:	2b00      	cmp	r3, #0
 801547e:	d19d      	bne.n	80153bc <HAL_SPI_TransmitReceive+0x224>
 8015480:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8015482:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8015484:	68f8      	ldr	r0, [r7, #12]
 8015486:	f000 f917 	bl	80156b8 <SPI_EndRxTxTransaction>
 801548a:	4603      	mov	r3, r0
 801548c:	2b00      	cmp	r3, #0
 801548e:	d006      	beq.n	801549e <HAL_SPI_TransmitReceive+0x306>
 8015490:	2301      	movs	r3, #1
 8015492:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8015496:	68fb      	ldr	r3, [r7, #12]
 8015498:	2220      	movs	r2, #32
 801549a:	655a      	str	r2, [r3, #84]	; 0x54
 801549c:	e010      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 801549e:	68fb      	ldr	r3, [r7, #12]
 80154a0:	689b      	ldr	r3, [r3, #8]
 80154a2:	2b00      	cmp	r3, #0
 80154a4:	d10b      	bne.n	80154be <HAL_SPI_TransmitReceive+0x326>
 80154a6:	2300      	movs	r3, #0
 80154a8:	617b      	str	r3, [r7, #20]
 80154aa:	68fb      	ldr	r3, [r7, #12]
 80154ac:	681b      	ldr	r3, [r3, #0]
 80154ae:	68db      	ldr	r3, [r3, #12]
 80154b0:	617b      	str	r3, [r7, #20]
 80154b2:	68fb      	ldr	r3, [r7, #12]
 80154b4:	681b      	ldr	r3, [r3, #0]
 80154b6:	689b      	ldr	r3, [r3, #8]
 80154b8:	617b      	str	r3, [r7, #20]
 80154ba:	697b      	ldr	r3, [r7, #20]
 80154bc:	e000      	b.n	80154c0 <HAL_SPI_TransmitReceive+0x328>
 80154be:	bf00      	nop
 80154c0:	68fb      	ldr	r3, [r7, #12]
 80154c2:	2201      	movs	r2, #1
 80154c4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80154c8:	68fb      	ldr	r3, [r7, #12]
 80154ca:	2200      	movs	r2, #0
 80154cc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80154d0:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80154d4:	4618      	mov	r0, r3
 80154d6:	3730      	adds	r7, #48	; 0x30
 80154d8:	46bd      	mov	sp, r7
 80154da:	bd80      	pop	{r7, pc}

080154dc <SPI_WaitFlagStateUntilTimeout>:
 80154dc:	b580      	push	{r7, lr}
 80154de:	b088      	sub	sp, #32
 80154e0:	af00      	add	r7, sp, #0
 80154e2:	60f8      	str	r0, [r7, #12]
 80154e4:	60b9      	str	r1, [r7, #8]
 80154e6:	603b      	str	r3, [r7, #0]
 80154e8:	4613      	mov	r3, r2
 80154ea:	71fb      	strb	r3, [r7, #7]
 80154ec:	f7fa f826 	bl	800f53c <HAL_GetTick>
 80154f0:	4602      	mov	r2, r0
 80154f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80154f4:	1a9b      	subs	r3, r3, r2
 80154f6:	683a      	ldr	r2, [r7, #0]
 80154f8:	4413      	add	r3, r2
 80154fa:	61fb      	str	r3, [r7, #28]
 80154fc:	f7fa f81e 	bl	800f53c <HAL_GetTick>
 8015500:	61b8      	str	r0, [r7, #24]
 8015502:	4b39      	ldr	r3, [pc, #228]	; (80155e8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8015504:	681b      	ldr	r3, [r3, #0]
 8015506:	015b      	lsls	r3, r3, #5
 8015508:	0d1b      	lsrs	r3, r3, #20
 801550a:	69fa      	ldr	r2, [r7, #28]
 801550c:	fb02 f303 	mul.w	r3, r2, r3
 8015510:	617b      	str	r3, [r7, #20]
 8015512:	e054      	b.n	80155be <SPI_WaitFlagStateUntilTimeout+0xe2>
 8015514:	683b      	ldr	r3, [r7, #0]
 8015516:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801551a:	d050      	beq.n	80155be <SPI_WaitFlagStateUntilTimeout+0xe2>
 801551c:	f7fa f80e 	bl	800f53c <HAL_GetTick>
 8015520:	4602      	mov	r2, r0
 8015522:	69bb      	ldr	r3, [r7, #24]
 8015524:	1ad3      	subs	r3, r2, r3
 8015526:	69fa      	ldr	r2, [r7, #28]
 8015528:	429a      	cmp	r2, r3
 801552a:	d902      	bls.n	8015532 <SPI_WaitFlagStateUntilTimeout+0x56>
 801552c:	69fb      	ldr	r3, [r7, #28]
 801552e:	2b00      	cmp	r3, #0
 8015530:	d13d      	bne.n	80155ae <SPI_WaitFlagStateUntilTimeout+0xd2>
 8015532:	68fb      	ldr	r3, [r7, #12]
 8015534:	681b      	ldr	r3, [r3, #0]
 8015536:	685a      	ldr	r2, [r3, #4]
 8015538:	68fb      	ldr	r3, [r7, #12]
 801553a:	681b      	ldr	r3, [r3, #0]
 801553c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8015540:	605a      	str	r2, [r3, #4]
 8015542:	68fb      	ldr	r3, [r7, #12]
 8015544:	685b      	ldr	r3, [r3, #4]
 8015546:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 801554a:	d111      	bne.n	8015570 <SPI_WaitFlagStateUntilTimeout+0x94>
 801554c:	68fb      	ldr	r3, [r7, #12]
 801554e:	689b      	ldr	r3, [r3, #8]
 8015550:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8015554:	d004      	beq.n	8015560 <SPI_WaitFlagStateUntilTimeout+0x84>
 8015556:	68fb      	ldr	r3, [r7, #12]
 8015558:	689b      	ldr	r3, [r3, #8]
 801555a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801555e:	d107      	bne.n	8015570 <SPI_WaitFlagStateUntilTimeout+0x94>
 8015560:	68fb      	ldr	r3, [r7, #12]
 8015562:	681b      	ldr	r3, [r3, #0]
 8015564:	681a      	ldr	r2, [r3, #0]
 8015566:	68fb      	ldr	r3, [r7, #12]
 8015568:	681b      	ldr	r3, [r3, #0]
 801556a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801556e:	601a      	str	r2, [r3, #0]
 8015570:	68fb      	ldr	r3, [r7, #12]
 8015572:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015574:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8015578:	d10f      	bne.n	801559a <SPI_WaitFlagStateUntilTimeout+0xbe>
 801557a:	68fb      	ldr	r3, [r7, #12]
 801557c:	681b      	ldr	r3, [r3, #0]
 801557e:	681a      	ldr	r2, [r3, #0]
 8015580:	68fb      	ldr	r3, [r7, #12]
 8015582:	681b      	ldr	r3, [r3, #0]
 8015584:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8015588:	601a      	str	r2, [r3, #0]
 801558a:	68fb      	ldr	r3, [r7, #12]
 801558c:	681b      	ldr	r3, [r3, #0]
 801558e:	681a      	ldr	r2, [r3, #0]
 8015590:	68fb      	ldr	r3, [r7, #12]
 8015592:	681b      	ldr	r3, [r3, #0]
 8015594:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8015598:	601a      	str	r2, [r3, #0]
 801559a:	68fb      	ldr	r3, [r7, #12]
 801559c:	2201      	movs	r2, #1
 801559e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80155a2:	68fb      	ldr	r3, [r7, #12]
 80155a4:	2200      	movs	r2, #0
 80155a6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80155aa:	2303      	movs	r3, #3
 80155ac:	e017      	b.n	80155de <SPI_WaitFlagStateUntilTimeout+0x102>
 80155ae:	697b      	ldr	r3, [r7, #20]
 80155b0:	2b00      	cmp	r3, #0
 80155b2:	d101      	bne.n	80155b8 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80155b4:	2300      	movs	r3, #0
 80155b6:	61fb      	str	r3, [r7, #28]
 80155b8:	697b      	ldr	r3, [r7, #20]
 80155ba:	3b01      	subs	r3, #1
 80155bc:	617b      	str	r3, [r7, #20]
 80155be:	68fb      	ldr	r3, [r7, #12]
 80155c0:	681b      	ldr	r3, [r3, #0]
 80155c2:	689a      	ldr	r2, [r3, #8]
 80155c4:	68bb      	ldr	r3, [r7, #8]
 80155c6:	4013      	ands	r3, r2
 80155c8:	68ba      	ldr	r2, [r7, #8]
 80155ca:	429a      	cmp	r2, r3
 80155cc:	bf0c      	ite	eq
 80155ce:	2301      	moveq	r3, #1
 80155d0:	2300      	movne	r3, #0
 80155d2:	b2db      	uxtb	r3, r3
 80155d4:	461a      	mov	r2, r3
 80155d6:	79fb      	ldrb	r3, [r7, #7]
 80155d8:	429a      	cmp	r2, r3
 80155da:	d19b      	bne.n	8015514 <SPI_WaitFlagStateUntilTimeout+0x38>
 80155dc:	2300      	movs	r3, #0
 80155de:	4618      	mov	r0, r3
 80155e0:	3720      	adds	r7, #32
 80155e2:	46bd      	mov	sp, r7
 80155e4:	bd80      	pop	{r7, pc}
 80155e6:	bf00      	nop
 80155e8:	20000004 	.word	0x20000004

080155ec <SPI_EndRxTransaction>:
 80155ec:	b580      	push	{r7, lr}
 80155ee:	b086      	sub	sp, #24
 80155f0:	af02      	add	r7, sp, #8
 80155f2:	60f8      	str	r0, [r7, #12]
 80155f4:	60b9      	str	r1, [r7, #8]
 80155f6:	607a      	str	r2, [r7, #4]
 80155f8:	68fb      	ldr	r3, [r7, #12]
 80155fa:	685b      	ldr	r3, [r3, #4]
 80155fc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8015600:	d111      	bne.n	8015626 <SPI_EndRxTransaction+0x3a>
 8015602:	68fb      	ldr	r3, [r7, #12]
 8015604:	689b      	ldr	r3, [r3, #8]
 8015606:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801560a:	d004      	beq.n	8015616 <SPI_EndRxTransaction+0x2a>
 801560c:	68fb      	ldr	r3, [r7, #12]
 801560e:	689b      	ldr	r3, [r3, #8]
 8015610:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8015614:	d107      	bne.n	8015626 <SPI_EndRxTransaction+0x3a>
 8015616:	68fb      	ldr	r3, [r7, #12]
 8015618:	681b      	ldr	r3, [r3, #0]
 801561a:	681a      	ldr	r2, [r3, #0]
 801561c:	68fb      	ldr	r3, [r7, #12]
 801561e:	681b      	ldr	r3, [r3, #0]
 8015620:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8015624:	601a      	str	r2, [r3, #0]
 8015626:	68fb      	ldr	r3, [r7, #12]
 8015628:	685b      	ldr	r3, [r3, #4]
 801562a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 801562e:	d12a      	bne.n	8015686 <SPI_EndRxTransaction+0x9a>
 8015630:	68fb      	ldr	r3, [r7, #12]
 8015632:	689b      	ldr	r3, [r3, #8]
 8015634:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8015638:	d012      	beq.n	8015660 <SPI_EndRxTransaction+0x74>
 801563a:	687b      	ldr	r3, [r7, #4]
 801563c:	9300      	str	r3, [sp, #0]
 801563e:	68bb      	ldr	r3, [r7, #8]
 8015640:	2200      	movs	r2, #0
 8015642:	2180      	movs	r1, #128	; 0x80
 8015644:	68f8      	ldr	r0, [r7, #12]
 8015646:	f7ff ff49 	bl	80154dc <SPI_WaitFlagStateUntilTimeout>
 801564a:	4603      	mov	r3, r0
 801564c:	2b00      	cmp	r3, #0
 801564e:	d02d      	beq.n	80156ac <SPI_EndRxTransaction+0xc0>
 8015650:	68fb      	ldr	r3, [r7, #12]
 8015652:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015654:	f043 0220 	orr.w	r2, r3, #32
 8015658:	68fb      	ldr	r3, [r7, #12]
 801565a:	655a      	str	r2, [r3, #84]	; 0x54
 801565c:	2303      	movs	r3, #3
 801565e:	e026      	b.n	80156ae <SPI_EndRxTransaction+0xc2>
 8015660:	687b      	ldr	r3, [r7, #4]
 8015662:	9300      	str	r3, [sp, #0]
 8015664:	68bb      	ldr	r3, [r7, #8]
 8015666:	2200      	movs	r2, #0
 8015668:	2101      	movs	r1, #1
 801566a:	68f8      	ldr	r0, [r7, #12]
 801566c:	f7ff ff36 	bl	80154dc <SPI_WaitFlagStateUntilTimeout>
 8015670:	4603      	mov	r3, r0
 8015672:	2b00      	cmp	r3, #0
 8015674:	d01a      	beq.n	80156ac <SPI_EndRxTransaction+0xc0>
 8015676:	68fb      	ldr	r3, [r7, #12]
 8015678:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801567a:	f043 0220 	orr.w	r2, r3, #32
 801567e:	68fb      	ldr	r3, [r7, #12]
 8015680:	655a      	str	r2, [r3, #84]	; 0x54
 8015682:	2303      	movs	r3, #3
 8015684:	e013      	b.n	80156ae <SPI_EndRxTransaction+0xc2>
 8015686:	687b      	ldr	r3, [r7, #4]
 8015688:	9300      	str	r3, [sp, #0]
 801568a:	68bb      	ldr	r3, [r7, #8]
 801568c:	2200      	movs	r2, #0
 801568e:	2101      	movs	r1, #1
 8015690:	68f8      	ldr	r0, [r7, #12]
 8015692:	f7ff ff23 	bl	80154dc <SPI_WaitFlagStateUntilTimeout>
 8015696:	4603      	mov	r3, r0
 8015698:	2b00      	cmp	r3, #0
 801569a:	d007      	beq.n	80156ac <SPI_EndRxTransaction+0xc0>
 801569c:	68fb      	ldr	r3, [r7, #12]
 801569e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80156a0:	f043 0220 	orr.w	r2, r3, #32
 80156a4:	68fb      	ldr	r3, [r7, #12]
 80156a6:	655a      	str	r2, [r3, #84]	; 0x54
 80156a8:	2303      	movs	r3, #3
 80156aa:	e000      	b.n	80156ae <SPI_EndRxTransaction+0xc2>
 80156ac:	2300      	movs	r3, #0
 80156ae:	4618      	mov	r0, r3
 80156b0:	3710      	adds	r7, #16
 80156b2:	46bd      	mov	sp, r7
 80156b4:	bd80      	pop	{r7, pc}
	...

080156b8 <SPI_EndRxTxTransaction>:
 80156b8:	b580      	push	{r7, lr}
 80156ba:	b088      	sub	sp, #32
 80156bc:	af02      	add	r7, sp, #8
 80156be:	60f8      	str	r0, [r7, #12]
 80156c0:	60b9      	str	r1, [r7, #8]
 80156c2:	607a      	str	r2, [r7, #4]
 80156c4:	4b1b      	ldr	r3, [pc, #108]	; (8015734 <SPI_EndRxTxTransaction+0x7c>)
 80156c6:	681b      	ldr	r3, [r3, #0]
 80156c8:	4a1b      	ldr	r2, [pc, #108]	; (8015738 <SPI_EndRxTxTransaction+0x80>)
 80156ca:	fba2 2303 	umull	r2, r3, r2, r3
 80156ce:	0d5b      	lsrs	r3, r3, #21
 80156d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80156d4:	fb02 f303 	mul.w	r3, r2, r3
 80156d8:	617b      	str	r3, [r7, #20]
 80156da:	68fb      	ldr	r3, [r7, #12]
 80156dc:	685b      	ldr	r3, [r3, #4]
 80156de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80156e2:	d112      	bne.n	801570a <SPI_EndRxTxTransaction+0x52>
 80156e4:	687b      	ldr	r3, [r7, #4]
 80156e6:	9300      	str	r3, [sp, #0]
 80156e8:	68bb      	ldr	r3, [r7, #8]
 80156ea:	2200      	movs	r2, #0
 80156ec:	2180      	movs	r1, #128	; 0x80
 80156ee:	68f8      	ldr	r0, [r7, #12]
 80156f0:	f7ff fef4 	bl	80154dc <SPI_WaitFlagStateUntilTimeout>
 80156f4:	4603      	mov	r3, r0
 80156f6:	2b00      	cmp	r3, #0
 80156f8:	d016      	beq.n	8015728 <SPI_EndRxTxTransaction+0x70>
 80156fa:	68fb      	ldr	r3, [r7, #12]
 80156fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80156fe:	f043 0220 	orr.w	r2, r3, #32
 8015702:	68fb      	ldr	r3, [r7, #12]
 8015704:	655a      	str	r2, [r3, #84]	; 0x54
 8015706:	2303      	movs	r3, #3
 8015708:	e00f      	b.n	801572a <SPI_EndRxTxTransaction+0x72>
 801570a:	697b      	ldr	r3, [r7, #20]
 801570c:	2b00      	cmp	r3, #0
 801570e:	d00a      	beq.n	8015726 <SPI_EndRxTxTransaction+0x6e>
 8015710:	697b      	ldr	r3, [r7, #20]
 8015712:	3b01      	subs	r3, #1
 8015714:	617b      	str	r3, [r7, #20]
 8015716:	68fb      	ldr	r3, [r7, #12]
 8015718:	681b      	ldr	r3, [r3, #0]
 801571a:	689b      	ldr	r3, [r3, #8]
 801571c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015720:	2b80      	cmp	r3, #128	; 0x80
 8015722:	d0f2      	beq.n	801570a <SPI_EndRxTxTransaction+0x52>
 8015724:	e000      	b.n	8015728 <SPI_EndRxTxTransaction+0x70>
 8015726:	bf00      	nop
 8015728:	2300      	movs	r3, #0
 801572a:	4618      	mov	r0, r3
 801572c:	3718      	adds	r7, #24
 801572e:	46bd      	mov	sp, r7
 8015730:	bd80      	pop	{r7, pc}
 8015732:	bf00      	nop
 8015734:	20000004 	.word	0x20000004
 8015738:	165e9f81 	.word	0x165e9f81

0801573c <HAL_TIM_Base_Init>:
 801573c:	b580      	push	{r7, lr}
 801573e:	b082      	sub	sp, #8
 8015740:	af00      	add	r7, sp, #0
 8015742:	6078      	str	r0, [r7, #4]
 8015744:	687b      	ldr	r3, [r7, #4]
 8015746:	2b00      	cmp	r3, #0
 8015748:	d101      	bne.n	801574e <HAL_TIM_Base_Init+0x12>
 801574a:	2301      	movs	r3, #1
 801574c:	e041      	b.n	80157d2 <HAL_TIM_Base_Init+0x96>
 801574e:	687b      	ldr	r3, [r7, #4]
 8015750:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015754:	b2db      	uxtb	r3, r3
 8015756:	2b00      	cmp	r3, #0
 8015758:	d106      	bne.n	8015768 <HAL_TIM_Base_Init+0x2c>
 801575a:	687b      	ldr	r3, [r7, #4]
 801575c:	2200      	movs	r2, #0
 801575e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015762:	6878      	ldr	r0, [r7, #4]
 8015764:	f7ee ff7c 	bl	8004660 <HAL_TIM_Base_MspInit>
 8015768:	687b      	ldr	r3, [r7, #4]
 801576a:	2202      	movs	r2, #2
 801576c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015770:	687b      	ldr	r3, [r7, #4]
 8015772:	681a      	ldr	r2, [r3, #0]
 8015774:	687b      	ldr	r3, [r7, #4]
 8015776:	3304      	adds	r3, #4
 8015778:	4619      	mov	r1, r3
 801577a:	4610      	mov	r0, r2
 801577c:	f000 fd8c 	bl	8016298 <TIM_Base_SetConfig>
 8015780:	687b      	ldr	r3, [r7, #4]
 8015782:	2201      	movs	r2, #1
 8015784:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8015788:	687b      	ldr	r3, [r7, #4]
 801578a:	2201      	movs	r2, #1
 801578c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015790:	687b      	ldr	r3, [r7, #4]
 8015792:	2201      	movs	r2, #1
 8015794:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015798:	687b      	ldr	r3, [r7, #4]
 801579a:	2201      	movs	r2, #1
 801579c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80157a0:	687b      	ldr	r3, [r7, #4]
 80157a2:	2201      	movs	r2, #1
 80157a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80157a8:	687b      	ldr	r3, [r7, #4]
 80157aa:	2201      	movs	r2, #1
 80157ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80157b0:	687b      	ldr	r3, [r7, #4]
 80157b2:	2201      	movs	r2, #1
 80157b4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80157b8:	687b      	ldr	r3, [r7, #4]
 80157ba:	2201      	movs	r2, #1
 80157bc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80157c0:	687b      	ldr	r3, [r7, #4]
 80157c2:	2201      	movs	r2, #1
 80157c4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80157c8:	687b      	ldr	r3, [r7, #4]
 80157ca:	2201      	movs	r2, #1
 80157cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80157d0:	2300      	movs	r3, #0
 80157d2:	4618      	mov	r0, r3
 80157d4:	3708      	adds	r7, #8
 80157d6:	46bd      	mov	sp, r7
 80157d8:	bd80      	pop	{r7, pc}
	...

080157dc <HAL_TIM_Base_Start>:
 80157dc:	b480      	push	{r7}
 80157de:	b085      	sub	sp, #20
 80157e0:	af00      	add	r7, sp, #0
 80157e2:	6078      	str	r0, [r7, #4]
 80157e4:	687b      	ldr	r3, [r7, #4]
 80157e6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80157ea:	b2db      	uxtb	r3, r3
 80157ec:	2b01      	cmp	r3, #1
 80157ee:	d001      	beq.n	80157f4 <HAL_TIM_Base_Start+0x18>
 80157f0:	2301      	movs	r3, #1
 80157f2:	e046      	b.n	8015882 <HAL_TIM_Base_Start+0xa6>
 80157f4:	687b      	ldr	r3, [r7, #4]
 80157f6:	2202      	movs	r2, #2
 80157f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80157fc:	687b      	ldr	r3, [r7, #4]
 80157fe:	681b      	ldr	r3, [r3, #0]
 8015800:	4a23      	ldr	r2, [pc, #140]	; (8015890 <HAL_TIM_Base_Start+0xb4>)
 8015802:	4293      	cmp	r3, r2
 8015804:	d022      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 8015806:	687b      	ldr	r3, [r7, #4]
 8015808:	681b      	ldr	r3, [r3, #0]
 801580a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801580e:	d01d      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 8015810:	687b      	ldr	r3, [r7, #4]
 8015812:	681b      	ldr	r3, [r3, #0]
 8015814:	4a1f      	ldr	r2, [pc, #124]	; (8015894 <HAL_TIM_Base_Start+0xb8>)
 8015816:	4293      	cmp	r3, r2
 8015818:	d018      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 801581a:	687b      	ldr	r3, [r7, #4]
 801581c:	681b      	ldr	r3, [r3, #0]
 801581e:	4a1e      	ldr	r2, [pc, #120]	; (8015898 <HAL_TIM_Base_Start+0xbc>)
 8015820:	4293      	cmp	r3, r2
 8015822:	d013      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 8015824:	687b      	ldr	r3, [r7, #4]
 8015826:	681b      	ldr	r3, [r3, #0]
 8015828:	4a1c      	ldr	r2, [pc, #112]	; (801589c <HAL_TIM_Base_Start+0xc0>)
 801582a:	4293      	cmp	r3, r2
 801582c:	d00e      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 801582e:	687b      	ldr	r3, [r7, #4]
 8015830:	681b      	ldr	r3, [r3, #0]
 8015832:	4a1b      	ldr	r2, [pc, #108]	; (80158a0 <HAL_TIM_Base_Start+0xc4>)
 8015834:	4293      	cmp	r3, r2
 8015836:	d009      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 8015838:	687b      	ldr	r3, [r7, #4]
 801583a:	681b      	ldr	r3, [r3, #0]
 801583c:	4a19      	ldr	r2, [pc, #100]	; (80158a4 <HAL_TIM_Base_Start+0xc8>)
 801583e:	4293      	cmp	r3, r2
 8015840:	d004      	beq.n	801584c <HAL_TIM_Base_Start+0x70>
 8015842:	687b      	ldr	r3, [r7, #4]
 8015844:	681b      	ldr	r3, [r3, #0]
 8015846:	4a18      	ldr	r2, [pc, #96]	; (80158a8 <HAL_TIM_Base_Start+0xcc>)
 8015848:	4293      	cmp	r3, r2
 801584a:	d111      	bne.n	8015870 <HAL_TIM_Base_Start+0x94>
 801584c:	687b      	ldr	r3, [r7, #4]
 801584e:	681b      	ldr	r3, [r3, #0]
 8015850:	689b      	ldr	r3, [r3, #8]
 8015852:	f003 0307 	and.w	r3, r3, #7
 8015856:	60fb      	str	r3, [r7, #12]
 8015858:	68fb      	ldr	r3, [r7, #12]
 801585a:	2b06      	cmp	r3, #6
 801585c:	d010      	beq.n	8015880 <HAL_TIM_Base_Start+0xa4>
 801585e:	687b      	ldr	r3, [r7, #4]
 8015860:	681b      	ldr	r3, [r3, #0]
 8015862:	681a      	ldr	r2, [r3, #0]
 8015864:	687b      	ldr	r3, [r7, #4]
 8015866:	681b      	ldr	r3, [r3, #0]
 8015868:	f042 0201 	orr.w	r2, r2, #1
 801586c:	601a      	str	r2, [r3, #0]
 801586e:	e007      	b.n	8015880 <HAL_TIM_Base_Start+0xa4>
 8015870:	687b      	ldr	r3, [r7, #4]
 8015872:	681b      	ldr	r3, [r3, #0]
 8015874:	681a      	ldr	r2, [r3, #0]
 8015876:	687b      	ldr	r3, [r7, #4]
 8015878:	681b      	ldr	r3, [r3, #0]
 801587a:	f042 0201 	orr.w	r2, r2, #1
 801587e:	601a      	str	r2, [r3, #0]
 8015880:	2300      	movs	r3, #0
 8015882:	4618      	mov	r0, r3
 8015884:	3714      	adds	r7, #20
 8015886:	46bd      	mov	sp, r7
 8015888:	f85d 7b04 	ldr.w	r7, [sp], #4
 801588c:	4770      	bx	lr
 801588e:	bf00      	nop
 8015890:	40010000 	.word	0x40010000
 8015894:	40000400 	.word	0x40000400
 8015898:	40000800 	.word	0x40000800
 801589c:	40000c00 	.word	0x40000c00
 80158a0:	40010400 	.word	0x40010400
 80158a4:	40014000 	.word	0x40014000
 80158a8:	40001800 	.word	0x40001800

080158ac <HAL_TIM_Base_Start_IT>:
 80158ac:	b480      	push	{r7}
 80158ae:	b085      	sub	sp, #20
 80158b0:	af00      	add	r7, sp, #0
 80158b2:	6078      	str	r0, [r7, #4]
 80158b4:	687b      	ldr	r3, [r7, #4]
 80158b6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80158ba:	b2db      	uxtb	r3, r3
 80158bc:	2b01      	cmp	r3, #1
 80158be:	d001      	beq.n	80158c4 <HAL_TIM_Base_Start_IT+0x18>
 80158c0:	2301      	movs	r3, #1
 80158c2:	e04e      	b.n	8015962 <HAL_TIM_Base_Start_IT+0xb6>
 80158c4:	687b      	ldr	r3, [r7, #4]
 80158c6:	2202      	movs	r2, #2
 80158c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80158cc:	687b      	ldr	r3, [r7, #4]
 80158ce:	681b      	ldr	r3, [r3, #0]
 80158d0:	68da      	ldr	r2, [r3, #12]
 80158d2:	687b      	ldr	r3, [r7, #4]
 80158d4:	681b      	ldr	r3, [r3, #0]
 80158d6:	f042 0201 	orr.w	r2, r2, #1
 80158da:	60da      	str	r2, [r3, #12]
 80158dc:	687b      	ldr	r3, [r7, #4]
 80158de:	681b      	ldr	r3, [r3, #0]
 80158e0:	4a23      	ldr	r2, [pc, #140]	; (8015970 <HAL_TIM_Base_Start_IT+0xc4>)
 80158e2:	4293      	cmp	r3, r2
 80158e4:	d022      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 80158e6:	687b      	ldr	r3, [r7, #4]
 80158e8:	681b      	ldr	r3, [r3, #0]
 80158ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80158ee:	d01d      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 80158f0:	687b      	ldr	r3, [r7, #4]
 80158f2:	681b      	ldr	r3, [r3, #0]
 80158f4:	4a1f      	ldr	r2, [pc, #124]	; (8015974 <HAL_TIM_Base_Start_IT+0xc8>)
 80158f6:	4293      	cmp	r3, r2
 80158f8:	d018      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 80158fa:	687b      	ldr	r3, [r7, #4]
 80158fc:	681b      	ldr	r3, [r3, #0]
 80158fe:	4a1e      	ldr	r2, [pc, #120]	; (8015978 <HAL_TIM_Base_Start_IT+0xcc>)
 8015900:	4293      	cmp	r3, r2
 8015902:	d013      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 8015904:	687b      	ldr	r3, [r7, #4]
 8015906:	681b      	ldr	r3, [r3, #0]
 8015908:	4a1c      	ldr	r2, [pc, #112]	; (801597c <HAL_TIM_Base_Start_IT+0xd0>)
 801590a:	4293      	cmp	r3, r2
 801590c:	d00e      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 801590e:	687b      	ldr	r3, [r7, #4]
 8015910:	681b      	ldr	r3, [r3, #0]
 8015912:	4a1b      	ldr	r2, [pc, #108]	; (8015980 <HAL_TIM_Base_Start_IT+0xd4>)
 8015914:	4293      	cmp	r3, r2
 8015916:	d009      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 8015918:	687b      	ldr	r3, [r7, #4]
 801591a:	681b      	ldr	r3, [r3, #0]
 801591c:	4a19      	ldr	r2, [pc, #100]	; (8015984 <HAL_TIM_Base_Start_IT+0xd8>)
 801591e:	4293      	cmp	r3, r2
 8015920:	d004      	beq.n	801592c <HAL_TIM_Base_Start_IT+0x80>
 8015922:	687b      	ldr	r3, [r7, #4]
 8015924:	681b      	ldr	r3, [r3, #0]
 8015926:	4a18      	ldr	r2, [pc, #96]	; (8015988 <HAL_TIM_Base_Start_IT+0xdc>)
 8015928:	4293      	cmp	r3, r2
 801592a:	d111      	bne.n	8015950 <HAL_TIM_Base_Start_IT+0xa4>
 801592c:	687b      	ldr	r3, [r7, #4]
 801592e:	681b      	ldr	r3, [r3, #0]
 8015930:	689b      	ldr	r3, [r3, #8]
 8015932:	f003 0307 	and.w	r3, r3, #7
 8015936:	60fb      	str	r3, [r7, #12]
 8015938:	68fb      	ldr	r3, [r7, #12]
 801593a:	2b06      	cmp	r3, #6
 801593c:	d010      	beq.n	8015960 <HAL_TIM_Base_Start_IT+0xb4>
 801593e:	687b      	ldr	r3, [r7, #4]
 8015940:	681b      	ldr	r3, [r3, #0]
 8015942:	681a      	ldr	r2, [r3, #0]
 8015944:	687b      	ldr	r3, [r7, #4]
 8015946:	681b      	ldr	r3, [r3, #0]
 8015948:	f042 0201 	orr.w	r2, r2, #1
 801594c:	601a      	str	r2, [r3, #0]
 801594e:	e007      	b.n	8015960 <HAL_TIM_Base_Start_IT+0xb4>
 8015950:	687b      	ldr	r3, [r7, #4]
 8015952:	681b      	ldr	r3, [r3, #0]
 8015954:	681a      	ldr	r2, [r3, #0]
 8015956:	687b      	ldr	r3, [r7, #4]
 8015958:	681b      	ldr	r3, [r3, #0]
 801595a:	f042 0201 	orr.w	r2, r2, #1
 801595e:	601a      	str	r2, [r3, #0]
 8015960:	2300      	movs	r3, #0
 8015962:	4618      	mov	r0, r3
 8015964:	3714      	adds	r7, #20
 8015966:	46bd      	mov	sp, r7
 8015968:	f85d 7b04 	ldr.w	r7, [sp], #4
 801596c:	4770      	bx	lr
 801596e:	bf00      	nop
 8015970:	40010000 	.word	0x40010000
 8015974:	40000400 	.word	0x40000400
 8015978:	40000800 	.word	0x40000800
 801597c:	40000c00 	.word	0x40000c00
 8015980:	40010400 	.word	0x40010400
 8015984:	40014000 	.word	0x40014000
 8015988:	40001800 	.word	0x40001800

0801598c <HAL_TIM_OC_Init>:
 801598c:	b580      	push	{r7, lr}
 801598e:	b082      	sub	sp, #8
 8015990:	af00      	add	r7, sp, #0
 8015992:	6078      	str	r0, [r7, #4]
 8015994:	687b      	ldr	r3, [r7, #4]
 8015996:	2b00      	cmp	r3, #0
 8015998:	d101      	bne.n	801599e <HAL_TIM_OC_Init+0x12>
 801599a:	2301      	movs	r3, #1
 801599c:	e041      	b.n	8015a22 <HAL_TIM_OC_Init+0x96>
 801599e:	687b      	ldr	r3, [r7, #4]
 80159a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80159a4:	b2db      	uxtb	r3, r3
 80159a6:	2b00      	cmp	r3, #0
 80159a8:	d106      	bne.n	80159b8 <HAL_TIM_OC_Init+0x2c>
 80159aa:	687b      	ldr	r3, [r7, #4]
 80159ac:	2200      	movs	r2, #0
 80159ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80159b2:	6878      	ldr	r0, [r7, #4]
 80159b4:	f000 f839 	bl	8015a2a <HAL_TIM_OC_MspInit>
 80159b8:	687b      	ldr	r3, [r7, #4]
 80159ba:	2202      	movs	r2, #2
 80159bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80159c0:	687b      	ldr	r3, [r7, #4]
 80159c2:	681a      	ldr	r2, [r3, #0]
 80159c4:	687b      	ldr	r3, [r7, #4]
 80159c6:	3304      	adds	r3, #4
 80159c8:	4619      	mov	r1, r3
 80159ca:	4610      	mov	r0, r2
 80159cc:	f000 fc64 	bl	8016298 <TIM_Base_SetConfig>
 80159d0:	687b      	ldr	r3, [r7, #4]
 80159d2:	2201      	movs	r2, #1
 80159d4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80159d8:	687b      	ldr	r3, [r7, #4]
 80159da:	2201      	movs	r2, #1
 80159dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80159e0:	687b      	ldr	r3, [r7, #4]
 80159e2:	2201      	movs	r2, #1
 80159e4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80159e8:	687b      	ldr	r3, [r7, #4]
 80159ea:	2201      	movs	r2, #1
 80159ec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80159f0:	687b      	ldr	r3, [r7, #4]
 80159f2:	2201      	movs	r2, #1
 80159f4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80159f8:	687b      	ldr	r3, [r7, #4]
 80159fa:	2201      	movs	r2, #1
 80159fc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8015a00:	687b      	ldr	r3, [r7, #4]
 8015a02:	2201      	movs	r2, #1
 8015a04:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8015a08:	687b      	ldr	r3, [r7, #4]
 8015a0a:	2201      	movs	r2, #1
 8015a0c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8015a10:	687b      	ldr	r3, [r7, #4]
 8015a12:	2201      	movs	r2, #1
 8015a14:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8015a18:	687b      	ldr	r3, [r7, #4]
 8015a1a:	2201      	movs	r2, #1
 8015a1c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015a20:	2300      	movs	r3, #0
 8015a22:	4618      	mov	r0, r3
 8015a24:	3708      	adds	r7, #8
 8015a26:	46bd      	mov	sp, r7
 8015a28:	bd80      	pop	{r7, pc}

08015a2a <HAL_TIM_OC_MspInit>:
 8015a2a:	b480      	push	{r7}
 8015a2c:	b083      	sub	sp, #12
 8015a2e:	af00      	add	r7, sp, #0
 8015a30:	6078      	str	r0, [r7, #4]
 8015a32:	bf00      	nop
 8015a34:	370c      	adds	r7, #12
 8015a36:	46bd      	mov	sp, r7
 8015a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a3c:	4770      	bx	lr

08015a3e <HAL_TIM_PWM_Init>:
 8015a3e:	b580      	push	{r7, lr}
 8015a40:	b082      	sub	sp, #8
 8015a42:	af00      	add	r7, sp, #0
 8015a44:	6078      	str	r0, [r7, #4]
 8015a46:	687b      	ldr	r3, [r7, #4]
 8015a48:	2b00      	cmp	r3, #0
 8015a4a:	d101      	bne.n	8015a50 <HAL_TIM_PWM_Init+0x12>
 8015a4c:	2301      	movs	r3, #1
 8015a4e:	e041      	b.n	8015ad4 <HAL_TIM_PWM_Init+0x96>
 8015a50:	687b      	ldr	r3, [r7, #4]
 8015a52:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015a56:	b2db      	uxtb	r3, r3
 8015a58:	2b00      	cmp	r3, #0
 8015a5a:	d106      	bne.n	8015a6a <HAL_TIM_PWM_Init+0x2c>
 8015a5c:	687b      	ldr	r3, [r7, #4]
 8015a5e:	2200      	movs	r2, #0
 8015a60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015a64:	6878      	ldr	r0, [r7, #4]
 8015a66:	f7ee fdad 	bl	80045c4 <HAL_TIM_PWM_MspInit>
 8015a6a:	687b      	ldr	r3, [r7, #4]
 8015a6c:	2202      	movs	r2, #2
 8015a6e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015a72:	687b      	ldr	r3, [r7, #4]
 8015a74:	681a      	ldr	r2, [r3, #0]
 8015a76:	687b      	ldr	r3, [r7, #4]
 8015a78:	3304      	adds	r3, #4
 8015a7a:	4619      	mov	r1, r3
 8015a7c:	4610      	mov	r0, r2
 8015a7e:	f000 fc0b 	bl	8016298 <TIM_Base_SetConfig>
 8015a82:	687b      	ldr	r3, [r7, #4]
 8015a84:	2201      	movs	r2, #1
 8015a86:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8015a8a:	687b      	ldr	r3, [r7, #4]
 8015a8c:	2201      	movs	r2, #1
 8015a8e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015a92:	687b      	ldr	r3, [r7, #4]
 8015a94:	2201      	movs	r2, #1
 8015a96:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015a9a:	687b      	ldr	r3, [r7, #4]
 8015a9c:	2201      	movs	r2, #1
 8015a9e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015aa2:	687b      	ldr	r3, [r7, #4]
 8015aa4:	2201      	movs	r2, #1
 8015aa6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015aaa:	687b      	ldr	r3, [r7, #4]
 8015aac:	2201      	movs	r2, #1
 8015aae:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8015ab2:	687b      	ldr	r3, [r7, #4]
 8015ab4:	2201      	movs	r2, #1
 8015ab6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8015aba:	687b      	ldr	r3, [r7, #4]
 8015abc:	2201      	movs	r2, #1
 8015abe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8015ac2:	687b      	ldr	r3, [r7, #4]
 8015ac4:	2201      	movs	r2, #1
 8015ac6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8015aca:	687b      	ldr	r3, [r7, #4]
 8015acc:	2201      	movs	r2, #1
 8015ace:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015ad2:	2300      	movs	r3, #0
 8015ad4:	4618      	mov	r0, r3
 8015ad6:	3708      	adds	r7, #8
 8015ad8:	46bd      	mov	sp, r7
 8015ada:	bd80      	pop	{r7, pc}

08015adc <HAL_TIM_PWM_Start>:
 8015adc:	b580      	push	{r7, lr}
 8015ade:	b084      	sub	sp, #16
 8015ae0:	af00      	add	r7, sp, #0
 8015ae2:	6078      	str	r0, [r7, #4]
 8015ae4:	6039      	str	r1, [r7, #0]
 8015ae6:	683b      	ldr	r3, [r7, #0]
 8015ae8:	2b00      	cmp	r3, #0
 8015aea:	d109      	bne.n	8015b00 <HAL_TIM_PWM_Start+0x24>
 8015aec:	687b      	ldr	r3, [r7, #4]
 8015aee:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8015af2:	b2db      	uxtb	r3, r3
 8015af4:	2b01      	cmp	r3, #1
 8015af6:	bf14      	ite	ne
 8015af8:	2301      	movne	r3, #1
 8015afa:	2300      	moveq	r3, #0
 8015afc:	b2db      	uxtb	r3, r3
 8015afe:	e022      	b.n	8015b46 <HAL_TIM_PWM_Start+0x6a>
 8015b00:	683b      	ldr	r3, [r7, #0]
 8015b02:	2b04      	cmp	r3, #4
 8015b04:	d109      	bne.n	8015b1a <HAL_TIM_PWM_Start+0x3e>
 8015b06:	687b      	ldr	r3, [r7, #4]
 8015b08:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8015b0c:	b2db      	uxtb	r3, r3
 8015b0e:	2b01      	cmp	r3, #1
 8015b10:	bf14      	ite	ne
 8015b12:	2301      	movne	r3, #1
 8015b14:	2300      	moveq	r3, #0
 8015b16:	b2db      	uxtb	r3, r3
 8015b18:	e015      	b.n	8015b46 <HAL_TIM_PWM_Start+0x6a>
 8015b1a:	683b      	ldr	r3, [r7, #0]
 8015b1c:	2b08      	cmp	r3, #8
 8015b1e:	d109      	bne.n	8015b34 <HAL_TIM_PWM_Start+0x58>
 8015b20:	687b      	ldr	r3, [r7, #4]
 8015b22:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8015b26:	b2db      	uxtb	r3, r3
 8015b28:	2b01      	cmp	r3, #1
 8015b2a:	bf14      	ite	ne
 8015b2c:	2301      	movne	r3, #1
 8015b2e:	2300      	moveq	r3, #0
 8015b30:	b2db      	uxtb	r3, r3
 8015b32:	e008      	b.n	8015b46 <HAL_TIM_PWM_Start+0x6a>
 8015b34:	687b      	ldr	r3, [r7, #4]
 8015b36:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8015b3a:	b2db      	uxtb	r3, r3
 8015b3c:	2b01      	cmp	r3, #1
 8015b3e:	bf14      	ite	ne
 8015b40:	2301      	movne	r3, #1
 8015b42:	2300      	moveq	r3, #0
 8015b44:	b2db      	uxtb	r3, r3
 8015b46:	2b00      	cmp	r3, #0
 8015b48:	d001      	beq.n	8015b4e <HAL_TIM_PWM_Start+0x72>
 8015b4a:	2301      	movs	r3, #1
 8015b4c:	e07c      	b.n	8015c48 <HAL_TIM_PWM_Start+0x16c>
 8015b4e:	683b      	ldr	r3, [r7, #0]
 8015b50:	2b00      	cmp	r3, #0
 8015b52:	d104      	bne.n	8015b5e <HAL_TIM_PWM_Start+0x82>
 8015b54:	687b      	ldr	r3, [r7, #4]
 8015b56:	2202      	movs	r2, #2
 8015b58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015b5c:	e013      	b.n	8015b86 <HAL_TIM_PWM_Start+0xaa>
 8015b5e:	683b      	ldr	r3, [r7, #0]
 8015b60:	2b04      	cmp	r3, #4
 8015b62:	d104      	bne.n	8015b6e <HAL_TIM_PWM_Start+0x92>
 8015b64:	687b      	ldr	r3, [r7, #4]
 8015b66:	2202      	movs	r2, #2
 8015b68:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015b6c:	e00b      	b.n	8015b86 <HAL_TIM_PWM_Start+0xaa>
 8015b6e:	683b      	ldr	r3, [r7, #0]
 8015b70:	2b08      	cmp	r3, #8
 8015b72:	d104      	bne.n	8015b7e <HAL_TIM_PWM_Start+0xa2>
 8015b74:	687b      	ldr	r3, [r7, #4]
 8015b76:	2202      	movs	r2, #2
 8015b78:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015b7c:	e003      	b.n	8015b86 <HAL_TIM_PWM_Start+0xaa>
 8015b7e:	687b      	ldr	r3, [r7, #4]
 8015b80:	2202      	movs	r2, #2
 8015b82:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015b86:	687b      	ldr	r3, [r7, #4]
 8015b88:	681b      	ldr	r3, [r3, #0]
 8015b8a:	2201      	movs	r2, #1
 8015b8c:	6839      	ldr	r1, [r7, #0]
 8015b8e:	4618      	mov	r0, r3
 8015b90:	f000 fe6c 	bl	801686c <TIM_CCxChannelCmd>
 8015b94:	687b      	ldr	r3, [r7, #4]
 8015b96:	681b      	ldr	r3, [r3, #0]
 8015b98:	4a2d      	ldr	r2, [pc, #180]	; (8015c50 <HAL_TIM_PWM_Start+0x174>)
 8015b9a:	4293      	cmp	r3, r2
 8015b9c:	d004      	beq.n	8015ba8 <HAL_TIM_PWM_Start+0xcc>
 8015b9e:	687b      	ldr	r3, [r7, #4]
 8015ba0:	681b      	ldr	r3, [r3, #0]
 8015ba2:	4a2c      	ldr	r2, [pc, #176]	; (8015c54 <HAL_TIM_PWM_Start+0x178>)
 8015ba4:	4293      	cmp	r3, r2
 8015ba6:	d101      	bne.n	8015bac <HAL_TIM_PWM_Start+0xd0>
 8015ba8:	2301      	movs	r3, #1
 8015baa:	e000      	b.n	8015bae <HAL_TIM_PWM_Start+0xd2>
 8015bac:	2300      	movs	r3, #0
 8015bae:	2b00      	cmp	r3, #0
 8015bb0:	d007      	beq.n	8015bc2 <HAL_TIM_PWM_Start+0xe6>
 8015bb2:	687b      	ldr	r3, [r7, #4]
 8015bb4:	681b      	ldr	r3, [r3, #0]
 8015bb6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8015bb8:	687b      	ldr	r3, [r7, #4]
 8015bba:	681b      	ldr	r3, [r3, #0]
 8015bbc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8015bc0:	645a      	str	r2, [r3, #68]	; 0x44
 8015bc2:	687b      	ldr	r3, [r7, #4]
 8015bc4:	681b      	ldr	r3, [r3, #0]
 8015bc6:	4a22      	ldr	r2, [pc, #136]	; (8015c50 <HAL_TIM_PWM_Start+0x174>)
 8015bc8:	4293      	cmp	r3, r2
 8015bca:	d022      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015bcc:	687b      	ldr	r3, [r7, #4]
 8015bce:	681b      	ldr	r3, [r3, #0]
 8015bd0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015bd4:	d01d      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015bd6:	687b      	ldr	r3, [r7, #4]
 8015bd8:	681b      	ldr	r3, [r3, #0]
 8015bda:	4a1f      	ldr	r2, [pc, #124]	; (8015c58 <HAL_TIM_PWM_Start+0x17c>)
 8015bdc:	4293      	cmp	r3, r2
 8015bde:	d018      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015be0:	687b      	ldr	r3, [r7, #4]
 8015be2:	681b      	ldr	r3, [r3, #0]
 8015be4:	4a1d      	ldr	r2, [pc, #116]	; (8015c5c <HAL_TIM_PWM_Start+0x180>)
 8015be6:	4293      	cmp	r3, r2
 8015be8:	d013      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015bea:	687b      	ldr	r3, [r7, #4]
 8015bec:	681b      	ldr	r3, [r3, #0]
 8015bee:	4a1c      	ldr	r2, [pc, #112]	; (8015c60 <HAL_TIM_PWM_Start+0x184>)
 8015bf0:	4293      	cmp	r3, r2
 8015bf2:	d00e      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015bf4:	687b      	ldr	r3, [r7, #4]
 8015bf6:	681b      	ldr	r3, [r3, #0]
 8015bf8:	4a16      	ldr	r2, [pc, #88]	; (8015c54 <HAL_TIM_PWM_Start+0x178>)
 8015bfa:	4293      	cmp	r3, r2
 8015bfc:	d009      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015bfe:	687b      	ldr	r3, [r7, #4]
 8015c00:	681b      	ldr	r3, [r3, #0]
 8015c02:	4a18      	ldr	r2, [pc, #96]	; (8015c64 <HAL_TIM_PWM_Start+0x188>)
 8015c04:	4293      	cmp	r3, r2
 8015c06:	d004      	beq.n	8015c12 <HAL_TIM_PWM_Start+0x136>
 8015c08:	687b      	ldr	r3, [r7, #4]
 8015c0a:	681b      	ldr	r3, [r3, #0]
 8015c0c:	4a16      	ldr	r2, [pc, #88]	; (8015c68 <HAL_TIM_PWM_Start+0x18c>)
 8015c0e:	4293      	cmp	r3, r2
 8015c10:	d111      	bne.n	8015c36 <HAL_TIM_PWM_Start+0x15a>
 8015c12:	687b      	ldr	r3, [r7, #4]
 8015c14:	681b      	ldr	r3, [r3, #0]
 8015c16:	689b      	ldr	r3, [r3, #8]
 8015c18:	f003 0307 	and.w	r3, r3, #7
 8015c1c:	60fb      	str	r3, [r7, #12]
 8015c1e:	68fb      	ldr	r3, [r7, #12]
 8015c20:	2b06      	cmp	r3, #6
 8015c22:	d010      	beq.n	8015c46 <HAL_TIM_PWM_Start+0x16a>
 8015c24:	687b      	ldr	r3, [r7, #4]
 8015c26:	681b      	ldr	r3, [r3, #0]
 8015c28:	681a      	ldr	r2, [r3, #0]
 8015c2a:	687b      	ldr	r3, [r7, #4]
 8015c2c:	681b      	ldr	r3, [r3, #0]
 8015c2e:	f042 0201 	orr.w	r2, r2, #1
 8015c32:	601a      	str	r2, [r3, #0]
 8015c34:	e007      	b.n	8015c46 <HAL_TIM_PWM_Start+0x16a>
 8015c36:	687b      	ldr	r3, [r7, #4]
 8015c38:	681b      	ldr	r3, [r3, #0]
 8015c3a:	681a      	ldr	r2, [r3, #0]
 8015c3c:	687b      	ldr	r3, [r7, #4]
 8015c3e:	681b      	ldr	r3, [r3, #0]
 8015c40:	f042 0201 	orr.w	r2, r2, #1
 8015c44:	601a      	str	r2, [r3, #0]
 8015c46:	2300      	movs	r3, #0
 8015c48:	4618      	mov	r0, r3
 8015c4a:	3710      	adds	r7, #16
 8015c4c:	46bd      	mov	sp, r7
 8015c4e:	bd80      	pop	{r7, pc}
 8015c50:	40010000 	.word	0x40010000
 8015c54:	40010400 	.word	0x40010400
 8015c58:	40000400 	.word	0x40000400
 8015c5c:	40000800 	.word	0x40000800
 8015c60:	40000c00 	.word	0x40000c00
 8015c64:	40014000 	.word	0x40014000
 8015c68:	40001800 	.word	0x40001800

08015c6c <HAL_TIM_IRQHandler>:
 8015c6c:	b580      	push	{r7, lr}
 8015c6e:	b082      	sub	sp, #8
 8015c70:	af00      	add	r7, sp, #0
 8015c72:	6078      	str	r0, [r7, #4]
 8015c74:	687b      	ldr	r3, [r7, #4]
 8015c76:	681b      	ldr	r3, [r3, #0]
 8015c78:	691b      	ldr	r3, [r3, #16]
 8015c7a:	f003 0302 	and.w	r3, r3, #2
 8015c7e:	2b02      	cmp	r3, #2
 8015c80:	d122      	bne.n	8015cc8 <HAL_TIM_IRQHandler+0x5c>
 8015c82:	687b      	ldr	r3, [r7, #4]
 8015c84:	681b      	ldr	r3, [r3, #0]
 8015c86:	68db      	ldr	r3, [r3, #12]
 8015c88:	f003 0302 	and.w	r3, r3, #2
 8015c8c:	2b02      	cmp	r3, #2
 8015c8e:	d11b      	bne.n	8015cc8 <HAL_TIM_IRQHandler+0x5c>
 8015c90:	687b      	ldr	r3, [r7, #4]
 8015c92:	681b      	ldr	r3, [r3, #0]
 8015c94:	f06f 0202 	mvn.w	r2, #2
 8015c98:	611a      	str	r2, [r3, #16]
 8015c9a:	687b      	ldr	r3, [r7, #4]
 8015c9c:	2201      	movs	r2, #1
 8015c9e:	771a      	strb	r2, [r3, #28]
 8015ca0:	687b      	ldr	r3, [r7, #4]
 8015ca2:	681b      	ldr	r3, [r3, #0]
 8015ca4:	699b      	ldr	r3, [r3, #24]
 8015ca6:	f003 0303 	and.w	r3, r3, #3
 8015caa:	2b00      	cmp	r3, #0
 8015cac:	d003      	beq.n	8015cb6 <HAL_TIM_IRQHandler+0x4a>
 8015cae:	6878      	ldr	r0, [r7, #4]
 8015cb0:	f000 fad3 	bl	801625a <HAL_TIM_IC_CaptureCallback>
 8015cb4:	e005      	b.n	8015cc2 <HAL_TIM_IRQHandler+0x56>
 8015cb6:	6878      	ldr	r0, [r7, #4]
 8015cb8:	f000 fac5 	bl	8016246 <HAL_TIM_OC_DelayElapsedCallback>
 8015cbc:	6878      	ldr	r0, [r7, #4]
 8015cbe:	f000 fad6 	bl	801626e <HAL_TIM_PWM_PulseFinishedCallback>
 8015cc2:	687b      	ldr	r3, [r7, #4]
 8015cc4:	2200      	movs	r2, #0
 8015cc6:	771a      	strb	r2, [r3, #28]
 8015cc8:	687b      	ldr	r3, [r7, #4]
 8015cca:	681b      	ldr	r3, [r3, #0]
 8015ccc:	691b      	ldr	r3, [r3, #16]
 8015cce:	f003 0304 	and.w	r3, r3, #4
 8015cd2:	2b04      	cmp	r3, #4
 8015cd4:	d122      	bne.n	8015d1c <HAL_TIM_IRQHandler+0xb0>
 8015cd6:	687b      	ldr	r3, [r7, #4]
 8015cd8:	681b      	ldr	r3, [r3, #0]
 8015cda:	68db      	ldr	r3, [r3, #12]
 8015cdc:	f003 0304 	and.w	r3, r3, #4
 8015ce0:	2b04      	cmp	r3, #4
 8015ce2:	d11b      	bne.n	8015d1c <HAL_TIM_IRQHandler+0xb0>
 8015ce4:	687b      	ldr	r3, [r7, #4]
 8015ce6:	681b      	ldr	r3, [r3, #0]
 8015ce8:	f06f 0204 	mvn.w	r2, #4
 8015cec:	611a      	str	r2, [r3, #16]
 8015cee:	687b      	ldr	r3, [r7, #4]
 8015cf0:	2202      	movs	r2, #2
 8015cf2:	771a      	strb	r2, [r3, #28]
 8015cf4:	687b      	ldr	r3, [r7, #4]
 8015cf6:	681b      	ldr	r3, [r3, #0]
 8015cf8:	699b      	ldr	r3, [r3, #24]
 8015cfa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8015cfe:	2b00      	cmp	r3, #0
 8015d00:	d003      	beq.n	8015d0a <HAL_TIM_IRQHandler+0x9e>
 8015d02:	6878      	ldr	r0, [r7, #4]
 8015d04:	f000 faa9 	bl	801625a <HAL_TIM_IC_CaptureCallback>
 8015d08:	e005      	b.n	8015d16 <HAL_TIM_IRQHandler+0xaa>
 8015d0a:	6878      	ldr	r0, [r7, #4]
 8015d0c:	f000 fa9b 	bl	8016246 <HAL_TIM_OC_DelayElapsedCallback>
 8015d10:	6878      	ldr	r0, [r7, #4]
 8015d12:	f000 faac 	bl	801626e <HAL_TIM_PWM_PulseFinishedCallback>
 8015d16:	687b      	ldr	r3, [r7, #4]
 8015d18:	2200      	movs	r2, #0
 8015d1a:	771a      	strb	r2, [r3, #28]
 8015d1c:	687b      	ldr	r3, [r7, #4]
 8015d1e:	681b      	ldr	r3, [r3, #0]
 8015d20:	691b      	ldr	r3, [r3, #16]
 8015d22:	f003 0308 	and.w	r3, r3, #8
 8015d26:	2b08      	cmp	r3, #8
 8015d28:	d122      	bne.n	8015d70 <HAL_TIM_IRQHandler+0x104>
 8015d2a:	687b      	ldr	r3, [r7, #4]
 8015d2c:	681b      	ldr	r3, [r3, #0]
 8015d2e:	68db      	ldr	r3, [r3, #12]
 8015d30:	f003 0308 	and.w	r3, r3, #8
 8015d34:	2b08      	cmp	r3, #8
 8015d36:	d11b      	bne.n	8015d70 <HAL_TIM_IRQHandler+0x104>
 8015d38:	687b      	ldr	r3, [r7, #4]
 8015d3a:	681b      	ldr	r3, [r3, #0]
 8015d3c:	f06f 0208 	mvn.w	r2, #8
 8015d40:	611a      	str	r2, [r3, #16]
 8015d42:	687b      	ldr	r3, [r7, #4]
 8015d44:	2204      	movs	r2, #4
 8015d46:	771a      	strb	r2, [r3, #28]
 8015d48:	687b      	ldr	r3, [r7, #4]
 8015d4a:	681b      	ldr	r3, [r3, #0]
 8015d4c:	69db      	ldr	r3, [r3, #28]
 8015d4e:	f003 0303 	and.w	r3, r3, #3
 8015d52:	2b00      	cmp	r3, #0
 8015d54:	d003      	beq.n	8015d5e <HAL_TIM_IRQHandler+0xf2>
 8015d56:	6878      	ldr	r0, [r7, #4]
 8015d58:	f000 fa7f 	bl	801625a <HAL_TIM_IC_CaptureCallback>
 8015d5c:	e005      	b.n	8015d6a <HAL_TIM_IRQHandler+0xfe>
 8015d5e:	6878      	ldr	r0, [r7, #4]
 8015d60:	f000 fa71 	bl	8016246 <HAL_TIM_OC_DelayElapsedCallback>
 8015d64:	6878      	ldr	r0, [r7, #4]
 8015d66:	f000 fa82 	bl	801626e <HAL_TIM_PWM_PulseFinishedCallback>
 8015d6a:	687b      	ldr	r3, [r7, #4]
 8015d6c:	2200      	movs	r2, #0
 8015d6e:	771a      	strb	r2, [r3, #28]
 8015d70:	687b      	ldr	r3, [r7, #4]
 8015d72:	681b      	ldr	r3, [r3, #0]
 8015d74:	691b      	ldr	r3, [r3, #16]
 8015d76:	f003 0310 	and.w	r3, r3, #16
 8015d7a:	2b10      	cmp	r3, #16
 8015d7c:	d122      	bne.n	8015dc4 <HAL_TIM_IRQHandler+0x158>
 8015d7e:	687b      	ldr	r3, [r7, #4]
 8015d80:	681b      	ldr	r3, [r3, #0]
 8015d82:	68db      	ldr	r3, [r3, #12]
 8015d84:	f003 0310 	and.w	r3, r3, #16
 8015d88:	2b10      	cmp	r3, #16
 8015d8a:	d11b      	bne.n	8015dc4 <HAL_TIM_IRQHandler+0x158>
 8015d8c:	687b      	ldr	r3, [r7, #4]
 8015d8e:	681b      	ldr	r3, [r3, #0]
 8015d90:	f06f 0210 	mvn.w	r2, #16
 8015d94:	611a      	str	r2, [r3, #16]
 8015d96:	687b      	ldr	r3, [r7, #4]
 8015d98:	2208      	movs	r2, #8
 8015d9a:	771a      	strb	r2, [r3, #28]
 8015d9c:	687b      	ldr	r3, [r7, #4]
 8015d9e:	681b      	ldr	r3, [r3, #0]
 8015da0:	69db      	ldr	r3, [r3, #28]
 8015da2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8015da6:	2b00      	cmp	r3, #0
 8015da8:	d003      	beq.n	8015db2 <HAL_TIM_IRQHandler+0x146>
 8015daa:	6878      	ldr	r0, [r7, #4]
 8015dac:	f000 fa55 	bl	801625a <HAL_TIM_IC_CaptureCallback>
 8015db0:	e005      	b.n	8015dbe <HAL_TIM_IRQHandler+0x152>
 8015db2:	6878      	ldr	r0, [r7, #4]
 8015db4:	f000 fa47 	bl	8016246 <HAL_TIM_OC_DelayElapsedCallback>
 8015db8:	6878      	ldr	r0, [r7, #4]
 8015dba:	f000 fa58 	bl	801626e <HAL_TIM_PWM_PulseFinishedCallback>
 8015dbe:	687b      	ldr	r3, [r7, #4]
 8015dc0:	2200      	movs	r2, #0
 8015dc2:	771a      	strb	r2, [r3, #28]
 8015dc4:	687b      	ldr	r3, [r7, #4]
 8015dc6:	681b      	ldr	r3, [r3, #0]
 8015dc8:	691b      	ldr	r3, [r3, #16]
 8015dca:	f003 0301 	and.w	r3, r3, #1
 8015dce:	2b01      	cmp	r3, #1
 8015dd0:	d10e      	bne.n	8015df0 <HAL_TIM_IRQHandler+0x184>
 8015dd2:	687b      	ldr	r3, [r7, #4]
 8015dd4:	681b      	ldr	r3, [r3, #0]
 8015dd6:	68db      	ldr	r3, [r3, #12]
 8015dd8:	f003 0301 	and.w	r3, r3, #1
 8015ddc:	2b01      	cmp	r3, #1
 8015dde:	d107      	bne.n	8015df0 <HAL_TIM_IRQHandler+0x184>
 8015de0:	687b      	ldr	r3, [r7, #4]
 8015de2:	681b      	ldr	r3, [r3, #0]
 8015de4:	f06f 0201 	mvn.w	r2, #1
 8015de8:	611a      	str	r2, [r3, #16]
 8015dea:	6878      	ldr	r0, [r7, #4]
 8015dec:	f7ed feda 	bl	8003ba4 <HAL_TIM_PeriodElapsedCallback>
 8015df0:	687b      	ldr	r3, [r7, #4]
 8015df2:	681b      	ldr	r3, [r3, #0]
 8015df4:	691b      	ldr	r3, [r3, #16]
 8015df6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015dfa:	2b80      	cmp	r3, #128	; 0x80
 8015dfc:	d10e      	bne.n	8015e1c <HAL_TIM_IRQHandler+0x1b0>
 8015dfe:	687b      	ldr	r3, [r7, #4]
 8015e00:	681b      	ldr	r3, [r3, #0]
 8015e02:	68db      	ldr	r3, [r3, #12]
 8015e04:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015e08:	2b80      	cmp	r3, #128	; 0x80
 8015e0a:	d107      	bne.n	8015e1c <HAL_TIM_IRQHandler+0x1b0>
 8015e0c:	687b      	ldr	r3, [r7, #4]
 8015e0e:	681b      	ldr	r3, [r3, #0]
 8015e10:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8015e14:	611a      	str	r2, [r3, #16]
 8015e16:	6878      	ldr	r0, [r7, #4]
 8015e18:	f000 fe26 	bl	8016a68 <HAL_TIMEx_BreakCallback>
 8015e1c:	687b      	ldr	r3, [r7, #4]
 8015e1e:	681b      	ldr	r3, [r3, #0]
 8015e20:	691b      	ldr	r3, [r3, #16]
 8015e22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015e26:	2b40      	cmp	r3, #64	; 0x40
 8015e28:	d10e      	bne.n	8015e48 <HAL_TIM_IRQHandler+0x1dc>
 8015e2a:	687b      	ldr	r3, [r7, #4]
 8015e2c:	681b      	ldr	r3, [r3, #0]
 8015e2e:	68db      	ldr	r3, [r3, #12]
 8015e30:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015e34:	2b40      	cmp	r3, #64	; 0x40
 8015e36:	d107      	bne.n	8015e48 <HAL_TIM_IRQHandler+0x1dc>
 8015e38:	687b      	ldr	r3, [r7, #4]
 8015e3a:	681b      	ldr	r3, [r3, #0]
 8015e3c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8015e40:	611a      	str	r2, [r3, #16]
 8015e42:	6878      	ldr	r0, [r7, #4]
 8015e44:	f000 fa1d 	bl	8016282 <HAL_TIM_TriggerCallback>
 8015e48:	687b      	ldr	r3, [r7, #4]
 8015e4a:	681b      	ldr	r3, [r3, #0]
 8015e4c:	691b      	ldr	r3, [r3, #16]
 8015e4e:	f003 0320 	and.w	r3, r3, #32
 8015e52:	2b20      	cmp	r3, #32
 8015e54:	d10e      	bne.n	8015e74 <HAL_TIM_IRQHandler+0x208>
 8015e56:	687b      	ldr	r3, [r7, #4]
 8015e58:	681b      	ldr	r3, [r3, #0]
 8015e5a:	68db      	ldr	r3, [r3, #12]
 8015e5c:	f003 0320 	and.w	r3, r3, #32
 8015e60:	2b20      	cmp	r3, #32
 8015e62:	d107      	bne.n	8015e74 <HAL_TIM_IRQHandler+0x208>
 8015e64:	687b      	ldr	r3, [r7, #4]
 8015e66:	681b      	ldr	r3, [r3, #0]
 8015e68:	f06f 0220 	mvn.w	r2, #32
 8015e6c:	611a      	str	r2, [r3, #16]
 8015e6e:	6878      	ldr	r0, [r7, #4]
 8015e70:	f000 fdf0 	bl	8016a54 <HAL_TIMEx_CommutCallback>
 8015e74:	bf00      	nop
 8015e76:	3708      	adds	r7, #8
 8015e78:	46bd      	mov	sp, r7
 8015e7a:	bd80      	pop	{r7, pc}

08015e7c <HAL_TIM_OC_ConfigChannel>:
 8015e7c:	b580      	push	{r7, lr}
 8015e7e:	b086      	sub	sp, #24
 8015e80:	af00      	add	r7, sp, #0
 8015e82:	60f8      	str	r0, [r7, #12]
 8015e84:	60b9      	str	r1, [r7, #8]
 8015e86:	607a      	str	r2, [r7, #4]
 8015e88:	2300      	movs	r3, #0
 8015e8a:	75fb      	strb	r3, [r7, #23]
 8015e8c:	68fb      	ldr	r3, [r7, #12]
 8015e8e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8015e92:	2b01      	cmp	r3, #1
 8015e94:	d101      	bne.n	8015e9a <HAL_TIM_OC_ConfigChannel+0x1e>
 8015e96:	2302      	movs	r3, #2
 8015e98:	e048      	b.n	8015f2c <HAL_TIM_OC_ConfigChannel+0xb0>
 8015e9a:	68fb      	ldr	r3, [r7, #12]
 8015e9c:	2201      	movs	r2, #1
 8015e9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015ea2:	687b      	ldr	r3, [r7, #4]
 8015ea4:	2b0c      	cmp	r3, #12
 8015ea6:	d839      	bhi.n	8015f1c <HAL_TIM_OC_ConfigChannel+0xa0>
 8015ea8:	a201      	add	r2, pc, #4	; (adr r2, 8015eb0 <HAL_TIM_OC_ConfigChannel+0x34>)
 8015eaa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015eae:	bf00      	nop
 8015eb0:	08015ee5 	.word	0x08015ee5
 8015eb4:	08015f1d 	.word	0x08015f1d
 8015eb8:	08015f1d 	.word	0x08015f1d
 8015ebc:	08015f1d 	.word	0x08015f1d
 8015ec0:	08015ef3 	.word	0x08015ef3
 8015ec4:	08015f1d 	.word	0x08015f1d
 8015ec8:	08015f1d 	.word	0x08015f1d
 8015ecc:	08015f1d 	.word	0x08015f1d
 8015ed0:	08015f01 	.word	0x08015f01
 8015ed4:	08015f1d 	.word	0x08015f1d
 8015ed8:	08015f1d 	.word	0x08015f1d
 8015edc:	08015f1d 	.word	0x08015f1d
 8015ee0:	08015f0f 	.word	0x08015f0f
 8015ee4:	68fb      	ldr	r3, [r7, #12]
 8015ee6:	681b      	ldr	r3, [r3, #0]
 8015ee8:	68b9      	ldr	r1, [r7, #8]
 8015eea:	4618      	mov	r0, r3
 8015eec:	f000 fa74 	bl	80163d8 <TIM_OC1_SetConfig>
 8015ef0:	e017      	b.n	8015f22 <HAL_TIM_OC_ConfigChannel+0xa6>
 8015ef2:	68fb      	ldr	r3, [r7, #12]
 8015ef4:	681b      	ldr	r3, [r3, #0]
 8015ef6:	68b9      	ldr	r1, [r7, #8]
 8015ef8:	4618      	mov	r0, r3
 8015efa:	f000 fadd 	bl	80164b8 <TIM_OC2_SetConfig>
 8015efe:	e010      	b.n	8015f22 <HAL_TIM_OC_ConfigChannel+0xa6>
 8015f00:	68fb      	ldr	r3, [r7, #12]
 8015f02:	681b      	ldr	r3, [r3, #0]
 8015f04:	68b9      	ldr	r1, [r7, #8]
 8015f06:	4618      	mov	r0, r3
 8015f08:	f000 fb4c 	bl	80165a4 <TIM_OC3_SetConfig>
 8015f0c:	e009      	b.n	8015f22 <HAL_TIM_OC_ConfigChannel+0xa6>
 8015f0e:	68fb      	ldr	r3, [r7, #12]
 8015f10:	681b      	ldr	r3, [r3, #0]
 8015f12:	68b9      	ldr	r1, [r7, #8]
 8015f14:	4618      	mov	r0, r3
 8015f16:	f000 fbb9 	bl	801668c <TIM_OC4_SetConfig>
 8015f1a:	e002      	b.n	8015f22 <HAL_TIM_OC_ConfigChannel+0xa6>
 8015f1c:	2301      	movs	r3, #1
 8015f1e:	75fb      	strb	r3, [r7, #23]
 8015f20:	bf00      	nop
 8015f22:	68fb      	ldr	r3, [r7, #12]
 8015f24:	2200      	movs	r2, #0
 8015f26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015f2a:	7dfb      	ldrb	r3, [r7, #23]
 8015f2c:	4618      	mov	r0, r3
 8015f2e:	3718      	adds	r7, #24
 8015f30:	46bd      	mov	sp, r7
 8015f32:	bd80      	pop	{r7, pc}

08015f34 <HAL_TIM_PWM_ConfigChannel>:
 8015f34:	b580      	push	{r7, lr}
 8015f36:	b086      	sub	sp, #24
 8015f38:	af00      	add	r7, sp, #0
 8015f3a:	60f8      	str	r0, [r7, #12]
 8015f3c:	60b9      	str	r1, [r7, #8]
 8015f3e:	607a      	str	r2, [r7, #4]
 8015f40:	2300      	movs	r3, #0
 8015f42:	75fb      	strb	r3, [r7, #23]
 8015f44:	68fb      	ldr	r3, [r7, #12]
 8015f46:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8015f4a:	2b01      	cmp	r3, #1
 8015f4c:	d101      	bne.n	8015f52 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8015f4e:	2302      	movs	r3, #2
 8015f50:	e0ae      	b.n	80160b0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8015f52:	68fb      	ldr	r3, [r7, #12]
 8015f54:	2201      	movs	r2, #1
 8015f56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015f5a:	687b      	ldr	r3, [r7, #4]
 8015f5c:	2b0c      	cmp	r3, #12
 8015f5e:	f200 809f 	bhi.w	80160a0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8015f62:	a201      	add	r2, pc, #4	; (adr r2, 8015f68 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8015f64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015f68:	08015f9d 	.word	0x08015f9d
 8015f6c:	080160a1 	.word	0x080160a1
 8015f70:	080160a1 	.word	0x080160a1
 8015f74:	080160a1 	.word	0x080160a1
 8015f78:	08015fdd 	.word	0x08015fdd
 8015f7c:	080160a1 	.word	0x080160a1
 8015f80:	080160a1 	.word	0x080160a1
 8015f84:	080160a1 	.word	0x080160a1
 8015f88:	0801601f 	.word	0x0801601f
 8015f8c:	080160a1 	.word	0x080160a1
 8015f90:	080160a1 	.word	0x080160a1
 8015f94:	080160a1 	.word	0x080160a1
 8015f98:	0801605f 	.word	0x0801605f
 8015f9c:	68fb      	ldr	r3, [r7, #12]
 8015f9e:	681b      	ldr	r3, [r3, #0]
 8015fa0:	68b9      	ldr	r1, [r7, #8]
 8015fa2:	4618      	mov	r0, r3
 8015fa4:	f000 fa18 	bl	80163d8 <TIM_OC1_SetConfig>
 8015fa8:	68fb      	ldr	r3, [r7, #12]
 8015faa:	681b      	ldr	r3, [r3, #0]
 8015fac:	699a      	ldr	r2, [r3, #24]
 8015fae:	68fb      	ldr	r3, [r7, #12]
 8015fb0:	681b      	ldr	r3, [r3, #0]
 8015fb2:	f042 0208 	orr.w	r2, r2, #8
 8015fb6:	619a      	str	r2, [r3, #24]
 8015fb8:	68fb      	ldr	r3, [r7, #12]
 8015fba:	681b      	ldr	r3, [r3, #0]
 8015fbc:	699a      	ldr	r2, [r3, #24]
 8015fbe:	68fb      	ldr	r3, [r7, #12]
 8015fc0:	681b      	ldr	r3, [r3, #0]
 8015fc2:	f022 0204 	bic.w	r2, r2, #4
 8015fc6:	619a      	str	r2, [r3, #24]
 8015fc8:	68fb      	ldr	r3, [r7, #12]
 8015fca:	681b      	ldr	r3, [r3, #0]
 8015fcc:	6999      	ldr	r1, [r3, #24]
 8015fce:	68bb      	ldr	r3, [r7, #8]
 8015fd0:	691a      	ldr	r2, [r3, #16]
 8015fd2:	68fb      	ldr	r3, [r7, #12]
 8015fd4:	681b      	ldr	r3, [r3, #0]
 8015fd6:	430a      	orrs	r2, r1
 8015fd8:	619a      	str	r2, [r3, #24]
 8015fda:	e064      	b.n	80160a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8015fdc:	68fb      	ldr	r3, [r7, #12]
 8015fde:	681b      	ldr	r3, [r3, #0]
 8015fe0:	68b9      	ldr	r1, [r7, #8]
 8015fe2:	4618      	mov	r0, r3
 8015fe4:	f000 fa68 	bl	80164b8 <TIM_OC2_SetConfig>
 8015fe8:	68fb      	ldr	r3, [r7, #12]
 8015fea:	681b      	ldr	r3, [r3, #0]
 8015fec:	699a      	ldr	r2, [r3, #24]
 8015fee:	68fb      	ldr	r3, [r7, #12]
 8015ff0:	681b      	ldr	r3, [r3, #0]
 8015ff2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8015ff6:	619a      	str	r2, [r3, #24]
 8015ff8:	68fb      	ldr	r3, [r7, #12]
 8015ffa:	681b      	ldr	r3, [r3, #0]
 8015ffc:	699a      	ldr	r2, [r3, #24]
 8015ffe:	68fb      	ldr	r3, [r7, #12]
 8016000:	681b      	ldr	r3, [r3, #0]
 8016002:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8016006:	619a      	str	r2, [r3, #24]
 8016008:	68fb      	ldr	r3, [r7, #12]
 801600a:	681b      	ldr	r3, [r3, #0]
 801600c:	6999      	ldr	r1, [r3, #24]
 801600e:	68bb      	ldr	r3, [r7, #8]
 8016010:	691b      	ldr	r3, [r3, #16]
 8016012:	021a      	lsls	r2, r3, #8
 8016014:	68fb      	ldr	r3, [r7, #12]
 8016016:	681b      	ldr	r3, [r3, #0]
 8016018:	430a      	orrs	r2, r1
 801601a:	619a      	str	r2, [r3, #24]
 801601c:	e043      	b.n	80160a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 801601e:	68fb      	ldr	r3, [r7, #12]
 8016020:	681b      	ldr	r3, [r3, #0]
 8016022:	68b9      	ldr	r1, [r7, #8]
 8016024:	4618      	mov	r0, r3
 8016026:	f000 fabd 	bl	80165a4 <TIM_OC3_SetConfig>
 801602a:	68fb      	ldr	r3, [r7, #12]
 801602c:	681b      	ldr	r3, [r3, #0]
 801602e:	69da      	ldr	r2, [r3, #28]
 8016030:	68fb      	ldr	r3, [r7, #12]
 8016032:	681b      	ldr	r3, [r3, #0]
 8016034:	f042 0208 	orr.w	r2, r2, #8
 8016038:	61da      	str	r2, [r3, #28]
 801603a:	68fb      	ldr	r3, [r7, #12]
 801603c:	681b      	ldr	r3, [r3, #0]
 801603e:	69da      	ldr	r2, [r3, #28]
 8016040:	68fb      	ldr	r3, [r7, #12]
 8016042:	681b      	ldr	r3, [r3, #0]
 8016044:	f022 0204 	bic.w	r2, r2, #4
 8016048:	61da      	str	r2, [r3, #28]
 801604a:	68fb      	ldr	r3, [r7, #12]
 801604c:	681b      	ldr	r3, [r3, #0]
 801604e:	69d9      	ldr	r1, [r3, #28]
 8016050:	68bb      	ldr	r3, [r7, #8]
 8016052:	691a      	ldr	r2, [r3, #16]
 8016054:	68fb      	ldr	r3, [r7, #12]
 8016056:	681b      	ldr	r3, [r3, #0]
 8016058:	430a      	orrs	r2, r1
 801605a:	61da      	str	r2, [r3, #28]
 801605c:	e023      	b.n	80160a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 801605e:	68fb      	ldr	r3, [r7, #12]
 8016060:	681b      	ldr	r3, [r3, #0]
 8016062:	68b9      	ldr	r1, [r7, #8]
 8016064:	4618      	mov	r0, r3
 8016066:	f000 fb11 	bl	801668c <TIM_OC4_SetConfig>
 801606a:	68fb      	ldr	r3, [r7, #12]
 801606c:	681b      	ldr	r3, [r3, #0]
 801606e:	69da      	ldr	r2, [r3, #28]
 8016070:	68fb      	ldr	r3, [r7, #12]
 8016072:	681b      	ldr	r3, [r3, #0]
 8016074:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8016078:	61da      	str	r2, [r3, #28]
 801607a:	68fb      	ldr	r3, [r7, #12]
 801607c:	681b      	ldr	r3, [r3, #0]
 801607e:	69da      	ldr	r2, [r3, #28]
 8016080:	68fb      	ldr	r3, [r7, #12]
 8016082:	681b      	ldr	r3, [r3, #0]
 8016084:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8016088:	61da      	str	r2, [r3, #28]
 801608a:	68fb      	ldr	r3, [r7, #12]
 801608c:	681b      	ldr	r3, [r3, #0]
 801608e:	69d9      	ldr	r1, [r3, #28]
 8016090:	68bb      	ldr	r3, [r7, #8]
 8016092:	691b      	ldr	r3, [r3, #16]
 8016094:	021a      	lsls	r2, r3, #8
 8016096:	68fb      	ldr	r3, [r7, #12]
 8016098:	681b      	ldr	r3, [r3, #0]
 801609a:	430a      	orrs	r2, r1
 801609c:	61da      	str	r2, [r3, #28]
 801609e:	e002      	b.n	80160a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80160a0:	2301      	movs	r3, #1
 80160a2:	75fb      	strb	r3, [r7, #23]
 80160a4:	bf00      	nop
 80160a6:	68fb      	ldr	r3, [r7, #12]
 80160a8:	2200      	movs	r2, #0
 80160aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80160ae:	7dfb      	ldrb	r3, [r7, #23]
 80160b0:	4618      	mov	r0, r3
 80160b2:	3718      	adds	r7, #24
 80160b4:	46bd      	mov	sp, r7
 80160b6:	bd80      	pop	{r7, pc}

080160b8 <HAL_TIM_ConfigClockSource>:
 80160b8:	b580      	push	{r7, lr}
 80160ba:	b084      	sub	sp, #16
 80160bc:	af00      	add	r7, sp, #0
 80160be:	6078      	str	r0, [r7, #4]
 80160c0:	6039      	str	r1, [r7, #0]
 80160c2:	2300      	movs	r3, #0
 80160c4:	73fb      	strb	r3, [r7, #15]
 80160c6:	687b      	ldr	r3, [r7, #4]
 80160c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80160cc:	2b01      	cmp	r3, #1
 80160ce:	d101      	bne.n	80160d4 <HAL_TIM_ConfigClockSource+0x1c>
 80160d0:	2302      	movs	r3, #2
 80160d2:	e0b4      	b.n	801623e <HAL_TIM_ConfigClockSource+0x186>
 80160d4:	687b      	ldr	r3, [r7, #4]
 80160d6:	2201      	movs	r2, #1
 80160d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80160dc:	687b      	ldr	r3, [r7, #4]
 80160de:	2202      	movs	r2, #2
 80160e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80160e4:	687b      	ldr	r3, [r7, #4]
 80160e6:	681b      	ldr	r3, [r3, #0]
 80160e8:	689b      	ldr	r3, [r3, #8]
 80160ea:	60bb      	str	r3, [r7, #8]
 80160ec:	68bb      	ldr	r3, [r7, #8]
 80160ee:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80160f2:	60bb      	str	r3, [r7, #8]
 80160f4:	68bb      	ldr	r3, [r7, #8]
 80160f6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80160fa:	60bb      	str	r3, [r7, #8]
 80160fc:	687b      	ldr	r3, [r7, #4]
 80160fe:	681b      	ldr	r3, [r3, #0]
 8016100:	68ba      	ldr	r2, [r7, #8]
 8016102:	609a      	str	r2, [r3, #8]
 8016104:	683b      	ldr	r3, [r7, #0]
 8016106:	681b      	ldr	r3, [r3, #0]
 8016108:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801610c:	d03e      	beq.n	801618c <HAL_TIM_ConfigClockSource+0xd4>
 801610e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8016112:	f200 8087 	bhi.w	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 8016116:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801611a:	f000 8086 	beq.w	801622a <HAL_TIM_ConfigClockSource+0x172>
 801611e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8016122:	d87f      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 8016124:	2b70      	cmp	r3, #112	; 0x70
 8016126:	d01a      	beq.n	801615e <HAL_TIM_ConfigClockSource+0xa6>
 8016128:	2b70      	cmp	r3, #112	; 0x70
 801612a:	d87b      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 801612c:	2b60      	cmp	r3, #96	; 0x60
 801612e:	d050      	beq.n	80161d2 <HAL_TIM_ConfigClockSource+0x11a>
 8016130:	2b60      	cmp	r3, #96	; 0x60
 8016132:	d877      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 8016134:	2b50      	cmp	r3, #80	; 0x50
 8016136:	d03c      	beq.n	80161b2 <HAL_TIM_ConfigClockSource+0xfa>
 8016138:	2b50      	cmp	r3, #80	; 0x50
 801613a:	d873      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 801613c:	2b40      	cmp	r3, #64	; 0x40
 801613e:	d058      	beq.n	80161f2 <HAL_TIM_ConfigClockSource+0x13a>
 8016140:	2b40      	cmp	r3, #64	; 0x40
 8016142:	d86f      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 8016144:	2b30      	cmp	r3, #48	; 0x30
 8016146:	d064      	beq.n	8016212 <HAL_TIM_ConfigClockSource+0x15a>
 8016148:	2b30      	cmp	r3, #48	; 0x30
 801614a:	d86b      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 801614c:	2b20      	cmp	r3, #32
 801614e:	d060      	beq.n	8016212 <HAL_TIM_ConfigClockSource+0x15a>
 8016150:	2b20      	cmp	r3, #32
 8016152:	d867      	bhi.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 8016154:	2b00      	cmp	r3, #0
 8016156:	d05c      	beq.n	8016212 <HAL_TIM_ConfigClockSource+0x15a>
 8016158:	2b10      	cmp	r3, #16
 801615a:	d05a      	beq.n	8016212 <HAL_TIM_ConfigClockSource+0x15a>
 801615c:	e062      	b.n	8016224 <HAL_TIM_ConfigClockSource+0x16c>
 801615e:	687b      	ldr	r3, [r7, #4]
 8016160:	6818      	ldr	r0, [r3, #0]
 8016162:	683b      	ldr	r3, [r7, #0]
 8016164:	6899      	ldr	r1, [r3, #8]
 8016166:	683b      	ldr	r3, [r7, #0]
 8016168:	685a      	ldr	r2, [r3, #4]
 801616a:	683b      	ldr	r3, [r7, #0]
 801616c:	68db      	ldr	r3, [r3, #12]
 801616e:	f000 fb5d 	bl	801682c <TIM_ETR_SetConfig>
 8016172:	687b      	ldr	r3, [r7, #4]
 8016174:	681b      	ldr	r3, [r3, #0]
 8016176:	689b      	ldr	r3, [r3, #8]
 8016178:	60bb      	str	r3, [r7, #8]
 801617a:	68bb      	ldr	r3, [r7, #8]
 801617c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8016180:	60bb      	str	r3, [r7, #8]
 8016182:	687b      	ldr	r3, [r7, #4]
 8016184:	681b      	ldr	r3, [r3, #0]
 8016186:	68ba      	ldr	r2, [r7, #8]
 8016188:	609a      	str	r2, [r3, #8]
 801618a:	e04f      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 801618c:	687b      	ldr	r3, [r7, #4]
 801618e:	6818      	ldr	r0, [r3, #0]
 8016190:	683b      	ldr	r3, [r7, #0]
 8016192:	6899      	ldr	r1, [r3, #8]
 8016194:	683b      	ldr	r3, [r7, #0]
 8016196:	685a      	ldr	r2, [r3, #4]
 8016198:	683b      	ldr	r3, [r7, #0]
 801619a:	68db      	ldr	r3, [r3, #12]
 801619c:	f000 fb46 	bl	801682c <TIM_ETR_SetConfig>
 80161a0:	687b      	ldr	r3, [r7, #4]
 80161a2:	681b      	ldr	r3, [r3, #0]
 80161a4:	689a      	ldr	r2, [r3, #8]
 80161a6:	687b      	ldr	r3, [r7, #4]
 80161a8:	681b      	ldr	r3, [r3, #0]
 80161aa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80161ae:	609a      	str	r2, [r3, #8]
 80161b0:	e03c      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 80161b2:	687b      	ldr	r3, [r7, #4]
 80161b4:	6818      	ldr	r0, [r3, #0]
 80161b6:	683b      	ldr	r3, [r7, #0]
 80161b8:	6859      	ldr	r1, [r3, #4]
 80161ba:	683b      	ldr	r3, [r7, #0]
 80161bc:	68db      	ldr	r3, [r3, #12]
 80161be:	461a      	mov	r2, r3
 80161c0:	f000 faba 	bl	8016738 <TIM_TI1_ConfigInputStage>
 80161c4:	687b      	ldr	r3, [r7, #4]
 80161c6:	681b      	ldr	r3, [r3, #0]
 80161c8:	2150      	movs	r1, #80	; 0x50
 80161ca:	4618      	mov	r0, r3
 80161cc:	f000 fb13 	bl	80167f6 <TIM_ITRx_SetConfig>
 80161d0:	e02c      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 80161d2:	687b      	ldr	r3, [r7, #4]
 80161d4:	6818      	ldr	r0, [r3, #0]
 80161d6:	683b      	ldr	r3, [r7, #0]
 80161d8:	6859      	ldr	r1, [r3, #4]
 80161da:	683b      	ldr	r3, [r7, #0]
 80161dc:	68db      	ldr	r3, [r3, #12]
 80161de:	461a      	mov	r2, r3
 80161e0:	f000 fad9 	bl	8016796 <TIM_TI2_ConfigInputStage>
 80161e4:	687b      	ldr	r3, [r7, #4]
 80161e6:	681b      	ldr	r3, [r3, #0]
 80161e8:	2160      	movs	r1, #96	; 0x60
 80161ea:	4618      	mov	r0, r3
 80161ec:	f000 fb03 	bl	80167f6 <TIM_ITRx_SetConfig>
 80161f0:	e01c      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 80161f2:	687b      	ldr	r3, [r7, #4]
 80161f4:	6818      	ldr	r0, [r3, #0]
 80161f6:	683b      	ldr	r3, [r7, #0]
 80161f8:	6859      	ldr	r1, [r3, #4]
 80161fa:	683b      	ldr	r3, [r7, #0]
 80161fc:	68db      	ldr	r3, [r3, #12]
 80161fe:	461a      	mov	r2, r3
 8016200:	f000 fa9a 	bl	8016738 <TIM_TI1_ConfigInputStage>
 8016204:	687b      	ldr	r3, [r7, #4]
 8016206:	681b      	ldr	r3, [r3, #0]
 8016208:	2140      	movs	r1, #64	; 0x40
 801620a:	4618      	mov	r0, r3
 801620c:	f000 faf3 	bl	80167f6 <TIM_ITRx_SetConfig>
 8016210:	e00c      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 8016212:	687b      	ldr	r3, [r7, #4]
 8016214:	681a      	ldr	r2, [r3, #0]
 8016216:	683b      	ldr	r3, [r7, #0]
 8016218:	681b      	ldr	r3, [r3, #0]
 801621a:	4619      	mov	r1, r3
 801621c:	4610      	mov	r0, r2
 801621e:	f000 faea 	bl	80167f6 <TIM_ITRx_SetConfig>
 8016222:	e003      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 8016224:	2301      	movs	r3, #1
 8016226:	73fb      	strb	r3, [r7, #15]
 8016228:	e000      	b.n	801622c <HAL_TIM_ConfigClockSource+0x174>
 801622a:	bf00      	nop
 801622c:	687b      	ldr	r3, [r7, #4]
 801622e:	2201      	movs	r2, #1
 8016230:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016234:	687b      	ldr	r3, [r7, #4]
 8016236:	2200      	movs	r2, #0
 8016238:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 801623c:	7bfb      	ldrb	r3, [r7, #15]
 801623e:	4618      	mov	r0, r3
 8016240:	3710      	adds	r7, #16
 8016242:	46bd      	mov	sp, r7
 8016244:	bd80      	pop	{r7, pc}

08016246 <HAL_TIM_OC_DelayElapsedCallback>:
 8016246:	b480      	push	{r7}
 8016248:	b083      	sub	sp, #12
 801624a:	af00      	add	r7, sp, #0
 801624c:	6078      	str	r0, [r7, #4]
 801624e:	bf00      	nop
 8016250:	370c      	adds	r7, #12
 8016252:	46bd      	mov	sp, r7
 8016254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016258:	4770      	bx	lr

0801625a <HAL_TIM_IC_CaptureCallback>:
 801625a:	b480      	push	{r7}
 801625c:	b083      	sub	sp, #12
 801625e:	af00      	add	r7, sp, #0
 8016260:	6078      	str	r0, [r7, #4]
 8016262:	bf00      	nop
 8016264:	370c      	adds	r7, #12
 8016266:	46bd      	mov	sp, r7
 8016268:	f85d 7b04 	ldr.w	r7, [sp], #4
 801626c:	4770      	bx	lr

0801626e <HAL_TIM_PWM_PulseFinishedCallback>:
 801626e:	b480      	push	{r7}
 8016270:	b083      	sub	sp, #12
 8016272:	af00      	add	r7, sp, #0
 8016274:	6078      	str	r0, [r7, #4]
 8016276:	bf00      	nop
 8016278:	370c      	adds	r7, #12
 801627a:	46bd      	mov	sp, r7
 801627c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016280:	4770      	bx	lr

08016282 <HAL_TIM_TriggerCallback>:
 8016282:	b480      	push	{r7}
 8016284:	b083      	sub	sp, #12
 8016286:	af00      	add	r7, sp, #0
 8016288:	6078      	str	r0, [r7, #4]
 801628a:	bf00      	nop
 801628c:	370c      	adds	r7, #12
 801628e:	46bd      	mov	sp, r7
 8016290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016294:	4770      	bx	lr
	...

08016298 <TIM_Base_SetConfig>:
 8016298:	b480      	push	{r7}
 801629a:	b085      	sub	sp, #20
 801629c:	af00      	add	r7, sp, #0
 801629e:	6078      	str	r0, [r7, #4]
 80162a0:	6039      	str	r1, [r7, #0]
 80162a2:	687b      	ldr	r3, [r7, #4]
 80162a4:	681b      	ldr	r3, [r3, #0]
 80162a6:	60fb      	str	r3, [r7, #12]
 80162a8:	687b      	ldr	r3, [r7, #4]
 80162aa:	4a40      	ldr	r2, [pc, #256]	; (80163ac <TIM_Base_SetConfig+0x114>)
 80162ac:	4293      	cmp	r3, r2
 80162ae:	d013      	beq.n	80162d8 <TIM_Base_SetConfig+0x40>
 80162b0:	687b      	ldr	r3, [r7, #4]
 80162b2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80162b6:	d00f      	beq.n	80162d8 <TIM_Base_SetConfig+0x40>
 80162b8:	687b      	ldr	r3, [r7, #4]
 80162ba:	4a3d      	ldr	r2, [pc, #244]	; (80163b0 <TIM_Base_SetConfig+0x118>)
 80162bc:	4293      	cmp	r3, r2
 80162be:	d00b      	beq.n	80162d8 <TIM_Base_SetConfig+0x40>
 80162c0:	687b      	ldr	r3, [r7, #4]
 80162c2:	4a3c      	ldr	r2, [pc, #240]	; (80163b4 <TIM_Base_SetConfig+0x11c>)
 80162c4:	4293      	cmp	r3, r2
 80162c6:	d007      	beq.n	80162d8 <TIM_Base_SetConfig+0x40>
 80162c8:	687b      	ldr	r3, [r7, #4]
 80162ca:	4a3b      	ldr	r2, [pc, #236]	; (80163b8 <TIM_Base_SetConfig+0x120>)
 80162cc:	4293      	cmp	r3, r2
 80162ce:	d003      	beq.n	80162d8 <TIM_Base_SetConfig+0x40>
 80162d0:	687b      	ldr	r3, [r7, #4]
 80162d2:	4a3a      	ldr	r2, [pc, #232]	; (80163bc <TIM_Base_SetConfig+0x124>)
 80162d4:	4293      	cmp	r3, r2
 80162d6:	d108      	bne.n	80162ea <TIM_Base_SetConfig+0x52>
 80162d8:	68fb      	ldr	r3, [r7, #12]
 80162da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80162de:	60fb      	str	r3, [r7, #12]
 80162e0:	683b      	ldr	r3, [r7, #0]
 80162e2:	685b      	ldr	r3, [r3, #4]
 80162e4:	68fa      	ldr	r2, [r7, #12]
 80162e6:	4313      	orrs	r3, r2
 80162e8:	60fb      	str	r3, [r7, #12]
 80162ea:	687b      	ldr	r3, [r7, #4]
 80162ec:	4a2f      	ldr	r2, [pc, #188]	; (80163ac <TIM_Base_SetConfig+0x114>)
 80162ee:	4293      	cmp	r3, r2
 80162f0:	d02b      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 80162f2:	687b      	ldr	r3, [r7, #4]
 80162f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80162f8:	d027      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 80162fa:	687b      	ldr	r3, [r7, #4]
 80162fc:	4a2c      	ldr	r2, [pc, #176]	; (80163b0 <TIM_Base_SetConfig+0x118>)
 80162fe:	4293      	cmp	r3, r2
 8016300:	d023      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 8016302:	687b      	ldr	r3, [r7, #4]
 8016304:	4a2b      	ldr	r2, [pc, #172]	; (80163b4 <TIM_Base_SetConfig+0x11c>)
 8016306:	4293      	cmp	r3, r2
 8016308:	d01f      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 801630a:	687b      	ldr	r3, [r7, #4]
 801630c:	4a2a      	ldr	r2, [pc, #168]	; (80163b8 <TIM_Base_SetConfig+0x120>)
 801630e:	4293      	cmp	r3, r2
 8016310:	d01b      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 8016312:	687b      	ldr	r3, [r7, #4]
 8016314:	4a29      	ldr	r2, [pc, #164]	; (80163bc <TIM_Base_SetConfig+0x124>)
 8016316:	4293      	cmp	r3, r2
 8016318:	d017      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 801631a:	687b      	ldr	r3, [r7, #4]
 801631c:	4a28      	ldr	r2, [pc, #160]	; (80163c0 <TIM_Base_SetConfig+0x128>)
 801631e:	4293      	cmp	r3, r2
 8016320:	d013      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 8016322:	687b      	ldr	r3, [r7, #4]
 8016324:	4a27      	ldr	r2, [pc, #156]	; (80163c4 <TIM_Base_SetConfig+0x12c>)
 8016326:	4293      	cmp	r3, r2
 8016328:	d00f      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 801632a:	687b      	ldr	r3, [r7, #4]
 801632c:	4a26      	ldr	r2, [pc, #152]	; (80163c8 <TIM_Base_SetConfig+0x130>)
 801632e:	4293      	cmp	r3, r2
 8016330:	d00b      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 8016332:	687b      	ldr	r3, [r7, #4]
 8016334:	4a25      	ldr	r2, [pc, #148]	; (80163cc <TIM_Base_SetConfig+0x134>)
 8016336:	4293      	cmp	r3, r2
 8016338:	d007      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 801633a:	687b      	ldr	r3, [r7, #4]
 801633c:	4a24      	ldr	r2, [pc, #144]	; (80163d0 <TIM_Base_SetConfig+0x138>)
 801633e:	4293      	cmp	r3, r2
 8016340:	d003      	beq.n	801634a <TIM_Base_SetConfig+0xb2>
 8016342:	687b      	ldr	r3, [r7, #4]
 8016344:	4a23      	ldr	r2, [pc, #140]	; (80163d4 <TIM_Base_SetConfig+0x13c>)
 8016346:	4293      	cmp	r3, r2
 8016348:	d108      	bne.n	801635c <TIM_Base_SetConfig+0xc4>
 801634a:	68fb      	ldr	r3, [r7, #12]
 801634c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016350:	60fb      	str	r3, [r7, #12]
 8016352:	683b      	ldr	r3, [r7, #0]
 8016354:	68db      	ldr	r3, [r3, #12]
 8016356:	68fa      	ldr	r2, [r7, #12]
 8016358:	4313      	orrs	r3, r2
 801635a:	60fb      	str	r3, [r7, #12]
 801635c:	68fb      	ldr	r3, [r7, #12]
 801635e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8016362:	683b      	ldr	r3, [r7, #0]
 8016364:	695b      	ldr	r3, [r3, #20]
 8016366:	4313      	orrs	r3, r2
 8016368:	60fb      	str	r3, [r7, #12]
 801636a:	687b      	ldr	r3, [r7, #4]
 801636c:	68fa      	ldr	r2, [r7, #12]
 801636e:	601a      	str	r2, [r3, #0]
 8016370:	683b      	ldr	r3, [r7, #0]
 8016372:	689a      	ldr	r2, [r3, #8]
 8016374:	687b      	ldr	r3, [r7, #4]
 8016376:	62da      	str	r2, [r3, #44]	; 0x2c
 8016378:	683b      	ldr	r3, [r7, #0]
 801637a:	681a      	ldr	r2, [r3, #0]
 801637c:	687b      	ldr	r3, [r7, #4]
 801637e:	629a      	str	r2, [r3, #40]	; 0x28
 8016380:	687b      	ldr	r3, [r7, #4]
 8016382:	4a0a      	ldr	r2, [pc, #40]	; (80163ac <TIM_Base_SetConfig+0x114>)
 8016384:	4293      	cmp	r3, r2
 8016386:	d003      	beq.n	8016390 <TIM_Base_SetConfig+0xf8>
 8016388:	687b      	ldr	r3, [r7, #4]
 801638a:	4a0c      	ldr	r2, [pc, #48]	; (80163bc <TIM_Base_SetConfig+0x124>)
 801638c:	4293      	cmp	r3, r2
 801638e:	d103      	bne.n	8016398 <TIM_Base_SetConfig+0x100>
 8016390:	683b      	ldr	r3, [r7, #0]
 8016392:	691a      	ldr	r2, [r3, #16]
 8016394:	687b      	ldr	r3, [r7, #4]
 8016396:	631a      	str	r2, [r3, #48]	; 0x30
 8016398:	687b      	ldr	r3, [r7, #4]
 801639a:	2201      	movs	r2, #1
 801639c:	615a      	str	r2, [r3, #20]
 801639e:	bf00      	nop
 80163a0:	3714      	adds	r7, #20
 80163a2:	46bd      	mov	sp, r7
 80163a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163a8:	4770      	bx	lr
 80163aa:	bf00      	nop
 80163ac:	40010000 	.word	0x40010000
 80163b0:	40000400 	.word	0x40000400
 80163b4:	40000800 	.word	0x40000800
 80163b8:	40000c00 	.word	0x40000c00
 80163bc:	40010400 	.word	0x40010400
 80163c0:	40014000 	.word	0x40014000
 80163c4:	40014400 	.word	0x40014400
 80163c8:	40014800 	.word	0x40014800
 80163cc:	40001800 	.word	0x40001800
 80163d0:	40001c00 	.word	0x40001c00
 80163d4:	40002000 	.word	0x40002000

080163d8 <TIM_OC1_SetConfig>:
 80163d8:	b480      	push	{r7}
 80163da:	b087      	sub	sp, #28
 80163dc:	af00      	add	r7, sp, #0
 80163de:	6078      	str	r0, [r7, #4]
 80163e0:	6039      	str	r1, [r7, #0]
 80163e2:	687b      	ldr	r3, [r7, #4]
 80163e4:	6a1b      	ldr	r3, [r3, #32]
 80163e6:	f023 0201 	bic.w	r2, r3, #1
 80163ea:	687b      	ldr	r3, [r7, #4]
 80163ec:	621a      	str	r2, [r3, #32]
 80163ee:	687b      	ldr	r3, [r7, #4]
 80163f0:	6a1b      	ldr	r3, [r3, #32]
 80163f2:	617b      	str	r3, [r7, #20]
 80163f4:	687b      	ldr	r3, [r7, #4]
 80163f6:	685b      	ldr	r3, [r3, #4]
 80163f8:	613b      	str	r3, [r7, #16]
 80163fa:	687b      	ldr	r3, [r7, #4]
 80163fc:	699b      	ldr	r3, [r3, #24]
 80163fe:	60fb      	str	r3, [r7, #12]
 8016400:	68fb      	ldr	r3, [r7, #12]
 8016402:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016406:	60fb      	str	r3, [r7, #12]
 8016408:	68fb      	ldr	r3, [r7, #12]
 801640a:	f023 0303 	bic.w	r3, r3, #3
 801640e:	60fb      	str	r3, [r7, #12]
 8016410:	683b      	ldr	r3, [r7, #0]
 8016412:	681b      	ldr	r3, [r3, #0]
 8016414:	68fa      	ldr	r2, [r7, #12]
 8016416:	4313      	orrs	r3, r2
 8016418:	60fb      	str	r3, [r7, #12]
 801641a:	697b      	ldr	r3, [r7, #20]
 801641c:	f023 0302 	bic.w	r3, r3, #2
 8016420:	617b      	str	r3, [r7, #20]
 8016422:	683b      	ldr	r3, [r7, #0]
 8016424:	689b      	ldr	r3, [r3, #8]
 8016426:	697a      	ldr	r2, [r7, #20]
 8016428:	4313      	orrs	r3, r2
 801642a:	617b      	str	r3, [r7, #20]
 801642c:	687b      	ldr	r3, [r7, #4]
 801642e:	4a20      	ldr	r2, [pc, #128]	; (80164b0 <TIM_OC1_SetConfig+0xd8>)
 8016430:	4293      	cmp	r3, r2
 8016432:	d003      	beq.n	801643c <TIM_OC1_SetConfig+0x64>
 8016434:	687b      	ldr	r3, [r7, #4]
 8016436:	4a1f      	ldr	r2, [pc, #124]	; (80164b4 <TIM_OC1_SetConfig+0xdc>)
 8016438:	4293      	cmp	r3, r2
 801643a:	d10c      	bne.n	8016456 <TIM_OC1_SetConfig+0x7e>
 801643c:	697b      	ldr	r3, [r7, #20]
 801643e:	f023 0308 	bic.w	r3, r3, #8
 8016442:	617b      	str	r3, [r7, #20]
 8016444:	683b      	ldr	r3, [r7, #0]
 8016446:	68db      	ldr	r3, [r3, #12]
 8016448:	697a      	ldr	r2, [r7, #20]
 801644a:	4313      	orrs	r3, r2
 801644c:	617b      	str	r3, [r7, #20]
 801644e:	697b      	ldr	r3, [r7, #20]
 8016450:	f023 0304 	bic.w	r3, r3, #4
 8016454:	617b      	str	r3, [r7, #20]
 8016456:	687b      	ldr	r3, [r7, #4]
 8016458:	4a15      	ldr	r2, [pc, #84]	; (80164b0 <TIM_OC1_SetConfig+0xd8>)
 801645a:	4293      	cmp	r3, r2
 801645c:	d003      	beq.n	8016466 <TIM_OC1_SetConfig+0x8e>
 801645e:	687b      	ldr	r3, [r7, #4]
 8016460:	4a14      	ldr	r2, [pc, #80]	; (80164b4 <TIM_OC1_SetConfig+0xdc>)
 8016462:	4293      	cmp	r3, r2
 8016464:	d111      	bne.n	801648a <TIM_OC1_SetConfig+0xb2>
 8016466:	693b      	ldr	r3, [r7, #16]
 8016468:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801646c:	613b      	str	r3, [r7, #16]
 801646e:	693b      	ldr	r3, [r7, #16]
 8016470:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016474:	613b      	str	r3, [r7, #16]
 8016476:	683b      	ldr	r3, [r7, #0]
 8016478:	695b      	ldr	r3, [r3, #20]
 801647a:	693a      	ldr	r2, [r7, #16]
 801647c:	4313      	orrs	r3, r2
 801647e:	613b      	str	r3, [r7, #16]
 8016480:	683b      	ldr	r3, [r7, #0]
 8016482:	699b      	ldr	r3, [r3, #24]
 8016484:	693a      	ldr	r2, [r7, #16]
 8016486:	4313      	orrs	r3, r2
 8016488:	613b      	str	r3, [r7, #16]
 801648a:	687b      	ldr	r3, [r7, #4]
 801648c:	693a      	ldr	r2, [r7, #16]
 801648e:	605a      	str	r2, [r3, #4]
 8016490:	687b      	ldr	r3, [r7, #4]
 8016492:	68fa      	ldr	r2, [r7, #12]
 8016494:	619a      	str	r2, [r3, #24]
 8016496:	683b      	ldr	r3, [r7, #0]
 8016498:	685a      	ldr	r2, [r3, #4]
 801649a:	687b      	ldr	r3, [r7, #4]
 801649c:	635a      	str	r2, [r3, #52]	; 0x34
 801649e:	687b      	ldr	r3, [r7, #4]
 80164a0:	697a      	ldr	r2, [r7, #20]
 80164a2:	621a      	str	r2, [r3, #32]
 80164a4:	bf00      	nop
 80164a6:	371c      	adds	r7, #28
 80164a8:	46bd      	mov	sp, r7
 80164aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80164ae:	4770      	bx	lr
 80164b0:	40010000 	.word	0x40010000
 80164b4:	40010400 	.word	0x40010400

080164b8 <TIM_OC2_SetConfig>:
 80164b8:	b480      	push	{r7}
 80164ba:	b087      	sub	sp, #28
 80164bc:	af00      	add	r7, sp, #0
 80164be:	6078      	str	r0, [r7, #4]
 80164c0:	6039      	str	r1, [r7, #0]
 80164c2:	687b      	ldr	r3, [r7, #4]
 80164c4:	6a1b      	ldr	r3, [r3, #32]
 80164c6:	f023 0210 	bic.w	r2, r3, #16
 80164ca:	687b      	ldr	r3, [r7, #4]
 80164cc:	621a      	str	r2, [r3, #32]
 80164ce:	687b      	ldr	r3, [r7, #4]
 80164d0:	6a1b      	ldr	r3, [r3, #32]
 80164d2:	617b      	str	r3, [r7, #20]
 80164d4:	687b      	ldr	r3, [r7, #4]
 80164d6:	685b      	ldr	r3, [r3, #4]
 80164d8:	613b      	str	r3, [r7, #16]
 80164da:	687b      	ldr	r3, [r7, #4]
 80164dc:	699b      	ldr	r3, [r3, #24]
 80164de:	60fb      	str	r3, [r7, #12]
 80164e0:	68fb      	ldr	r3, [r7, #12]
 80164e2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80164e6:	60fb      	str	r3, [r7, #12]
 80164e8:	68fb      	ldr	r3, [r7, #12]
 80164ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80164ee:	60fb      	str	r3, [r7, #12]
 80164f0:	683b      	ldr	r3, [r7, #0]
 80164f2:	681b      	ldr	r3, [r3, #0]
 80164f4:	021b      	lsls	r3, r3, #8
 80164f6:	68fa      	ldr	r2, [r7, #12]
 80164f8:	4313      	orrs	r3, r2
 80164fa:	60fb      	str	r3, [r7, #12]
 80164fc:	697b      	ldr	r3, [r7, #20]
 80164fe:	f023 0320 	bic.w	r3, r3, #32
 8016502:	617b      	str	r3, [r7, #20]
 8016504:	683b      	ldr	r3, [r7, #0]
 8016506:	689b      	ldr	r3, [r3, #8]
 8016508:	011b      	lsls	r3, r3, #4
 801650a:	697a      	ldr	r2, [r7, #20]
 801650c:	4313      	orrs	r3, r2
 801650e:	617b      	str	r3, [r7, #20]
 8016510:	687b      	ldr	r3, [r7, #4]
 8016512:	4a22      	ldr	r2, [pc, #136]	; (801659c <TIM_OC2_SetConfig+0xe4>)
 8016514:	4293      	cmp	r3, r2
 8016516:	d003      	beq.n	8016520 <TIM_OC2_SetConfig+0x68>
 8016518:	687b      	ldr	r3, [r7, #4]
 801651a:	4a21      	ldr	r2, [pc, #132]	; (80165a0 <TIM_OC2_SetConfig+0xe8>)
 801651c:	4293      	cmp	r3, r2
 801651e:	d10d      	bne.n	801653c <TIM_OC2_SetConfig+0x84>
 8016520:	697b      	ldr	r3, [r7, #20]
 8016522:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016526:	617b      	str	r3, [r7, #20]
 8016528:	683b      	ldr	r3, [r7, #0]
 801652a:	68db      	ldr	r3, [r3, #12]
 801652c:	011b      	lsls	r3, r3, #4
 801652e:	697a      	ldr	r2, [r7, #20]
 8016530:	4313      	orrs	r3, r2
 8016532:	617b      	str	r3, [r7, #20]
 8016534:	697b      	ldr	r3, [r7, #20]
 8016536:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801653a:	617b      	str	r3, [r7, #20]
 801653c:	687b      	ldr	r3, [r7, #4]
 801653e:	4a17      	ldr	r2, [pc, #92]	; (801659c <TIM_OC2_SetConfig+0xe4>)
 8016540:	4293      	cmp	r3, r2
 8016542:	d003      	beq.n	801654c <TIM_OC2_SetConfig+0x94>
 8016544:	687b      	ldr	r3, [r7, #4]
 8016546:	4a16      	ldr	r2, [pc, #88]	; (80165a0 <TIM_OC2_SetConfig+0xe8>)
 8016548:	4293      	cmp	r3, r2
 801654a:	d113      	bne.n	8016574 <TIM_OC2_SetConfig+0xbc>
 801654c:	693b      	ldr	r3, [r7, #16]
 801654e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8016552:	613b      	str	r3, [r7, #16]
 8016554:	693b      	ldr	r3, [r7, #16]
 8016556:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801655a:	613b      	str	r3, [r7, #16]
 801655c:	683b      	ldr	r3, [r7, #0]
 801655e:	695b      	ldr	r3, [r3, #20]
 8016560:	009b      	lsls	r3, r3, #2
 8016562:	693a      	ldr	r2, [r7, #16]
 8016564:	4313      	orrs	r3, r2
 8016566:	613b      	str	r3, [r7, #16]
 8016568:	683b      	ldr	r3, [r7, #0]
 801656a:	699b      	ldr	r3, [r3, #24]
 801656c:	009b      	lsls	r3, r3, #2
 801656e:	693a      	ldr	r2, [r7, #16]
 8016570:	4313      	orrs	r3, r2
 8016572:	613b      	str	r3, [r7, #16]
 8016574:	687b      	ldr	r3, [r7, #4]
 8016576:	693a      	ldr	r2, [r7, #16]
 8016578:	605a      	str	r2, [r3, #4]
 801657a:	687b      	ldr	r3, [r7, #4]
 801657c:	68fa      	ldr	r2, [r7, #12]
 801657e:	619a      	str	r2, [r3, #24]
 8016580:	683b      	ldr	r3, [r7, #0]
 8016582:	685a      	ldr	r2, [r3, #4]
 8016584:	687b      	ldr	r3, [r7, #4]
 8016586:	639a      	str	r2, [r3, #56]	; 0x38
 8016588:	687b      	ldr	r3, [r7, #4]
 801658a:	697a      	ldr	r2, [r7, #20]
 801658c:	621a      	str	r2, [r3, #32]
 801658e:	bf00      	nop
 8016590:	371c      	adds	r7, #28
 8016592:	46bd      	mov	sp, r7
 8016594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016598:	4770      	bx	lr
 801659a:	bf00      	nop
 801659c:	40010000 	.word	0x40010000
 80165a0:	40010400 	.word	0x40010400

080165a4 <TIM_OC3_SetConfig>:
 80165a4:	b480      	push	{r7}
 80165a6:	b087      	sub	sp, #28
 80165a8:	af00      	add	r7, sp, #0
 80165aa:	6078      	str	r0, [r7, #4]
 80165ac:	6039      	str	r1, [r7, #0]
 80165ae:	687b      	ldr	r3, [r7, #4]
 80165b0:	6a1b      	ldr	r3, [r3, #32]
 80165b2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80165b6:	687b      	ldr	r3, [r7, #4]
 80165b8:	621a      	str	r2, [r3, #32]
 80165ba:	687b      	ldr	r3, [r7, #4]
 80165bc:	6a1b      	ldr	r3, [r3, #32]
 80165be:	617b      	str	r3, [r7, #20]
 80165c0:	687b      	ldr	r3, [r7, #4]
 80165c2:	685b      	ldr	r3, [r3, #4]
 80165c4:	613b      	str	r3, [r7, #16]
 80165c6:	687b      	ldr	r3, [r7, #4]
 80165c8:	69db      	ldr	r3, [r3, #28]
 80165ca:	60fb      	str	r3, [r7, #12]
 80165cc:	68fb      	ldr	r3, [r7, #12]
 80165ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80165d2:	60fb      	str	r3, [r7, #12]
 80165d4:	68fb      	ldr	r3, [r7, #12]
 80165d6:	f023 0303 	bic.w	r3, r3, #3
 80165da:	60fb      	str	r3, [r7, #12]
 80165dc:	683b      	ldr	r3, [r7, #0]
 80165de:	681b      	ldr	r3, [r3, #0]
 80165e0:	68fa      	ldr	r2, [r7, #12]
 80165e2:	4313      	orrs	r3, r2
 80165e4:	60fb      	str	r3, [r7, #12]
 80165e6:	697b      	ldr	r3, [r7, #20]
 80165e8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80165ec:	617b      	str	r3, [r7, #20]
 80165ee:	683b      	ldr	r3, [r7, #0]
 80165f0:	689b      	ldr	r3, [r3, #8]
 80165f2:	021b      	lsls	r3, r3, #8
 80165f4:	697a      	ldr	r2, [r7, #20]
 80165f6:	4313      	orrs	r3, r2
 80165f8:	617b      	str	r3, [r7, #20]
 80165fa:	687b      	ldr	r3, [r7, #4]
 80165fc:	4a21      	ldr	r2, [pc, #132]	; (8016684 <TIM_OC3_SetConfig+0xe0>)
 80165fe:	4293      	cmp	r3, r2
 8016600:	d003      	beq.n	801660a <TIM_OC3_SetConfig+0x66>
 8016602:	687b      	ldr	r3, [r7, #4]
 8016604:	4a20      	ldr	r2, [pc, #128]	; (8016688 <TIM_OC3_SetConfig+0xe4>)
 8016606:	4293      	cmp	r3, r2
 8016608:	d10d      	bne.n	8016626 <TIM_OC3_SetConfig+0x82>
 801660a:	697b      	ldr	r3, [r7, #20]
 801660c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016610:	617b      	str	r3, [r7, #20]
 8016612:	683b      	ldr	r3, [r7, #0]
 8016614:	68db      	ldr	r3, [r3, #12]
 8016616:	021b      	lsls	r3, r3, #8
 8016618:	697a      	ldr	r2, [r7, #20]
 801661a:	4313      	orrs	r3, r2
 801661c:	617b      	str	r3, [r7, #20]
 801661e:	697b      	ldr	r3, [r7, #20]
 8016620:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8016624:	617b      	str	r3, [r7, #20]
 8016626:	687b      	ldr	r3, [r7, #4]
 8016628:	4a16      	ldr	r2, [pc, #88]	; (8016684 <TIM_OC3_SetConfig+0xe0>)
 801662a:	4293      	cmp	r3, r2
 801662c:	d003      	beq.n	8016636 <TIM_OC3_SetConfig+0x92>
 801662e:	687b      	ldr	r3, [r7, #4]
 8016630:	4a15      	ldr	r2, [pc, #84]	; (8016688 <TIM_OC3_SetConfig+0xe4>)
 8016632:	4293      	cmp	r3, r2
 8016634:	d113      	bne.n	801665e <TIM_OC3_SetConfig+0xba>
 8016636:	693b      	ldr	r3, [r7, #16]
 8016638:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801663c:	613b      	str	r3, [r7, #16]
 801663e:	693b      	ldr	r3, [r7, #16]
 8016640:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8016644:	613b      	str	r3, [r7, #16]
 8016646:	683b      	ldr	r3, [r7, #0]
 8016648:	695b      	ldr	r3, [r3, #20]
 801664a:	011b      	lsls	r3, r3, #4
 801664c:	693a      	ldr	r2, [r7, #16]
 801664e:	4313      	orrs	r3, r2
 8016650:	613b      	str	r3, [r7, #16]
 8016652:	683b      	ldr	r3, [r7, #0]
 8016654:	699b      	ldr	r3, [r3, #24]
 8016656:	011b      	lsls	r3, r3, #4
 8016658:	693a      	ldr	r2, [r7, #16]
 801665a:	4313      	orrs	r3, r2
 801665c:	613b      	str	r3, [r7, #16]
 801665e:	687b      	ldr	r3, [r7, #4]
 8016660:	693a      	ldr	r2, [r7, #16]
 8016662:	605a      	str	r2, [r3, #4]
 8016664:	687b      	ldr	r3, [r7, #4]
 8016666:	68fa      	ldr	r2, [r7, #12]
 8016668:	61da      	str	r2, [r3, #28]
 801666a:	683b      	ldr	r3, [r7, #0]
 801666c:	685a      	ldr	r2, [r3, #4]
 801666e:	687b      	ldr	r3, [r7, #4]
 8016670:	63da      	str	r2, [r3, #60]	; 0x3c
 8016672:	687b      	ldr	r3, [r7, #4]
 8016674:	697a      	ldr	r2, [r7, #20]
 8016676:	621a      	str	r2, [r3, #32]
 8016678:	bf00      	nop
 801667a:	371c      	adds	r7, #28
 801667c:	46bd      	mov	sp, r7
 801667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016682:	4770      	bx	lr
 8016684:	40010000 	.word	0x40010000
 8016688:	40010400 	.word	0x40010400

0801668c <TIM_OC4_SetConfig>:
 801668c:	b480      	push	{r7}
 801668e:	b087      	sub	sp, #28
 8016690:	af00      	add	r7, sp, #0
 8016692:	6078      	str	r0, [r7, #4]
 8016694:	6039      	str	r1, [r7, #0]
 8016696:	687b      	ldr	r3, [r7, #4]
 8016698:	6a1b      	ldr	r3, [r3, #32]
 801669a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 801669e:	687b      	ldr	r3, [r7, #4]
 80166a0:	621a      	str	r2, [r3, #32]
 80166a2:	687b      	ldr	r3, [r7, #4]
 80166a4:	6a1b      	ldr	r3, [r3, #32]
 80166a6:	613b      	str	r3, [r7, #16]
 80166a8:	687b      	ldr	r3, [r7, #4]
 80166aa:	685b      	ldr	r3, [r3, #4]
 80166ac:	617b      	str	r3, [r7, #20]
 80166ae:	687b      	ldr	r3, [r7, #4]
 80166b0:	69db      	ldr	r3, [r3, #28]
 80166b2:	60fb      	str	r3, [r7, #12]
 80166b4:	68fb      	ldr	r3, [r7, #12]
 80166b6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80166ba:	60fb      	str	r3, [r7, #12]
 80166bc:	68fb      	ldr	r3, [r7, #12]
 80166be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80166c2:	60fb      	str	r3, [r7, #12]
 80166c4:	683b      	ldr	r3, [r7, #0]
 80166c6:	681b      	ldr	r3, [r3, #0]
 80166c8:	021b      	lsls	r3, r3, #8
 80166ca:	68fa      	ldr	r2, [r7, #12]
 80166cc:	4313      	orrs	r3, r2
 80166ce:	60fb      	str	r3, [r7, #12]
 80166d0:	693b      	ldr	r3, [r7, #16]
 80166d2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80166d6:	613b      	str	r3, [r7, #16]
 80166d8:	683b      	ldr	r3, [r7, #0]
 80166da:	689b      	ldr	r3, [r3, #8]
 80166dc:	031b      	lsls	r3, r3, #12
 80166de:	693a      	ldr	r2, [r7, #16]
 80166e0:	4313      	orrs	r3, r2
 80166e2:	613b      	str	r3, [r7, #16]
 80166e4:	687b      	ldr	r3, [r7, #4]
 80166e6:	4a12      	ldr	r2, [pc, #72]	; (8016730 <TIM_OC4_SetConfig+0xa4>)
 80166e8:	4293      	cmp	r3, r2
 80166ea:	d003      	beq.n	80166f4 <TIM_OC4_SetConfig+0x68>
 80166ec:	687b      	ldr	r3, [r7, #4]
 80166ee:	4a11      	ldr	r2, [pc, #68]	; (8016734 <TIM_OC4_SetConfig+0xa8>)
 80166f0:	4293      	cmp	r3, r2
 80166f2:	d109      	bne.n	8016708 <TIM_OC4_SetConfig+0x7c>
 80166f4:	697b      	ldr	r3, [r7, #20]
 80166f6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80166fa:	617b      	str	r3, [r7, #20]
 80166fc:	683b      	ldr	r3, [r7, #0]
 80166fe:	695b      	ldr	r3, [r3, #20]
 8016700:	019b      	lsls	r3, r3, #6
 8016702:	697a      	ldr	r2, [r7, #20]
 8016704:	4313      	orrs	r3, r2
 8016706:	617b      	str	r3, [r7, #20]
 8016708:	687b      	ldr	r3, [r7, #4]
 801670a:	697a      	ldr	r2, [r7, #20]
 801670c:	605a      	str	r2, [r3, #4]
 801670e:	687b      	ldr	r3, [r7, #4]
 8016710:	68fa      	ldr	r2, [r7, #12]
 8016712:	61da      	str	r2, [r3, #28]
 8016714:	683b      	ldr	r3, [r7, #0]
 8016716:	685a      	ldr	r2, [r3, #4]
 8016718:	687b      	ldr	r3, [r7, #4]
 801671a:	641a      	str	r2, [r3, #64]	; 0x40
 801671c:	687b      	ldr	r3, [r7, #4]
 801671e:	693a      	ldr	r2, [r7, #16]
 8016720:	621a      	str	r2, [r3, #32]
 8016722:	bf00      	nop
 8016724:	371c      	adds	r7, #28
 8016726:	46bd      	mov	sp, r7
 8016728:	f85d 7b04 	ldr.w	r7, [sp], #4
 801672c:	4770      	bx	lr
 801672e:	bf00      	nop
 8016730:	40010000 	.word	0x40010000
 8016734:	40010400 	.word	0x40010400

08016738 <TIM_TI1_ConfigInputStage>:
 8016738:	b480      	push	{r7}
 801673a:	b087      	sub	sp, #28
 801673c:	af00      	add	r7, sp, #0
 801673e:	60f8      	str	r0, [r7, #12]
 8016740:	60b9      	str	r1, [r7, #8]
 8016742:	607a      	str	r2, [r7, #4]
 8016744:	68fb      	ldr	r3, [r7, #12]
 8016746:	6a1b      	ldr	r3, [r3, #32]
 8016748:	617b      	str	r3, [r7, #20]
 801674a:	68fb      	ldr	r3, [r7, #12]
 801674c:	6a1b      	ldr	r3, [r3, #32]
 801674e:	f023 0201 	bic.w	r2, r3, #1
 8016752:	68fb      	ldr	r3, [r7, #12]
 8016754:	621a      	str	r2, [r3, #32]
 8016756:	68fb      	ldr	r3, [r7, #12]
 8016758:	699b      	ldr	r3, [r3, #24]
 801675a:	613b      	str	r3, [r7, #16]
 801675c:	693b      	ldr	r3, [r7, #16]
 801675e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8016762:	613b      	str	r3, [r7, #16]
 8016764:	687b      	ldr	r3, [r7, #4]
 8016766:	011b      	lsls	r3, r3, #4
 8016768:	693a      	ldr	r2, [r7, #16]
 801676a:	4313      	orrs	r3, r2
 801676c:	613b      	str	r3, [r7, #16]
 801676e:	697b      	ldr	r3, [r7, #20]
 8016770:	f023 030a 	bic.w	r3, r3, #10
 8016774:	617b      	str	r3, [r7, #20]
 8016776:	697a      	ldr	r2, [r7, #20]
 8016778:	68bb      	ldr	r3, [r7, #8]
 801677a:	4313      	orrs	r3, r2
 801677c:	617b      	str	r3, [r7, #20]
 801677e:	68fb      	ldr	r3, [r7, #12]
 8016780:	693a      	ldr	r2, [r7, #16]
 8016782:	619a      	str	r2, [r3, #24]
 8016784:	68fb      	ldr	r3, [r7, #12]
 8016786:	697a      	ldr	r2, [r7, #20]
 8016788:	621a      	str	r2, [r3, #32]
 801678a:	bf00      	nop
 801678c:	371c      	adds	r7, #28
 801678e:	46bd      	mov	sp, r7
 8016790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016794:	4770      	bx	lr

08016796 <TIM_TI2_ConfigInputStage>:
 8016796:	b480      	push	{r7}
 8016798:	b087      	sub	sp, #28
 801679a:	af00      	add	r7, sp, #0
 801679c:	60f8      	str	r0, [r7, #12]
 801679e:	60b9      	str	r1, [r7, #8]
 80167a0:	607a      	str	r2, [r7, #4]
 80167a2:	68fb      	ldr	r3, [r7, #12]
 80167a4:	6a1b      	ldr	r3, [r3, #32]
 80167a6:	f023 0210 	bic.w	r2, r3, #16
 80167aa:	68fb      	ldr	r3, [r7, #12]
 80167ac:	621a      	str	r2, [r3, #32]
 80167ae:	68fb      	ldr	r3, [r7, #12]
 80167b0:	699b      	ldr	r3, [r3, #24]
 80167b2:	617b      	str	r3, [r7, #20]
 80167b4:	68fb      	ldr	r3, [r7, #12]
 80167b6:	6a1b      	ldr	r3, [r3, #32]
 80167b8:	613b      	str	r3, [r7, #16]
 80167ba:	697b      	ldr	r3, [r7, #20]
 80167bc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80167c0:	617b      	str	r3, [r7, #20]
 80167c2:	687b      	ldr	r3, [r7, #4]
 80167c4:	031b      	lsls	r3, r3, #12
 80167c6:	697a      	ldr	r2, [r7, #20]
 80167c8:	4313      	orrs	r3, r2
 80167ca:	617b      	str	r3, [r7, #20]
 80167cc:	693b      	ldr	r3, [r7, #16]
 80167ce:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80167d2:	613b      	str	r3, [r7, #16]
 80167d4:	68bb      	ldr	r3, [r7, #8]
 80167d6:	011b      	lsls	r3, r3, #4
 80167d8:	693a      	ldr	r2, [r7, #16]
 80167da:	4313      	orrs	r3, r2
 80167dc:	613b      	str	r3, [r7, #16]
 80167de:	68fb      	ldr	r3, [r7, #12]
 80167e0:	697a      	ldr	r2, [r7, #20]
 80167e2:	619a      	str	r2, [r3, #24]
 80167e4:	68fb      	ldr	r3, [r7, #12]
 80167e6:	693a      	ldr	r2, [r7, #16]
 80167e8:	621a      	str	r2, [r3, #32]
 80167ea:	bf00      	nop
 80167ec:	371c      	adds	r7, #28
 80167ee:	46bd      	mov	sp, r7
 80167f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80167f4:	4770      	bx	lr

080167f6 <TIM_ITRx_SetConfig>:
 80167f6:	b480      	push	{r7}
 80167f8:	b085      	sub	sp, #20
 80167fa:	af00      	add	r7, sp, #0
 80167fc:	6078      	str	r0, [r7, #4]
 80167fe:	6039      	str	r1, [r7, #0]
 8016800:	687b      	ldr	r3, [r7, #4]
 8016802:	689b      	ldr	r3, [r3, #8]
 8016804:	60fb      	str	r3, [r7, #12]
 8016806:	68fb      	ldr	r3, [r7, #12]
 8016808:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801680c:	60fb      	str	r3, [r7, #12]
 801680e:	683a      	ldr	r2, [r7, #0]
 8016810:	68fb      	ldr	r3, [r7, #12]
 8016812:	4313      	orrs	r3, r2
 8016814:	f043 0307 	orr.w	r3, r3, #7
 8016818:	60fb      	str	r3, [r7, #12]
 801681a:	687b      	ldr	r3, [r7, #4]
 801681c:	68fa      	ldr	r2, [r7, #12]
 801681e:	609a      	str	r2, [r3, #8]
 8016820:	bf00      	nop
 8016822:	3714      	adds	r7, #20
 8016824:	46bd      	mov	sp, r7
 8016826:	f85d 7b04 	ldr.w	r7, [sp], #4
 801682a:	4770      	bx	lr

0801682c <TIM_ETR_SetConfig>:
 801682c:	b480      	push	{r7}
 801682e:	b087      	sub	sp, #28
 8016830:	af00      	add	r7, sp, #0
 8016832:	60f8      	str	r0, [r7, #12]
 8016834:	60b9      	str	r1, [r7, #8]
 8016836:	607a      	str	r2, [r7, #4]
 8016838:	603b      	str	r3, [r7, #0]
 801683a:	68fb      	ldr	r3, [r7, #12]
 801683c:	689b      	ldr	r3, [r3, #8]
 801683e:	617b      	str	r3, [r7, #20]
 8016840:	697b      	ldr	r3, [r7, #20]
 8016842:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8016846:	617b      	str	r3, [r7, #20]
 8016848:	683b      	ldr	r3, [r7, #0]
 801684a:	021a      	lsls	r2, r3, #8
 801684c:	687b      	ldr	r3, [r7, #4]
 801684e:	431a      	orrs	r2, r3
 8016850:	68bb      	ldr	r3, [r7, #8]
 8016852:	4313      	orrs	r3, r2
 8016854:	697a      	ldr	r2, [r7, #20]
 8016856:	4313      	orrs	r3, r2
 8016858:	617b      	str	r3, [r7, #20]
 801685a:	68fb      	ldr	r3, [r7, #12]
 801685c:	697a      	ldr	r2, [r7, #20]
 801685e:	609a      	str	r2, [r3, #8]
 8016860:	bf00      	nop
 8016862:	371c      	adds	r7, #28
 8016864:	46bd      	mov	sp, r7
 8016866:	f85d 7b04 	ldr.w	r7, [sp], #4
 801686a:	4770      	bx	lr

0801686c <TIM_CCxChannelCmd>:
 801686c:	b480      	push	{r7}
 801686e:	b087      	sub	sp, #28
 8016870:	af00      	add	r7, sp, #0
 8016872:	60f8      	str	r0, [r7, #12]
 8016874:	60b9      	str	r1, [r7, #8]
 8016876:	607a      	str	r2, [r7, #4]
 8016878:	68bb      	ldr	r3, [r7, #8]
 801687a:	f003 031f 	and.w	r3, r3, #31
 801687e:	2201      	movs	r2, #1
 8016880:	fa02 f303 	lsl.w	r3, r2, r3
 8016884:	617b      	str	r3, [r7, #20]
 8016886:	68fb      	ldr	r3, [r7, #12]
 8016888:	6a1a      	ldr	r2, [r3, #32]
 801688a:	697b      	ldr	r3, [r7, #20]
 801688c:	43db      	mvns	r3, r3
 801688e:	401a      	ands	r2, r3
 8016890:	68fb      	ldr	r3, [r7, #12]
 8016892:	621a      	str	r2, [r3, #32]
 8016894:	68fb      	ldr	r3, [r7, #12]
 8016896:	6a1a      	ldr	r2, [r3, #32]
 8016898:	68bb      	ldr	r3, [r7, #8]
 801689a:	f003 031f 	and.w	r3, r3, #31
 801689e:	6879      	ldr	r1, [r7, #4]
 80168a0:	fa01 f303 	lsl.w	r3, r1, r3
 80168a4:	431a      	orrs	r2, r3
 80168a6:	68fb      	ldr	r3, [r7, #12]
 80168a8:	621a      	str	r2, [r3, #32]
 80168aa:	bf00      	nop
 80168ac:	371c      	adds	r7, #28
 80168ae:	46bd      	mov	sp, r7
 80168b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80168b4:	4770      	bx	lr
	...

080168b8 <HAL_TIMEx_MasterConfigSynchronization>:
 80168b8:	b480      	push	{r7}
 80168ba:	b085      	sub	sp, #20
 80168bc:	af00      	add	r7, sp, #0
 80168be:	6078      	str	r0, [r7, #4]
 80168c0:	6039      	str	r1, [r7, #0]
 80168c2:	687b      	ldr	r3, [r7, #4]
 80168c4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80168c8:	2b01      	cmp	r3, #1
 80168ca:	d101      	bne.n	80168d0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80168cc:	2302      	movs	r3, #2
 80168ce:	e05a      	b.n	8016986 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80168d0:	687b      	ldr	r3, [r7, #4]
 80168d2:	2201      	movs	r2, #1
 80168d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80168d8:	687b      	ldr	r3, [r7, #4]
 80168da:	2202      	movs	r2, #2
 80168dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80168e0:	687b      	ldr	r3, [r7, #4]
 80168e2:	681b      	ldr	r3, [r3, #0]
 80168e4:	685b      	ldr	r3, [r3, #4]
 80168e6:	60fb      	str	r3, [r7, #12]
 80168e8:	687b      	ldr	r3, [r7, #4]
 80168ea:	681b      	ldr	r3, [r3, #0]
 80168ec:	689b      	ldr	r3, [r3, #8]
 80168ee:	60bb      	str	r3, [r7, #8]
 80168f0:	68fb      	ldr	r3, [r7, #12]
 80168f2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80168f6:	60fb      	str	r3, [r7, #12]
 80168f8:	683b      	ldr	r3, [r7, #0]
 80168fa:	681b      	ldr	r3, [r3, #0]
 80168fc:	68fa      	ldr	r2, [r7, #12]
 80168fe:	4313      	orrs	r3, r2
 8016900:	60fb      	str	r3, [r7, #12]
 8016902:	687b      	ldr	r3, [r7, #4]
 8016904:	681b      	ldr	r3, [r3, #0]
 8016906:	68fa      	ldr	r2, [r7, #12]
 8016908:	605a      	str	r2, [r3, #4]
 801690a:	687b      	ldr	r3, [r7, #4]
 801690c:	681b      	ldr	r3, [r3, #0]
 801690e:	4a21      	ldr	r2, [pc, #132]	; (8016994 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8016910:	4293      	cmp	r3, r2
 8016912:	d022      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016914:	687b      	ldr	r3, [r7, #4]
 8016916:	681b      	ldr	r3, [r3, #0]
 8016918:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801691c:	d01d      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801691e:	687b      	ldr	r3, [r7, #4]
 8016920:	681b      	ldr	r3, [r3, #0]
 8016922:	4a1d      	ldr	r2, [pc, #116]	; (8016998 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8016924:	4293      	cmp	r3, r2
 8016926:	d018      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016928:	687b      	ldr	r3, [r7, #4]
 801692a:	681b      	ldr	r3, [r3, #0]
 801692c:	4a1b      	ldr	r2, [pc, #108]	; (801699c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 801692e:	4293      	cmp	r3, r2
 8016930:	d013      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016932:	687b      	ldr	r3, [r7, #4]
 8016934:	681b      	ldr	r3, [r3, #0]
 8016936:	4a1a      	ldr	r2, [pc, #104]	; (80169a0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8016938:	4293      	cmp	r3, r2
 801693a:	d00e      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	681b      	ldr	r3, [r3, #0]
 8016940:	4a18      	ldr	r2, [pc, #96]	; (80169a4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8016942:	4293      	cmp	r3, r2
 8016944:	d009      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016946:	687b      	ldr	r3, [r7, #4]
 8016948:	681b      	ldr	r3, [r3, #0]
 801694a:	4a17      	ldr	r2, [pc, #92]	; (80169a8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 801694c:	4293      	cmp	r3, r2
 801694e:	d004      	beq.n	801695a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016950:	687b      	ldr	r3, [r7, #4]
 8016952:	681b      	ldr	r3, [r3, #0]
 8016954:	4a15      	ldr	r2, [pc, #84]	; (80169ac <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8016956:	4293      	cmp	r3, r2
 8016958:	d10c      	bne.n	8016974 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 801695a:	68bb      	ldr	r3, [r7, #8]
 801695c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016960:	60bb      	str	r3, [r7, #8]
 8016962:	683b      	ldr	r3, [r7, #0]
 8016964:	685b      	ldr	r3, [r3, #4]
 8016966:	68ba      	ldr	r2, [r7, #8]
 8016968:	4313      	orrs	r3, r2
 801696a:	60bb      	str	r3, [r7, #8]
 801696c:	687b      	ldr	r3, [r7, #4]
 801696e:	681b      	ldr	r3, [r3, #0]
 8016970:	68ba      	ldr	r2, [r7, #8]
 8016972:	609a      	str	r2, [r3, #8]
 8016974:	687b      	ldr	r3, [r7, #4]
 8016976:	2201      	movs	r2, #1
 8016978:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801697c:	687b      	ldr	r3, [r7, #4]
 801697e:	2200      	movs	r2, #0
 8016980:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016984:	2300      	movs	r3, #0
 8016986:	4618      	mov	r0, r3
 8016988:	3714      	adds	r7, #20
 801698a:	46bd      	mov	sp, r7
 801698c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016990:	4770      	bx	lr
 8016992:	bf00      	nop
 8016994:	40010000 	.word	0x40010000
 8016998:	40000400 	.word	0x40000400
 801699c:	40000800 	.word	0x40000800
 80169a0:	40000c00 	.word	0x40000c00
 80169a4:	40010400 	.word	0x40010400
 80169a8:	40014000 	.word	0x40014000
 80169ac:	40001800 	.word	0x40001800

080169b0 <HAL_TIMEx_ConfigBreakDeadTime>:
 80169b0:	b480      	push	{r7}
 80169b2:	b085      	sub	sp, #20
 80169b4:	af00      	add	r7, sp, #0
 80169b6:	6078      	str	r0, [r7, #4]
 80169b8:	6039      	str	r1, [r7, #0]
 80169ba:	2300      	movs	r3, #0
 80169bc:	60fb      	str	r3, [r7, #12]
 80169be:	687b      	ldr	r3, [r7, #4]
 80169c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80169c4:	2b01      	cmp	r3, #1
 80169c6:	d101      	bne.n	80169cc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80169c8:	2302      	movs	r3, #2
 80169ca:	e03d      	b.n	8016a48 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 80169cc:	687b      	ldr	r3, [r7, #4]
 80169ce:	2201      	movs	r2, #1
 80169d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80169d4:	68fb      	ldr	r3, [r7, #12]
 80169d6:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80169da:	683b      	ldr	r3, [r7, #0]
 80169dc:	68db      	ldr	r3, [r3, #12]
 80169de:	4313      	orrs	r3, r2
 80169e0:	60fb      	str	r3, [r7, #12]
 80169e2:	68fb      	ldr	r3, [r7, #12]
 80169e4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80169e8:	683b      	ldr	r3, [r7, #0]
 80169ea:	689b      	ldr	r3, [r3, #8]
 80169ec:	4313      	orrs	r3, r2
 80169ee:	60fb      	str	r3, [r7, #12]
 80169f0:	68fb      	ldr	r3, [r7, #12]
 80169f2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80169f6:	683b      	ldr	r3, [r7, #0]
 80169f8:	685b      	ldr	r3, [r3, #4]
 80169fa:	4313      	orrs	r3, r2
 80169fc:	60fb      	str	r3, [r7, #12]
 80169fe:	68fb      	ldr	r3, [r7, #12]
 8016a00:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8016a04:	683b      	ldr	r3, [r7, #0]
 8016a06:	681b      	ldr	r3, [r3, #0]
 8016a08:	4313      	orrs	r3, r2
 8016a0a:	60fb      	str	r3, [r7, #12]
 8016a0c:	68fb      	ldr	r3, [r7, #12]
 8016a0e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8016a12:	683b      	ldr	r3, [r7, #0]
 8016a14:	691b      	ldr	r3, [r3, #16]
 8016a16:	4313      	orrs	r3, r2
 8016a18:	60fb      	str	r3, [r7, #12]
 8016a1a:	68fb      	ldr	r3, [r7, #12]
 8016a1c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8016a20:	683b      	ldr	r3, [r7, #0]
 8016a22:	695b      	ldr	r3, [r3, #20]
 8016a24:	4313      	orrs	r3, r2
 8016a26:	60fb      	str	r3, [r7, #12]
 8016a28:	68fb      	ldr	r3, [r7, #12]
 8016a2a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8016a2e:	683b      	ldr	r3, [r7, #0]
 8016a30:	69db      	ldr	r3, [r3, #28]
 8016a32:	4313      	orrs	r3, r2
 8016a34:	60fb      	str	r3, [r7, #12]
 8016a36:	687b      	ldr	r3, [r7, #4]
 8016a38:	681b      	ldr	r3, [r3, #0]
 8016a3a:	68fa      	ldr	r2, [r7, #12]
 8016a3c:	645a      	str	r2, [r3, #68]	; 0x44
 8016a3e:	687b      	ldr	r3, [r7, #4]
 8016a40:	2200      	movs	r2, #0
 8016a42:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016a46:	2300      	movs	r3, #0
 8016a48:	4618      	mov	r0, r3
 8016a4a:	3714      	adds	r7, #20
 8016a4c:	46bd      	mov	sp, r7
 8016a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016a52:	4770      	bx	lr

08016a54 <HAL_TIMEx_CommutCallback>:
 8016a54:	b480      	push	{r7}
 8016a56:	b083      	sub	sp, #12
 8016a58:	af00      	add	r7, sp, #0
 8016a5a:	6078      	str	r0, [r7, #4]
 8016a5c:	bf00      	nop
 8016a5e:	370c      	adds	r7, #12
 8016a60:	46bd      	mov	sp, r7
 8016a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016a66:	4770      	bx	lr

08016a68 <HAL_TIMEx_BreakCallback>:
 8016a68:	b480      	push	{r7}
 8016a6a:	b083      	sub	sp, #12
 8016a6c:	af00      	add	r7, sp, #0
 8016a6e:	6078      	str	r0, [r7, #4]
 8016a70:	bf00      	nop
 8016a72:	370c      	adds	r7, #12
 8016a74:	46bd      	mov	sp, r7
 8016a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016a7a:	4770      	bx	lr

08016a7c <HAL_UART_Init>:
 8016a7c:	b580      	push	{r7, lr}
 8016a7e:	b082      	sub	sp, #8
 8016a80:	af00      	add	r7, sp, #0
 8016a82:	6078      	str	r0, [r7, #4]
 8016a84:	687b      	ldr	r3, [r7, #4]
 8016a86:	2b00      	cmp	r3, #0
 8016a88:	d101      	bne.n	8016a8e <HAL_UART_Init+0x12>
 8016a8a:	2301      	movs	r3, #1
 8016a8c:	e03f      	b.n	8016b0e <HAL_UART_Init+0x92>
 8016a8e:	687b      	ldr	r3, [r7, #4]
 8016a90:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016a94:	b2db      	uxtb	r3, r3
 8016a96:	2b00      	cmp	r3, #0
 8016a98:	d106      	bne.n	8016aa8 <HAL_UART_Init+0x2c>
 8016a9a:	687b      	ldr	r3, [r7, #4]
 8016a9c:	2200      	movs	r2, #0
 8016a9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016aa2:	6878      	ldr	r0, [r7, #4]
 8016aa4:	f7ed ff4e 	bl	8004944 <HAL_UART_MspInit>
 8016aa8:	687b      	ldr	r3, [r7, #4]
 8016aaa:	2224      	movs	r2, #36	; 0x24
 8016aac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016ab0:	687b      	ldr	r3, [r7, #4]
 8016ab2:	681b      	ldr	r3, [r3, #0]
 8016ab4:	68da      	ldr	r2, [r3, #12]
 8016ab6:	687b      	ldr	r3, [r7, #4]
 8016ab8:	681b      	ldr	r3, [r3, #0]
 8016aba:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8016abe:	60da      	str	r2, [r3, #12]
 8016ac0:	6878      	ldr	r0, [r7, #4]
 8016ac2:	f000 fe95 	bl	80177f0 <UART_SetConfig>
 8016ac6:	687b      	ldr	r3, [r7, #4]
 8016ac8:	681b      	ldr	r3, [r3, #0]
 8016aca:	691a      	ldr	r2, [r3, #16]
 8016acc:	687b      	ldr	r3, [r7, #4]
 8016ace:	681b      	ldr	r3, [r3, #0]
 8016ad0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8016ad4:	611a      	str	r2, [r3, #16]
 8016ad6:	687b      	ldr	r3, [r7, #4]
 8016ad8:	681b      	ldr	r3, [r3, #0]
 8016ada:	695a      	ldr	r2, [r3, #20]
 8016adc:	687b      	ldr	r3, [r7, #4]
 8016ade:	681b      	ldr	r3, [r3, #0]
 8016ae0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8016ae4:	615a      	str	r2, [r3, #20]
 8016ae6:	687b      	ldr	r3, [r7, #4]
 8016ae8:	681b      	ldr	r3, [r3, #0]
 8016aea:	68da      	ldr	r2, [r3, #12]
 8016aec:	687b      	ldr	r3, [r7, #4]
 8016aee:	681b      	ldr	r3, [r3, #0]
 8016af0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8016af4:	60da      	str	r2, [r3, #12]
 8016af6:	687b      	ldr	r3, [r7, #4]
 8016af8:	2200      	movs	r2, #0
 8016afa:	641a      	str	r2, [r3, #64]	; 0x40
 8016afc:	687b      	ldr	r3, [r7, #4]
 8016afe:	2220      	movs	r2, #32
 8016b00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016b04:	687b      	ldr	r3, [r7, #4]
 8016b06:	2220      	movs	r2, #32
 8016b08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8016b0c:	2300      	movs	r3, #0
 8016b0e:	4618      	mov	r0, r3
 8016b10:	3708      	adds	r7, #8
 8016b12:	46bd      	mov	sp, r7
 8016b14:	bd80      	pop	{r7, pc}

08016b16 <HAL_UART_Transmit_IT>:
 8016b16:	b480      	push	{r7}
 8016b18:	b085      	sub	sp, #20
 8016b1a:	af00      	add	r7, sp, #0
 8016b1c:	60f8      	str	r0, [r7, #12]
 8016b1e:	60b9      	str	r1, [r7, #8]
 8016b20:	4613      	mov	r3, r2
 8016b22:	80fb      	strh	r3, [r7, #6]
 8016b24:	68fb      	ldr	r3, [r7, #12]
 8016b26:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016b2a:	b2db      	uxtb	r3, r3
 8016b2c:	2b20      	cmp	r3, #32
 8016b2e:	d130      	bne.n	8016b92 <HAL_UART_Transmit_IT+0x7c>
 8016b30:	68bb      	ldr	r3, [r7, #8]
 8016b32:	2b00      	cmp	r3, #0
 8016b34:	d002      	beq.n	8016b3c <HAL_UART_Transmit_IT+0x26>
 8016b36:	88fb      	ldrh	r3, [r7, #6]
 8016b38:	2b00      	cmp	r3, #0
 8016b3a:	d101      	bne.n	8016b40 <HAL_UART_Transmit_IT+0x2a>
 8016b3c:	2301      	movs	r3, #1
 8016b3e:	e029      	b.n	8016b94 <HAL_UART_Transmit_IT+0x7e>
 8016b40:	68fb      	ldr	r3, [r7, #12]
 8016b42:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016b46:	2b01      	cmp	r3, #1
 8016b48:	d101      	bne.n	8016b4e <HAL_UART_Transmit_IT+0x38>
 8016b4a:	2302      	movs	r3, #2
 8016b4c:	e022      	b.n	8016b94 <HAL_UART_Transmit_IT+0x7e>
 8016b4e:	68fb      	ldr	r3, [r7, #12]
 8016b50:	2201      	movs	r2, #1
 8016b52:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016b56:	68fb      	ldr	r3, [r7, #12]
 8016b58:	68ba      	ldr	r2, [r7, #8]
 8016b5a:	621a      	str	r2, [r3, #32]
 8016b5c:	68fb      	ldr	r3, [r7, #12]
 8016b5e:	88fa      	ldrh	r2, [r7, #6]
 8016b60:	849a      	strh	r2, [r3, #36]	; 0x24
 8016b62:	68fb      	ldr	r3, [r7, #12]
 8016b64:	88fa      	ldrh	r2, [r7, #6]
 8016b66:	84da      	strh	r2, [r3, #38]	; 0x26
 8016b68:	68fb      	ldr	r3, [r7, #12]
 8016b6a:	2200      	movs	r2, #0
 8016b6c:	641a      	str	r2, [r3, #64]	; 0x40
 8016b6e:	68fb      	ldr	r3, [r7, #12]
 8016b70:	2221      	movs	r2, #33	; 0x21
 8016b72:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016b76:	68fb      	ldr	r3, [r7, #12]
 8016b78:	2200      	movs	r2, #0
 8016b7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016b7e:	68fb      	ldr	r3, [r7, #12]
 8016b80:	681b      	ldr	r3, [r3, #0]
 8016b82:	68da      	ldr	r2, [r3, #12]
 8016b84:	68fb      	ldr	r3, [r7, #12]
 8016b86:	681b      	ldr	r3, [r3, #0]
 8016b88:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8016b8c:	60da      	str	r2, [r3, #12]
 8016b8e:	2300      	movs	r3, #0
 8016b90:	e000      	b.n	8016b94 <HAL_UART_Transmit_IT+0x7e>
 8016b92:	2302      	movs	r3, #2
 8016b94:	4618      	mov	r0, r3
 8016b96:	3714      	adds	r7, #20
 8016b98:	46bd      	mov	sp, r7
 8016b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016b9e:	4770      	bx	lr

08016ba0 <HAL_UART_Transmit_DMA>:
 8016ba0:	b580      	push	{r7, lr}
 8016ba2:	b08c      	sub	sp, #48	; 0x30
 8016ba4:	af00      	add	r7, sp, #0
 8016ba6:	60f8      	str	r0, [r7, #12]
 8016ba8:	60b9      	str	r1, [r7, #8]
 8016baa:	4613      	mov	r3, r2
 8016bac:	80fb      	strh	r3, [r7, #6]
 8016bae:	68fb      	ldr	r3, [r7, #12]
 8016bb0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016bb4:	b2db      	uxtb	r3, r3
 8016bb6:	2b20      	cmp	r3, #32
 8016bb8:	d165      	bne.n	8016c86 <HAL_UART_Transmit_DMA+0xe6>
 8016bba:	68bb      	ldr	r3, [r7, #8]
 8016bbc:	2b00      	cmp	r3, #0
 8016bbe:	d002      	beq.n	8016bc6 <HAL_UART_Transmit_DMA+0x26>
 8016bc0:	88fb      	ldrh	r3, [r7, #6]
 8016bc2:	2b00      	cmp	r3, #0
 8016bc4:	d101      	bne.n	8016bca <HAL_UART_Transmit_DMA+0x2a>
 8016bc6:	2301      	movs	r3, #1
 8016bc8:	e05e      	b.n	8016c88 <HAL_UART_Transmit_DMA+0xe8>
 8016bca:	68fb      	ldr	r3, [r7, #12]
 8016bcc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016bd0:	2b01      	cmp	r3, #1
 8016bd2:	d101      	bne.n	8016bd8 <HAL_UART_Transmit_DMA+0x38>
 8016bd4:	2302      	movs	r3, #2
 8016bd6:	e057      	b.n	8016c88 <HAL_UART_Transmit_DMA+0xe8>
 8016bd8:	68fb      	ldr	r3, [r7, #12]
 8016bda:	2201      	movs	r2, #1
 8016bdc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016be0:	68ba      	ldr	r2, [r7, #8]
 8016be2:	68fb      	ldr	r3, [r7, #12]
 8016be4:	621a      	str	r2, [r3, #32]
 8016be6:	68fb      	ldr	r3, [r7, #12]
 8016be8:	88fa      	ldrh	r2, [r7, #6]
 8016bea:	849a      	strh	r2, [r3, #36]	; 0x24
 8016bec:	68fb      	ldr	r3, [r7, #12]
 8016bee:	88fa      	ldrh	r2, [r7, #6]
 8016bf0:	84da      	strh	r2, [r3, #38]	; 0x26
 8016bf2:	68fb      	ldr	r3, [r7, #12]
 8016bf4:	2200      	movs	r2, #0
 8016bf6:	641a      	str	r2, [r3, #64]	; 0x40
 8016bf8:	68fb      	ldr	r3, [r7, #12]
 8016bfa:	2221      	movs	r2, #33	; 0x21
 8016bfc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016c00:	68fb      	ldr	r3, [r7, #12]
 8016c02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016c04:	4a22      	ldr	r2, [pc, #136]	; (8016c90 <HAL_UART_Transmit_DMA+0xf0>)
 8016c06:	63da      	str	r2, [r3, #60]	; 0x3c
 8016c08:	68fb      	ldr	r3, [r7, #12]
 8016c0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016c0c:	4a21      	ldr	r2, [pc, #132]	; (8016c94 <HAL_UART_Transmit_DMA+0xf4>)
 8016c0e:	641a      	str	r2, [r3, #64]	; 0x40
 8016c10:	68fb      	ldr	r3, [r7, #12]
 8016c12:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016c14:	4a20      	ldr	r2, [pc, #128]	; (8016c98 <HAL_UART_Transmit_DMA+0xf8>)
 8016c16:	64da      	str	r2, [r3, #76]	; 0x4c
 8016c18:	68fb      	ldr	r3, [r7, #12]
 8016c1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016c1c:	2200      	movs	r2, #0
 8016c1e:	651a      	str	r2, [r3, #80]	; 0x50
 8016c20:	f107 0308 	add.w	r3, r7, #8
 8016c24:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016c26:	68fb      	ldr	r3, [r7, #12]
 8016c28:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8016c2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8016c2c:	6819      	ldr	r1, [r3, #0]
 8016c2e:	68fb      	ldr	r3, [r7, #12]
 8016c30:	681b      	ldr	r3, [r3, #0]
 8016c32:	3304      	adds	r3, #4
 8016c34:	461a      	mov	r2, r3
 8016c36:	88fb      	ldrh	r3, [r7, #6]
 8016c38:	f7f9 ff22 	bl	8010a80 <HAL_DMA_Start_IT>
 8016c3c:	68fb      	ldr	r3, [r7, #12]
 8016c3e:	681b      	ldr	r3, [r3, #0]
 8016c40:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8016c44:	601a      	str	r2, [r3, #0]
 8016c46:	68fb      	ldr	r3, [r7, #12]
 8016c48:	2200      	movs	r2, #0
 8016c4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016c4e:	68fb      	ldr	r3, [r7, #12]
 8016c50:	681b      	ldr	r3, [r3, #0]
 8016c52:	3314      	adds	r3, #20
 8016c54:	61bb      	str	r3, [r7, #24]
 8016c56:	69bb      	ldr	r3, [r7, #24]
 8016c58:	e853 3f00 	ldrex	r3, [r3]
 8016c5c:	617b      	str	r3, [r7, #20]
 8016c5e:	697b      	ldr	r3, [r7, #20]
 8016c60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016c64:	62bb      	str	r3, [r7, #40]	; 0x28
 8016c66:	68fb      	ldr	r3, [r7, #12]
 8016c68:	681b      	ldr	r3, [r3, #0]
 8016c6a:	3314      	adds	r3, #20
 8016c6c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8016c6e:	627a      	str	r2, [r7, #36]	; 0x24
 8016c70:	623b      	str	r3, [r7, #32]
 8016c72:	6a39      	ldr	r1, [r7, #32]
 8016c74:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8016c76:	e841 2300 	strex	r3, r2, [r1]
 8016c7a:	61fb      	str	r3, [r7, #28]
 8016c7c:	69fb      	ldr	r3, [r7, #28]
 8016c7e:	2b00      	cmp	r3, #0
 8016c80:	d1e5      	bne.n	8016c4e <HAL_UART_Transmit_DMA+0xae>
 8016c82:	2300      	movs	r3, #0
 8016c84:	e000      	b.n	8016c88 <HAL_UART_Transmit_DMA+0xe8>
 8016c86:	2302      	movs	r3, #2
 8016c88:	4618      	mov	r0, r3
 8016c8a:	3730      	adds	r7, #48	; 0x30
 8016c8c:	46bd      	mov	sp, r7
 8016c8e:	bd80      	pop	{r7, pc}
 8016c90:	08017321 	.word	0x08017321
 8016c94:	080173bb 	.word	0x080173bb
 8016c98:	080173d7 	.word	0x080173d7

08016c9c <HAL_UART_DMAStop>:
 8016c9c:	b580      	push	{r7, lr}
 8016c9e:	b090      	sub	sp, #64	; 0x40
 8016ca0:	af00      	add	r7, sp, #0
 8016ca2:	6078      	str	r0, [r7, #4]
 8016ca4:	2300      	movs	r3, #0
 8016ca6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016ca8:	687b      	ldr	r3, [r7, #4]
 8016caa:	681b      	ldr	r3, [r3, #0]
 8016cac:	695b      	ldr	r3, [r3, #20]
 8016cae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8016cb2:	2b80      	cmp	r3, #128	; 0x80
 8016cb4:	bf0c      	ite	eq
 8016cb6:	2301      	moveq	r3, #1
 8016cb8:	2300      	movne	r3, #0
 8016cba:	b2db      	uxtb	r3, r3
 8016cbc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016cbe:	687b      	ldr	r3, [r7, #4]
 8016cc0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016cc4:	b2db      	uxtb	r3, r3
 8016cc6:	2b21      	cmp	r3, #33	; 0x21
 8016cc8:	d128      	bne.n	8016d1c <HAL_UART_DMAStop+0x80>
 8016cca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016ccc:	2b00      	cmp	r3, #0
 8016cce:	d025      	beq.n	8016d1c <HAL_UART_DMAStop+0x80>
 8016cd0:	687b      	ldr	r3, [r7, #4]
 8016cd2:	681b      	ldr	r3, [r3, #0]
 8016cd4:	3314      	adds	r3, #20
 8016cd6:	627b      	str	r3, [r7, #36]	; 0x24
 8016cd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016cda:	e853 3f00 	ldrex	r3, [r3]
 8016cde:	623b      	str	r3, [r7, #32]
 8016ce0:	6a3b      	ldr	r3, [r7, #32]
 8016ce2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016ce6:	63bb      	str	r3, [r7, #56]	; 0x38
 8016ce8:	687b      	ldr	r3, [r7, #4]
 8016cea:	681b      	ldr	r3, [r3, #0]
 8016cec:	3314      	adds	r3, #20
 8016cee:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8016cf0:	633a      	str	r2, [r7, #48]	; 0x30
 8016cf2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016cf4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8016cf6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8016cf8:	e841 2300 	strex	r3, r2, [r1]
 8016cfc:	62bb      	str	r3, [r7, #40]	; 0x28
 8016cfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8016d00:	2b00      	cmp	r3, #0
 8016d02:	d1e5      	bne.n	8016cd0 <HAL_UART_DMAStop+0x34>
 8016d04:	687b      	ldr	r3, [r7, #4]
 8016d06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d08:	2b00      	cmp	r3, #0
 8016d0a:	d004      	beq.n	8016d16 <HAL_UART_DMAStop+0x7a>
 8016d0c:	687b      	ldr	r3, [r7, #4]
 8016d0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d10:	4618      	mov	r0, r3
 8016d12:	f7f9 ff0d 	bl	8010b30 <HAL_DMA_Abort>
 8016d16:	6878      	ldr	r0, [r7, #4]
 8016d18:	f000 fba7 	bl	801746a <UART_EndTxTransfer>
 8016d1c:	687b      	ldr	r3, [r7, #4]
 8016d1e:	681b      	ldr	r3, [r3, #0]
 8016d20:	695b      	ldr	r3, [r3, #20]
 8016d22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8016d26:	2b40      	cmp	r3, #64	; 0x40
 8016d28:	bf0c      	ite	eq
 8016d2a:	2301      	moveq	r3, #1
 8016d2c:	2300      	movne	r3, #0
 8016d2e:	b2db      	uxtb	r3, r3
 8016d30:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016d32:	687b      	ldr	r3, [r7, #4]
 8016d34:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8016d38:	b2db      	uxtb	r3, r3
 8016d3a:	2b22      	cmp	r3, #34	; 0x22
 8016d3c:	d128      	bne.n	8016d90 <HAL_UART_DMAStop+0xf4>
 8016d3e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016d40:	2b00      	cmp	r3, #0
 8016d42:	d025      	beq.n	8016d90 <HAL_UART_DMAStop+0xf4>
 8016d44:	687b      	ldr	r3, [r7, #4]
 8016d46:	681b      	ldr	r3, [r3, #0]
 8016d48:	3314      	adds	r3, #20
 8016d4a:	613b      	str	r3, [r7, #16]
 8016d4c:	693b      	ldr	r3, [r7, #16]
 8016d4e:	e853 3f00 	ldrex	r3, [r3]
 8016d52:	60fb      	str	r3, [r7, #12]
 8016d54:	68fb      	ldr	r3, [r7, #12]
 8016d56:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8016d5a:	637b      	str	r3, [r7, #52]	; 0x34
 8016d5c:	687b      	ldr	r3, [r7, #4]
 8016d5e:	681b      	ldr	r3, [r3, #0]
 8016d60:	3314      	adds	r3, #20
 8016d62:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8016d64:	61fa      	str	r2, [r7, #28]
 8016d66:	61bb      	str	r3, [r7, #24]
 8016d68:	69b9      	ldr	r1, [r7, #24]
 8016d6a:	69fa      	ldr	r2, [r7, #28]
 8016d6c:	e841 2300 	strex	r3, r2, [r1]
 8016d70:	617b      	str	r3, [r7, #20]
 8016d72:	697b      	ldr	r3, [r7, #20]
 8016d74:	2b00      	cmp	r3, #0
 8016d76:	d1e5      	bne.n	8016d44 <HAL_UART_DMAStop+0xa8>
 8016d78:	687b      	ldr	r3, [r7, #4]
 8016d7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d7c:	2b00      	cmp	r3, #0
 8016d7e:	d004      	beq.n	8016d8a <HAL_UART_DMAStop+0xee>
 8016d80:	687b      	ldr	r3, [r7, #4]
 8016d82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d84:	4618      	mov	r0, r3
 8016d86:	f7f9 fed3 	bl	8010b30 <HAL_DMA_Abort>
 8016d8a:	6878      	ldr	r0, [r7, #4]
 8016d8c:	f000 fb95 	bl	80174ba <UART_EndRxTransfer>
 8016d90:	2300      	movs	r3, #0
 8016d92:	4618      	mov	r0, r3
 8016d94:	3740      	adds	r7, #64	; 0x40
 8016d96:	46bd      	mov	sp, r7
 8016d98:	bd80      	pop	{r7, pc}
	...

08016d9c <HAL_UART_IRQHandler>:
 8016d9c:	b580      	push	{r7, lr}
 8016d9e:	b0ba      	sub	sp, #232	; 0xe8
 8016da0:	af00      	add	r7, sp, #0
 8016da2:	6078      	str	r0, [r7, #4]
 8016da4:	687b      	ldr	r3, [r7, #4]
 8016da6:	681b      	ldr	r3, [r3, #0]
 8016da8:	681b      	ldr	r3, [r3, #0]
 8016daa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8016dae:	687b      	ldr	r3, [r7, #4]
 8016db0:	681b      	ldr	r3, [r3, #0]
 8016db2:	68db      	ldr	r3, [r3, #12]
 8016db4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8016db8:	687b      	ldr	r3, [r7, #4]
 8016dba:	681b      	ldr	r3, [r3, #0]
 8016dbc:	695b      	ldr	r3, [r3, #20]
 8016dbe:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8016dc2:	2300      	movs	r3, #0
 8016dc4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8016dc8:	2300      	movs	r3, #0
 8016dca:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8016dce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016dd2:	f003 030f 	and.w	r3, r3, #15
 8016dd6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8016dda:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8016dde:	2b00      	cmp	r3, #0
 8016de0:	d10f      	bne.n	8016e02 <HAL_UART_IRQHandler+0x66>
 8016de2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016de6:	f003 0320 	and.w	r3, r3, #32
 8016dea:	2b00      	cmp	r3, #0
 8016dec:	d009      	beq.n	8016e02 <HAL_UART_IRQHandler+0x66>
 8016dee:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016df2:	f003 0320 	and.w	r3, r3, #32
 8016df6:	2b00      	cmp	r3, #0
 8016df8:	d003      	beq.n	8016e02 <HAL_UART_IRQHandler+0x66>
 8016dfa:	6878      	ldr	r0, [r7, #4]
 8016dfc:	f000 fc3c 	bl	8017678 <UART_Receive_IT>
 8016e00:	e256      	b.n	80172b0 <HAL_UART_IRQHandler+0x514>
 8016e02:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8016e06:	2b00      	cmp	r3, #0
 8016e08:	f000 80de 	beq.w	8016fc8 <HAL_UART_IRQHandler+0x22c>
 8016e0c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016e10:	f003 0301 	and.w	r3, r3, #1
 8016e14:	2b00      	cmp	r3, #0
 8016e16:	d106      	bne.n	8016e26 <HAL_UART_IRQHandler+0x8a>
 8016e18:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016e1c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8016e20:	2b00      	cmp	r3, #0
 8016e22:	f000 80d1 	beq.w	8016fc8 <HAL_UART_IRQHandler+0x22c>
 8016e26:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016e2a:	f003 0301 	and.w	r3, r3, #1
 8016e2e:	2b00      	cmp	r3, #0
 8016e30:	d00b      	beq.n	8016e4a <HAL_UART_IRQHandler+0xae>
 8016e32:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016e36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e3a:	2b00      	cmp	r3, #0
 8016e3c:	d005      	beq.n	8016e4a <HAL_UART_IRQHandler+0xae>
 8016e3e:	687b      	ldr	r3, [r7, #4]
 8016e40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e42:	f043 0201 	orr.w	r2, r3, #1
 8016e46:	687b      	ldr	r3, [r7, #4]
 8016e48:	641a      	str	r2, [r3, #64]	; 0x40
 8016e4a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016e4e:	f003 0304 	and.w	r3, r3, #4
 8016e52:	2b00      	cmp	r3, #0
 8016e54:	d00b      	beq.n	8016e6e <HAL_UART_IRQHandler+0xd2>
 8016e56:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016e5a:	f003 0301 	and.w	r3, r3, #1
 8016e5e:	2b00      	cmp	r3, #0
 8016e60:	d005      	beq.n	8016e6e <HAL_UART_IRQHandler+0xd2>
 8016e62:	687b      	ldr	r3, [r7, #4]
 8016e64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e66:	f043 0202 	orr.w	r2, r3, #2
 8016e6a:	687b      	ldr	r3, [r7, #4]
 8016e6c:	641a      	str	r2, [r3, #64]	; 0x40
 8016e6e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016e72:	f003 0302 	and.w	r3, r3, #2
 8016e76:	2b00      	cmp	r3, #0
 8016e78:	d00b      	beq.n	8016e92 <HAL_UART_IRQHandler+0xf6>
 8016e7a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016e7e:	f003 0301 	and.w	r3, r3, #1
 8016e82:	2b00      	cmp	r3, #0
 8016e84:	d005      	beq.n	8016e92 <HAL_UART_IRQHandler+0xf6>
 8016e86:	687b      	ldr	r3, [r7, #4]
 8016e88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e8a:	f043 0204 	orr.w	r2, r3, #4
 8016e8e:	687b      	ldr	r3, [r7, #4]
 8016e90:	641a      	str	r2, [r3, #64]	; 0x40
 8016e92:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016e96:	f003 0308 	and.w	r3, r3, #8
 8016e9a:	2b00      	cmp	r3, #0
 8016e9c:	d011      	beq.n	8016ec2 <HAL_UART_IRQHandler+0x126>
 8016e9e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016ea2:	f003 0320 	and.w	r3, r3, #32
 8016ea6:	2b00      	cmp	r3, #0
 8016ea8:	d105      	bne.n	8016eb6 <HAL_UART_IRQHandler+0x11a>
 8016eaa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016eae:	f003 0301 	and.w	r3, r3, #1
 8016eb2:	2b00      	cmp	r3, #0
 8016eb4:	d005      	beq.n	8016ec2 <HAL_UART_IRQHandler+0x126>
 8016eb6:	687b      	ldr	r3, [r7, #4]
 8016eb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016eba:	f043 0208 	orr.w	r2, r3, #8
 8016ebe:	687b      	ldr	r3, [r7, #4]
 8016ec0:	641a      	str	r2, [r3, #64]	; 0x40
 8016ec2:	687b      	ldr	r3, [r7, #4]
 8016ec4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ec6:	2b00      	cmp	r3, #0
 8016ec8:	f000 81ed 	beq.w	80172a6 <HAL_UART_IRQHandler+0x50a>
 8016ecc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016ed0:	f003 0320 	and.w	r3, r3, #32
 8016ed4:	2b00      	cmp	r3, #0
 8016ed6:	d008      	beq.n	8016eea <HAL_UART_IRQHandler+0x14e>
 8016ed8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016edc:	f003 0320 	and.w	r3, r3, #32
 8016ee0:	2b00      	cmp	r3, #0
 8016ee2:	d002      	beq.n	8016eea <HAL_UART_IRQHandler+0x14e>
 8016ee4:	6878      	ldr	r0, [r7, #4]
 8016ee6:	f000 fbc7 	bl	8017678 <UART_Receive_IT>
 8016eea:	687b      	ldr	r3, [r7, #4]
 8016eec:	681b      	ldr	r3, [r3, #0]
 8016eee:	695b      	ldr	r3, [r3, #20]
 8016ef0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8016ef4:	2b40      	cmp	r3, #64	; 0x40
 8016ef6:	bf0c      	ite	eq
 8016ef8:	2301      	moveq	r3, #1
 8016efa:	2300      	movne	r3, #0
 8016efc:	b2db      	uxtb	r3, r3
 8016efe:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8016f02:	687b      	ldr	r3, [r7, #4]
 8016f04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016f06:	f003 0308 	and.w	r3, r3, #8
 8016f0a:	2b00      	cmp	r3, #0
 8016f0c:	d103      	bne.n	8016f16 <HAL_UART_IRQHandler+0x17a>
 8016f0e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8016f12:	2b00      	cmp	r3, #0
 8016f14:	d04f      	beq.n	8016fb6 <HAL_UART_IRQHandler+0x21a>
 8016f16:	6878      	ldr	r0, [r7, #4]
 8016f18:	f000 facf 	bl	80174ba <UART_EndRxTransfer>
 8016f1c:	687b      	ldr	r3, [r7, #4]
 8016f1e:	681b      	ldr	r3, [r3, #0]
 8016f20:	695b      	ldr	r3, [r3, #20]
 8016f22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8016f26:	2b40      	cmp	r3, #64	; 0x40
 8016f28:	d141      	bne.n	8016fae <HAL_UART_IRQHandler+0x212>
 8016f2a:	687b      	ldr	r3, [r7, #4]
 8016f2c:	681b      	ldr	r3, [r3, #0]
 8016f2e:	3314      	adds	r3, #20
 8016f30:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8016f34:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8016f38:	e853 3f00 	ldrex	r3, [r3]
 8016f3c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8016f40:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8016f44:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8016f48:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8016f4c:	687b      	ldr	r3, [r7, #4]
 8016f4e:	681b      	ldr	r3, [r3, #0]
 8016f50:	3314      	adds	r3, #20
 8016f52:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8016f56:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8016f5a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8016f5e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8016f62:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8016f66:	e841 2300 	strex	r3, r2, [r1]
 8016f6a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8016f6e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8016f72:	2b00      	cmp	r3, #0
 8016f74:	d1d9      	bne.n	8016f2a <HAL_UART_IRQHandler+0x18e>
 8016f76:	687b      	ldr	r3, [r7, #4]
 8016f78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f7a:	2b00      	cmp	r3, #0
 8016f7c:	d013      	beq.n	8016fa6 <HAL_UART_IRQHandler+0x20a>
 8016f7e:	687b      	ldr	r3, [r7, #4]
 8016f80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f82:	4a7d      	ldr	r2, [pc, #500]	; (8017178 <HAL_UART_IRQHandler+0x3dc>)
 8016f84:	651a      	str	r2, [r3, #80]	; 0x50
 8016f86:	687b      	ldr	r3, [r7, #4]
 8016f88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f8a:	4618      	mov	r0, r3
 8016f8c:	f7f9 fe40 	bl	8010c10 <HAL_DMA_Abort_IT>
 8016f90:	4603      	mov	r3, r0
 8016f92:	2b00      	cmp	r3, #0
 8016f94:	d016      	beq.n	8016fc4 <HAL_UART_IRQHandler+0x228>
 8016f96:	687b      	ldr	r3, [r7, #4]
 8016f98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016f9c:	687a      	ldr	r2, [r7, #4]
 8016f9e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8016fa0:	4610      	mov	r0, r2
 8016fa2:	4798      	blx	r3
 8016fa4:	e00e      	b.n	8016fc4 <HAL_UART_IRQHandler+0x228>
 8016fa6:	6878      	ldr	r0, [r7, #4]
 8016fa8:	f000 f9a4 	bl	80172f4 <HAL_UART_ErrorCallback>
 8016fac:	e00a      	b.n	8016fc4 <HAL_UART_IRQHandler+0x228>
 8016fae:	6878      	ldr	r0, [r7, #4]
 8016fb0:	f000 f9a0 	bl	80172f4 <HAL_UART_ErrorCallback>
 8016fb4:	e006      	b.n	8016fc4 <HAL_UART_IRQHandler+0x228>
 8016fb6:	6878      	ldr	r0, [r7, #4]
 8016fb8:	f000 f99c 	bl	80172f4 <HAL_UART_ErrorCallback>
 8016fbc:	687b      	ldr	r3, [r7, #4]
 8016fbe:	2200      	movs	r2, #0
 8016fc0:	641a      	str	r2, [r3, #64]	; 0x40
 8016fc2:	e170      	b.n	80172a6 <HAL_UART_IRQHandler+0x50a>
 8016fc4:	bf00      	nop
 8016fc6:	e16e      	b.n	80172a6 <HAL_UART_IRQHandler+0x50a>
 8016fc8:	687b      	ldr	r3, [r7, #4]
 8016fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016fcc:	2b01      	cmp	r3, #1
 8016fce:	f040 814a 	bne.w	8017266 <HAL_UART_IRQHandler+0x4ca>
 8016fd2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016fd6:	f003 0310 	and.w	r3, r3, #16
 8016fda:	2b00      	cmp	r3, #0
 8016fdc:	f000 8143 	beq.w	8017266 <HAL_UART_IRQHandler+0x4ca>
 8016fe0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016fe4:	f003 0310 	and.w	r3, r3, #16
 8016fe8:	2b00      	cmp	r3, #0
 8016fea:	f000 813c 	beq.w	8017266 <HAL_UART_IRQHandler+0x4ca>
 8016fee:	2300      	movs	r3, #0
 8016ff0:	60bb      	str	r3, [r7, #8]
 8016ff2:	687b      	ldr	r3, [r7, #4]
 8016ff4:	681b      	ldr	r3, [r3, #0]
 8016ff6:	681b      	ldr	r3, [r3, #0]
 8016ff8:	60bb      	str	r3, [r7, #8]
 8016ffa:	687b      	ldr	r3, [r7, #4]
 8016ffc:	681b      	ldr	r3, [r3, #0]
 8016ffe:	685b      	ldr	r3, [r3, #4]
 8017000:	60bb      	str	r3, [r7, #8]
 8017002:	68bb      	ldr	r3, [r7, #8]
 8017004:	687b      	ldr	r3, [r7, #4]
 8017006:	681b      	ldr	r3, [r3, #0]
 8017008:	695b      	ldr	r3, [r3, #20]
 801700a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801700e:	2b40      	cmp	r3, #64	; 0x40
 8017010:	f040 80b4 	bne.w	801717c <HAL_UART_IRQHandler+0x3e0>
 8017014:	687b      	ldr	r3, [r7, #4]
 8017016:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017018:	681b      	ldr	r3, [r3, #0]
 801701a:	685b      	ldr	r3, [r3, #4]
 801701c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8017020:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8017024:	2b00      	cmp	r3, #0
 8017026:	f000 8140 	beq.w	80172aa <HAL_UART_IRQHandler+0x50e>
 801702a:	687b      	ldr	r3, [r7, #4]
 801702c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 801702e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8017032:	429a      	cmp	r2, r3
 8017034:	f080 8139 	bcs.w	80172aa <HAL_UART_IRQHandler+0x50e>
 8017038:	687b      	ldr	r3, [r7, #4]
 801703a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 801703e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8017040:	687b      	ldr	r3, [r7, #4]
 8017042:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017044:	69db      	ldr	r3, [r3, #28]
 8017046:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801704a:	f000 8088 	beq.w	801715e <HAL_UART_IRQHandler+0x3c2>
 801704e:	687b      	ldr	r3, [r7, #4]
 8017050:	681b      	ldr	r3, [r3, #0]
 8017052:	330c      	adds	r3, #12
 8017054:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8017058:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801705c:	e853 3f00 	ldrex	r3, [r3]
 8017060:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8017064:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8017068:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801706c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8017070:	687b      	ldr	r3, [r7, #4]
 8017072:	681b      	ldr	r3, [r3, #0]
 8017074:	330c      	adds	r3, #12
 8017076:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 801707a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 801707e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8017082:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8017086:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801708a:	e841 2300 	strex	r3, r2, [r1]
 801708e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8017092:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8017096:	2b00      	cmp	r3, #0
 8017098:	d1d9      	bne.n	801704e <HAL_UART_IRQHandler+0x2b2>
 801709a:	687b      	ldr	r3, [r7, #4]
 801709c:	681b      	ldr	r3, [r3, #0]
 801709e:	3314      	adds	r3, #20
 80170a0:	677b      	str	r3, [r7, #116]	; 0x74
 80170a2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80170a4:	e853 3f00 	ldrex	r3, [r3]
 80170a8:	673b      	str	r3, [r7, #112]	; 0x70
 80170aa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80170ac:	f023 0301 	bic.w	r3, r3, #1
 80170b0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80170b4:	687b      	ldr	r3, [r7, #4]
 80170b6:	681b      	ldr	r3, [r3, #0]
 80170b8:	3314      	adds	r3, #20
 80170ba:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80170be:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80170c2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80170c4:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80170c6:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80170ca:	e841 2300 	strex	r3, r2, [r1]
 80170ce:	67bb      	str	r3, [r7, #120]	; 0x78
 80170d0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80170d2:	2b00      	cmp	r3, #0
 80170d4:	d1e1      	bne.n	801709a <HAL_UART_IRQHandler+0x2fe>
 80170d6:	687b      	ldr	r3, [r7, #4]
 80170d8:	681b      	ldr	r3, [r3, #0]
 80170da:	3314      	adds	r3, #20
 80170dc:	663b      	str	r3, [r7, #96]	; 0x60
 80170de:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80170e0:	e853 3f00 	ldrex	r3, [r3]
 80170e4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80170e6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80170e8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80170ec:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80170f0:	687b      	ldr	r3, [r7, #4]
 80170f2:	681b      	ldr	r3, [r3, #0]
 80170f4:	3314      	adds	r3, #20
 80170f6:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80170fa:	66fa      	str	r2, [r7, #108]	; 0x6c
 80170fc:	66bb      	str	r3, [r7, #104]	; 0x68
 80170fe:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8017100:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8017102:	e841 2300 	strex	r3, r2, [r1]
 8017106:	667b      	str	r3, [r7, #100]	; 0x64
 8017108:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801710a:	2b00      	cmp	r3, #0
 801710c:	d1e3      	bne.n	80170d6 <HAL_UART_IRQHandler+0x33a>
 801710e:	687b      	ldr	r3, [r7, #4]
 8017110:	2220      	movs	r2, #32
 8017112:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8017116:	687b      	ldr	r3, [r7, #4]
 8017118:	2200      	movs	r2, #0
 801711a:	631a      	str	r2, [r3, #48]	; 0x30
 801711c:	687b      	ldr	r3, [r7, #4]
 801711e:	681b      	ldr	r3, [r3, #0]
 8017120:	330c      	adds	r3, #12
 8017122:	64fb      	str	r3, [r7, #76]	; 0x4c
 8017124:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017126:	e853 3f00 	ldrex	r3, [r3]
 801712a:	64bb      	str	r3, [r7, #72]	; 0x48
 801712c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801712e:	f023 0310 	bic.w	r3, r3, #16
 8017132:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8017136:	687b      	ldr	r3, [r7, #4]
 8017138:	681b      	ldr	r3, [r3, #0]
 801713a:	330c      	adds	r3, #12
 801713c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8017140:	65ba      	str	r2, [r7, #88]	; 0x58
 8017142:	657b      	str	r3, [r7, #84]	; 0x54
 8017144:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8017146:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8017148:	e841 2300 	strex	r3, r2, [r1]
 801714c:	653b      	str	r3, [r7, #80]	; 0x50
 801714e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017150:	2b00      	cmp	r3, #0
 8017152:	d1e3      	bne.n	801711c <HAL_UART_IRQHandler+0x380>
 8017154:	687b      	ldr	r3, [r7, #4]
 8017156:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017158:	4618      	mov	r0, r3
 801715a:	f7f9 fce9 	bl	8010b30 <HAL_DMA_Abort>
 801715e:	687b      	ldr	r3, [r7, #4]
 8017160:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8017162:	687b      	ldr	r3, [r7, #4]
 8017164:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8017166:	b29b      	uxth	r3, r3
 8017168:	1ad3      	subs	r3, r2, r3
 801716a:	b29b      	uxth	r3, r3
 801716c:	4619      	mov	r1, r3
 801716e:	6878      	ldr	r0, [r7, #4]
 8017170:	f000 f8ca 	bl	8017308 <HAL_UARTEx_RxEventCallback>
 8017174:	e099      	b.n	80172aa <HAL_UART_IRQHandler+0x50e>
 8017176:	bf00      	nop
 8017178:	08017581 	.word	0x08017581
 801717c:	687b      	ldr	r3, [r7, #4]
 801717e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8017180:	687b      	ldr	r3, [r7, #4]
 8017182:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8017184:	b29b      	uxth	r3, r3
 8017186:	1ad3      	subs	r3, r2, r3
 8017188:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 801718c:	687b      	ldr	r3, [r7, #4]
 801718e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8017190:	b29b      	uxth	r3, r3
 8017192:	2b00      	cmp	r3, #0
 8017194:	f000 808b 	beq.w	80172ae <HAL_UART_IRQHandler+0x512>
 8017198:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 801719c:	2b00      	cmp	r3, #0
 801719e:	f000 8086 	beq.w	80172ae <HAL_UART_IRQHandler+0x512>
 80171a2:	687b      	ldr	r3, [r7, #4]
 80171a4:	681b      	ldr	r3, [r3, #0]
 80171a6:	330c      	adds	r3, #12
 80171a8:	63bb      	str	r3, [r7, #56]	; 0x38
 80171aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80171ac:	e853 3f00 	ldrex	r3, [r3]
 80171b0:	637b      	str	r3, [r7, #52]	; 0x34
 80171b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80171b4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80171b8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80171bc:	687b      	ldr	r3, [r7, #4]
 80171be:	681b      	ldr	r3, [r3, #0]
 80171c0:	330c      	adds	r3, #12
 80171c2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80171c6:	647a      	str	r2, [r7, #68]	; 0x44
 80171c8:	643b      	str	r3, [r7, #64]	; 0x40
 80171ca:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80171cc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80171ce:	e841 2300 	strex	r3, r2, [r1]
 80171d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80171d4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80171d6:	2b00      	cmp	r3, #0
 80171d8:	d1e3      	bne.n	80171a2 <HAL_UART_IRQHandler+0x406>
 80171da:	687b      	ldr	r3, [r7, #4]
 80171dc:	681b      	ldr	r3, [r3, #0]
 80171de:	3314      	adds	r3, #20
 80171e0:	627b      	str	r3, [r7, #36]	; 0x24
 80171e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80171e4:	e853 3f00 	ldrex	r3, [r3]
 80171e8:	623b      	str	r3, [r7, #32]
 80171ea:	6a3b      	ldr	r3, [r7, #32]
 80171ec:	f023 0301 	bic.w	r3, r3, #1
 80171f0:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80171f4:	687b      	ldr	r3, [r7, #4]
 80171f6:	681b      	ldr	r3, [r3, #0]
 80171f8:	3314      	adds	r3, #20
 80171fa:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80171fe:	633a      	str	r2, [r7, #48]	; 0x30
 8017200:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017202:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8017204:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8017206:	e841 2300 	strex	r3, r2, [r1]
 801720a:	62bb      	str	r3, [r7, #40]	; 0x28
 801720c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801720e:	2b00      	cmp	r3, #0
 8017210:	d1e3      	bne.n	80171da <HAL_UART_IRQHandler+0x43e>
 8017212:	687b      	ldr	r3, [r7, #4]
 8017214:	2220      	movs	r2, #32
 8017216:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801721a:	687b      	ldr	r3, [r7, #4]
 801721c:	2200      	movs	r2, #0
 801721e:	631a      	str	r2, [r3, #48]	; 0x30
 8017220:	687b      	ldr	r3, [r7, #4]
 8017222:	681b      	ldr	r3, [r3, #0]
 8017224:	330c      	adds	r3, #12
 8017226:	613b      	str	r3, [r7, #16]
 8017228:	693b      	ldr	r3, [r7, #16]
 801722a:	e853 3f00 	ldrex	r3, [r3]
 801722e:	60fb      	str	r3, [r7, #12]
 8017230:	68fb      	ldr	r3, [r7, #12]
 8017232:	f023 0310 	bic.w	r3, r3, #16
 8017236:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 801723a:	687b      	ldr	r3, [r7, #4]
 801723c:	681b      	ldr	r3, [r3, #0]
 801723e:	330c      	adds	r3, #12
 8017240:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8017244:	61fa      	str	r2, [r7, #28]
 8017246:	61bb      	str	r3, [r7, #24]
 8017248:	69b9      	ldr	r1, [r7, #24]
 801724a:	69fa      	ldr	r2, [r7, #28]
 801724c:	e841 2300 	strex	r3, r2, [r1]
 8017250:	617b      	str	r3, [r7, #20]
 8017252:	697b      	ldr	r3, [r7, #20]
 8017254:	2b00      	cmp	r3, #0
 8017256:	d1e3      	bne.n	8017220 <HAL_UART_IRQHandler+0x484>
 8017258:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 801725c:	4619      	mov	r1, r3
 801725e:	6878      	ldr	r0, [r7, #4]
 8017260:	f000 f852 	bl	8017308 <HAL_UARTEx_RxEventCallback>
 8017264:	e023      	b.n	80172ae <HAL_UART_IRQHandler+0x512>
 8017266:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 801726a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801726e:	2b00      	cmp	r3, #0
 8017270:	d009      	beq.n	8017286 <HAL_UART_IRQHandler+0x4ea>
 8017272:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8017276:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801727a:	2b00      	cmp	r3, #0
 801727c:	d003      	beq.n	8017286 <HAL_UART_IRQHandler+0x4ea>
 801727e:	6878      	ldr	r0, [r7, #4]
 8017280:	f000 f992 	bl	80175a8 <UART_Transmit_IT>
 8017284:	e014      	b.n	80172b0 <HAL_UART_IRQHandler+0x514>
 8017286:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 801728a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801728e:	2b00      	cmp	r3, #0
 8017290:	d00e      	beq.n	80172b0 <HAL_UART_IRQHandler+0x514>
 8017292:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8017296:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801729a:	2b00      	cmp	r3, #0
 801729c:	d008      	beq.n	80172b0 <HAL_UART_IRQHandler+0x514>
 801729e:	6878      	ldr	r0, [r7, #4]
 80172a0:	f000 f9d2 	bl	8017648 <UART_EndTransmit_IT>
 80172a4:	e004      	b.n	80172b0 <HAL_UART_IRQHandler+0x514>
 80172a6:	bf00      	nop
 80172a8:	e002      	b.n	80172b0 <HAL_UART_IRQHandler+0x514>
 80172aa:	bf00      	nop
 80172ac:	e000      	b.n	80172b0 <HAL_UART_IRQHandler+0x514>
 80172ae:	bf00      	nop
 80172b0:	37e8      	adds	r7, #232	; 0xe8
 80172b2:	46bd      	mov	sp, r7
 80172b4:	bd80      	pop	{r7, pc}
 80172b6:	bf00      	nop

080172b8 <HAL_UART_TxCpltCallback>:
 80172b8:	b480      	push	{r7}
 80172ba:	b083      	sub	sp, #12
 80172bc:	af00      	add	r7, sp, #0
 80172be:	6078      	str	r0, [r7, #4]
 80172c0:	bf00      	nop
 80172c2:	370c      	adds	r7, #12
 80172c4:	46bd      	mov	sp, r7
 80172c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172ca:	4770      	bx	lr

080172cc <HAL_UART_TxHalfCpltCallback>:
 80172cc:	b480      	push	{r7}
 80172ce:	b083      	sub	sp, #12
 80172d0:	af00      	add	r7, sp, #0
 80172d2:	6078      	str	r0, [r7, #4]
 80172d4:	bf00      	nop
 80172d6:	370c      	adds	r7, #12
 80172d8:	46bd      	mov	sp, r7
 80172da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172de:	4770      	bx	lr

080172e0 <HAL_UART_RxCpltCallback>:
 80172e0:	b480      	push	{r7}
 80172e2:	b083      	sub	sp, #12
 80172e4:	af00      	add	r7, sp, #0
 80172e6:	6078      	str	r0, [r7, #4]
 80172e8:	bf00      	nop
 80172ea:	370c      	adds	r7, #12
 80172ec:	46bd      	mov	sp, r7
 80172ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172f2:	4770      	bx	lr

080172f4 <HAL_UART_ErrorCallback>:
 80172f4:	b480      	push	{r7}
 80172f6:	b083      	sub	sp, #12
 80172f8:	af00      	add	r7, sp, #0
 80172fa:	6078      	str	r0, [r7, #4]
 80172fc:	bf00      	nop
 80172fe:	370c      	adds	r7, #12
 8017300:	46bd      	mov	sp, r7
 8017302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017306:	4770      	bx	lr

08017308 <HAL_UARTEx_RxEventCallback>:
 8017308:	b480      	push	{r7}
 801730a:	b083      	sub	sp, #12
 801730c:	af00      	add	r7, sp, #0
 801730e:	6078      	str	r0, [r7, #4]
 8017310:	460b      	mov	r3, r1
 8017312:	807b      	strh	r3, [r7, #2]
 8017314:	bf00      	nop
 8017316:	370c      	adds	r7, #12
 8017318:	46bd      	mov	sp, r7
 801731a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801731e:	4770      	bx	lr

08017320 <UART_DMATransmitCplt>:
 8017320:	b580      	push	{r7, lr}
 8017322:	b090      	sub	sp, #64	; 0x40
 8017324:	af00      	add	r7, sp, #0
 8017326:	6078      	str	r0, [r7, #4]
 8017328:	687b      	ldr	r3, [r7, #4]
 801732a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801732c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801732e:	687b      	ldr	r3, [r7, #4]
 8017330:	681b      	ldr	r3, [r3, #0]
 8017332:	681b      	ldr	r3, [r3, #0]
 8017334:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017338:	2b00      	cmp	r3, #0
 801733a:	d137      	bne.n	80173ac <UART_DMATransmitCplt+0x8c>
 801733c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801733e:	2200      	movs	r2, #0
 8017340:	84da      	strh	r2, [r3, #38]	; 0x26
 8017342:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017344:	681b      	ldr	r3, [r3, #0]
 8017346:	3314      	adds	r3, #20
 8017348:	627b      	str	r3, [r7, #36]	; 0x24
 801734a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801734c:	e853 3f00 	ldrex	r3, [r3]
 8017350:	623b      	str	r3, [r7, #32]
 8017352:	6a3b      	ldr	r3, [r7, #32]
 8017354:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017358:	63bb      	str	r3, [r7, #56]	; 0x38
 801735a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801735c:	681b      	ldr	r3, [r3, #0]
 801735e:	3314      	adds	r3, #20
 8017360:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8017362:	633a      	str	r2, [r7, #48]	; 0x30
 8017364:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017366:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8017368:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801736a:	e841 2300 	strex	r3, r2, [r1]
 801736e:	62bb      	str	r3, [r7, #40]	; 0x28
 8017370:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017372:	2b00      	cmp	r3, #0
 8017374:	d1e5      	bne.n	8017342 <UART_DMATransmitCplt+0x22>
 8017376:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017378:	681b      	ldr	r3, [r3, #0]
 801737a:	330c      	adds	r3, #12
 801737c:	613b      	str	r3, [r7, #16]
 801737e:	693b      	ldr	r3, [r7, #16]
 8017380:	e853 3f00 	ldrex	r3, [r3]
 8017384:	60fb      	str	r3, [r7, #12]
 8017386:	68fb      	ldr	r3, [r7, #12]
 8017388:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801738c:	637b      	str	r3, [r7, #52]	; 0x34
 801738e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8017390:	681b      	ldr	r3, [r3, #0]
 8017392:	330c      	adds	r3, #12
 8017394:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8017396:	61fa      	str	r2, [r7, #28]
 8017398:	61bb      	str	r3, [r7, #24]
 801739a:	69b9      	ldr	r1, [r7, #24]
 801739c:	69fa      	ldr	r2, [r7, #28]
 801739e:	e841 2300 	strex	r3, r2, [r1]
 80173a2:	617b      	str	r3, [r7, #20]
 80173a4:	697b      	ldr	r3, [r7, #20]
 80173a6:	2b00      	cmp	r3, #0
 80173a8:	d1e5      	bne.n	8017376 <UART_DMATransmitCplt+0x56>
 80173aa:	e002      	b.n	80173b2 <UART_DMATransmitCplt+0x92>
 80173ac:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80173ae:	f7ff ff83 	bl	80172b8 <HAL_UART_TxCpltCallback>
 80173b2:	bf00      	nop
 80173b4:	3740      	adds	r7, #64	; 0x40
 80173b6:	46bd      	mov	sp, r7
 80173b8:	bd80      	pop	{r7, pc}

080173ba <UART_DMATxHalfCplt>:
 80173ba:	b580      	push	{r7, lr}
 80173bc:	b084      	sub	sp, #16
 80173be:	af00      	add	r7, sp, #0
 80173c0:	6078      	str	r0, [r7, #4]
 80173c2:	687b      	ldr	r3, [r7, #4]
 80173c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80173c6:	60fb      	str	r3, [r7, #12]
 80173c8:	68f8      	ldr	r0, [r7, #12]
 80173ca:	f7ff ff7f 	bl	80172cc <HAL_UART_TxHalfCpltCallback>
 80173ce:	bf00      	nop
 80173d0:	3710      	adds	r7, #16
 80173d2:	46bd      	mov	sp, r7
 80173d4:	bd80      	pop	{r7, pc}

080173d6 <UART_DMAError>:
 80173d6:	b580      	push	{r7, lr}
 80173d8:	b084      	sub	sp, #16
 80173da:	af00      	add	r7, sp, #0
 80173dc:	6078      	str	r0, [r7, #4]
 80173de:	2300      	movs	r3, #0
 80173e0:	60fb      	str	r3, [r7, #12]
 80173e2:	687b      	ldr	r3, [r7, #4]
 80173e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80173e6:	60bb      	str	r3, [r7, #8]
 80173e8:	68bb      	ldr	r3, [r7, #8]
 80173ea:	681b      	ldr	r3, [r3, #0]
 80173ec:	695b      	ldr	r3, [r3, #20]
 80173ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80173f2:	2b80      	cmp	r3, #128	; 0x80
 80173f4:	bf0c      	ite	eq
 80173f6:	2301      	moveq	r3, #1
 80173f8:	2300      	movne	r3, #0
 80173fa:	b2db      	uxtb	r3, r3
 80173fc:	60fb      	str	r3, [r7, #12]
 80173fe:	68bb      	ldr	r3, [r7, #8]
 8017400:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8017404:	b2db      	uxtb	r3, r3
 8017406:	2b21      	cmp	r3, #33	; 0x21
 8017408:	d108      	bne.n	801741c <UART_DMAError+0x46>
 801740a:	68fb      	ldr	r3, [r7, #12]
 801740c:	2b00      	cmp	r3, #0
 801740e:	d005      	beq.n	801741c <UART_DMAError+0x46>
 8017410:	68bb      	ldr	r3, [r7, #8]
 8017412:	2200      	movs	r2, #0
 8017414:	84da      	strh	r2, [r3, #38]	; 0x26
 8017416:	68b8      	ldr	r0, [r7, #8]
 8017418:	f000 f827 	bl	801746a <UART_EndTxTransfer>
 801741c:	68bb      	ldr	r3, [r7, #8]
 801741e:	681b      	ldr	r3, [r3, #0]
 8017420:	695b      	ldr	r3, [r3, #20]
 8017422:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8017426:	2b40      	cmp	r3, #64	; 0x40
 8017428:	bf0c      	ite	eq
 801742a:	2301      	moveq	r3, #1
 801742c:	2300      	movne	r3, #0
 801742e:	b2db      	uxtb	r3, r3
 8017430:	60fb      	str	r3, [r7, #12]
 8017432:	68bb      	ldr	r3, [r7, #8]
 8017434:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8017438:	b2db      	uxtb	r3, r3
 801743a:	2b22      	cmp	r3, #34	; 0x22
 801743c:	d108      	bne.n	8017450 <UART_DMAError+0x7a>
 801743e:	68fb      	ldr	r3, [r7, #12]
 8017440:	2b00      	cmp	r3, #0
 8017442:	d005      	beq.n	8017450 <UART_DMAError+0x7a>
 8017444:	68bb      	ldr	r3, [r7, #8]
 8017446:	2200      	movs	r2, #0
 8017448:	85da      	strh	r2, [r3, #46]	; 0x2e
 801744a:	68b8      	ldr	r0, [r7, #8]
 801744c:	f000 f835 	bl	80174ba <UART_EndRxTransfer>
 8017450:	68bb      	ldr	r3, [r7, #8]
 8017452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017454:	f043 0210 	orr.w	r2, r3, #16
 8017458:	68bb      	ldr	r3, [r7, #8]
 801745a:	641a      	str	r2, [r3, #64]	; 0x40
 801745c:	68b8      	ldr	r0, [r7, #8]
 801745e:	f7ff ff49 	bl	80172f4 <HAL_UART_ErrorCallback>
 8017462:	bf00      	nop
 8017464:	3710      	adds	r7, #16
 8017466:	46bd      	mov	sp, r7
 8017468:	bd80      	pop	{r7, pc}

0801746a <UART_EndTxTransfer>:
 801746a:	b480      	push	{r7}
 801746c:	b089      	sub	sp, #36	; 0x24
 801746e:	af00      	add	r7, sp, #0
 8017470:	6078      	str	r0, [r7, #4]
 8017472:	687b      	ldr	r3, [r7, #4]
 8017474:	681b      	ldr	r3, [r3, #0]
 8017476:	330c      	adds	r3, #12
 8017478:	60fb      	str	r3, [r7, #12]
 801747a:	68fb      	ldr	r3, [r7, #12]
 801747c:	e853 3f00 	ldrex	r3, [r3]
 8017480:	60bb      	str	r3, [r7, #8]
 8017482:	68bb      	ldr	r3, [r7, #8]
 8017484:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8017488:	61fb      	str	r3, [r7, #28]
 801748a:	687b      	ldr	r3, [r7, #4]
 801748c:	681b      	ldr	r3, [r3, #0]
 801748e:	330c      	adds	r3, #12
 8017490:	69fa      	ldr	r2, [r7, #28]
 8017492:	61ba      	str	r2, [r7, #24]
 8017494:	617b      	str	r3, [r7, #20]
 8017496:	6979      	ldr	r1, [r7, #20]
 8017498:	69ba      	ldr	r2, [r7, #24]
 801749a:	e841 2300 	strex	r3, r2, [r1]
 801749e:	613b      	str	r3, [r7, #16]
 80174a0:	693b      	ldr	r3, [r7, #16]
 80174a2:	2b00      	cmp	r3, #0
 80174a4:	d1e5      	bne.n	8017472 <UART_EndTxTransfer+0x8>
 80174a6:	687b      	ldr	r3, [r7, #4]
 80174a8:	2220      	movs	r2, #32
 80174aa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80174ae:	bf00      	nop
 80174b0:	3724      	adds	r7, #36	; 0x24
 80174b2:	46bd      	mov	sp, r7
 80174b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80174b8:	4770      	bx	lr

080174ba <UART_EndRxTransfer>:
 80174ba:	b480      	push	{r7}
 80174bc:	b095      	sub	sp, #84	; 0x54
 80174be:	af00      	add	r7, sp, #0
 80174c0:	6078      	str	r0, [r7, #4]
 80174c2:	687b      	ldr	r3, [r7, #4]
 80174c4:	681b      	ldr	r3, [r3, #0]
 80174c6:	330c      	adds	r3, #12
 80174c8:	637b      	str	r3, [r7, #52]	; 0x34
 80174ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80174cc:	e853 3f00 	ldrex	r3, [r3]
 80174d0:	633b      	str	r3, [r7, #48]	; 0x30
 80174d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80174d4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80174d8:	64fb      	str	r3, [r7, #76]	; 0x4c
 80174da:	687b      	ldr	r3, [r7, #4]
 80174dc:	681b      	ldr	r3, [r3, #0]
 80174de:	330c      	adds	r3, #12
 80174e0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80174e2:	643a      	str	r2, [r7, #64]	; 0x40
 80174e4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80174e6:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80174e8:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80174ea:	e841 2300 	strex	r3, r2, [r1]
 80174ee:	63bb      	str	r3, [r7, #56]	; 0x38
 80174f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80174f2:	2b00      	cmp	r3, #0
 80174f4:	d1e5      	bne.n	80174c2 <UART_EndRxTransfer+0x8>
 80174f6:	687b      	ldr	r3, [r7, #4]
 80174f8:	681b      	ldr	r3, [r3, #0]
 80174fa:	3314      	adds	r3, #20
 80174fc:	623b      	str	r3, [r7, #32]
 80174fe:	6a3b      	ldr	r3, [r7, #32]
 8017500:	e853 3f00 	ldrex	r3, [r3]
 8017504:	61fb      	str	r3, [r7, #28]
 8017506:	69fb      	ldr	r3, [r7, #28]
 8017508:	f023 0301 	bic.w	r3, r3, #1
 801750c:	64bb      	str	r3, [r7, #72]	; 0x48
 801750e:	687b      	ldr	r3, [r7, #4]
 8017510:	681b      	ldr	r3, [r3, #0]
 8017512:	3314      	adds	r3, #20
 8017514:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8017516:	62fa      	str	r2, [r7, #44]	; 0x2c
 8017518:	62bb      	str	r3, [r7, #40]	; 0x28
 801751a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801751c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801751e:	e841 2300 	strex	r3, r2, [r1]
 8017522:	627b      	str	r3, [r7, #36]	; 0x24
 8017524:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8017526:	2b00      	cmp	r3, #0
 8017528:	d1e5      	bne.n	80174f6 <UART_EndRxTransfer+0x3c>
 801752a:	687b      	ldr	r3, [r7, #4]
 801752c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801752e:	2b01      	cmp	r3, #1
 8017530:	d119      	bne.n	8017566 <UART_EndRxTransfer+0xac>
 8017532:	687b      	ldr	r3, [r7, #4]
 8017534:	681b      	ldr	r3, [r3, #0]
 8017536:	330c      	adds	r3, #12
 8017538:	60fb      	str	r3, [r7, #12]
 801753a:	68fb      	ldr	r3, [r7, #12]
 801753c:	e853 3f00 	ldrex	r3, [r3]
 8017540:	60bb      	str	r3, [r7, #8]
 8017542:	68bb      	ldr	r3, [r7, #8]
 8017544:	f023 0310 	bic.w	r3, r3, #16
 8017548:	647b      	str	r3, [r7, #68]	; 0x44
 801754a:	687b      	ldr	r3, [r7, #4]
 801754c:	681b      	ldr	r3, [r3, #0]
 801754e:	330c      	adds	r3, #12
 8017550:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8017552:	61ba      	str	r2, [r7, #24]
 8017554:	617b      	str	r3, [r7, #20]
 8017556:	6979      	ldr	r1, [r7, #20]
 8017558:	69ba      	ldr	r2, [r7, #24]
 801755a:	e841 2300 	strex	r3, r2, [r1]
 801755e:	613b      	str	r3, [r7, #16]
 8017560:	693b      	ldr	r3, [r7, #16]
 8017562:	2b00      	cmp	r3, #0
 8017564:	d1e5      	bne.n	8017532 <UART_EndRxTransfer+0x78>
 8017566:	687b      	ldr	r3, [r7, #4]
 8017568:	2220      	movs	r2, #32
 801756a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801756e:	687b      	ldr	r3, [r7, #4]
 8017570:	2200      	movs	r2, #0
 8017572:	631a      	str	r2, [r3, #48]	; 0x30
 8017574:	bf00      	nop
 8017576:	3754      	adds	r7, #84	; 0x54
 8017578:	46bd      	mov	sp, r7
 801757a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801757e:	4770      	bx	lr

08017580 <UART_DMAAbortOnError>:
 8017580:	b580      	push	{r7, lr}
 8017582:	b084      	sub	sp, #16
 8017584:	af00      	add	r7, sp, #0
 8017586:	6078      	str	r0, [r7, #4]
 8017588:	687b      	ldr	r3, [r7, #4]
 801758a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801758c:	60fb      	str	r3, [r7, #12]
 801758e:	68fb      	ldr	r3, [r7, #12]
 8017590:	2200      	movs	r2, #0
 8017592:	85da      	strh	r2, [r3, #46]	; 0x2e
 8017594:	68fb      	ldr	r3, [r7, #12]
 8017596:	2200      	movs	r2, #0
 8017598:	84da      	strh	r2, [r3, #38]	; 0x26
 801759a:	68f8      	ldr	r0, [r7, #12]
 801759c:	f7ff feaa 	bl	80172f4 <HAL_UART_ErrorCallback>
 80175a0:	bf00      	nop
 80175a2:	3710      	adds	r7, #16
 80175a4:	46bd      	mov	sp, r7
 80175a6:	bd80      	pop	{r7, pc}

080175a8 <UART_Transmit_IT>:
 80175a8:	b480      	push	{r7}
 80175aa:	b085      	sub	sp, #20
 80175ac:	af00      	add	r7, sp, #0
 80175ae:	6078      	str	r0, [r7, #4]
 80175b0:	687b      	ldr	r3, [r7, #4]
 80175b2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80175b6:	b2db      	uxtb	r3, r3
 80175b8:	2b21      	cmp	r3, #33	; 0x21
 80175ba:	d13e      	bne.n	801763a <UART_Transmit_IT+0x92>
 80175bc:	687b      	ldr	r3, [r7, #4]
 80175be:	689b      	ldr	r3, [r3, #8]
 80175c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80175c4:	d114      	bne.n	80175f0 <UART_Transmit_IT+0x48>
 80175c6:	687b      	ldr	r3, [r7, #4]
 80175c8:	691b      	ldr	r3, [r3, #16]
 80175ca:	2b00      	cmp	r3, #0
 80175cc:	d110      	bne.n	80175f0 <UART_Transmit_IT+0x48>
 80175ce:	687b      	ldr	r3, [r7, #4]
 80175d0:	6a1b      	ldr	r3, [r3, #32]
 80175d2:	60fb      	str	r3, [r7, #12]
 80175d4:	68fb      	ldr	r3, [r7, #12]
 80175d6:	881b      	ldrh	r3, [r3, #0]
 80175d8:	461a      	mov	r2, r3
 80175da:	687b      	ldr	r3, [r7, #4]
 80175dc:	681b      	ldr	r3, [r3, #0]
 80175de:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80175e2:	605a      	str	r2, [r3, #4]
 80175e4:	687b      	ldr	r3, [r7, #4]
 80175e6:	6a1b      	ldr	r3, [r3, #32]
 80175e8:	1c9a      	adds	r2, r3, #2
 80175ea:	687b      	ldr	r3, [r7, #4]
 80175ec:	621a      	str	r2, [r3, #32]
 80175ee:	e008      	b.n	8017602 <UART_Transmit_IT+0x5a>
 80175f0:	687b      	ldr	r3, [r7, #4]
 80175f2:	6a1b      	ldr	r3, [r3, #32]
 80175f4:	1c59      	adds	r1, r3, #1
 80175f6:	687a      	ldr	r2, [r7, #4]
 80175f8:	6211      	str	r1, [r2, #32]
 80175fa:	781a      	ldrb	r2, [r3, #0]
 80175fc:	687b      	ldr	r3, [r7, #4]
 80175fe:	681b      	ldr	r3, [r3, #0]
 8017600:	605a      	str	r2, [r3, #4]
 8017602:	687b      	ldr	r3, [r7, #4]
 8017604:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8017606:	b29b      	uxth	r3, r3
 8017608:	3b01      	subs	r3, #1
 801760a:	b29b      	uxth	r3, r3
 801760c:	687a      	ldr	r2, [r7, #4]
 801760e:	4619      	mov	r1, r3
 8017610:	84d1      	strh	r1, [r2, #38]	; 0x26
 8017612:	2b00      	cmp	r3, #0
 8017614:	d10f      	bne.n	8017636 <UART_Transmit_IT+0x8e>
 8017616:	687b      	ldr	r3, [r7, #4]
 8017618:	681b      	ldr	r3, [r3, #0]
 801761a:	68da      	ldr	r2, [r3, #12]
 801761c:	687b      	ldr	r3, [r7, #4]
 801761e:	681b      	ldr	r3, [r3, #0]
 8017620:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8017624:	60da      	str	r2, [r3, #12]
 8017626:	687b      	ldr	r3, [r7, #4]
 8017628:	681b      	ldr	r3, [r3, #0]
 801762a:	68da      	ldr	r2, [r3, #12]
 801762c:	687b      	ldr	r3, [r7, #4]
 801762e:	681b      	ldr	r3, [r3, #0]
 8017630:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8017634:	60da      	str	r2, [r3, #12]
 8017636:	2300      	movs	r3, #0
 8017638:	e000      	b.n	801763c <UART_Transmit_IT+0x94>
 801763a:	2302      	movs	r3, #2
 801763c:	4618      	mov	r0, r3
 801763e:	3714      	adds	r7, #20
 8017640:	46bd      	mov	sp, r7
 8017642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017646:	4770      	bx	lr

08017648 <UART_EndTransmit_IT>:
 8017648:	b580      	push	{r7, lr}
 801764a:	b082      	sub	sp, #8
 801764c:	af00      	add	r7, sp, #0
 801764e:	6078      	str	r0, [r7, #4]
 8017650:	687b      	ldr	r3, [r7, #4]
 8017652:	681b      	ldr	r3, [r3, #0]
 8017654:	68da      	ldr	r2, [r3, #12]
 8017656:	687b      	ldr	r3, [r7, #4]
 8017658:	681b      	ldr	r3, [r3, #0]
 801765a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801765e:	60da      	str	r2, [r3, #12]
 8017660:	687b      	ldr	r3, [r7, #4]
 8017662:	2220      	movs	r2, #32
 8017664:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8017668:	6878      	ldr	r0, [r7, #4]
 801766a:	f7ff fe25 	bl	80172b8 <HAL_UART_TxCpltCallback>
 801766e:	2300      	movs	r3, #0
 8017670:	4618      	mov	r0, r3
 8017672:	3708      	adds	r7, #8
 8017674:	46bd      	mov	sp, r7
 8017676:	bd80      	pop	{r7, pc}

08017678 <UART_Receive_IT>:
 8017678:	b580      	push	{r7, lr}
 801767a:	b08c      	sub	sp, #48	; 0x30
 801767c:	af00      	add	r7, sp, #0
 801767e:	6078      	str	r0, [r7, #4]
 8017680:	687b      	ldr	r3, [r7, #4]
 8017682:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8017686:	b2db      	uxtb	r3, r3
 8017688:	2b22      	cmp	r3, #34	; 0x22
 801768a:	f040 80ab 	bne.w	80177e4 <UART_Receive_IT+0x16c>
 801768e:	687b      	ldr	r3, [r7, #4]
 8017690:	689b      	ldr	r3, [r3, #8]
 8017692:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8017696:	d117      	bne.n	80176c8 <UART_Receive_IT+0x50>
 8017698:	687b      	ldr	r3, [r7, #4]
 801769a:	691b      	ldr	r3, [r3, #16]
 801769c:	2b00      	cmp	r3, #0
 801769e:	d113      	bne.n	80176c8 <UART_Receive_IT+0x50>
 80176a0:	2300      	movs	r3, #0
 80176a2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80176a4:	687b      	ldr	r3, [r7, #4]
 80176a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176a8:	62bb      	str	r3, [r7, #40]	; 0x28
 80176aa:	687b      	ldr	r3, [r7, #4]
 80176ac:	681b      	ldr	r3, [r3, #0]
 80176ae:	685b      	ldr	r3, [r3, #4]
 80176b0:	b29b      	uxth	r3, r3
 80176b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80176b6:	b29a      	uxth	r2, r3
 80176b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80176ba:	801a      	strh	r2, [r3, #0]
 80176bc:	687b      	ldr	r3, [r7, #4]
 80176be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176c0:	1c9a      	adds	r2, r3, #2
 80176c2:	687b      	ldr	r3, [r7, #4]
 80176c4:	629a      	str	r2, [r3, #40]	; 0x28
 80176c6:	e026      	b.n	8017716 <UART_Receive_IT+0x9e>
 80176c8:	687b      	ldr	r3, [r7, #4]
 80176ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80176ce:	2300      	movs	r3, #0
 80176d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80176d2:	687b      	ldr	r3, [r7, #4]
 80176d4:	689b      	ldr	r3, [r3, #8]
 80176d6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80176da:	d007      	beq.n	80176ec <UART_Receive_IT+0x74>
 80176dc:	687b      	ldr	r3, [r7, #4]
 80176de:	689b      	ldr	r3, [r3, #8]
 80176e0:	2b00      	cmp	r3, #0
 80176e2:	d10a      	bne.n	80176fa <UART_Receive_IT+0x82>
 80176e4:	687b      	ldr	r3, [r7, #4]
 80176e6:	691b      	ldr	r3, [r3, #16]
 80176e8:	2b00      	cmp	r3, #0
 80176ea:	d106      	bne.n	80176fa <UART_Receive_IT+0x82>
 80176ec:	687b      	ldr	r3, [r7, #4]
 80176ee:	681b      	ldr	r3, [r3, #0]
 80176f0:	685b      	ldr	r3, [r3, #4]
 80176f2:	b2da      	uxtb	r2, r3
 80176f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80176f6:	701a      	strb	r2, [r3, #0]
 80176f8:	e008      	b.n	801770c <UART_Receive_IT+0x94>
 80176fa:	687b      	ldr	r3, [r7, #4]
 80176fc:	681b      	ldr	r3, [r3, #0]
 80176fe:	685b      	ldr	r3, [r3, #4]
 8017700:	b2db      	uxtb	r3, r3
 8017702:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8017706:	b2da      	uxtb	r2, r3
 8017708:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801770a:	701a      	strb	r2, [r3, #0]
 801770c:	687b      	ldr	r3, [r7, #4]
 801770e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017710:	1c5a      	adds	r2, r3, #1
 8017712:	687b      	ldr	r3, [r7, #4]
 8017714:	629a      	str	r2, [r3, #40]	; 0x28
 8017716:	687b      	ldr	r3, [r7, #4]
 8017718:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 801771a:	b29b      	uxth	r3, r3
 801771c:	3b01      	subs	r3, #1
 801771e:	b29b      	uxth	r3, r3
 8017720:	687a      	ldr	r2, [r7, #4]
 8017722:	4619      	mov	r1, r3
 8017724:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8017726:	2b00      	cmp	r3, #0
 8017728:	d15a      	bne.n	80177e0 <UART_Receive_IT+0x168>
 801772a:	687b      	ldr	r3, [r7, #4]
 801772c:	681b      	ldr	r3, [r3, #0]
 801772e:	68da      	ldr	r2, [r3, #12]
 8017730:	687b      	ldr	r3, [r7, #4]
 8017732:	681b      	ldr	r3, [r3, #0]
 8017734:	f022 0220 	bic.w	r2, r2, #32
 8017738:	60da      	str	r2, [r3, #12]
 801773a:	687b      	ldr	r3, [r7, #4]
 801773c:	681b      	ldr	r3, [r3, #0]
 801773e:	68da      	ldr	r2, [r3, #12]
 8017740:	687b      	ldr	r3, [r7, #4]
 8017742:	681b      	ldr	r3, [r3, #0]
 8017744:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8017748:	60da      	str	r2, [r3, #12]
 801774a:	687b      	ldr	r3, [r7, #4]
 801774c:	681b      	ldr	r3, [r3, #0]
 801774e:	695a      	ldr	r2, [r3, #20]
 8017750:	687b      	ldr	r3, [r7, #4]
 8017752:	681b      	ldr	r3, [r3, #0]
 8017754:	f022 0201 	bic.w	r2, r2, #1
 8017758:	615a      	str	r2, [r3, #20]
 801775a:	687b      	ldr	r3, [r7, #4]
 801775c:	2220      	movs	r2, #32
 801775e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8017762:	687b      	ldr	r3, [r7, #4]
 8017764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017766:	2b01      	cmp	r3, #1
 8017768:	d135      	bne.n	80177d6 <UART_Receive_IT+0x15e>
 801776a:	687b      	ldr	r3, [r7, #4]
 801776c:	2200      	movs	r2, #0
 801776e:	631a      	str	r2, [r3, #48]	; 0x30
 8017770:	687b      	ldr	r3, [r7, #4]
 8017772:	681b      	ldr	r3, [r3, #0]
 8017774:	330c      	adds	r3, #12
 8017776:	617b      	str	r3, [r7, #20]
 8017778:	697b      	ldr	r3, [r7, #20]
 801777a:	e853 3f00 	ldrex	r3, [r3]
 801777e:	613b      	str	r3, [r7, #16]
 8017780:	693b      	ldr	r3, [r7, #16]
 8017782:	f023 0310 	bic.w	r3, r3, #16
 8017786:	627b      	str	r3, [r7, #36]	; 0x24
 8017788:	687b      	ldr	r3, [r7, #4]
 801778a:	681b      	ldr	r3, [r3, #0]
 801778c:	330c      	adds	r3, #12
 801778e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8017790:	623a      	str	r2, [r7, #32]
 8017792:	61fb      	str	r3, [r7, #28]
 8017794:	69f9      	ldr	r1, [r7, #28]
 8017796:	6a3a      	ldr	r2, [r7, #32]
 8017798:	e841 2300 	strex	r3, r2, [r1]
 801779c:	61bb      	str	r3, [r7, #24]
 801779e:	69bb      	ldr	r3, [r7, #24]
 80177a0:	2b00      	cmp	r3, #0
 80177a2:	d1e5      	bne.n	8017770 <UART_Receive_IT+0xf8>
 80177a4:	687b      	ldr	r3, [r7, #4]
 80177a6:	681b      	ldr	r3, [r3, #0]
 80177a8:	681b      	ldr	r3, [r3, #0]
 80177aa:	f003 0310 	and.w	r3, r3, #16
 80177ae:	2b10      	cmp	r3, #16
 80177b0:	d10a      	bne.n	80177c8 <UART_Receive_IT+0x150>
 80177b2:	2300      	movs	r3, #0
 80177b4:	60fb      	str	r3, [r7, #12]
 80177b6:	687b      	ldr	r3, [r7, #4]
 80177b8:	681b      	ldr	r3, [r3, #0]
 80177ba:	681b      	ldr	r3, [r3, #0]
 80177bc:	60fb      	str	r3, [r7, #12]
 80177be:	687b      	ldr	r3, [r7, #4]
 80177c0:	681b      	ldr	r3, [r3, #0]
 80177c2:	685b      	ldr	r3, [r3, #4]
 80177c4:	60fb      	str	r3, [r7, #12]
 80177c6:	68fb      	ldr	r3, [r7, #12]
 80177c8:	687b      	ldr	r3, [r7, #4]
 80177ca:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80177cc:	4619      	mov	r1, r3
 80177ce:	6878      	ldr	r0, [r7, #4]
 80177d0:	f7ff fd9a 	bl	8017308 <HAL_UARTEx_RxEventCallback>
 80177d4:	e002      	b.n	80177dc <UART_Receive_IT+0x164>
 80177d6:	6878      	ldr	r0, [r7, #4]
 80177d8:	f7ff fd82 	bl	80172e0 <HAL_UART_RxCpltCallback>
 80177dc:	2300      	movs	r3, #0
 80177de:	e002      	b.n	80177e6 <UART_Receive_IT+0x16e>
 80177e0:	2300      	movs	r3, #0
 80177e2:	e000      	b.n	80177e6 <UART_Receive_IT+0x16e>
 80177e4:	2302      	movs	r3, #2
 80177e6:	4618      	mov	r0, r3
 80177e8:	3730      	adds	r7, #48	; 0x30
 80177ea:	46bd      	mov	sp, r7
 80177ec:	bd80      	pop	{r7, pc}
	...

080177f0 <UART_SetConfig>:
 80177f0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80177f4:	b0c0      	sub	sp, #256	; 0x100
 80177f6:	af00      	add	r7, sp, #0
 80177f8:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 80177fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017800:	681b      	ldr	r3, [r3, #0]
 8017802:	691b      	ldr	r3, [r3, #16]
 8017804:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8017808:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801780c:	68d9      	ldr	r1, [r3, #12]
 801780e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017812:	681a      	ldr	r2, [r3, #0]
 8017814:	ea40 0301 	orr.w	r3, r0, r1
 8017818:	6113      	str	r3, [r2, #16]
 801781a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801781e:	689a      	ldr	r2, [r3, #8]
 8017820:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017824:	691b      	ldr	r3, [r3, #16]
 8017826:	431a      	orrs	r2, r3
 8017828:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801782c:	695b      	ldr	r3, [r3, #20]
 801782e:	431a      	orrs	r2, r3
 8017830:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017834:	69db      	ldr	r3, [r3, #28]
 8017836:	4313      	orrs	r3, r2
 8017838:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 801783c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017840:	681b      	ldr	r3, [r3, #0]
 8017842:	68db      	ldr	r3, [r3, #12]
 8017844:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8017848:	f021 010c 	bic.w	r1, r1, #12
 801784c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017850:	681a      	ldr	r2, [r3, #0]
 8017852:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8017856:	430b      	orrs	r3, r1
 8017858:	60d3      	str	r3, [r2, #12]
 801785a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801785e:	681b      	ldr	r3, [r3, #0]
 8017860:	695b      	ldr	r3, [r3, #20]
 8017862:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8017866:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801786a:	6999      	ldr	r1, [r3, #24]
 801786c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017870:	681a      	ldr	r2, [r3, #0]
 8017872:	ea40 0301 	orr.w	r3, r0, r1
 8017876:	6153      	str	r3, [r2, #20]
 8017878:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801787c:	681a      	ldr	r2, [r3, #0]
 801787e:	4b8f      	ldr	r3, [pc, #572]	; (8017abc <UART_SetConfig+0x2cc>)
 8017880:	429a      	cmp	r2, r3
 8017882:	d005      	beq.n	8017890 <UART_SetConfig+0xa0>
 8017884:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017888:	681a      	ldr	r2, [r3, #0]
 801788a:	4b8d      	ldr	r3, [pc, #564]	; (8017ac0 <UART_SetConfig+0x2d0>)
 801788c:	429a      	cmp	r2, r3
 801788e:	d104      	bne.n	801789a <UART_SetConfig+0xaa>
 8017890:	f7fd fa78 	bl	8014d84 <HAL_RCC_GetPCLK2Freq>
 8017894:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8017898:	e003      	b.n	80178a2 <UART_SetConfig+0xb2>
 801789a:	f7fd fa5f 	bl	8014d5c <HAL_RCC_GetPCLK1Freq>
 801789e:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 80178a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80178a6:	69db      	ldr	r3, [r3, #28]
 80178a8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80178ac:	f040 810c 	bne.w	8017ac8 <UART_SetConfig+0x2d8>
 80178b0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80178b4:	2200      	movs	r2, #0
 80178b6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80178ba:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 80178be:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 80178c2:	4622      	mov	r2, r4
 80178c4:	462b      	mov	r3, r5
 80178c6:	1891      	adds	r1, r2, r2
 80178c8:	65b9      	str	r1, [r7, #88]	; 0x58
 80178ca:	415b      	adcs	r3, r3
 80178cc:	65fb      	str	r3, [r7, #92]	; 0x5c
 80178ce:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 80178d2:	4621      	mov	r1, r4
 80178d4:	eb12 0801 	adds.w	r8, r2, r1
 80178d8:	4629      	mov	r1, r5
 80178da:	eb43 0901 	adc.w	r9, r3, r1
 80178de:	f04f 0200 	mov.w	r2, #0
 80178e2:	f04f 0300 	mov.w	r3, #0
 80178e6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80178ea:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80178ee:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80178f2:	4690      	mov	r8, r2
 80178f4:	4699      	mov	r9, r3
 80178f6:	4623      	mov	r3, r4
 80178f8:	eb18 0303 	adds.w	r3, r8, r3
 80178fc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8017900:	462b      	mov	r3, r5
 8017902:	eb49 0303 	adc.w	r3, r9, r3
 8017906:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 801790a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801790e:	685b      	ldr	r3, [r3, #4]
 8017910:	2200      	movs	r2, #0
 8017912:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8017916:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 801791a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 801791e:	460b      	mov	r3, r1
 8017920:	18db      	adds	r3, r3, r3
 8017922:	653b      	str	r3, [r7, #80]	; 0x50
 8017924:	4613      	mov	r3, r2
 8017926:	eb42 0303 	adc.w	r3, r2, r3
 801792a:	657b      	str	r3, [r7, #84]	; 0x54
 801792c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8017930:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8017934:	f7e9 f9a8 	bl	8000c88 <__aeabi_uldivmod>
 8017938:	4602      	mov	r2, r0
 801793a:	460b      	mov	r3, r1
 801793c:	4b61      	ldr	r3, [pc, #388]	; (8017ac4 <UART_SetConfig+0x2d4>)
 801793e:	fba3 2302 	umull	r2, r3, r3, r2
 8017942:	095b      	lsrs	r3, r3, #5
 8017944:	011c      	lsls	r4, r3, #4
 8017946:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 801794a:	2200      	movs	r2, #0
 801794c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8017950:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8017954:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8017958:	4642      	mov	r2, r8
 801795a:	464b      	mov	r3, r9
 801795c:	1891      	adds	r1, r2, r2
 801795e:	64b9      	str	r1, [r7, #72]	; 0x48
 8017960:	415b      	adcs	r3, r3
 8017962:	64fb      	str	r3, [r7, #76]	; 0x4c
 8017964:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8017968:	4641      	mov	r1, r8
 801796a:	eb12 0a01 	adds.w	sl, r2, r1
 801796e:	4649      	mov	r1, r9
 8017970:	eb43 0b01 	adc.w	fp, r3, r1
 8017974:	f04f 0200 	mov.w	r2, #0
 8017978:	f04f 0300 	mov.w	r3, #0
 801797c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8017980:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8017984:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8017988:	4692      	mov	sl, r2
 801798a:	469b      	mov	fp, r3
 801798c:	4643      	mov	r3, r8
 801798e:	eb1a 0303 	adds.w	r3, sl, r3
 8017992:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8017996:	464b      	mov	r3, r9
 8017998:	eb4b 0303 	adc.w	r3, fp, r3
 801799c:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80179a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179a4:	685b      	ldr	r3, [r3, #4]
 80179a6:	2200      	movs	r2, #0
 80179a8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80179ac:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 80179b0:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 80179b4:	460b      	mov	r3, r1
 80179b6:	18db      	adds	r3, r3, r3
 80179b8:	643b      	str	r3, [r7, #64]	; 0x40
 80179ba:	4613      	mov	r3, r2
 80179bc:	eb42 0303 	adc.w	r3, r2, r3
 80179c0:	647b      	str	r3, [r7, #68]	; 0x44
 80179c2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80179c6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 80179ca:	f7e9 f95d 	bl	8000c88 <__aeabi_uldivmod>
 80179ce:	4602      	mov	r2, r0
 80179d0:	460b      	mov	r3, r1
 80179d2:	4611      	mov	r1, r2
 80179d4:	4b3b      	ldr	r3, [pc, #236]	; (8017ac4 <UART_SetConfig+0x2d4>)
 80179d6:	fba3 2301 	umull	r2, r3, r3, r1
 80179da:	095b      	lsrs	r3, r3, #5
 80179dc:	2264      	movs	r2, #100	; 0x64
 80179de:	fb02 f303 	mul.w	r3, r2, r3
 80179e2:	1acb      	subs	r3, r1, r3
 80179e4:	00db      	lsls	r3, r3, #3
 80179e6:	f103 0232 	add.w	r2, r3, #50	; 0x32
 80179ea:	4b36      	ldr	r3, [pc, #216]	; (8017ac4 <UART_SetConfig+0x2d4>)
 80179ec:	fba3 2302 	umull	r2, r3, r3, r2
 80179f0:	095b      	lsrs	r3, r3, #5
 80179f2:	005b      	lsls	r3, r3, #1
 80179f4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80179f8:	441c      	add	r4, r3
 80179fa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80179fe:	2200      	movs	r2, #0
 8017a00:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8017a04:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8017a08:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8017a0c:	4642      	mov	r2, r8
 8017a0e:	464b      	mov	r3, r9
 8017a10:	1891      	adds	r1, r2, r2
 8017a12:	63b9      	str	r1, [r7, #56]	; 0x38
 8017a14:	415b      	adcs	r3, r3
 8017a16:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017a18:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8017a1c:	4641      	mov	r1, r8
 8017a1e:	1851      	adds	r1, r2, r1
 8017a20:	6339      	str	r1, [r7, #48]	; 0x30
 8017a22:	4649      	mov	r1, r9
 8017a24:	414b      	adcs	r3, r1
 8017a26:	637b      	str	r3, [r7, #52]	; 0x34
 8017a28:	f04f 0200 	mov.w	r2, #0
 8017a2c:	f04f 0300 	mov.w	r3, #0
 8017a30:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8017a34:	4659      	mov	r1, fp
 8017a36:	00cb      	lsls	r3, r1, #3
 8017a38:	4651      	mov	r1, sl
 8017a3a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017a3e:	4651      	mov	r1, sl
 8017a40:	00ca      	lsls	r2, r1, #3
 8017a42:	4610      	mov	r0, r2
 8017a44:	4619      	mov	r1, r3
 8017a46:	4603      	mov	r3, r0
 8017a48:	4642      	mov	r2, r8
 8017a4a:	189b      	adds	r3, r3, r2
 8017a4c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8017a50:	464b      	mov	r3, r9
 8017a52:	460a      	mov	r2, r1
 8017a54:	eb42 0303 	adc.w	r3, r2, r3
 8017a58:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8017a5c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017a60:	685b      	ldr	r3, [r3, #4]
 8017a62:	2200      	movs	r2, #0
 8017a64:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8017a68:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8017a6c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8017a70:	460b      	mov	r3, r1
 8017a72:	18db      	adds	r3, r3, r3
 8017a74:	62bb      	str	r3, [r7, #40]	; 0x28
 8017a76:	4613      	mov	r3, r2
 8017a78:	eb42 0303 	adc.w	r3, r2, r3
 8017a7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017a7e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8017a82:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8017a86:	f7e9 f8ff 	bl	8000c88 <__aeabi_uldivmod>
 8017a8a:	4602      	mov	r2, r0
 8017a8c:	460b      	mov	r3, r1
 8017a8e:	4b0d      	ldr	r3, [pc, #52]	; (8017ac4 <UART_SetConfig+0x2d4>)
 8017a90:	fba3 1302 	umull	r1, r3, r3, r2
 8017a94:	095b      	lsrs	r3, r3, #5
 8017a96:	2164      	movs	r1, #100	; 0x64
 8017a98:	fb01 f303 	mul.w	r3, r1, r3
 8017a9c:	1ad3      	subs	r3, r2, r3
 8017a9e:	00db      	lsls	r3, r3, #3
 8017aa0:	3332      	adds	r3, #50	; 0x32
 8017aa2:	4a08      	ldr	r2, [pc, #32]	; (8017ac4 <UART_SetConfig+0x2d4>)
 8017aa4:	fba2 2303 	umull	r2, r3, r2, r3
 8017aa8:	095b      	lsrs	r3, r3, #5
 8017aaa:	f003 0207 	and.w	r2, r3, #7
 8017aae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017ab2:	681b      	ldr	r3, [r3, #0]
 8017ab4:	4422      	add	r2, r4
 8017ab6:	609a      	str	r2, [r3, #8]
 8017ab8:	e105      	b.n	8017cc6 <UART_SetConfig+0x4d6>
 8017aba:	bf00      	nop
 8017abc:	40011000 	.word	0x40011000
 8017ac0:	40011400 	.word	0x40011400
 8017ac4:	51eb851f 	.word	0x51eb851f
 8017ac8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017acc:	2200      	movs	r2, #0
 8017ace:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8017ad2:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8017ad6:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8017ada:	4642      	mov	r2, r8
 8017adc:	464b      	mov	r3, r9
 8017ade:	1891      	adds	r1, r2, r2
 8017ae0:	6239      	str	r1, [r7, #32]
 8017ae2:	415b      	adcs	r3, r3
 8017ae4:	627b      	str	r3, [r7, #36]	; 0x24
 8017ae6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8017aea:	4641      	mov	r1, r8
 8017aec:	1854      	adds	r4, r2, r1
 8017aee:	4649      	mov	r1, r9
 8017af0:	eb43 0501 	adc.w	r5, r3, r1
 8017af4:	f04f 0200 	mov.w	r2, #0
 8017af8:	f04f 0300 	mov.w	r3, #0
 8017afc:	00eb      	lsls	r3, r5, #3
 8017afe:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8017b02:	00e2      	lsls	r2, r4, #3
 8017b04:	4614      	mov	r4, r2
 8017b06:	461d      	mov	r5, r3
 8017b08:	4643      	mov	r3, r8
 8017b0a:	18e3      	adds	r3, r4, r3
 8017b0c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8017b10:	464b      	mov	r3, r9
 8017b12:	eb45 0303 	adc.w	r3, r5, r3
 8017b16:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8017b1a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017b1e:	685b      	ldr	r3, [r3, #4]
 8017b20:	2200      	movs	r2, #0
 8017b22:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8017b26:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8017b2a:	f04f 0200 	mov.w	r2, #0
 8017b2e:	f04f 0300 	mov.w	r3, #0
 8017b32:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8017b36:	4629      	mov	r1, r5
 8017b38:	008b      	lsls	r3, r1, #2
 8017b3a:	4621      	mov	r1, r4
 8017b3c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017b40:	4621      	mov	r1, r4
 8017b42:	008a      	lsls	r2, r1, #2
 8017b44:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8017b48:	f7e9 f89e 	bl	8000c88 <__aeabi_uldivmod>
 8017b4c:	4602      	mov	r2, r0
 8017b4e:	460b      	mov	r3, r1
 8017b50:	4b60      	ldr	r3, [pc, #384]	; (8017cd4 <UART_SetConfig+0x4e4>)
 8017b52:	fba3 2302 	umull	r2, r3, r3, r2
 8017b56:	095b      	lsrs	r3, r3, #5
 8017b58:	011c      	lsls	r4, r3, #4
 8017b5a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017b5e:	2200      	movs	r2, #0
 8017b60:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8017b64:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8017b68:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8017b6c:	4642      	mov	r2, r8
 8017b6e:	464b      	mov	r3, r9
 8017b70:	1891      	adds	r1, r2, r2
 8017b72:	61b9      	str	r1, [r7, #24]
 8017b74:	415b      	adcs	r3, r3
 8017b76:	61fb      	str	r3, [r7, #28]
 8017b78:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8017b7c:	4641      	mov	r1, r8
 8017b7e:	1851      	adds	r1, r2, r1
 8017b80:	6139      	str	r1, [r7, #16]
 8017b82:	4649      	mov	r1, r9
 8017b84:	414b      	adcs	r3, r1
 8017b86:	617b      	str	r3, [r7, #20]
 8017b88:	f04f 0200 	mov.w	r2, #0
 8017b8c:	f04f 0300 	mov.w	r3, #0
 8017b90:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8017b94:	4659      	mov	r1, fp
 8017b96:	00cb      	lsls	r3, r1, #3
 8017b98:	4651      	mov	r1, sl
 8017b9a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017b9e:	4651      	mov	r1, sl
 8017ba0:	00ca      	lsls	r2, r1, #3
 8017ba2:	4610      	mov	r0, r2
 8017ba4:	4619      	mov	r1, r3
 8017ba6:	4603      	mov	r3, r0
 8017ba8:	4642      	mov	r2, r8
 8017baa:	189b      	adds	r3, r3, r2
 8017bac:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8017bb0:	464b      	mov	r3, r9
 8017bb2:	460a      	mov	r2, r1
 8017bb4:	eb42 0303 	adc.w	r3, r2, r3
 8017bb8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8017bbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017bc0:	685b      	ldr	r3, [r3, #4]
 8017bc2:	2200      	movs	r2, #0
 8017bc4:	67bb      	str	r3, [r7, #120]	; 0x78
 8017bc6:	67fa      	str	r2, [r7, #124]	; 0x7c
 8017bc8:	f04f 0200 	mov.w	r2, #0
 8017bcc:	f04f 0300 	mov.w	r3, #0
 8017bd0:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8017bd4:	4649      	mov	r1, r9
 8017bd6:	008b      	lsls	r3, r1, #2
 8017bd8:	4641      	mov	r1, r8
 8017bda:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017bde:	4641      	mov	r1, r8
 8017be0:	008a      	lsls	r2, r1, #2
 8017be2:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8017be6:	f7e9 f84f 	bl	8000c88 <__aeabi_uldivmod>
 8017bea:	4602      	mov	r2, r0
 8017bec:	460b      	mov	r3, r1
 8017bee:	4b39      	ldr	r3, [pc, #228]	; (8017cd4 <UART_SetConfig+0x4e4>)
 8017bf0:	fba3 1302 	umull	r1, r3, r3, r2
 8017bf4:	095b      	lsrs	r3, r3, #5
 8017bf6:	2164      	movs	r1, #100	; 0x64
 8017bf8:	fb01 f303 	mul.w	r3, r1, r3
 8017bfc:	1ad3      	subs	r3, r2, r3
 8017bfe:	011b      	lsls	r3, r3, #4
 8017c00:	3332      	adds	r3, #50	; 0x32
 8017c02:	4a34      	ldr	r2, [pc, #208]	; (8017cd4 <UART_SetConfig+0x4e4>)
 8017c04:	fba2 2303 	umull	r2, r3, r2, r3
 8017c08:	095b      	lsrs	r3, r3, #5
 8017c0a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8017c0e:	441c      	add	r4, r3
 8017c10:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017c14:	2200      	movs	r2, #0
 8017c16:	673b      	str	r3, [r7, #112]	; 0x70
 8017c18:	677a      	str	r2, [r7, #116]	; 0x74
 8017c1a:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8017c1e:	4642      	mov	r2, r8
 8017c20:	464b      	mov	r3, r9
 8017c22:	1891      	adds	r1, r2, r2
 8017c24:	60b9      	str	r1, [r7, #8]
 8017c26:	415b      	adcs	r3, r3
 8017c28:	60fb      	str	r3, [r7, #12]
 8017c2a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8017c2e:	4641      	mov	r1, r8
 8017c30:	1851      	adds	r1, r2, r1
 8017c32:	6039      	str	r1, [r7, #0]
 8017c34:	4649      	mov	r1, r9
 8017c36:	414b      	adcs	r3, r1
 8017c38:	607b      	str	r3, [r7, #4]
 8017c3a:	f04f 0200 	mov.w	r2, #0
 8017c3e:	f04f 0300 	mov.w	r3, #0
 8017c42:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8017c46:	4659      	mov	r1, fp
 8017c48:	00cb      	lsls	r3, r1, #3
 8017c4a:	4651      	mov	r1, sl
 8017c4c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017c50:	4651      	mov	r1, sl
 8017c52:	00ca      	lsls	r2, r1, #3
 8017c54:	4610      	mov	r0, r2
 8017c56:	4619      	mov	r1, r3
 8017c58:	4603      	mov	r3, r0
 8017c5a:	4642      	mov	r2, r8
 8017c5c:	189b      	adds	r3, r3, r2
 8017c5e:	66bb      	str	r3, [r7, #104]	; 0x68
 8017c60:	464b      	mov	r3, r9
 8017c62:	460a      	mov	r2, r1
 8017c64:	eb42 0303 	adc.w	r3, r2, r3
 8017c68:	66fb      	str	r3, [r7, #108]	; 0x6c
 8017c6a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017c6e:	685b      	ldr	r3, [r3, #4]
 8017c70:	2200      	movs	r2, #0
 8017c72:	663b      	str	r3, [r7, #96]	; 0x60
 8017c74:	667a      	str	r2, [r7, #100]	; 0x64
 8017c76:	f04f 0200 	mov.w	r2, #0
 8017c7a:	f04f 0300 	mov.w	r3, #0
 8017c7e:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8017c82:	4649      	mov	r1, r9
 8017c84:	008b      	lsls	r3, r1, #2
 8017c86:	4641      	mov	r1, r8
 8017c88:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017c8c:	4641      	mov	r1, r8
 8017c8e:	008a      	lsls	r2, r1, #2
 8017c90:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8017c94:	f7e8 fff8 	bl	8000c88 <__aeabi_uldivmod>
 8017c98:	4602      	mov	r2, r0
 8017c9a:	460b      	mov	r3, r1
 8017c9c:	4b0d      	ldr	r3, [pc, #52]	; (8017cd4 <UART_SetConfig+0x4e4>)
 8017c9e:	fba3 1302 	umull	r1, r3, r3, r2
 8017ca2:	095b      	lsrs	r3, r3, #5
 8017ca4:	2164      	movs	r1, #100	; 0x64
 8017ca6:	fb01 f303 	mul.w	r3, r1, r3
 8017caa:	1ad3      	subs	r3, r2, r3
 8017cac:	011b      	lsls	r3, r3, #4
 8017cae:	3332      	adds	r3, #50	; 0x32
 8017cb0:	4a08      	ldr	r2, [pc, #32]	; (8017cd4 <UART_SetConfig+0x4e4>)
 8017cb2:	fba2 2303 	umull	r2, r3, r2, r3
 8017cb6:	095b      	lsrs	r3, r3, #5
 8017cb8:	f003 020f 	and.w	r2, r3, #15
 8017cbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017cc0:	681b      	ldr	r3, [r3, #0]
 8017cc2:	4422      	add	r2, r4
 8017cc4:	609a      	str	r2, [r3, #8]
 8017cc6:	bf00      	nop
 8017cc8:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8017ccc:	46bd      	mov	sp, r7
 8017cce:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8017cd2:	bf00      	nop
 8017cd4:	51eb851f 	.word	0x51eb851f

08017cd8 <USB_CoreInit>:
 8017cd8:	b084      	sub	sp, #16
 8017cda:	b580      	push	{r7, lr}
 8017cdc:	b084      	sub	sp, #16
 8017cde:	af00      	add	r7, sp, #0
 8017ce0:	6078      	str	r0, [r7, #4]
 8017ce2:	f107 001c 	add.w	r0, r7, #28
 8017ce6:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8017cea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017cec:	2b01      	cmp	r3, #1
 8017cee:	d122      	bne.n	8017d36 <USB_CoreInit+0x5e>
 8017cf0:	687b      	ldr	r3, [r7, #4]
 8017cf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017cf4:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8017cf8:	687b      	ldr	r3, [r7, #4]
 8017cfa:	639a      	str	r2, [r3, #56]	; 0x38
 8017cfc:	687b      	ldr	r3, [r7, #4]
 8017cfe:	68db      	ldr	r3, [r3, #12]
 8017d00:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8017d04:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8017d08:	687a      	ldr	r2, [r7, #4]
 8017d0a:	60d3      	str	r3, [r2, #12]
 8017d0c:	687b      	ldr	r3, [r7, #4]
 8017d0e:	68db      	ldr	r3, [r3, #12]
 8017d10:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8017d14:	687b      	ldr	r3, [r7, #4]
 8017d16:	60da      	str	r2, [r3, #12]
 8017d18:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017d1a:	2b01      	cmp	r3, #1
 8017d1c:	d105      	bne.n	8017d2a <USB_CoreInit+0x52>
 8017d1e:	687b      	ldr	r3, [r7, #4]
 8017d20:	68db      	ldr	r3, [r3, #12]
 8017d22:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8017d26:	687b      	ldr	r3, [r7, #4]
 8017d28:	60da      	str	r2, [r3, #12]
 8017d2a:	6878      	ldr	r0, [r7, #4]
 8017d2c:	f001 fbee 	bl	801950c <USB_CoreReset>
 8017d30:	4603      	mov	r3, r0
 8017d32:	73fb      	strb	r3, [r7, #15]
 8017d34:	e01a      	b.n	8017d6c <USB_CoreInit+0x94>
 8017d36:	687b      	ldr	r3, [r7, #4]
 8017d38:	68db      	ldr	r3, [r3, #12]
 8017d3a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8017d3e:	687b      	ldr	r3, [r7, #4]
 8017d40:	60da      	str	r2, [r3, #12]
 8017d42:	6878      	ldr	r0, [r7, #4]
 8017d44:	f001 fbe2 	bl	801950c <USB_CoreReset>
 8017d48:	4603      	mov	r3, r0
 8017d4a:	73fb      	strb	r3, [r7, #15]
 8017d4c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8017d4e:	2b00      	cmp	r3, #0
 8017d50:	d106      	bne.n	8017d60 <USB_CoreInit+0x88>
 8017d52:	687b      	ldr	r3, [r7, #4]
 8017d54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d56:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8017d5a:	687b      	ldr	r3, [r7, #4]
 8017d5c:	639a      	str	r2, [r3, #56]	; 0x38
 8017d5e:	e005      	b.n	8017d6c <USB_CoreInit+0x94>
 8017d60:	687b      	ldr	r3, [r7, #4]
 8017d62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d64:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8017d68:	687b      	ldr	r3, [r7, #4]
 8017d6a:	639a      	str	r2, [r3, #56]	; 0x38
 8017d6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017d6e:	2b01      	cmp	r3, #1
 8017d70:	d10b      	bne.n	8017d8a <USB_CoreInit+0xb2>
 8017d72:	687b      	ldr	r3, [r7, #4]
 8017d74:	689b      	ldr	r3, [r3, #8]
 8017d76:	f043 0206 	orr.w	r2, r3, #6
 8017d7a:	687b      	ldr	r3, [r7, #4]
 8017d7c:	609a      	str	r2, [r3, #8]
 8017d7e:	687b      	ldr	r3, [r7, #4]
 8017d80:	689b      	ldr	r3, [r3, #8]
 8017d82:	f043 0220 	orr.w	r2, r3, #32
 8017d86:	687b      	ldr	r3, [r7, #4]
 8017d88:	609a      	str	r2, [r3, #8]
 8017d8a:	7bfb      	ldrb	r3, [r7, #15]
 8017d8c:	4618      	mov	r0, r3
 8017d8e:	3710      	adds	r7, #16
 8017d90:	46bd      	mov	sp, r7
 8017d92:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8017d96:	b004      	add	sp, #16
 8017d98:	4770      	bx	lr
	...

08017d9c <USB_SetTurnaroundTime>:
 8017d9c:	b480      	push	{r7}
 8017d9e:	b087      	sub	sp, #28
 8017da0:	af00      	add	r7, sp, #0
 8017da2:	60f8      	str	r0, [r7, #12]
 8017da4:	60b9      	str	r1, [r7, #8]
 8017da6:	4613      	mov	r3, r2
 8017da8:	71fb      	strb	r3, [r7, #7]
 8017daa:	79fb      	ldrb	r3, [r7, #7]
 8017dac:	2b02      	cmp	r3, #2
 8017dae:	d165      	bne.n	8017e7c <USB_SetTurnaroundTime+0xe0>
 8017db0:	68bb      	ldr	r3, [r7, #8]
 8017db2:	4a41      	ldr	r2, [pc, #260]	; (8017eb8 <USB_SetTurnaroundTime+0x11c>)
 8017db4:	4293      	cmp	r3, r2
 8017db6:	d906      	bls.n	8017dc6 <USB_SetTurnaroundTime+0x2a>
 8017db8:	68bb      	ldr	r3, [r7, #8]
 8017dba:	4a40      	ldr	r2, [pc, #256]	; (8017ebc <USB_SetTurnaroundTime+0x120>)
 8017dbc:	4293      	cmp	r3, r2
 8017dbe:	d202      	bcs.n	8017dc6 <USB_SetTurnaroundTime+0x2a>
 8017dc0:	230f      	movs	r3, #15
 8017dc2:	617b      	str	r3, [r7, #20]
 8017dc4:	e062      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017dc6:	68bb      	ldr	r3, [r7, #8]
 8017dc8:	4a3c      	ldr	r2, [pc, #240]	; (8017ebc <USB_SetTurnaroundTime+0x120>)
 8017dca:	4293      	cmp	r3, r2
 8017dcc:	d306      	bcc.n	8017ddc <USB_SetTurnaroundTime+0x40>
 8017dce:	68bb      	ldr	r3, [r7, #8]
 8017dd0:	4a3b      	ldr	r2, [pc, #236]	; (8017ec0 <USB_SetTurnaroundTime+0x124>)
 8017dd2:	4293      	cmp	r3, r2
 8017dd4:	d202      	bcs.n	8017ddc <USB_SetTurnaroundTime+0x40>
 8017dd6:	230e      	movs	r3, #14
 8017dd8:	617b      	str	r3, [r7, #20]
 8017dda:	e057      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017ddc:	68bb      	ldr	r3, [r7, #8]
 8017dde:	4a38      	ldr	r2, [pc, #224]	; (8017ec0 <USB_SetTurnaroundTime+0x124>)
 8017de0:	4293      	cmp	r3, r2
 8017de2:	d306      	bcc.n	8017df2 <USB_SetTurnaroundTime+0x56>
 8017de4:	68bb      	ldr	r3, [r7, #8]
 8017de6:	4a37      	ldr	r2, [pc, #220]	; (8017ec4 <USB_SetTurnaroundTime+0x128>)
 8017de8:	4293      	cmp	r3, r2
 8017dea:	d202      	bcs.n	8017df2 <USB_SetTurnaroundTime+0x56>
 8017dec:	230d      	movs	r3, #13
 8017dee:	617b      	str	r3, [r7, #20]
 8017df0:	e04c      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017df2:	68bb      	ldr	r3, [r7, #8]
 8017df4:	4a33      	ldr	r2, [pc, #204]	; (8017ec4 <USB_SetTurnaroundTime+0x128>)
 8017df6:	4293      	cmp	r3, r2
 8017df8:	d306      	bcc.n	8017e08 <USB_SetTurnaroundTime+0x6c>
 8017dfa:	68bb      	ldr	r3, [r7, #8]
 8017dfc:	4a32      	ldr	r2, [pc, #200]	; (8017ec8 <USB_SetTurnaroundTime+0x12c>)
 8017dfe:	4293      	cmp	r3, r2
 8017e00:	d802      	bhi.n	8017e08 <USB_SetTurnaroundTime+0x6c>
 8017e02:	230c      	movs	r3, #12
 8017e04:	617b      	str	r3, [r7, #20]
 8017e06:	e041      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e08:	68bb      	ldr	r3, [r7, #8]
 8017e0a:	4a2f      	ldr	r2, [pc, #188]	; (8017ec8 <USB_SetTurnaroundTime+0x12c>)
 8017e0c:	4293      	cmp	r3, r2
 8017e0e:	d906      	bls.n	8017e1e <USB_SetTurnaroundTime+0x82>
 8017e10:	68bb      	ldr	r3, [r7, #8]
 8017e12:	4a2e      	ldr	r2, [pc, #184]	; (8017ecc <USB_SetTurnaroundTime+0x130>)
 8017e14:	4293      	cmp	r3, r2
 8017e16:	d802      	bhi.n	8017e1e <USB_SetTurnaroundTime+0x82>
 8017e18:	230b      	movs	r3, #11
 8017e1a:	617b      	str	r3, [r7, #20]
 8017e1c:	e036      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e1e:	68bb      	ldr	r3, [r7, #8]
 8017e20:	4a2a      	ldr	r2, [pc, #168]	; (8017ecc <USB_SetTurnaroundTime+0x130>)
 8017e22:	4293      	cmp	r3, r2
 8017e24:	d906      	bls.n	8017e34 <USB_SetTurnaroundTime+0x98>
 8017e26:	68bb      	ldr	r3, [r7, #8]
 8017e28:	4a29      	ldr	r2, [pc, #164]	; (8017ed0 <USB_SetTurnaroundTime+0x134>)
 8017e2a:	4293      	cmp	r3, r2
 8017e2c:	d802      	bhi.n	8017e34 <USB_SetTurnaroundTime+0x98>
 8017e2e:	230a      	movs	r3, #10
 8017e30:	617b      	str	r3, [r7, #20]
 8017e32:	e02b      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e34:	68bb      	ldr	r3, [r7, #8]
 8017e36:	4a26      	ldr	r2, [pc, #152]	; (8017ed0 <USB_SetTurnaroundTime+0x134>)
 8017e38:	4293      	cmp	r3, r2
 8017e3a:	d906      	bls.n	8017e4a <USB_SetTurnaroundTime+0xae>
 8017e3c:	68bb      	ldr	r3, [r7, #8]
 8017e3e:	4a25      	ldr	r2, [pc, #148]	; (8017ed4 <USB_SetTurnaroundTime+0x138>)
 8017e40:	4293      	cmp	r3, r2
 8017e42:	d202      	bcs.n	8017e4a <USB_SetTurnaroundTime+0xae>
 8017e44:	2309      	movs	r3, #9
 8017e46:	617b      	str	r3, [r7, #20]
 8017e48:	e020      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e4a:	68bb      	ldr	r3, [r7, #8]
 8017e4c:	4a21      	ldr	r2, [pc, #132]	; (8017ed4 <USB_SetTurnaroundTime+0x138>)
 8017e4e:	4293      	cmp	r3, r2
 8017e50:	d306      	bcc.n	8017e60 <USB_SetTurnaroundTime+0xc4>
 8017e52:	68bb      	ldr	r3, [r7, #8]
 8017e54:	4a20      	ldr	r2, [pc, #128]	; (8017ed8 <USB_SetTurnaroundTime+0x13c>)
 8017e56:	4293      	cmp	r3, r2
 8017e58:	d802      	bhi.n	8017e60 <USB_SetTurnaroundTime+0xc4>
 8017e5a:	2308      	movs	r3, #8
 8017e5c:	617b      	str	r3, [r7, #20]
 8017e5e:	e015      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e60:	68bb      	ldr	r3, [r7, #8]
 8017e62:	4a1d      	ldr	r2, [pc, #116]	; (8017ed8 <USB_SetTurnaroundTime+0x13c>)
 8017e64:	4293      	cmp	r3, r2
 8017e66:	d906      	bls.n	8017e76 <USB_SetTurnaroundTime+0xda>
 8017e68:	68bb      	ldr	r3, [r7, #8]
 8017e6a:	4a1c      	ldr	r2, [pc, #112]	; (8017edc <USB_SetTurnaroundTime+0x140>)
 8017e6c:	4293      	cmp	r3, r2
 8017e6e:	d202      	bcs.n	8017e76 <USB_SetTurnaroundTime+0xda>
 8017e70:	2307      	movs	r3, #7
 8017e72:	617b      	str	r3, [r7, #20]
 8017e74:	e00a      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e76:	2306      	movs	r3, #6
 8017e78:	617b      	str	r3, [r7, #20]
 8017e7a:	e007      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e7c:	79fb      	ldrb	r3, [r7, #7]
 8017e7e:	2b00      	cmp	r3, #0
 8017e80:	d102      	bne.n	8017e88 <USB_SetTurnaroundTime+0xec>
 8017e82:	2309      	movs	r3, #9
 8017e84:	617b      	str	r3, [r7, #20]
 8017e86:	e001      	b.n	8017e8c <USB_SetTurnaroundTime+0xf0>
 8017e88:	2309      	movs	r3, #9
 8017e8a:	617b      	str	r3, [r7, #20]
 8017e8c:	68fb      	ldr	r3, [r7, #12]
 8017e8e:	68db      	ldr	r3, [r3, #12]
 8017e90:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 8017e94:	68fb      	ldr	r3, [r7, #12]
 8017e96:	60da      	str	r2, [r3, #12]
 8017e98:	68fb      	ldr	r3, [r7, #12]
 8017e9a:	68da      	ldr	r2, [r3, #12]
 8017e9c:	697b      	ldr	r3, [r7, #20]
 8017e9e:	029b      	lsls	r3, r3, #10
 8017ea0:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 8017ea4:	431a      	orrs	r2, r3
 8017ea6:	68fb      	ldr	r3, [r7, #12]
 8017ea8:	60da      	str	r2, [r3, #12]
 8017eaa:	2300      	movs	r3, #0
 8017eac:	4618      	mov	r0, r3
 8017eae:	371c      	adds	r7, #28
 8017eb0:	46bd      	mov	sp, r7
 8017eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017eb6:	4770      	bx	lr
 8017eb8:	00d8acbf 	.word	0x00d8acbf
 8017ebc:	00e4e1c0 	.word	0x00e4e1c0
 8017ec0:	00f42400 	.word	0x00f42400
 8017ec4:	01067380 	.word	0x01067380
 8017ec8:	011a499f 	.word	0x011a499f
 8017ecc:	01312cff 	.word	0x01312cff
 8017ed0:	014ca43f 	.word	0x014ca43f
 8017ed4:	016e3600 	.word	0x016e3600
 8017ed8:	01a6ab1f 	.word	0x01a6ab1f
 8017edc:	01e84800 	.word	0x01e84800

08017ee0 <USB_EnableGlobalInt>:
 8017ee0:	b480      	push	{r7}
 8017ee2:	b083      	sub	sp, #12
 8017ee4:	af00      	add	r7, sp, #0
 8017ee6:	6078      	str	r0, [r7, #4]
 8017ee8:	687b      	ldr	r3, [r7, #4]
 8017eea:	689b      	ldr	r3, [r3, #8]
 8017eec:	f043 0201 	orr.w	r2, r3, #1
 8017ef0:	687b      	ldr	r3, [r7, #4]
 8017ef2:	609a      	str	r2, [r3, #8]
 8017ef4:	2300      	movs	r3, #0
 8017ef6:	4618      	mov	r0, r3
 8017ef8:	370c      	adds	r7, #12
 8017efa:	46bd      	mov	sp, r7
 8017efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017f00:	4770      	bx	lr

08017f02 <USB_DisableGlobalInt>:
 8017f02:	b480      	push	{r7}
 8017f04:	b083      	sub	sp, #12
 8017f06:	af00      	add	r7, sp, #0
 8017f08:	6078      	str	r0, [r7, #4]
 8017f0a:	687b      	ldr	r3, [r7, #4]
 8017f0c:	689b      	ldr	r3, [r3, #8]
 8017f0e:	f023 0201 	bic.w	r2, r3, #1
 8017f12:	687b      	ldr	r3, [r7, #4]
 8017f14:	609a      	str	r2, [r3, #8]
 8017f16:	2300      	movs	r3, #0
 8017f18:	4618      	mov	r0, r3
 8017f1a:	370c      	adds	r7, #12
 8017f1c:	46bd      	mov	sp, r7
 8017f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017f22:	4770      	bx	lr

08017f24 <USB_SetCurrentMode>:
 8017f24:	b580      	push	{r7, lr}
 8017f26:	b084      	sub	sp, #16
 8017f28:	af00      	add	r7, sp, #0
 8017f2a:	6078      	str	r0, [r7, #4]
 8017f2c:	460b      	mov	r3, r1
 8017f2e:	70fb      	strb	r3, [r7, #3]
 8017f30:	2300      	movs	r3, #0
 8017f32:	60fb      	str	r3, [r7, #12]
 8017f34:	687b      	ldr	r3, [r7, #4]
 8017f36:	68db      	ldr	r3, [r3, #12]
 8017f38:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8017f3c:	687b      	ldr	r3, [r7, #4]
 8017f3e:	60da      	str	r2, [r3, #12]
 8017f40:	78fb      	ldrb	r3, [r7, #3]
 8017f42:	2b01      	cmp	r3, #1
 8017f44:	d115      	bne.n	8017f72 <USB_SetCurrentMode+0x4e>
 8017f46:	687b      	ldr	r3, [r7, #4]
 8017f48:	68db      	ldr	r3, [r3, #12]
 8017f4a:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8017f4e:	687b      	ldr	r3, [r7, #4]
 8017f50:	60da      	str	r2, [r3, #12]
 8017f52:	2001      	movs	r0, #1
 8017f54:	f7f7 fafe 	bl	800f554 <HAL_Delay>
 8017f58:	68fb      	ldr	r3, [r7, #12]
 8017f5a:	3301      	adds	r3, #1
 8017f5c:	60fb      	str	r3, [r7, #12]
 8017f5e:	6878      	ldr	r0, [r7, #4]
 8017f60:	f001 fa45 	bl	80193ee <USB_GetMode>
 8017f64:	4603      	mov	r3, r0
 8017f66:	2b01      	cmp	r3, #1
 8017f68:	d01e      	beq.n	8017fa8 <USB_SetCurrentMode+0x84>
 8017f6a:	68fb      	ldr	r3, [r7, #12]
 8017f6c:	2b31      	cmp	r3, #49	; 0x31
 8017f6e:	d9f0      	bls.n	8017f52 <USB_SetCurrentMode+0x2e>
 8017f70:	e01a      	b.n	8017fa8 <USB_SetCurrentMode+0x84>
 8017f72:	78fb      	ldrb	r3, [r7, #3]
 8017f74:	2b00      	cmp	r3, #0
 8017f76:	d115      	bne.n	8017fa4 <USB_SetCurrentMode+0x80>
 8017f78:	687b      	ldr	r3, [r7, #4]
 8017f7a:	68db      	ldr	r3, [r3, #12]
 8017f7c:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8017f80:	687b      	ldr	r3, [r7, #4]
 8017f82:	60da      	str	r2, [r3, #12]
 8017f84:	2001      	movs	r0, #1
 8017f86:	f7f7 fae5 	bl	800f554 <HAL_Delay>
 8017f8a:	68fb      	ldr	r3, [r7, #12]
 8017f8c:	3301      	adds	r3, #1
 8017f8e:	60fb      	str	r3, [r7, #12]
 8017f90:	6878      	ldr	r0, [r7, #4]
 8017f92:	f001 fa2c 	bl	80193ee <USB_GetMode>
 8017f96:	4603      	mov	r3, r0
 8017f98:	2b00      	cmp	r3, #0
 8017f9a:	d005      	beq.n	8017fa8 <USB_SetCurrentMode+0x84>
 8017f9c:	68fb      	ldr	r3, [r7, #12]
 8017f9e:	2b31      	cmp	r3, #49	; 0x31
 8017fa0:	d9f0      	bls.n	8017f84 <USB_SetCurrentMode+0x60>
 8017fa2:	e001      	b.n	8017fa8 <USB_SetCurrentMode+0x84>
 8017fa4:	2301      	movs	r3, #1
 8017fa6:	e005      	b.n	8017fb4 <USB_SetCurrentMode+0x90>
 8017fa8:	68fb      	ldr	r3, [r7, #12]
 8017faa:	2b32      	cmp	r3, #50	; 0x32
 8017fac:	d101      	bne.n	8017fb2 <USB_SetCurrentMode+0x8e>
 8017fae:	2301      	movs	r3, #1
 8017fb0:	e000      	b.n	8017fb4 <USB_SetCurrentMode+0x90>
 8017fb2:	2300      	movs	r3, #0
 8017fb4:	4618      	mov	r0, r3
 8017fb6:	3710      	adds	r7, #16
 8017fb8:	46bd      	mov	sp, r7
 8017fba:	bd80      	pop	{r7, pc}

08017fbc <USB_DevInit>:
 8017fbc:	b084      	sub	sp, #16
 8017fbe:	b580      	push	{r7, lr}
 8017fc0:	b086      	sub	sp, #24
 8017fc2:	af00      	add	r7, sp, #0
 8017fc4:	6078      	str	r0, [r7, #4]
 8017fc6:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8017fca:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8017fce:	2300      	movs	r3, #0
 8017fd0:	75fb      	strb	r3, [r7, #23]
 8017fd2:	687b      	ldr	r3, [r7, #4]
 8017fd4:	60fb      	str	r3, [r7, #12]
 8017fd6:	2300      	movs	r3, #0
 8017fd8:	613b      	str	r3, [r7, #16]
 8017fda:	e009      	b.n	8017ff0 <USB_DevInit+0x34>
 8017fdc:	687a      	ldr	r2, [r7, #4]
 8017fde:	693b      	ldr	r3, [r7, #16]
 8017fe0:	3340      	adds	r3, #64	; 0x40
 8017fe2:	009b      	lsls	r3, r3, #2
 8017fe4:	4413      	add	r3, r2
 8017fe6:	2200      	movs	r2, #0
 8017fe8:	605a      	str	r2, [r3, #4]
 8017fea:	693b      	ldr	r3, [r7, #16]
 8017fec:	3301      	adds	r3, #1
 8017fee:	613b      	str	r3, [r7, #16]
 8017ff0:	693b      	ldr	r3, [r7, #16]
 8017ff2:	2b0e      	cmp	r3, #14
 8017ff4:	d9f2      	bls.n	8017fdc <USB_DevInit+0x20>
 8017ff6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017ff8:	2b00      	cmp	r3, #0
 8017ffa:	d11c      	bne.n	8018036 <USB_DevInit+0x7a>
 8017ffc:	68fb      	ldr	r3, [r7, #12]
 8017ffe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018002:	685b      	ldr	r3, [r3, #4]
 8018004:	68fa      	ldr	r2, [r7, #12]
 8018006:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801800a:	f043 0302 	orr.w	r3, r3, #2
 801800e:	6053      	str	r3, [r2, #4]
 8018010:	687b      	ldr	r3, [r7, #4]
 8018012:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018014:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8018018:	687b      	ldr	r3, [r7, #4]
 801801a:	639a      	str	r2, [r3, #56]	; 0x38
 801801c:	687b      	ldr	r3, [r7, #4]
 801801e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018020:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8018024:	687b      	ldr	r3, [r7, #4]
 8018026:	639a      	str	r2, [r3, #56]	; 0x38
 8018028:	687b      	ldr	r3, [r7, #4]
 801802a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801802c:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8018030:	687b      	ldr	r3, [r7, #4]
 8018032:	639a      	str	r2, [r3, #56]	; 0x38
 8018034:	e00b      	b.n	801804e <USB_DevInit+0x92>
 8018036:	687b      	ldr	r3, [r7, #4]
 8018038:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801803a:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 801803e:	687b      	ldr	r3, [r7, #4]
 8018040:	639a      	str	r2, [r3, #56]	; 0x38
 8018042:	687b      	ldr	r3, [r7, #4]
 8018044:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018046:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 801804a:	687b      	ldr	r3, [r7, #4]
 801804c:	639a      	str	r2, [r3, #56]	; 0x38
 801804e:	68fb      	ldr	r3, [r7, #12]
 8018050:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8018054:	461a      	mov	r2, r3
 8018056:	2300      	movs	r3, #0
 8018058:	6013      	str	r3, [r2, #0]
 801805a:	68fb      	ldr	r3, [r7, #12]
 801805c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018060:	4619      	mov	r1, r3
 8018062:	68fb      	ldr	r3, [r7, #12]
 8018064:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018068:	461a      	mov	r2, r3
 801806a:	680b      	ldr	r3, [r1, #0]
 801806c:	6013      	str	r3, [r2, #0]
 801806e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8018070:	2b01      	cmp	r3, #1
 8018072:	d10c      	bne.n	801808e <USB_DevInit+0xd2>
 8018074:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018076:	2b00      	cmp	r3, #0
 8018078:	d104      	bne.n	8018084 <USB_DevInit+0xc8>
 801807a:	2100      	movs	r1, #0
 801807c:	6878      	ldr	r0, [r7, #4]
 801807e:	f000 f965 	bl	801834c <USB_SetDevSpeed>
 8018082:	e008      	b.n	8018096 <USB_DevInit+0xda>
 8018084:	2101      	movs	r1, #1
 8018086:	6878      	ldr	r0, [r7, #4]
 8018088:	f000 f960 	bl	801834c <USB_SetDevSpeed>
 801808c:	e003      	b.n	8018096 <USB_DevInit+0xda>
 801808e:	2103      	movs	r1, #3
 8018090:	6878      	ldr	r0, [r7, #4]
 8018092:	f000 f95b 	bl	801834c <USB_SetDevSpeed>
 8018096:	2110      	movs	r1, #16
 8018098:	6878      	ldr	r0, [r7, #4]
 801809a:	f000 f8f3 	bl	8018284 <USB_FlushTxFifo>
 801809e:	4603      	mov	r3, r0
 80180a0:	2b00      	cmp	r3, #0
 80180a2:	d001      	beq.n	80180a8 <USB_DevInit+0xec>
 80180a4:	2301      	movs	r3, #1
 80180a6:	75fb      	strb	r3, [r7, #23]
 80180a8:	6878      	ldr	r0, [r7, #4]
 80180aa:	f000 f91f 	bl	80182ec <USB_FlushRxFifo>
 80180ae:	4603      	mov	r3, r0
 80180b0:	2b00      	cmp	r3, #0
 80180b2:	d001      	beq.n	80180b8 <USB_DevInit+0xfc>
 80180b4:	2301      	movs	r3, #1
 80180b6:	75fb      	strb	r3, [r7, #23]
 80180b8:	68fb      	ldr	r3, [r7, #12]
 80180ba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80180be:	461a      	mov	r2, r3
 80180c0:	2300      	movs	r3, #0
 80180c2:	6113      	str	r3, [r2, #16]
 80180c4:	68fb      	ldr	r3, [r7, #12]
 80180c6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80180ca:	461a      	mov	r2, r3
 80180cc:	2300      	movs	r3, #0
 80180ce:	6153      	str	r3, [r2, #20]
 80180d0:	68fb      	ldr	r3, [r7, #12]
 80180d2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80180d6:	461a      	mov	r2, r3
 80180d8:	2300      	movs	r3, #0
 80180da:	61d3      	str	r3, [r2, #28]
 80180dc:	2300      	movs	r3, #0
 80180de:	613b      	str	r3, [r7, #16]
 80180e0:	e043      	b.n	801816a <USB_DevInit+0x1ae>
 80180e2:	693b      	ldr	r3, [r7, #16]
 80180e4:	015a      	lsls	r2, r3, #5
 80180e6:	68fb      	ldr	r3, [r7, #12]
 80180e8:	4413      	add	r3, r2
 80180ea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80180ee:	681b      	ldr	r3, [r3, #0]
 80180f0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80180f4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80180f8:	d118      	bne.n	801812c <USB_DevInit+0x170>
 80180fa:	693b      	ldr	r3, [r7, #16]
 80180fc:	2b00      	cmp	r3, #0
 80180fe:	d10a      	bne.n	8018116 <USB_DevInit+0x15a>
 8018100:	693b      	ldr	r3, [r7, #16]
 8018102:	015a      	lsls	r2, r3, #5
 8018104:	68fb      	ldr	r3, [r7, #12]
 8018106:	4413      	add	r3, r2
 8018108:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801810c:	461a      	mov	r2, r3
 801810e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8018112:	6013      	str	r3, [r2, #0]
 8018114:	e013      	b.n	801813e <USB_DevInit+0x182>
 8018116:	693b      	ldr	r3, [r7, #16]
 8018118:	015a      	lsls	r2, r3, #5
 801811a:	68fb      	ldr	r3, [r7, #12]
 801811c:	4413      	add	r3, r2
 801811e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018122:	461a      	mov	r2, r3
 8018124:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8018128:	6013      	str	r3, [r2, #0]
 801812a:	e008      	b.n	801813e <USB_DevInit+0x182>
 801812c:	693b      	ldr	r3, [r7, #16]
 801812e:	015a      	lsls	r2, r3, #5
 8018130:	68fb      	ldr	r3, [r7, #12]
 8018132:	4413      	add	r3, r2
 8018134:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018138:	461a      	mov	r2, r3
 801813a:	2300      	movs	r3, #0
 801813c:	6013      	str	r3, [r2, #0]
 801813e:	693b      	ldr	r3, [r7, #16]
 8018140:	015a      	lsls	r2, r3, #5
 8018142:	68fb      	ldr	r3, [r7, #12]
 8018144:	4413      	add	r3, r2
 8018146:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801814a:	461a      	mov	r2, r3
 801814c:	2300      	movs	r3, #0
 801814e:	6113      	str	r3, [r2, #16]
 8018150:	693b      	ldr	r3, [r7, #16]
 8018152:	015a      	lsls	r2, r3, #5
 8018154:	68fb      	ldr	r3, [r7, #12]
 8018156:	4413      	add	r3, r2
 8018158:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801815c:	461a      	mov	r2, r3
 801815e:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8018162:	6093      	str	r3, [r2, #8]
 8018164:	693b      	ldr	r3, [r7, #16]
 8018166:	3301      	adds	r3, #1
 8018168:	613b      	str	r3, [r7, #16]
 801816a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801816c:	693a      	ldr	r2, [r7, #16]
 801816e:	429a      	cmp	r2, r3
 8018170:	d3b7      	bcc.n	80180e2 <USB_DevInit+0x126>
 8018172:	2300      	movs	r3, #0
 8018174:	613b      	str	r3, [r7, #16]
 8018176:	e043      	b.n	8018200 <USB_DevInit+0x244>
 8018178:	693b      	ldr	r3, [r7, #16]
 801817a:	015a      	lsls	r2, r3, #5
 801817c:	68fb      	ldr	r3, [r7, #12]
 801817e:	4413      	add	r3, r2
 8018180:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018184:	681b      	ldr	r3, [r3, #0]
 8018186:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801818a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 801818e:	d118      	bne.n	80181c2 <USB_DevInit+0x206>
 8018190:	693b      	ldr	r3, [r7, #16]
 8018192:	2b00      	cmp	r3, #0
 8018194:	d10a      	bne.n	80181ac <USB_DevInit+0x1f0>
 8018196:	693b      	ldr	r3, [r7, #16]
 8018198:	015a      	lsls	r2, r3, #5
 801819a:	68fb      	ldr	r3, [r7, #12]
 801819c:	4413      	add	r3, r2
 801819e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80181a2:	461a      	mov	r2, r3
 80181a4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80181a8:	6013      	str	r3, [r2, #0]
 80181aa:	e013      	b.n	80181d4 <USB_DevInit+0x218>
 80181ac:	693b      	ldr	r3, [r7, #16]
 80181ae:	015a      	lsls	r2, r3, #5
 80181b0:	68fb      	ldr	r3, [r7, #12]
 80181b2:	4413      	add	r3, r2
 80181b4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80181b8:	461a      	mov	r2, r3
 80181ba:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80181be:	6013      	str	r3, [r2, #0]
 80181c0:	e008      	b.n	80181d4 <USB_DevInit+0x218>
 80181c2:	693b      	ldr	r3, [r7, #16]
 80181c4:	015a      	lsls	r2, r3, #5
 80181c6:	68fb      	ldr	r3, [r7, #12]
 80181c8:	4413      	add	r3, r2
 80181ca:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80181ce:	461a      	mov	r2, r3
 80181d0:	2300      	movs	r3, #0
 80181d2:	6013      	str	r3, [r2, #0]
 80181d4:	693b      	ldr	r3, [r7, #16]
 80181d6:	015a      	lsls	r2, r3, #5
 80181d8:	68fb      	ldr	r3, [r7, #12]
 80181da:	4413      	add	r3, r2
 80181dc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80181e0:	461a      	mov	r2, r3
 80181e2:	2300      	movs	r3, #0
 80181e4:	6113      	str	r3, [r2, #16]
 80181e6:	693b      	ldr	r3, [r7, #16]
 80181e8:	015a      	lsls	r2, r3, #5
 80181ea:	68fb      	ldr	r3, [r7, #12]
 80181ec:	4413      	add	r3, r2
 80181ee:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80181f2:	461a      	mov	r2, r3
 80181f4:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80181f8:	6093      	str	r3, [r2, #8]
 80181fa:	693b      	ldr	r3, [r7, #16]
 80181fc:	3301      	adds	r3, #1
 80181fe:	613b      	str	r3, [r7, #16]
 8018200:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018202:	693a      	ldr	r2, [r7, #16]
 8018204:	429a      	cmp	r2, r3
 8018206:	d3b7      	bcc.n	8018178 <USB_DevInit+0x1bc>
 8018208:	68fb      	ldr	r3, [r7, #12]
 801820a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801820e:	691b      	ldr	r3, [r3, #16]
 8018210:	68fa      	ldr	r2, [r7, #12]
 8018212:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8018216:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801821a:	6113      	str	r3, [r2, #16]
 801821c:	687b      	ldr	r3, [r7, #4]
 801821e:	2200      	movs	r2, #0
 8018220:	619a      	str	r2, [r3, #24]
 8018222:	687b      	ldr	r3, [r7, #4]
 8018224:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 8018228:	615a      	str	r2, [r3, #20]
 801822a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801822c:	2b00      	cmp	r3, #0
 801822e:	d105      	bne.n	801823c <USB_DevInit+0x280>
 8018230:	687b      	ldr	r3, [r7, #4]
 8018232:	699b      	ldr	r3, [r3, #24]
 8018234:	f043 0210 	orr.w	r2, r3, #16
 8018238:	687b      	ldr	r3, [r7, #4]
 801823a:	619a      	str	r2, [r3, #24]
 801823c:	687b      	ldr	r3, [r7, #4]
 801823e:	699a      	ldr	r2, [r3, #24]
 8018240:	4b0f      	ldr	r3, [pc, #60]	; (8018280 <USB_DevInit+0x2c4>)
 8018242:	4313      	orrs	r3, r2
 8018244:	687a      	ldr	r2, [r7, #4]
 8018246:	6193      	str	r3, [r2, #24]
 8018248:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801824a:	2b00      	cmp	r3, #0
 801824c:	d005      	beq.n	801825a <USB_DevInit+0x29e>
 801824e:	687b      	ldr	r3, [r7, #4]
 8018250:	699b      	ldr	r3, [r3, #24]
 8018252:	f043 0208 	orr.w	r2, r3, #8
 8018256:	687b      	ldr	r3, [r7, #4]
 8018258:	619a      	str	r2, [r3, #24]
 801825a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801825c:	2b01      	cmp	r3, #1
 801825e:	d107      	bne.n	8018270 <USB_DevInit+0x2b4>
 8018260:	687b      	ldr	r3, [r7, #4]
 8018262:	699b      	ldr	r3, [r3, #24]
 8018264:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018268:	f043 0304 	orr.w	r3, r3, #4
 801826c:	687a      	ldr	r2, [r7, #4]
 801826e:	6193      	str	r3, [r2, #24]
 8018270:	7dfb      	ldrb	r3, [r7, #23]
 8018272:	4618      	mov	r0, r3
 8018274:	3718      	adds	r7, #24
 8018276:	46bd      	mov	sp, r7
 8018278:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801827c:	b004      	add	sp, #16
 801827e:	4770      	bx	lr
 8018280:	803c3800 	.word	0x803c3800

08018284 <USB_FlushTxFifo>:
 8018284:	b480      	push	{r7}
 8018286:	b085      	sub	sp, #20
 8018288:	af00      	add	r7, sp, #0
 801828a:	6078      	str	r0, [r7, #4]
 801828c:	6039      	str	r1, [r7, #0]
 801828e:	2300      	movs	r3, #0
 8018290:	60fb      	str	r3, [r7, #12]
 8018292:	68fb      	ldr	r3, [r7, #12]
 8018294:	3301      	adds	r3, #1
 8018296:	60fb      	str	r3, [r7, #12]
 8018298:	68fb      	ldr	r3, [r7, #12]
 801829a:	4a13      	ldr	r2, [pc, #76]	; (80182e8 <USB_FlushTxFifo+0x64>)
 801829c:	4293      	cmp	r3, r2
 801829e:	d901      	bls.n	80182a4 <USB_FlushTxFifo+0x20>
 80182a0:	2303      	movs	r3, #3
 80182a2:	e01b      	b.n	80182dc <USB_FlushTxFifo+0x58>
 80182a4:	687b      	ldr	r3, [r7, #4]
 80182a6:	691b      	ldr	r3, [r3, #16]
 80182a8:	2b00      	cmp	r3, #0
 80182aa:	daf2      	bge.n	8018292 <USB_FlushTxFifo+0xe>
 80182ac:	2300      	movs	r3, #0
 80182ae:	60fb      	str	r3, [r7, #12]
 80182b0:	683b      	ldr	r3, [r7, #0]
 80182b2:	019b      	lsls	r3, r3, #6
 80182b4:	f043 0220 	orr.w	r2, r3, #32
 80182b8:	687b      	ldr	r3, [r7, #4]
 80182ba:	611a      	str	r2, [r3, #16]
 80182bc:	68fb      	ldr	r3, [r7, #12]
 80182be:	3301      	adds	r3, #1
 80182c0:	60fb      	str	r3, [r7, #12]
 80182c2:	68fb      	ldr	r3, [r7, #12]
 80182c4:	4a08      	ldr	r2, [pc, #32]	; (80182e8 <USB_FlushTxFifo+0x64>)
 80182c6:	4293      	cmp	r3, r2
 80182c8:	d901      	bls.n	80182ce <USB_FlushTxFifo+0x4a>
 80182ca:	2303      	movs	r3, #3
 80182cc:	e006      	b.n	80182dc <USB_FlushTxFifo+0x58>
 80182ce:	687b      	ldr	r3, [r7, #4]
 80182d0:	691b      	ldr	r3, [r3, #16]
 80182d2:	f003 0320 	and.w	r3, r3, #32
 80182d6:	2b20      	cmp	r3, #32
 80182d8:	d0f0      	beq.n	80182bc <USB_FlushTxFifo+0x38>
 80182da:	2300      	movs	r3, #0
 80182dc:	4618      	mov	r0, r3
 80182de:	3714      	adds	r7, #20
 80182e0:	46bd      	mov	sp, r7
 80182e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80182e6:	4770      	bx	lr
 80182e8:	00030d40 	.word	0x00030d40

080182ec <USB_FlushRxFifo>:
 80182ec:	b480      	push	{r7}
 80182ee:	b085      	sub	sp, #20
 80182f0:	af00      	add	r7, sp, #0
 80182f2:	6078      	str	r0, [r7, #4]
 80182f4:	2300      	movs	r3, #0
 80182f6:	60fb      	str	r3, [r7, #12]
 80182f8:	68fb      	ldr	r3, [r7, #12]
 80182fa:	3301      	adds	r3, #1
 80182fc:	60fb      	str	r3, [r7, #12]
 80182fe:	68fb      	ldr	r3, [r7, #12]
 8018300:	4a11      	ldr	r2, [pc, #68]	; (8018348 <USB_FlushRxFifo+0x5c>)
 8018302:	4293      	cmp	r3, r2
 8018304:	d901      	bls.n	801830a <USB_FlushRxFifo+0x1e>
 8018306:	2303      	movs	r3, #3
 8018308:	e018      	b.n	801833c <USB_FlushRxFifo+0x50>
 801830a:	687b      	ldr	r3, [r7, #4]
 801830c:	691b      	ldr	r3, [r3, #16]
 801830e:	2b00      	cmp	r3, #0
 8018310:	daf2      	bge.n	80182f8 <USB_FlushRxFifo+0xc>
 8018312:	2300      	movs	r3, #0
 8018314:	60fb      	str	r3, [r7, #12]
 8018316:	687b      	ldr	r3, [r7, #4]
 8018318:	2210      	movs	r2, #16
 801831a:	611a      	str	r2, [r3, #16]
 801831c:	68fb      	ldr	r3, [r7, #12]
 801831e:	3301      	adds	r3, #1
 8018320:	60fb      	str	r3, [r7, #12]
 8018322:	68fb      	ldr	r3, [r7, #12]
 8018324:	4a08      	ldr	r2, [pc, #32]	; (8018348 <USB_FlushRxFifo+0x5c>)
 8018326:	4293      	cmp	r3, r2
 8018328:	d901      	bls.n	801832e <USB_FlushRxFifo+0x42>
 801832a:	2303      	movs	r3, #3
 801832c:	e006      	b.n	801833c <USB_FlushRxFifo+0x50>
 801832e:	687b      	ldr	r3, [r7, #4]
 8018330:	691b      	ldr	r3, [r3, #16]
 8018332:	f003 0310 	and.w	r3, r3, #16
 8018336:	2b10      	cmp	r3, #16
 8018338:	d0f0      	beq.n	801831c <USB_FlushRxFifo+0x30>
 801833a:	2300      	movs	r3, #0
 801833c:	4618      	mov	r0, r3
 801833e:	3714      	adds	r7, #20
 8018340:	46bd      	mov	sp, r7
 8018342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018346:	4770      	bx	lr
 8018348:	00030d40 	.word	0x00030d40

0801834c <USB_SetDevSpeed>:
 801834c:	b480      	push	{r7}
 801834e:	b085      	sub	sp, #20
 8018350:	af00      	add	r7, sp, #0
 8018352:	6078      	str	r0, [r7, #4]
 8018354:	460b      	mov	r3, r1
 8018356:	70fb      	strb	r3, [r7, #3]
 8018358:	687b      	ldr	r3, [r7, #4]
 801835a:	60fb      	str	r3, [r7, #12]
 801835c:	68fb      	ldr	r3, [r7, #12]
 801835e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018362:	681a      	ldr	r2, [r3, #0]
 8018364:	78fb      	ldrb	r3, [r7, #3]
 8018366:	68f9      	ldr	r1, [r7, #12]
 8018368:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 801836c:	4313      	orrs	r3, r2
 801836e:	600b      	str	r3, [r1, #0]
 8018370:	2300      	movs	r3, #0
 8018372:	4618      	mov	r0, r3
 8018374:	3714      	adds	r7, #20
 8018376:	46bd      	mov	sp, r7
 8018378:	f85d 7b04 	ldr.w	r7, [sp], #4
 801837c:	4770      	bx	lr

0801837e <USB_GetDevSpeed>:
 801837e:	b480      	push	{r7}
 8018380:	b087      	sub	sp, #28
 8018382:	af00      	add	r7, sp, #0
 8018384:	6078      	str	r0, [r7, #4]
 8018386:	687b      	ldr	r3, [r7, #4]
 8018388:	613b      	str	r3, [r7, #16]
 801838a:	693b      	ldr	r3, [r7, #16]
 801838c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018390:	689b      	ldr	r3, [r3, #8]
 8018392:	f003 0306 	and.w	r3, r3, #6
 8018396:	60fb      	str	r3, [r7, #12]
 8018398:	68fb      	ldr	r3, [r7, #12]
 801839a:	2b00      	cmp	r3, #0
 801839c:	d102      	bne.n	80183a4 <USB_GetDevSpeed+0x26>
 801839e:	2300      	movs	r3, #0
 80183a0:	75fb      	strb	r3, [r7, #23]
 80183a2:	e00a      	b.n	80183ba <USB_GetDevSpeed+0x3c>
 80183a4:	68fb      	ldr	r3, [r7, #12]
 80183a6:	2b02      	cmp	r3, #2
 80183a8:	d002      	beq.n	80183b0 <USB_GetDevSpeed+0x32>
 80183aa:	68fb      	ldr	r3, [r7, #12]
 80183ac:	2b06      	cmp	r3, #6
 80183ae:	d102      	bne.n	80183b6 <USB_GetDevSpeed+0x38>
 80183b0:	2302      	movs	r3, #2
 80183b2:	75fb      	strb	r3, [r7, #23]
 80183b4:	e001      	b.n	80183ba <USB_GetDevSpeed+0x3c>
 80183b6:	230f      	movs	r3, #15
 80183b8:	75fb      	strb	r3, [r7, #23]
 80183ba:	7dfb      	ldrb	r3, [r7, #23]
 80183bc:	4618      	mov	r0, r3
 80183be:	371c      	adds	r7, #28
 80183c0:	46bd      	mov	sp, r7
 80183c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80183c6:	4770      	bx	lr

080183c8 <USB_ActivateEndpoint>:
 80183c8:	b480      	push	{r7}
 80183ca:	b085      	sub	sp, #20
 80183cc:	af00      	add	r7, sp, #0
 80183ce:	6078      	str	r0, [r7, #4]
 80183d0:	6039      	str	r1, [r7, #0]
 80183d2:	687b      	ldr	r3, [r7, #4]
 80183d4:	60fb      	str	r3, [r7, #12]
 80183d6:	683b      	ldr	r3, [r7, #0]
 80183d8:	781b      	ldrb	r3, [r3, #0]
 80183da:	60bb      	str	r3, [r7, #8]
 80183dc:	683b      	ldr	r3, [r7, #0]
 80183de:	785b      	ldrb	r3, [r3, #1]
 80183e0:	2b01      	cmp	r3, #1
 80183e2:	d13a      	bne.n	801845a <USB_ActivateEndpoint+0x92>
 80183e4:	68fb      	ldr	r3, [r7, #12]
 80183e6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80183ea:	69da      	ldr	r2, [r3, #28]
 80183ec:	683b      	ldr	r3, [r7, #0]
 80183ee:	781b      	ldrb	r3, [r3, #0]
 80183f0:	f003 030f 	and.w	r3, r3, #15
 80183f4:	2101      	movs	r1, #1
 80183f6:	fa01 f303 	lsl.w	r3, r1, r3
 80183fa:	b29b      	uxth	r3, r3
 80183fc:	68f9      	ldr	r1, [r7, #12]
 80183fe:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018402:	4313      	orrs	r3, r2
 8018404:	61cb      	str	r3, [r1, #28]
 8018406:	68bb      	ldr	r3, [r7, #8]
 8018408:	015a      	lsls	r2, r3, #5
 801840a:	68fb      	ldr	r3, [r7, #12]
 801840c:	4413      	add	r3, r2
 801840e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018412:	681b      	ldr	r3, [r3, #0]
 8018414:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8018418:	2b00      	cmp	r3, #0
 801841a:	d155      	bne.n	80184c8 <USB_ActivateEndpoint+0x100>
 801841c:	68bb      	ldr	r3, [r7, #8]
 801841e:	015a      	lsls	r2, r3, #5
 8018420:	68fb      	ldr	r3, [r7, #12]
 8018422:	4413      	add	r3, r2
 8018424:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018428:	681a      	ldr	r2, [r3, #0]
 801842a:	683b      	ldr	r3, [r7, #0]
 801842c:	68db      	ldr	r3, [r3, #12]
 801842e:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8018432:	683b      	ldr	r3, [r7, #0]
 8018434:	791b      	ldrb	r3, [r3, #4]
 8018436:	049b      	lsls	r3, r3, #18
 8018438:	4319      	orrs	r1, r3
 801843a:	68bb      	ldr	r3, [r7, #8]
 801843c:	059b      	lsls	r3, r3, #22
 801843e:	430b      	orrs	r3, r1
 8018440:	4313      	orrs	r3, r2
 8018442:	68ba      	ldr	r2, [r7, #8]
 8018444:	0151      	lsls	r1, r2, #5
 8018446:	68fa      	ldr	r2, [r7, #12]
 8018448:	440a      	add	r2, r1
 801844a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801844e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8018452:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8018456:	6013      	str	r3, [r2, #0]
 8018458:	e036      	b.n	80184c8 <USB_ActivateEndpoint+0x100>
 801845a:	68fb      	ldr	r3, [r7, #12]
 801845c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018460:	69da      	ldr	r2, [r3, #28]
 8018462:	683b      	ldr	r3, [r7, #0]
 8018464:	781b      	ldrb	r3, [r3, #0]
 8018466:	f003 030f 	and.w	r3, r3, #15
 801846a:	2101      	movs	r1, #1
 801846c:	fa01 f303 	lsl.w	r3, r1, r3
 8018470:	041b      	lsls	r3, r3, #16
 8018472:	68f9      	ldr	r1, [r7, #12]
 8018474:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018478:	4313      	orrs	r3, r2
 801847a:	61cb      	str	r3, [r1, #28]
 801847c:	68bb      	ldr	r3, [r7, #8]
 801847e:	015a      	lsls	r2, r3, #5
 8018480:	68fb      	ldr	r3, [r7, #12]
 8018482:	4413      	add	r3, r2
 8018484:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018488:	681b      	ldr	r3, [r3, #0]
 801848a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 801848e:	2b00      	cmp	r3, #0
 8018490:	d11a      	bne.n	80184c8 <USB_ActivateEndpoint+0x100>
 8018492:	68bb      	ldr	r3, [r7, #8]
 8018494:	015a      	lsls	r2, r3, #5
 8018496:	68fb      	ldr	r3, [r7, #12]
 8018498:	4413      	add	r3, r2
 801849a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801849e:	681a      	ldr	r2, [r3, #0]
 80184a0:	683b      	ldr	r3, [r7, #0]
 80184a2:	68db      	ldr	r3, [r3, #12]
 80184a4:	f3c3 010a 	ubfx	r1, r3, #0, #11
 80184a8:	683b      	ldr	r3, [r7, #0]
 80184aa:	791b      	ldrb	r3, [r3, #4]
 80184ac:	049b      	lsls	r3, r3, #18
 80184ae:	430b      	orrs	r3, r1
 80184b0:	4313      	orrs	r3, r2
 80184b2:	68ba      	ldr	r2, [r7, #8]
 80184b4:	0151      	lsls	r1, r2, #5
 80184b6:	68fa      	ldr	r2, [r7, #12]
 80184b8:	440a      	add	r2, r1
 80184ba:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80184be:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80184c2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80184c6:	6013      	str	r3, [r2, #0]
 80184c8:	2300      	movs	r3, #0
 80184ca:	4618      	mov	r0, r3
 80184cc:	3714      	adds	r7, #20
 80184ce:	46bd      	mov	sp, r7
 80184d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184d4:	4770      	bx	lr
	...

080184d8 <USB_DeactivateEndpoint>:
 80184d8:	b480      	push	{r7}
 80184da:	b085      	sub	sp, #20
 80184dc:	af00      	add	r7, sp, #0
 80184de:	6078      	str	r0, [r7, #4]
 80184e0:	6039      	str	r1, [r7, #0]
 80184e2:	687b      	ldr	r3, [r7, #4]
 80184e4:	60fb      	str	r3, [r7, #12]
 80184e6:	683b      	ldr	r3, [r7, #0]
 80184e8:	781b      	ldrb	r3, [r3, #0]
 80184ea:	60bb      	str	r3, [r7, #8]
 80184ec:	683b      	ldr	r3, [r7, #0]
 80184ee:	785b      	ldrb	r3, [r3, #1]
 80184f0:	2b01      	cmp	r3, #1
 80184f2:	d161      	bne.n	80185b8 <USB_DeactivateEndpoint+0xe0>
 80184f4:	68bb      	ldr	r3, [r7, #8]
 80184f6:	015a      	lsls	r2, r3, #5
 80184f8:	68fb      	ldr	r3, [r7, #12]
 80184fa:	4413      	add	r3, r2
 80184fc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018500:	681b      	ldr	r3, [r3, #0]
 8018502:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018506:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 801850a:	d11f      	bne.n	801854c <USB_DeactivateEndpoint+0x74>
 801850c:	68bb      	ldr	r3, [r7, #8]
 801850e:	015a      	lsls	r2, r3, #5
 8018510:	68fb      	ldr	r3, [r7, #12]
 8018512:	4413      	add	r3, r2
 8018514:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018518:	681b      	ldr	r3, [r3, #0]
 801851a:	68ba      	ldr	r2, [r7, #8]
 801851c:	0151      	lsls	r1, r2, #5
 801851e:	68fa      	ldr	r2, [r7, #12]
 8018520:	440a      	add	r2, r1
 8018522:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018526:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 801852a:	6013      	str	r3, [r2, #0]
 801852c:	68bb      	ldr	r3, [r7, #8]
 801852e:	015a      	lsls	r2, r3, #5
 8018530:	68fb      	ldr	r3, [r7, #12]
 8018532:	4413      	add	r3, r2
 8018534:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018538:	681b      	ldr	r3, [r3, #0]
 801853a:	68ba      	ldr	r2, [r7, #8]
 801853c:	0151      	lsls	r1, r2, #5
 801853e:	68fa      	ldr	r2, [r7, #12]
 8018540:	440a      	add	r2, r1
 8018542:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018546:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 801854a:	6013      	str	r3, [r2, #0]
 801854c:	68fb      	ldr	r3, [r7, #12]
 801854e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018552:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8018554:	683b      	ldr	r3, [r7, #0]
 8018556:	781b      	ldrb	r3, [r3, #0]
 8018558:	f003 030f 	and.w	r3, r3, #15
 801855c:	2101      	movs	r1, #1
 801855e:	fa01 f303 	lsl.w	r3, r1, r3
 8018562:	b29b      	uxth	r3, r3
 8018564:	43db      	mvns	r3, r3
 8018566:	68f9      	ldr	r1, [r7, #12]
 8018568:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 801856c:	4013      	ands	r3, r2
 801856e:	63cb      	str	r3, [r1, #60]	; 0x3c
 8018570:	68fb      	ldr	r3, [r7, #12]
 8018572:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018576:	69da      	ldr	r2, [r3, #28]
 8018578:	683b      	ldr	r3, [r7, #0]
 801857a:	781b      	ldrb	r3, [r3, #0]
 801857c:	f003 030f 	and.w	r3, r3, #15
 8018580:	2101      	movs	r1, #1
 8018582:	fa01 f303 	lsl.w	r3, r1, r3
 8018586:	b29b      	uxth	r3, r3
 8018588:	43db      	mvns	r3, r3
 801858a:	68f9      	ldr	r1, [r7, #12]
 801858c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018590:	4013      	ands	r3, r2
 8018592:	61cb      	str	r3, [r1, #28]
 8018594:	68bb      	ldr	r3, [r7, #8]
 8018596:	015a      	lsls	r2, r3, #5
 8018598:	68fb      	ldr	r3, [r7, #12]
 801859a:	4413      	add	r3, r2
 801859c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80185a0:	681a      	ldr	r2, [r3, #0]
 80185a2:	68bb      	ldr	r3, [r7, #8]
 80185a4:	0159      	lsls	r1, r3, #5
 80185a6:	68fb      	ldr	r3, [r7, #12]
 80185a8:	440b      	add	r3, r1
 80185aa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80185ae:	4619      	mov	r1, r3
 80185b0:	4b35      	ldr	r3, [pc, #212]	; (8018688 <USB_DeactivateEndpoint+0x1b0>)
 80185b2:	4013      	ands	r3, r2
 80185b4:	600b      	str	r3, [r1, #0]
 80185b6:	e060      	b.n	801867a <USB_DeactivateEndpoint+0x1a2>
 80185b8:	68bb      	ldr	r3, [r7, #8]
 80185ba:	015a      	lsls	r2, r3, #5
 80185bc:	68fb      	ldr	r3, [r7, #12]
 80185be:	4413      	add	r3, r2
 80185c0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80185c4:	681b      	ldr	r3, [r3, #0]
 80185c6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80185ca:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80185ce:	d11f      	bne.n	8018610 <USB_DeactivateEndpoint+0x138>
 80185d0:	68bb      	ldr	r3, [r7, #8]
 80185d2:	015a      	lsls	r2, r3, #5
 80185d4:	68fb      	ldr	r3, [r7, #12]
 80185d6:	4413      	add	r3, r2
 80185d8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80185dc:	681b      	ldr	r3, [r3, #0]
 80185de:	68ba      	ldr	r2, [r7, #8]
 80185e0:	0151      	lsls	r1, r2, #5
 80185e2:	68fa      	ldr	r2, [r7, #12]
 80185e4:	440a      	add	r2, r1
 80185e6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80185ea:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80185ee:	6013      	str	r3, [r2, #0]
 80185f0:	68bb      	ldr	r3, [r7, #8]
 80185f2:	015a      	lsls	r2, r3, #5
 80185f4:	68fb      	ldr	r3, [r7, #12]
 80185f6:	4413      	add	r3, r2
 80185f8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80185fc:	681b      	ldr	r3, [r3, #0]
 80185fe:	68ba      	ldr	r2, [r7, #8]
 8018600:	0151      	lsls	r1, r2, #5
 8018602:	68fa      	ldr	r2, [r7, #12]
 8018604:	440a      	add	r2, r1
 8018606:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 801860a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 801860e:	6013      	str	r3, [r2, #0]
 8018610:	68fb      	ldr	r3, [r7, #12]
 8018612:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018616:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8018618:	683b      	ldr	r3, [r7, #0]
 801861a:	781b      	ldrb	r3, [r3, #0]
 801861c:	f003 030f 	and.w	r3, r3, #15
 8018620:	2101      	movs	r1, #1
 8018622:	fa01 f303 	lsl.w	r3, r1, r3
 8018626:	041b      	lsls	r3, r3, #16
 8018628:	43db      	mvns	r3, r3
 801862a:	68f9      	ldr	r1, [r7, #12]
 801862c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018630:	4013      	ands	r3, r2
 8018632:	63cb      	str	r3, [r1, #60]	; 0x3c
 8018634:	68fb      	ldr	r3, [r7, #12]
 8018636:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801863a:	69da      	ldr	r2, [r3, #28]
 801863c:	683b      	ldr	r3, [r7, #0]
 801863e:	781b      	ldrb	r3, [r3, #0]
 8018640:	f003 030f 	and.w	r3, r3, #15
 8018644:	2101      	movs	r1, #1
 8018646:	fa01 f303 	lsl.w	r3, r1, r3
 801864a:	041b      	lsls	r3, r3, #16
 801864c:	43db      	mvns	r3, r3
 801864e:	68f9      	ldr	r1, [r7, #12]
 8018650:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018654:	4013      	ands	r3, r2
 8018656:	61cb      	str	r3, [r1, #28]
 8018658:	68bb      	ldr	r3, [r7, #8]
 801865a:	015a      	lsls	r2, r3, #5
 801865c:	68fb      	ldr	r3, [r7, #12]
 801865e:	4413      	add	r3, r2
 8018660:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018664:	681a      	ldr	r2, [r3, #0]
 8018666:	68bb      	ldr	r3, [r7, #8]
 8018668:	0159      	lsls	r1, r3, #5
 801866a:	68fb      	ldr	r3, [r7, #12]
 801866c:	440b      	add	r3, r1
 801866e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018672:	4619      	mov	r1, r3
 8018674:	4b05      	ldr	r3, [pc, #20]	; (801868c <USB_DeactivateEndpoint+0x1b4>)
 8018676:	4013      	ands	r3, r2
 8018678:	600b      	str	r3, [r1, #0]
 801867a:	2300      	movs	r3, #0
 801867c:	4618      	mov	r0, r3
 801867e:	3714      	adds	r7, #20
 8018680:	46bd      	mov	sp, r7
 8018682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018686:	4770      	bx	lr
 8018688:	ec337800 	.word	0xec337800
 801868c:	eff37800 	.word	0xeff37800

08018690 <USB_EPStartXfer>:
 8018690:	b580      	push	{r7, lr}
 8018692:	b08a      	sub	sp, #40	; 0x28
 8018694:	af02      	add	r7, sp, #8
 8018696:	60f8      	str	r0, [r7, #12]
 8018698:	60b9      	str	r1, [r7, #8]
 801869a:	4613      	mov	r3, r2
 801869c:	71fb      	strb	r3, [r7, #7]
 801869e:	68fb      	ldr	r3, [r7, #12]
 80186a0:	61fb      	str	r3, [r7, #28]
 80186a2:	68bb      	ldr	r3, [r7, #8]
 80186a4:	781b      	ldrb	r3, [r3, #0]
 80186a6:	61bb      	str	r3, [r7, #24]
 80186a8:	68bb      	ldr	r3, [r7, #8]
 80186aa:	785b      	ldrb	r3, [r3, #1]
 80186ac:	2b01      	cmp	r3, #1
 80186ae:	f040 815c 	bne.w	801896a <USB_EPStartXfer+0x2da>
 80186b2:	68bb      	ldr	r3, [r7, #8]
 80186b4:	699b      	ldr	r3, [r3, #24]
 80186b6:	2b00      	cmp	r3, #0
 80186b8:	d132      	bne.n	8018720 <USB_EPStartXfer+0x90>
 80186ba:	69bb      	ldr	r3, [r7, #24]
 80186bc:	015a      	lsls	r2, r3, #5
 80186be:	69fb      	ldr	r3, [r7, #28]
 80186c0:	4413      	add	r3, r2
 80186c2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80186c6:	691b      	ldr	r3, [r3, #16]
 80186c8:	69ba      	ldr	r2, [r7, #24]
 80186ca:	0151      	lsls	r1, r2, #5
 80186cc:	69fa      	ldr	r2, [r7, #28]
 80186ce:	440a      	add	r2, r1
 80186d0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80186d4:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80186d8:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80186dc:	6113      	str	r3, [r2, #16]
 80186de:	69bb      	ldr	r3, [r7, #24]
 80186e0:	015a      	lsls	r2, r3, #5
 80186e2:	69fb      	ldr	r3, [r7, #28]
 80186e4:	4413      	add	r3, r2
 80186e6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80186ea:	691b      	ldr	r3, [r3, #16]
 80186ec:	69ba      	ldr	r2, [r7, #24]
 80186ee:	0151      	lsls	r1, r2, #5
 80186f0:	69fa      	ldr	r2, [r7, #28]
 80186f2:	440a      	add	r2, r1
 80186f4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80186f8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80186fc:	6113      	str	r3, [r2, #16]
 80186fe:	69bb      	ldr	r3, [r7, #24]
 8018700:	015a      	lsls	r2, r3, #5
 8018702:	69fb      	ldr	r3, [r7, #28]
 8018704:	4413      	add	r3, r2
 8018706:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801870a:	691b      	ldr	r3, [r3, #16]
 801870c:	69ba      	ldr	r2, [r7, #24]
 801870e:	0151      	lsls	r1, r2, #5
 8018710:	69fa      	ldr	r2, [r7, #28]
 8018712:	440a      	add	r2, r1
 8018714:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018718:	0cdb      	lsrs	r3, r3, #19
 801871a:	04db      	lsls	r3, r3, #19
 801871c:	6113      	str	r3, [r2, #16]
 801871e:	e074      	b.n	801880a <USB_EPStartXfer+0x17a>
 8018720:	69bb      	ldr	r3, [r7, #24]
 8018722:	015a      	lsls	r2, r3, #5
 8018724:	69fb      	ldr	r3, [r7, #28]
 8018726:	4413      	add	r3, r2
 8018728:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801872c:	691b      	ldr	r3, [r3, #16]
 801872e:	69ba      	ldr	r2, [r7, #24]
 8018730:	0151      	lsls	r1, r2, #5
 8018732:	69fa      	ldr	r2, [r7, #28]
 8018734:	440a      	add	r2, r1
 8018736:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801873a:	0cdb      	lsrs	r3, r3, #19
 801873c:	04db      	lsls	r3, r3, #19
 801873e:	6113      	str	r3, [r2, #16]
 8018740:	69bb      	ldr	r3, [r7, #24]
 8018742:	015a      	lsls	r2, r3, #5
 8018744:	69fb      	ldr	r3, [r7, #28]
 8018746:	4413      	add	r3, r2
 8018748:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801874c:	691b      	ldr	r3, [r3, #16]
 801874e:	69ba      	ldr	r2, [r7, #24]
 8018750:	0151      	lsls	r1, r2, #5
 8018752:	69fa      	ldr	r2, [r7, #28]
 8018754:	440a      	add	r2, r1
 8018756:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801875a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 801875e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018762:	6113      	str	r3, [r2, #16]
 8018764:	69bb      	ldr	r3, [r7, #24]
 8018766:	015a      	lsls	r2, r3, #5
 8018768:	69fb      	ldr	r3, [r7, #28]
 801876a:	4413      	add	r3, r2
 801876c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018770:	691a      	ldr	r2, [r3, #16]
 8018772:	68bb      	ldr	r3, [r7, #8]
 8018774:	6999      	ldr	r1, [r3, #24]
 8018776:	68bb      	ldr	r3, [r7, #8]
 8018778:	68db      	ldr	r3, [r3, #12]
 801877a:	440b      	add	r3, r1
 801877c:	1e59      	subs	r1, r3, #1
 801877e:	68bb      	ldr	r3, [r7, #8]
 8018780:	68db      	ldr	r3, [r3, #12]
 8018782:	fbb1 f3f3 	udiv	r3, r1, r3
 8018786:	04d9      	lsls	r1, r3, #19
 8018788:	4b9d      	ldr	r3, [pc, #628]	; (8018a00 <USB_EPStartXfer+0x370>)
 801878a:	400b      	ands	r3, r1
 801878c:	69b9      	ldr	r1, [r7, #24]
 801878e:	0148      	lsls	r0, r1, #5
 8018790:	69f9      	ldr	r1, [r7, #28]
 8018792:	4401      	add	r1, r0
 8018794:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8018798:	4313      	orrs	r3, r2
 801879a:	610b      	str	r3, [r1, #16]
 801879c:	69bb      	ldr	r3, [r7, #24]
 801879e:	015a      	lsls	r2, r3, #5
 80187a0:	69fb      	ldr	r3, [r7, #28]
 80187a2:	4413      	add	r3, r2
 80187a4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80187a8:	691a      	ldr	r2, [r3, #16]
 80187aa:	68bb      	ldr	r3, [r7, #8]
 80187ac:	699b      	ldr	r3, [r3, #24]
 80187ae:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80187b2:	69b9      	ldr	r1, [r7, #24]
 80187b4:	0148      	lsls	r0, r1, #5
 80187b6:	69f9      	ldr	r1, [r7, #28]
 80187b8:	4401      	add	r1, r0
 80187ba:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 80187be:	4313      	orrs	r3, r2
 80187c0:	610b      	str	r3, [r1, #16]
 80187c2:	68bb      	ldr	r3, [r7, #8]
 80187c4:	791b      	ldrb	r3, [r3, #4]
 80187c6:	2b01      	cmp	r3, #1
 80187c8:	d11f      	bne.n	801880a <USB_EPStartXfer+0x17a>
 80187ca:	69bb      	ldr	r3, [r7, #24]
 80187cc:	015a      	lsls	r2, r3, #5
 80187ce:	69fb      	ldr	r3, [r7, #28]
 80187d0:	4413      	add	r3, r2
 80187d2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80187d6:	691b      	ldr	r3, [r3, #16]
 80187d8:	69ba      	ldr	r2, [r7, #24]
 80187da:	0151      	lsls	r1, r2, #5
 80187dc:	69fa      	ldr	r2, [r7, #28]
 80187de:	440a      	add	r2, r1
 80187e0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80187e4:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 80187e8:	6113      	str	r3, [r2, #16]
 80187ea:	69bb      	ldr	r3, [r7, #24]
 80187ec:	015a      	lsls	r2, r3, #5
 80187ee:	69fb      	ldr	r3, [r7, #28]
 80187f0:	4413      	add	r3, r2
 80187f2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80187f6:	691b      	ldr	r3, [r3, #16]
 80187f8:	69ba      	ldr	r2, [r7, #24]
 80187fa:	0151      	lsls	r1, r2, #5
 80187fc:	69fa      	ldr	r2, [r7, #28]
 80187fe:	440a      	add	r2, r1
 8018800:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018804:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018808:	6113      	str	r3, [r2, #16]
 801880a:	79fb      	ldrb	r3, [r7, #7]
 801880c:	2b01      	cmp	r3, #1
 801880e:	d14b      	bne.n	80188a8 <USB_EPStartXfer+0x218>
 8018810:	68bb      	ldr	r3, [r7, #8]
 8018812:	695b      	ldr	r3, [r3, #20]
 8018814:	2b00      	cmp	r3, #0
 8018816:	d009      	beq.n	801882c <USB_EPStartXfer+0x19c>
 8018818:	69bb      	ldr	r3, [r7, #24]
 801881a:	015a      	lsls	r2, r3, #5
 801881c:	69fb      	ldr	r3, [r7, #28]
 801881e:	4413      	add	r3, r2
 8018820:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018824:	461a      	mov	r2, r3
 8018826:	68bb      	ldr	r3, [r7, #8]
 8018828:	695b      	ldr	r3, [r3, #20]
 801882a:	6153      	str	r3, [r2, #20]
 801882c:	68bb      	ldr	r3, [r7, #8]
 801882e:	791b      	ldrb	r3, [r3, #4]
 8018830:	2b01      	cmp	r3, #1
 8018832:	d128      	bne.n	8018886 <USB_EPStartXfer+0x1f6>
 8018834:	69fb      	ldr	r3, [r7, #28]
 8018836:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801883a:	689b      	ldr	r3, [r3, #8]
 801883c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018840:	2b00      	cmp	r3, #0
 8018842:	d110      	bne.n	8018866 <USB_EPStartXfer+0x1d6>
 8018844:	69bb      	ldr	r3, [r7, #24]
 8018846:	015a      	lsls	r2, r3, #5
 8018848:	69fb      	ldr	r3, [r7, #28]
 801884a:	4413      	add	r3, r2
 801884c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018850:	681b      	ldr	r3, [r3, #0]
 8018852:	69ba      	ldr	r2, [r7, #24]
 8018854:	0151      	lsls	r1, r2, #5
 8018856:	69fa      	ldr	r2, [r7, #28]
 8018858:	440a      	add	r2, r1
 801885a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801885e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018862:	6013      	str	r3, [r2, #0]
 8018864:	e00f      	b.n	8018886 <USB_EPStartXfer+0x1f6>
 8018866:	69bb      	ldr	r3, [r7, #24]
 8018868:	015a      	lsls	r2, r3, #5
 801886a:	69fb      	ldr	r3, [r7, #28]
 801886c:	4413      	add	r3, r2
 801886e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018872:	681b      	ldr	r3, [r3, #0]
 8018874:	69ba      	ldr	r2, [r7, #24]
 8018876:	0151      	lsls	r1, r2, #5
 8018878:	69fa      	ldr	r2, [r7, #28]
 801887a:	440a      	add	r2, r1
 801887c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018880:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8018884:	6013      	str	r3, [r2, #0]
 8018886:	69bb      	ldr	r3, [r7, #24]
 8018888:	015a      	lsls	r2, r3, #5
 801888a:	69fb      	ldr	r3, [r7, #28]
 801888c:	4413      	add	r3, r2
 801888e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018892:	681b      	ldr	r3, [r3, #0]
 8018894:	69ba      	ldr	r2, [r7, #24]
 8018896:	0151      	lsls	r1, r2, #5
 8018898:	69fa      	ldr	r2, [r7, #28]
 801889a:	440a      	add	r2, r1
 801889c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80188a0:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80188a4:	6013      	str	r3, [r2, #0]
 80188a6:	e133      	b.n	8018b10 <USB_EPStartXfer+0x480>
 80188a8:	69bb      	ldr	r3, [r7, #24]
 80188aa:	015a      	lsls	r2, r3, #5
 80188ac:	69fb      	ldr	r3, [r7, #28]
 80188ae:	4413      	add	r3, r2
 80188b0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80188b4:	681b      	ldr	r3, [r3, #0]
 80188b6:	69ba      	ldr	r2, [r7, #24]
 80188b8:	0151      	lsls	r1, r2, #5
 80188ba:	69fa      	ldr	r2, [r7, #28]
 80188bc:	440a      	add	r2, r1
 80188be:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80188c2:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80188c6:	6013      	str	r3, [r2, #0]
 80188c8:	68bb      	ldr	r3, [r7, #8]
 80188ca:	791b      	ldrb	r3, [r3, #4]
 80188cc:	2b01      	cmp	r3, #1
 80188ce:	d015      	beq.n	80188fc <USB_EPStartXfer+0x26c>
 80188d0:	68bb      	ldr	r3, [r7, #8]
 80188d2:	699b      	ldr	r3, [r3, #24]
 80188d4:	2b00      	cmp	r3, #0
 80188d6:	f000 811b 	beq.w	8018b10 <USB_EPStartXfer+0x480>
 80188da:	69fb      	ldr	r3, [r7, #28]
 80188dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80188e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80188e2:	68bb      	ldr	r3, [r7, #8]
 80188e4:	781b      	ldrb	r3, [r3, #0]
 80188e6:	f003 030f 	and.w	r3, r3, #15
 80188ea:	2101      	movs	r1, #1
 80188ec:	fa01 f303 	lsl.w	r3, r1, r3
 80188f0:	69f9      	ldr	r1, [r7, #28]
 80188f2:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80188f6:	4313      	orrs	r3, r2
 80188f8:	634b      	str	r3, [r1, #52]	; 0x34
 80188fa:	e109      	b.n	8018b10 <USB_EPStartXfer+0x480>
 80188fc:	69fb      	ldr	r3, [r7, #28]
 80188fe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018902:	689b      	ldr	r3, [r3, #8]
 8018904:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018908:	2b00      	cmp	r3, #0
 801890a:	d110      	bne.n	801892e <USB_EPStartXfer+0x29e>
 801890c:	69bb      	ldr	r3, [r7, #24]
 801890e:	015a      	lsls	r2, r3, #5
 8018910:	69fb      	ldr	r3, [r7, #28]
 8018912:	4413      	add	r3, r2
 8018914:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018918:	681b      	ldr	r3, [r3, #0]
 801891a:	69ba      	ldr	r2, [r7, #24]
 801891c:	0151      	lsls	r1, r2, #5
 801891e:	69fa      	ldr	r2, [r7, #28]
 8018920:	440a      	add	r2, r1
 8018922:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018926:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 801892a:	6013      	str	r3, [r2, #0]
 801892c:	e00f      	b.n	801894e <USB_EPStartXfer+0x2be>
 801892e:	69bb      	ldr	r3, [r7, #24]
 8018930:	015a      	lsls	r2, r3, #5
 8018932:	69fb      	ldr	r3, [r7, #28]
 8018934:	4413      	add	r3, r2
 8018936:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801893a:	681b      	ldr	r3, [r3, #0]
 801893c:	69ba      	ldr	r2, [r7, #24]
 801893e:	0151      	lsls	r1, r2, #5
 8018940:	69fa      	ldr	r2, [r7, #28]
 8018942:	440a      	add	r2, r1
 8018944:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018948:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801894c:	6013      	str	r3, [r2, #0]
 801894e:	68bb      	ldr	r3, [r7, #8]
 8018950:	6919      	ldr	r1, [r3, #16]
 8018952:	68bb      	ldr	r3, [r7, #8]
 8018954:	781a      	ldrb	r2, [r3, #0]
 8018956:	68bb      	ldr	r3, [r7, #8]
 8018958:	699b      	ldr	r3, [r3, #24]
 801895a:	b298      	uxth	r0, r3
 801895c:	79fb      	ldrb	r3, [r7, #7]
 801895e:	9300      	str	r3, [sp, #0]
 8018960:	4603      	mov	r3, r0
 8018962:	68f8      	ldr	r0, [r7, #12]
 8018964:	f000 fade 	bl	8018f24 <USB_WritePacket>
 8018968:	e0d2      	b.n	8018b10 <USB_EPStartXfer+0x480>
 801896a:	69bb      	ldr	r3, [r7, #24]
 801896c:	015a      	lsls	r2, r3, #5
 801896e:	69fb      	ldr	r3, [r7, #28]
 8018970:	4413      	add	r3, r2
 8018972:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018976:	691b      	ldr	r3, [r3, #16]
 8018978:	69ba      	ldr	r2, [r7, #24]
 801897a:	0151      	lsls	r1, r2, #5
 801897c:	69fa      	ldr	r2, [r7, #28]
 801897e:	440a      	add	r2, r1
 8018980:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018984:	0cdb      	lsrs	r3, r3, #19
 8018986:	04db      	lsls	r3, r3, #19
 8018988:	6113      	str	r3, [r2, #16]
 801898a:	69bb      	ldr	r3, [r7, #24]
 801898c:	015a      	lsls	r2, r3, #5
 801898e:	69fb      	ldr	r3, [r7, #28]
 8018990:	4413      	add	r3, r2
 8018992:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018996:	691b      	ldr	r3, [r3, #16]
 8018998:	69ba      	ldr	r2, [r7, #24]
 801899a:	0151      	lsls	r1, r2, #5
 801899c:	69fa      	ldr	r2, [r7, #28]
 801899e:	440a      	add	r2, r1
 80189a0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80189a4:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80189a8:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80189ac:	6113      	str	r3, [r2, #16]
 80189ae:	68bb      	ldr	r3, [r7, #8]
 80189b0:	699b      	ldr	r3, [r3, #24]
 80189b2:	2b00      	cmp	r3, #0
 80189b4:	d126      	bne.n	8018a04 <USB_EPStartXfer+0x374>
 80189b6:	69bb      	ldr	r3, [r7, #24]
 80189b8:	015a      	lsls	r2, r3, #5
 80189ba:	69fb      	ldr	r3, [r7, #28]
 80189bc:	4413      	add	r3, r2
 80189be:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80189c2:	691a      	ldr	r2, [r3, #16]
 80189c4:	68bb      	ldr	r3, [r7, #8]
 80189c6:	68db      	ldr	r3, [r3, #12]
 80189c8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80189cc:	69b9      	ldr	r1, [r7, #24]
 80189ce:	0148      	lsls	r0, r1, #5
 80189d0:	69f9      	ldr	r1, [r7, #28]
 80189d2:	4401      	add	r1, r0
 80189d4:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 80189d8:	4313      	orrs	r3, r2
 80189da:	610b      	str	r3, [r1, #16]
 80189dc:	69bb      	ldr	r3, [r7, #24]
 80189de:	015a      	lsls	r2, r3, #5
 80189e0:	69fb      	ldr	r3, [r7, #28]
 80189e2:	4413      	add	r3, r2
 80189e4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80189e8:	691b      	ldr	r3, [r3, #16]
 80189ea:	69ba      	ldr	r2, [r7, #24]
 80189ec:	0151      	lsls	r1, r2, #5
 80189ee:	69fa      	ldr	r2, [r7, #28]
 80189f0:	440a      	add	r2, r1
 80189f2:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80189f6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80189fa:	6113      	str	r3, [r2, #16]
 80189fc:	e03a      	b.n	8018a74 <USB_EPStartXfer+0x3e4>
 80189fe:	bf00      	nop
 8018a00:	1ff80000 	.word	0x1ff80000
 8018a04:	68bb      	ldr	r3, [r7, #8]
 8018a06:	699a      	ldr	r2, [r3, #24]
 8018a08:	68bb      	ldr	r3, [r7, #8]
 8018a0a:	68db      	ldr	r3, [r3, #12]
 8018a0c:	4413      	add	r3, r2
 8018a0e:	1e5a      	subs	r2, r3, #1
 8018a10:	68bb      	ldr	r3, [r7, #8]
 8018a12:	68db      	ldr	r3, [r3, #12]
 8018a14:	fbb2 f3f3 	udiv	r3, r2, r3
 8018a18:	82fb      	strh	r3, [r7, #22]
 8018a1a:	68bb      	ldr	r3, [r7, #8]
 8018a1c:	68db      	ldr	r3, [r3, #12]
 8018a1e:	8afa      	ldrh	r2, [r7, #22]
 8018a20:	fb03 f202 	mul.w	r2, r3, r2
 8018a24:	68bb      	ldr	r3, [r7, #8]
 8018a26:	61da      	str	r2, [r3, #28]
 8018a28:	69bb      	ldr	r3, [r7, #24]
 8018a2a:	015a      	lsls	r2, r3, #5
 8018a2c:	69fb      	ldr	r3, [r7, #28]
 8018a2e:	4413      	add	r3, r2
 8018a30:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018a34:	691a      	ldr	r2, [r3, #16]
 8018a36:	8afb      	ldrh	r3, [r7, #22]
 8018a38:	04d9      	lsls	r1, r3, #19
 8018a3a:	4b38      	ldr	r3, [pc, #224]	; (8018b1c <USB_EPStartXfer+0x48c>)
 8018a3c:	400b      	ands	r3, r1
 8018a3e:	69b9      	ldr	r1, [r7, #24]
 8018a40:	0148      	lsls	r0, r1, #5
 8018a42:	69f9      	ldr	r1, [r7, #28]
 8018a44:	4401      	add	r1, r0
 8018a46:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018a4a:	4313      	orrs	r3, r2
 8018a4c:	610b      	str	r3, [r1, #16]
 8018a4e:	69bb      	ldr	r3, [r7, #24]
 8018a50:	015a      	lsls	r2, r3, #5
 8018a52:	69fb      	ldr	r3, [r7, #28]
 8018a54:	4413      	add	r3, r2
 8018a56:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018a5a:	691a      	ldr	r2, [r3, #16]
 8018a5c:	68bb      	ldr	r3, [r7, #8]
 8018a5e:	69db      	ldr	r3, [r3, #28]
 8018a60:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018a64:	69b9      	ldr	r1, [r7, #24]
 8018a66:	0148      	lsls	r0, r1, #5
 8018a68:	69f9      	ldr	r1, [r7, #28]
 8018a6a:	4401      	add	r1, r0
 8018a6c:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018a70:	4313      	orrs	r3, r2
 8018a72:	610b      	str	r3, [r1, #16]
 8018a74:	79fb      	ldrb	r3, [r7, #7]
 8018a76:	2b01      	cmp	r3, #1
 8018a78:	d10d      	bne.n	8018a96 <USB_EPStartXfer+0x406>
 8018a7a:	68bb      	ldr	r3, [r7, #8]
 8018a7c:	691b      	ldr	r3, [r3, #16]
 8018a7e:	2b00      	cmp	r3, #0
 8018a80:	d009      	beq.n	8018a96 <USB_EPStartXfer+0x406>
 8018a82:	68bb      	ldr	r3, [r7, #8]
 8018a84:	6919      	ldr	r1, [r3, #16]
 8018a86:	69bb      	ldr	r3, [r7, #24]
 8018a88:	015a      	lsls	r2, r3, #5
 8018a8a:	69fb      	ldr	r3, [r7, #28]
 8018a8c:	4413      	add	r3, r2
 8018a8e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018a92:	460a      	mov	r2, r1
 8018a94:	615a      	str	r2, [r3, #20]
 8018a96:	68bb      	ldr	r3, [r7, #8]
 8018a98:	791b      	ldrb	r3, [r3, #4]
 8018a9a:	2b01      	cmp	r3, #1
 8018a9c:	d128      	bne.n	8018af0 <USB_EPStartXfer+0x460>
 8018a9e:	69fb      	ldr	r3, [r7, #28]
 8018aa0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018aa4:	689b      	ldr	r3, [r3, #8]
 8018aa6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018aaa:	2b00      	cmp	r3, #0
 8018aac:	d110      	bne.n	8018ad0 <USB_EPStartXfer+0x440>
 8018aae:	69bb      	ldr	r3, [r7, #24]
 8018ab0:	015a      	lsls	r2, r3, #5
 8018ab2:	69fb      	ldr	r3, [r7, #28]
 8018ab4:	4413      	add	r3, r2
 8018ab6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018aba:	681b      	ldr	r3, [r3, #0]
 8018abc:	69ba      	ldr	r2, [r7, #24]
 8018abe:	0151      	lsls	r1, r2, #5
 8018ac0:	69fa      	ldr	r2, [r7, #28]
 8018ac2:	440a      	add	r2, r1
 8018ac4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018ac8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018acc:	6013      	str	r3, [r2, #0]
 8018ace:	e00f      	b.n	8018af0 <USB_EPStartXfer+0x460>
 8018ad0:	69bb      	ldr	r3, [r7, #24]
 8018ad2:	015a      	lsls	r2, r3, #5
 8018ad4:	69fb      	ldr	r3, [r7, #28]
 8018ad6:	4413      	add	r3, r2
 8018ad8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018adc:	681b      	ldr	r3, [r3, #0]
 8018ade:	69ba      	ldr	r2, [r7, #24]
 8018ae0:	0151      	lsls	r1, r2, #5
 8018ae2:	69fa      	ldr	r2, [r7, #28]
 8018ae4:	440a      	add	r2, r1
 8018ae6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018aea:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8018aee:	6013      	str	r3, [r2, #0]
 8018af0:	69bb      	ldr	r3, [r7, #24]
 8018af2:	015a      	lsls	r2, r3, #5
 8018af4:	69fb      	ldr	r3, [r7, #28]
 8018af6:	4413      	add	r3, r2
 8018af8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018afc:	681b      	ldr	r3, [r3, #0]
 8018afe:	69ba      	ldr	r2, [r7, #24]
 8018b00:	0151      	lsls	r1, r2, #5
 8018b02:	69fa      	ldr	r2, [r7, #28]
 8018b04:	440a      	add	r2, r1
 8018b06:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018b0a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018b0e:	6013      	str	r3, [r2, #0]
 8018b10:	2300      	movs	r3, #0
 8018b12:	4618      	mov	r0, r3
 8018b14:	3720      	adds	r7, #32
 8018b16:	46bd      	mov	sp, r7
 8018b18:	bd80      	pop	{r7, pc}
 8018b1a:	bf00      	nop
 8018b1c:	1ff80000 	.word	0x1ff80000

08018b20 <USB_EP0StartXfer>:
 8018b20:	b480      	push	{r7}
 8018b22:	b087      	sub	sp, #28
 8018b24:	af00      	add	r7, sp, #0
 8018b26:	60f8      	str	r0, [r7, #12]
 8018b28:	60b9      	str	r1, [r7, #8]
 8018b2a:	4613      	mov	r3, r2
 8018b2c:	71fb      	strb	r3, [r7, #7]
 8018b2e:	68fb      	ldr	r3, [r7, #12]
 8018b30:	617b      	str	r3, [r7, #20]
 8018b32:	68bb      	ldr	r3, [r7, #8]
 8018b34:	781b      	ldrb	r3, [r3, #0]
 8018b36:	613b      	str	r3, [r7, #16]
 8018b38:	68bb      	ldr	r3, [r7, #8]
 8018b3a:	785b      	ldrb	r3, [r3, #1]
 8018b3c:	2b01      	cmp	r3, #1
 8018b3e:	f040 80ce 	bne.w	8018cde <USB_EP0StartXfer+0x1be>
 8018b42:	68bb      	ldr	r3, [r7, #8]
 8018b44:	699b      	ldr	r3, [r3, #24]
 8018b46:	2b00      	cmp	r3, #0
 8018b48:	d132      	bne.n	8018bb0 <USB_EP0StartXfer+0x90>
 8018b4a:	693b      	ldr	r3, [r7, #16]
 8018b4c:	015a      	lsls	r2, r3, #5
 8018b4e:	697b      	ldr	r3, [r7, #20]
 8018b50:	4413      	add	r3, r2
 8018b52:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018b56:	691b      	ldr	r3, [r3, #16]
 8018b58:	693a      	ldr	r2, [r7, #16]
 8018b5a:	0151      	lsls	r1, r2, #5
 8018b5c:	697a      	ldr	r2, [r7, #20]
 8018b5e:	440a      	add	r2, r1
 8018b60:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018b64:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018b68:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018b6c:	6113      	str	r3, [r2, #16]
 8018b6e:	693b      	ldr	r3, [r7, #16]
 8018b70:	015a      	lsls	r2, r3, #5
 8018b72:	697b      	ldr	r3, [r7, #20]
 8018b74:	4413      	add	r3, r2
 8018b76:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018b7a:	691b      	ldr	r3, [r3, #16]
 8018b7c:	693a      	ldr	r2, [r7, #16]
 8018b7e:	0151      	lsls	r1, r2, #5
 8018b80:	697a      	ldr	r2, [r7, #20]
 8018b82:	440a      	add	r2, r1
 8018b84:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018b88:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018b8c:	6113      	str	r3, [r2, #16]
 8018b8e:	693b      	ldr	r3, [r7, #16]
 8018b90:	015a      	lsls	r2, r3, #5
 8018b92:	697b      	ldr	r3, [r7, #20]
 8018b94:	4413      	add	r3, r2
 8018b96:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018b9a:	691b      	ldr	r3, [r3, #16]
 8018b9c:	693a      	ldr	r2, [r7, #16]
 8018b9e:	0151      	lsls	r1, r2, #5
 8018ba0:	697a      	ldr	r2, [r7, #20]
 8018ba2:	440a      	add	r2, r1
 8018ba4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018ba8:	0cdb      	lsrs	r3, r3, #19
 8018baa:	04db      	lsls	r3, r3, #19
 8018bac:	6113      	str	r3, [r2, #16]
 8018bae:	e04e      	b.n	8018c4e <USB_EP0StartXfer+0x12e>
 8018bb0:	693b      	ldr	r3, [r7, #16]
 8018bb2:	015a      	lsls	r2, r3, #5
 8018bb4:	697b      	ldr	r3, [r7, #20]
 8018bb6:	4413      	add	r3, r2
 8018bb8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018bbc:	691b      	ldr	r3, [r3, #16]
 8018bbe:	693a      	ldr	r2, [r7, #16]
 8018bc0:	0151      	lsls	r1, r2, #5
 8018bc2:	697a      	ldr	r2, [r7, #20]
 8018bc4:	440a      	add	r2, r1
 8018bc6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018bca:	0cdb      	lsrs	r3, r3, #19
 8018bcc:	04db      	lsls	r3, r3, #19
 8018bce:	6113      	str	r3, [r2, #16]
 8018bd0:	693b      	ldr	r3, [r7, #16]
 8018bd2:	015a      	lsls	r2, r3, #5
 8018bd4:	697b      	ldr	r3, [r7, #20]
 8018bd6:	4413      	add	r3, r2
 8018bd8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018bdc:	691b      	ldr	r3, [r3, #16]
 8018bde:	693a      	ldr	r2, [r7, #16]
 8018be0:	0151      	lsls	r1, r2, #5
 8018be2:	697a      	ldr	r2, [r7, #20]
 8018be4:	440a      	add	r2, r1
 8018be6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018bea:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018bee:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018bf2:	6113      	str	r3, [r2, #16]
 8018bf4:	68bb      	ldr	r3, [r7, #8]
 8018bf6:	699a      	ldr	r2, [r3, #24]
 8018bf8:	68bb      	ldr	r3, [r7, #8]
 8018bfa:	68db      	ldr	r3, [r3, #12]
 8018bfc:	429a      	cmp	r2, r3
 8018bfe:	d903      	bls.n	8018c08 <USB_EP0StartXfer+0xe8>
 8018c00:	68bb      	ldr	r3, [r7, #8]
 8018c02:	68da      	ldr	r2, [r3, #12]
 8018c04:	68bb      	ldr	r3, [r7, #8]
 8018c06:	619a      	str	r2, [r3, #24]
 8018c08:	693b      	ldr	r3, [r7, #16]
 8018c0a:	015a      	lsls	r2, r3, #5
 8018c0c:	697b      	ldr	r3, [r7, #20]
 8018c0e:	4413      	add	r3, r2
 8018c10:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018c14:	691b      	ldr	r3, [r3, #16]
 8018c16:	693a      	ldr	r2, [r7, #16]
 8018c18:	0151      	lsls	r1, r2, #5
 8018c1a:	697a      	ldr	r2, [r7, #20]
 8018c1c:	440a      	add	r2, r1
 8018c1e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018c22:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018c26:	6113      	str	r3, [r2, #16]
 8018c28:	693b      	ldr	r3, [r7, #16]
 8018c2a:	015a      	lsls	r2, r3, #5
 8018c2c:	697b      	ldr	r3, [r7, #20]
 8018c2e:	4413      	add	r3, r2
 8018c30:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018c34:	691a      	ldr	r2, [r3, #16]
 8018c36:	68bb      	ldr	r3, [r7, #8]
 8018c38:	699b      	ldr	r3, [r3, #24]
 8018c3a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018c3e:	6939      	ldr	r1, [r7, #16]
 8018c40:	0148      	lsls	r0, r1, #5
 8018c42:	6979      	ldr	r1, [r7, #20]
 8018c44:	4401      	add	r1, r0
 8018c46:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8018c4a:	4313      	orrs	r3, r2
 8018c4c:	610b      	str	r3, [r1, #16]
 8018c4e:	79fb      	ldrb	r3, [r7, #7]
 8018c50:	2b01      	cmp	r3, #1
 8018c52:	d11e      	bne.n	8018c92 <USB_EP0StartXfer+0x172>
 8018c54:	68bb      	ldr	r3, [r7, #8]
 8018c56:	695b      	ldr	r3, [r3, #20]
 8018c58:	2b00      	cmp	r3, #0
 8018c5a:	d009      	beq.n	8018c70 <USB_EP0StartXfer+0x150>
 8018c5c:	693b      	ldr	r3, [r7, #16]
 8018c5e:	015a      	lsls	r2, r3, #5
 8018c60:	697b      	ldr	r3, [r7, #20]
 8018c62:	4413      	add	r3, r2
 8018c64:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018c68:	461a      	mov	r2, r3
 8018c6a:	68bb      	ldr	r3, [r7, #8]
 8018c6c:	695b      	ldr	r3, [r3, #20]
 8018c6e:	6153      	str	r3, [r2, #20]
 8018c70:	693b      	ldr	r3, [r7, #16]
 8018c72:	015a      	lsls	r2, r3, #5
 8018c74:	697b      	ldr	r3, [r7, #20]
 8018c76:	4413      	add	r3, r2
 8018c78:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018c7c:	681b      	ldr	r3, [r3, #0]
 8018c7e:	693a      	ldr	r2, [r7, #16]
 8018c80:	0151      	lsls	r1, r2, #5
 8018c82:	697a      	ldr	r2, [r7, #20]
 8018c84:	440a      	add	r2, r1
 8018c86:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018c8a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018c8e:	6013      	str	r3, [r2, #0]
 8018c90:	e097      	b.n	8018dc2 <USB_EP0StartXfer+0x2a2>
 8018c92:	693b      	ldr	r3, [r7, #16]
 8018c94:	015a      	lsls	r2, r3, #5
 8018c96:	697b      	ldr	r3, [r7, #20]
 8018c98:	4413      	add	r3, r2
 8018c9a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018c9e:	681b      	ldr	r3, [r3, #0]
 8018ca0:	693a      	ldr	r2, [r7, #16]
 8018ca2:	0151      	lsls	r1, r2, #5
 8018ca4:	697a      	ldr	r2, [r7, #20]
 8018ca6:	440a      	add	r2, r1
 8018ca8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018cac:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018cb0:	6013      	str	r3, [r2, #0]
 8018cb2:	68bb      	ldr	r3, [r7, #8]
 8018cb4:	699b      	ldr	r3, [r3, #24]
 8018cb6:	2b00      	cmp	r3, #0
 8018cb8:	f000 8083 	beq.w	8018dc2 <USB_EP0StartXfer+0x2a2>
 8018cbc:	697b      	ldr	r3, [r7, #20]
 8018cbe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018cc2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8018cc4:	68bb      	ldr	r3, [r7, #8]
 8018cc6:	781b      	ldrb	r3, [r3, #0]
 8018cc8:	f003 030f 	and.w	r3, r3, #15
 8018ccc:	2101      	movs	r1, #1
 8018cce:	fa01 f303 	lsl.w	r3, r1, r3
 8018cd2:	6979      	ldr	r1, [r7, #20]
 8018cd4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018cd8:	4313      	orrs	r3, r2
 8018cda:	634b      	str	r3, [r1, #52]	; 0x34
 8018cdc:	e071      	b.n	8018dc2 <USB_EP0StartXfer+0x2a2>
 8018cde:	693b      	ldr	r3, [r7, #16]
 8018ce0:	015a      	lsls	r2, r3, #5
 8018ce2:	697b      	ldr	r3, [r7, #20]
 8018ce4:	4413      	add	r3, r2
 8018ce6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018cea:	691b      	ldr	r3, [r3, #16]
 8018cec:	693a      	ldr	r2, [r7, #16]
 8018cee:	0151      	lsls	r1, r2, #5
 8018cf0:	697a      	ldr	r2, [r7, #20]
 8018cf2:	440a      	add	r2, r1
 8018cf4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018cf8:	0cdb      	lsrs	r3, r3, #19
 8018cfa:	04db      	lsls	r3, r3, #19
 8018cfc:	6113      	str	r3, [r2, #16]
 8018cfe:	693b      	ldr	r3, [r7, #16]
 8018d00:	015a      	lsls	r2, r3, #5
 8018d02:	697b      	ldr	r3, [r7, #20]
 8018d04:	4413      	add	r3, r2
 8018d06:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018d0a:	691b      	ldr	r3, [r3, #16]
 8018d0c:	693a      	ldr	r2, [r7, #16]
 8018d0e:	0151      	lsls	r1, r2, #5
 8018d10:	697a      	ldr	r2, [r7, #20]
 8018d12:	440a      	add	r2, r1
 8018d14:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018d18:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018d1c:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018d20:	6113      	str	r3, [r2, #16]
 8018d22:	68bb      	ldr	r3, [r7, #8]
 8018d24:	699b      	ldr	r3, [r3, #24]
 8018d26:	2b00      	cmp	r3, #0
 8018d28:	d003      	beq.n	8018d32 <USB_EP0StartXfer+0x212>
 8018d2a:	68bb      	ldr	r3, [r7, #8]
 8018d2c:	68da      	ldr	r2, [r3, #12]
 8018d2e:	68bb      	ldr	r3, [r7, #8]
 8018d30:	619a      	str	r2, [r3, #24]
 8018d32:	68bb      	ldr	r3, [r7, #8]
 8018d34:	68da      	ldr	r2, [r3, #12]
 8018d36:	68bb      	ldr	r3, [r7, #8]
 8018d38:	61da      	str	r2, [r3, #28]
 8018d3a:	693b      	ldr	r3, [r7, #16]
 8018d3c:	015a      	lsls	r2, r3, #5
 8018d3e:	697b      	ldr	r3, [r7, #20]
 8018d40:	4413      	add	r3, r2
 8018d42:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018d46:	691b      	ldr	r3, [r3, #16]
 8018d48:	693a      	ldr	r2, [r7, #16]
 8018d4a:	0151      	lsls	r1, r2, #5
 8018d4c:	697a      	ldr	r2, [r7, #20]
 8018d4e:	440a      	add	r2, r1
 8018d50:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018d54:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018d58:	6113      	str	r3, [r2, #16]
 8018d5a:	693b      	ldr	r3, [r7, #16]
 8018d5c:	015a      	lsls	r2, r3, #5
 8018d5e:	697b      	ldr	r3, [r7, #20]
 8018d60:	4413      	add	r3, r2
 8018d62:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018d66:	691a      	ldr	r2, [r3, #16]
 8018d68:	68bb      	ldr	r3, [r7, #8]
 8018d6a:	69db      	ldr	r3, [r3, #28]
 8018d6c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018d70:	6939      	ldr	r1, [r7, #16]
 8018d72:	0148      	lsls	r0, r1, #5
 8018d74:	6979      	ldr	r1, [r7, #20]
 8018d76:	4401      	add	r1, r0
 8018d78:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018d7c:	4313      	orrs	r3, r2
 8018d7e:	610b      	str	r3, [r1, #16]
 8018d80:	79fb      	ldrb	r3, [r7, #7]
 8018d82:	2b01      	cmp	r3, #1
 8018d84:	d10d      	bne.n	8018da2 <USB_EP0StartXfer+0x282>
 8018d86:	68bb      	ldr	r3, [r7, #8]
 8018d88:	691b      	ldr	r3, [r3, #16]
 8018d8a:	2b00      	cmp	r3, #0
 8018d8c:	d009      	beq.n	8018da2 <USB_EP0StartXfer+0x282>
 8018d8e:	68bb      	ldr	r3, [r7, #8]
 8018d90:	6919      	ldr	r1, [r3, #16]
 8018d92:	693b      	ldr	r3, [r7, #16]
 8018d94:	015a      	lsls	r2, r3, #5
 8018d96:	697b      	ldr	r3, [r7, #20]
 8018d98:	4413      	add	r3, r2
 8018d9a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018d9e:	460a      	mov	r2, r1
 8018da0:	615a      	str	r2, [r3, #20]
 8018da2:	693b      	ldr	r3, [r7, #16]
 8018da4:	015a      	lsls	r2, r3, #5
 8018da6:	697b      	ldr	r3, [r7, #20]
 8018da8:	4413      	add	r3, r2
 8018daa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018dae:	681b      	ldr	r3, [r3, #0]
 8018db0:	693a      	ldr	r2, [r7, #16]
 8018db2:	0151      	lsls	r1, r2, #5
 8018db4:	697a      	ldr	r2, [r7, #20]
 8018db6:	440a      	add	r2, r1
 8018db8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018dbc:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018dc0:	6013      	str	r3, [r2, #0]
 8018dc2:	2300      	movs	r3, #0
 8018dc4:	4618      	mov	r0, r3
 8018dc6:	371c      	adds	r7, #28
 8018dc8:	46bd      	mov	sp, r7
 8018dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018dce:	4770      	bx	lr

08018dd0 <USB_EPStopXfer>:
 8018dd0:	b480      	push	{r7}
 8018dd2:	b087      	sub	sp, #28
 8018dd4:	af00      	add	r7, sp, #0
 8018dd6:	6078      	str	r0, [r7, #4]
 8018dd8:	6039      	str	r1, [r7, #0]
 8018dda:	2300      	movs	r3, #0
 8018ddc:	60fb      	str	r3, [r7, #12]
 8018dde:	2300      	movs	r3, #0
 8018de0:	75fb      	strb	r3, [r7, #23]
 8018de2:	687b      	ldr	r3, [r7, #4]
 8018de4:	613b      	str	r3, [r7, #16]
 8018de6:	683b      	ldr	r3, [r7, #0]
 8018de8:	785b      	ldrb	r3, [r3, #1]
 8018dea:	2b01      	cmp	r3, #1
 8018dec:	d14a      	bne.n	8018e84 <USB_EPStopXfer+0xb4>
 8018dee:	683b      	ldr	r3, [r7, #0]
 8018df0:	781b      	ldrb	r3, [r3, #0]
 8018df2:	015a      	lsls	r2, r3, #5
 8018df4:	693b      	ldr	r3, [r7, #16]
 8018df6:	4413      	add	r3, r2
 8018df8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018dfc:	681b      	ldr	r3, [r3, #0]
 8018dfe:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018e02:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018e06:	f040 8086 	bne.w	8018f16 <USB_EPStopXfer+0x146>
 8018e0a:	683b      	ldr	r3, [r7, #0]
 8018e0c:	781b      	ldrb	r3, [r3, #0]
 8018e0e:	015a      	lsls	r2, r3, #5
 8018e10:	693b      	ldr	r3, [r7, #16]
 8018e12:	4413      	add	r3, r2
 8018e14:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018e18:	681b      	ldr	r3, [r3, #0]
 8018e1a:	683a      	ldr	r2, [r7, #0]
 8018e1c:	7812      	ldrb	r2, [r2, #0]
 8018e1e:	0151      	lsls	r1, r2, #5
 8018e20:	693a      	ldr	r2, [r7, #16]
 8018e22:	440a      	add	r2, r1
 8018e24:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018e28:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8018e2c:	6013      	str	r3, [r2, #0]
 8018e2e:	683b      	ldr	r3, [r7, #0]
 8018e30:	781b      	ldrb	r3, [r3, #0]
 8018e32:	015a      	lsls	r2, r3, #5
 8018e34:	693b      	ldr	r3, [r7, #16]
 8018e36:	4413      	add	r3, r2
 8018e38:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018e3c:	681b      	ldr	r3, [r3, #0]
 8018e3e:	683a      	ldr	r2, [r7, #0]
 8018e40:	7812      	ldrb	r2, [r2, #0]
 8018e42:	0151      	lsls	r1, r2, #5
 8018e44:	693a      	ldr	r2, [r7, #16]
 8018e46:	440a      	add	r2, r1
 8018e48:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018e4c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018e50:	6013      	str	r3, [r2, #0]
 8018e52:	68fb      	ldr	r3, [r7, #12]
 8018e54:	3301      	adds	r3, #1
 8018e56:	60fb      	str	r3, [r7, #12]
 8018e58:	68fb      	ldr	r3, [r7, #12]
 8018e5a:	f242 7210 	movw	r2, #10000	; 0x2710
 8018e5e:	4293      	cmp	r3, r2
 8018e60:	d902      	bls.n	8018e68 <USB_EPStopXfer+0x98>
 8018e62:	2301      	movs	r3, #1
 8018e64:	75fb      	strb	r3, [r7, #23]
 8018e66:	e056      	b.n	8018f16 <USB_EPStopXfer+0x146>
 8018e68:	683b      	ldr	r3, [r7, #0]
 8018e6a:	781b      	ldrb	r3, [r3, #0]
 8018e6c:	015a      	lsls	r2, r3, #5
 8018e6e:	693b      	ldr	r3, [r7, #16]
 8018e70:	4413      	add	r3, r2
 8018e72:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018e76:	681b      	ldr	r3, [r3, #0]
 8018e78:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018e7c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018e80:	d0e7      	beq.n	8018e52 <USB_EPStopXfer+0x82>
 8018e82:	e048      	b.n	8018f16 <USB_EPStopXfer+0x146>
 8018e84:	683b      	ldr	r3, [r7, #0]
 8018e86:	781b      	ldrb	r3, [r3, #0]
 8018e88:	015a      	lsls	r2, r3, #5
 8018e8a:	693b      	ldr	r3, [r7, #16]
 8018e8c:	4413      	add	r3, r2
 8018e8e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018e92:	681b      	ldr	r3, [r3, #0]
 8018e94:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018e98:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018e9c:	d13b      	bne.n	8018f16 <USB_EPStopXfer+0x146>
 8018e9e:	683b      	ldr	r3, [r7, #0]
 8018ea0:	781b      	ldrb	r3, [r3, #0]
 8018ea2:	015a      	lsls	r2, r3, #5
 8018ea4:	693b      	ldr	r3, [r7, #16]
 8018ea6:	4413      	add	r3, r2
 8018ea8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018eac:	681b      	ldr	r3, [r3, #0]
 8018eae:	683a      	ldr	r2, [r7, #0]
 8018eb0:	7812      	ldrb	r2, [r2, #0]
 8018eb2:	0151      	lsls	r1, r2, #5
 8018eb4:	693a      	ldr	r2, [r7, #16]
 8018eb6:	440a      	add	r2, r1
 8018eb8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018ebc:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8018ec0:	6013      	str	r3, [r2, #0]
 8018ec2:	683b      	ldr	r3, [r7, #0]
 8018ec4:	781b      	ldrb	r3, [r3, #0]
 8018ec6:	015a      	lsls	r2, r3, #5
 8018ec8:	693b      	ldr	r3, [r7, #16]
 8018eca:	4413      	add	r3, r2
 8018ecc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018ed0:	681b      	ldr	r3, [r3, #0]
 8018ed2:	683a      	ldr	r2, [r7, #0]
 8018ed4:	7812      	ldrb	r2, [r2, #0]
 8018ed6:	0151      	lsls	r1, r2, #5
 8018ed8:	693a      	ldr	r2, [r7, #16]
 8018eda:	440a      	add	r2, r1
 8018edc:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018ee0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018ee4:	6013      	str	r3, [r2, #0]
 8018ee6:	68fb      	ldr	r3, [r7, #12]
 8018ee8:	3301      	adds	r3, #1
 8018eea:	60fb      	str	r3, [r7, #12]
 8018eec:	68fb      	ldr	r3, [r7, #12]
 8018eee:	f242 7210 	movw	r2, #10000	; 0x2710
 8018ef2:	4293      	cmp	r3, r2
 8018ef4:	d902      	bls.n	8018efc <USB_EPStopXfer+0x12c>
 8018ef6:	2301      	movs	r3, #1
 8018ef8:	75fb      	strb	r3, [r7, #23]
 8018efa:	e00c      	b.n	8018f16 <USB_EPStopXfer+0x146>
 8018efc:	683b      	ldr	r3, [r7, #0]
 8018efe:	781b      	ldrb	r3, [r3, #0]
 8018f00:	015a      	lsls	r2, r3, #5
 8018f02:	693b      	ldr	r3, [r7, #16]
 8018f04:	4413      	add	r3, r2
 8018f06:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018f0a:	681b      	ldr	r3, [r3, #0]
 8018f0c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018f10:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018f14:	d0e7      	beq.n	8018ee6 <USB_EPStopXfer+0x116>
 8018f16:	7dfb      	ldrb	r3, [r7, #23]
 8018f18:	4618      	mov	r0, r3
 8018f1a:	371c      	adds	r7, #28
 8018f1c:	46bd      	mov	sp, r7
 8018f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f22:	4770      	bx	lr

08018f24 <USB_WritePacket>:
 8018f24:	b480      	push	{r7}
 8018f26:	b089      	sub	sp, #36	; 0x24
 8018f28:	af00      	add	r7, sp, #0
 8018f2a:	60f8      	str	r0, [r7, #12]
 8018f2c:	60b9      	str	r1, [r7, #8]
 8018f2e:	4611      	mov	r1, r2
 8018f30:	461a      	mov	r2, r3
 8018f32:	460b      	mov	r3, r1
 8018f34:	71fb      	strb	r3, [r7, #7]
 8018f36:	4613      	mov	r3, r2
 8018f38:	80bb      	strh	r3, [r7, #4]
 8018f3a:	68fb      	ldr	r3, [r7, #12]
 8018f3c:	617b      	str	r3, [r7, #20]
 8018f3e:	68bb      	ldr	r3, [r7, #8]
 8018f40:	61fb      	str	r3, [r7, #28]
 8018f42:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8018f46:	2b00      	cmp	r3, #0
 8018f48:	d123      	bne.n	8018f92 <USB_WritePacket+0x6e>
 8018f4a:	88bb      	ldrh	r3, [r7, #4]
 8018f4c:	3303      	adds	r3, #3
 8018f4e:	089b      	lsrs	r3, r3, #2
 8018f50:	613b      	str	r3, [r7, #16]
 8018f52:	2300      	movs	r3, #0
 8018f54:	61bb      	str	r3, [r7, #24]
 8018f56:	e018      	b.n	8018f8a <USB_WritePacket+0x66>
 8018f58:	79fb      	ldrb	r3, [r7, #7]
 8018f5a:	031a      	lsls	r2, r3, #12
 8018f5c:	697b      	ldr	r3, [r7, #20]
 8018f5e:	4413      	add	r3, r2
 8018f60:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8018f64:	461a      	mov	r2, r3
 8018f66:	69fb      	ldr	r3, [r7, #28]
 8018f68:	681b      	ldr	r3, [r3, #0]
 8018f6a:	6013      	str	r3, [r2, #0]
 8018f6c:	69fb      	ldr	r3, [r7, #28]
 8018f6e:	3301      	adds	r3, #1
 8018f70:	61fb      	str	r3, [r7, #28]
 8018f72:	69fb      	ldr	r3, [r7, #28]
 8018f74:	3301      	adds	r3, #1
 8018f76:	61fb      	str	r3, [r7, #28]
 8018f78:	69fb      	ldr	r3, [r7, #28]
 8018f7a:	3301      	adds	r3, #1
 8018f7c:	61fb      	str	r3, [r7, #28]
 8018f7e:	69fb      	ldr	r3, [r7, #28]
 8018f80:	3301      	adds	r3, #1
 8018f82:	61fb      	str	r3, [r7, #28]
 8018f84:	69bb      	ldr	r3, [r7, #24]
 8018f86:	3301      	adds	r3, #1
 8018f88:	61bb      	str	r3, [r7, #24]
 8018f8a:	69ba      	ldr	r2, [r7, #24]
 8018f8c:	693b      	ldr	r3, [r7, #16]
 8018f8e:	429a      	cmp	r2, r3
 8018f90:	d3e2      	bcc.n	8018f58 <USB_WritePacket+0x34>
 8018f92:	2300      	movs	r3, #0
 8018f94:	4618      	mov	r0, r3
 8018f96:	3724      	adds	r7, #36	; 0x24
 8018f98:	46bd      	mov	sp, r7
 8018f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f9e:	4770      	bx	lr

08018fa0 <USB_ReadPacket>:
 8018fa0:	b480      	push	{r7}
 8018fa2:	b08b      	sub	sp, #44	; 0x2c
 8018fa4:	af00      	add	r7, sp, #0
 8018fa6:	60f8      	str	r0, [r7, #12]
 8018fa8:	60b9      	str	r1, [r7, #8]
 8018faa:	4613      	mov	r3, r2
 8018fac:	80fb      	strh	r3, [r7, #6]
 8018fae:	68fb      	ldr	r3, [r7, #12]
 8018fb0:	61bb      	str	r3, [r7, #24]
 8018fb2:	68bb      	ldr	r3, [r7, #8]
 8018fb4:	627b      	str	r3, [r7, #36]	; 0x24
 8018fb6:	88fb      	ldrh	r3, [r7, #6]
 8018fb8:	089b      	lsrs	r3, r3, #2
 8018fba:	b29b      	uxth	r3, r3
 8018fbc:	617b      	str	r3, [r7, #20]
 8018fbe:	88fb      	ldrh	r3, [r7, #6]
 8018fc0:	f003 0303 	and.w	r3, r3, #3
 8018fc4:	83fb      	strh	r3, [r7, #30]
 8018fc6:	2300      	movs	r3, #0
 8018fc8:	623b      	str	r3, [r7, #32]
 8018fca:	e014      	b.n	8018ff6 <USB_ReadPacket+0x56>
 8018fcc:	69bb      	ldr	r3, [r7, #24]
 8018fce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8018fd2:	681a      	ldr	r2, [r3, #0]
 8018fd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018fd6:	601a      	str	r2, [r3, #0]
 8018fd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018fda:	3301      	adds	r3, #1
 8018fdc:	627b      	str	r3, [r7, #36]	; 0x24
 8018fde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018fe0:	3301      	adds	r3, #1
 8018fe2:	627b      	str	r3, [r7, #36]	; 0x24
 8018fe4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018fe6:	3301      	adds	r3, #1
 8018fe8:	627b      	str	r3, [r7, #36]	; 0x24
 8018fea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8018fec:	3301      	adds	r3, #1
 8018fee:	627b      	str	r3, [r7, #36]	; 0x24
 8018ff0:	6a3b      	ldr	r3, [r7, #32]
 8018ff2:	3301      	adds	r3, #1
 8018ff4:	623b      	str	r3, [r7, #32]
 8018ff6:	6a3a      	ldr	r2, [r7, #32]
 8018ff8:	697b      	ldr	r3, [r7, #20]
 8018ffa:	429a      	cmp	r2, r3
 8018ffc:	d3e6      	bcc.n	8018fcc <USB_ReadPacket+0x2c>
 8018ffe:	8bfb      	ldrh	r3, [r7, #30]
 8019000:	2b00      	cmp	r3, #0
 8019002:	d01e      	beq.n	8019042 <USB_ReadPacket+0xa2>
 8019004:	2300      	movs	r3, #0
 8019006:	623b      	str	r3, [r7, #32]
 8019008:	69bb      	ldr	r3, [r7, #24]
 801900a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801900e:	461a      	mov	r2, r3
 8019010:	f107 0310 	add.w	r3, r7, #16
 8019014:	6812      	ldr	r2, [r2, #0]
 8019016:	601a      	str	r2, [r3, #0]
 8019018:	693a      	ldr	r2, [r7, #16]
 801901a:	6a3b      	ldr	r3, [r7, #32]
 801901c:	b2db      	uxtb	r3, r3
 801901e:	00db      	lsls	r3, r3, #3
 8019020:	fa22 f303 	lsr.w	r3, r2, r3
 8019024:	b2da      	uxtb	r2, r3
 8019026:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019028:	701a      	strb	r2, [r3, #0]
 801902a:	6a3b      	ldr	r3, [r7, #32]
 801902c:	3301      	adds	r3, #1
 801902e:	623b      	str	r3, [r7, #32]
 8019030:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019032:	3301      	adds	r3, #1
 8019034:	627b      	str	r3, [r7, #36]	; 0x24
 8019036:	8bfb      	ldrh	r3, [r7, #30]
 8019038:	3b01      	subs	r3, #1
 801903a:	83fb      	strh	r3, [r7, #30]
 801903c:	8bfb      	ldrh	r3, [r7, #30]
 801903e:	2b00      	cmp	r3, #0
 8019040:	d1ea      	bne.n	8019018 <USB_ReadPacket+0x78>
 8019042:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019044:	4618      	mov	r0, r3
 8019046:	372c      	adds	r7, #44	; 0x2c
 8019048:	46bd      	mov	sp, r7
 801904a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801904e:	4770      	bx	lr

08019050 <USB_EPSetStall>:
 8019050:	b480      	push	{r7}
 8019052:	b085      	sub	sp, #20
 8019054:	af00      	add	r7, sp, #0
 8019056:	6078      	str	r0, [r7, #4]
 8019058:	6039      	str	r1, [r7, #0]
 801905a:	687b      	ldr	r3, [r7, #4]
 801905c:	60fb      	str	r3, [r7, #12]
 801905e:	683b      	ldr	r3, [r7, #0]
 8019060:	781b      	ldrb	r3, [r3, #0]
 8019062:	60bb      	str	r3, [r7, #8]
 8019064:	683b      	ldr	r3, [r7, #0]
 8019066:	785b      	ldrb	r3, [r3, #1]
 8019068:	2b01      	cmp	r3, #1
 801906a:	d12c      	bne.n	80190c6 <USB_EPSetStall+0x76>
 801906c:	68bb      	ldr	r3, [r7, #8]
 801906e:	015a      	lsls	r2, r3, #5
 8019070:	68fb      	ldr	r3, [r7, #12]
 8019072:	4413      	add	r3, r2
 8019074:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019078:	681b      	ldr	r3, [r3, #0]
 801907a:	2b00      	cmp	r3, #0
 801907c:	db12      	blt.n	80190a4 <USB_EPSetStall+0x54>
 801907e:	68bb      	ldr	r3, [r7, #8]
 8019080:	2b00      	cmp	r3, #0
 8019082:	d00f      	beq.n	80190a4 <USB_EPSetStall+0x54>
 8019084:	68bb      	ldr	r3, [r7, #8]
 8019086:	015a      	lsls	r2, r3, #5
 8019088:	68fb      	ldr	r3, [r7, #12]
 801908a:	4413      	add	r3, r2
 801908c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019090:	681b      	ldr	r3, [r3, #0]
 8019092:	68ba      	ldr	r2, [r7, #8]
 8019094:	0151      	lsls	r1, r2, #5
 8019096:	68fa      	ldr	r2, [r7, #12]
 8019098:	440a      	add	r2, r1
 801909a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801909e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80190a2:	6013      	str	r3, [r2, #0]
 80190a4:	68bb      	ldr	r3, [r7, #8]
 80190a6:	015a      	lsls	r2, r3, #5
 80190a8:	68fb      	ldr	r3, [r7, #12]
 80190aa:	4413      	add	r3, r2
 80190ac:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80190b0:	681b      	ldr	r3, [r3, #0]
 80190b2:	68ba      	ldr	r2, [r7, #8]
 80190b4:	0151      	lsls	r1, r2, #5
 80190b6:	68fa      	ldr	r2, [r7, #12]
 80190b8:	440a      	add	r2, r1
 80190ba:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80190be:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80190c2:	6013      	str	r3, [r2, #0]
 80190c4:	e02b      	b.n	801911e <USB_EPSetStall+0xce>
 80190c6:	68bb      	ldr	r3, [r7, #8]
 80190c8:	015a      	lsls	r2, r3, #5
 80190ca:	68fb      	ldr	r3, [r7, #12]
 80190cc:	4413      	add	r3, r2
 80190ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80190d2:	681b      	ldr	r3, [r3, #0]
 80190d4:	2b00      	cmp	r3, #0
 80190d6:	db12      	blt.n	80190fe <USB_EPSetStall+0xae>
 80190d8:	68bb      	ldr	r3, [r7, #8]
 80190da:	2b00      	cmp	r3, #0
 80190dc:	d00f      	beq.n	80190fe <USB_EPSetStall+0xae>
 80190de:	68bb      	ldr	r3, [r7, #8]
 80190e0:	015a      	lsls	r2, r3, #5
 80190e2:	68fb      	ldr	r3, [r7, #12]
 80190e4:	4413      	add	r3, r2
 80190e6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80190ea:	681b      	ldr	r3, [r3, #0]
 80190ec:	68ba      	ldr	r2, [r7, #8]
 80190ee:	0151      	lsls	r1, r2, #5
 80190f0:	68fa      	ldr	r2, [r7, #12]
 80190f2:	440a      	add	r2, r1
 80190f4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80190f8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80190fc:	6013      	str	r3, [r2, #0]
 80190fe:	68bb      	ldr	r3, [r7, #8]
 8019100:	015a      	lsls	r2, r3, #5
 8019102:	68fb      	ldr	r3, [r7, #12]
 8019104:	4413      	add	r3, r2
 8019106:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801910a:	681b      	ldr	r3, [r3, #0]
 801910c:	68ba      	ldr	r2, [r7, #8]
 801910e:	0151      	lsls	r1, r2, #5
 8019110:	68fa      	ldr	r2, [r7, #12]
 8019112:	440a      	add	r2, r1
 8019114:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019118:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 801911c:	6013      	str	r3, [r2, #0]
 801911e:	2300      	movs	r3, #0
 8019120:	4618      	mov	r0, r3
 8019122:	3714      	adds	r7, #20
 8019124:	46bd      	mov	sp, r7
 8019126:	f85d 7b04 	ldr.w	r7, [sp], #4
 801912a:	4770      	bx	lr

0801912c <USB_EPClearStall>:
 801912c:	b480      	push	{r7}
 801912e:	b085      	sub	sp, #20
 8019130:	af00      	add	r7, sp, #0
 8019132:	6078      	str	r0, [r7, #4]
 8019134:	6039      	str	r1, [r7, #0]
 8019136:	687b      	ldr	r3, [r7, #4]
 8019138:	60fb      	str	r3, [r7, #12]
 801913a:	683b      	ldr	r3, [r7, #0]
 801913c:	781b      	ldrb	r3, [r3, #0]
 801913e:	60bb      	str	r3, [r7, #8]
 8019140:	683b      	ldr	r3, [r7, #0]
 8019142:	785b      	ldrb	r3, [r3, #1]
 8019144:	2b01      	cmp	r3, #1
 8019146:	d128      	bne.n	801919a <USB_EPClearStall+0x6e>
 8019148:	68bb      	ldr	r3, [r7, #8]
 801914a:	015a      	lsls	r2, r3, #5
 801914c:	68fb      	ldr	r3, [r7, #12]
 801914e:	4413      	add	r3, r2
 8019150:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019154:	681b      	ldr	r3, [r3, #0]
 8019156:	68ba      	ldr	r2, [r7, #8]
 8019158:	0151      	lsls	r1, r2, #5
 801915a:	68fa      	ldr	r2, [r7, #12]
 801915c:	440a      	add	r2, r1
 801915e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8019162:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8019166:	6013      	str	r3, [r2, #0]
 8019168:	683b      	ldr	r3, [r7, #0]
 801916a:	791b      	ldrb	r3, [r3, #4]
 801916c:	2b03      	cmp	r3, #3
 801916e:	d003      	beq.n	8019178 <USB_EPClearStall+0x4c>
 8019170:	683b      	ldr	r3, [r7, #0]
 8019172:	791b      	ldrb	r3, [r3, #4]
 8019174:	2b02      	cmp	r3, #2
 8019176:	d138      	bne.n	80191ea <USB_EPClearStall+0xbe>
 8019178:	68bb      	ldr	r3, [r7, #8]
 801917a:	015a      	lsls	r2, r3, #5
 801917c:	68fb      	ldr	r3, [r7, #12]
 801917e:	4413      	add	r3, r2
 8019180:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019184:	681b      	ldr	r3, [r3, #0]
 8019186:	68ba      	ldr	r2, [r7, #8]
 8019188:	0151      	lsls	r1, r2, #5
 801918a:	68fa      	ldr	r2, [r7, #12]
 801918c:	440a      	add	r2, r1
 801918e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8019192:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8019196:	6013      	str	r3, [r2, #0]
 8019198:	e027      	b.n	80191ea <USB_EPClearStall+0xbe>
 801919a:	68bb      	ldr	r3, [r7, #8]
 801919c:	015a      	lsls	r2, r3, #5
 801919e:	68fb      	ldr	r3, [r7, #12]
 80191a0:	4413      	add	r3, r2
 80191a2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80191a6:	681b      	ldr	r3, [r3, #0]
 80191a8:	68ba      	ldr	r2, [r7, #8]
 80191aa:	0151      	lsls	r1, r2, #5
 80191ac:	68fa      	ldr	r2, [r7, #12]
 80191ae:	440a      	add	r2, r1
 80191b0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80191b4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80191b8:	6013      	str	r3, [r2, #0]
 80191ba:	683b      	ldr	r3, [r7, #0]
 80191bc:	791b      	ldrb	r3, [r3, #4]
 80191be:	2b03      	cmp	r3, #3
 80191c0:	d003      	beq.n	80191ca <USB_EPClearStall+0x9e>
 80191c2:	683b      	ldr	r3, [r7, #0]
 80191c4:	791b      	ldrb	r3, [r3, #4]
 80191c6:	2b02      	cmp	r3, #2
 80191c8:	d10f      	bne.n	80191ea <USB_EPClearStall+0xbe>
 80191ca:	68bb      	ldr	r3, [r7, #8]
 80191cc:	015a      	lsls	r2, r3, #5
 80191ce:	68fb      	ldr	r3, [r7, #12]
 80191d0:	4413      	add	r3, r2
 80191d2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80191d6:	681b      	ldr	r3, [r3, #0]
 80191d8:	68ba      	ldr	r2, [r7, #8]
 80191da:	0151      	lsls	r1, r2, #5
 80191dc:	68fa      	ldr	r2, [r7, #12]
 80191de:	440a      	add	r2, r1
 80191e0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80191e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80191e8:	6013      	str	r3, [r2, #0]
 80191ea:	2300      	movs	r3, #0
 80191ec:	4618      	mov	r0, r3
 80191ee:	3714      	adds	r7, #20
 80191f0:	46bd      	mov	sp, r7
 80191f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80191f6:	4770      	bx	lr

080191f8 <USB_SetDevAddress>:
 80191f8:	b480      	push	{r7}
 80191fa:	b085      	sub	sp, #20
 80191fc:	af00      	add	r7, sp, #0
 80191fe:	6078      	str	r0, [r7, #4]
 8019200:	460b      	mov	r3, r1
 8019202:	70fb      	strb	r3, [r7, #3]
 8019204:	687b      	ldr	r3, [r7, #4]
 8019206:	60fb      	str	r3, [r7, #12]
 8019208:	68fb      	ldr	r3, [r7, #12]
 801920a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801920e:	681b      	ldr	r3, [r3, #0]
 8019210:	68fa      	ldr	r2, [r7, #12]
 8019212:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8019216:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 801921a:	6013      	str	r3, [r2, #0]
 801921c:	68fb      	ldr	r3, [r7, #12]
 801921e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019222:	681a      	ldr	r2, [r3, #0]
 8019224:	78fb      	ldrb	r3, [r7, #3]
 8019226:	011b      	lsls	r3, r3, #4
 8019228:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 801922c:	68f9      	ldr	r1, [r7, #12]
 801922e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8019232:	4313      	orrs	r3, r2
 8019234:	600b      	str	r3, [r1, #0]
 8019236:	2300      	movs	r3, #0
 8019238:	4618      	mov	r0, r3
 801923a:	3714      	adds	r7, #20
 801923c:	46bd      	mov	sp, r7
 801923e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019242:	4770      	bx	lr

08019244 <USB_DevConnect>:
 8019244:	b480      	push	{r7}
 8019246:	b085      	sub	sp, #20
 8019248:	af00      	add	r7, sp, #0
 801924a:	6078      	str	r0, [r7, #4]
 801924c:	687b      	ldr	r3, [r7, #4]
 801924e:	60fb      	str	r3, [r7, #12]
 8019250:	68fb      	ldr	r3, [r7, #12]
 8019252:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8019256:	681b      	ldr	r3, [r3, #0]
 8019258:	68fa      	ldr	r2, [r7, #12]
 801925a:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 801925e:	f023 0303 	bic.w	r3, r3, #3
 8019262:	6013      	str	r3, [r2, #0]
 8019264:	68fb      	ldr	r3, [r7, #12]
 8019266:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801926a:	685b      	ldr	r3, [r3, #4]
 801926c:	68fa      	ldr	r2, [r7, #12]
 801926e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8019272:	f023 0302 	bic.w	r3, r3, #2
 8019276:	6053      	str	r3, [r2, #4]
 8019278:	2300      	movs	r3, #0
 801927a:	4618      	mov	r0, r3
 801927c:	3714      	adds	r7, #20
 801927e:	46bd      	mov	sp, r7
 8019280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019284:	4770      	bx	lr

08019286 <USB_DevDisconnect>:
 8019286:	b480      	push	{r7}
 8019288:	b085      	sub	sp, #20
 801928a:	af00      	add	r7, sp, #0
 801928c:	6078      	str	r0, [r7, #4]
 801928e:	687b      	ldr	r3, [r7, #4]
 8019290:	60fb      	str	r3, [r7, #12]
 8019292:	68fb      	ldr	r3, [r7, #12]
 8019294:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8019298:	681b      	ldr	r3, [r3, #0]
 801929a:	68fa      	ldr	r2, [r7, #12]
 801929c:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 80192a0:	f023 0303 	bic.w	r3, r3, #3
 80192a4:	6013      	str	r3, [r2, #0]
 80192a6:	68fb      	ldr	r3, [r7, #12]
 80192a8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80192ac:	685b      	ldr	r3, [r3, #4]
 80192ae:	68fa      	ldr	r2, [r7, #12]
 80192b0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80192b4:	f043 0302 	orr.w	r3, r3, #2
 80192b8:	6053      	str	r3, [r2, #4]
 80192ba:	2300      	movs	r3, #0
 80192bc:	4618      	mov	r0, r3
 80192be:	3714      	adds	r7, #20
 80192c0:	46bd      	mov	sp, r7
 80192c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80192c6:	4770      	bx	lr

080192c8 <USB_ReadInterrupts>:
 80192c8:	b480      	push	{r7}
 80192ca:	b085      	sub	sp, #20
 80192cc:	af00      	add	r7, sp, #0
 80192ce:	6078      	str	r0, [r7, #4]
 80192d0:	687b      	ldr	r3, [r7, #4]
 80192d2:	695b      	ldr	r3, [r3, #20]
 80192d4:	60fb      	str	r3, [r7, #12]
 80192d6:	687b      	ldr	r3, [r7, #4]
 80192d8:	699b      	ldr	r3, [r3, #24]
 80192da:	68fa      	ldr	r2, [r7, #12]
 80192dc:	4013      	ands	r3, r2
 80192de:	60fb      	str	r3, [r7, #12]
 80192e0:	68fb      	ldr	r3, [r7, #12]
 80192e2:	4618      	mov	r0, r3
 80192e4:	3714      	adds	r7, #20
 80192e6:	46bd      	mov	sp, r7
 80192e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80192ec:	4770      	bx	lr

080192ee <USB_ReadDevAllOutEpInterrupt>:
 80192ee:	b480      	push	{r7}
 80192f0:	b085      	sub	sp, #20
 80192f2:	af00      	add	r7, sp, #0
 80192f4:	6078      	str	r0, [r7, #4]
 80192f6:	687b      	ldr	r3, [r7, #4]
 80192f8:	60fb      	str	r3, [r7, #12]
 80192fa:	68fb      	ldr	r3, [r7, #12]
 80192fc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019300:	699b      	ldr	r3, [r3, #24]
 8019302:	60bb      	str	r3, [r7, #8]
 8019304:	68fb      	ldr	r3, [r7, #12]
 8019306:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801930a:	69db      	ldr	r3, [r3, #28]
 801930c:	68ba      	ldr	r2, [r7, #8]
 801930e:	4013      	ands	r3, r2
 8019310:	60bb      	str	r3, [r7, #8]
 8019312:	68bb      	ldr	r3, [r7, #8]
 8019314:	0c1b      	lsrs	r3, r3, #16
 8019316:	4618      	mov	r0, r3
 8019318:	3714      	adds	r7, #20
 801931a:	46bd      	mov	sp, r7
 801931c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019320:	4770      	bx	lr

08019322 <USB_ReadDevAllInEpInterrupt>:
 8019322:	b480      	push	{r7}
 8019324:	b085      	sub	sp, #20
 8019326:	af00      	add	r7, sp, #0
 8019328:	6078      	str	r0, [r7, #4]
 801932a:	687b      	ldr	r3, [r7, #4]
 801932c:	60fb      	str	r3, [r7, #12]
 801932e:	68fb      	ldr	r3, [r7, #12]
 8019330:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019334:	699b      	ldr	r3, [r3, #24]
 8019336:	60bb      	str	r3, [r7, #8]
 8019338:	68fb      	ldr	r3, [r7, #12]
 801933a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801933e:	69db      	ldr	r3, [r3, #28]
 8019340:	68ba      	ldr	r2, [r7, #8]
 8019342:	4013      	ands	r3, r2
 8019344:	60bb      	str	r3, [r7, #8]
 8019346:	68bb      	ldr	r3, [r7, #8]
 8019348:	b29b      	uxth	r3, r3
 801934a:	4618      	mov	r0, r3
 801934c:	3714      	adds	r7, #20
 801934e:	46bd      	mov	sp, r7
 8019350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019354:	4770      	bx	lr

08019356 <USB_ReadDevOutEPInterrupt>:
 8019356:	b480      	push	{r7}
 8019358:	b085      	sub	sp, #20
 801935a:	af00      	add	r7, sp, #0
 801935c:	6078      	str	r0, [r7, #4]
 801935e:	460b      	mov	r3, r1
 8019360:	70fb      	strb	r3, [r7, #3]
 8019362:	687b      	ldr	r3, [r7, #4]
 8019364:	60fb      	str	r3, [r7, #12]
 8019366:	78fb      	ldrb	r3, [r7, #3]
 8019368:	015a      	lsls	r2, r3, #5
 801936a:	68fb      	ldr	r3, [r7, #12]
 801936c:	4413      	add	r3, r2
 801936e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019372:	689b      	ldr	r3, [r3, #8]
 8019374:	60bb      	str	r3, [r7, #8]
 8019376:	68fb      	ldr	r3, [r7, #12]
 8019378:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801937c:	695b      	ldr	r3, [r3, #20]
 801937e:	68ba      	ldr	r2, [r7, #8]
 8019380:	4013      	ands	r3, r2
 8019382:	60bb      	str	r3, [r7, #8]
 8019384:	68bb      	ldr	r3, [r7, #8]
 8019386:	4618      	mov	r0, r3
 8019388:	3714      	adds	r7, #20
 801938a:	46bd      	mov	sp, r7
 801938c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019390:	4770      	bx	lr

08019392 <USB_ReadDevInEPInterrupt>:
 8019392:	b480      	push	{r7}
 8019394:	b087      	sub	sp, #28
 8019396:	af00      	add	r7, sp, #0
 8019398:	6078      	str	r0, [r7, #4]
 801939a:	460b      	mov	r3, r1
 801939c:	70fb      	strb	r3, [r7, #3]
 801939e:	687b      	ldr	r3, [r7, #4]
 80193a0:	617b      	str	r3, [r7, #20]
 80193a2:	697b      	ldr	r3, [r7, #20]
 80193a4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80193a8:	691b      	ldr	r3, [r3, #16]
 80193aa:	613b      	str	r3, [r7, #16]
 80193ac:	697b      	ldr	r3, [r7, #20]
 80193ae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80193b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80193b4:	60fb      	str	r3, [r7, #12]
 80193b6:	78fb      	ldrb	r3, [r7, #3]
 80193b8:	f003 030f 	and.w	r3, r3, #15
 80193bc:	68fa      	ldr	r2, [r7, #12]
 80193be:	fa22 f303 	lsr.w	r3, r2, r3
 80193c2:	01db      	lsls	r3, r3, #7
 80193c4:	b2db      	uxtb	r3, r3
 80193c6:	693a      	ldr	r2, [r7, #16]
 80193c8:	4313      	orrs	r3, r2
 80193ca:	613b      	str	r3, [r7, #16]
 80193cc:	78fb      	ldrb	r3, [r7, #3]
 80193ce:	015a      	lsls	r2, r3, #5
 80193d0:	697b      	ldr	r3, [r7, #20]
 80193d2:	4413      	add	r3, r2
 80193d4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80193d8:	689b      	ldr	r3, [r3, #8]
 80193da:	693a      	ldr	r2, [r7, #16]
 80193dc:	4013      	ands	r3, r2
 80193de:	60bb      	str	r3, [r7, #8]
 80193e0:	68bb      	ldr	r3, [r7, #8]
 80193e2:	4618      	mov	r0, r3
 80193e4:	371c      	adds	r7, #28
 80193e6:	46bd      	mov	sp, r7
 80193e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80193ec:	4770      	bx	lr

080193ee <USB_GetMode>:
 80193ee:	b480      	push	{r7}
 80193f0:	b083      	sub	sp, #12
 80193f2:	af00      	add	r7, sp, #0
 80193f4:	6078      	str	r0, [r7, #4]
 80193f6:	687b      	ldr	r3, [r7, #4]
 80193f8:	695b      	ldr	r3, [r3, #20]
 80193fa:	f003 0301 	and.w	r3, r3, #1
 80193fe:	4618      	mov	r0, r3
 8019400:	370c      	adds	r7, #12
 8019402:	46bd      	mov	sp, r7
 8019404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019408:	4770      	bx	lr

0801940a <USB_ActivateSetup>:
 801940a:	b480      	push	{r7}
 801940c:	b085      	sub	sp, #20
 801940e:	af00      	add	r7, sp, #0
 8019410:	6078      	str	r0, [r7, #4]
 8019412:	687b      	ldr	r3, [r7, #4]
 8019414:	60fb      	str	r3, [r7, #12]
 8019416:	68fb      	ldr	r3, [r7, #12]
 8019418:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801941c:	681b      	ldr	r3, [r3, #0]
 801941e:	68fa      	ldr	r2, [r7, #12]
 8019420:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8019424:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019428:	f023 0307 	bic.w	r3, r3, #7
 801942c:	6013      	str	r3, [r2, #0]
 801942e:	68fb      	ldr	r3, [r7, #12]
 8019430:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019434:	685b      	ldr	r3, [r3, #4]
 8019436:	68fa      	ldr	r2, [r7, #12]
 8019438:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801943c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8019440:	6053      	str	r3, [r2, #4]
 8019442:	2300      	movs	r3, #0
 8019444:	4618      	mov	r0, r3
 8019446:	3714      	adds	r7, #20
 8019448:	46bd      	mov	sp, r7
 801944a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801944e:	4770      	bx	lr

08019450 <USB_EP0_OutStart>:
 8019450:	b480      	push	{r7}
 8019452:	b087      	sub	sp, #28
 8019454:	af00      	add	r7, sp, #0
 8019456:	60f8      	str	r0, [r7, #12]
 8019458:	460b      	mov	r3, r1
 801945a:	607a      	str	r2, [r7, #4]
 801945c:	72fb      	strb	r3, [r7, #11]
 801945e:	68fb      	ldr	r3, [r7, #12]
 8019460:	617b      	str	r3, [r7, #20]
 8019462:	68fb      	ldr	r3, [r7, #12]
 8019464:	333c      	adds	r3, #60	; 0x3c
 8019466:	3304      	adds	r3, #4
 8019468:	681b      	ldr	r3, [r3, #0]
 801946a:	613b      	str	r3, [r7, #16]
 801946c:	693b      	ldr	r3, [r7, #16]
 801946e:	4a26      	ldr	r2, [pc, #152]	; (8019508 <USB_EP0_OutStart+0xb8>)
 8019470:	4293      	cmp	r3, r2
 8019472:	d90a      	bls.n	801948a <USB_EP0_OutStart+0x3a>
 8019474:	697b      	ldr	r3, [r7, #20]
 8019476:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801947a:	681b      	ldr	r3, [r3, #0]
 801947c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8019480:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8019484:	d101      	bne.n	801948a <USB_EP0_OutStart+0x3a>
 8019486:	2300      	movs	r3, #0
 8019488:	e037      	b.n	80194fa <USB_EP0_OutStart+0xaa>
 801948a:	697b      	ldr	r3, [r7, #20]
 801948c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019490:	461a      	mov	r2, r3
 8019492:	2300      	movs	r3, #0
 8019494:	6113      	str	r3, [r2, #16]
 8019496:	697b      	ldr	r3, [r7, #20]
 8019498:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801949c:	691b      	ldr	r3, [r3, #16]
 801949e:	697a      	ldr	r2, [r7, #20]
 80194a0:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80194a4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80194a8:	6113      	str	r3, [r2, #16]
 80194aa:	697b      	ldr	r3, [r7, #20]
 80194ac:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80194b0:	691b      	ldr	r3, [r3, #16]
 80194b2:	697a      	ldr	r2, [r7, #20]
 80194b4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80194b8:	f043 0318 	orr.w	r3, r3, #24
 80194bc:	6113      	str	r3, [r2, #16]
 80194be:	697b      	ldr	r3, [r7, #20]
 80194c0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80194c4:	691b      	ldr	r3, [r3, #16]
 80194c6:	697a      	ldr	r2, [r7, #20]
 80194c8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80194cc:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 80194d0:	6113      	str	r3, [r2, #16]
 80194d2:	7afb      	ldrb	r3, [r7, #11]
 80194d4:	2b01      	cmp	r3, #1
 80194d6:	d10f      	bne.n	80194f8 <USB_EP0_OutStart+0xa8>
 80194d8:	697b      	ldr	r3, [r7, #20]
 80194da:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80194de:	461a      	mov	r2, r3
 80194e0:	687b      	ldr	r3, [r7, #4]
 80194e2:	6153      	str	r3, [r2, #20]
 80194e4:	697b      	ldr	r3, [r7, #20]
 80194e6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80194ea:	681b      	ldr	r3, [r3, #0]
 80194ec:	697a      	ldr	r2, [r7, #20]
 80194ee:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80194f2:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 80194f6:	6013      	str	r3, [r2, #0]
 80194f8:	2300      	movs	r3, #0
 80194fa:	4618      	mov	r0, r3
 80194fc:	371c      	adds	r7, #28
 80194fe:	46bd      	mov	sp, r7
 8019500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019504:	4770      	bx	lr
 8019506:	bf00      	nop
 8019508:	4f54300a 	.word	0x4f54300a

0801950c <USB_CoreReset>:
 801950c:	b480      	push	{r7}
 801950e:	b085      	sub	sp, #20
 8019510:	af00      	add	r7, sp, #0
 8019512:	6078      	str	r0, [r7, #4]
 8019514:	2300      	movs	r3, #0
 8019516:	60fb      	str	r3, [r7, #12]
 8019518:	68fb      	ldr	r3, [r7, #12]
 801951a:	3301      	adds	r3, #1
 801951c:	60fb      	str	r3, [r7, #12]
 801951e:	68fb      	ldr	r3, [r7, #12]
 8019520:	4a13      	ldr	r2, [pc, #76]	; (8019570 <USB_CoreReset+0x64>)
 8019522:	4293      	cmp	r3, r2
 8019524:	d901      	bls.n	801952a <USB_CoreReset+0x1e>
 8019526:	2303      	movs	r3, #3
 8019528:	e01b      	b.n	8019562 <USB_CoreReset+0x56>
 801952a:	687b      	ldr	r3, [r7, #4]
 801952c:	691b      	ldr	r3, [r3, #16]
 801952e:	2b00      	cmp	r3, #0
 8019530:	daf2      	bge.n	8019518 <USB_CoreReset+0xc>
 8019532:	2300      	movs	r3, #0
 8019534:	60fb      	str	r3, [r7, #12]
 8019536:	687b      	ldr	r3, [r7, #4]
 8019538:	691b      	ldr	r3, [r3, #16]
 801953a:	f043 0201 	orr.w	r2, r3, #1
 801953e:	687b      	ldr	r3, [r7, #4]
 8019540:	611a      	str	r2, [r3, #16]
 8019542:	68fb      	ldr	r3, [r7, #12]
 8019544:	3301      	adds	r3, #1
 8019546:	60fb      	str	r3, [r7, #12]
 8019548:	68fb      	ldr	r3, [r7, #12]
 801954a:	4a09      	ldr	r2, [pc, #36]	; (8019570 <USB_CoreReset+0x64>)
 801954c:	4293      	cmp	r3, r2
 801954e:	d901      	bls.n	8019554 <USB_CoreReset+0x48>
 8019550:	2303      	movs	r3, #3
 8019552:	e006      	b.n	8019562 <USB_CoreReset+0x56>
 8019554:	687b      	ldr	r3, [r7, #4]
 8019556:	691b      	ldr	r3, [r3, #16]
 8019558:	f003 0301 	and.w	r3, r3, #1
 801955c:	2b01      	cmp	r3, #1
 801955e:	d0f0      	beq.n	8019542 <USB_CoreReset+0x36>
 8019560:	2300      	movs	r3, #0
 8019562:	4618      	mov	r0, r3
 8019564:	3714      	adds	r7, #20
 8019566:	46bd      	mov	sp, r7
 8019568:	f85d 7b04 	ldr.w	r7, [sp], #4
 801956c:	4770      	bx	lr
 801956e:	bf00      	nop
 8019570:	00030d40 	.word	0x00030d40

08019574 <USBD_CDC_Init>:
 8019574:	b580      	push	{r7, lr}
 8019576:	b084      	sub	sp, #16
 8019578:	af00      	add	r7, sp, #0
 801957a:	6078      	str	r0, [r7, #4]
 801957c:	460b      	mov	r3, r1
 801957e:	70fb      	strb	r3, [r7, #3]
 8019580:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8019584:	f005 fe86 	bl	801f294 <USBD_static_malloc>
 8019588:	60f8      	str	r0, [r7, #12]
 801958a:	68fb      	ldr	r3, [r7, #12]
 801958c:	2b00      	cmp	r3, #0
 801958e:	d109      	bne.n	80195a4 <USBD_CDC_Init+0x30>
 8019590:	687b      	ldr	r3, [r7, #4]
 8019592:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019596:	687b      	ldr	r3, [r7, #4]
 8019598:	32b0      	adds	r2, #176	; 0xb0
 801959a:	2100      	movs	r1, #0
 801959c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80195a0:	2302      	movs	r3, #2
 80195a2:	e0d4      	b.n	801974e <USBD_CDC_Init+0x1da>
 80195a4:	f44f 7207 	mov.w	r2, #540	; 0x21c
 80195a8:	2100      	movs	r1, #0
 80195aa:	68f8      	ldr	r0, [r7, #12]
 80195ac:	f005 ffe1 	bl	801f572 <memset>
 80195b0:	687b      	ldr	r3, [r7, #4]
 80195b2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80195b6:	687b      	ldr	r3, [r7, #4]
 80195b8:	32b0      	adds	r2, #176	; 0xb0
 80195ba:	68f9      	ldr	r1, [r7, #12]
 80195bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80195c0:	687b      	ldr	r3, [r7, #4]
 80195c2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80195c6:	687b      	ldr	r3, [r7, #4]
 80195c8:	32b0      	adds	r2, #176	; 0xb0
 80195ca:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80195ce:	687b      	ldr	r3, [r7, #4]
 80195d0:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 80195d4:	687b      	ldr	r3, [r7, #4]
 80195d6:	7c1b      	ldrb	r3, [r3, #16]
 80195d8:	2b00      	cmp	r3, #0
 80195da:	d138      	bne.n	801964e <USBD_CDC_Init+0xda>
 80195dc:	4b5e      	ldr	r3, [pc, #376]	; (8019758 <USBD_CDC_Init+0x1e4>)
 80195de:	7819      	ldrb	r1, [r3, #0]
 80195e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80195e4:	2202      	movs	r2, #2
 80195e6:	6878      	ldr	r0, [r7, #4]
 80195e8:	f005 fd31 	bl	801f04e <USBD_LL_OpenEP>
 80195ec:	4b5a      	ldr	r3, [pc, #360]	; (8019758 <USBD_CDC_Init+0x1e4>)
 80195ee:	781b      	ldrb	r3, [r3, #0]
 80195f0:	f003 020f 	and.w	r2, r3, #15
 80195f4:	6879      	ldr	r1, [r7, #4]
 80195f6:	4613      	mov	r3, r2
 80195f8:	009b      	lsls	r3, r3, #2
 80195fa:	4413      	add	r3, r2
 80195fc:	009b      	lsls	r3, r3, #2
 80195fe:	440b      	add	r3, r1
 8019600:	3324      	adds	r3, #36	; 0x24
 8019602:	2201      	movs	r2, #1
 8019604:	801a      	strh	r2, [r3, #0]
 8019606:	4b55      	ldr	r3, [pc, #340]	; (801975c <USBD_CDC_Init+0x1e8>)
 8019608:	7819      	ldrb	r1, [r3, #0]
 801960a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801960e:	2202      	movs	r2, #2
 8019610:	6878      	ldr	r0, [r7, #4]
 8019612:	f005 fd1c 	bl	801f04e <USBD_LL_OpenEP>
 8019616:	4b51      	ldr	r3, [pc, #324]	; (801975c <USBD_CDC_Init+0x1e8>)
 8019618:	781b      	ldrb	r3, [r3, #0]
 801961a:	f003 020f 	and.w	r2, r3, #15
 801961e:	6879      	ldr	r1, [r7, #4]
 8019620:	4613      	mov	r3, r2
 8019622:	009b      	lsls	r3, r3, #2
 8019624:	4413      	add	r3, r2
 8019626:	009b      	lsls	r3, r3, #2
 8019628:	440b      	add	r3, r1
 801962a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 801962e:	2201      	movs	r2, #1
 8019630:	801a      	strh	r2, [r3, #0]
 8019632:	4b4b      	ldr	r3, [pc, #300]	; (8019760 <USBD_CDC_Init+0x1ec>)
 8019634:	781b      	ldrb	r3, [r3, #0]
 8019636:	f003 020f 	and.w	r2, r3, #15
 801963a:	6879      	ldr	r1, [r7, #4]
 801963c:	4613      	mov	r3, r2
 801963e:	009b      	lsls	r3, r3, #2
 8019640:	4413      	add	r3, r2
 8019642:	009b      	lsls	r3, r3, #2
 8019644:	440b      	add	r3, r1
 8019646:	3326      	adds	r3, #38	; 0x26
 8019648:	2210      	movs	r2, #16
 801964a:	801a      	strh	r2, [r3, #0]
 801964c:	e035      	b.n	80196ba <USBD_CDC_Init+0x146>
 801964e:	4b42      	ldr	r3, [pc, #264]	; (8019758 <USBD_CDC_Init+0x1e4>)
 8019650:	7819      	ldrb	r1, [r3, #0]
 8019652:	2340      	movs	r3, #64	; 0x40
 8019654:	2202      	movs	r2, #2
 8019656:	6878      	ldr	r0, [r7, #4]
 8019658:	f005 fcf9 	bl	801f04e <USBD_LL_OpenEP>
 801965c:	4b3e      	ldr	r3, [pc, #248]	; (8019758 <USBD_CDC_Init+0x1e4>)
 801965e:	781b      	ldrb	r3, [r3, #0]
 8019660:	f003 020f 	and.w	r2, r3, #15
 8019664:	6879      	ldr	r1, [r7, #4]
 8019666:	4613      	mov	r3, r2
 8019668:	009b      	lsls	r3, r3, #2
 801966a:	4413      	add	r3, r2
 801966c:	009b      	lsls	r3, r3, #2
 801966e:	440b      	add	r3, r1
 8019670:	3324      	adds	r3, #36	; 0x24
 8019672:	2201      	movs	r2, #1
 8019674:	801a      	strh	r2, [r3, #0]
 8019676:	4b39      	ldr	r3, [pc, #228]	; (801975c <USBD_CDC_Init+0x1e8>)
 8019678:	7819      	ldrb	r1, [r3, #0]
 801967a:	2340      	movs	r3, #64	; 0x40
 801967c:	2202      	movs	r2, #2
 801967e:	6878      	ldr	r0, [r7, #4]
 8019680:	f005 fce5 	bl	801f04e <USBD_LL_OpenEP>
 8019684:	4b35      	ldr	r3, [pc, #212]	; (801975c <USBD_CDC_Init+0x1e8>)
 8019686:	781b      	ldrb	r3, [r3, #0]
 8019688:	f003 020f 	and.w	r2, r3, #15
 801968c:	6879      	ldr	r1, [r7, #4]
 801968e:	4613      	mov	r3, r2
 8019690:	009b      	lsls	r3, r3, #2
 8019692:	4413      	add	r3, r2
 8019694:	009b      	lsls	r3, r3, #2
 8019696:	440b      	add	r3, r1
 8019698:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 801969c:	2201      	movs	r2, #1
 801969e:	801a      	strh	r2, [r3, #0]
 80196a0:	4b2f      	ldr	r3, [pc, #188]	; (8019760 <USBD_CDC_Init+0x1ec>)
 80196a2:	781b      	ldrb	r3, [r3, #0]
 80196a4:	f003 020f 	and.w	r2, r3, #15
 80196a8:	6879      	ldr	r1, [r7, #4]
 80196aa:	4613      	mov	r3, r2
 80196ac:	009b      	lsls	r3, r3, #2
 80196ae:	4413      	add	r3, r2
 80196b0:	009b      	lsls	r3, r3, #2
 80196b2:	440b      	add	r3, r1
 80196b4:	3326      	adds	r3, #38	; 0x26
 80196b6:	2210      	movs	r2, #16
 80196b8:	801a      	strh	r2, [r3, #0]
 80196ba:	4b29      	ldr	r3, [pc, #164]	; (8019760 <USBD_CDC_Init+0x1ec>)
 80196bc:	7819      	ldrb	r1, [r3, #0]
 80196be:	2308      	movs	r3, #8
 80196c0:	2203      	movs	r2, #3
 80196c2:	6878      	ldr	r0, [r7, #4]
 80196c4:	f005 fcc3 	bl	801f04e <USBD_LL_OpenEP>
 80196c8:	4b25      	ldr	r3, [pc, #148]	; (8019760 <USBD_CDC_Init+0x1ec>)
 80196ca:	781b      	ldrb	r3, [r3, #0]
 80196cc:	f003 020f 	and.w	r2, r3, #15
 80196d0:	6879      	ldr	r1, [r7, #4]
 80196d2:	4613      	mov	r3, r2
 80196d4:	009b      	lsls	r3, r3, #2
 80196d6:	4413      	add	r3, r2
 80196d8:	009b      	lsls	r3, r3, #2
 80196da:	440b      	add	r3, r1
 80196dc:	3324      	adds	r3, #36	; 0x24
 80196de:	2201      	movs	r2, #1
 80196e0:	801a      	strh	r2, [r3, #0]
 80196e2:	68fb      	ldr	r3, [r7, #12]
 80196e4:	2200      	movs	r2, #0
 80196e6:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80196ea:	687b      	ldr	r3, [r7, #4]
 80196ec:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 80196f0:	687a      	ldr	r2, [r7, #4]
 80196f2:	33b0      	adds	r3, #176	; 0xb0
 80196f4:	009b      	lsls	r3, r3, #2
 80196f6:	4413      	add	r3, r2
 80196f8:	685b      	ldr	r3, [r3, #4]
 80196fa:	681b      	ldr	r3, [r3, #0]
 80196fc:	4798      	blx	r3
 80196fe:	68fb      	ldr	r3, [r7, #12]
 8019700:	2200      	movs	r2, #0
 8019702:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8019706:	68fb      	ldr	r3, [r7, #12]
 8019708:	2200      	movs	r2, #0
 801970a:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 801970e:	68fb      	ldr	r3, [r7, #12]
 8019710:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8019714:	2b00      	cmp	r3, #0
 8019716:	d101      	bne.n	801971c <USBD_CDC_Init+0x1a8>
 8019718:	2302      	movs	r3, #2
 801971a:	e018      	b.n	801974e <USBD_CDC_Init+0x1da>
 801971c:	687b      	ldr	r3, [r7, #4]
 801971e:	7c1b      	ldrb	r3, [r3, #16]
 8019720:	2b00      	cmp	r3, #0
 8019722:	d10a      	bne.n	801973a <USBD_CDC_Init+0x1c6>
 8019724:	4b0d      	ldr	r3, [pc, #52]	; (801975c <USBD_CDC_Init+0x1e8>)
 8019726:	7819      	ldrb	r1, [r3, #0]
 8019728:	68fb      	ldr	r3, [r7, #12]
 801972a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 801972e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8019732:	6878      	ldr	r0, [r7, #4]
 8019734:	f005 fd7a 	bl	801f22c <USBD_LL_PrepareReceive>
 8019738:	e008      	b.n	801974c <USBD_CDC_Init+0x1d8>
 801973a:	4b08      	ldr	r3, [pc, #32]	; (801975c <USBD_CDC_Init+0x1e8>)
 801973c:	7819      	ldrb	r1, [r3, #0]
 801973e:	68fb      	ldr	r3, [r7, #12]
 8019740:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019744:	2340      	movs	r3, #64	; 0x40
 8019746:	6878      	ldr	r0, [r7, #4]
 8019748:	f005 fd70 	bl	801f22c <USBD_LL_PrepareReceive>
 801974c:	2300      	movs	r3, #0
 801974e:	4618      	mov	r0, r3
 8019750:	3710      	adds	r7, #16
 8019752:	46bd      	mov	sp, r7
 8019754:	bd80      	pop	{r7, pc}
 8019756:	bf00      	nop
 8019758:	200000e3 	.word	0x200000e3
 801975c:	200000e4 	.word	0x200000e4
 8019760:	200000e5 	.word	0x200000e5

08019764 <USBD_CDC_DeInit>:
 8019764:	b580      	push	{r7, lr}
 8019766:	b082      	sub	sp, #8
 8019768:	af00      	add	r7, sp, #0
 801976a:	6078      	str	r0, [r7, #4]
 801976c:	460b      	mov	r3, r1
 801976e:	70fb      	strb	r3, [r7, #3]
 8019770:	4b3a      	ldr	r3, [pc, #232]	; (801985c <USBD_CDC_DeInit+0xf8>)
 8019772:	781b      	ldrb	r3, [r3, #0]
 8019774:	4619      	mov	r1, r3
 8019776:	6878      	ldr	r0, [r7, #4]
 8019778:	f005 fc8f 	bl	801f09a <USBD_LL_CloseEP>
 801977c:	4b37      	ldr	r3, [pc, #220]	; (801985c <USBD_CDC_DeInit+0xf8>)
 801977e:	781b      	ldrb	r3, [r3, #0]
 8019780:	f003 020f 	and.w	r2, r3, #15
 8019784:	6879      	ldr	r1, [r7, #4]
 8019786:	4613      	mov	r3, r2
 8019788:	009b      	lsls	r3, r3, #2
 801978a:	4413      	add	r3, r2
 801978c:	009b      	lsls	r3, r3, #2
 801978e:	440b      	add	r3, r1
 8019790:	3324      	adds	r3, #36	; 0x24
 8019792:	2200      	movs	r2, #0
 8019794:	801a      	strh	r2, [r3, #0]
 8019796:	4b32      	ldr	r3, [pc, #200]	; (8019860 <USBD_CDC_DeInit+0xfc>)
 8019798:	781b      	ldrb	r3, [r3, #0]
 801979a:	4619      	mov	r1, r3
 801979c:	6878      	ldr	r0, [r7, #4]
 801979e:	f005 fc7c 	bl	801f09a <USBD_LL_CloseEP>
 80197a2:	4b2f      	ldr	r3, [pc, #188]	; (8019860 <USBD_CDC_DeInit+0xfc>)
 80197a4:	781b      	ldrb	r3, [r3, #0]
 80197a6:	f003 020f 	and.w	r2, r3, #15
 80197aa:	6879      	ldr	r1, [r7, #4]
 80197ac:	4613      	mov	r3, r2
 80197ae:	009b      	lsls	r3, r3, #2
 80197b0:	4413      	add	r3, r2
 80197b2:	009b      	lsls	r3, r3, #2
 80197b4:	440b      	add	r3, r1
 80197b6:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 80197ba:	2200      	movs	r2, #0
 80197bc:	801a      	strh	r2, [r3, #0]
 80197be:	4b29      	ldr	r3, [pc, #164]	; (8019864 <USBD_CDC_DeInit+0x100>)
 80197c0:	781b      	ldrb	r3, [r3, #0]
 80197c2:	4619      	mov	r1, r3
 80197c4:	6878      	ldr	r0, [r7, #4]
 80197c6:	f005 fc68 	bl	801f09a <USBD_LL_CloseEP>
 80197ca:	4b26      	ldr	r3, [pc, #152]	; (8019864 <USBD_CDC_DeInit+0x100>)
 80197cc:	781b      	ldrb	r3, [r3, #0]
 80197ce:	f003 020f 	and.w	r2, r3, #15
 80197d2:	6879      	ldr	r1, [r7, #4]
 80197d4:	4613      	mov	r3, r2
 80197d6:	009b      	lsls	r3, r3, #2
 80197d8:	4413      	add	r3, r2
 80197da:	009b      	lsls	r3, r3, #2
 80197dc:	440b      	add	r3, r1
 80197de:	3324      	adds	r3, #36	; 0x24
 80197e0:	2200      	movs	r2, #0
 80197e2:	801a      	strh	r2, [r3, #0]
 80197e4:	4b1f      	ldr	r3, [pc, #124]	; (8019864 <USBD_CDC_DeInit+0x100>)
 80197e6:	781b      	ldrb	r3, [r3, #0]
 80197e8:	f003 020f 	and.w	r2, r3, #15
 80197ec:	6879      	ldr	r1, [r7, #4]
 80197ee:	4613      	mov	r3, r2
 80197f0:	009b      	lsls	r3, r3, #2
 80197f2:	4413      	add	r3, r2
 80197f4:	009b      	lsls	r3, r3, #2
 80197f6:	440b      	add	r3, r1
 80197f8:	3326      	adds	r3, #38	; 0x26
 80197fa:	2200      	movs	r2, #0
 80197fc:	801a      	strh	r2, [r3, #0]
 80197fe:	687b      	ldr	r3, [r7, #4]
 8019800:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019804:	687b      	ldr	r3, [r7, #4]
 8019806:	32b0      	adds	r2, #176	; 0xb0
 8019808:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801980c:	2b00      	cmp	r3, #0
 801980e:	d01f      	beq.n	8019850 <USBD_CDC_DeInit+0xec>
 8019810:	687b      	ldr	r3, [r7, #4]
 8019812:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019816:	687a      	ldr	r2, [r7, #4]
 8019818:	33b0      	adds	r3, #176	; 0xb0
 801981a:	009b      	lsls	r3, r3, #2
 801981c:	4413      	add	r3, r2
 801981e:	685b      	ldr	r3, [r3, #4]
 8019820:	685b      	ldr	r3, [r3, #4]
 8019822:	4798      	blx	r3
 8019824:	687b      	ldr	r3, [r7, #4]
 8019826:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801982a:	687b      	ldr	r3, [r7, #4]
 801982c:	32b0      	adds	r2, #176	; 0xb0
 801982e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019832:	4618      	mov	r0, r3
 8019834:	f005 fd3c 	bl	801f2b0 <USBD_static_free>
 8019838:	687b      	ldr	r3, [r7, #4]
 801983a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801983e:	687b      	ldr	r3, [r7, #4]
 8019840:	32b0      	adds	r2, #176	; 0xb0
 8019842:	2100      	movs	r1, #0
 8019844:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8019848:	687b      	ldr	r3, [r7, #4]
 801984a:	2200      	movs	r2, #0
 801984c:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 8019850:	2300      	movs	r3, #0
 8019852:	4618      	mov	r0, r3
 8019854:	3708      	adds	r7, #8
 8019856:	46bd      	mov	sp, r7
 8019858:	bd80      	pop	{r7, pc}
 801985a:	bf00      	nop
 801985c:	200000e3 	.word	0x200000e3
 8019860:	200000e4 	.word	0x200000e4
 8019864:	200000e5 	.word	0x200000e5

08019868 <USBD_CDC_Setup>:
 8019868:	b580      	push	{r7, lr}
 801986a:	b086      	sub	sp, #24
 801986c:	af00      	add	r7, sp, #0
 801986e:	6078      	str	r0, [r7, #4]
 8019870:	6039      	str	r1, [r7, #0]
 8019872:	687b      	ldr	r3, [r7, #4]
 8019874:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019878:	687b      	ldr	r3, [r7, #4]
 801987a:	32b0      	adds	r2, #176	; 0xb0
 801987c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019880:	613b      	str	r3, [r7, #16]
 8019882:	2300      	movs	r3, #0
 8019884:	737b      	strb	r3, [r7, #13]
 8019886:	2300      	movs	r3, #0
 8019888:	817b      	strh	r3, [r7, #10]
 801988a:	2300      	movs	r3, #0
 801988c:	75fb      	strb	r3, [r7, #23]
 801988e:	693b      	ldr	r3, [r7, #16]
 8019890:	2b00      	cmp	r3, #0
 8019892:	d101      	bne.n	8019898 <USBD_CDC_Setup+0x30>
 8019894:	2303      	movs	r3, #3
 8019896:	e0bf      	b.n	8019a18 <USBD_CDC_Setup+0x1b0>
 8019898:	683b      	ldr	r3, [r7, #0]
 801989a:	781b      	ldrb	r3, [r3, #0]
 801989c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80198a0:	2b00      	cmp	r3, #0
 80198a2:	d050      	beq.n	8019946 <USBD_CDC_Setup+0xde>
 80198a4:	2b20      	cmp	r3, #32
 80198a6:	f040 80af 	bne.w	8019a08 <USBD_CDC_Setup+0x1a0>
 80198aa:	683b      	ldr	r3, [r7, #0]
 80198ac:	88db      	ldrh	r3, [r3, #6]
 80198ae:	2b00      	cmp	r3, #0
 80198b0:	d03a      	beq.n	8019928 <USBD_CDC_Setup+0xc0>
 80198b2:	683b      	ldr	r3, [r7, #0]
 80198b4:	781b      	ldrb	r3, [r3, #0]
 80198b6:	b25b      	sxtb	r3, r3
 80198b8:	2b00      	cmp	r3, #0
 80198ba:	da1b      	bge.n	80198f4 <USBD_CDC_Setup+0x8c>
 80198bc:	687b      	ldr	r3, [r7, #4]
 80198be:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 80198c2:	687a      	ldr	r2, [r7, #4]
 80198c4:	33b0      	adds	r3, #176	; 0xb0
 80198c6:	009b      	lsls	r3, r3, #2
 80198c8:	4413      	add	r3, r2
 80198ca:	685b      	ldr	r3, [r3, #4]
 80198cc:	689b      	ldr	r3, [r3, #8]
 80198ce:	683a      	ldr	r2, [r7, #0]
 80198d0:	7850      	ldrb	r0, [r2, #1]
 80198d2:	6939      	ldr	r1, [r7, #16]
 80198d4:	683a      	ldr	r2, [r7, #0]
 80198d6:	88d2      	ldrh	r2, [r2, #6]
 80198d8:	4798      	blx	r3
 80198da:	683b      	ldr	r3, [r7, #0]
 80198dc:	88db      	ldrh	r3, [r3, #6]
 80198de:	2b07      	cmp	r3, #7
 80198e0:	bf28      	it	cs
 80198e2:	2307      	movcs	r3, #7
 80198e4:	81fb      	strh	r3, [r7, #14]
 80198e6:	693b      	ldr	r3, [r7, #16]
 80198e8:	89fa      	ldrh	r2, [r7, #14]
 80198ea:	4619      	mov	r1, r3
 80198ec:	6878      	ldr	r0, [r7, #4]
 80198ee:	f001 fd43 	bl	801b378 <USBD_CtlSendData>
 80198f2:	e090      	b.n	8019a16 <USBD_CDC_Setup+0x1ae>
 80198f4:	683b      	ldr	r3, [r7, #0]
 80198f6:	785a      	ldrb	r2, [r3, #1]
 80198f8:	693b      	ldr	r3, [r7, #16]
 80198fa:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 80198fe:	683b      	ldr	r3, [r7, #0]
 8019900:	88db      	ldrh	r3, [r3, #6]
 8019902:	2b3f      	cmp	r3, #63	; 0x3f
 8019904:	d803      	bhi.n	801990e <USBD_CDC_Setup+0xa6>
 8019906:	683b      	ldr	r3, [r7, #0]
 8019908:	88db      	ldrh	r3, [r3, #6]
 801990a:	b2da      	uxtb	r2, r3
 801990c:	e000      	b.n	8019910 <USBD_CDC_Setup+0xa8>
 801990e:	2240      	movs	r2, #64	; 0x40
 8019910:	693b      	ldr	r3, [r7, #16]
 8019912:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 8019916:	6939      	ldr	r1, [r7, #16]
 8019918:	693b      	ldr	r3, [r7, #16]
 801991a:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 801991e:	461a      	mov	r2, r3
 8019920:	6878      	ldr	r0, [r7, #4]
 8019922:	f001 fd55 	bl	801b3d0 <USBD_CtlPrepareRx>
 8019926:	e076      	b.n	8019a16 <USBD_CDC_Setup+0x1ae>
 8019928:	687b      	ldr	r3, [r7, #4]
 801992a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 801992e:	687a      	ldr	r2, [r7, #4]
 8019930:	33b0      	adds	r3, #176	; 0xb0
 8019932:	009b      	lsls	r3, r3, #2
 8019934:	4413      	add	r3, r2
 8019936:	685b      	ldr	r3, [r3, #4]
 8019938:	689b      	ldr	r3, [r3, #8]
 801993a:	683a      	ldr	r2, [r7, #0]
 801993c:	7850      	ldrb	r0, [r2, #1]
 801993e:	2200      	movs	r2, #0
 8019940:	6839      	ldr	r1, [r7, #0]
 8019942:	4798      	blx	r3
 8019944:	e067      	b.n	8019a16 <USBD_CDC_Setup+0x1ae>
 8019946:	683b      	ldr	r3, [r7, #0]
 8019948:	785b      	ldrb	r3, [r3, #1]
 801994a:	2b0b      	cmp	r3, #11
 801994c:	d851      	bhi.n	80199f2 <USBD_CDC_Setup+0x18a>
 801994e:	a201      	add	r2, pc, #4	; (adr r2, 8019954 <USBD_CDC_Setup+0xec>)
 8019950:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019954:	08019985 	.word	0x08019985
 8019958:	08019a01 	.word	0x08019a01
 801995c:	080199f3 	.word	0x080199f3
 8019960:	080199f3 	.word	0x080199f3
 8019964:	080199f3 	.word	0x080199f3
 8019968:	080199f3 	.word	0x080199f3
 801996c:	080199f3 	.word	0x080199f3
 8019970:	080199f3 	.word	0x080199f3
 8019974:	080199f3 	.word	0x080199f3
 8019978:	080199f3 	.word	0x080199f3
 801997c:	080199af 	.word	0x080199af
 8019980:	080199d9 	.word	0x080199d9
 8019984:	687b      	ldr	r3, [r7, #4]
 8019986:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801998a:	b2db      	uxtb	r3, r3
 801998c:	2b03      	cmp	r3, #3
 801998e:	d107      	bne.n	80199a0 <USBD_CDC_Setup+0x138>
 8019990:	f107 030a 	add.w	r3, r7, #10
 8019994:	2202      	movs	r2, #2
 8019996:	4619      	mov	r1, r3
 8019998:	6878      	ldr	r0, [r7, #4]
 801999a:	f001 fced 	bl	801b378 <USBD_CtlSendData>
 801999e:	e032      	b.n	8019a06 <USBD_CDC_Setup+0x19e>
 80199a0:	6839      	ldr	r1, [r7, #0]
 80199a2:	6878      	ldr	r0, [r7, #4]
 80199a4:	f001 fc77 	bl	801b296 <USBD_CtlError>
 80199a8:	2303      	movs	r3, #3
 80199aa:	75fb      	strb	r3, [r7, #23]
 80199ac:	e02b      	b.n	8019a06 <USBD_CDC_Setup+0x19e>
 80199ae:	687b      	ldr	r3, [r7, #4]
 80199b0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80199b4:	b2db      	uxtb	r3, r3
 80199b6:	2b03      	cmp	r3, #3
 80199b8:	d107      	bne.n	80199ca <USBD_CDC_Setup+0x162>
 80199ba:	f107 030d 	add.w	r3, r7, #13
 80199be:	2201      	movs	r2, #1
 80199c0:	4619      	mov	r1, r3
 80199c2:	6878      	ldr	r0, [r7, #4]
 80199c4:	f001 fcd8 	bl	801b378 <USBD_CtlSendData>
 80199c8:	e01d      	b.n	8019a06 <USBD_CDC_Setup+0x19e>
 80199ca:	6839      	ldr	r1, [r7, #0]
 80199cc:	6878      	ldr	r0, [r7, #4]
 80199ce:	f001 fc62 	bl	801b296 <USBD_CtlError>
 80199d2:	2303      	movs	r3, #3
 80199d4:	75fb      	strb	r3, [r7, #23]
 80199d6:	e016      	b.n	8019a06 <USBD_CDC_Setup+0x19e>
 80199d8:	687b      	ldr	r3, [r7, #4]
 80199da:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80199de:	b2db      	uxtb	r3, r3
 80199e0:	2b03      	cmp	r3, #3
 80199e2:	d00f      	beq.n	8019a04 <USBD_CDC_Setup+0x19c>
 80199e4:	6839      	ldr	r1, [r7, #0]
 80199e6:	6878      	ldr	r0, [r7, #4]
 80199e8:	f001 fc55 	bl	801b296 <USBD_CtlError>
 80199ec:	2303      	movs	r3, #3
 80199ee:	75fb      	strb	r3, [r7, #23]
 80199f0:	e008      	b.n	8019a04 <USBD_CDC_Setup+0x19c>
 80199f2:	6839      	ldr	r1, [r7, #0]
 80199f4:	6878      	ldr	r0, [r7, #4]
 80199f6:	f001 fc4e 	bl	801b296 <USBD_CtlError>
 80199fa:	2303      	movs	r3, #3
 80199fc:	75fb      	strb	r3, [r7, #23]
 80199fe:	e002      	b.n	8019a06 <USBD_CDC_Setup+0x19e>
 8019a00:	bf00      	nop
 8019a02:	e008      	b.n	8019a16 <USBD_CDC_Setup+0x1ae>
 8019a04:	bf00      	nop
 8019a06:	e006      	b.n	8019a16 <USBD_CDC_Setup+0x1ae>
 8019a08:	6839      	ldr	r1, [r7, #0]
 8019a0a:	6878      	ldr	r0, [r7, #4]
 8019a0c:	f001 fc43 	bl	801b296 <USBD_CtlError>
 8019a10:	2303      	movs	r3, #3
 8019a12:	75fb      	strb	r3, [r7, #23]
 8019a14:	bf00      	nop
 8019a16:	7dfb      	ldrb	r3, [r7, #23]
 8019a18:	4618      	mov	r0, r3
 8019a1a:	3718      	adds	r7, #24
 8019a1c:	46bd      	mov	sp, r7
 8019a1e:	bd80      	pop	{r7, pc}

08019a20 <USBD_CDC_DataIn>:
 8019a20:	b580      	push	{r7, lr}
 8019a22:	b084      	sub	sp, #16
 8019a24:	af00      	add	r7, sp, #0
 8019a26:	6078      	str	r0, [r7, #4]
 8019a28:	460b      	mov	r3, r1
 8019a2a:	70fb      	strb	r3, [r7, #3]
 8019a2c:	687b      	ldr	r3, [r7, #4]
 8019a2e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8019a32:	60fb      	str	r3, [r7, #12]
 8019a34:	687b      	ldr	r3, [r7, #4]
 8019a36:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019a3a:	687b      	ldr	r3, [r7, #4]
 8019a3c:	32b0      	adds	r2, #176	; 0xb0
 8019a3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019a42:	2b00      	cmp	r3, #0
 8019a44:	d101      	bne.n	8019a4a <USBD_CDC_DataIn+0x2a>
 8019a46:	2303      	movs	r3, #3
 8019a48:	e065      	b.n	8019b16 <USBD_CDC_DataIn+0xf6>
 8019a4a:	687b      	ldr	r3, [r7, #4]
 8019a4c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019a50:	687b      	ldr	r3, [r7, #4]
 8019a52:	32b0      	adds	r2, #176	; 0xb0
 8019a54:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019a58:	60bb      	str	r3, [r7, #8]
 8019a5a:	78fb      	ldrb	r3, [r7, #3]
 8019a5c:	f003 020f 	and.w	r2, r3, #15
 8019a60:	6879      	ldr	r1, [r7, #4]
 8019a62:	4613      	mov	r3, r2
 8019a64:	009b      	lsls	r3, r3, #2
 8019a66:	4413      	add	r3, r2
 8019a68:	009b      	lsls	r3, r3, #2
 8019a6a:	440b      	add	r3, r1
 8019a6c:	3318      	adds	r3, #24
 8019a6e:	681b      	ldr	r3, [r3, #0]
 8019a70:	2b00      	cmp	r3, #0
 8019a72:	d02f      	beq.n	8019ad4 <USBD_CDC_DataIn+0xb4>
 8019a74:	78fb      	ldrb	r3, [r7, #3]
 8019a76:	f003 020f 	and.w	r2, r3, #15
 8019a7a:	6879      	ldr	r1, [r7, #4]
 8019a7c:	4613      	mov	r3, r2
 8019a7e:	009b      	lsls	r3, r3, #2
 8019a80:	4413      	add	r3, r2
 8019a82:	009b      	lsls	r3, r3, #2
 8019a84:	440b      	add	r3, r1
 8019a86:	3318      	adds	r3, #24
 8019a88:	681a      	ldr	r2, [r3, #0]
 8019a8a:	78fb      	ldrb	r3, [r7, #3]
 8019a8c:	f003 010f 	and.w	r1, r3, #15
 8019a90:	68f8      	ldr	r0, [r7, #12]
 8019a92:	460b      	mov	r3, r1
 8019a94:	00db      	lsls	r3, r3, #3
 8019a96:	440b      	add	r3, r1
 8019a98:	009b      	lsls	r3, r3, #2
 8019a9a:	4403      	add	r3, r0
 8019a9c:	3348      	adds	r3, #72	; 0x48
 8019a9e:	681b      	ldr	r3, [r3, #0]
 8019aa0:	fbb2 f1f3 	udiv	r1, r2, r3
 8019aa4:	fb01 f303 	mul.w	r3, r1, r3
 8019aa8:	1ad3      	subs	r3, r2, r3
 8019aaa:	2b00      	cmp	r3, #0
 8019aac:	d112      	bne.n	8019ad4 <USBD_CDC_DataIn+0xb4>
 8019aae:	78fb      	ldrb	r3, [r7, #3]
 8019ab0:	f003 020f 	and.w	r2, r3, #15
 8019ab4:	6879      	ldr	r1, [r7, #4]
 8019ab6:	4613      	mov	r3, r2
 8019ab8:	009b      	lsls	r3, r3, #2
 8019aba:	4413      	add	r3, r2
 8019abc:	009b      	lsls	r3, r3, #2
 8019abe:	440b      	add	r3, r1
 8019ac0:	3318      	adds	r3, #24
 8019ac2:	2200      	movs	r2, #0
 8019ac4:	601a      	str	r2, [r3, #0]
 8019ac6:	78f9      	ldrb	r1, [r7, #3]
 8019ac8:	2300      	movs	r3, #0
 8019aca:	2200      	movs	r2, #0
 8019acc:	6878      	ldr	r0, [r7, #4]
 8019ace:	f005 fb8c 	bl	801f1ea <USBD_LL_Transmit>
 8019ad2:	e01f      	b.n	8019b14 <USBD_CDC_DataIn+0xf4>
 8019ad4:	68bb      	ldr	r3, [r7, #8]
 8019ad6:	2200      	movs	r2, #0
 8019ad8:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8019adc:	687b      	ldr	r3, [r7, #4]
 8019ade:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019ae2:	687a      	ldr	r2, [r7, #4]
 8019ae4:	33b0      	adds	r3, #176	; 0xb0
 8019ae6:	009b      	lsls	r3, r3, #2
 8019ae8:	4413      	add	r3, r2
 8019aea:	685b      	ldr	r3, [r3, #4]
 8019aec:	691b      	ldr	r3, [r3, #16]
 8019aee:	2b00      	cmp	r3, #0
 8019af0:	d010      	beq.n	8019b14 <USBD_CDC_DataIn+0xf4>
 8019af2:	687b      	ldr	r3, [r7, #4]
 8019af4:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019af8:	687a      	ldr	r2, [r7, #4]
 8019afa:	33b0      	adds	r3, #176	; 0xb0
 8019afc:	009b      	lsls	r3, r3, #2
 8019afe:	4413      	add	r3, r2
 8019b00:	685b      	ldr	r3, [r3, #4]
 8019b02:	691b      	ldr	r3, [r3, #16]
 8019b04:	68ba      	ldr	r2, [r7, #8]
 8019b06:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 8019b0a:	68ba      	ldr	r2, [r7, #8]
 8019b0c:	f502 7104 	add.w	r1, r2, #528	; 0x210
 8019b10:	78fa      	ldrb	r2, [r7, #3]
 8019b12:	4798      	blx	r3
 8019b14:	2300      	movs	r3, #0
 8019b16:	4618      	mov	r0, r3
 8019b18:	3710      	adds	r7, #16
 8019b1a:	46bd      	mov	sp, r7
 8019b1c:	bd80      	pop	{r7, pc}

08019b1e <USBD_CDC_DataOut>:
 8019b1e:	b580      	push	{r7, lr}
 8019b20:	b084      	sub	sp, #16
 8019b22:	af00      	add	r7, sp, #0
 8019b24:	6078      	str	r0, [r7, #4]
 8019b26:	460b      	mov	r3, r1
 8019b28:	70fb      	strb	r3, [r7, #3]
 8019b2a:	687b      	ldr	r3, [r7, #4]
 8019b2c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019b30:	687b      	ldr	r3, [r7, #4]
 8019b32:	32b0      	adds	r2, #176	; 0xb0
 8019b34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019b38:	60fb      	str	r3, [r7, #12]
 8019b3a:	687b      	ldr	r3, [r7, #4]
 8019b3c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019b40:	687b      	ldr	r3, [r7, #4]
 8019b42:	32b0      	adds	r2, #176	; 0xb0
 8019b44:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019b48:	2b00      	cmp	r3, #0
 8019b4a:	d101      	bne.n	8019b50 <USBD_CDC_DataOut+0x32>
 8019b4c:	2303      	movs	r3, #3
 8019b4e:	e01a      	b.n	8019b86 <USBD_CDC_DataOut+0x68>
 8019b50:	78fb      	ldrb	r3, [r7, #3]
 8019b52:	4619      	mov	r1, r3
 8019b54:	6878      	ldr	r0, [r7, #4]
 8019b56:	f005 fb8a 	bl	801f26e <USBD_LL_GetRxDataSize>
 8019b5a:	4602      	mov	r2, r0
 8019b5c:	68fb      	ldr	r3, [r7, #12]
 8019b5e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8019b62:	687b      	ldr	r3, [r7, #4]
 8019b64:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019b68:	687a      	ldr	r2, [r7, #4]
 8019b6a:	33b0      	adds	r3, #176	; 0xb0
 8019b6c:	009b      	lsls	r3, r3, #2
 8019b6e:	4413      	add	r3, r2
 8019b70:	685b      	ldr	r3, [r3, #4]
 8019b72:	68db      	ldr	r3, [r3, #12]
 8019b74:	68fa      	ldr	r2, [r7, #12]
 8019b76:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 8019b7a:	68fa      	ldr	r2, [r7, #12]
 8019b7c:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 8019b80:	4611      	mov	r1, r2
 8019b82:	4798      	blx	r3
 8019b84:	2300      	movs	r3, #0
 8019b86:	4618      	mov	r0, r3
 8019b88:	3710      	adds	r7, #16
 8019b8a:	46bd      	mov	sp, r7
 8019b8c:	bd80      	pop	{r7, pc}

08019b8e <USBD_CDC_EP0_RxReady>:
 8019b8e:	b580      	push	{r7, lr}
 8019b90:	b084      	sub	sp, #16
 8019b92:	af00      	add	r7, sp, #0
 8019b94:	6078      	str	r0, [r7, #4]
 8019b96:	687b      	ldr	r3, [r7, #4]
 8019b98:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019b9c:	687b      	ldr	r3, [r7, #4]
 8019b9e:	32b0      	adds	r2, #176	; 0xb0
 8019ba0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019ba4:	60fb      	str	r3, [r7, #12]
 8019ba6:	68fb      	ldr	r3, [r7, #12]
 8019ba8:	2b00      	cmp	r3, #0
 8019baa:	d101      	bne.n	8019bb0 <USBD_CDC_EP0_RxReady+0x22>
 8019bac:	2303      	movs	r3, #3
 8019bae:	e025      	b.n	8019bfc <USBD_CDC_EP0_RxReady+0x6e>
 8019bb0:	687b      	ldr	r3, [r7, #4]
 8019bb2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019bb6:	687a      	ldr	r2, [r7, #4]
 8019bb8:	33b0      	adds	r3, #176	; 0xb0
 8019bba:	009b      	lsls	r3, r3, #2
 8019bbc:	4413      	add	r3, r2
 8019bbe:	685b      	ldr	r3, [r3, #4]
 8019bc0:	2b00      	cmp	r3, #0
 8019bc2:	d01a      	beq.n	8019bfa <USBD_CDC_EP0_RxReady+0x6c>
 8019bc4:	68fb      	ldr	r3, [r7, #12]
 8019bc6:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 8019bca:	2bff      	cmp	r3, #255	; 0xff
 8019bcc:	d015      	beq.n	8019bfa <USBD_CDC_EP0_RxReady+0x6c>
 8019bce:	687b      	ldr	r3, [r7, #4]
 8019bd0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019bd4:	687a      	ldr	r2, [r7, #4]
 8019bd6:	33b0      	adds	r3, #176	; 0xb0
 8019bd8:	009b      	lsls	r3, r3, #2
 8019bda:	4413      	add	r3, r2
 8019bdc:	685b      	ldr	r3, [r3, #4]
 8019bde:	689b      	ldr	r3, [r3, #8]
 8019be0:	68fa      	ldr	r2, [r7, #12]
 8019be2:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
 8019be6:	68f9      	ldr	r1, [r7, #12]
 8019be8:	68fa      	ldr	r2, [r7, #12]
 8019bea:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
 8019bee:	b292      	uxth	r2, r2
 8019bf0:	4798      	blx	r3
 8019bf2:	68fb      	ldr	r3, [r7, #12]
 8019bf4:	22ff      	movs	r2, #255	; 0xff
 8019bf6:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 8019bfa:	2300      	movs	r3, #0
 8019bfc:	4618      	mov	r0, r3
 8019bfe:	3710      	adds	r7, #16
 8019c00:	46bd      	mov	sp, r7
 8019c02:	bd80      	pop	{r7, pc}

08019c04 <USBD_CDC_GetFSCfgDesc>:
 8019c04:	b580      	push	{r7, lr}
 8019c06:	b086      	sub	sp, #24
 8019c08:	af00      	add	r7, sp, #0
 8019c0a:	6078      	str	r0, [r7, #4]
 8019c0c:	2182      	movs	r1, #130	; 0x82
 8019c0e:	4818      	ldr	r0, [pc, #96]	; (8019c70 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019c10:	f000 fd09 	bl	801a626 <USBD_GetEpDesc>
 8019c14:	6178      	str	r0, [r7, #20]
 8019c16:	2101      	movs	r1, #1
 8019c18:	4815      	ldr	r0, [pc, #84]	; (8019c70 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019c1a:	f000 fd04 	bl	801a626 <USBD_GetEpDesc>
 8019c1e:	6138      	str	r0, [r7, #16]
 8019c20:	2181      	movs	r1, #129	; 0x81
 8019c22:	4813      	ldr	r0, [pc, #76]	; (8019c70 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019c24:	f000 fcff 	bl	801a626 <USBD_GetEpDesc>
 8019c28:	60f8      	str	r0, [r7, #12]
 8019c2a:	697b      	ldr	r3, [r7, #20]
 8019c2c:	2b00      	cmp	r3, #0
 8019c2e:	d002      	beq.n	8019c36 <USBD_CDC_GetFSCfgDesc+0x32>
 8019c30:	697b      	ldr	r3, [r7, #20]
 8019c32:	2210      	movs	r2, #16
 8019c34:	719a      	strb	r2, [r3, #6]
 8019c36:	693b      	ldr	r3, [r7, #16]
 8019c38:	2b00      	cmp	r3, #0
 8019c3a:	d006      	beq.n	8019c4a <USBD_CDC_GetFSCfgDesc+0x46>
 8019c3c:	693b      	ldr	r3, [r7, #16]
 8019c3e:	2200      	movs	r2, #0
 8019c40:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019c44:	711a      	strb	r2, [r3, #4]
 8019c46:	2200      	movs	r2, #0
 8019c48:	715a      	strb	r2, [r3, #5]
 8019c4a:	68fb      	ldr	r3, [r7, #12]
 8019c4c:	2b00      	cmp	r3, #0
 8019c4e:	d006      	beq.n	8019c5e <USBD_CDC_GetFSCfgDesc+0x5a>
 8019c50:	68fb      	ldr	r3, [r7, #12]
 8019c52:	2200      	movs	r2, #0
 8019c54:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019c58:	711a      	strb	r2, [r3, #4]
 8019c5a:	2200      	movs	r2, #0
 8019c5c:	715a      	strb	r2, [r3, #5]
 8019c5e:	687b      	ldr	r3, [r7, #4]
 8019c60:	2243      	movs	r2, #67	; 0x43
 8019c62:	801a      	strh	r2, [r3, #0]
 8019c64:	4b02      	ldr	r3, [pc, #8]	; (8019c70 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019c66:	4618      	mov	r0, r3
 8019c68:	3718      	adds	r7, #24
 8019c6a:	46bd      	mov	sp, r7
 8019c6c:	bd80      	pop	{r7, pc}
 8019c6e:	bf00      	nop
 8019c70:	200000a0 	.word	0x200000a0

08019c74 <USBD_CDC_GetHSCfgDesc>:
 8019c74:	b580      	push	{r7, lr}
 8019c76:	b086      	sub	sp, #24
 8019c78:	af00      	add	r7, sp, #0
 8019c7a:	6078      	str	r0, [r7, #4]
 8019c7c:	2182      	movs	r1, #130	; 0x82
 8019c7e:	4818      	ldr	r0, [pc, #96]	; (8019ce0 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019c80:	f000 fcd1 	bl	801a626 <USBD_GetEpDesc>
 8019c84:	6178      	str	r0, [r7, #20]
 8019c86:	2101      	movs	r1, #1
 8019c88:	4815      	ldr	r0, [pc, #84]	; (8019ce0 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019c8a:	f000 fccc 	bl	801a626 <USBD_GetEpDesc>
 8019c8e:	6138      	str	r0, [r7, #16]
 8019c90:	2181      	movs	r1, #129	; 0x81
 8019c92:	4813      	ldr	r0, [pc, #76]	; (8019ce0 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019c94:	f000 fcc7 	bl	801a626 <USBD_GetEpDesc>
 8019c98:	60f8      	str	r0, [r7, #12]
 8019c9a:	697b      	ldr	r3, [r7, #20]
 8019c9c:	2b00      	cmp	r3, #0
 8019c9e:	d002      	beq.n	8019ca6 <USBD_CDC_GetHSCfgDesc+0x32>
 8019ca0:	697b      	ldr	r3, [r7, #20]
 8019ca2:	2210      	movs	r2, #16
 8019ca4:	719a      	strb	r2, [r3, #6]
 8019ca6:	693b      	ldr	r3, [r7, #16]
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	d006      	beq.n	8019cba <USBD_CDC_GetHSCfgDesc+0x46>
 8019cac:	693b      	ldr	r3, [r7, #16]
 8019cae:	2200      	movs	r2, #0
 8019cb0:	711a      	strb	r2, [r3, #4]
 8019cb2:	2200      	movs	r2, #0
 8019cb4:	f042 0202 	orr.w	r2, r2, #2
 8019cb8:	715a      	strb	r2, [r3, #5]
 8019cba:	68fb      	ldr	r3, [r7, #12]
 8019cbc:	2b00      	cmp	r3, #0
 8019cbe:	d006      	beq.n	8019cce <USBD_CDC_GetHSCfgDesc+0x5a>
 8019cc0:	68fb      	ldr	r3, [r7, #12]
 8019cc2:	2200      	movs	r2, #0
 8019cc4:	711a      	strb	r2, [r3, #4]
 8019cc6:	2200      	movs	r2, #0
 8019cc8:	f042 0202 	orr.w	r2, r2, #2
 8019ccc:	715a      	strb	r2, [r3, #5]
 8019cce:	687b      	ldr	r3, [r7, #4]
 8019cd0:	2243      	movs	r2, #67	; 0x43
 8019cd2:	801a      	strh	r2, [r3, #0]
 8019cd4:	4b02      	ldr	r3, [pc, #8]	; (8019ce0 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019cd6:	4618      	mov	r0, r3
 8019cd8:	3718      	adds	r7, #24
 8019cda:	46bd      	mov	sp, r7
 8019cdc:	bd80      	pop	{r7, pc}
 8019cde:	bf00      	nop
 8019ce0:	200000a0 	.word	0x200000a0

08019ce4 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8019ce4:	b580      	push	{r7, lr}
 8019ce6:	b086      	sub	sp, #24
 8019ce8:	af00      	add	r7, sp, #0
 8019cea:	6078      	str	r0, [r7, #4]
 8019cec:	2182      	movs	r1, #130	; 0x82
 8019cee:	4818      	ldr	r0, [pc, #96]	; (8019d50 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019cf0:	f000 fc99 	bl	801a626 <USBD_GetEpDesc>
 8019cf4:	6178      	str	r0, [r7, #20]
 8019cf6:	2101      	movs	r1, #1
 8019cf8:	4815      	ldr	r0, [pc, #84]	; (8019d50 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019cfa:	f000 fc94 	bl	801a626 <USBD_GetEpDesc>
 8019cfe:	6138      	str	r0, [r7, #16]
 8019d00:	2181      	movs	r1, #129	; 0x81
 8019d02:	4813      	ldr	r0, [pc, #76]	; (8019d50 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019d04:	f000 fc8f 	bl	801a626 <USBD_GetEpDesc>
 8019d08:	60f8      	str	r0, [r7, #12]
 8019d0a:	697b      	ldr	r3, [r7, #20]
 8019d0c:	2b00      	cmp	r3, #0
 8019d0e:	d002      	beq.n	8019d16 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 8019d10:	697b      	ldr	r3, [r7, #20]
 8019d12:	2210      	movs	r2, #16
 8019d14:	719a      	strb	r2, [r3, #6]
 8019d16:	693b      	ldr	r3, [r7, #16]
 8019d18:	2b00      	cmp	r3, #0
 8019d1a:	d006      	beq.n	8019d2a <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8019d1c:	693b      	ldr	r3, [r7, #16]
 8019d1e:	2200      	movs	r2, #0
 8019d20:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019d24:	711a      	strb	r2, [r3, #4]
 8019d26:	2200      	movs	r2, #0
 8019d28:	715a      	strb	r2, [r3, #5]
 8019d2a:	68fb      	ldr	r3, [r7, #12]
 8019d2c:	2b00      	cmp	r3, #0
 8019d2e:	d006      	beq.n	8019d3e <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 8019d30:	68fb      	ldr	r3, [r7, #12]
 8019d32:	2200      	movs	r2, #0
 8019d34:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019d38:	711a      	strb	r2, [r3, #4]
 8019d3a:	2200      	movs	r2, #0
 8019d3c:	715a      	strb	r2, [r3, #5]
 8019d3e:	687b      	ldr	r3, [r7, #4]
 8019d40:	2243      	movs	r2, #67	; 0x43
 8019d42:	801a      	strh	r2, [r3, #0]
 8019d44:	4b02      	ldr	r3, [pc, #8]	; (8019d50 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019d46:	4618      	mov	r0, r3
 8019d48:	3718      	adds	r7, #24
 8019d4a:	46bd      	mov	sp, r7
 8019d4c:	bd80      	pop	{r7, pc}
 8019d4e:	bf00      	nop
 8019d50:	200000a0 	.word	0x200000a0

08019d54 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8019d54:	b480      	push	{r7}
 8019d56:	b083      	sub	sp, #12
 8019d58:	af00      	add	r7, sp, #0
 8019d5a:	6078      	str	r0, [r7, #4]
 8019d5c:	687b      	ldr	r3, [r7, #4]
 8019d5e:	220a      	movs	r2, #10
 8019d60:	801a      	strh	r2, [r3, #0]
 8019d62:	4b03      	ldr	r3, [pc, #12]	; (8019d70 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8019d64:	4618      	mov	r0, r3
 8019d66:	370c      	adds	r7, #12
 8019d68:	46bd      	mov	sp, r7
 8019d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d6e:	4770      	bx	lr
 8019d70:	2000005c 	.word	0x2000005c

08019d74 <USBD_CDC_RegisterInterface>:
 8019d74:	b480      	push	{r7}
 8019d76:	b083      	sub	sp, #12
 8019d78:	af00      	add	r7, sp, #0
 8019d7a:	6078      	str	r0, [r7, #4]
 8019d7c:	6039      	str	r1, [r7, #0]
 8019d7e:	683b      	ldr	r3, [r7, #0]
 8019d80:	2b00      	cmp	r3, #0
 8019d82:	d101      	bne.n	8019d88 <USBD_CDC_RegisterInterface+0x14>
 8019d84:	2303      	movs	r3, #3
 8019d86:	e009      	b.n	8019d9c <USBD_CDC_RegisterInterface+0x28>
 8019d88:	687b      	ldr	r3, [r7, #4]
 8019d8a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019d8e:	687a      	ldr	r2, [r7, #4]
 8019d90:	33b0      	adds	r3, #176	; 0xb0
 8019d92:	009b      	lsls	r3, r3, #2
 8019d94:	4413      	add	r3, r2
 8019d96:	683a      	ldr	r2, [r7, #0]
 8019d98:	605a      	str	r2, [r3, #4]
 8019d9a:	2300      	movs	r3, #0
 8019d9c:	4618      	mov	r0, r3
 8019d9e:	370c      	adds	r7, #12
 8019da0:	46bd      	mov	sp, r7
 8019da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019da6:	4770      	bx	lr

08019da8 <USBD_CDC_SetTxBuffer>:
 8019da8:	b480      	push	{r7}
 8019daa:	b087      	sub	sp, #28
 8019dac:	af00      	add	r7, sp, #0
 8019dae:	60f8      	str	r0, [r7, #12]
 8019db0:	60b9      	str	r1, [r7, #8]
 8019db2:	607a      	str	r2, [r7, #4]
 8019db4:	68fb      	ldr	r3, [r7, #12]
 8019db6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019dba:	68fb      	ldr	r3, [r7, #12]
 8019dbc:	32b0      	adds	r2, #176	; 0xb0
 8019dbe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019dc2:	617b      	str	r3, [r7, #20]
 8019dc4:	697b      	ldr	r3, [r7, #20]
 8019dc6:	2b00      	cmp	r3, #0
 8019dc8:	d101      	bne.n	8019dce <USBD_CDC_SetTxBuffer+0x26>
 8019dca:	2303      	movs	r3, #3
 8019dcc:	e008      	b.n	8019de0 <USBD_CDC_SetTxBuffer+0x38>
 8019dce:	697b      	ldr	r3, [r7, #20]
 8019dd0:	68ba      	ldr	r2, [r7, #8]
 8019dd2:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8019dd6:	697b      	ldr	r3, [r7, #20]
 8019dd8:	687a      	ldr	r2, [r7, #4]
 8019dda:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8019dde:	2300      	movs	r3, #0
 8019de0:	4618      	mov	r0, r3
 8019de2:	371c      	adds	r7, #28
 8019de4:	46bd      	mov	sp, r7
 8019de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dea:	4770      	bx	lr

08019dec <USBD_CDC_SetRxBuffer>:
 8019dec:	b480      	push	{r7}
 8019dee:	b085      	sub	sp, #20
 8019df0:	af00      	add	r7, sp, #0
 8019df2:	6078      	str	r0, [r7, #4]
 8019df4:	6039      	str	r1, [r7, #0]
 8019df6:	687b      	ldr	r3, [r7, #4]
 8019df8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019dfc:	687b      	ldr	r3, [r7, #4]
 8019dfe:	32b0      	adds	r2, #176	; 0xb0
 8019e00:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019e04:	60fb      	str	r3, [r7, #12]
 8019e06:	68fb      	ldr	r3, [r7, #12]
 8019e08:	2b00      	cmp	r3, #0
 8019e0a:	d101      	bne.n	8019e10 <USBD_CDC_SetRxBuffer+0x24>
 8019e0c:	2303      	movs	r3, #3
 8019e0e:	e004      	b.n	8019e1a <USBD_CDC_SetRxBuffer+0x2e>
 8019e10:	68fb      	ldr	r3, [r7, #12]
 8019e12:	683a      	ldr	r2, [r7, #0]
 8019e14:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8019e18:	2300      	movs	r3, #0
 8019e1a:	4618      	mov	r0, r3
 8019e1c:	3714      	adds	r7, #20
 8019e1e:	46bd      	mov	sp, r7
 8019e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e24:	4770      	bx	lr
	...

08019e28 <USBD_CDC_ReceivePacket>:
 8019e28:	b580      	push	{r7, lr}
 8019e2a:	b084      	sub	sp, #16
 8019e2c:	af00      	add	r7, sp, #0
 8019e2e:	6078      	str	r0, [r7, #4]
 8019e30:	687b      	ldr	r3, [r7, #4]
 8019e32:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019e36:	687b      	ldr	r3, [r7, #4]
 8019e38:	32b0      	adds	r2, #176	; 0xb0
 8019e3a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019e3e:	60fb      	str	r3, [r7, #12]
 8019e40:	687b      	ldr	r3, [r7, #4]
 8019e42:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019e46:	687b      	ldr	r3, [r7, #4]
 8019e48:	32b0      	adds	r2, #176	; 0xb0
 8019e4a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019e4e:	2b00      	cmp	r3, #0
 8019e50:	d101      	bne.n	8019e56 <USBD_CDC_ReceivePacket+0x2e>
 8019e52:	2303      	movs	r3, #3
 8019e54:	e018      	b.n	8019e88 <USBD_CDC_ReceivePacket+0x60>
 8019e56:	687b      	ldr	r3, [r7, #4]
 8019e58:	7c1b      	ldrb	r3, [r3, #16]
 8019e5a:	2b00      	cmp	r3, #0
 8019e5c:	d10a      	bne.n	8019e74 <USBD_CDC_ReceivePacket+0x4c>
 8019e5e:	4b0c      	ldr	r3, [pc, #48]	; (8019e90 <USBD_CDC_ReceivePacket+0x68>)
 8019e60:	7819      	ldrb	r1, [r3, #0]
 8019e62:	68fb      	ldr	r3, [r7, #12]
 8019e64:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019e68:	f44f 7300 	mov.w	r3, #512	; 0x200
 8019e6c:	6878      	ldr	r0, [r7, #4]
 8019e6e:	f005 f9dd 	bl	801f22c <USBD_LL_PrepareReceive>
 8019e72:	e008      	b.n	8019e86 <USBD_CDC_ReceivePacket+0x5e>
 8019e74:	4b06      	ldr	r3, [pc, #24]	; (8019e90 <USBD_CDC_ReceivePacket+0x68>)
 8019e76:	7819      	ldrb	r1, [r3, #0]
 8019e78:	68fb      	ldr	r3, [r7, #12]
 8019e7a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019e7e:	2340      	movs	r3, #64	; 0x40
 8019e80:	6878      	ldr	r0, [r7, #4]
 8019e82:	f005 f9d3 	bl	801f22c <USBD_LL_PrepareReceive>
 8019e86:	2300      	movs	r3, #0
 8019e88:	4618      	mov	r0, r3
 8019e8a:	3710      	adds	r7, #16
 8019e8c:	46bd      	mov	sp, r7
 8019e8e:	bd80      	pop	{r7, pc}
 8019e90:	200000e4 	.word	0x200000e4

08019e94 <USBD_Init>:
 8019e94:	b580      	push	{r7, lr}
 8019e96:	b086      	sub	sp, #24
 8019e98:	af00      	add	r7, sp, #0
 8019e9a:	60f8      	str	r0, [r7, #12]
 8019e9c:	60b9      	str	r1, [r7, #8]
 8019e9e:	4613      	mov	r3, r2
 8019ea0:	71fb      	strb	r3, [r7, #7]
 8019ea2:	68fb      	ldr	r3, [r7, #12]
 8019ea4:	2b00      	cmp	r3, #0
 8019ea6:	d101      	bne.n	8019eac <USBD_Init+0x18>
 8019ea8:	2303      	movs	r3, #3
 8019eaa:	e01f      	b.n	8019eec <USBD_Init+0x58>
 8019eac:	68fb      	ldr	r3, [r7, #12]
 8019eae:	2200      	movs	r2, #0
 8019eb0:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 8019eb4:	68fb      	ldr	r3, [r7, #12]
 8019eb6:	2200      	movs	r2, #0
 8019eb8:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
 8019ebc:	68fb      	ldr	r3, [r7, #12]
 8019ebe:	2200      	movs	r2, #0
 8019ec0:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 8019ec4:	68bb      	ldr	r3, [r7, #8]
 8019ec6:	2b00      	cmp	r3, #0
 8019ec8:	d003      	beq.n	8019ed2 <USBD_Init+0x3e>
 8019eca:	68fb      	ldr	r3, [r7, #12]
 8019ecc:	68ba      	ldr	r2, [r7, #8]
 8019ece:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
 8019ed2:	68fb      	ldr	r3, [r7, #12]
 8019ed4:	2201      	movs	r2, #1
 8019ed6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 8019eda:	68fb      	ldr	r3, [r7, #12]
 8019edc:	79fa      	ldrb	r2, [r7, #7]
 8019ede:	701a      	strb	r2, [r3, #0]
 8019ee0:	68f8      	ldr	r0, [r7, #12]
 8019ee2:	f005 f84d 	bl	801ef80 <USBD_LL_Init>
 8019ee6:	4603      	mov	r3, r0
 8019ee8:	75fb      	strb	r3, [r7, #23]
 8019eea:	7dfb      	ldrb	r3, [r7, #23]
 8019eec:	4618      	mov	r0, r3
 8019eee:	3718      	adds	r7, #24
 8019ef0:	46bd      	mov	sp, r7
 8019ef2:	bd80      	pop	{r7, pc}

08019ef4 <USBD_RegisterClass>:
 8019ef4:	b580      	push	{r7, lr}
 8019ef6:	b084      	sub	sp, #16
 8019ef8:	af00      	add	r7, sp, #0
 8019efa:	6078      	str	r0, [r7, #4]
 8019efc:	6039      	str	r1, [r7, #0]
 8019efe:	2300      	movs	r3, #0
 8019f00:	81fb      	strh	r3, [r7, #14]
 8019f02:	683b      	ldr	r3, [r7, #0]
 8019f04:	2b00      	cmp	r3, #0
 8019f06:	d101      	bne.n	8019f0c <USBD_RegisterClass+0x18>
 8019f08:	2303      	movs	r3, #3
 8019f0a:	e025      	b.n	8019f58 <USBD_RegisterClass+0x64>
 8019f0c:	687b      	ldr	r3, [r7, #4]
 8019f0e:	683a      	ldr	r2, [r7, #0]
 8019f10:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 8019f14:	687b      	ldr	r3, [r7, #4]
 8019f16:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019f1a:	687b      	ldr	r3, [r7, #4]
 8019f1c:	32ae      	adds	r2, #174	; 0xae
 8019f1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019f22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f24:	2b00      	cmp	r3, #0
 8019f26:	d00f      	beq.n	8019f48 <USBD_RegisterClass+0x54>
 8019f28:	687b      	ldr	r3, [r7, #4]
 8019f2a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019f2e:	687b      	ldr	r3, [r7, #4]
 8019f30:	32ae      	adds	r2, #174	; 0xae
 8019f32:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019f36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f38:	f107 020e 	add.w	r2, r7, #14
 8019f3c:	4610      	mov	r0, r2
 8019f3e:	4798      	blx	r3
 8019f40:	4602      	mov	r2, r0
 8019f42:	687b      	ldr	r3, [r7, #4]
 8019f44:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 8019f48:	687b      	ldr	r3, [r7, #4]
 8019f4a:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 8019f4e:	1c5a      	adds	r2, r3, #1
 8019f50:	687b      	ldr	r3, [r7, #4]
 8019f52:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
 8019f56:	2300      	movs	r3, #0
 8019f58:	4618      	mov	r0, r3
 8019f5a:	3710      	adds	r7, #16
 8019f5c:	46bd      	mov	sp, r7
 8019f5e:	bd80      	pop	{r7, pc}

08019f60 <USBD_Start>:
 8019f60:	b580      	push	{r7, lr}
 8019f62:	b082      	sub	sp, #8
 8019f64:	af00      	add	r7, sp, #0
 8019f66:	6078      	str	r0, [r7, #4]
 8019f68:	6878      	ldr	r0, [r7, #4]
 8019f6a:	f005 f855 	bl	801f018 <USBD_LL_Start>
 8019f6e:	4603      	mov	r3, r0
 8019f70:	4618      	mov	r0, r3
 8019f72:	3708      	adds	r7, #8
 8019f74:	46bd      	mov	sp, r7
 8019f76:	bd80      	pop	{r7, pc}

08019f78 <USBD_RunTestMode>:
 8019f78:	b480      	push	{r7}
 8019f7a:	b083      	sub	sp, #12
 8019f7c:	af00      	add	r7, sp, #0
 8019f7e:	6078      	str	r0, [r7, #4]
 8019f80:	2300      	movs	r3, #0
 8019f82:	4618      	mov	r0, r3
 8019f84:	370c      	adds	r7, #12
 8019f86:	46bd      	mov	sp, r7
 8019f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019f8c:	4770      	bx	lr

08019f8e <USBD_SetClassConfig>:
 8019f8e:	b580      	push	{r7, lr}
 8019f90:	b084      	sub	sp, #16
 8019f92:	af00      	add	r7, sp, #0
 8019f94:	6078      	str	r0, [r7, #4]
 8019f96:	460b      	mov	r3, r1
 8019f98:	70fb      	strb	r3, [r7, #3]
 8019f9a:	2300      	movs	r3, #0
 8019f9c:	73fb      	strb	r3, [r7, #15]
 8019f9e:	687b      	ldr	r3, [r7, #4]
 8019fa0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8019fa4:	2b00      	cmp	r3, #0
 8019fa6:	d009      	beq.n	8019fbc <USBD_SetClassConfig+0x2e>
 8019fa8:	687b      	ldr	r3, [r7, #4]
 8019faa:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8019fae:	681b      	ldr	r3, [r3, #0]
 8019fb0:	78fa      	ldrb	r2, [r7, #3]
 8019fb2:	4611      	mov	r1, r2
 8019fb4:	6878      	ldr	r0, [r7, #4]
 8019fb6:	4798      	blx	r3
 8019fb8:	4603      	mov	r3, r0
 8019fba:	73fb      	strb	r3, [r7, #15]
 8019fbc:	7bfb      	ldrb	r3, [r7, #15]
 8019fbe:	4618      	mov	r0, r3
 8019fc0:	3710      	adds	r7, #16
 8019fc2:	46bd      	mov	sp, r7
 8019fc4:	bd80      	pop	{r7, pc}

08019fc6 <USBD_ClrClassConfig>:
 8019fc6:	b580      	push	{r7, lr}
 8019fc8:	b084      	sub	sp, #16
 8019fca:	af00      	add	r7, sp, #0
 8019fcc:	6078      	str	r0, [r7, #4]
 8019fce:	460b      	mov	r3, r1
 8019fd0:	70fb      	strb	r3, [r7, #3]
 8019fd2:	2300      	movs	r3, #0
 8019fd4:	73fb      	strb	r3, [r7, #15]
 8019fd6:	687b      	ldr	r3, [r7, #4]
 8019fd8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8019fdc:	685b      	ldr	r3, [r3, #4]
 8019fde:	78fa      	ldrb	r2, [r7, #3]
 8019fe0:	4611      	mov	r1, r2
 8019fe2:	6878      	ldr	r0, [r7, #4]
 8019fe4:	4798      	blx	r3
 8019fe6:	4603      	mov	r3, r0
 8019fe8:	2b00      	cmp	r3, #0
 8019fea:	d001      	beq.n	8019ff0 <USBD_ClrClassConfig+0x2a>
 8019fec:	2303      	movs	r3, #3
 8019fee:	73fb      	strb	r3, [r7, #15]
 8019ff0:	7bfb      	ldrb	r3, [r7, #15]
 8019ff2:	4618      	mov	r0, r3
 8019ff4:	3710      	adds	r7, #16
 8019ff6:	46bd      	mov	sp, r7
 8019ff8:	bd80      	pop	{r7, pc}

08019ffa <USBD_LL_SetupStage>:
 8019ffa:	b580      	push	{r7, lr}
 8019ffc:	b084      	sub	sp, #16
 8019ffe:	af00      	add	r7, sp, #0
 801a000:	6078      	str	r0, [r7, #4]
 801a002:	6039      	str	r1, [r7, #0]
 801a004:	687b      	ldr	r3, [r7, #4]
 801a006:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a00a:	6839      	ldr	r1, [r7, #0]
 801a00c:	4618      	mov	r0, r3
 801a00e:	f001 f908 	bl	801b222 <USBD_ParseSetupRequest>
 801a012:	687b      	ldr	r3, [r7, #4]
 801a014:	2201      	movs	r2, #1
 801a016:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801a01a:	687b      	ldr	r3, [r7, #4]
 801a01c:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 801a020:	461a      	mov	r2, r3
 801a022:	687b      	ldr	r3, [r7, #4]
 801a024:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 801a028:	687b      	ldr	r3, [r7, #4]
 801a02a:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a02e:	f003 031f 	and.w	r3, r3, #31
 801a032:	2b02      	cmp	r3, #2
 801a034:	d01a      	beq.n	801a06c <USBD_LL_SetupStage+0x72>
 801a036:	2b02      	cmp	r3, #2
 801a038:	d822      	bhi.n	801a080 <USBD_LL_SetupStage+0x86>
 801a03a:	2b00      	cmp	r3, #0
 801a03c:	d002      	beq.n	801a044 <USBD_LL_SetupStage+0x4a>
 801a03e:	2b01      	cmp	r3, #1
 801a040:	d00a      	beq.n	801a058 <USBD_LL_SetupStage+0x5e>
 801a042:	e01d      	b.n	801a080 <USBD_LL_SetupStage+0x86>
 801a044:	687b      	ldr	r3, [r7, #4]
 801a046:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a04a:	4619      	mov	r1, r3
 801a04c:	6878      	ldr	r0, [r7, #4]
 801a04e:	f000 fb5f 	bl	801a710 <USBD_StdDevReq>
 801a052:	4603      	mov	r3, r0
 801a054:	73fb      	strb	r3, [r7, #15]
 801a056:	e020      	b.n	801a09a <USBD_LL_SetupStage+0xa0>
 801a058:	687b      	ldr	r3, [r7, #4]
 801a05a:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a05e:	4619      	mov	r1, r3
 801a060:	6878      	ldr	r0, [r7, #4]
 801a062:	f000 fbc7 	bl	801a7f4 <USBD_StdItfReq>
 801a066:	4603      	mov	r3, r0
 801a068:	73fb      	strb	r3, [r7, #15]
 801a06a:	e016      	b.n	801a09a <USBD_LL_SetupStage+0xa0>
 801a06c:	687b      	ldr	r3, [r7, #4]
 801a06e:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a072:	4619      	mov	r1, r3
 801a074:	6878      	ldr	r0, [r7, #4]
 801a076:	f000 fc29 	bl	801a8cc <USBD_StdEPReq>
 801a07a:	4603      	mov	r3, r0
 801a07c:	73fb      	strb	r3, [r7, #15]
 801a07e:	e00c      	b.n	801a09a <USBD_LL_SetupStage+0xa0>
 801a080:	687b      	ldr	r3, [r7, #4]
 801a082:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a086:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 801a08a:	b2db      	uxtb	r3, r3
 801a08c:	4619      	mov	r1, r3
 801a08e:	6878      	ldr	r0, [r7, #4]
 801a090:	f005 f822 	bl	801f0d8 <USBD_LL_StallEP>
 801a094:	4603      	mov	r3, r0
 801a096:	73fb      	strb	r3, [r7, #15]
 801a098:	bf00      	nop
 801a09a:	7bfb      	ldrb	r3, [r7, #15]
 801a09c:	4618      	mov	r0, r3
 801a09e:	3710      	adds	r7, #16
 801a0a0:	46bd      	mov	sp, r7
 801a0a2:	bd80      	pop	{r7, pc}

0801a0a4 <USBD_LL_DataOutStage>:
 801a0a4:	b580      	push	{r7, lr}
 801a0a6:	b086      	sub	sp, #24
 801a0a8:	af00      	add	r7, sp, #0
 801a0aa:	60f8      	str	r0, [r7, #12]
 801a0ac:	460b      	mov	r3, r1
 801a0ae:	607a      	str	r2, [r7, #4]
 801a0b0:	72fb      	strb	r3, [r7, #11]
 801a0b2:	2300      	movs	r3, #0
 801a0b4:	75fb      	strb	r3, [r7, #23]
 801a0b6:	7afb      	ldrb	r3, [r7, #11]
 801a0b8:	2b00      	cmp	r3, #0
 801a0ba:	d16e      	bne.n	801a19a <USBD_LL_DataOutStage+0xf6>
 801a0bc:	68fb      	ldr	r3, [r7, #12]
 801a0be:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 801a0c2:	613b      	str	r3, [r7, #16]
 801a0c4:	68fb      	ldr	r3, [r7, #12]
 801a0c6:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 801a0ca:	2b03      	cmp	r3, #3
 801a0cc:	f040 8098 	bne.w	801a200 <USBD_LL_DataOutStage+0x15c>
 801a0d0:	693b      	ldr	r3, [r7, #16]
 801a0d2:	689a      	ldr	r2, [r3, #8]
 801a0d4:	693b      	ldr	r3, [r7, #16]
 801a0d6:	68db      	ldr	r3, [r3, #12]
 801a0d8:	429a      	cmp	r2, r3
 801a0da:	d913      	bls.n	801a104 <USBD_LL_DataOutStage+0x60>
 801a0dc:	693b      	ldr	r3, [r7, #16]
 801a0de:	689a      	ldr	r2, [r3, #8]
 801a0e0:	693b      	ldr	r3, [r7, #16]
 801a0e2:	68db      	ldr	r3, [r3, #12]
 801a0e4:	1ad2      	subs	r2, r2, r3
 801a0e6:	693b      	ldr	r3, [r7, #16]
 801a0e8:	609a      	str	r2, [r3, #8]
 801a0ea:	693b      	ldr	r3, [r7, #16]
 801a0ec:	68da      	ldr	r2, [r3, #12]
 801a0ee:	693b      	ldr	r3, [r7, #16]
 801a0f0:	689b      	ldr	r3, [r3, #8]
 801a0f2:	4293      	cmp	r3, r2
 801a0f4:	bf28      	it	cs
 801a0f6:	4613      	movcs	r3, r2
 801a0f8:	461a      	mov	r2, r3
 801a0fa:	6879      	ldr	r1, [r7, #4]
 801a0fc:	68f8      	ldr	r0, [r7, #12]
 801a0fe:	f001 f984 	bl	801b40a <USBD_CtlContinueRx>
 801a102:	e07d      	b.n	801a200 <USBD_LL_DataOutStage+0x15c>
 801a104:	68fb      	ldr	r3, [r7, #12]
 801a106:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a10a:	f003 031f 	and.w	r3, r3, #31
 801a10e:	2b02      	cmp	r3, #2
 801a110:	d014      	beq.n	801a13c <USBD_LL_DataOutStage+0x98>
 801a112:	2b02      	cmp	r3, #2
 801a114:	d81d      	bhi.n	801a152 <USBD_LL_DataOutStage+0xae>
 801a116:	2b00      	cmp	r3, #0
 801a118:	d002      	beq.n	801a120 <USBD_LL_DataOutStage+0x7c>
 801a11a:	2b01      	cmp	r3, #1
 801a11c:	d003      	beq.n	801a126 <USBD_LL_DataOutStage+0x82>
 801a11e:	e018      	b.n	801a152 <USBD_LL_DataOutStage+0xae>
 801a120:	2300      	movs	r3, #0
 801a122:	75bb      	strb	r3, [r7, #22]
 801a124:	e018      	b.n	801a158 <USBD_LL_DataOutStage+0xb4>
 801a126:	68fb      	ldr	r3, [r7, #12]
 801a128:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 801a12c:	b2db      	uxtb	r3, r3
 801a12e:	4619      	mov	r1, r3
 801a130:	68f8      	ldr	r0, [r7, #12]
 801a132:	f000 fa5e 	bl	801a5f2 <USBD_CoreFindIF>
 801a136:	4603      	mov	r3, r0
 801a138:	75bb      	strb	r3, [r7, #22]
 801a13a:	e00d      	b.n	801a158 <USBD_LL_DataOutStage+0xb4>
 801a13c:	68fb      	ldr	r3, [r7, #12]
 801a13e:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 801a142:	b2db      	uxtb	r3, r3
 801a144:	4619      	mov	r1, r3
 801a146:	68f8      	ldr	r0, [r7, #12]
 801a148:	f000 fa60 	bl	801a60c <USBD_CoreFindEP>
 801a14c:	4603      	mov	r3, r0
 801a14e:	75bb      	strb	r3, [r7, #22]
 801a150:	e002      	b.n	801a158 <USBD_LL_DataOutStage+0xb4>
 801a152:	2300      	movs	r3, #0
 801a154:	75bb      	strb	r3, [r7, #22]
 801a156:	bf00      	nop
 801a158:	7dbb      	ldrb	r3, [r7, #22]
 801a15a:	2b00      	cmp	r3, #0
 801a15c:	d119      	bne.n	801a192 <USBD_LL_DataOutStage+0xee>
 801a15e:	68fb      	ldr	r3, [r7, #12]
 801a160:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a164:	b2db      	uxtb	r3, r3
 801a166:	2b03      	cmp	r3, #3
 801a168:	d113      	bne.n	801a192 <USBD_LL_DataOutStage+0xee>
 801a16a:	7dba      	ldrb	r2, [r7, #22]
 801a16c:	68fb      	ldr	r3, [r7, #12]
 801a16e:	32ae      	adds	r2, #174	; 0xae
 801a170:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a174:	691b      	ldr	r3, [r3, #16]
 801a176:	2b00      	cmp	r3, #0
 801a178:	d00b      	beq.n	801a192 <USBD_LL_DataOutStage+0xee>
 801a17a:	7dba      	ldrb	r2, [r7, #22]
 801a17c:	68fb      	ldr	r3, [r7, #12]
 801a17e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a182:	7dba      	ldrb	r2, [r7, #22]
 801a184:	68fb      	ldr	r3, [r7, #12]
 801a186:	32ae      	adds	r2, #174	; 0xae
 801a188:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a18c:	691b      	ldr	r3, [r3, #16]
 801a18e:	68f8      	ldr	r0, [r7, #12]
 801a190:	4798      	blx	r3
 801a192:	68f8      	ldr	r0, [r7, #12]
 801a194:	f001 f94a 	bl	801b42c <USBD_CtlSendStatus>
 801a198:	e032      	b.n	801a200 <USBD_LL_DataOutStage+0x15c>
 801a19a:	7afb      	ldrb	r3, [r7, #11]
 801a19c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801a1a0:	b2db      	uxtb	r3, r3
 801a1a2:	4619      	mov	r1, r3
 801a1a4:	68f8      	ldr	r0, [r7, #12]
 801a1a6:	f000 fa31 	bl	801a60c <USBD_CoreFindEP>
 801a1aa:	4603      	mov	r3, r0
 801a1ac:	75bb      	strb	r3, [r7, #22]
 801a1ae:	7dbb      	ldrb	r3, [r7, #22]
 801a1b0:	2bff      	cmp	r3, #255	; 0xff
 801a1b2:	d025      	beq.n	801a200 <USBD_LL_DataOutStage+0x15c>
 801a1b4:	7dbb      	ldrb	r3, [r7, #22]
 801a1b6:	2b00      	cmp	r3, #0
 801a1b8:	d122      	bne.n	801a200 <USBD_LL_DataOutStage+0x15c>
 801a1ba:	68fb      	ldr	r3, [r7, #12]
 801a1bc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a1c0:	b2db      	uxtb	r3, r3
 801a1c2:	2b03      	cmp	r3, #3
 801a1c4:	d117      	bne.n	801a1f6 <USBD_LL_DataOutStage+0x152>
 801a1c6:	7dba      	ldrb	r2, [r7, #22]
 801a1c8:	68fb      	ldr	r3, [r7, #12]
 801a1ca:	32ae      	adds	r2, #174	; 0xae
 801a1cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a1d0:	699b      	ldr	r3, [r3, #24]
 801a1d2:	2b00      	cmp	r3, #0
 801a1d4:	d00f      	beq.n	801a1f6 <USBD_LL_DataOutStage+0x152>
 801a1d6:	7dba      	ldrb	r2, [r7, #22]
 801a1d8:	68fb      	ldr	r3, [r7, #12]
 801a1da:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a1de:	7dba      	ldrb	r2, [r7, #22]
 801a1e0:	68fb      	ldr	r3, [r7, #12]
 801a1e2:	32ae      	adds	r2, #174	; 0xae
 801a1e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a1e8:	699b      	ldr	r3, [r3, #24]
 801a1ea:	7afa      	ldrb	r2, [r7, #11]
 801a1ec:	4611      	mov	r1, r2
 801a1ee:	68f8      	ldr	r0, [r7, #12]
 801a1f0:	4798      	blx	r3
 801a1f2:	4603      	mov	r3, r0
 801a1f4:	75fb      	strb	r3, [r7, #23]
 801a1f6:	7dfb      	ldrb	r3, [r7, #23]
 801a1f8:	2b00      	cmp	r3, #0
 801a1fa:	d001      	beq.n	801a200 <USBD_LL_DataOutStage+0x15c>
 801a1fc:	7dfb      	ldrb	r3, [r7, #23]
 801a1fe:	e000      	b.n	801a202 <USBD_LL_DataOutStage+0x15e>
 801a200:	2300      	movs	r3, #0
 801a202:	4618      	mov	r0, r3
 801a204:	3718      	adds	r7, #24
 801a206:	46bd      	mov	sp, r7
 801a208:	bd80      	pop	{r7, pc}

0801a20a <USBD_LL_DataInStage>:
 801a20a:	b580      	push	{r7, lr}
 801a20c:	b086      	sub	sp, #24
 801a20e:	af00      	add	r7, sp, #0
 801a210:	60f8      	str	r0, [r7, #12]
 801a212:	460b      	mov	r3, r1
 801a214:	607a      	str	r2, [r7, #4]
 801a216:	72fb      	strb	r3, [r7, #11]
 801a218:	7afb      	ldrb	r3, [r7, #11]
 801a21a:	2b00      	cmp	r3, #0
 801a21c:	d16f      	bne.n	801a2fe <USBD_LL_DataInStage+0xf4>
 801a21e:	68fb      	ldr	r3, [r7, #12]
 801a220:	3314      	adds	r3, #20
 801a222:	613b      	str	r3, [r7, #16]
 801a224:	68fb      	ldr	r3, [r7, #12]
 801a226:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 801a22a:	2b02      	cmp	r3, #2
 801a22c:	d15a      	bne.n	801a2e4 <USBD_LL_DataInStage+0xda>
 801a22e:	693b      	ldr	r3, [r7, #16]
 801a230:	689a      	ldr	r2, [r3, #8]
 801a232:	693b      	ldr	r3, [r7, #16]
 801a234:	68db      	ldr	r3, [r3, #12]
 801a236:	429a      	cmp	r2, r3
 801a238:	d914      	bls.n	801a264 <USBD_LL_DataInStage+0x5a>
 801a23a:	693b      	ldr	r3, [r7, #16]
 801a23c:	689a      	ldr	r2, [r3, #8]
 801a23e:	693b      	ldr	r3, [r7, #16]
 801a240:	68db      	ldr	r3, [r3, #12]
 801a242:	1ad2      	subs	r2, r2, r3
 801a244:	693b      	ldr	r3, [r7, #16]
 801a246:	609a      	str	r2, [r3, #8]
 801a248:	693b      	ldr	r3, [r7, #16]
 801a24a:	689b      	ldr	r3, [r3, #8]
 801a24c:	461a      	mov	r2, r3
 801a24e:	6879      	ldr	r1, [r7, #4]
 801a250:	68f8      	ldr	r0, [r7, #12]
 801a252:	f001 f8ac 	bl	801b3ae <USBD_CtlContinueSendData>
 801a256:	2300      	movs	r3, #0
 801a258:	2200      	movs	r2, #0
 801a25a:	2100      	movs	r1, #0
 801a25c:	68f8      	ldr	r0, [r7, #12]
 801a25e:	f004 ffe5 	bl	801f22c <USBD_LL_PrepareReceive>
 801a262:	e03f      	b.n	801a2e4 <USBD_LL_DataInStage+0xda>
 801a264:	693b      	ldr	r3, [r7, #16]
 801a266:	68da      	ldr	r2, [r3, #12]
 801a268:	693b      	ldr	r3, [r7, #16]
 801a26a:	689b      	ldr	r3, [r3, #8]
 801a26c:	429a      	cmp	r2, r3
 801a26e:	d11c      	bne.n	801a2aa <USBD_LL_DataInStage+0xa0>
 801a270:	693b      	ldr	r3, [r7, #16]
 801a272:	685a      	ldr	r2, [r3, #4]
 801a274:	693b      	ldr	r3, [r7, #16]
 801a276:	68db      	ldr	r3, [r3, #12]
 801a278:	429a      	cmp	r2, r3
 801a27a:	d316      	bcc.n	801a2aa <USBD_LL_DataInStage+0xa0>
 801a27c:	693b      	ldr	r3, [r7, #16]
 801a27e:	685a      	ldr	r2, [r3, #4]
 801a280:	68fb      	ldr	r3, [r7, #12]
 801a282:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
 801a286:	429a      	cmp	r2, r3
 801a288:	d20f      	bcs.n	801a2aa <USBD_LL_DataInStage+0xa0>
 801a28a:	2200      	movs	r2, #0
 801a28c:	2100      	movs	r1, #0
 801a28e:	68f8      	ldr	r0, [r7, #12]
 801a290:	f001 f88d 	bl	801b3ae <USBD_CtlContinueSendData>
 801a294:	68fb      	ldr	r3, [r7, #12]
 801a296:	2200      	movs	r2, #0
 801a298:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 801a29c:	2300      	movs	r3, #0
 801a29e:	2200      	movs	r2, #0
 801a2a0:	2100      	movs	r1, #0
 801a2a2:	68f8      	ldr	r0, [r7, #12]
 801a2a4:	f004 ffc2 	bl	801f22c <USBD_LL_PrepareReceive>
 801a2a8:	e01c      	b.n	801a2e4 <USBD_LL_DataInStage+0xda>
 801a2aa:	68fb      	ldr	r3, [r7, #12]
 801a2ac:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a2b0:	b2db      	uxtb	r3, r3
 801a2b2:	2b03      	cmp	r3, #3
 801a2b4:	d10f      	bne.n	801a2d6 <USBD_LL_DataInStage+0xcc>
 801a2b6:	68fb      	ldr	r3, [r7, #12]
 801a2b8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a2bc:	68db      	ldr	r3, [r3, #12]
 801a2be:	2b00      	cmp	r3, #0
 801a2c0:	d009      	beq.n	801a2d6 <USBD_LL_DataInStage+0xcc>
 801a2c2:	68fb      	ldr	r3, [r7, #12]
 801a2c4:	2200      	movs	r2, #0
 801a2c6:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a2ca:	68fb      	ldr	r3, [r7, #12]
 801a2cc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a2d0:	68db      	ldr	r3, [r3, #12]
 801a2d2:	68f8      	ldr	r0, [r7, #12]
 801a2d4:	4798      	blx	r3
 801a2d6:	2180      	movs	r1, #128	; 0x80
 801a2d8:	68f8      	ldr	r0, [r7, #12]
 801a2da:	f004 fefd 	bl	801f0d8 <USBD_LL_StallEP>
 801a2de:	68f8      	ldr	r0, [r7, #12]
 801a2e0:	f001 f8b7 	bl	801b452 <USBD_CtlReceiveStatus>
 801a2e4:	68fb      	ldr	r3, [r7, #12]
 801a2e6:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 801a2ea:	2b00      	cmp	r3, #0
 801a2ec:	d03a      	beq.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a2ee:	68f8      	ldr	r0, [r7, #12]
 801a2f0:	f7ff fe42 	bl	8019f78 <USBD_RunTestMode>
 801a2f4:	68fb      	ldr	r3, [r7, #12]
 801a2f6:	2200      	movs	r2, #0
 801a2f8:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801a2fc:	e032      	b.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a2fe:	7afb      	ldrb	r3, [r7, #11]
 801a300:	f063 037f 	orn	r3, r3, #127	; 0x7f
 801a304:	b2db      	uxtb	r3, r3
 801a306:	4619      	mov	r1, r3
 801a308:	68f8      	ldr	r0, [r7, #12]
 801a30a:	f000 f97f 	bl	801a60c <USBD_CoreFindEP>
 801a30e:	4603      	mov	r3, r0
 801a310:	75fb      	strb	r3, [r7, #23]
 801a312:	7dfb      	ldrb	r3, [r7, #23]
 801a314:	2bff      	cmp	r3, #255	; 0xff
 801a316:	d025      	beq.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a318:	7dfb      	ldrb	r3, [r7, #23]
 801a31a:	2b00      	cmp	r3, #0
 801a31c:	d122      	bne.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a31e:	68fb      	ldr	r3, [r7, #12]
 801a320:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a324:	b2db      	uxtb	r3, r3
 801a326:	2b03      	cmp	r3, #3
 801a328:	d11c      	bne.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a32a:	7dfa      	ldrb	r2, [r7, #23]
 801a32c:	68fb      	ldr	r3, [r7, #12]
 801a32e:	32ae      	adds	r2, #174	; 0xae
 801a330:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a334:	695b      	ldr	r3, [r3, #20]
 801a336:	2b00      	cmp	r3, #0
 801a338:	d014      	beq.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a33a:	7dfa      	ldrb	r2, [r7, #23]
 801a33c:	68fb      	ldr	r3, [r7, #12]
 801a33e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a342:	7dfa      	ldrb	r2, [r7, #23]
 801a344:	68fb      	ldr	r3, [r7, #12]
 801a346:	32ae      	adds	r2, #174	; 0xae
 801a348:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a34c:	695b      	ldr	r3, [r3, #20]
 801a34e:	7afa      	ldrb	r2, [r7, #11]
 801a350:	4611      	mov	r1, r2
 801a352:	68f8      	ldr	r0, [r7, #12]
 801a354:	4798      	blx	r3
 801a356:	4603      	mov	r3, r0
 801a358:	75bb      	strb	r3, [r7, #22]
 801a35a:	7dbb      	ldrb	r3, [r7, #22]
 801a35c:	2b00      	cmp	r3, #0
 801a35e:	d001      	beq.n	801a364 <USBD_LL_DataInStage+0x15a>
 801a360:	7dbb      	ldrb	r3, [r7, #22]
 801a362:	e000      	b.n	801a366 <USBD_LL_DataInStage+0x15c>
 801a364:	2300      	movs	r3, #0
 801a366:	4618      	mov	r0, r3
 801a368:	3718      	adds	r7, #24
 801a36a:	46bd      	mov	sp, r7
 801a36c:	bd80      	pop	{r7, pc}

0801a36e <USBD_LL_Reset>:
 801a36e:	b580      	push	{r7, lr}
 801a370:	b084      	sub	sp, #16
 801a372:	af00      	add	r7, sp, #0
 801a374:	6078      	str	r0, [r7, #4]
 801a376:	2300      	movs	r3, #0
 801a378:	73fb      	strb	r3, [r7, #15]
 801a37a:	687b      	ldr	r3, [r7, #4]
 801a37c:	2201      	movs	r2, #1
 801a37e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a382:	687b      	ldr	r3, [r7, #4]
 801a384:	2200      	movs	r2, #0
 801a386:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801a38a:	687b      	ldr	r3, [r7, #4]
 801a38c:	2200      	movs	r2, #0
 801a38e:	605a      	str	r2, [r3, #4]
 801a390:	687b      	ldr	r3, [r7, #4]
 801a392:	2200      	movs	r2, #0
 801a394:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801a398:	687b      	ldr	r3, [r7, #4]
 801a39a:	2200      	movs	r2, #0
 801a39c:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801a3a0:	687b      	ldr	r3, [r7, #4]
 801a3a2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a3a6:	2b00      	cmp	r3, #0
 801a3a8:	d014      	beq.n	801a3d4 <USBD_LL_Reset+0x66>
 801a3aa:	687b      	ldr	r3, [r7, #4]
 801a3ac:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a3b0:	685b      	ldr	r3, [r3, #4]
 801a3b2:	2b00      	cmp	r3, #0
 801a3b4:	d00e      	beq.n	801a3d4 <USBD_LL_Reset+0x66>
 801a3b6:	687b      	ldr	r3, [r7, #4]
 801a3b8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a3bc:	685b      	ldr	r3, [r3, #4]
 801a3be:	687a      	ldr	r2, [r7, #4]
 801a3c0:	6852      	ldr	r2, [r2, #4]
 801a3c2:	b2d2      	uxtb	r2, r2
 801a3c4:	4611      	mov	r1, r2
 801a3c6:	6878      	ldr	r0, [r7, #4]
 801a3c8:	4798      	blx	r3
 801a3ca:	4603      	mov	r3, r0
 801a3cc:	2b00      	cmp	r3, #0
 801a3ce:	d001      	beq.n	801a3d4 <USBD_LL_Reset+0x66>
 801a3d0:	2303      	movs	r3, #3
 801a3d2:	73fb      	strb	r3, [r7, #15]
 801a3d4:	2340      	movs	r3, #64	; 0x40
 801a3d6:	2200      	movs	r2, #0
 801a3d8:	2100      	movs	r1, #0
 801a3da:	6878      	ldr	r0, [r7, #4]
 801a3dc:	f004 fe37 	bl	801f04e <USBD_LL_OpenEP>
 801a3e0:	687b      	ldr	r3, [r7, #4]
 801a3e2:	2201      	movs	r2, #1
 801a3e4:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 801a3e8:	687b      	ldr	r3, [r7, #4]
 801a3ea:	2240      	movs	r2, #64	; 0x40
 801a3ec:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160
 801a3f0:	2340      	movs	r3, #64	; 0x40
 801a3f2:	2200      	movs	r2, #0
 801a3f4:	2180      	movs	r1, #128	; 0x80
 801a3f6:	6878      	ldr	r0, [r7, #4]
 801a3f8:	f004 fe29 	bl	801f04e <USBD_LL_OpenEP>
 801a3fc:	687b      	ldr	r3, [r7, #4]
 801a3fe:	2201      	movs	r2, #1
 801a400:	849a      	strh	r2, [r3, #36]	; 0x24
 801a402:	687b      	ldr	r3, [r7, #4]
 801a404:	2240      	movs	r2, #64	; 0x40
 801a406:	621a      	str	r2, [r3, #32]
 801a408:	7bfb      	ldrb	r3, [r7, #15]
 801a40a:	4618      	mov	r0, r3
 801a40c:	3710      	adds	r7, #16
 801a40e:	46bd      	mov	sp, r7
 801a410:	bd80      	pop	{r7, pc}

0801a412 <USBD_LL_SetSpeed>:
 801a412:	b480      	push	{r7}
 801a414:	b083      	sub	sp, #12
 801a416:	af00      	add	r7, sp, #0
 801a418:	6078      	str	r0, [r7, #4]
 801a41a:	460b      	mov	r3, r1
 801a41c:	70fb      	strb	r3, [r7, #3]
 801a41e:	687b      	ldr	r3, [r7, #4]
 801a420:	78fa      	ldrb	r2, [r7, #3]
 801a422:	741a      	strb	r2, [r3, #16]
 801a424:	2300      	movs	r3, #0
 801a426:	4618      	mov	r0, r3
 801a428:	370c      	adds	r7, #12
 801a42a:	46bd      	mov	sp, r7
 801a42c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a430:	4770      	bx	lr

0801a432 <USBD_LL_Suspend>:
 801a432:	b480      	push	{r7}
 801a434:	b083      	sub	sp, #12
 801a436:	af00      	add	r7, sp, #0
 801a438:	6078      	str	r0, [r7, #4]
 801a43a:	687b      	ldr	r3, [r7, #4]
 801a43c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a440:	b2da      	uxtb	r2, r3
 801a442:	687b      	ldr	r3, [r7, #4]
 801a444:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
 801a448:	687b      	ldr	r3, [r7, #4]
 801a44a:	2204      	movs	r2, #4
 801a44c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a450:	2300      	movs	r3, #0
 801a452:	4618      	mov	r0, r3
 801a454:	370c      	adds	r7, #12
 801a456:	46bd      	mov	sp, r7
 801a458:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a45c:	4770      	bx	lr

0801a45e <USBD_LL_Resume>:
 801a45e:	b480      	push	{r7}
 801a460:	b083      	sub	sp, #12
 801a462:	af00      	add	r7, sp, #0
 801a464:	6078      	str	r0, [r7, #4]
 801a466:	687b      	ldr	r3, [r7, #4]
 801a468:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a46c:	b2db      	uxtb	r3, r3
 801a46e:	2b04      	cmp	r3, #4
 801a470:	d106      	bne.n	801a480 <USBD_LL_Resume+0x22>
 801a472:	687b      	ldr	r3, [r7, #4]
 801a474:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 801a478:	b2da      	uxtb	r2, r3
 801a47a:	687b      	ldr	r3, [r7, #4]
 801a47c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a480:	2300      	movs	r3, #0
 801a482:	4618      	mov	r0, r3
 801a484:	370c      	adds	r7, #12
 801a486:	46bd      	mov	sp, r7
 801a488:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a48c:	4770      	bx	lr

0801a48e <USBD_LL_SOF>:
 801a48e:	b580      	push	{r7, lr}
 801a490:	b082      	sub	sp, #8
 801a492:	af00      	add	r7, sp, #0
 801a494:	6078      	str	r0, [r7, #4]
 801a496:	687b      	ldr	r3, [r7, #4]
 801a498:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a49c:	b2db      	uxtb	r3, r3
 801a49e:	2b03      	cmp	r3, #3
 801a4a0:	d110      	bne.n	801a4c4 <USBD_LL_SOF+0x36>
 801a4a2:	687b      	ldr	r3, [r7, #4]
 801a4a4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a4a8:	2b00      	cmp	r3, #0
 801a4aa:	d00b      	beq.n	801a4c4 <USBD_LL_SOF+0x36>
 801a4ac:	687b      	ldr	r3, [r7, #4]
 801a4ae:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a4b2:	69db      	ldr	r3, [r3, #28]
 801a4b4:	2b00      	cmp	r3, #0
 801a4b6:	d005      	beq.n	801a4c4 <USBD_LL_SOF+0x36>
 801a4b8:	687b      	ldr	r3, [r7, #4]
 801a4ba:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a4be:	69db      	ldr	r3, [r3, #28]
 801a4c0:	6878      	ldr	r0, [r7, #4]
 801a4c2:	4798      	blx	r3
 801a4c4:	2300      	movs	r3, #0
 801a4c6:	4618      	mov	r0, r3
 801a4c8:	3708      	adds	r7, #8
 801a4ca:	46bd      	mov	sp, r7
 801a4cc:	bd80      	pop	{r7, pc}

0801a4ce <USBD_LL_IsoINIncomplete>:
 801a4ce:	b580      	push	{r7, lr}
 801a4d0:	b082      	sub	sp, #8
 801a4d2:	af00      	add	r7, sp, #0
 801a4d4:	6078      	str	r0, [r7, #4]
 801a4d6:	460b      	mov	r3, r1
 801a4d8:	70fb      	strb	r3, [r7, #3]
 801a4da:	687b      	ldr	r3, [r7, #4]
 801a4dc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a4e0:	687b      	ldr	r3, [r7, #4]
 801a4e2:	32ae      	adds	r2, #174	; 0xae
 801a4e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a4e8:	2b00      	cmp	r3, #0
 801a4ea:	d101      	bne.n	801a4f0 <USBD_LL_IsoINIncomplete+0x22>
 801a4ec:	2303      	movs	r3, #3
 801a4ee:	e01c      	b.n	801a52a <USBD_LL_IsoINIncomplete+0x5c>
 801a4f0:	687b      	ldr	r3, [r7, #4]
 801a4f2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a4f6:	b2db      	uxtb	r3, r3
 801a4f8:	2b03      	cmp	r3, #3
 801a4fa:	d115      	bne.n	801a528 <USBD_LL_IsoINIncomplete+0x5a>
 801a4fc:	687b      	ldr	r3, [r7, #4]
 801a4fe:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a502:	687b      	ldr	r3, [r7, #4]
 801a504:	32ae      	adds	r2, #174	; 0xae
 801a506:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a50a:	6a1b      	ldr	r3, [r3, #32]
 801a50c:	2b00      	cmp	r3, #0
 801a50e:	d00b      	beq.n	801a528 <USBD_LL_IsoINIncomplete+0x5a>
 801a510:	687b      	ldr	r3, [r7, #4]
 801a512:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a516:	687b      	ldr	r3, [r7, #4]
 801a518:	32ae      	adds	r2, #174	; 0xae
 801a51a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a51e:	6a1b      	ldr	r3, [r3, #32]
 801a520:	78fa      	ldrb	r2, [r7, #3]
 801a522:	4611      	mov	r1, r2
 801a524:	6878      	ldr	r0, [r7, #4]
 801a526:	4798      	blx	r3
 801a528:	2300      	movs	r3, #0
 801a52a:	4618      	mov	r0, r3
 801a52c:	3708      	adds	r7, #8
 801a52e:	46bd      	mov	sp, r7
 801a530:	bd80      	pop	{r7, pc}

0801a532 <USBD_LL_IsoOUTIncomplete>:
 801a532:	b580      	push	{r7, lr}
 801a534:	b082      	sub	sp, #8
 801a536:	af00      	add	r7, sp, #0
 801a538:	6078      	str	r0, [r7, #4]
 801a53a:	460b      	mov	r3, r1
 801a53c:	70fb      	strb	r3, [r7, #3]
 801a53e:	687b      	ldr	r3, [r7, #4]
 801a540:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a544:	687b      	ldr	r3, [r7, #4]
 801a546:	32ae      	adds	r2, #174	; 0xae
 801a548:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a54c:	2b00      	cmp	r3, #0
 801a54e:	d101      	bne.n	801a554 <USBD_LL_IsoOUTIncomplete+0x22>
 801a550:	2303      	movs	r3, #3
 801a552:	e01c      	b.n	801a58e <USBD_LL_IsoOUTIncomplete+0x5c>
 801a554:	687b      	ldr	r3, [r7, #4]
 801a556:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a55a:	b2db      	uxtb	r3, r3
 801a55c:	2b03      	cmp	r3, #3
 801a55e:	d115      	bne.n	801a58c <USBD_LL_IsoOUTIncomplete+0x5a>
 801a560:	687b      	ldr	r3, [r7, #4]
 801a562:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a566:	687b      	ldr	r3, [r7, #4]
 801a568:	32ae      	adds	r2, #174	; 0xae
 801a56a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a56e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801a570:	2b00      	cmp	r3, #0
 801a572:	d00b      	beq.n	801a58c <USBD_LL_IsoOUTIncomplete+0x5a>
 801a574:	687b      	ldr	r3, [r7, #4]
 801a576:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a57a:	687b      	ldr	r3, [r7, #4]
 801a57c:	32ae      	adds	r2, #174	; 0xae
 801a57e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801a584:	78fa      	ldrb	r2, [r7, #3]
 801a586:	4611      	mov	r1, r2
 801a588:	6878      	ldr	r0, [r7, #4]
 801a58a:	4798      	blx	r3
 801a58c:	2300      	movs	r3, #0
 801a58e:	4618      	mov	r0, r3
 801a590:	3708      	adds	r7, #8
 801a592:	46bd      	mov	sp, r7
 801a594:	bd80      	pop	{r7, pc}

0801a596 <USBD_LL_DevConnected>:
 801a596:	b480      	push	{r7}
 801a598:	b083      	sub	sp, #12
 801a59a:	af00      	add	r7, sp, #0
 801a59c:	6078      	str	r0, [r7, #4]
 801a59e:	2300      	movs	r3, #0
 801a5a0:	4618      	mov	r0, r3
 801a5a2:	370c      	adds	r7, #12
 801a5a4:	46bd      	mov	sp, r7
 801a5a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5aa:	4770      	bx	lr

0801a5ac <USBD_LL_DevDisconnected>:
 801a5ac:	b580      	push	{r7, lr}
 801a5ae:	b084      	sub	sp, #16
 801a5b0:	af00      	add	r7, sp, #0
 801a5b2:	6078      	str	r0, [r7, #4]
 801a5b4:	2300      	movs	r3, #0
 801a5b6:	73fb      	strb	r3, [r7, #15]
 801a5b8:	687b      	ldr	r3, [r7, #4]
 801a5ba:	2201      	movs	r2, #1
 801a5bc:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a5c0:	687b      	ldr	r3, [r7, #4]
 801a5c2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a5c6:	2b00      	cmp	r3, #0
 801a5c8:	d00e      	beq.n	801a5e8 <USBD_LL_DevDisconnected+0x3c>
 801a5ca:	687b      	ldr	r3, [r7, #4]
 801a5cc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a5d0:	685b      	ldr	r3, [r3, #4]
 801a5d2:	687a      	ldr	r2, [r7, #4]
 801a5d4:	6852      	ldr	r2, [r2, #4]
 801a5d6:	b2d2      	uxtb	r2, r2
 801a5d8:	4611      	mov	r1, r2
 801a5da:	6878      	ldr	r0, [r7, #4]
 801a5dc:	4798      	blx	r3
 801a5de:	4603      	mov	r3, r0
 801a5e0:	2b00      	cmp	r3, #0
 801a5e2:	d001      	beq.n	801a5e8 <USBD_LL_DevDisconnected+0x3c>
 801a5e4:	2303      	movs	r3, #3
 801a5e6:	73fb      	strb	r3, [r7, #15]
 801a5e8:	7bfb      	ldrb	r3, [r7, #15]
 801a5ea:	4618      	mov	r0, r3
 801a5ec:	3710      	adds	r7, #16
 801a5ee:	46bd      	mov	sp, r7
 801a5f0:	bd80      	pop	{r7, pc}

0801a5f2 <USBD_CoreFindIF>:
 801a5f2:	b480      	push	{r7}
 801a5f4:	b083      	sub	sp, #12
 801a5f6:	af00      	add	r7, sp, #0
 801a5f8:	6078      	str	r0, [r7, #4]
 801a5fa:	460b      	mov	r3, r1
 801a5fc:	70fb      	strb	r3, [r7, #3]
 801a5fe:	2300      	movs	r3, #0
 801a600:	4618      	mov	r0, r3
 801a602:	370c      	adds	r7, #12
 801a604:	46bd      	mov	sp, r7
 801a606:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a60a:	4770      	bx	lr

0801a60c <USBD_CoreFindEP>:
 801a60c:	b480      	push	{r7}
 801a60e:	b083      	sub	sp, #12
 801a610:	af00      	add	r7, sp, #0
 801a612:	6078      	str	r0, [r7, #4]
 801a614:	460b      	mov	r3, r1
 801a616:	70fb      	strb	r3, [r7, #3]
 801a618:	2300      	movs	r3, #0
 801a61a:	4618      	mov	r0, r3
 801a61c:	370c      	adds	r7, #12
 801a61e:	46bd      	mov	sp, r7
 801a620:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a624:	4770      	bx	lr

0801a626 <USBD_GetEpDesc>:
 801a626:	b580      	push	{r7, lr}
 801a628:	b086      	sub	sp, #24
 801a62a:	af00      	add	r7, sp, #0
 801a62c:	6078      	str	r0, [r7, #4]
 801a62e:	460b      	mov	r3, r1
 801a630:	70fb      	strb	r3, [r7, #3]
 801a632:	687b      	ldr	r3, [r7, #4]
 801a634:	617b      	str	r3, [r7, #20]
 801a636:	687b      	ldr	r3, [r7, #4]
 801a638:	60fb      	str	r3, [r7, #12]
 801a63a:	2300      	movs	r3, #0
 801a63c:	613b      	str	r3, [r7, #16]
 801a63e:	68fb      	ldr	r3, [r7, #12]
 801a640:	885b      	ldrh	r3, [r3, #2]
 801a642:	b29a      	uxth	r2, r3
 801a644:	68fb      	ldr	r3, [r7, #12]
 801a646:	781b      	ldrb	r3, [r3, #0]
 801a648:	b29b      	uxth	r3, r3
 801a64a:	429a      	cmp	r2, r3
 801a64c:	d920      	bls.n	801a690 <USBD_GetEpDesc+0x6a>
 801a64e:	68fb      	ldr	r3, [r7, #12]
 801a650:	781b      	ldrb	r3, [r3, #0]
 801a652:	b29b      	uxth	r3, r3
 801a654:	817b      	strh	r3, [r7, #10]
 801a656:	e013      	b.n	801a680 <USBD_GetEpDesc+0x5a>
 801a658:	f107 030a 	add.w	r3, r7, #10
 801a65c:	4619      	mov	r1, r3
 801a65e:	6978      	ldr	r0, [r7, #20]
 801a660:	f000 f81b 	bl	801a69a <USBD_GetNextDesc>
 801a664:	6178      	str	r0, [r7, #20]
 801a666:	697b      	ldr	r3, [r7, #20]
 801a668:	785b      	ldrb	r3, [r3, #1]
 801a66a:	2b05      	cmp	r3, #5
 801a66c:	d108      	bne.n	801a680 <USBD_GetEpDesc+0x5a>
 801a66e:	697b      	ldr	r3, [r7, #20]
 801a670:	613b      	str	r3, [r7, #16]
 801a672:	693b      	ldr	r3, [r7, #16]
 801a674:	789b      	ldrb	r3, [r3, #2]
 801a676:	78fa      	ldrb	r2, [r7, #3]
 801a678:	429a      	cmp	r2, r3
 801a67a:	d008      	beq.n	801a68e <USBD_GetEpDesc+0x68>
 801a67c:	2300      	movs	r3, #0
 801a67e:	613b      	str	r3, [r7, #16]
 801a680:	68fb      	ldr	r3, [r7, #12]
 801a682:	885b      	ldrh	r3, [r3, #2]
 801a684:	b29a      	uxth	r2, r3
 801a686:	897b      	ldrh	r3, [r7, #10]
 801a688:	429a      	cmp	r2, r3
 801a68a:	d8e5      	bhi.n	801a658 <USBD_GetEpDesc+0x32>
 801a68c:	e000      	b.n	801a690 <USBD_GetEpDesc+0x6a>
 801a68e:	bf00      	nop
 801a690:	693b      	ldr	r3, [r7, #16]
 801a692:	4618      	mov	r0, r3
 801a694:	3718      	adds	r7, #24
 801a696:	46bd      	mov	sp, r7
 801a698:	bd80      	pop	{r7, pc}

0801a69a <USBD_GetNextDesc>:
 801a69a:	b480      	push	{r7}
 801a69c:	b085      	sub	sp, #20
 801a69e:	af00      	add	r7, sp, #0
 801a6a0:	6078      	str	r0, [r7, #4]
 801a6a2:	6039      	str	r1, [r7, #0]
 801a6a4:	687b      	ldr	r3, [r7, #4]
 801a6a6:	60fb      	str	r3, [r7, #12]
 801a6a8:	683b      	ldr	r3, [r7, #0]
 801a6aa:	881a      	ldrh	r2, [r3, #0]
 801a6ac:	68fb      	ldr	r3, [r7, #12]
 801a6ae:	781b      	ldrb	r3, [r3, #0]
 801a6b0:	b29b      	uxth	r3, r3
 801a6b2:	4413      	add	r3, r2
 801a6b4:	b29a      	uxth	r2, r3
 801a6b6:	683b      	ldr	r3, [r7, #0]
 801a6b8:	801a      	strh	r2, [r3, #0]
 801a6ba:	68fb      	ldr	r3, [r7, #12]
 801a6bc:	781b      	ldrb	r3, [r3, #0]
 801a6be:	461a      	mov	r2, r3
 801a6c0:	687b      	ldr	r3, [r7, #4]
 801a6c2:	4413      	add	r3, r2
 801a6c4:	60fb      	str	r3, [r7, #12]
 801a6c6:	68fb      	ldr	r3, [r7, #12]
 801a6c8:	4618      	mov	r0, r3
 801a6ca:	3714      	adds	r7, #20
 801a6cc:	46bd      	mov	sp, r7
 801a6ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a6d2:	4770      	bx	lr

0801a6d4 <SWAPBYTE>:
 801a6d4:	b480      	push	{r7}
 801a6d6:	b087      	sub	sp, #28
 801a6d8:	af00      	add	r7, sp, #0
 801a6da:	6078      	str	r0, [r7, #4]
 801a6dc:	687b      	ldr	r3, [r7, #4]
 801a6de:	617b      	str	r3, [r7, #20]
 801a6e0:	697b      	ldr	r3, [r7, #20]
 801a6e2:	781b      	ldrb	r3, [r3, #0]
 801a6e4:	827b      	strh	r3, [r7, #18]
 801a6e6:	697b      	ldr	r3, [r7, #20]
 801a6e8:	3301      	adds	r3, #1
 801a6ea:	617b      	str	r3, [r7, #20]
 801a6ec:	697b      	ldr	r3, [r7, #20]
 801a6ee:	781b      	ldrb	r3, [r3, #0]
 801a6f0:	823b      	strh	r3, [r7, #16]
 801a6f2:	8a3b      	ldrh	r3, [r7, #16]
 801a6f4:	021b      	lsls	r3, r3, #8
 801a6f6:	b21a      	sxth	r2, r3
 801a6f8:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801a6fc:	4313      	orrs	r3, r2
 801a6fe:	b21b      	sxth	r3, r3
 801a700:	81fb      	strh	r3, [r7, #14]
 801a702:	89fb      	ldrh	r3, [r7, #14]
 801a704:	4618      	mov	r0, r3
 801a706:	371c      	adds	r7, #28
 801a708:	46bd      	mov	sp, r7
 801a70a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a70e:	4770      	bx	lr

0801a710 <USBD_StdDevReq>:
 801a710:	b580      	push	{r7, lr}
 801a712:	b084      	sub	sp, #16
 801a714:	af00      	add	r7, sp, #0
 801a716:	6078      	str	r0, [r7, #4]
 801a718:	6039      	str	r1, [r7, #0]
 801a71a:	2300      	movs	r3, #0
 801a71c:	73fb      	strb	r3, [r7, #15]
 801a71e:	683b      	ldr	r3, [r7, #0]
 801a720:	781b      	ldrb	r3, [r3, #0]
 801a722:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a726:	2b40      	cmp	r3, #64	; 0x40
 801a728:	d005      	beq.n	801a736 <USBD_StdDevReq+0x26>
 801a72a:	2b40      	cmp	r3, #64	; 0x40
 801a72c:	d857      	bhi.n	801a7de <USBD_StdDevReq+0xce>
 801a72e:	2b00      	cmp	r3, #0
 801a730:	d00f      	beq.n	801a752 <USBD_StdDevReq+0x42>
 801a732:	2b20      	cmp	r3, #32
 801a734:	d153      	bne.n	801a7de <USBD_StdDevReq+0xce>
 801a736:	687b      	ldr	r3, [r7, #4]
 801a738:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a73c:	687b      	ldr	r3, [r7, #4]
 801a73e:	32ae      	adds	r2, #174	; 0xae
 801a740:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a744:	689b      	ldr	r3, [r3, #8]
 801a746:	6839      	ldr	r1, [r7, #0]
 801a748:	6878      	ldr	r0, [r7, #4]
 801a74a:	4798      	blx	r3
 801a74c:	4603      	mov	r3, r0
 801a74e:	73fb      	strb	r3, [r7, #15]
 801a750:	e04a      	b.n	801a7e8 <USBD_StdDevReq+0xd8>
 801a752:	683b      	ldr	r3, [r7, #0]
 801a754:	785b      	ldrb	r3, [r3, #1]
 801a756:	2b09      	cmp	r3, #9
 801a758:	d83b      	bhi.n	801a7d2 <USBD_StdDevReq+0xc2>
 801a75a:	a201      	add	r2, pc, #4	; (adr r2, 801a760 <USBD_StdDevReq+0x50>)
 801a75c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a760:	0801a7b5 	.word	0x0801a7b5
 801a764:	0801a7c9 	.word	0x0801a7c9
 801a768:	0801a7d3 	.word	0x0801a7d3
 801a76c:	0801a7bf 	.word	0x0801a7bf
 801a770:	0801a7d3 	.word	0x0801a7d3
 801a774:	0801a793 	.word	0x0801a793
 801a778:	0801a789 	.word	0x0801a789
 801a77c:	0801a7d3 	.word	0x0801a7d3
 801a780:	0801a7ab 	.word	0x0801a7ab
 801a784:	0801a79d 	.word	0x0801a79d
 801a788:	6839      	ldr	r1, [r7, #0]
 801a78a:	6878      	ldr	r0, [r7, #4]
 801a78c:	f000 fa3c 	bl	801ac08 <USBD_GetDescriptor>
 801a790:	e024      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a792:	6839      	ldr	r1, [r7, #0]
 801a794:	6878      	ldr	r0, [r7, #4]
 801a796:	f000 fba1 	bl	801aedc <USBD_SetAddress>
 801a79a:	e01f      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a79c:	6839      	ldr	r1, [r7, #0]
 801a79e:	6878      	ldr	r0, [r7, #4]
 801a7a0:	f000 fbe0 	bl	801af64 <USBD_SetConfig>
 801a7a4:	4603      	mov	r3, r0
 801a7a6:	73fb      	strb	r3, [r7, #15]
 801a7a8:	e018      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a7aa:	6839      	ldr	r1, [r7, #0]
 801a7ac:	6878      	ldr	r0, [r7, #4]
 801a7ae:	f000 fc83 	bl	801b0b8 <USBD_GetConfig>
 801a7b2:	e013      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a7b4:	6839      	ldr	r1, [r7, #0]
 801a7b6:	6878      	ldr	r0, [r7, #4]
 801a7b8:	f000 fcb4 	bl	801b124 <USBD_GetStatus>
 801a7bc:	e00e      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a7be:	6839      	ldr	r1, [r7, #0]
 801a7c0:	6878      	ldr	r0, [r7, #4]
 801a7c2:	f000 fce3 	bl	801b18c <USBD_SetFeature>
 801a7c6:	e009      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a7c8:	6839      	ldr	r1, [r7, #0]
 801a7ca:	6878      	ldr	r0, [r7, #4]
 801a7cc:	f000 fd07 	bl	801b1de <USBD_ClrFeature>
 801a7d0:	e004      	b.n	801a7dc <USBD_StdDevReq+0xcc>
 801a7d2:	6839      	ldr	r1, [r7, #0]
 801a7d4:	6878      	ldr	r0, [r7, #4]
 801a7d6:	f000 fd5e 	bl	801b296 <USBD_CtlError>
 801a7da:	bf00      	nop
 801a7dc:	e004      	b.n	801a7e8 <USBD_StdDevReq+0xd8>
 801a7de:	6839      	ldr	r1, [r7, #0]
 801a7e0:	6878      	ldr	r0, [r7, #4]
 801a7e2:	f000 fd58 	bl	801b296 <USBD_CtlError>
 801a7e6:	bf00      	nop
 801a7e8:	7bfb      	ldrb	r3, [r7, #15]
 801a7ea:	4618      	mov	r0, r3
 801a7ec:	3710      	adds	r7, #16
 801a7ee:	46bd      	mov	sp, r7
 801a7f0:	bd80      	pop	{r7, pc}
 801a7f2:	bf00      	nop

0801a7f4 <USBD_StdItfReq>:
 801a7f4:	b580      	push	{r7, lr}
 801a7f6:	b084      	sub	sp, #16
 801a7f8:	af00      	add	r7, sp, #0
 801a7fa:	6078      	str	r0, [r7, #4]
 801a7fc:	6039      	str	r1, [r7, #0]
 801a7fe:	2300      	movs	r3, #0
 801a800:	73fb      	strb	r3, [r7, #15]
 801a802:	683b      	ldr	r3, [r7, #0]
 801a804:	781b      	ldrb	r3, [r3, #0]
 801a806:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a80a:	2b40      	cmp	r3, #64	; 0x40
 801a80c:	d005      	beq.n	801a81a <USBD_StdItfReq+0x26>
 801a80e:	2b40      	cmp	r3, #64	; 0x40
 801a810:	d852      	bhi.n	801a8b8 <USBD_StdItfReq+0xc4>
 801a812:	2b00      	cmp	r3, #0
 801a814:	d001      	beq.n	801a81a <USBD_StdItfReq+0x26>
 801a816:	2b20      	cmp	r3, #32
 801a818:	d14e      	bne.n	801a8b8 <USBD_StdItfReq+0xc4>
 801a81a:	687b      	ldr	r3, [r7, #4]
 801a81c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a820:	b2db      	uxtb	r3, r3
 801a822:	3b01      	subs	r3, #1
 801a824:	2b02      	cmp	r3, #2
 801a826:	d840      	bhi.n	801a8aa <USBD_StdItfReq+0xb6>
 801a828:	683b      	ldr	r3, [r7, #0]
 801a82a:	889b      	ldrh	r3, [r3, #4]
 801a82c:	b2db      	uxtb	r3, r3
 801a82e:	2b01      	cmp	r3, #1
 801a830:	d836      	bhi.n	801a8a0 <USBD_StdItfReq+0xac>
 801a832:	683b      	ldr	r3, [r7, #0]
 801a834:	889b      	ldrh	r3, [r3, #4]
 801a836:	b2db      	uxtb	r3, r3
 801a838:	4619      	mov	r1, r3
 801a83a:	6878      	ldr	r0, [r7, #4]
 801a83c:	f7ff fed9 	bl	801a5f2 <USBD_CoreFindIF>
 801a840:	4603      	mov	r3, r0
 801a842:	73bb      	strb	r3, [r7, #14]
 801a844:	7bbb      	ldrb	r3, [r7, #14]
 801a846:	2bff      	cmp	r3, #255	; 0xff
 801a848:	d01d      	beq.n	801a886 <USBD_StdItfReq+0x92>
 801a84a:	7bbb      	ldrb	r3, [r7, #14]
 801a84c:	2b00      	cmp	r3, #0
 801a84e:	d11a      	bne.n	801a886 <USBD_StdItfReq+0x92>
 801a850:	7bba      	ldrb	r2, [r7, #14]
 801a852:	687b      	ldr	r3, [r7, #4]
 801a854:	32ae      	adds	r2, #174	; 0xae
 801a856:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a85a:	689b      	ldr	r3, [r3, #8]
 801a85c:	2b00      	cmp	r3, #0
 801a85e:	d00f      	beq.n	801a880 <USBD_StdItfReq+0x8c>
 801a860:	7bba      	ldrb	r2, [r7, #14]
 801a862:	687b      	ldr	r3, [r7, #4]
 801a864:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a868:	7bba      	ldrb	r2, [r7, #14]
 801a86a:	687b      	ldr	r3, [r7, #4]
 801a86c:	32ae      	adds	r2, #174	; 0xae
 801a86e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a872:	689b      	ldr	r3, [r3, #8]
 801a874:	6839      	ldr	r1, [r7, #0]
 801a876:	6878      	ldr	r0, [r7, #4]
 801a878:	4798      	blx	r3
 801a87a:	4603      	mov	r3, r0
 801a87c:	73fb      	strb	r3, [r7, #15]
 801a87e:	e004      	b.n	801a88a <USBD_StdItfReq+0x96>
 801a880:	2303      	movs	r3, #3
 801a882:	73fb      	strb	r3, [r7, #15]
 801a884:	e001      	b.n	801a88a <USBD_StdItfReq+0x96>
 801a886:	2303      	movs	r3, #3
 801a888:	73fb      	strb	r3, [r7, #15]
 801a88a:	683b      	ldr	r3, [r7, #0]
 801a88c:	88db      	ldrh	r3, [r3, #6]
 801a88e:	2b00      	cmp	r3, #0
 801a890:	d110      	bne.n	801a8b4 <USBD_StdItfReq+0xc0>
 801a892:	7bfb      	ldrb	r3, [r7, #15]
 801a894:	2b00      	cmp	r3, #0
 801a896:	d10d      	bne.n	801a8b4 <USBD_StdItfReq+0xc0>
 801a898:	6878      	ldr	r0, [r7, #4]
 801a89a:	f000 fdc7 	bl	801b42c <USBD_CtlSendStatus>
 801a89e:	e009      	b.n	801a8b4 <USBD_StdItfReq+0xc0>
 801a8a0:	6839      	ldr	r1, [r7, #0]
 801a8a2:	6878      	ldr	r0, [r7, #4]
 801a8a4:	f000 fcf7 	bl	801b296 <USBD_CtlError>
 801a8a8:	e004      	b.n	801a8b4 <USBD_StdItfReq+0xc0>
 801a8aa:	6839      	ldr	r1, [r7, #0]
 801a8ac:	6878      	ldr	r0, [r7, #4]
 801a8ae:	f000 fcf2 	bl	801b296 <USBD_CtlError>
 801a8b2:	e000      	b.n	801a8b6 <USBD_StdItfReq+0xc2>
 801a8b4:	bf00      	nop
 801a8b6:	e004      	b.n	801a8c2 <USBD_StdItfReq+0xce>
 801a8b8:	6839      	ldr	r1, [r7, #0]
 801a8ba:	6878      	ldr	r0, [r7, #4]
 801a8bc:	f000 fceb 	bl	801b296 <USBD_CtlError>
 801a8c0:	bf00      	nop
 801a8c2:	7bfb      	ldrb	r3, [r7, #15]
 801a8c4:	4618      	mov	r0, r3
 801a8c6:	3710      	adds	r7, #16
 801a8c8:	46bd      	mov	sp, r7
 801a8ca:	bd80      	pop	{r7, pc}

0801a8cc <USBD_StdEPReq>:
 801a8cc:	b580      	push	{r7, lr}
 801a8ce:	b084      	sub	sp, #16
 801a8d0:	af00      	add	r7, sp, #0
 801a8d2:	6078      	str	r0, [r7, #4]
 801a8d4:	6039      	str	r1, [r7, #0]
 801a8d6:	2300      	movs	r3, #0
 801a8d8:	73fb      	strb	r3, [r7, #15]
 801a8da:	683b      	ldr	r3, [r7, #0]
 801a8dc:	889b      	ldrh	r3, [r3, #4]
 801a8de:	73bb      	strb	r3, [r7, #14]
 801a8e0:	683b      	ldr	r3, [r7, #0]
 801a8e2:	781b      	ldrb	r3, [r3, #0]
 801a8e4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a8e8:	2b40      	cmp	r3, #64	; 0x40
 801a8ea:	d007      	beq.n	801a8fc <USBD_StdEPReq+0x30>
 801a8ec:	2b40      	cmp	r3, #64	; 0x40
 801a8ee:	f200 817f 	bhi.w	801abf0 <USBD_StdEPReq+0x324>
 801a8f2:	2b00      	cmp	r3, #0
 801a8f4:	d02a      	beq.n	801a94c <USBD_StdEPReq+0x80>
 801a8f6:	2b20      	cmp	r3, #32
 801a8f8:	f040 817a 	bne.w	801abf0 <USBD_StdEPReq+0x324>
 801a8fc:	7bbb      	ldrb	r3, [r7, #14]
 801a8fe:	4619      	mov	r1, r3
 801a900:	6878      	ldr	r0, [r7, #4]
 801a902:	f7ff fe83 	bl	801a60c <USBD_CoreFindEP>
 801a906:	4603      	mov	r3, r0
 801a908:	737b      	strb	r3, [r7, #13]
 801a90a:	7b7b      	ldrb	r3, [r7, #13]
 801a90c:	2bff      	cmp	r3, #255	; 0xff
 801a90e:	f000 8174 	beq.w	801abfa <USBD_StdEPReq+0x32e>
 801a912:	7b7b      	ldrb	r3, [r7, #13]
 801a914:	2b00      	cmp	r3, #0
 801a916:	f040 8170 	bne.w	801abfa <USBD_StdEPReq+0x32e>
 801a91a:	7b7a      	ldrb	r2, [r7, #13]
 801a91c:	687b      	ldr	r3, [r7, #4]
 801a91e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a922:	7b7a      	ldrb	r2, [r7, #13]
 801a924:	687b      	ldr	r3, [r7, #4]
 801a926:	32ae      	adds	r2, #174	; 0xae
 801a928:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a92c:	689b      	ldr	r3, [r3, #8]
 801a92e:	2b00      	cmp	r3, #0
 801a930:	f000 8163 	beq.w	801abfa <USBD_StdEPReq+0x32e>
 801a934:	7b7a      	ldrb	r2, [r7, #13]
 801a936:	687b      	ldr	r3, [r7, #4]
 801a938:	32ae      	adds	r2, #174	; 0xae
 801a93a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a93e:	689b      	ldr	r3, [r3, #8]
 801a940:	6839      	ldr	r1, [r7, #0]
 801a942:	6878      	ldr	r0, [r7, #4]
 801a944:	4798      	blx	r3
 801a946:	4603      	mov	r3, r0
 801a948:	73fb      	strb	r3, [r7, #15]
 801a94a:	e156      	b.n	801abfa <USBD_StdEPReq+0x32e>
 801a94c:	683b      	ldr	r3, [r7, #0]
 801a94e:	785b      	ldrb	r3, [r3, #1]
 801a950:	2b03      	cmp	r3, #3
 801a952:	d008      	beq.n	801a966 <USBD_StdEPReq+0x9a>
 801a954:	2b03      	cmp	r3, #3
 801a956:	f300 8145 	bgt.w	801abe4 <USBD_StdEPReq+0x318>
 801a95a:	2b00      	cmp	r3, #0
 801a95c:	f000 809b 	beq.w	801aa96 <USBD_StdEPReq+0x1ca>
 801a960:	2b01      	cmp	r3, #1
 801a962:	d03c      	beq.n	801a9de <USBD_StdEPReq+0x112>
 801a964:	e13e      	b.n	801abe4 <USBD_StdEPReq+0x318>
 801a966:	687b      	ldr	r3, [r7, #4]
 801a968:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a96c:	b2db      	uxtb	r3, r3
 801a96e:	2b02      	cmp	r3, #2
 801a970:	d002      	beq.n	801a978 <USBD_StdEPReq+0xac>
 801a972:	2b03      	cmp	r3, #3
 801a974:	d016      	beq.n	801a9a4 <USBD_StdEPReq+0xd8>
 801a976:	e02c      	b.n	801a9d2 <USBD_StdEPReq+0x106>
 801a978:	7bbb      	ldrb	r3, [r7, #14]
 801a97a:	2b00      	cmp	r3, #0
 801a97c:	d00d      	beq.n	801a99a <USBD_StdEPReq+0xce>
 801a97e:	7bbb      	ldrb	r3, [r7, #14]
 801a980:	2b80      	cmp	r3, #128	; 0x80
 801a982:	d00a      	beq.n	801a99a <USBD_StdEPReq+0xce>
 801a984:	7bbb      	ldrb	r3, [r7, #14]
 801a986:	4619      	mov	r1, r3
 801a988:	6878      	ldr	r0, [r7, #4]
 801a98a:	f004 fba5 	bl	801f0d8 <USBD_LL_StallEP>
 801a98e:	2180      	movs	r1, #128	; 0x80
 801a990:	6878      	ldr	r0, [r7, #4]
 801a992:	f004 fba1 	bl	801f0d8 <USBD_LL_StallEP>
 801a996:	bf00      	nop
 801a998:	e020      	b.n	801a9dc <USBD_StdEPReq+0x110>
 801a99a:	6839      	ldr	r1, [r7, #0]
 801a99c:	6878      	ldr	r0, [r7, #4]
 801a99e:	f000 fc7a 	bl	801b296 <USBD_CtlError>
 801a9a2:	e01b      	b.n	801a9dc <USBD_StdEPReq+0x110>
 801a9a4:	683b      	ldr	r3, [r7, #0]
 801a9a6:	885b      	ldrh	r3, [r3, #2]
 801a9a8:	2b00      	cmp	r3, #0
 801a9aa:	d10e      	bne.n	801a9ca <USBD_StdEPReq+0xfe>
 801a9ac:	7bbb      	ldrb	r3, [r7, #14]
 801a9ae:	2b00      	cmp	r3, #0
 801a9b0:	d00b      	beq.n	801a9ca <USBD_StdEPReq+0xfe>
 801a9b2:	7bbb      	ldrb	r3, [r7, #14]
 801a9b4:	2b80      	cmp	r3, #128	; 0x80
 801a9b6:	d008      	beq.n	801a9ca <USBD_StdEPReq+0xfe>
 801a9b8:	683b      	ldr	r3, [r7, #0]
 801a9ba:	88db      	ldrh	r3, [r3, #6]
 801a9bc:	2b00      	cmp	r3, #0
 801a9be:	d104      	bne.n	801a9ca <USBD_StdEPReq+0xfe>
 801a9c0:	7bbb      	ldrb	r3, [r7, #14]
 801a9c2:	4619      	mov	r1, r3
 801a9c4:	6878      	ldr	r0, [r7, #4]
 801a9c6:	f004 fb87 	bl	801f0d8 <USBD_LL_StallEP>
 801a9ca:	6878      	ldr	r0, [r7, #4]
 801a9cc:	f000 fd2e 	bl	801b42c <USBD_CtlSendStatus>
 801a9d0:	e004      	b.n	801a9dc <USBD_StdEPReq+0x110>
 801a9d2:	6839      	ldr	r1, [r7, #0]
 801a9d4:	6878      	ldr	r0, [r7, #4]
 801a9d6:	f000 fc5e 	bl	801b296 <USBD_CtlError>
 801a9da:	bf00      	nop
 801a9dc:	e107      	b.n	801abee <USBD_StdEPReq+0x322>
 801a9de:	687b      	ldr	r3, [r7, #4]
 801a9e0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a9e4:	b2db      	uxtb	r3, r3
 801a9e6:	2b02      	cmp	r3, #2
 801a9e8:	d002      	beq.n	801a9f0 <USBD_StdEPReq+0x124>
 801a9ea:	2b03      	cmp	r3, #3
 801a9ec:	d016      	beq.n	801aa1c <USBD_StdEPReq+0x150>
 801a9ee:	e04b      	b.n	801aa88 <USBD_StdEPReq+0x1bc>
 801a9f0:	7bbb      	ldrb	r3, [r7, #14]
 801a9f2:	2b00      	cmp	r3, #0
 801a9f4:	d00d      	beq.n	801aa12 <USBD_StdEPReq+0x146>
 801a9f6:	7bbb      	ldrb	r3, [r7, #14]
 801a9f8:	2b80      	cmp	r3, #128	; 0x80
 801a9fa:	d00a      	beq.n	801aa12 <USBD_StdEPReq+0x146>
 801a9fc:	7bbb      	ldrb	r3, [r7, #14]
 801a9fe:	4619      	mov	r1, r3
 801aa00:	6878      	ldr	r0, [r7, #4]
 801aa02:	f004 fb69 	bl	801f0d8 <USBD_LL_StallEP>
 801aa06:	2180      	movs	r1, #128	; 0x80
 801aa08:	6878      	ldr	r0, [r7, #4]
 801aa0a:	f004 fb65 	bl	801f0d8 <USBD_LL_StallEP>
 801aa0e:	bf00      	nop
 801aa10:	e040      	b.n	801aa94 <USBD_StdEPReq+0x1c8>
 801aa12:	6839      	ldr	r1, [r7, #0]
 801aa14:	6878      	ldr	r0, [r7, #4]
 801aa16:	f000 fc3e 	bl	801b296 <USBD_CtlError>
 801aa1a:	e03b      	b.n	801aa94 <USBD_StdEPReq+0x1c8>
 801aa1c:	683b      	ldr	r3, [r7, #0]
 801aa1e:	885b      	ldrh	r3, [r3, #2]
 801aa20:	2b00      	cmp	r3, #0
 801aa22:	d136      	bne.n	801aa92 <USBD_StdEPReq+0x1c6>
 801aa24:	7bbb      	ldrb	r3, [r7, #14]
 801aa26:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801aa2a:	2b00      	cmp	r3, #0
 801aa2c:	d004      	beq.n	801aa38 <USBD_StdEPReq+0x16c>
 801aa2e:	7bbb      	ldrb	r3, [r7, #14]
 801aa30:	4619      	mov	r1, r3
 801aa32:	6878      	ldr	r0, [r7, #4]
 801aa34:	f004 fb6f 	bl	801f116 <USBD_LL_ClearStallEP>
 801aa38:	6878      	ldr	r0, [r7, #4]
 801aa3a:	f000 fcf7 	bl	801b42c <USBD_CtlSendStatus>
 801aa3e:	7bbb      	ldrb	r3, [r7, #14]
 801aa40:	4619      	mov	r1, r3
 801aa42:	6878      	ldr	r0, [r7, #4]
 801aa44:	f7ff fde2 	bl	801a60c <USBD_CoreFindEP>
 801aa48:	4603      	mov	r3, r0
 801aa4a:	737b      	strb	r3, [r7, #13]
 801aa4c:	7b7b      	ldrb	r3, [r7, #13]
 801aa4e:	2bff      	cmp	r3, #255	; 0xff
 801aa50:	d01f      	beq.n	801aa92 <USBD_StdEPReq+0x1c6>
 801aa52:	7b7b      	ldrb	r3, [r7, #13]
 801aa54:	2b00      	cmp	r3, #0
 801aa56:	d11c      	bne.n	801aa92 <USBD_StdEPReq+0x1c6>
 801aa58:	7b7a      	ldrb	r2, [r7, #13]
 801aa5a:	687b      	ldr	r3, [r7, #4]
 801aa5c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801aa60:	7b7a      	ldrb	r2, [r7, #13]
 801aa62:	687b      	ldr	r3, [r7, #4]
 801aa64:	32ae      	adds	r2, #174	; 0xae
 801aa66:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801aa6a:	689b      	ldr	r3, [r3, #8]
 801aa6c:	2b00      	cmp	r3, #0
 801aa6e:	d010      	beq.n	801aa92 <USBD_StdEPReq+0x1c6>
 801aa70:	7b7a      	ldrb	r2, [r7, #13]
 801aa72:	687b      	ldr	r3, [r7, #4]
 801aa74:	32ae      	adds	r2, #174	; 0xae
 801aa76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801aa7a:	689b      	ldr	r3, [r3, #8]
 801aa7c:	6839      	ldr	r1, [r7, #0]
 801aa7e:	6878      	ldr	r0, [r7, #4]
 801aa80:	4798      	blx	r3
 801aa82:	4603      	mov	r3, r0
 801aa84:	73fb      	strb	r3, [r7, #15]
 801aa86:	e004      	b.n	801aa92 <USBD_StdEPReq+0x1c6>
 801aa88:	6839      	ldr	r1, [r7, #0]
 801aa8a:	6878      	ldr	r0, [r7, #4]
 801aa8c:	f000 fc03 	bl	801b296 <USBD_CtlError>
 801aa90:	e000      	b.n	801aa94 <USBD_StdEPReq+0x1c8>
 801aa92:	bf00      	nop
 801aa94:	e0ab      	b.n	801abee <USBD_StdEPReq+0x322>
 801aa96:	687b      	ldr	r3, [r7, #4]
 801aa98:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801aa9c:	b2db      	uxtb	r3, r3
 801aa9e:	2b02      	cmp	r3, #2
 801aaa0:	d002      	beq.n	801aaa8 <USBD_StdEPReq+0x1dc>
 801aaa2:	2b03      	cmp	r3, #3
 801aaa4:	d032      	beq.n	801ab0c <USBD_StdEPReq+0x240>
 801aaa6:	e097      	b.n	801abd8 <USBD_StdEPReq+0x30c>
 801aaa8:	7bbb      	ldrb	r3, [r7, #14]
 801aaaa:	2b00      	cmp	r3, #0
 801aaac:	d007      	beq.n	801aabe <USBD_StdEPReq+0x1f2>
 801aaae:	7bbb      	ldrb	r3, [r7, #14]
 801aab0:	2b80      	cmp	r3, #128	; 0x80
 801aab2:	d004      	beq.n	801aabe <USBD_StdEPReq+0x1f2>
 801aab4:	6839      	ldr	r1, [r7, #0]
 801aab6:	6878      	ldr	r0, [r7, #4]
 801aab8:	f000 fbed 	bl	801b296 <USBD_CtlError>
 801aabc:	e091      	b.n	801abe2 <USBD_StdEPReq+0x316>
 801aabe:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801aac2:	2b00      	cmp	r3, #0
 801aac4:	da0b      	bge.n	801aade <USBD_StdEPReq+0x212>
 801aac6:	7bbb      	ldrb	r3, [r7, #14]
 801aac8:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801aacc:	4613      	mov	r3, r2
 801aace:	009b      	lsls	r3, r3, #2
 801aad0:	4413      	add	r3, r2
 801aad2:	009b      	lsls	r3, r3, #2
 801aad4:	3310      	adds	r3, #16
 801aad6:	687a      	ldr	r2, [r7, #4]
 801aad8:	4413      	add	r3, r2
 801aada:	3304      	adds	r3, #4
 801aadc:	e00b      	b.n	801aaf6 <USBD_StdEPReq+0x22a>
 801aade:	7bbb      	ldrb	r3, [r7, #14]
 801aae0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801aae4:	4613      	mov	r3, r2
 801aae6:	009b      	lsls	r3, r3, #2
 801aae8:	4413      	add	r3, r2
 801aaea:	009b      	lsls	r3, r3, #2
 801aaec:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 801aaf0:	687a      	ldr	r2, [r7, #4]
 801aaf2:	4413      	add	r3, r2
 801aaf4:	3304      	adds	r3, #4
 801aaf6:	60bb      	str	r3, [r7, #8]
 801aaf8:	68bb      	ldr	r3, [r7, #8]
 801aafa:	2200      	movs	r2, #0
 801aafc:	601a      	str	r2, [r3, #0]
 801aafe:	68bb      	ldr	r3, [r7, #8]
 801ab00:	2202      	movs	r2, #2
 801ab02:	4619      	mov	r1, r3
 801ab04:	6878      	ldr	r0, [r7, #4]
 801ab06:	f000 fc37 	bl	801b378 <USBD_CtlSendData>
 801ab0a:	e06a      	b.n	801abe2 <USBD_StdEPReq+0x316>
 801ab0c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801ab10:	2b00      	cmp	r3, #0
 801ab12:	da11      	bge.n	801ab38 <USBD_StdEPReq+0x26c>
 801ab14:	7bbb      	ldrb	r3, [r7, #14]
 801ab16:	f003 020f 	and.w	r2, r3, #15
 801ab1a:	6879      	ldr	r1, [r7, #4]
 801ab1c:	4613      	mov	r3, r2
 801ab1e:	009b      	lsls	r3, r3, #2
 801ab20:	4413      	add	r3, r2
 801ab22:	009b      	lsls	r3, r3, #2
 801ab24:	440b      	add	r3, r1
 801ab26:	3324      	adds	r3, #36	; 0x24
 801ab28:	881b      	ldrh	r3, [r3, #0]
 801ab2a:	2b00      	cmp	r3, #0
 801ab2c:	d117      	bne.n	801ab5e <USBD_StdEPReq+0x292>
 801ab2e:	6839      	ldr	r1, [r7, #0]
 801ab30:	6878      	ldr	r0, [r7, #4]
 801ab32:	f000 fbb0 	bl	801b296 <USBD_CtlError>
 801ab36:	e054      	b.n	801abe2 <USBD_StdEPReq+0x316>
 801ab38:	7bbb      	ldrb	r3, [r7, #14]
 801ab3a:	f003 020f 	and.w	r2, r3, #15
 801ab3e:	6879      	ldr	r1, [r7, #4]
 801ab40:	4613      	mov	r3, r2
 801ab42:	009b      	lsls	r3, r3, #2
 801ab44:	4413      	add	r3, r2
 801ab46:	009b      	lsls	r3, r3, #2
 801ab48:	440b      	add	r3, r1
 801ab4a:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 801ab4e:	881b      	ldrh	r3, [r3, #0]
 801ab50:	2b00      	cmp	r3, #0
 801ab52:	d104      	bne.n	801ab5e <USBD_StdEPReq+0x292>
 801ab54:	6839      	ldr	r1, [r7, #0]
 801ab56:	6878      	ldr	r0, [r7, #4]
 801ab58:	f000 fb9d 	bl	801b296 <USBD_CtlError>
 801ab5c:	e041      	b.n	801abe2 <USBD_StdEPReq+0x316>
 801ab5e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801ab62:	2b00      	cmp	r3, #0
 801ab64:	da0b      	bge.n	801ab7e <USBD_StdEPReq+0x2b2>
 801ab66:	7bbb      	ldrb	r3, [r7, #14]
 801ab68:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801ab6c:	4613      	mov	r3, r2
 801ab6e:	009b      	lsls	r3, r3, #2
 801ab70:	4413      	add	r3, r2
 801ab72:	009b      	lsls	r3, r3, #2
 801ab74:	3310      	adds	r3, #16
 801ab76:	687a      	ldr	r2, [r7, #4]
 801ab78:	4413      	add	r3, r2
 801ab7a:	3304      	adds	r3, #4
 801ab7c:	e00b      	b.n	801ab96 <USBD_StdEPReq+0x2ca>
 801ab7e:	7bbb      	ldrb	r3, [r7, #14]
 801ab80:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801ab84:	4613      	mov	r3, r2
 801ab86:	009b      	lsls	r3, r3, #2
 801ab88:	4413      	add	r3, r2
 801ab8a:	009b      	lsls	r3, r3, #2
 801ab8c:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 801ab90:	687a      	ldr	r2, [r7, #4]
 801ab92:	4413      	add	r3, r2
 801ab94:	3304      	adds	r3, #4
 801ab96:	60bb      	str	r3, [r7, #8]
 801ab98:	7bbb      	ldrb	r3, [r7, #14]
 801ab9a:	2b00      	cmp	r3, #0
 801ab9c:	d002      	beq.n	801aba4 <USBD_StdEPReq+0x2d8>
 801ab9e:	7bbb      	ldrb	r3, [r7, #14]
 801aba0:	2b80      	cmp	r3, #128	; 0x80
 801aba2:	d103      	bne.n	801abac <USBD_StdEPReq+0x2e0>
 801aba4:	68bb      	ldr	r3, [r7, #8]
 801aba6:	2200      	movs	r2, #0
 801aba8:	601a      	str	r2, [r3, #0]
 801abaa:	e00e      	b.n	801abca <USBD_StdEPReq+0x2fe>
 801abac:	7bbb      	ldrb	r3, [r7, #14]
 801abae:	4619      	mov	r1, r3
 801abb0:	6878      	ldr	r0, [r7, #4]
 801abb2:	f004 facf 	bl	801f154 <USBD_LL_IsStallEP>
 801abb6:	4603      	mov	r3, r0
 801abb8:	2b00      	cmp	r3, #0
 801abba:	d003      	beq.n	801abc4 <USBD_StdEPReq+0x2f8>
 801abbc:	68bb      	ldr	r3, [r7, #8]
 801abbe:	2201      	movs	r2, #1
 801abc0:	601a      	str	r2, [r3, #0]
 801abc2:	e002      	b.n	801abca <USBD_StdEPReq+0x2fe>
 801abc4:	68bb      	ldr	r3, [r7, #8]
 801abc6:	2200      	movs	r2, #0
 801abc8:	601a      	str	r2, [r3, #0]
 801abca:	68bb      	ldr	r3, [r7, #8]
 801abcc:	2202      	movs	r2, #2
 801abce:	4619      	mov	r1, r3
 801abd0:	6878      	ldr	r0, [r7, #4]
 801abd2:	f000 fbd1 	bl	801b378 <USBD_CtlSendData>
 801abd6:	e004      	b.n	801abe2 <USBD_StdEPReq+0x316>
 801abd8:	6839      	ldr	r1, [r7, #0]
 801abda:	6878      	ldr	r0, [r7, #4]
 801abdc:	f000 fb5b 	bl	801b296 <USBD_CtlError>
 801abe0:	bf00      	nop
 801abe2:	e004      	b.n	801abee <USBD_StdEPReq+0x322>
 801abe4:	6839      	ldr	r1, [r7, #0]
 801abe6:	6878      	ldr	r0, [r7, #4]
 801abe8:	f000 fb55 	bl	801b296 <USBD_CtlError>
 801abec:	bf00      	nop
 801abee:	e005      	b.n	801abfc <USBD_StdEPReq+0x330>
 801abf0:	6839      	ldr	r1, [r7, #0]
 801abf2:	6878      	ldr	r0, [r7, #4]
 801abf4:	f000 fb4f 	bl	801b296 <USBD_CtlError>
 801abf8:	e000      	b.n	801abfc <USBD_StdEPReq+0x330>
 801abfa:	bf00      	nop
 801abfc:	7bfb      	ldrb	r3, [r7, #15]
 801abfe:	4618      	mov	r0, r3
 801ac00:	3710      	adds	r7, #16
 801ac02:	46bd      	mov	sp, r7
 801ac04:	bd80      	pop	{r7, pc}
	...

0801ac08 <USBD_GetDescriptor>:
 801ac08:	b580      	push	{r7, lr}
 801ac0a:	b084      	sub	sp, #16
 801ac0c:	af00      	add	r7, sp, #0
 801ac0e:	6078      	str	r0, [r7, #4]
 801ac10:	6039      	str	r1, [r7, #0]
 801ac12:	2300      	movs	r3, #0
 801ac14:	813b      	strh	r3, [r7, #8]
 801ac16:	2300      	movs	r3, #0
 801ac18:	60fb      	str	r3, [r7, #12]
 801ac1a:	2300      	movs	r3, #0
 801ac1c:	72fb      	strb	r3, [r7, #11]
 801ac1e:	683b      	ldr	r3, [r7, #0]
 801ac20:	885b      	ldrh	r3, [r3, #2]
 801ac22:	0a1b      	lsrs	r3, r3, #8
 801ac24:	b29b      	uxth	r3, r3
 801ac26:	3b01      	subs	r3, #1
 801ac28:	2b06      	cmp	r3, #6
 801ac2a:	f200 8128 	bhi.w	801ae7e <USBD_GetDescriptor+0x276>
 801ac2e:	a201      	add	r2, pc, #4	; (adr r2, 801ac34 <USBD_GetDescriptor+0x2c>)
 801ac30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ac34:	0801ac51 	.word	0x0801ac51
 801ac38:	0801ac69 	.word	0x0801ac69
 801ac3c:	0801aca9 	.word	0x0801aca9
 801ac40:	0801ae7f 	.word	0x0801ae7f
 801ac44:	0801ae7f 	.word	0x0801ae7f
 801ac48:	0801ae1f 	.word	0x0801ae1f
 801ac4c:	0801ae4b 	.word	0x0801ae4b
 801ac50:	687b      	ldr	r3, [r7, #4]
 801ac52:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ac56:	681b      	ldr	r3, [r3, #0]
 801ac58:	687a      	ldr	r2, [r7, #4]
 801ac5a:	7c12      	ldrb	r2, [r2, #16]
 801ac5c:	f107 0108 	add.w	r1, r7, #8
 801ac60:	4610      	mov	r0, r2
 801ac62:	4798      	blx	r3
 801ac64:	60f8      	str	r0, [r7, #12]
 801ac66:	e112      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ac68:	687b      	ldr	r3, [r7, #4]
 801ac6a:	7c1b      	ldrb	r3, [r3, #16]
 801ac6c:	2b00      	cmp	r3, #0
 801ac6e:	d10d      	bne.n	801ac8c <USBD_GetDescriptor+0x84>
 801ac70:	687b      	ldr	r3, [r7, #4]
 801ac72:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801ac76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ac78:	f107 0208 	add.w	r2, r7, #8
 801ac7c:	4610      	mov	r0, r2
 801ac7e:	4798      	blx	r3
 801ac80:	60f8      	str	r0, [r7, #12]
 801ac82:	68fb      	ldr	r3, [r7, #12]
 801ac84:	3301      	adds	r3, #1
 801ac86:	2202      	movs	r2, #2
 801ac88:	701a      	strb	r2, [r3, #0]
 801ac8a:	e100      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ac8c:	687b      	ldr	r3, [r7, #4]
 801ac8e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801ac92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ac94:	f107 0208 	add.w	r2, r7, #8
 801ac98:	4610      	mov	r0, r2
 801ac9a:	4798      	blx	r3
 801ac9c:	60f8      	str	r0, [r7, #12]
 801ac9e:	68fb      	ldr	r3, [r7, #12]
 801aca0:	3301      	adds	r3, #1
 801aca2:	2202      	movs	r2, #2
 801aca4:	701a      	strb	r2, [r3, #0]
 801aca6:	e0f2      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801aca8:	683b      	ldr	r3, [r7, #0]
 801acaa:	885b      	ldrh	r3, [r3, #2]
 801acac:	b2db      	uxtb	r3, r3
 801acae:	2b05      	cmp	r3, #5
 801acb0:	f200 80ac 	bhi.w	801ae0c <USBD_GetDescriptor+0x204>
 801acb4:	a201      	add	r2, pc, #4	; (adr r2, 801acbc <USBD_GetDescriptor+0xb4>)
 801acb6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801acba:	bf00      	nop
 801acbc:	0801acd5 	.word	0x0801acd5
 801acc0:	0801ad09 	.word	0x0801ad09
 801acc4:	0801ad3d 	.word	0x0801ad3d
 801acc8:	0801ad71 	.word	0x0801ad71
 801accc:	0801ada5 	.word	0x0801ada5
 801acd0:	0801add9 	.word	0x0801add9
 801acd4:	687b      	ldr	r3, [r7, #4]
 801acd6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801acda:	685b      	ldr	r3, [r3, #4]
 801acdc:	2b00      	cmp	r3, #0
 801acde:	d00b      	beq.n	801acf8 <USBD_GetDescriptor+0xf0>
 801ace0:	687b      	ldr	r3, [r7, #4]
 801ace2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ace6:	685b      	ldr	r3, [r3, #4]
 801ace8:	687a      	ldr	r2, [r7, #4]
 801acea:	7c12      	ldrb	r2, [r2, #16]
 801acec:	f107 0108 	add.w	r1, r7, #8
 801acf0:	4610      	mov	r0, r2
 801acf2:	4798      	blx	r3
 801acf4:	60f8      	str	r0, [r7, #12]
 801acf6:	e091      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801acf8:	6839      	ldr	r1, [r7, #0]
 801acfa:	6878      	ldr	r0, [r7, #4]
 801acfc:	f000 facb 	bl	801b296 <USBD_CtlError>
 801ad00:	7afb      	ldrb	r3, [r7, #11]
 801ad02:	3301      	adds	r3, #1
 801ad04:	72fb      	strb	r3, [r7, #11]
 801ad06:	e089      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad08:	687b      	ldr	r3, [r7, #4]
 801ad0a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad0e:	689b      	ldr	r3, [r3, #8]
 801ad10:	2b00      	cmp	r3, #0
 801ad12:	d00b      	beq.n	801ad2c <USBD_GetDescriptor+0x124>
 801ad14:	687b      	ldr	r3, [r7, #4]
 801ad16:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad1a:	689b      	ldr	r3, [r3, #8]
 801ad1c:	687a      	ldr	r2, [r7, #4]
 801ad1e:	7c12      	ldrb	r2, [r2, #16]
 801ad20:	f107 0108 	add.w	r1, r7, #8
 801ad24:	4610      	mov	r0, r2
 801ad26:	4798      	blx	r3
 801ad28:	60f8      	str	r0, [r7, #12]
 801ad2a:	e077      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad2c:	6839      	ldr	r1, [r7, #0]
 801ad2e:	6878      	ldr	r0, [r7, #4]
 801ad30:	f000 fab1 	bl	801b296 <USBD_CtlError>
 801ad34:	7afb      	ldrb	r3, [r7, #11]
 801ad36:	3301      	adds	r3, #1
 801ad38:	72fb      	strb	r3, [r7, #11]
 801ad3a:	e06f      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad3c:	687b      	ldr	r3, [r7, #4]
 801ad3e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad42:	68db      	ldr	r3, [r3, #12]
 801ad44:	2b00      	cmp	r3, #0
 801ad46:	d00b      	beq.n	801ad60 <USBD_GetDescriptor+0x158>
 801ad48:	687b      	ldr	r3, [r7, #4]
 801ad4a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad4e:	68db      	ldr	r3, [r3, #12]
 801ad50:	687a      	ldr	r2, [r7, #4]
 801ad52:	7c12      	ldrb	r2, [r2, #16]
 801ad54:	f107 0108 	add.w	r1, r7, #8
 801ad58:	4610      	mov	r0, r2
 801ad5a:	4798      	blx	r3
 801ad5c:	60f8      	str	r0, [r7, #12]
 801ad5e:	e05d      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad60:	6839      	ldr	r1, [r7, #0]
 801ad62:	6878      	ldr	r0, [r7, #4]
 801ad64:	f000 fa97 	bl	801b296 <USBD_CtlError>
 801ad68:	7afb      	ldrb	r3, [r7, #11]
 801ad6a:	3301      	adds	r3, #1
 801ad6c:	72fb      	strb	r3, [r7, #11]
 801ad6e:	e055      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad70:	687b      	ldr	r3, [r7, #4]
 801ad72:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad76:	691b      	ldr	r3, [r3, #16]
 801ad78:	2b00      	cmp	r3, #0
 801ad7a:	d00b      	beq.n	801ad94 <USBD_GetDescriptor+0x18c>
 801ad7c:	687b      	ldr	r3, [r7, #4]
 801ad7e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ad82:	691b      	ldr	r3, [r3, #16]
 801ad84:	687a      	ldr	r2, [r7, #4]
 801ad86:	7c12      	ldrb	r2, [r2, #16]
 801ad88:	f107 0108 	add.w	r1, r7, #8
 801ad8c:	4610      	mov	r0, r2
 801ad8e:	4798      	blx	r3
 801ad90:	60f8      	str	r0, [r7, #12]
 801ad92:	e043      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ad94:	6839      	ldr	r1, [r7, #0]
 801ad96:	6878      	ldr	r0, [r7, #4]
 801ad98:	f000 fa7d 	bl	801b296 <USBD_CtlError>
 801ad9c:	7afb      	ldrb	r3, [r7, #11]
 801ad9e:	3301      	adds	r3, #1
 801ada0:	72fb      	strb	r3, [r7, #11]
 801ada2:	e03b      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ada4:	687b      	ldr	r3, [r7, #4]
 801ada6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801adaa:	695b      	ldr	r3, [r3, #20]
 801adac:	2b00      	cmp	r3, #0
 801adae:	d00b      	beq.n	801adc8 <USBD_GetDescriptor+0x1c0>
 801adb0:	687b      	ldr	r3, [r7, #4]
 801adb2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801adb6:	695b      	ldr	r3, [r3, #20]
 801adb8:	687a      	ldr	r2, [r7, #4]
 801adba:	7c12      	ldrb	r2, [r2, #16]
 801adbc:	f107 0108 	add.w	r1, r7, #8
 801adc0:	4610      	mov	r0, r2
 801adc2:	4798      	blx	r3
 801adc4:	60f8      	str	r0, [r7, #12]
 801adc6:	e029      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801adc8:	6839      	ldr	r1, [r7, #0]
 801adca:	6878      	ldr	r0, [r7, #4]
 801adcc:	f000 fa63 	bl	801b296 <USBD_CtlError>
 801add0:	7afb      	ldrb	r3, [r7, #11]
 801add2:	3301      	adds	r3, #1
 801add4:	72fb      	strb	r3, [r7, #11]
 801add6:	e021      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801add8:	687b      	ldr	r3, [r7, #4]
 801adda:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801adde:	699b      	ldr	r3, [r3, #24]
 801ade0:	2b00      	cmp	r3, #0
 801ade2:	d00b      	beq.n	801adfc <USBD_GetDescriptor+0x1f4>
 801ade4:	687b      	ldr	r3, [r7, #4]
 801ade6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801adea:	699b      	ldr	r3, [r3, #24]
 801adec:	687a      	ldr	r2, [r7, #4]
 801adee:	7c12      	ldrb	r2, [r2, #16]
 801adf0:	f107 0108 	add.w	r1, r7, #8
 801adf4:	4610      	mov	r0, r2
 801adf6:	4798      	blx	r3
 801adf8:	60f8      	str	r0, [r7, #12]
 801adfa:	e00f      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801adfc:	6839      	ldr	r1, [r7, #0]
 801adfe:	6878      	ldr	r0, [r7, #4]
 801ae00:	f000 fa49 	bl	801b296 <USBD_CtlError>
 801ae04:	7afb      	ldrb	r3, [r7, #11]
 801ae06:	3301      	adds	r3, #1
 801ae08:	72fb      	strb	r3, [r7, #11]
 801ae0a:	e007      	b.n	801ae1c <USBD_GetDescriptor+0x214>
 801ae0c:	6839      	ldr	r1, [r7, #0]
 801ae0e:	6878      	ldr	r0, [r7, #4]
 801ae10:	f000 fa41 	bl	801b296 <USBD_CtlError>
 801ae14:	7afb      	ldrb	r3, [r7, #11]
 801ae16:	3301      	adds	r3, #1
 801ae18:	72fb      	strb	r3, [r7, #11]
 801ae1a:	bf00      	nop
 801ae1c:	e037      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ae1e:	687b      	ldr	r3, [r7, #4]
 801ae20:	7c1b      	ldrb	r3, [r3, #16]
 801ae22:	2b00      	cmp	r3, #0
 801ae24:	d109      	bne.n	801ae3a <USBD_GetDescriptor+0x232>
 801ae26:	687b      	ldr	r3, [r7, #4]
 801ae28:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801ae2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801ae2e:	f107 0208 	add.w	r2, r7, #8
 801ae32:	4610      	mov	r0, r2
 801ae34:	4798      	blx	r3
 801ae36:	60f8      	str	r0, [r7, #12]
 801ae38:	e029      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ae3a:	6839      	ldr	r1, [r7, #0]
 801ae3c:	6878      	ldr	r0, [r7, #4]
 801ae3e:	f000 fa2a 	bl	801b296 <USBD_CtlError>
 801ae42:	7afb      	ldrb	r3, [r7, #11]
 801ae44:	3301      	adds	r3, #1
 801ae46:	72fb      	strb	r3, [r7, #11]
 801ae48:	e021      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ae4a:	687b      	ldr	r3, [r7, #4]
 801ae4c:	7c1b      	ldrb	r3, [r3, #16]
 801ae4e:	2b00      	cmp	r3, #0
 801ae50:	d10d      	bne.n	801ae6e <USBD_GetDescriptor+0x266>
 801ae52:	687b      	ldr	r3, [r7, #4]
 801ae54:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801ae58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ae5a:	f107 0208 	add.w	r2, r7, #8
 801ae5e:	4610      	mov	r0, r2
 801ae60:	4798      	blx	r3
 801ae62:	60f8      	str	r0, [r7, #12]
 801ae64:	68fb      	ldr	r3, [r7, #12]
 801ae66:	3301      	adds	r3, #1
 801ae68:	2207      	movs	r2, #7
 801ae6a:	701a      	strb	r2, [r3, #0]
 801ae6c:	e00f      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ae6e:	6839      	ldr	r1, [r7, #0]
 801ae70:	6878      	ldr	r0, [r7, #4]
 801ae72:	f000 fa10 	bl	801b296 <USBD_CtlError>
 801ae76:	7afb      	ldrb	r3, [r7, #11]
 801ae78:	3301      	adds	r3, #1
 801ae7a:	72fb      	strb	r3, [r7, #11]
 801ae7c:	e007      	b.n	801ae8e <USBD_GetDescriptor+0x286>
 801ae7e:	6839      	ldr	r1, [r7, #0]
 801ae80:	6878      	ldr	r0, [r7, #4]
 801ae82:	f000 fa08 	bl	801b296 <USBD_CtlError>
 801ae86:	7afb      	ldrb	r3, [r7, #11]
 801ae88:	3301      	adds	r3, #1
 801ae8a:	72fb      	strb	r3, [r7, #11]
 801ae8c:	bf00      	nop
 801ae8e:	7afb      	ldrb	r3, [r7, #11]
 801ae90:	2b00      	cmp	r3, #0
 801ae92:	d11e      	bne.n	801aed2 <USBD_GetDescriptor+0x2ca>
 801ae94:	683b      	ldr	r3, [r7, #0]
 801ae96:	88db      	ldrh	r3, [r3, #6]
 801ae98:	2b00      	cmp	r3, #0
 801ae9a:	d016      	beq.n	801aeca <USBD_GetDescriptor+0x2c2>
 801ae9c:	893b      	ldrh	r3, [r7, #8]
 801ae9e:	2b00      	cmp	r3, #0
 801aea0:	d00e      	beq.n	801aec0 <USBD_GetDescriptor+0x2b8>
 801aea2:	683b      	ldr	r3, [r7, #0]
 801aea4:	88da      	ldrh	r2, [r3, #6]
 801aea6:	893b      	ldrh	r3, [r7, #8]
 801aea8:	4293      	cmp	r3, r2
 801aeaa:	bf28      	it	cs
 801aeac:	4613      	movcs	r3, r2
 801aeae:	b29b      	uxth	r3, r3
 801aeb0:	813b      	strh	r3, [r7, #8]
 801aeb2:	893b      	ldrh	r3, [r7, #8]
 801aeb4:	461a      	mov	r2, r3
 801aeb6:	68f9      	ldr	r1, [r7, #12]
 801aeb8:	6878      	ldr	r0, [r7, #4]
 801aeba:	f000 fa5d 	bl	801b378 <USBD_CtlSendData>
 801aebe:	e009      	b.n	801aed4 <USBD_GetDescriptor+0x2cc>
 801aec0:	6839      	ldr	r1, [r7, #0]
 801aec2:	6878      	ldr	r0, [r7, #4]
 801aec4:	f000 f9e7 	bl	801b296 <USBD_CtlError>
 801aec8:	e004      	b.n	801aed4 <USBD_GetDescriptor+0x2cc>
 801aeca:	6878      	ldr	r0, [r7, #4]
 801aecc:	f000 faae 	bl	801b42c <USBD_CtlSendStatus>
 801aed0:	e000      	b.n	801aed4 <USBD_GetDescriptor+0x2cc>
 801aed2:	bf00      	nop
 801aed4:	3710      	adds	r7, #16
 801aed6:	46bd      	mov	sp, r7
 801aed8:	bd80      	pop	{r7, pc}
 801aeda:	bf00      	nop

0801aedc <USBD_SetAddress>:
 801aedc:	b580      	push	{r7, lr}
 801aede:	b084      	sub	sp, #16
 801aee0:	af00      	add	r7, sp, #0
 801aee2:	6078      	str	r0, [r7, #4]
 801aee4:	6039      	str	r1, [r7, #0]
 801aee6:	683b      	ldr	r3, [r7, #0]
 801aee8:	889b      	ldrh	r3, [r3, #4]
 801aeea:	2b00      	cmp	r3, #0
 801aeec:	d131      	bne.n	801af52 <USBD_SetAddress+0x76>
 801aeee:	683b      	ldr	r3, [r7, #0]
 801aef0:	88db      	ldrh	r3, [r3, #6]
 801aef2:	2b00      	cmp	r3, #0
 801aef4:	d12d      	bne.n	801af52 <USBD_SetAddress+0x76>
 801aef6:	683b      	ldr	r3, [r7, #0]
 801aef8:	885b      	ldrh	r3, [r3, #2]
 801aefa:	2b7f      	cmp	r3, #127	; 0x7f
 801aefc:	d829      	bhi.n	801af52 <USBD_SetAddress+0x76>
 801aefe:	683b      	ldr	r3, [r7, #0]
 801af00:	885b      	ldrh	r3, [r3, #2]
 801af02:	b2db      	uxtb	r3, r3
 801af04:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801af08:	73fb      	strb	r3, [r7, #15]
 801af0a:	687b      	ldr	r3, [r7, #4]
 801af0c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801af10:	b2db      	uxtb	r3, r3
 801af12:	2b03      	cmp	r3, #3
 801af14:	d104      	bne.n	801af20 <USBD_SetAddress+0x44>
 801af16:	6839      	ldr	r1, [r7, #0]
 801af18:	6878      	ldr	r0, [r7, #4]
 801af1a:	f000 f9bc 	bl	801b296 <USBD_CtlError>
 801af1e:	e01d      	b.n	801af5c <USBD_SetAddress+0x80>
 801af20:	687b      	ldr	r3, [r7, #4]
 801af22:	7bfa      	ldrb	r2, [r7, #15]
 801af24:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
 801af28:	7bfb      	ldrb	r3, [r7, #15]
 801af2a:	4619      	mov	r1, r3
 801af2c:	6878      	ldr	r0, [r7, #4]
 801af2e:	f004 f93d 	bl	801f1ac <USBD_LL_SetUSBAddress>
 801af32:	6878      	ldr	r0, [r7, #4]
 801af34:	f000 fa7a 	bl	801b42c <USBD_CtlSendStatus>
 801af38:	7bfb      	ldrb	r3, [r7, #15]
 801af3a:	2b00      	cmp	r3, #0
 801af3c:	d004      	beq.n	801af48 <USBD_SetAddress+0x6c>
 801af3e:	687b      	ldr	r3, [r7, #4]
 801af40:	2202      	movs	r2, #2
 801af42:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801af46:	e009      	b.n	801af5c <USBD_SetAddress+0x80>
 801af48:	687b      	ldr	r3, [r7, #4]
 801af4a:	2201      	movs	r2, #1
 801af4c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801af50:	e004      	b.n	801af5c <USBD_SetAddress+0x80>
 801af52:	6839      	ldr	r1, [r7, #0]
 801af54:	6878      	ldr	r0, [r7, #4]
 801af56:	f000 f99e 	bl	801b296 <USBD_CtlError>
 801af5a:	bf00      	nop
 801af5c:	bf00      	nop
 801af5e:	3710      	adds	r7, #16
 801af60:	46bd      	mov	sp, r7
 801af62:	bd80      	pop	{r7, pc}

0801af64 <USBD_SetConfig>:
 801af64:	b580      	push	{r7, lr}
 801af66:	b084      	sub	sp, #16
 801af68:	af00      	add	r7, sp, #0
 801af6a:	6078      	str	r0, [r7, #4]
 801af6c:	6039      	str	r1, [r7, #0]
 801af6e:	2300      	movs	r3, #0
 801af70:	73fb      	strb	r3, [r7, #15]
 801af72:	683b      	ldr	r3, [r7, #0]
 801af74:	885b      	ldrh	r3, [r3, #2]
 801af76:	b2da      	uxtb	r2, r3
 801af78:	4b4e      	ldr	r3, [pc, #312]	; (801b0b4 <USBD_SetConfig+0x150>)
 801af7a:	701a      	strb	r2, [r3, #0]
 801af7c:	4b4d      	ldr	r3, [pc, #308]	; (801b0b4 <USBD_SetConfig+0x150>)
 801af7e:	781b      	ldrb	r3, [r3, #0]
 801af80:	2b01      	cmp	r3, #1
 801af82:	d905      	bls.n	801af90 <USBD_SetConfig+0x2c>
 801af84:	6839      	ldr	r1, [r7, #0]
 801af86:	6878      	ldr	r0, [r7, #4]
 801af88:	f000 f985 	bl	801b296 <USBD_CtlError>
 801af8c:	2303      	movs	r3, #3
 801af8e:	e08c      	b.n	801b0aa <USBD_SetConfig+0x146>
 801af90:	687b      	ldr	r3, [r7, #4]
 801af92:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801af96:	b2db      	uxtb	r3, r3
 801af98:	2b02      	cmp	r3, #2
 801af9a:	d002      	beq.n	801afa2 <USBD_SetConfig+0x3e>
 801af9c:	2b03      	cmp	r3, #3
 801af9e:	d029      	beq.n	801aff4 <USBD_SetConfig+0x90>
 801afa0:	e075      	b.n	801b08e <USBD_SetConfig+0x12a>
 801afa2:	4b44      	ldr	r3, [pc, #272]	; (801b0b4 <USBD_SetConfig+0x150>)
 801afa4:	781b      	ldrb	r3, [r3, #0]
 801afa6:	2b00      	cmp	r3, #0
 801afa8:	d020      	beq.n	801afec <USBD_SetConfig+0x88>
 801afaa:	4b42      	ldr	r3, [pc, #264]	; (801b0b4 <USBD_SetConfig+0x150>)
 801afac:	781b      	ldrb	r3, [r3, #0]
 801afae:	461a      	mov	r2, r3
 801afb0:	687b      	ldr	r3, [r7, #4]
 801afb2:	605a      	str	r2, [r3, #4]
 801afb4:	4b3f      	ldr	r3, [pc, #252]	; (801b0b4 <USBD_SetConfig+0x150>)
 801afb6:	781b      	ldrb	r3, [r3, #0]
 801afb8:	4619      	mov	r1, r3
 801afba:	6878      	ldr	r0, [r7, #4]
 801afbc:	f7fe ffe7 	bl	8019f8e <USBD_SetClassConfig>
 801afc0:	4603      	mov	r3, r0
 801afc2:	73fb      	strb	r3, [r7, #15]
 801afc4:	7bfb      	ldrb	r3, [r7, #15]
 801afc6:	2b00      	cmp	r3, #0
 801afc8:	d008      	beq.n	801afdc <USBD_SetConfig+0x78>
 801afca:	6839      	ldr	r1, [r7, #0]
 801afcc:	6878      	ldr	r0, [r7, #4]
 801afce:	f000 f962 	bl	801b296 <USBD_CtlError>
 801afd2:	687b      	ldr	r3, [r7, #4]
 801afd4:	2202      	movs	r2, #2
 801afd6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801afda:	e065      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801afdc:	6878      	ldr	r0, [r7, #4]
 801afde:	f000 fa25 	bl	801b42c <USBD_CtlSendStatus>
 801afe2:	687b      	ldr	r3, [r7, #4]
 801afe4:	2203      	movs	r2, #3
 801afe6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801afea:	e05d      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801afec:	6878      	ldr	r0, [r7, #4]
 801afee:	f000 fa1d 	bl	801b42c <USBD_CtlSendStatus>
 801aff2:	e059      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801aff4:	4b2f      	ldr	r3, [pc, #188]	; (801b0b4 <USBD_SetConfig+0x150>)
 801aff6:	781b      	ldrb	r3, [r3, #0]
 801aff8:	2b00      	cmp	r3, #0
 801affa:	d112      	bne.n	801b022 <USBD_SetConfig+0xbe>
 801affc:	687b      	ldr	r3, [r7, #4]
 801affe:	2202      	movs	r2, #2
 801b000:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b004:	4b2b      	ldr	r3, [pc, #172]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b006:	781b      	ldrb	r3, [r3, #0]
 801b008:	461a      	mov	r2, r3
 801b00a:	687b      	ldr	r3, [r7, #4]
 801b00c:	605a      	str	r2, [r3, #4]
 801b00e:	4b29      	ldr	r3, [pc, #164]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b010:	781b      	ldrb	r3, [r3, #0]
 801b012:	4619      	mov	r1, r3
 801b014:	6878      	ldr	r0, [r7, #4]
 801b016:	f7fe ffd6 	bl	8019fc6 <USBD_ClrClassConfig>
 801b01a:	6878      	ldr	r0, [r7, #4]
 801b01c:	f000 fa06 	bl	801b42c <USBD_CtlSendStatus>
 801b020:	e042      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801b022:	4b24      	ldr	r3, [pc, #144]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b024:	781b      	ldrb	r3, [r3, #0]
 801b026:	461a      	mov	r2, r3
 801b028:	687b      	ldr	r3, [r7, #4]
 801b02a:	685b      	ldr	r3, [r3, #4]
 801b02c:	429a      	cmp	r2, r3
 801b02e:	d02a      	beq.n	801b086 <USBD_SetConfig+0x122>
 801b030:	687b      	ldr	r3, [r7, #4]
 801b032:	685b      	ldr	r3, [r3, #4]
 801b034:	b2db      	uxtb	r3, r3
 801b036:	4619      	mov	r1, r3
 801b038:	6878      	ldr	r0, [r7, #4]
 801b03a:	f7fe ffc4 	bl	8019fc6 <USBD_ClrClassConfig>
 801b03e:	4b1d      	ldr	r3, [pc, #116]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b040:	781b      	ldrb	r3, [r3, #0]
 801b042:	461a      	mov	r2, r3
 801b044:	687b      	ldr	r3, [r7, #4]
 801b046:	605a      	str	r2, [r3, #4]
 801b048:	4b1a      	ldr	r3, [pc, #104]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b04a:	781b      	ldrb	r3, [r3, #0]
 801b04c:	4619      	mov	r1, r3
 801b04e:	6878      	ldr	r0, [r7, #4]
 801b050:	f7fe ff9d 	bl	8019f8e <USBD_SetClassConfig>
 801b054:	4603      	mov	r3, r0
 801b056:	73fb      	strb	r3, [r7, #15]
 801b058:	7bfb      	ldrb	r3, [r7, #15]
 801b05a:	2b00      	cmp	r3, #0
 801b05c:	d00f      	beq.n	801b07e <USBD_SetConfig+0x11a>
 801b05e:	6839      	ldr	r1, [r7, #0]
 801b060:	6878      	ldr	r0, [r7, #4]
 801b062:	f000 f918 	bl	801b296 <USBD_CtlError>
 801b066:	687b      	ldr	r3, [r7, #4]
 801b068:	685b      	ldr	r3, [r3, #4]
 801b06a:	b2db      	uxtb	r3, r3
 801b06c:	4619      	mov	r1, r3
 801b06e:	6878      	ldr	r0, [r7, #4]
 801b070:	f7fe ffa9 	bl	8019fc6 <USBD_ClrClassConfig>
 801b074:	687b      	ldr	r3, [r7, #4]
 801b076:	2202      	movs	r2, #2
 801b078:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b07c:	e014      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801b07e:	6878      	ldr	r0, [r7, #4]
 801b080:	f000 f9d4 	bl	801b42c <USBD_CtlSendStatus>
 801b084:	e010      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801b086:	6878      	ldr	r0, [r7, #4]
 801b088:	f000 f9d0 	bl	801b42c <USBD_CtlSendStatus>
 801b08c:	e00c      	b.n	801b0a8 <USBD_SetConfig+0x144>
 801b08e:	6839      	ldr	r1, [r7, #0]
 801b090:	6878      	ldr	r0, [r7, #4]
 801b092:	f000 f900 	bl	801b296 <USBD_CtlError>
 801b096:	4b07      	ldr	r3, [pc, #28]	; (801b0b4 <USBD_SetConfig+0x150>)
 801b098:	781b      	ldrb	r3, [r3, #0]
 801b09a:	4619      	mov	r1, r3
 801b09c:	6878      	ldr	r0, [r7, #4]
 801b09e:	f7fe ff92 	bl	8019fc6 <USBD_ClrClassConfig>
 801b0a2:	2303      	movs	r3, #3
 801b0a4:	73fb      	strb	r3, [r7, #15]
 801b0a6:	bf00      	nop
 801b0a8:	7bfb      	ldrb	r3, [r7, #15]
 801b0aa:	4618      	mov	r0, r3
 801b0ac:	3710      	adds	r7, #16
 801b0ae:	46bd      	mov	sp, r7
 801b0b0:	bd80      	pop	{r7, pc}
 801b0b2:	bf00      	nop
 801b0b4:	200039bc 	.word	0x200039bc

0801b0b8 <USBD_GetConfig>:
 801b0b8:	b580      	push	{r7, lr}
 801b0ba:	b082      	sub	sp, #8
 801b0bc:	af00      	add	r7, sp, #0
 801b0be:	6078      	str	r0, [r7, #4]
 801b0c0:	6039      	str	r1, [r7, #0]
 801b0c2:	683b      	ldr	r3, [r7, #0]
 801b0c4:	88db      	ldrh	r3, [r3, #6]
 801b0c6:	2b01      	cmp	r3, #1
 801b0c8:	d004      	beq.n	801b0d4 <USBD_GetConfig+0x1c>
 801b0ca:	6839      	ldr	r1, [r7, #0]
 801b0cc:	6878      	ldr	r0, [r7, #4]
 801b0ce:	f000 f8e2 	bl	801b296 <USBD_CtlError>
 801b0d2:	e023      	b.n	801b11c <USBD_GetConfig+0x64>
 801b0d4:	687b      	ldr	r3, [r7, #4]
 801b0d6:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b0da:	b2db      	uxtb	r3, r3
 801b0dc:	2b02      	cmp	r3, #2
 801b0de:	dc02      	bgt.n	801b0e6 <USBD_GetConfig+0x2e>
 801b0e0:	2b00      	cmp	r3, #0
 801b0e2:	dc03      	bgt.n	801b0ec <USBD_GetConfig+0x34>
 801b0e4:	e015      	b.n	801b112 <USBD_GetConfig+0x5a>
 801b0e6:	2b03      	cmp	r3, #3
 801b0e8:	d00b      	beq.n	801b102 <USBD_GetConfig+0x4a>
 801b0ea:	e012      	b.n	801b112 <USBD_GetConfig+0x5a>
 801b0ec:	687b      	ldr	r3, [r7, #4]
 801b0ee:	2200      	movs	r2, #0
 801b0f0:	609a      	str	r2, [r3, #8]
 801b0f2:	687b      	ldr	r3, [r7, #4]
 801b0f4:	3308      	adds	r3, #8
 801b0f6:	2201      	movs	r2, #1
 801b0f8:	4619      	mov	r1, r3
 801b0fa:	6878      	ldr	r0, [r7, #4]
 801b0fc:	f000 f93c 	bl	801b378 <USBD_CtlSendData>
 801b100:	e00c      	b.n	801b11c <USBD_GetConfig+0x64>
 801b102:	687b      	ldr	r3, [r7, #4]
 801b104:	3304      	adds	r3, #4
 801b106:	2201      	movs	r2, #1
 801b108:	4619      	mov	r1, r3
 801b10a:	6878      	ldr	r0, [r7, #4]
 801b10c:	f000 f934 	bl	801b378 <USBD_CtlSendData>
 801b110:	e004      	b.n	801b11c <USBD_GetConfig+0x64>
 801b112:	6839      	ldr	r1, [r7, #0]
 801b114:	6878      	ldr	r0, [r7, #4]
 801b116:	f000 f8be 	bl	801b296 <USBD_CtlError>
 801b11a:	bf00      	nop
 801b11c:	bf00      	nop
 801b11e:	3708      	adds	r7, #8
 801b120:	46bd      	mov	sp, r7
 801b122:	bd80      	pop	{r7, pc}

0801b124 <USBD_GetStatus>:
 801b124:	b580      	push	{r7, lr}
 801b126:	b082      	sub	sp, #8
 801b128:	af00      	add	r7, sp, #0
 801b12a:	6078      	str	r0, [r7, #4]
 801b12c:	6039      	str	r1, [r7, #0]
 801b12e:	687b      	ldr	r3, [r7, #4]
 801b130:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b134:	b2db      	uxtb	r3, r3
 801b136:	3b01      	subs	r3, #1
 801b138:	2b02      	cmp	r3, #2
 801b13a:	d81e      	bhi.n	801b17a <USBD_GetStatus+0x56>
 801b13c:	683b      	ldr	r3, [r7, #0]
 801b13e:	88db      	ldrh	r3, [r3, #6]
 801b140:	2b02      	cmp	r3, #2
 801b142:	d004      	beq.n	801b14e <USBD_GetStatus+0x2a>
 801b144:	6839      	ldr	r1, [r7, #0]
 801b146:	6878      	ldr	r0, [r7, #4]
 801b148:	f000 f8a5 	bl	801b296 <USBD_CtlError>
 801b14c:	e01a      	b.n	801b184 <USBD_GetStatus+0x60>
 801b14e:	687b      	ldr	r3, [r7, #4]
 801b150:	2201      	movs	r2, #1
 801b152:	60da      	str	r2, [r3, #12]
 801b154:	687b      	ldr	r3, [r7, #4]
 801b156:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 801b15a:	2b00      	cmp	r3, #0
 801b15c:	d005      	beq.n	801b16a <USBD_GetStatus+0x46>
 801b15e:	687b      	ldr	r3, [r7, #4]
 801b160:	68db      	ldr	r3, [r3, #12]
 801b162:	f043 0202 	orr.w	r2, r3, #2
 801b166:	687b      	ldr	r3, [r7, #4]
 801b168:	60da      	str	r2, [r3, #12]
 801b16a:	687b      	ldr	r3, [r7, #4]
 801b16c:	330c      	adds	r3, #12
 801b16e:	2202      	movs	r2, #2
 801b170:	4619      	mov	r1, r3
 801b172:	6878      	ldr	r0, [r7, #4]
 801b174:	f000 f900 	bl	801b378 <USBD_CtlSendData>
 801b178:	e004      	b.n	801b184 <USBD_GetStatus+0x60>
 801b17a:	6839      	ldr	r1, [r7, #0]
 801b17c:	6878      	ldr	r0, [r7, #4]
 801b17e:	f000 f88a 	bl	801b296 <USBD_CtlError>
 801b182:	bf00      	nop
 801b184:	bf00      	nop
 801b186:	3708      	adds	r7, #8
 801b188:	46bd      	mov	sp, r7
 801b18a:	bd80      	pop	{r7, pc}

0801b18c <USBD_SetFeature>:
 801b18c:	b580      	push	{r7, lr}
 801b18e:	b082      	sub	sp, #8
 801b190:	af00      	add	r7, sp, #0
 801b192:	6078      	str	r0, [r7, #4]
 801b194:	6039      	str	r1, [r7, #0]
 801b196:	683b      	ldr	r3, [r7, #0]
 801b198:	885b      	ldrh	r3, [r3, #2]
 801b19a:	2b01      	cmp	r3, #1
 801b19c:	d107      	bne.n	801b1ae <USBD_SetFeature+0x22>
 801b19e:	687b      	ldr	r3, [r7, #4]
 801b1a0:	2201      	movs	r2, #1
 801b1a2:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801b1a6:	6878      	ldr	r0, [r7, #4]
 801b1a8:	f000 f940 	bl	801b42c <USBD_CtlSendStatus>
 801b1ac:	e013      	b.n	801b1d6 <USBD_SetFeature+0x4a>
 801b1ae:	683b      	ldr	r3, [r7, #0]
 801b1b0:	885b      	ldrh	r3, [r3, #2]
 801b1b2:	2b02      	cmp	r3, #2
 801b1b4:	d10b      	bne.n	801b1ce <USBD_SetFeature+0x42>
 801b1b6:	683b      	ldr	r3, [r7, #0]
 801b1b8:	889b      	ldrh	r3, [r3, #4]
 801b1ba:	0a1b      	lsrs	r3, r3, #8
 801b1bc:	b29b      	uxth	r3, r3
 801b1be:	b2da      	uxtb	r2, r3
 801b1c0:	687b      	ldr	r3, [r7, #4]
 801b1c2:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801b1c6:	6878      	ldr	r0, [r7, #4]
 801b1c8:	f000 f930 	bl	801b42c <USBD_CtlSendStatus>
 801b1cc:	e003      	b.n	801b1d6 <USBD_SetFeature+0x4a>
 801b1ce:	6839      	ldr	r1, [r7, #0]
 801b1d0:	6878      	ldr	r0, [r7, #4]
 801b1d2:	f000 f860 	bl	801b296 <USBD_CtlError>
 801b1d6:	bf00      	nop
 801b1d8:	3708      	adds	r7, #8
 801b1da:	46bd      	mov	sp, r7
 801b1dc:	bd80      	pop	{r7, pc}

0801b1de <USBD_ClrFeature>:
 801b1de:	b580      	push	{r7, lr}
 801b1e0:	b082      	sub	sp, #8
 801b1e2:	af00      	add	r7, sp, #0
 801b1e4:	6078      	str	r0, [r7, #4]
 801b1e6:	6039      	str	r1, [r7, #0]
 801b1e8:	687b      	ldr	r3, [r7, #4]
 801b1ea:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b1ee:	b2db      	uxtb	r3, r3
 801b1f0:	3b01      	subs	r3, #1
 801b1f2:	2b02      	cmp	r3, #2
 801b1f4:	d80b      	bhi.n	801b20e <USBD_ClrFeature+0x30>
 801b1f6:	683b      	ldr	r3, [r7, #0]
 801b1f8:	885b      	ldrh	r3, [r3, #2]
 801b1fa:	2b01      	cmp	r3, #1
 801b1fc:	d10c      	bne.n	801b218 <USBD_ClrFeature+0x3a>
 801b1fe:	687b      	ldr	r3, [r7, #4]
 801b200:	2200      	movs	r2, #0
 801b202:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801b206:	6878      	ldr	r0, [r7, #4]
 801b208:	f000 f910 	bl	801b42c <USBD_CtlSendStatus>
 801b20c:	e004      	b.n	801b218 <USBD_ClrFeature+0x3a>
 801b20e:	6839      	ldr	r1, [r7, #0]
 801b210:	6878      	ldr	r0, [r7, #4]
 801b212:	f000 f840 	bl	801b296 <USBD_CtlError>
 801b216:	e000      	b.n	801b21a <USBD_ClrFeature+0x3c>
 801b218:	bf00      	nop
 801b21a:	bf00      	nop
 801b21c:	3708      	adds	r7, #8
 801b21e:	46bd      	mov	sp, r7
 801b220:	bd80      	pop	{r7, pc}

0801b222 <USBD_ParseSetupRequest>:
 801b222:	b580      	push	{r7, lr}
 801b224:	b084      	sub	sp, #16
 801b226:	af00      	add	r7, sp, #0
 801b228:	6078      	str	r0, [r7, #4]
 801b22a:	6039      	str	r1, [r7, #0]
 801b22c:	683b      	ldr	r3, [r7, #0]
 801b22e:	60fb      	str	r3, [r7, #12]
 801b230:	68fb      	ldr	r3, [r7, #12]
 801b232:	781a      	ldrb	r2, [r3, #0]
 801b234:	687b      	ldr	r3, [r7, #4]
 801b236:	701a      	strb	r2, [r3, #0]
 801b238:	68fb      	ldr	r3, [r7, #12]
 801b23a:	3301      	adds	r3, #1
 801b23c:	60fb      	str	r3, [r7, #12]
 801b23e:	68fb      	ldr	r3, [r7, #12]
 801b240:	781a      	ldrb	r2, [r3, #0]
 801b242:	687b      	ldr	r3, [r7, #4]
 801b244:	705a      	strb	r2, [r3, #1]
 801b246:	68fb      	ldr	r3, [r7, #12]
 801b248:	3301      	adds	r3, #1
 801b24a:	60fb      	str	r3, [r7, #12]
 801b24c:	68f8      	ldr	r0, [r7, #12]
 801b24e:	f7ff fa41 	bl	801a6d4 <SWAPBYTE>
 801b252:	4603      	mov	r3, r0
 801b254:	461a      	mov	r2, r3
 801b256:	687b      	ldr	r3, [r7, #4]
 801b258:	805a      	strh	r2, [r3, #2]
 801b25a:	68fb      	ldr	r3, [r7, #12]
 801b25c:	3301      	adds	r3, #1
 801b25e:	60fb      	str	r3, [r7, #12]
 801b260:	68fb      	ldr	r3, [r7, #12]
 801b262:	3301      	adds	r3, #1
 801b264:	60fb      	str	r3, [r7, #12]
 801b266:	68f8      	ldr	r0, [r7, #12]
 801b268:	f7ff fa34 	bl	801a6d4 <SWAPBYTE>
 801b26c:	4603      	mov	r3, r0
 801b26e:	461a      	mov	r2, r3
 801b270:	687b      	ldr	r3, [r7, #4]
 801b272:	809a      	strh	r2, [r3, #4]
 801b274:	68fb      	ldr	r3, [r7, #12]
 801b276:	3301      	adds	r3, #1
 801b278:	60fb      	str	r3, [r7, #12]
 801b27a:	68fb      	ldr	r3, [r7, #12]
 801b27c:	3301      	adds	r3, #1
 801b27e:	60fb      	str	r3, [r7, #12]
 801b280:	68f8      	ldr	r0, [r7, #12]
 801b282:	f7ff fa27 	bl	801a6d4 <SWAPBYTE>
 801b286:	4603      	mov	r3, r0
 801b288:	461a      	mov	r2, r3
 801b28a:	687b      	ldr	r3, [r7, #4]
 801b28c:	80da      	strh	r2, [r3, #6]
 801b28e:	bf00      	nop
 801b290:	3710      	adds	r7, #16
 801b292:	46bd      	mov	sp, r7
 801b294:	bd80      	pop	{r7, pc}

0801b296 <USBD_CtlError>:
 801b296:	b580      	push	{r7, lr}
 801b298:	b082      	sub	sp, #8
 801b29a:	af00      	add	r7, sp, #0
 801b29c:	6078      	str	r0, [r7, #4]
 801b29e:	6039      	str	r1, [r7, #0]
 801b2a0:	2180      	movs	r1, #128	; 0x80
 801b2a2:	6878      	ldr	r0, [r7, #4]
 801b2a4:	f003 ff18 	bl	801f0d8 <USBD_LL_StallEP>
 801b2a8:	2100      	movs	r1, #0
 801b2aa:	6878      	ldr	r0, [r7, #4]
 801b2ac:	f003 ff14 	bl	801f0d8 <USBD_LL_StallEP>
 801b2b0:	bf00      	nop
 801b2b2:	3708      	adds	r7, #8
 801b2b4:	46bd      	mov	sp, r7
 801b2b6:	bd80      	pop	{r7, pc}

0801b2b8 <USBD_GetString>:
 801b2b8:	b580      	push	{r7, lr}
 801b2ba:	b086      	sub	sp, #24
 801b2bc:	af00      	add	r7, sp, #0
 801b2be:	60f8      	str	r0, [r7, #12]
 801b2c0:	60b9      	str	r1, [r7, #8]
 801b2c2:	607a      	str	r2, [r7, #4]
 801b2c4:	2300      	movs	r3, #0
 801b2c6:	75fb      	strb	r3, [r7, #23]
 801b2c8:	68fb      	ldr	r3, [r7, #12]
 801b2ca:	2b00      	cmp	r3, #0
 801b2cc:	d036      	beq.n	801b33c <USBD_GetString+0x84>
 801b2ce:	68fb      	ldr	r3, [r7, #12]
 801b2d0:	613b      	str	r3, [r7, #16]
 801b2d2:	6938      	ldr	r0, [r7, #16]
 801b2d4:	f000 f836 	bl	801b344 <USBD_GetLen>
 801b2d8:	4603      	mov	r3, r0
 801b2da:	3301      	adds	r3, #1
 801b2dc:	b29b      	uxth	r3, r3
 801b2de:	005b      	lsls	r3, r3, #1
 801b2e0:	b29a      	uxth	r2, r3
 801b2e2:	687b      	ldr	r3, [r7, #4]
 801b2e4:	801a      	strh	r2, [r3, #0]
 801b2e6:	7dfb      	ldrb	r3, [r7, #23]
 801b2e8:	68ba      	ldr	r2, [r7, #8]
 801b2ea:	4413      	add	r3, r2
 801b2ec:	687a      	ldr	r2, [r7, #4]
 801b2ee:	7812      	ldrb	r2, [r2, #0]
 801b2f0:	701a      	strb	r2, [r3, #0]
 801b2f2:	7dfb      	ldrb	r3, [r7, #23]
 801b2f4:	3301      	adds	r3, #1
 801b2f6:	75fb      	strb	r3, [r7, #23]
 801b2f8:	7dfb      	ldrb	r3, [r7, #23]
 801b2fa:	68ba      	ldr	r2, [r7, #8]
 801b2fc:	4413      	add	r3, r2
 801b2fe:	2203      	movs	r2, #3
 801b300:	701a      	strb	r2, [r3, #0]
 801b302:	7dfb      	ldrb	r3, [r7, #23]
 801b304:	3301      	adds	r3, #1
 801b306:	75fb      	strb	r3, [r7, #23]
 801b308:	e013      	b.n	801b332 <USBD_GetString+0x7a>
 801b30a:	7dfb      	ldrb	r3, [r7, #23]
 801b30c:	68ba      	ldr	r2, [r7, #8]
 801b30e:	4413      	add	r3, r2
 801b310:	693a      	ldr	r2, [r7, #16]
 801b312:	7812      	ldrb	r2, [r2, #0]
 801b314:	701a      	strb	r2, [r3, #0]
 801b316:	693b      	ldr	r3, [r7, #16]
 801b318:	3301      	adds	r3, #1
 801b31a:	613b      	str	r3, [r7, #16]
 801b31c:	7dfb      	ldrb	r3, [r7, #23]
 801b31e:	3301      	adds	r3, #1
 801b320:	75fb      	strb	r3, [r7, #23]
 801b322:	7dfb      	ldrb	r3, [r7, #23]
 801b324:	68ba      	ldr	r2, [r7, #8]
 801b326:	4413      	add	r3, r2
 801b328:	2200      	movs	r2, #0
 801b32a:	701a      	strb	r2, [r3, #0]
 801b32c:	7dfb      	ldrb	r3, [r7, #23]
 801b32e:	3301      	adds	r3, #1
 801b330:	75fb      	strb	r3, [r7, #23]
 801b332:	693b      	ldr	r3, [r7, #16]
 801b334:	781b      	ldrb	r3, [r3, #0]
 801b336:	2b00      	cmp	r3, #0
 801b338:	d1e7      	bne.n	801b30a <USBD_GetString+0x52>
 801b33a:	e000      	b.n	801b33e <USBD_GetString+0x86>
 801b33c:	bf00      	nop
 801b33e:	3718      	adds	r7, #24
 801b340:	46bd      	mov	sp, r7
 801b342:	bd80      	pop	{r7, pc}

0801b344 <USBD_GetLen>:
 801b344:	b480      	push	{r7}
 801b346:	b085      	sub	sp, #20
 801b348:	af00      	add	r7, sp, #0
 801b34a:	6078      	str	r0, [r7, #4]
 801b34c:	2300      	movs	r3, #0
 801b34e:	73fb      	strb	r3, [r7, #15]
 801b350:	687b      	ldr	r3, [r7, #4]
 801b352:	60bb      	str	r3, [r7, #8]
 801b354:	e005      	b.n	801b362 <USBD_GetLen+0x1e>
 801b356:	7bfb      	ldrb	r3, [r7, #15]
 801b358:	3301      	adds	r3, #1
 801b35a:	73fb      	strb	r3, [r7, #15]
 801b35c:	68bb      	ldr	r3, [r7, #8]
 801b35e:	3301      	adds	r3, #1
 801b360:	60bb      	str	r3, [r7, #8]
 801b362:	68bb      	ldr	r3, [r7, #8]
 801b364:	781b      	ldrb	r3, [r3, #0]
 801b366:	2b00      	cmp	r3, #0
 801b368:	d1f5      	bne.n	801b356 <USBD_GetLen+0x12>
 801b36a:	7bfb      	ldrb	r3, [r7, #15]
 801b36c:	4618      	mov	r0, r3
 801b36e:	3714      	adds	r7, #20
 801b370:	46bd      	mov	sp, r7
 801b372:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b376:	4770      	bx	lr

0801b378 <USBD_CtlSendData>:
 801b378:	b580      	push	{r7, lr}
 801b37a:	b084      	sub	sp, #16
 801b37c:	af00      	add	r7, sp, #0
 801b37e:	60f8      	str	r0, [r7, #12]
 801b380:	60b9      	str	r1, [r7, #8]
 801b382:	607a      	str	r2, [r7, #4]
 801b384:	68fb      	ldr	r3, [r7, #12]
 801b386:	2202      	movs	r2, #2
 801b388:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b38c:	68fb      	ldr	r3, [r7, #12]
 801b38e:	687a      	ldr	r2, [r7, #4]
 801b390:	619a      	str	r2, [r3, #24]
 801b392:	68fb      	ldr	r3, [r7, #12]
 801b394:	687a      	ldr	r2, [r7, #4]
 801b396:	61da      	str	r2, [r3, #28]
 801b398:	687b      	ldr	r3, [r7, #4]
 801b39a:	68ba      	ldr	r2, [r7, #8]
 801b39c:	2100      	movs	r1, #0
 801b39e:	68f8      	ldr	r0, [r7, #12]
 801b3a0:	f003 ff23 	bl	801f1ea <USBD_LL_Transmit>
 801b3a4:	2300      	movs	r3, #0
 801b3a6:	4618      	mov	r0, r3
 801b3a8:	3710      	adds	r7, #16
 801b3aa:	46bd      	mov	sp, r7
 801b3ac:	bd80      	pop	{r7, pc}

0801b3ae <USBD_CtlContinueSendData>:
 801b3ae:	b580      	push	{r7, lr}
 801b3b0:	b084      	sub	sp, #16
 801b3b2:	af00      	add	r7, sp, #0
 801b3b4:	60f8      	str	r0, [r7, #12]
 801b3b6:	60b9      	str	r1, [r7, #8]
 801b3b8:	607a      	str	r2, [r7, #4]
 801b3ba:	687b      	ldr	r3, [r7, #4]
 801b3bc:	68ba      	ldr	r2, [r7, #8]
 801b3be:	2100      	movs	r1, #0
 801b3c0:	68f8      	ldr	r0, [r7, #12]
 801b3c2:	f003 ff12 	bl	801f1ea <USBD_LL_Transmit>
 801b3c6:	2300      	movs	r3, #0
 801b3c8:	4618      	mov	r0, r3
 801b3ca:	3710      	adds	r7, #16
 801b3cc:	46bd      	mov	sp, r7
 801b3ce:	bd80      	pop	{r7, pc}

0801b3d0 <USBD_CtlPrepareRx>:
 801b3d0:	b580      	push	{r7, lr}
 801b3d2:	b084      	sub	sp, #16
 801b3d4:	af00      	add	r7, sp, #0
 801b3d6:	60f8      	str	r0, [r7, #12]
 801b3d8:	60b9      	str	r1, [r7, #8]
 801b3da:	607a      	str	r2, [r7, #4]
 801b3dc:	68fb      	ldr	r3, [r7, #12]
 801b3de:	2203      	movs	r2, #3
 801b3e0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b3e4:	68fb      	ldr	r3, [r7, #12]
 801b3e6:	687a      	ldr	r2, [r7, #4]
 801b3e8:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
 801b3ec:	68fb      	ldr	r3, [r7, #12]
 801b3ee:	687a      	ldr	r2, [r7, #4]
 801b3f0:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
 801b3f4:	687b      	ldr	r3, [r7, #4]
 801b3f6:	68ba      	ldr	r2, [r7, #8]
 801b3f8:	2100      	movs	r1, #0
 801b3fa:	68f8      	ldr	r0, [r7, #12]
 801b3fc:	f003 ff16 	bl	801f22c <USBD_LL_PrepareReceive>
 801b400:	2300      	movs	r3, #0
 801b402:	4618      	mov	r0, r3
 801b404:	3710      	adds	r7, #16
 801b406:	46bd      	mov	sp, r7
 801b408:	bd80      	pop	{r7, pc}

0801b40a <USBD_CtlContinueRx>:
 801b40a:	b580      	push	{r7, lr}
 801b40c:	b084      	sub	sp, #16
 801b40e:	af00      	add	r7, sp, #0
 801b410:	60f8      	str	r0, [r7, #12]
 801b412:	60b9      	str	r1, [r7, #8]
 801b414:	607a      	str	r2, [r7, #4]
 801b416:	687b      	ldr	r3, [r7, #4]
 801b418:	68ba      	ldr	r2, [r7, #8]
 801b41a:	2100      	movs	r1, #0
 801b41c:	68f8      	ldr	r0, [r7, #12]
 801b41e:	f003 ff05 	bl	801f22c <USBD_LL_PrepareReceive>
 801b422:	2300      	movs	r3, #0
 801b424:	4618      	mov	r0, r3
 801b426:	3710      	adds	r7, #16
 801b428:	46bd      	mov	sp, r7
 801b42a:	bd80      	pop	{r7, pc}

0801b42c <USBD_CtlSendStatus>:
 801b42c:	b580      	push	{r7, lr}
 801b42e:	b082      	sub	sp, #8
 801b430:	af00      	add	r7, sp, #0
 801b432:	6078      	str	r0, [r7, #4]
 801b434:	687b      	ldr	r3, [r7, #4]
 801b436:	2204      	movs	r2, #4
 801b438:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b43c:	2300      	movs	r3, #0
 801b43e:	2200      	movs	r2, #0
 801b440:	2100      	movs	r1, #0
 801b442:	6878      	ldr	r0, [r7, #4]
 801b444:	f003 fed1 	bl	801f1ea <USBD_LL_Transmit>
 801b448:	2300      	movs	r3, #0
 801b44a:	4618      	mov	r0, r3
 801b44c:	3708      	adds	r7, #8
 801b44e:	46bd      	mov	sp, r7
 801b450:	bd80      	pop	{r7, pc}

0801b452 <USBD_CtlReceiveStatus>:
 801b452:	b580      	push	{r7, lr}
 801b454:	b082      	sub	sp, #8
 801b456:	af00      	add	r7, sp, #0
 801b458:	6078      	str	r0, [r7, #4]
 801b45a:	687b      	ldr	r3, [r7, #4]
 801b45c:	2205      	movs	r2, #5
 801b45e:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b462:	2300      	movs	r3, #0
 801b464:	2200      	movs	r2, #0
 801b466:	2100      	movs	r1, #0
 801b468:	6878      	ldr	r0, [r7, #4]
 801b46a:	f003 fedf 	bl	801f22c <USBD_LL_PrepareReceive>
 801b46e:	2300      	movs	r3, #0
 801b470:	4618      	mov	r0, r3
 801b472:	3708      	adds	r7, #8
 801b474:	46bd      	mov	sp, r7
 801b476:	bd80      	pop	{r7, pc}

0801b478 <makeFreeRtosPriority>:
 801b478:	b480      	push	{r7}
 801b47a:	b085      	sub	sp, #20
 801b47c:	af00      	add	r7, sp, #0
 801b47e:	4603      	mov	r3, r0
 801b480:	80fb      	strh	r3, [r7, #6]
 801b482:	2300      	movs	r3, #0
 801b484:	60fb      	str	r3, [r7, #12]
 801b486:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801b48a:	2b84      	cmp	r3, #132	; 0x84
 801b48c:	d005      	beq.n	801b49a <makeFreeRtosPriority+0x22>
 801b48e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 801b492:	68fb      	ldr	r3, [r7, #12]
 801b494:	4413      	add	r3, r2
 801b496:	3303      	adds	r3, #3
 801b498:	60fb      	str	r3, [r7, #12]
 801b49a:	68fb      	ldr	r3, [r7, #12]
 801b49c:	4618      	mov	r0, r3
 801b49e:	3714      	adds	r7, #20
 801b4a0:	46bd      	mov	sp, r7
 801b4a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b4a6:	4770      	bx	lr

0801b4a8 <osKernelStart>:
 801b4a8:	b580      	push	{r7, lr}
 801b4aa:	af00      	add	r7, sp, #0
 801b4ac:	f001 fb24 	bl	801caf8 <vTaskStartScheduler>
 801b4b0:	2300      	movs	r3, #0
 801b4b2:	4618      	mov	r0, r3
 801b4b4:	bd80      	pop	{r7, pc}

0801b4b6 <osThreadCreate>:
 801b4b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b4b8:	b089      	sub	sp, #36	; 0x24
 801b4ba:	af04      	add	r7, sp, #16
 801b4bc:	6078      	str	r0, [r7, #4]
 801b4be:	6039      	str	r1, [r7, #0]
 801b4c0:	687b      	ldr	r3, [r7, #4]
 801b4c2:	695b      	ldr	r3, [r3, #20]
 801b4c4:	2b00      	cmp	r3, #0
 801b4c6:	d020      	beq.n	801b50a <osThreadCreate+0x54>
 801b4c8:	687b      	ldr	r3, [r7, #4]
 801b4ca:	699b      	ldr	r3, [r3, #24]
 801b4cc:	2b00      	cmp	r3, #0
 801b4ce:	d01c      	beq.n	801b50a <osThreadCreate+0x54>
 801b4d0:	687b      	ldr	r3, [r7, #4]
 801b4d2:	685c      	ldr	r4, [r3, #4]
 801b4d4:	687b      	ldr	r3, [r7, #4]
 801b4d6:	681d      	ldr	r5, [r3, #0]
 801b4d8:	687b      	ldr	r3, [r7, #4]
 801b4da:	691e      	ldr	r6, [r3, #16]
 801b4dc:	687b      	ldr	r3, [r7, #4]
 801b4de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b4e2:	4618      	mov	r0, r3
 801b4e4:	f7ff ffc8 	bl	801b478 <makeFreeRtosPriority>
 801b4e8:	4601      	mov	r1, r0
 801b4ea:	687b      	ldr	r3, [r7, #4]
 801b4ec:	695b      	ldr	r3, [r3, #20]
 801b4ee:	687a      	ldr	r2, [r7, #4]
 801b4f0:	6992      	ldr	r2, [r2, #24]
 801b4f2:	9202      	str	r2, [sp, #8]
 801b4f4:	9301      	str	r3, [sp, #4]
 801b4f6:	9100      	str	r1, [sp, #0]
 801b4f8:	683b      	ldr	r3, [r7, #0]
 801b4fa:	4632      	mov	r2, r6
 801b4fc:	4629      	mov	r1, r5
 801b4fe:	4620      	mov	r0, r4
 801b500:	f001 f88e 	bl	801c620 <xTaskCreateStatic>
 801b504:	4603      	mov	r3, r0
 801b506:	60fb      	str	r3, [r7, #12]
 801b508:	e01c      	b.n	801b544 <osThreadCreate+0x8e>
 801b50a:	687b      	ldr	r3, [r7, #4]
 801b50c:	685c      	ldr	r4, [r3, #4]
 801b50e:	687b      	ldr	r3, [r7, #4]
 801b510:	681d      	ldr	r5, [r3, #0]
 801b512:	687b      	ldr	r3, [r7, #4]
 801b514:	691b      	ldr	r3, [r3, #16]
 801b516:	b29e      	uxth	r6, r3
 801b518:	687b      	ldr	r3, [r7, #4]
 801b51a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b51e:	4618      	mov	r0, r3
 801b520:	f7ff ffaa 	bl	801b478 <makeFreeRtosPriority>
 801b524:	4602      	mov	r2, r0
 801b526:	f107 030c 	add.w	r3, r7, #12
 801b52a:	9301      	str	r3, [sp, #4]
 801b52c:	9200      	str	r2, [sp, #0]
 801b52e:	683b      	ldr	r3, [r7, #0]
 801b530:	4632      	mov	r2, r6
 801b532:	4629      	mov	r1, r5
 801b534:	4620      	mov	r0, r4
 801b536:	f001 f8d0 	bl	801c6da <xTaskCreate>
 801b53a:	4603      	mov	r3, r0
 801b53c:	2b01      	cmp	r3, #1
 801b53e:	d001      	beq.n	801b544 <osThreadCreate+0x8e>
 801b540:	2300      	movs	r3, #0
 801b542:	e000      	b.n	801b546 <osThreadCreate+0x90>
 801b544:	68fb      	ldr	r3, [r7, #12]
 801b546:	4618      	mov	r0, r3
 801b548:	3714      	adds	r7, #20
 801b54a:	46bd      	mov	sp, r7
 801b54c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b54e <osDelay>:
 801b54e:	b580      	push	{r7, lr}
 801b550:	b084      	sub	sp, #16
 801b552:	af00      	add	r7, sp, #0
 801b554:	6078      	str	r0, [r7, #4]
 801b556:	687b      	ldr	r3, [r7, #4]
 801b558:	60fb      	str	r3, [r7, #12]
 801b55a:	68fb      	ldr	r3, [r7, #12]
 801b55c:	2b00      	cmp	r3, #0
 801b55e:	d001      	beq.n	801b564 <osDelay+0x16>
 801b560:	68fb      	ldr	r3, [r7, #12]
 801b562:	e000      	b.n	801b566 <osDelay+0x18>
 801b564:	2301      	movs	r3, #1
 801b566:	4618      	mov	r0, r3
 801b568:	f001 fa92 	bl	801ca90 <vTaskDelay>
 801b56c:	2300      	movs	r3, #0
 801b56e:	4618      	mov	r0, r3
 801b570:	3710      	adds	r7, #16
 801b572:	46bd      	mov	sp, r7
 801b574:	bd80      	pop	{r7, pc}

0801b576 <xEventGroupCreate>:
 801b576:	b580      	push	{r7, lr}
 801b578:	b082      	sub	sp, #8
 801b57a:	af00      	add	r7, sp, #0
 801b57c:	2020      	movs	r0, #32
 801b57e:	f002 ff9b 	bl	801e4b8 <pvPortMalloc>
 801b582:	6078      	str	r0, [r7, #4]
 801b584:	687b      	ldr	r3, [r7, #4]
 801b586:	2b00      	cmp	r3, #0
 801b588:	d00a      	beq.n	801b5a0 <xEventGroupCreate+0x2a>
 801b58a:	687b      	ldr	r3, [r7, #4]
 801b58c:	2200      	movs	r2, #0
 801b58e:	601a      	str	r2, [r3, #0]
 801b590:	687b      	ldr	r3, [r7, #4]
 801b592:	3304      	adds	r3, #4
 801b594:	4618      	mov	r0, r3
 801b596:	f000 f9dd 	bl	801b954 <vListInitialise>
 801b59a:	687b      	ldr	r3, [r7, #4]
 801b59c:	2200      	movs	r2, #0
 801b59e:	771a      	strb	r2, [r3, #28]
 801b5a0:	687b      	ldr	r3, [r7, #4]
 801b5a2:	4618      	mov	r0, r3
 801b5a4:	3708      	adds	r7, #8
 801b5a6:	46bd      	mov	sp, r7
 801b5a8:	bd80      	pop	{r7, pc}
	...

0801b5ac <xEventGroupWaitBits>:
 801b5ac:	b580      	push	{r7, lr}
 801b5ae:	b090      	sub	sp, #64	; 0x40
 801b5b0:	af00      	add	r7, sp, #0
 801b5b2:	60f8      	str	r0, [r7, #12]
 801b5b4:	60b9      	str	r1, [r7, #8]
 801b5b6:	607a      	str	r2, [r7, #4]
 801b5b8:	603b      	str	r3, [r7, #0]
 801b5ba:	68fb      	ldr	r3, [r7, #12]
 801b5bc:	637b      	str	r3, [r7, #52]	; 0x34
 801b5be:	2300      	movs	r3, #0
 801b5c0:	63bb      	str	r3, [r7, #56]	; 0x38
 801b5c2:	2300      	movs	r3, #0
 801b5c4:	633b      	str	r3, [r7, #48]	; 0x30
 801b5c6:	68fb      	ldr	r3, [r7, #12]
 801b5c8:	2b00      	cmp	r3, #0
 801b5ca:	d10a      	bne.n	801b5e2 <xEventGroupWaitBits+0x36>
 801b5cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b5d0:	f383 8811 	msr	BASEPRI, r3
 801b5d4:	f3bf 8f6f 	isb	sy
 801b5d8:	f3bf 8f4f 	dsb	sy
 801b5dc:	623b      	str	r3, [r7, #32]
 801b5de:	bf00      	nop
 801b5e0:	e7fe      	b.n	801b5e0 <xEventGroupWaitBits+0x34>
 801b5e2:	68bb      	ldr	r3, [r7, #8]
 801b5e4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b5e8:	2b00      	cmp	r3, #0
 801b5ea:	d00a      	beq.n	801b602 <xEventGroupWaitBits+0x56>
 801b5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b5f0:	f383 8811 	msr	BASEPRI, r3
 801b5f4:	f3bf 8f6f 	isb	sy
 801b5f8:	f3bf 8f4f 	dsb	sy
 801b5fc:	61fb      	str	r3, [r7, #28]
 801b5fe:	bf00      	nop
 801b600:	e7fe      	b.n	801b600 <xEventGroupWaitBits+0x54>
 801b602:	68bb      	ldr	r3, [r7, #8]
 801b604:	2b00      	cmp	r3, #0
 801b606:	d10a      	bne.n	801b61e <xEventGroupWaitBits+0x72>
 801b608:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b60c:	f383 8811 	msr	BASEPRI, r3
 801b610:	f3bf 8f6f 	isb	sy
 801b614:	f3bf 8f4f 	dsb	sy
 801b618:	61bb      	str	r3, [r7, #24]
 801b61a:	bf00      	nop
 801b61c:	e7fe      	b.n	801b61c <xEventGroupWaitBits+0x70>
 801b61e:	f001 ff8b 	bl	801d538 <xTaskGetSchedulerState>
 801b622:	4603      	mov	r3, r0
 801b624:	2b00      	cmp	r3, #0
 801b626:	d102      	bne.n	801b62e <xEventGroupWaitBits+0x82>
 801b628:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b62a:	2b00      	cmp	r3, #0
 801b62c:	d101      	bne.n	801b632 <xEventGroupWaitBits+0x86>
 801b62e:	2301      	movs	r3, #1
 801b630:	e000      	b.n	801b634 <xEventGroupWaitBits+0x88>
 801b632:	2300      	movs	r3, #0
 801b634:	2b00      	cmp	r3, #0
 801b636:	d10a      	bne.n	801b64e <xEventGroupWaitBits+0xa2>
 801b638:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b63c:	f383 8811 	msr	BASEPRI, r3
 801b640:	f3bf 8f6f 	isb	sy
 801b644:	f3bf 8f4f 	dsb	sy
 801b648:	617b      	str	r3, [r7, #20]
 801b64a:	bf00      	nop
 801b64c:	e7fe      	b.n	801b64c <xEventGroupWaitBits+0xa0>
 801b64e:	f001 fac5 	bl	801cbdc <vTaskSuspendAll>
 801b652:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b654:	681b      	ldr	r3, [r3, #0]
 801b656:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b658:	683a      	ldr	r2, [r7, #0]
 801b65a:	68b9      	ldr	r1, [r7, #8]
 801b65c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 801b65e:	f000 f943 	bl	801b8e8 <prvTestWaitCondition>
 801b662:	62b8      	str	r0, [r7, #40]	; 0x28
 801b664:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b666:	2b00      	cmp	r3, #0
 801b668:	d00e      	beq.n	801b688 <xEventGroupWaitBits+0xdc>
 801b66a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b66c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b66e:	2300      	movs	r3, #0
 801b670:	64bb      	str	r3, [r7, #72]	; 0x48
 801b672:	687b      	ldr	r3, [r7, #4]
 801b674:	2b00      	cmp	r3, #0
 801b676:	d028      	beq.n	801b6ca <xEventGroupWaitBits+0x11e>
 801b678:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b67a:	681a      	ldr	r2, [r3, #0]
 801b67c:	68bb      	ldr	r3, [r7, #8]
 801b67e:	43db      	mvns	r3, r3
 801b680:	401a      	ands	r2, r3
 801b682:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b684:	601a      	str	r2, [r3, #0]
 801b686:	e020      	b.n	801b6ca <xEventGroupWaitBits+0x11e>
 801b688:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b68a:	2b00      	cmp	r3, #0
 801b68c:	d104      	bne.n	801b698 <xEventGroupWaitBits+0xec>
 801b68e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b690:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b692:	2301      	movs	r3, #1
 801b694:	633b      	str	r3, [r7, #48]	; 0x30
 801b696:	e018      	b.n	801b6ca <xEventGroupWaitBits+0x11e>
 801b698:	687b      	ldr	r3, [r7, #4]
 801b69a:	2b00      	cmp	r3, #0
 801b69c:	d003      	beq.n	801b6a6 <xEventGroupWaitBits+0xfa>
 801b69e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b6a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801b6a4:	63bb      	str	r3, [r7, #56]	; 0x38
 801b6a6:	683b      	ldr	r3, [r7, #0]
 801b6a8:	2b00      	cmp	r3, #0
 801b6aa:	d003      	beq.n	801b6b4 <xEventGroupWaitBits+0x108>
 801b6ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b6ae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 801b6b2:	63bb      	str	r3, [r7, #56]	; 0x38
 801b6b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b6b6:	1d18      	adds	r0, r3, #4
 801b6b8:	68ba      	ldr	r2, [r7, #8]
 801b6ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b6bc:	4313      	orrs	r3, r2
 801b6be:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801b6c0:	4619      	mov	r1, r3
 801b6c2:	f001 fcaf 	bl	801d024 <vTaskPlaceOnUnorderedEventList>
 801b6c6:	2300      	movs	r3, #0
 801b6c8:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b6ca:	f001 fa95 	bl	801cbf8 <xTaskResumeAll>
 801b6ce:	6278      	str	r0, [r7, #36]	; 0x24
 801b6d0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b6d2:	2b00      	cmp	r3, #0
 801b6d4:	d031      	beq.n	801b73a <xEventGroupWaitBits+0x18e>
 801b6d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b6d8:	2b00      	cmp	r3, #0
 801b6da:	d107      	bne.n	801b6ec <xEventGroupWaitBits+0x140>
 801b6dc:	4b19      	ldr	r3, [pc, #100]	; (801b744 <xEventGroupWaitBits+0x198>)
 801b6de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801b6e2:	601a      	str	r2, [r3, #0]
 801b6e4:	f3bf 8f4f 	dsb	sy
 801b6e8:	f3bf 8f6f 	isb	sy
 801b6ec:	f001 ffc8 	bl	801d680 <uxTaskResetEventItemValue>
 801b6f0:	63f8      	str	r0, [r7, #60]	; 0x3c
 801b6f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b6f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801b6f8:	2b00      	cmp	r3, #0
 801b6fa:	d11a      	bne.n	801b732 <xEventGroupWaitBits+0x186>
 801b6fc:	f002 fdba 	bl	801e274 <vPortEnterCritical>
 801b700:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b702:	681b      	ldr	r3, [r3, #0]
 801b704:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b706:	683a      	ldr	r2, [r7, #0]
 801b708:	68b9      	ldr	r1, [r7, #8]
 801b70a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 801b70c:	f000 f8ec 	bl	801b8e8 <prvTestWaitCondition>
 801b710:	4603      	mov	r3, r0
 801b712:	2b00      	cmp	r3, #0
 801b714:	d009      	beq.n	801b72a <xEventGroupWaitBits+0x17e>
 801b716:	687b      	ldr	r3, [r7, #4]
 801b718:	2b00      	cmp	r3, #0
 801b71a:	d006      	beq.n	801b72a <xEventGroupWaitBits+0x17e>
 801b71c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b71e:	681a      	ldr	r2, [r3, #0]
 801b720:	68bb      	ldr	r3, [r7, #8]
 801b722:	43db      	mvns	r3, r3
 801b724:	401a      	ands	r2, r3
 801b726:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b728:	601a      	str	r2, [r3, #0]
 801b72a:	2301      	movs	r3, #1
 801b72c:	633b      	str	r3, [r7, #48]	; 0x30
 801b72e:	f002 fdd1 	bl	801e2d4 <vPortExitCritical>
 801b732:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b734:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 801b738:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b73a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b73c:	4618      	mov	r0, r3
 801b73e:	3740      	adds	r7, #64	; 0x40
 801b740:	46bd      	mov	sp, r7
 801b742:	bd80      	pop	{r7, pc}
 801b744:	e000ed04 	.word	0xe000ed04

0801b748 <xEventGroupClearBits>:
 801b748:	b580      	push	{r7, lr}
 801b74a:	b086      	sub	sp, #24
 801b74c:	af00      	add	r7, sp, #0
 801b74e:	6078      	str	r0, [r7, #4]
 801b750:	6039      	str	r1, [r7, #0]
 801b752:	687b      	ldr	r3, [r7, #4]
 801b754:	617b      	str	r3, [r7, #20]
 801b756:	687b      	ldr	r3, [r7, #4]
 801b758:	2b00      	cmp	r3, #0
 801b75a:	d10a      	bne.n	801b772 <xEventGroupClearBits+0x2a>
 801b75c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b760:	f383 8811 	msr	BASEPRI, r3
 801b764:	f3bf 8f6f 	isb	sy
 801b768:	f3bf 8f4f 	dsb	sy
 801b76c:	60fb      	str	r3, [r7, #12]
 801b76e:	bf00      	nop
 801b770:	e7fe      	b.n	801b770 <xEventGroupClearBits+0x28>
 801b772:	683b      	ldr	r3, [r7, #0]
 801b774:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b778:	2b00      	cmp	r3, #0
 801b77a:	d00a      	beq.n	801b792 <xEventGroupClearBits+0x4a>
 801b77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b780:	f383 8811 	msr	BASEPRI, r3
 801b784:	f3bf 8f6f 	isb	sy
 801b788:	f3bf 8f4f 	dsb	sy
 801b78c:	60bb      	str	r3, [r7, #8]
 801b78e:	bf00      	nop
 801b790:	e7fe      	b.n	801b790 <xEventGroupClearBits+0x48>
 801b792:	f002 fd6f 	bl	801e274 <vPortEnterCritical>
 801b796:	697b      	ldr	r3, [r7, #20]
 801b798:	681b      	ldr	r3, [r3, #0]
 801b79a:	613b      	str	r3, [r7, #16]
 801b79c:	697b      	ldr	r3, [r7, #20]
 801b79e:	681a      	ldr	r2, [r3, #0]
 801b7a0:	683b      	ldr	r3, [r7, #0]
 801b7a2:	43db      	mvns	r3, r3
 801b7a4:	401a      	ands	r2, r3
 801b7a6:	697b      	ldr	r3, [r7, #20]
 801b7a8:	601a      	str	r2, [r3, #0]
 801b7aa:	f002 fd93 	bl	801e2d4 <vPortExitCritical>
 801b7ae:	693b      	ldr	r3, [r7, #16]
 801b7b0:	4618      	mov	r0, r3
 801b7b2:	3718      	adds	r7, #24
 801b7b4:	46bd      	mov	sp, r7
 801b7b6:	bd80      	pop	{r7, pc}

0801b7b8 <xEventGroupSetBits>:
 801b7b8:	b580      	push	{r7, lr}
 801b7ba:	b08e      	sub	sp, #56	; 0x38
 801b7bc:	af00      	add	r7, sp, #0
 801b7be:	6078      	str	r0, [r7, #4]
 801b7c0:	6039      	str	r1, [r7, #0]
 801b7c2:	2300      	movs	r3, #0
 801b7c4:	633b      	str	r3, [r7, #48]	; 0x30
 801b7c6:	687b      	ldr	r3, [r7, #4]
 801b7c8:	62bb      	str	r3, [r7, #40]	; 0x28
 801b7ca:	2300      	movs	r3, #0
 801b7cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b7ce:	687b      	ldr	r3, [r7, #4]
 801b7d0:	2b00      	cmp	r3, #0
 801b7d2:	d10a      	bne.n	801b7ea <xEventGroupSetBits+0x32>
 801b7d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b7d8:	f383 8811 	msr	BASEPRI, r3
 801b7dc:	f3bf 8f6f 	isb	sy
 801b7e0:	f3bf 8f4f 	dsb	sy
 801b7e4:	613b      	str	r3, [r7, #16]
 801b7e6:	bf00      	nop
 801b7e8:	e7fe      	b.n	801b7e8 <xEventGroupSetBits+0x30>
 801b7ea:	683b      	ldr	r3, [r7, #0]
 801b7ec:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b7f0:	2b00      	cmp	r3, #0
 801b7f2:	d00a      	beq.n	801b80a <xEventGroupSetBits+0x52>
 801b7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b7f8:	f383 8811 	msr	BASEPRI, r3
 801b7fc:	f3bf 8f6f 	isb	sy
 801b800:	f3bf 8f4f 	dsb	sy
 801b804:	60fb      	str	r3, [r7, #12]
 801b806:	bf00      	nop
 801b808:	e7fe      	b.n	801b808 <xEventGroupSetBits+0x50>
 801b80a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b80c:	3304      	adds	r3, #4
 801b80e:	627b      	str	r3, [r7, #36]	; 0x24
 801b810:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b812:	3308      	adds	r3, #8
 801b814:	623b      	str	r3, [r7, #32]
 801b816:	f001 f9e1 	bl	801cbdc <vTaskSuspendAll>
 801b81a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b81c:	68db      	ldr	r3, [r3, #12]
 801b81e:	637b      	str	r3, [r7, #52]	; 0x34
 801b820:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b822:	681a      	ldr	r2, [r3, #0]
 801b824:	683b      	ldr	r3, [r7, #0]
 801b826:	431a      	orrs	r2, r3
 801b828:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b82a:	601a      	str	r2, [r3, #0]
 801b82c:	e03c      	b.n	801b8a8 <xEventGroupSetBits+0xf0>
 801b82e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b830:	685b      	ldr	r3, [r3, #4]
 801b832:	61fb      	str	r3, [r7, #28]
 801b834:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b836:	681b      	ldr	r3, [r3, #0]
 801b838:	61bb      	str	r3, [r7, #24]
 801b83a:	2300      	movs	r3, #0
 801b83c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b83e:	69bb      	ldr	r3, [r7, #24]
 801b840:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b844:	617b      	str	r3, [r7, #20]
 801b846:	69bb      	ldr	r3, [r7, #24]
 801b848:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 801b84c:	61bb      	str	r3, [r7, #24]
 801b84e:	697b      	ldr	r3, [r7, #20]
 801b850:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 801b854:	2b00      	cmp	r3, #0
 801b856:	d108      	bne.n	801b86a <xEventGroupSetBits+0xb2>
 801b858:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b85a:	681a      	ldr	r2, [r3, #0]
 801b85c:	69bb      	ldr	r3, [r7, #24]
 801b85e:	4013      	ands	r3, r2
 801b860:	2b00      	cmp	r3, #0
 801b862:	d00b      	beq.n	801b87c <xEventGroupSetBits+0xc4>
 801b864:	2301      	movs	r3, #1
 801b866:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b868:	e008      	b.n	801b87c <xEventGroupSetBits+0xc4>
 801b86a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b86c:	681a      	ldr	r2, [r3, #0]
 801b86e:	69bb      	ldr	r3, [r7, #24]
 801b870:	4013      	ands	r3, r2
 801b872:	69ba      	ldr	r2, [r7, #24]
 801b874:	429a      	cmp	r2, r3
 801b876:	d101      	bne.n	801b87c <xEventGroupSetBits+0xc4>
 801b878:	2301      	movs	r3, #1
 801b87a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b87c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b87e:	2b00      	cmp	r3, #0
 801b880:	d010      	beq.n	801b8a4 <xEventGroupSetBits+0xec>
 801b882:	697b      	ldr	r3, [r7, #20]
 801b884:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801b888:	2b00      	cmp	r3, #0
 801b88a:	d003      	beq.n	801b894 <xEventGroupSetBits+0xdc>
 801b88c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801b88e:	69bb      	ldr	r3, [r7, #24]
 801b890:	4313      	orrs	r3, r2
 801b892:	633b      	str	r3, [r7, #48]	; 0x30
 801b894:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b896:	681b      	ldr	r3, [r3, #0]
 801b898:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 801b89c:	4619      	mov	r1, r3
 801b89e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801b8a0:	f001 fc8a 	bl	801d1b8 <vTaskRemoveFromUnorderedEventList>
 801b8a4:	69fb      	ldr	r3, [r7, #28]
 801b8a6:	637b      	str	r3, [r7, #52]	; 0x34
 801b8a8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801b8aa:	6a3b      	ldr	r3, [r7, #32]
 801b8ac:	429a      	cmp	r2, r3
 801b8ae:	d1be      	bne.n	801b82e <xEventGroupSetBits+0x76>
 801b8b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b8b2:	681a      	ldr	r2, [r3, #0]
 801b8b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801b8b6:	43db      	mvns	r3, r3
 801b8b8:	401a      	ands	r2, r3
 801b8ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b8bc:	601a      	str	r2, [r3, #0]
 801b8be:	f001 f99b 	bl	801cbf8 <xTaskResumeAll>
 801b8c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b8c4:	681b      	ldr	r3, [r3, #0]
 801b8c6:	4618      	mov	r0, r3
 801b8c8:	3738      	adds	r7, #56	; 0x38
 801b8ca:	46bd      	mov	sp, r7
 801b8cc:	bd80      	pop	{r7, pc}

0801b8ce <vEventGroupSetBitsCallback>:
 801b8ce:	b580      	push	{r7, lr}
 801b8d0:	b082      	sub	sp, #8
 801b8d2:	af00      	add	r7, sp, #0
 801b8d4:	6078      	str	r0, [r7, #4]
 801b8d6:	6039      	str	r1, [r7, #0]
 801b8d8:	6839      	ldr	r1, [r7, #0]
 801b8da:	6878      	ldr	r0, [r7, #4]
 801b8dc:	f7ff ff6c 	bl	801b7b8 <xEventGroupSetBits>
 801b8e0:	bf00      	nop
 801b8e2:	3708      	adds	r7, #8
 801b8e4:	46bd      	mov	sp, r7
 801b8e6:	bd80      	pop	{r7, pc}

0801b8e8 <prvTestWaitCondition>:
 801b8e8:	b480      	push	{r7}
 801b8ea:	b087      	sub	sp, #28
 801b8ec:	af00      	add	r7, sp, #0
 801b8ee:	60f8      	str	r0, [r7, #12]
 801b8f0:	60b9      	str	r1, [r7, #8]
 801b8f2:	607a      	str	r2, [r7, #4]
 801b8f4:	2300      	movs	r3, #0
 801b8f6:	617b      	str	r3, [r7, #20]
 801b8f8:	687b      	ldr	r3, [r7, #4]
 801b8fa:	2b00      	cmp	r3, #0
 801b8fc:	d107      	bne.n	801b90e <prvTestWaitCondition+0x26>
 801b8fe:	68fa      	ldr	r2, [r7, #12]
 801b900:	68bb      	ldr	r3, [r7, #8]
 801b902:	4013      	ands	r3, r2
 801b904:	2b00      	cmp	r3, #0
 801b906:	d00a      	beq.n	801b91e <prvTestWaitCondition+0x36>
 801b908:	2301      	movs	r3, #1
 801b90a:	617b      	str	r3, [r7, #20]
 801b90c:	e007      	b.n	801b91e <prvTestWaitCondition+0x36>
 801b90e:	68fa      	ldr	r2, [r7, #12]
 801b910:	68bb      	ldr	r3, [r7, #8]
 801b912:	4013      	ands	r3, r2
 801b914:	68ba      	ldr	r2, [r7, #8]
 801b916:	429a      	cmp	r2, r3
 801b918:	d101      	bne.n	801b91e <prvTestWaitCondition+0x36>
 801b91a:	2301      	movs	r3, #1
 801b91c:	617b      	str	r3, [r7, #20]
 801b91e:	697b      	ldr	r3, [r7, #20]
 801b920:	4618      	mov	r0, r3
 801b922:	371c      	adds	r7, #28
 801b924:	46bd      	mov	sp, r7
 801b926:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b92a:	4770      	bx	lr

0801b92c <xEventGroupSetBitsFromISR>:
 801b92c:	b580      	push	{r7, lr}
 801b92e:	b086      	sub	sp, #24
 801b930:	af00      	add	r7, sp, #0
 801b932:	60f8      	str	r0, [r7, #12]
 801b934:	60b9      	str	r1, [r7, #8]
 801b936:	607a      	str	r2, [r7, #4]
 801b938:	687b      	ldr	r3, [r7, #4]
 801b93a:	68ba      	ldr	r2, [r7, #8]
 801b93c:	68f9      	ldr	r1, [r7, #12]
 801b93e:	4804      	ldr	r0, [pc, #16]	; (801b950 <xEventGroupSetBitsFromISR+0x24>)
 801b940:	f002 fb4a 	bl	801dfd8 <xTimerPendFunctionCallFromISR>
 801b944:	6178      	str	r0, [r7, #20]
 801b946:	697b      	ldr	r3, [r7, #20]
 801b948:	4618      	mov	r0, r3
 801b94a:	3718      	adds	r7, #24
 801b94c:	46bd      	mov	sp, r7
 801b94e:	bd80      	pop	{r7, pc}
 801b950:	0801b8cf 	.word	0x0801b8cf

0801b954 <vListInitialise>:
 801b954:	b480      	push	{r7}
 801b956:	b083      	sub	sp, #12
 801b958:	af00      	add	r7, sp, #0
 801b95a:	6078      	str	r0, [r7, #4]
 801b95c:	687b      	ldr	r3, [r7, #4]
 801b95e:	f103 0208 	add.w	r2, r3, #8
 801b962:	687b      	ldr	r3, [r7, #4]
 801b964:	605a      	str	r2, [r3, #4]
 801b966:	687b      	ldr	r3, [r7, #4]
 801b968:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801b96c:	609a      	str	r2, [r3, #8]
 801b96e:	687b      	ldr	r3, [r7, #4]
 801b970:	f103 0208 	add.w	r2, r3, #8
 801b974:	687b      	ldr	r3, [r7, #4]
 801b976:	60da      	str	r2, [r3, #12]
 801b978:	687b      	ldr	r3, [r7, #4]
 801b97a:	f103 0208 	add.w	r2, r3, #8
 801b97e:	687b      	ldr	r3, [r7, #4]
 801b980:	611a      	str	r2, [r3, #16]
 801b982:	687b      	ldr	r3, [r7, #4]
 801b984:	2200      	movs	r2, #0
 801b986:	601a      	str	r2, [r3, #0]
 801b988:	bf00      	nop
 801b98a:	370c      	adds	r7, #12
 801b98c:	46bd      	mov	sp, r7
 801b98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b992:	4770      	bx	lr

0801b994 <vListInitialiseItem>:
 801b994:	b480      	push	{r7}
 801b996:	b083      	sub	sp, #12
 801b998:	af00      	add	r7, sp, #0
 801b99a:	6078      	str	r0, [r7, #4]
 801b99c:	687b      	ldr	r3, [r7, #4]
 801b99e:	2200      	movs	r2, #0
 801b9a0:	611a      	str	r2, [r3, #16]
 801b9a2:	bf00      	nop
 801b9a4:	370c      	adds	r7, #12
 801b9a6:	46bd      	mov	sp, r7
 801b9a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9ac:	4770      	bx	lr

0801b9ae <vListInsertEnd>:
 801b9ae:	b480      	push	{r7}
 801b9b0:	b085      	sub	sp, #20
 801b9b2:	af00      	add	r7, sp, #0
 801b9b4:	6078      	str	r0, [r7, #4]
 801b9b6:	6039      	str	r1, [r7, #0]
 801b9b8:	687b      	ldr	r3, [r7, #4]
 801b9ba:	685b      	ldr	r3, [r3, #4]
 801b9bc:	60fb      	str	r3, [r7, #12]
 801b9be:	683b      	ldr	r3, [r7, #0]
 801b9c0:	68fa      	ldr	r2, [r7, #12]
 801b9c2:	605a      	str	r2, [r3, #4]
 801b9c4:	68fb      	ldr	r3, [r7, #12]
 801b9c6:	689a      	ldr	r2, [r3, #8]
 801b9c8:	683b      	ldr	r3, [r7, #0]
 801b9ca:	609a      	str	r2, [r3, #8]
 801b9cc:	68fb      	ldr	r3, [r7, #12]
 801b9ce:	689b      	ldr	r3, [r3, #8]
 801b9d0:	683a      	ldr	r2, [r7, #0]
 801b9d2:	605a      	str	r2, [r3, #4]
 801b9d4:	68fb      	ldr	r3, [r7, #12]
 801b9d6:	683a      	ldr	r2, [r7, #0]
 801b9d8:	609a      	str	r2, [r3, #8]
 801b9da:	683b      	ldr	r3, [r7, #0]
 801b9dc:	687a      	ldr	r2, [r7, #4]
 801b9de:	611a      	str	r2, [r3, #16]
 801b9e0:	687b      	ldr	r3, [r7, #4]
 801b9e2:	681b      	ldr	r3, [r3, #0]
 801b9e4:	1c5a      	adds	r2, r3, #1
 801b9e6:	687b      	ldr	r3, [r7, #4]
 801b9e8:	601a      	str	r2, [r3, #0]
 801b9ea:	bf00      	nop
 801b9ec:	3714      	adds	r7, #20
 801b9ee:	46bd      	mov	sp, r7
 801b9f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9f4:	4770      	bx	lr

0801b9f6 <vListInsert>:
 801b9f6:	b480      	push	{r7}
 801b9f8:	b085      	sub	sp, #20
 801b9fa:	af00      	add	r7, sp, #0
 801b9fc:	6078      	str	r0, [r7, #4]
 801b9fe:	6039      	str	r1, [r7, #0]
 801ba00:	683b      	ldr	r3, [r7, #0]
 801ba02:	681b      	ldr	r3, [r3, #0]
 801ba04:	60bb      	str	r3, [r7, #8]
 801ba06:	68bb      	ldr	r3, [r7, #8]
 801ba08:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801ba0c:	d103      	bne.n	801ba16 <vListInsert+0x20>
 801ba0e:	687b      	ldr	r3, [r7, #4]
 801ba10:	691b      	ldr	r3, [r3, #16]
 801ba12:	60fb      	str	r3, [r7, #12]
 801ba14:	e00c      	b.n	801ba30 <vListInsert+0x3a>
 801ba16:	687b      	ldr	r3, [r7, #4]
 801ba18:	3308      	adds	r3, #8
 801ba1a:	60fb      	str	r3, [r7, #12]
 801ba1c:	e002      	b.n	801ba24 <vListInsert+0x2e>
 801ba1e:	68fb      	ldr	r3, [r7, #12]
 801ba20:	685b      	ldr	r3, [r3, #4]
 801ba22:	60fb      	str	r3, [r7, #12]
 801ba24:	68fb      	ldr	r3, [r7, #12]
 801ba26:	685b      	ldr	r3, [r3, #4]
 801ba28:	681b      	ldr	r3, [r3, #0]
 801ba2a:	68ba      	ldr	r2, [r7, #8]
 801ba2c:	429a      	cmp	r2, r3
 801ba2e:	d2f6      	bcs.n	801ba1e <vListInsert+0x28>
 801ba30:	68fb      	ldr	r3, [r7, #12]
 801ba32:	685a      	ldr	r2, [r3, #4]
 801ba34:	683b      	ldr	r3, [r7, #0]
 801ba36:	605a      	str	r2, [r3, #4]
 801ba38:	683b      	ldr	r3, [r7, #0]
 801ba3a:	685b      	ldr	r3, [r3, #4]
 801ba3c:	683a      	ldr	r2, [r7, #0]
 801ba3e:	609a      	str	r2, [r3, #8]
 801ba40:	683b      	ldr	r3, [r7, #0]
 801ba42:	68fa      	ldr	r2, [r7, #12]
 801ba44:	609a      	str	r2, [r3, #8]
 801ba46:	68fb      	ldr	r3, [r7, #12]
 801ba48:	683a      	ldr	r2, [r7, #0]
 801ba4a:	605a      	str	r2, [r3, #4]
 801ba4c:	683b      	ldr	r3, [r7, #0]
 801ba4e:	687a      	ldr	r2, [r7, #4]
 801ba50:	611a      	str	r2, [r3, #16]
 801ba52:	687b      	ldr	r3, [r7, #4]
 801ba54:	681b      	ldr	r3, [r3, #0]
 801ba56:	1c5a      	adds	r2, r3, #1
 801ba58:	687b      	ldr	r3, [r7, #4]
 801ba5a:	601a      	str	r2, [r3, #0]
 801ba5c:	bf00      	nop
 801ba5e:	3714      	adds	r7, #20
 801ba60:	46bd      	mov	sp, r7
 801ba62:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ba66:	4770      	bx	lr

0801ba68 <uxListRemove>:
 801ba68:	b480      	push	{r7}
 801ba6a:	b085      	sub	sp, #20
 801ba6c:	af00      	add	r7, sp, #0
 801ba6e:	6078      	str	r0, [r7, #4]
 801ba70:	687b      	ldr	r3, [r7, #4]
 801ba72:	691b      	ldr	r3, [r3, #16]
 801ba74:	60fb      	str	r3, [r7, #12]
 801ba76:	687b      	ldr	r3, [r7, #4]
 801ba78:	685b      	ldr	r3, [r3, #4]
 801ba7a:	687a      	ldr	r2, [r7, #4]
 801ba7c:	6892      	ldr	r2, [r2, #8]
 801ba7e:	609a      	str	r2, [r3, #8]
 801ba80:	687b      	ldr	r3, [r7, #4]
 801ba82:	689b      	ldr	r3, [r3, #8]
 801ba84:	687a      	ldr	r2, [r7, #4]
 801ba86:	6852      	ldr	r2, [r2, #4]
 801ba88:	605a      	str	r2, [r3, #4]
 801ba8a:	68fb      	ldr	r3, [r7, #12]
 801ba8c:	685b      	ldr	r3, [r3, #4]
 801ba8e:	687a      	ldr	r2, [r7, #4]
 801ba90:	429a      	cmp	r2, r3
 801ba92:	d103      	bne.n	801ba9c <uxListRemove+0x34>
 801ba94:	687b      	ldr	r3, [r7, #4]
 801ba96:	689a      	ldr	r2, [r3, #8]
 801ba98:	68fb      	ldr	r3, [r7, #12]
 801ba9a:	605a      	str	r2, [r3, #4]
 801ba9c:	687b      	ldr	r3, [r7, #4]
 801ba9e:	2200      	movs	r2, #0
 801baa0:	611a      	str	r2, [r3, #16]
 801baa2:	68fb      	ldr	r3, [r7, #12]
 801baa4:	681b      	ldr	r3, [r3, #0]
 801baa6:	1e5a      	subs	r2, r3, #1
 801baa8:	68fb      	ldr	r3, [r7, #12]
 801baaa:	601a      	str	r2, [r3, #0]
 801baac:	68fb      	ldr	r3, [r7, #12]
 801baae:	681b      	ldr	r3, [r3, #0]
 801bab0:	4618      	mov	r0, r3
 801bab2:	3714      	adds	r7, #20
 801bab4:	46bd      	mov	sp, r7
 801bab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801baba:	4770      	bx	lr

0801babc <xQueueGenericReset>:
 801babc:	b580      	push	{r7, lr}
 801babe:	b084      	sub	sp, #16
 801bac0:	af00      	add	r7, sp, #0
 801bac2:	6078      	str	r0, [r7, #4]
 801bac4:	6039      	str	r1, [r7, #0]
 801bac6:	687b      	ldr	r3, [r7, #4]
 801bac8:	60fb      	str	r3, [r7, #12]
 801baca:	68fb      	ldr	r3, [r7, #12]
 801bacc:	2b00      	cmp	r3, #0
 801bace:	d10a      	bne.n	801bae6 <xQueueGenericReset+0x2a>
 801bad0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bad4:	f383 8811 	msr	BASEPRI, r3
 801bad8:	f3bf 8f6f 	isb	sy
 801badc:	f3bf 8f4f 	dsb	sy
 801bae0:	60bb      	str	r3, [r7, #8]
 801bae2:	bf00      	nop
 801bae4:	e7fe      	b.n	801bae4 <xQueueGenericReset+0x28>
 801bae6:	f002 fbc5 	bl	801e274 <vPortEnterCritical>
 801baea:	68fb      	ldr	r3, [r7, #12]
 801baec:	681a      	ldr	r2, [r3, #0]
 801baee:	68fb      	ldr	r3, [r7, #12]
 801baf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801baf2:	68f9      	ldr	r1, [r7, #12]
 801baf4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801baf6:	fb01 f303 	mul.w	r3, r1, r3
 801bafa:	441a      	add	r2, r3
 801bafc:	68fb      	ldr	r3, [r7, #12]
 801bafe:	609a      	str	r2, [r3, #8]
 801bb00:	68fb      	ldr	r3, [r7, #12]
 801bb02:	2200      	movs	r2, #0
 801bb04:	639a      	str	r2, [r3, #56]	; 0x38
 801bb06:	68fb      	ldr	r3, [r7, #12]
 801bb08:	681a      	ldr	r2, [r3, #0]
 801bb0a:	68fb      	ldr	r3, [r7, #12]
 801bb0c:	605a      	str	r2, [r3, #4]
 801bb0e:	68fb      	ldr	r3, [r7, #12]
 801bb10:	681a      	ldr	r2, [r3, #0]
 801bb12:	68fb      	ldr	r3, [r7, #12]
 801bb14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bb16:	3b01      	subs	r3, #1
 801bb18:	68f9      	ldr	r1, [r7, #12]
 801bb1a:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801bb1c:	fb01 f303 	mul.w	r3, r1, r3
 801bb20:	441a      	add	r2, r3
 801bb22:	68fb      	ldr	r3, [r7, #12]
 801bb24:	60da      	str	r2, [r3, #12]
 801bb26:	68fb      	ldr	r3, [r7, #12]
 801bb28:	22ff      	movs	r2, #255	; 0xff
 801bb2a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801bb2e:	68fb      	ldr	r3, [r7, #12]
 801bb30:	22ff      	movs	r2, #255	; 0xff
 801bb32:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801bb36:	683b      	ldr	r3, [r7, #0]
 801bb38:	2b00      	cmp	r3, #0
 801bb3a:	d114      	bne.n	801bb66 <xQueueGenericReset+0xaa>
 801bb3c:	68fb      	ldr	r3, [r7, #12]
 801bb3e:	691b      	ldr	r3, [r3, #16]
 801bb40:	2b00      	cmp	r3, #0
 801bb42:	d01a      	beq.n	801bb7a <xQueueGenericReset+0xbe>
 801bb44:	68fb      	ldr	r3, [r7, #12]
 801bb46:	3310      	adds	r3, #16
 801bb48:	4618      	mov	r0, r3
 801bb4a:	f001 fad3 	bl	801d0f4 <xTaskRemoveFromEventList>
 801bb4e:	4603      	mov	r3, r0
 801bb50:	2b00      	cmp	r3, #0
 801bb52:	d012      	beq.n	801bb7a <xQueueGenericReset+0xbe>
 801bb54:	4b0c      	ldr	r3, [pc, #48]	; (801bb88 <xQueueGenericReset+0xcc>)
 801bb56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801bb5a:	601a      	str	r2, [r3, #0]
 801bb5c:	f3bf 8f4f 	dsb	sy
 801bb60:	f3bf 8f6f 	isb	sy
 801bb64:	e009      	b.n	801bb7a <xQueueGenericReset+0xbe>
 801bb66:	68fb      	ldr	r3, [r7, #12]
 801bb68:	3310      	adds	r3, #16
 801bb6a:	4618      	mov	r0, r3
 801bb6c:	f7ff fef2 	bl	801b954 <vListInitialise>
 801bb70:	68fb      	ldr	r3, [r7, #12]
 801bb72:	3324      	adds	r3, #36	; 0x24
 801bb74:	4618      	mov	r0, r3
 801bb76:	f7ff feed 	bl	801b954 <vListInitialise>
 801bb7a:	f002 fbab 	bl	801e2d4 <vPortExitCritical>
 801bb7e:	2301      	movs	r3, #1
 801bb80:	4618      	mov	r0, r3
 801bb82:	3710      	adds	r7, #16
 801bb84:	46bd      	mov	sp, r7
 801bb86:	bd80      	pop	{r7, pc}
 801bb88:	e000ed04 	.word	0xe000ed04

0801bb8c <xQueueGenericCreateStatic>:
 801bb8c:	b580      	push	{r7, lr}
 801bb8e:	b08e      	sub	sp, #56	; 0x38
 801bb90:	af02      	add	r7, sp, #8
 801bb92:	60f8      	str	r0, [r7, #12]
 801bb94:	60b9      	str	r1, [r7, #8]
 801bb96:	607a      	str	r2, [r7, #4]
 801bb98:	603b      	str	r3, [r7, #0]
 801bb9a:	68fb      	ldr	r3, [r7, #12]
 801bb9c:	2b00      	cmp	r3, #0
 801bb9e:	d10a      	bne.n	801bbb6 <xQueueGenericCreateStatic+0x2a>
 801bba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bba4:	f383 8811 	msr	BASEPRI, r3
 801bba8:	f3bf 8f6f 	isb	sy
 801bbac:	f3bf 8f4f 	dsb	sy
 801bbb0:	62bb      	str	r3, [r7, #40]	; 0x28
 801bbb2:	bf00      	nop
 801bbb4:	e7fe      	b.n	801bbb4 <xQueueGenericCreateStatic+0x28>
 801bbb6:	683b      	ldr	r3, [r7, #0]
 801bbb8:	2b00      	cmp	r3, #0
 801bbba:	d10a      	bne.n	801bbd2 <xQueueGenericCreateStatic+0x46>
 801bbbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bbc0:	f383 8811 	msr	BASEPRI, r3
 801bbc4:	f3bf 8f6f 	isb	sy
 801bbc8:	f3bf 8f4f 	dsb	sy
 801bbcc:	627b      	str	r3, [r7, #36]	; 0x24
 801bbce:	bf00      	nop
 801bbd0:	e7fe      	b.n	801bbd0 <xQueueGenericCreateStatic+0x44>
 801bbd2:	687b      	ldr	r3, [r7, #4]
 801bbd4:	2b00      	cmp	r3, #0
 801bbd6:	d002      	beq.n	801bbde <xQueueGenericCreateStatic+0x52>
 801bbd8:	68bb      	ldr	r3, [r7, #8]
 801bbda:	2b00      	cmp	r3, #0
 801bbdc:	d001      	beq.n	801bbe2 <xQueueGenericCreateStatic+0x56>
 801bbde:	2301      	movs	r3, #1
 801bbe0:	e000      	b.n	801bbe4 <xQueueGenericCreateStatic+0x58>
 801bbe2:	2300      	movs	r3, #0
 801bbe4:	2b00      	cmp	r3, #0
 801bbe6:	d10a      	bne.n	801bbfe <xQueueGenericCreateStatic+0x72>
 801bbe8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bbec:	f383 8811 	msr	BASEPRI, r3
 801bbf0:	f3bf 8f6f 	isb	sy
 801bbf4:	f3bf 8f4f 	dsb	sy
 801bbf8:	623b      	str	r3, [r7, #32]
 801bbfa:	bf00      	nop
 801bbfc:	e7fe      	b.n	801bbfc <xQueueGenericCreateStatic+0x70>
 801bbfe:	687b      	ldr	r3, [r7, #4]
 801bc00:	2b00      	cmp	r3, #0
 801bc02:	d102      	bne.n	801bc0a <xQueueGenericCreateStatic+0x7e>
 801bc04:	68bb      	ldr	r3, [r7, #8]
 801bc06:	2b00      	cmp	r3, #0
 801bc08:	d101      	bne.n	801bc0e <xQueueGenericCreateStatic+0x82>
 801bc0a:	2301      	movs	r3, #1
 801bc0c:	e000      	b.n	801bc10 <xQueueGenericCreateStatic+0x84>
 801bc0e:	2300      	movs	r3, #0
 801bc10:	2b00      	cmp	r3, #0
 801bc12:	d10a      	bne.n	801bc2a <xQueueGenericCreateStatic+0x9e>
 801bc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bc18:	f383 8811 	msr	BASEPRI, r3
 801bc1c:	f3bf 8f6f 	isb	sy
 801bc20:	f3bf 8f4f 	dsb	sy
 801bc24:	61fb      	str	r3, [r7, #28]
 801bc26:	bf00      	nop
 801bc28:	e7fe      	b.n	801bc28 <xQueueGenericCreateStatic+0x9c>
 801bc2a:	2350      	movs	r3, #80	; 0x50
 801bc2c:	617b      	str	r3, [r7, #20]
 801bc2e:	697b      	ldr	r3, [r7, #20]
 801bc30:	2b50      	cmp	r3, #80	; 0x50
 801bc32:	d00a      	beq.n	801bc4a <xQueueGenericCreateStatic+0xbe>
 801bc34:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bc38:	f383 8811 	msr	BASEPRI, r3
 801bc3c:	f3bf 8f6f 	isb	sy
 801bc40:	f3bf 8f4f 	dsb	sy
 801bc44:	61bb      	str	r3, [r7, #24]
 801bc46:	bf00      	nop
 801bc48:	e7fe      	b.n	801bc48 <xQueueGenericCreateStatic+0xbc>
 801bc4a:	697b      	ldr	r3, [r7, #20]
 801bc4c:	683b      	ldr	r3, [r7, #0]
 801bc4e:	62fb      	str	r3, [r7, #44]	; 0x2c
 801bc50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc52:	2b00      	cmp	r3, #0
 801bc54:	d00d      	beq.n	801bc72 <xQueueGenericCreateStatic+0xe6>
 801bc56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc58:	2201      	movs	r2, #1
 801bc5a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 801bc5e:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 801bc62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc64:	9300      	str	r3, [sp, #0]
 801bc66:	4613      	mov	r3, r2
 801bc68:	687a      	ldr	r2, [r7, #4]
 801bc6a:	68b9      	ldr	r1, [r7, #8]
 801bc6c:	68f8      	ldr	r0, [r7, #12]
 801bc6e:	f000 f83f 	bl	801bcf0 <prvInitialiseNewQueue>
 801bc72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bc74:	4618      	mov	r0, r3
 801bc76:	3730      	adds	r7, #48	; 0x30
 801bc78:	46bd      	mov	sp, r7
 801bc7a:	bd80      	pop	{r7, pc}

0801bc7c <xQueueGenericCreate>:
 801bc7c:	b580      	push	{r7, lr}
 801bc7e:	b08a      	sub	sp, #40	; 0x28
 801bc80:	af02      	add	r7, sp, #8
 801bc82:	60f8      	str	r0, [r7, #12]
 801bc84:	60b9      	str	r1, [r7, #8]
 801bc86:	4613      	mov	r3, r2
 801bc88:	71fb      	strb	r3, [r7, #7]
 801bc8a:	68fb      	ldr	r3, [r7, #12]
 801bc8c:	2b00      	cmp	r3, #0
 801bc8e:	d10a      	bne.n	801bca6 <xQueueGenericCreate+0x2a>
 801bc90:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bc94:	f383 8811 	msr	BASEPRI, r3
 801bc98:	f3bf 8f6f 	isb	sy
 801bc9c:	f3bf 8f4f 	dsb	sy
 801bca0:	613b      	str	r3, [r7, #16]
 801bca2:	bf00      	nop
 801bca4:	e7fe      	b.n	801bca4 <xQueueGenericCreate+0x28>
 801bca6:	68fb      	ldr	r3, [r7, #12]
 801bca8:	68ba      	ldr	r2, [r7, #8]
 801bcaa:	fb02 f303 	mul.w	r3, r2, r3
 801bcae:	61fb      	str	r3, [r7, #28]
 801bcb0:	69fb      	ldr	r3, [r7, #28]
 801bcb2:	3350      	adds	r3, #80	; 0x50
 801bcb4:	4618      	mov	r0, r3
 801bcb6:	f002 fbff 	bl	801e4b8 <pvPortMalloc>
 801bcba:	61b8      	str	r0, [r7, #24]
 801bcbc:	69bb      	ldr	r3, [r7, #24]
 801bcbe:	2b00      	cmp	r3, #0
 801bcc0:	d011      	beq.n	801bce6 <xQueueGenericCreate+0x6a>
 801bcc2:	69bb      	ldr	r3, [r7, #24]
 801bcc4:	617b      	str	r3, [r7, #20]
 801bcc6:	697b      	ldr	r3, [r7, #20]
 801bcc8:	3350      	adds	r3, #80	; 0x50
 801bcca:	617b      	str	r3, [r7, #20]
 801bccc:	69bb      	ldr	r3, [r7, #24]
 801bcce:	2200      	movs	r2, #0
 801bcd0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 801bcd4:	79fa      	ldrb	r2, [r7, #7]
 801bcd6:	69bb      	ldr	r3, [r7, #24]
 801bcd8:	9300      	str	r3, [sp, #0]
 801bcda:	4613      	mov	r3, r2
 801bcdc:	697a      	ldr	r2, [r7, #20]
 801bcde:	68b9      	ldr	r1, [r7, #8]
 801bce0:	68f8      	ldr	r0, [r7, #12]
 801bce2:	f000 f805 	bl	801bcf0 <prvInitialiseNewQueue>
 801bce6:	69bb      	ldr	r3, [r7, #24]
 801bce8:	4618      	mov	r0, r3
 801bcea:	3720      	adds	r7, #32
 801bcec:	46bd      	mov	sp, r7
 801bcee:	bd80      	pop	{r7, pc}

0801bcf0 <prvInitialiseNewQueue>:
 801bcf0:	b580      	push	{r7, lr}
 801bcf2:	b084      	sub	sp, #16
 801bcf4:	af00      	add	r7, sp, #0
 801bcf6:	60f8      	str	r0, [r7, #12]
 801bcf8:	60b9      	str	r1, [r7, #8]
 801bcfa:	607a      	str	r2, [r7, #4]
 801bcfc:	70fb      	strb	r3, [r7, #3]
 801bcfe:	68bb      	ldr	r3, [r7, #8]
 801bd00:	2b00      	cmp	r3, #0
 801bd02:	d103      	bne.n	801bd0c <prvInitialiseNewQueue+0x1c>
 801bd04:	69bb      	ldr	r3, [r7, #24]
 801bd06:	69ba      	ldr	r2, [r7, #24]
 801bd08:	601a      	str	r2, [r3, #0]
 801bd0a:	e002      	b.n	801bd12 <prvInitialiseNewQueue+0x22>
 801bd0c:	69bb      	ldr	r3, [r7, #24]
 801bd0e:	687a      	ldr	r2, [r7, #4]
 801bd10:	601a      	str	r2, [r3, #0]
 801bd12:	69bb      	ldr	r3, [r7, #24]
 801bd14:	68fa      	ldr	r2, [r7, #12]
 801bd16:	63da      	str	r2, [r3, #60]	; 0x3c
 801bd18:	69bb      	ldr	r3, [r7, #24]
 801bd1a:	68ba      	ldr	r2, [r7, #8]
 801bd1c:	641a      	str	r2, [r3, #64]	; 0x40
 801bd1e:	2101      	movs	r1, #1
 801bd20:	69b8      	ldr	r0, [r7, #24]
 801bd22:	f7ff fecb 	bl	801babc <xQueueGenericReset>
 801bd26:	69bb      	ldr	r3, [r7, #24]
 801bd28:	78fa      	ldrb	r2, [r7, #3]
 801bd2a:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 801bd2e:	bf00      	nop
 801bd30:	3710      	adds	r7, #16
 801bd32:	46bd      	mov	sp, r7
 801bd34:	bd80      	pop	{r7, pc}
	...

0801bd38 <xQueueGenericSend>:
 801bd38:	b580      	push	{r7, lr}
 801bd3a:	b08e      	sub	sp, #56	; 0x38
 801bd3c:	af00      	add	r7, sp, #0
 801bd3e:	60f8      	str	r0, [r7, #12]
 801bd40:	60b9      	str	r1, [r7, #8]
 801bd42:	607a      	str	r2, [r7, #4]
 801bd44:	603b      	str	r3, [r7, #0]
 801bd46:	2300      	movs	r3, #0
 801bd48:	637b      	str	r3, [r7, #52]	; 0x34
 801bd4a:	68fb      	ldr	r3, [r7, #12]
 801bd4c:	633b      	str	r3, [r7, #48]	; 0x30
 801bd4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bd50:	2b00      	cmp	r3, #0
 801bd52:	d10a      	bne.n	801bd6a <xQueueGenericSend+0x32>
 801bd54:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd58:	f383 8811 	msr	BASEPRI, r3
 801bd5c:	f3bf 8f6f 	isb	sy
 801bd60:	f3bf 8f4f 	dsb	sy
 801bd64:	62bb      	str	r3, [r7, #40]	; 0x28
 801bd66:	bf00      	nop
 801bd68:	e7fe      	b.n	801bd68 <xQueueGenericSend+0x30>
 801bd6a:	68bb      	ldr	r3, [r7, #8]
 801bd6c:	2b00      	cmp	r3, #0
 801bd6e:	d103      	bne.n	801bd78 <xQueueGenericSend+0x40>
 801bd70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bd72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801bd74:	2b00      	cmp	r3, #0
 801bd76:	d101      	bne.n	801bd7c <xQueueGenericSend+0x44>
 801bd78:	2301      	movs	r3, #1
 801bd7a:	e000      	b.n	801bd7e <xQueueGenericSend+0x46>
 801bd7c:	2300      	movs	r3, #0
 801bd7e:	2b00      	cmp	r3, #0
 801bd80:	d10a      	bne.n	801bd98 <xQueueGenericSend+0x60>
 801bd82:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd86:	f383 8811 	msr	BASEPRI, r3
 801bd8a:	f3bf 8f6f 	isb	sy
 801bd8e:	f3bf 8f4f 	dsb	sy
 801bd92:	627b      	str	r3, [r7, #36]	; 0x24
 801bd94:	bf00      	nop
 801bd96:	e7fe      	b.n	801bd96 <xQueueGenericSend+0x5e>
 801bd98:	683b      	ldr	r3, [r7, #0]
 801bd9a:	2b02      	cmp	r3, #2
 801bd9c:	d103      	bne.n	801bda6 <xQueueGenericSend+0x6e>
 801bd9e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bda0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bda2:	2b01      	cmp	r3, #1
 801bda4:	d101      	bne.n	801bdaa <xQueueGenericSend+0x72>
 801bda6:	2301      	movs	r3, #1
 801bda8:	e000      	b.n	801bdac <xQueueGenericSend+0x74>
 801bdaa:	2300      	movs	r3, #0
 801bdac:	2b00      	cmp	r3, #0
 801bdae:	d10a      	bne.n	801bdc6 <xQueueGenericSend+0x8e>
 801bdb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bdb4:	f383 8811 	msr	BASEPRI, r3
 801bdb8:	f3bf 8f6f 	isb	sy
 801bdbc:	f3bf 8f4f 	dsb	sy
 801bdc0:	623b      	str	r3, [r7, #32]
 801bdc2:	bf00      	nop
 801bdc4:	e7fe      	b.n	801bdc4 <xQueueGenericSend+0x8c>
 801bdc6:	f001 fbb7 	bl	801d538 <xTaskGetSchedulerState>
 801bdca:	4603      	mov	r3, r0
 801bdcc:	2b00      	cmp	r3, #0
 801bdce:	d102      	bne.n	801bdd6 <xQueueGenericSend+0x9e>
 801bdd0:	687b      	ldr	r3, [r7, #4]
 801bdd2:	2b00      	cmp	r3, #0
 801bdd4:	d101      	bne.n	801bdda <xQueueGenericSend+0xa2>
 801bdd6:	2301      	movs	r3, #1
 801bdd8:	e000      	b.n	801bddc <xQueueGenericSend+0xa4>
 801bdda:	2300      	movs	r3, #0
 801bddc:	2b00      	cmp	r3, #0
 801bdde:	d10a      	bne.n	801bdf6 <xQueueGenericSend+0xbe>
 801bde0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bde4:	f383 8811 	msr	BASEPRI, r3
 801bde8:	f3bf 8f6f 	isb	sy
 801bdec:	f3bf 8f4f 	dsb	sy
 801bdf0:	61fb      	str	r3, [r7, #28]
 801bdf2:	bf00      	nop
 801bdf4:	e7fe      	b.n	801bdf4 <xQueueGenericSend+0xbc>
 801bdf6:	f002 fa3d 	bl	801e274 <vPortEnterCritical>
 801bdfa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bdfc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801bdfe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801be00:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801be02:	429a      	cmp	r2, r3
 801be04:	d302      	bcc.n	801be0c <xQueueGenericSend+0xd4>
 801be06:	683b      	ldr	r3, [r7, #0]
 801be08:	2b02      	cmp	r3, #2
 801be0a:	d129      	bne.n	801be60 <xQueueGenericSend+0x128>
 801be0c:	683a      	ldr	r2, [r7, #0]
 801be0e:	68b9      	ldr	r1, [r7, #8]
 801be10:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801be12:	f000 fa97 	bl	801c344 <prvCopyDataToQueue>
 801be16:	62f8      	str	r0, [r7, #44]	; 0x2c
 801be18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801be1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801be1c:	2b00      	cmp	r3, #0
 801be1e:	d010      	beq.n	801be42 <xQueueGenericSend+0x10a>
 801be20:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801be22:	3324      	adds	r3, #36	; 0x24
 801be24:	4618      	mov	r0, r3
 801be26:	f001 f965 	bl	801d0f4 <xTaskRemoveFromEventList>
 801be2a:	4603      	mov	r3, r0
 801be2c:	2b00      	cmp	r3, #0
 801be2e:	d013      	beq.n	801be58 <xQueueGenericSend+0x120>
 801be30:	4b3f      	ldr	r3, [pc, #252]	; (801bf30 <xQueueGenericSend+0x1f8>)
 801be32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801be36:	601a      	str	r2, [r3, #0]
 801be38:	f3bf 8f4f 	dsb	sy
 801be3c:	f3bf 8f6f 	isb	sy
 801be40:	e00a      	b.n	801be58 <xQueueGenericSend+0x120>
 801be42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801be44:	2b00      	cmp	r3, #0
 801be46:	d007      	beq.n	801be58 <xQueueGenericSend+0x120>
 801be48:	4b39      	ldr	r3, [pc, #228]	; (801bf30 <xQueueGenericSend+0x1f8>)
 801be4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801be4e:	601a      	str	r2, [r3, #0]
 801be50:	f3bf 8f4f 	dsb	sy
 801be54:	f3bf 8f6f 	isb	sy
 801be58:	f002 fa3c 	bl	801e2d4 <vPortExitCritical>
 801be5c:	2301      	movs	r3, #1
 801be5e:	e063      	b.n	801bf28 <xQueueGenericSend+0x1f0>
 801be60:	687b      	ldr	r3, [r7, #4]
 801be62:	2b00      	cmp	r3, #0
 801be64:	d103      	bne.n	801be6e <xQueueGenericSend+0x136>
 801be66:	f002 fa35 	bl	801e2d4 <vPortExitCritical>
 801be6a:	2300      	movs	r3, #0
 801be6c:	e05c      	b.n	801bf28 <xQueueGenericSend+0x1f0>
 801be6e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801be70:	2b00      	cmp	r3, #0
 801be72:	d106      	bne.n	801be82 <xQueueGenericSend+0x14a>
 801be74:	f107 0314 	add.w	r3, r7, #20
 801be78:	4618      	mov	r0, r3
 801be7a:	f001 f9ff 	bl	801d27c <vTaskInternalSetTimeOutState>
 801be7e:	2301      	movs	r3, #1
 801be80:	637b      	str	r3, [r7, #52]	; 0x34
 801be82:	f002 fa27 	bl	801e2d4 <vPortExitCritical>
 801be86:	f000 fea9 	bl	801cbdc <vTaskSuspendAll>
 801be8a:	f002 f9f3 	bl	801e274 <vPortEnterCritical>
 801be8e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801be90:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801be94:	b25b      	sxtb	r3, r3
 801be96:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801be9a:	d103      	bne.n	801bea4 <xQueueGenericSend+0x16c>
 801be9c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801be9e:	2200      	movs	r2, #0
 801bea0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801bea4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bea6:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801beaa:	b25b      	sxtb	r3, r3
 801beac:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801beb0:	d103      	bne.n	801beba <xQueueGenericSend+0x182>
 801beb2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801beb4:	2200      	movs	r2, #0
 801beb6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801beba:	f002 fa0b 	bl	801e2d4 <vPortExitCritical>
 801bebe:	1d3a      	adds	r2, r7, #4
 801bec0:	f107 0314 	add.w	r3, r7, #20
 801bec4:	4611      	mov	r1, r2
 801bec6:	4618      	mov	r0, r3
 801bec8:	f001 f9ee 	bl	801d2a8 <xTaskCheckForTimeOut>
 801becc:	4603      	mov	r3, r0
 801bece:	2b00      	cmp	r3, #0
 801bed0:	d124      	bne.n	801bf1c <xQueueGenericSend+0x1e4>
 801bed2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801bed4:	f000 fb2e 	bl	801c534 <prvIsQueueFull>
 801bed8:	4603      	mov	r3, r0
 801beda:	2b00      	cmp	r3, #0
 801bedc:	d018      	beq.n	801bf10 <xQueueGenericSend+0x1d8>
 801bede:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bee0:	3310      	adds	r3, #16
 801bee2:	687a      	ldr	r2, [r7, #4]
 801bee4:	4611      	mov	r1, r2
 801bee6:	4618      	mov	r0, r3
 801bee8:	f001 f878 	bl	801cfdc <vTaskPlaceOnEventList>
 801beec:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801beee:	f000 fab9 	bl	801c464 <prvUnlockQueue>
 801bef2:	f000 fe81 	bl	801cbf8 <xTaskResumeAll>
 801bef6:	4603      	mov	r3, r0
 801bef8:	2b00      	cmp	r3, #0
 801befa:	f47f af7c 	bne.w	801bdf6 <xQueueGenericSend+0xbe>
 801befe:	4b0c      	ldr	r3, [pc, #48]	; (801bf30 <xQueueGenericSend+0x1f8>)
 801bf00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801bf04:	601a      	str	r2, [r3, #0]
 801bf06:	f3bf 8f4f 	dsb	sy
 801bf0a:	f3bf 8f6f 	isb	sy
 801bf0e:	e772      	b.n	801bdf6 <xQueueGenericSend+0xbe>
 801bf10:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801bf12:	f000 faa7 	bl	801c464 <prvUnlockQueue>
 801bf16:	f000 fe6f 	bl	801cbf8 <xTaskResumeAll>
 801bf1a:	e76c      	b.n	801bdf6 <xQueueGenericSend+0xbe>
 801bf1c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801bf1e:	f000 faa1 	bl	801c464 <prvUnlockQueue>
 801bf22:	f000 fe69 	bl	801cbf8 <xTaskResumeAll>
 801bf26:	2300      	movs	r3, #0
 801bf28:	4618      	mov	r0, r3
 801bf2a:	3738      	adds	r7, #56	; 0x38
 801bf2c:	46bd      	mov	sp, r7
 801bf2e:	bd80      	pop	{r7, pc}
 801bf30:	e000ed04 	.word	0xe000ed04

0801bf34 <xQueueGenericSendFromISR>:
 801bf34:	b580      	push	{r7, lr}
 801bf36:	b090      	sub	sp, #64	; 0x40
 801bf38:	af00      	add	r7, sp, #0
 801bf3a:	60f8      	str	r0, [r7, #12]
 801bf3c:	60b9      	str	r1, [r7, #8]
 801bf3e:	607a      	str	r2, [r7, #4]
 801bf40:	603b      	str	r3, [r7, #0]
 801bf42:	68fb      	ldr	r3, [r7, #12]
 801bf44:	63bb      	str	r3, [r7, #56]	; 0x38
 801bf46:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bf48:	2b00      	cmp	r3, #0
 801bf4a:	d10a      	bne.n	801bf62 <xQueueGenericSendFromISR+0x2e>
 801bf4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bf50:	f383 8811 	msr	BASEPRI, r3
 801bf54:	f3bf 8f6f 	isb	sy
 801bf58:	f3bf 8f4f 	dsb	sy
 801bf5c:	62bb      	str	r3, [r7, #40]	; 0x28
 801bf5e:	bf00      	nop
 801bf60:	e7fe      	b.n	801bf60 <xQueueGenericSendFromISR+0x2c>
 801bf62:	68bb      	ldr	r3, [r7, #8]
 801bf64:	2b00      	cmp	r3, #0
 801bf66:	d103      	bne.n	801bf70 <xQueueGenericSendFromISR+0x3c>
 801bf68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bf6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801bf6c:	2b00      	cmp	r3, #0
 801bf6e:	d101      	bne.n	801bf74 <xQueueGenericSendFromISR+0x40>
 801bf70:	2301      	movs	r3, #1
 801bf72:	e000      	b.n	801bf76 <xQueueGenericSendFromISR+0x42>
 801bf74:	2300      	movs	r3, #0
 801bf76:	2b00      	cmp	r3, #0
 801bf78:	d10a      	bne.n	801bf90 <xQueueGenericSendFromISR+0x5c>
 801bf7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bf7e:	f383 8811 	msr	BASEPRI, r3
 801bf82:	f3bf 8f6f 	isb	sy
 801bf86:	f3bf 8f4f 	dsb	sy
 801bf8a:	627b      	str	r3, [r7, #36]	; 0x24
 801bf8c:	bf00      	nop
 801bf8e:	e7fe      	b.n	801bf8e <xQueueGenericSendFromISR+0x5a>
 801bf90:	683b      	ldr	r3, [r7, #0]
 801bf92:	2b02      	cmp	r3, #2
 801bf94:	d103      	bne.n	801bf9e <xQueueGenericSendFromISR+0x6a>
 801bf96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bf98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bf9a:	2b01      	cmp	r3, #1
 801bf9c:	d101      	bne.n	801bfa2 <xQueueGenericSendFromISR+0x6e>
 801bf9e:	2301      	movs	r3, #1
 801bfa0:	e000      	b.n	801bfa4 <xQueueGenericSendFromISR+0x70>
 801bfa2:	2300      	movs	r3, #0
 801bfa4:	2b00      	cmp	r3, #0
 801bfa6:	d10a      	bne.n	801bfbe <xQueueGenericSendFromISR+0x8a>
 801bfa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bfac:	f383 8811 	msr	BASEPRI, r3
 801bfb0:	f3bf 8f6f 	isb	sy
 801bfb4:	f3bf 8f4f 	dsb	sy
 801bfb8:	623b      	str	r3, [r7, #32]
 801bfba:	bf00      	nop
 801bfbc:	e7fe      	b.n	801bfbc <xQueueGenericSendFromISR+0x88>
 801bfbe:	f002 fa3b 	bl	801e438 <vPortValidateInterruptPriority>
 801bfc2:	f3ef 8211 	mrs	r2, BASEPRI
 801bfc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bfca:	f383 8811 	msr	BASEPRI, r3
 801bfce:	f3bf 8f6f 	isb	sy
 801bfd2:	f3bf 8f4f 	dsb	sy
 801bfd6:	61fa      	str	r2, [r7, #28]
 801bfd8:	61bb      	str	r3, [r7, #24]
 801bfda:	69fb      	ldr	r3, [r7, #28]
 801bfdc:	637b      	str	r3, [r7, #52]	; 0x34
 801bfde:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bfe0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801bfe2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bfe4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bfe6:	429a      	cmp	r2, r3
 801bfe8:	d302      	bcc.n	801bff0 <xQueueGenericSendFromISR+0xbc>
 801bfea:	683b      	ldr	r3, [r7, #0]
 801bfec:	2b02      	cmp	r3, #2
 801bfee:	d12f      	bne.n	801c050 <xQueueGenericSendFromISR+0x11c>
 801bff0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bff2:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801bff6:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801bffa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801bffc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bffe:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c000:	683a      	ldr	r2, [r7, #0]
 801c002:	68b9      	ldr	r1, [r7, #8]
 801c004:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 801c006:	f000 f99d 	bl	801c344 <prvCopyDataToQueue>
 801c00a:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 801c00e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c012:	d112      	bne.n	801c03a <xQueueGenericSendFromISR+0x106>
 801c014:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c016:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c018:	2b00      	cmp	r3, #0
 801c01a:	d016      	beq.n	801c04a <xQueueGenericSendFromISR+0x116>
 801c01c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c01e:	3324      	adds	r3, #36	; 0x24
 801c020:	4618      	mov	r0, r3
 801c022:	f001 f867 	bl	801d0f4 <xTaskRemoveFromEventList>
 801c026:	4603      	mov	r3, r0
 801c028:	2b00      	cmp	r3, #0
 801c02a:	d00e      	beq.n	801c04a <xQueueGenericSendFromISR+0x116>
 801c02c:	687b      	ldr	r3, [r7, #4]
 801c02e:	2b00      	cmp	r3, #0
 801c030:	d00b      	beq.n	801c04a <xQueueGenericSendFromISR+0x116>
 801c032:	687b      	ldr	r3, [r7, #4]
 801c034:	2201      	movs	r2, #1
 801c036:	601a      	str	r2, [r3, #0]
 801c038:	e007      	b.n	801c04a <xQueueGenericSendFromISR+0x116>
 801c03a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801c03e:	3301      	adds	r3, #1
 801c040:	b2db      	uxtb	r3, r3
 801c042:	b25a      	sxtb	r2, r3
 801c044:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c046:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c04a:	2301      	movs	r3, #1
 801c04c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801c04e:	e001      	b.n	801c054 <xQueueGenericSendFromISR+0x120>
 801c050:	2300      	movs	r3, #0
 801c052:	63fb      	str	r3, [r7, #60]	; 0x3c
 801c054:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c056:	617b      	str	r3, [r7, #20]
 801c058:	697b      	ldr	r3, [r7, #20]
 801c05a:	f383 8811 	msr	BASEPRI, r3
 801c05e:	bf00      	nop
 801c060:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801c062:	4618      	mov	r0, r3
 801c064:	3740      	adds	r7, #64	; 0x40
 801c066:	46bd      	mov	sp, r7
 801c068:	bd80      	pop	{r7, pc}

0801c06a <xQueueGiveFromISR>:
 801c06a:	b580      	push	{r7, lr}
 801c06c:	b08e      	sub	sp, #56	; 0x38
 801c06e:	af00      	add	r7, sp, #0
 801c070:	6078      	str	r0, [r7, #4]
 801c072:	6039      	str	r1, [r7, #0]
 801c074:	687b      	ldr	r3, [r7, #4]
 801c076:	633b      	str	r3, [r7, #48]	; 0x30
 801c078:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c07a:	2b00      	cmp	r3, #0
 801c07c:	d10a      	bne.n	801c094 <xQueueGiveFromISR+0x2a>
 801c07e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c082:	f383 8811 	msr	BASEPRI, r3
 801c086:	f3bf 8f6f 	isb	sy
 801c08a:	f3bf 8f4f 	dsb	sy
 801c08e:	623b      	str	r3, [r7, #32]
 801c090:	bf00      	nop
 801c092:	e7fe      	b.n	801c092 <xQueueGiveFromISR+0x28>
 801c094:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c096:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c098:	2b00      	cmp	r3, #0
 801c09a:	d00a      	beq.n	801c0b2 <xQueueGiveFromISR+0x48>
 801c09c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c0a0:	f383 8811 	msr	BASEPRI, r3
 801c0a4:	f3bf 8f6f 	isb	sy
 801c0a8:	f3bf 8f4f 	dsb	sy
 801c0ac:	61fb      	str	r3, [r7, #28]
 801c0ae:	bf00      	nop
 801c0b0:	e7fe      	b.n	801c0b0 <xQueueGiveFromISR+0x46>
 801c0b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c0b4:	681b      	ldr	r3, [r3, #0]
 801c0b6:	2b00      	cmp	r3, #0
 801c0b8:	d103      	bne.n	801c0c2 <xQueueGiveFromISR+0x58>
 801c0ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c0bc:	689b      	ldr	r3, [r3, #8]
 801c0be:	2b00      	cmp	r3, #0
 801c0c0:	d101      	bne.n	801c0c6 <xQueueGiveFromISR+0x5c>
 801c0c2:	2301      	movs	r3, #1
 801c0c4:	e000      	b.n	801c0c8 <xQueueGiveFromISR+0x5e>
 801c0c6:	2300      	movs	r3, #0
 801c0c8:	2b00      	cmp	r3, #0
 801c0ca:	d10a      	bne.n	801c0e2 <xQueueGiveFromISR+0x78>
 801c0cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c0d0:	f383 8811 	msr	BASEPRI, r3
 801c0d4:	f3bf 8f6f 	isb	sy
 801c0d8:	f3bf 8f4f 	dsb	sy
 801c0dc:	61bb      	str	r3, [r7, #24]
 801c0de:	bf00      	nop
 801c0e0:	e7fe      	b.n	801c0e0 <xQueueGiveFromISR+0x76>
 801c0e2:	f002 f9a9 	bl	801e438 <vPortValidateInterruptPriority>
 801c0e6:	f3ef 8211 	mrs	r2, BASEPRI
 801c0ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c0ee:	f383 8811 	msr	BASEPRI, r3
 801c0f2:	f3bf 8f6f 	isb	sy
 801c0f6:	f3bf 8f4f 	dsb	sy
 801c0fa:	617a      	str	r2, [r7, #20]
 801c0fc:	613b      	str	r3, [r7, #16]
 801c0fe:	697b      	ldr	r3, [r7, #20]
 801c100:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c102:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c106:	62bb      	str	r3, [r7, #40]	; 0x28
 801c108:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c10a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c10c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c10e:	429a      	cmp	r2, r3
 801c110:	d22b      	bcs.n	801c16a <xQueueGiveFromISR+0x100>
 801c112:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c114:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c118:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801c11c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c11e:	1c5a      	adds	r2, r3, #1
 801c120:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c122:	639a      	str	r2, [r3, #56]	; 0x38
 801c124:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 801c128:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c12c:	d112      	bne.n	801c154 <xQueueGiveFromISR+0xea>
 801c12e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c130:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c132:	2b00      	cmp	r3, #0
 801c134:	d016      	beq.n	801c164 <xQueueGiveFromISR+0xfa>
 801c136:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c138:	3324      	adds	r3, #36	; 0x24
 801c13a:	4618      	mov	r0, r3
 801c13c:	f000 ffda 	bl	801d0f4 <xTaskRemoveFromEventList>
 801c140:	4603      	mov	r3, r0
 801c142:	2b00      	cmp	r3, #0
 801c144:	d00e      	beq.n	801c164 <xQueueGiveFromISR+0xfa>
 801c146:	683b      	ldr	r3, [r7, #0]
 801c148:	2b00      	cmp	r3, #0
 801c14a:	d00b      	beq.n	801c164 <xQueueGiveFromISR+0xfa>
 801c14c:	683b      	ldr	r3, [r7, #0]
 801c14e:	2201      	movs	r2, #1
 801c150:	601a      	str	r2, [r3, #0]
 801c152:	e007      	b.n	801c164 <xQueueGiveFromISR+0xfa>
 801c154:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801c158:	3301      	adds	r3, #1
 801c15a:	b2db      	uxtb	r3, r3
 801c15c:	b25a      	sxtb	r2, r3
 801c15e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c160:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c164:	2301      	movs	r3, #1
 801c166:	637b      	str	r3, [r7, #52]	; 0x34
 801c168:	e001      	b.n	801c16e <xQueueGiveFromISR+0x104>
 801c16a:	2300      	movs	r3, #0
 801c16c:	637b      	str	r3, [r7, #52]	; 0x34
 801c16e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c170:	60fb      	str	r3, [r7, #12]
 801c172:	68fb      	ldr	r3, [r7, #12]
 801c174:	f383 8811 	msr	BASEPRI, r3
 801c178:	bf00      	nop
 801c17a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c17c:	4618      	mov	r0, r3
 801c17e:	3738      	adds	r7, #56	; 0x38
 801c180:	46bd      	mov	sp, r7
 801c182:	bd80      	pop	{r7, pc}

0801c184 <xQueueReceive>:
 801c184:	b580      	push	{r7, lr}
 801c186:	b08c      	sub	sp, #48	; 0x30
 801c188:	af00      	add	r7, sp, #0
 801c18a:	60f8      	str	r0, [r7, #12]
 801c18c:	60b9      	str	r1, [r7, #8]
 801c18e:	607a      	str	r2, [r7, #4]
 801c190:	2300      	movs	r3, #0
 801c192:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c194:	68fb      	ldr	r3, [r7, #12]
 801c196:	62bb      	str	r3, [r7, #40]	; 0x28
 801c198:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c19a:	2b00      	cmp	r3, #0
 801c19c:	d10a      	bne.n	801c1b4 <xQueueReceive+0x30>
 801c19e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c1a2:	f383 8811 	msr	BASEPRI, r3
 801c1a6:	f3bf 8f6f 	isb	sy
 801c1aa:	f3bf 8f4f 	dsb	sy
 801c1ae:	623b      	str	r3, [r7, #32]
 801c1b0:	bf00      	nop
 801c1b2:	e7fe      	b.n	801c1b2 <xQueueReceive+0x2e>
 801c1b4:	68bb      	ldr	r3, [r7, #8]
 801c1b6:	2b00      	cmp	r3, #0
 801c1b8:	d103      	bne.n	801c1c2 <xQueueReceive+0x3e>
 801c1ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c1bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c1be:	2b00      	cmp	r3, #0
 801c1c0:	d101      	bne.n	801c1c6 <xQueueReceive+0x42>
 801c1c2:	2301      	movs	r3, #1
 801c1c4:	e000      	b.n	801c1c8 <xQueueReceive+0x44>
 801c1c6:	2300      	movs	r3, #0
 801c1c8:	2b00      	cmp	r3, #0
 801c1ca:	d10a      	bne.n	801c1e2 <xQueueReceive+0x5e>
 801c1cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c1d0:	f383 8811 	msr	BASEPRI, r3
 801c1d4:	f3bf 8f6f 	isb	sy
 801c1d8:	f3bf 8f4f 	dsb	sy
 801c1dc:	61fb      	str	r3, [r7, #28]
 801c1de:	bf00      	nop
 801c1e0:	e7fe      	b.n	801c1e0 <xQueueReceive+0x5c>
 801c1e2:	f001 f9a9 	bl	801d538 <xTaskGetSchedulerState>
 801c1e6:	4603      	mov	r3, r0
 801c1e8:	2b00      	cmp	r3, #0
 801c1ea:	d102      	bne.n	801c1f2 <xQueueReceive+0x6e>
 801c1ec:	687b      	ldr	r3, [r7, #4]
 801c1ee:	2b00      	cmp	r3, #0
 801c1f0:	d101      	bne.n	801c1f6 <xQueueReceive+0x72>
 801c1f2:	2301      	movs	r3, #1
 801c1f4:	e000      	b.n	801c1f8 <xQueueReceive+0x74>
 801c1f6:	2300      	movs	r3, #0
 801c1f8:	2b00      	cmp	r3, #0
 801c1fa:	d10a      	bne.n	801c212 <xQueueReceive+0x8e>
 801c1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c200:	f383 8811 	msr	BASEPRI, r3
 801c204:	f3bf 8f6f 	isb	sy
 801c208:	f3bf 8f4f 	dsb	sy
 801c20c:	61bb      	str	r3, [r7, #24]
 801c20e:	bf00      	nop
 801c210:	e7fe      	b.n	801c210 <xQueueReceive+0x8c>
 801c212:	f002 f82f 	bl	801e274 <vPortEnterCritical>
 801c216:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c21a:	627b      	str	r3, [r7, #36]	; 0x24
 801c21c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c21e:	2b00      	cmp	r3, #0
 801c220:	d01f      	beq.n	801c262 <xQueueReceive+0xde>
 801c222:	68b9      	ldr	r1, [r7, #8]
 801c224:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c226:	f000 f8f7 	bl	801c418 <prvCopyDataFromQueue>
 801c22a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c22c:	1e5a      	subs	r2, r3, #1
 801c22e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c230:	639a      	str	r2, [r3, #56]	; 0x38
 801c232:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c234:	691b      	ldr	r3, [r3, #16]
 801c236:	2b00      	cmp	r3, #0
 801c238:	d00f      	beq.n	801c25a <xQueueReceive+0xd6>
 801c23a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c23c:	3310      	adds	r3, #16
 801c23e:	4618      	mov	r0, r3
 801c240:	f000 ff58 	bl	801d0f4 <xTaskRemoveFromEventList>
 801c244:	4603      	mov	r3, r0
 801c246:	2b00      	cmp	r3, #0
 801c248:	d007      	beq.n	801c25a <xQueueReceive+0xd6>
 801c24a:	4b3d      	ldr	r3, [pc, #244]	; (801c340 <xQueueReceive+0x1bc>)
 801c24c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c250:	601a      	str	r2, [r3, #0]
 801c252:	f3bf 8f4f 	dsb	sy
 801c256:	f3bf 8f6f 	isb	sy
 801c25a:	f002 f83b 	bl	801e2d4 <vPortExitCritical>
 801c25e:	2301      	movs	r3, #1
 801c260:	e069      	b.n	801c336 <xQueueReceive+0x1b2>
 801c262:	687b      	ldr	r3, [r7, #4]
 801c264:	2b00      	cmp	r3, #0
 801c266:	d103      	bne.n	801c270 <xQueueReceive+0xec>
 801c268:	f002 f834 	bl	801e2d4 <vPortExitCritical>
 801c26c:	2300      	movs	r3, #0
 801c26e:	e062      	b.n	801c336 <xQueueReceive+0x1b2>
 801c270:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c272:	2b00      	cmp	r3, #0
 801c274:	d106      	bne.n	801c284 <xQueueReceive+0x100>
 801c276:	f107 0310 	add.w	r3, r7, #16
 801c27a:	4618      	mov	r0, r3
 801c27c:	f000 fffe 	bl	801d27c <vTaskInternalSetTimeOutState>
 801c280:	2301      	movs	r3, #1
 801c282:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c284:	f002 f826 	bl	801e2d4 <vPortExitCritical>
 801c288:	f000 fca8 	bl	801cbdc <vTaskSuspendAll>
 801c28c:	f001 fff2 	bl	801e274 <vPortEnterCritical>
 801c290:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c292:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c296:	b25b      	sxtb	r3, r3
 801c298:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c29c:	d103      	bne.n	801c2a6 <xQueueReceive+0x122>
 801c29e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c2a0:	2200      	movs	r2, #0
 801c2a2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c2a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c2a8:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c2ac:	b25b      	sxtb	r3, r3
 801c2ae:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c2b2:	d103      	bne.n	801c2bc <xQueueReceive+0x138>
 801c2b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c2b6:	2200      	movs	r2, #0
 801c2b8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c2bc:	f002 f80a 	bl	801e2d4 <vPortExitCritical>
 801c2c0:	1d3a      	adds	r2, r7, #4
 801c2c2:	f107 0310 	add.w	r3, r7, #16
 801c2c6:	4611      	mov	r1, r2
 801c2c8:	4618      	mov	r0, r3
 801c2ca:	f000 ffed 	bl	801d2a8 <xTaskCheckForTimeOut>
 801c2ce:	4603      	mov	r3, r0
 801c2d0:	2b00      	cmp	r3, #0
 801c2d2:	d123      	bne.n	801c31c <xQueueReceive+0x198>
 801c2d4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c2d6:	f000 f917 	bl	801c508 <prvIsQueueEmpty>
 801c2da:	4603      	mov	r3, r0
 801c2dc:	2b00      	cmp	r3, #0
 801c2de:	d017      	beq.n	801c310 <xQueueReceive+0x18c>
 801c2e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c2e2:	3324      	adds	r3, #36	; 0x24
 801c2e4:	687a      	ldr	r2, [r7, #4]
 801c2e6:	4611      	mov	r1, r2
 801c2e8:	4618      	mov	r0, r3
 801c2ea:	f000 fe77 	bl	801cfdc <vTaskPlaceOnEventList>
 801c2ee:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c2f0:	f000 f8b8 	bl	801c464 <prvUnlockQueue>
 801c2f4:	f000 fc80 	bl	801cbf8 <xTaskResumeAll>
 801c2f8:	4603      	mov	r3, r0
 801c2fa:	2b00      	cmp	r3, #0
 801c2fc:	d189      	bne.n	801c212 <xQueueReceive+0x8e>
 801c2fe:	4b10      	ldr	r3, [pc, #64]	; (801c340 <xQueueReceive+0x1bc>)
 801c300:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c304:	601a      	str	r2, [r3, #0]
 801c306:	f3bf 8f4f 	dsb	sy
 801c30a:	f3bf 8f6f 	isb	sy
 801c30e:	e780      	b.n	801c212 <xQueueReceive+0x8e>
 801c310:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c312:	f000 f8a7 	bl	801c464 <prvUnlockQueue>
 801c316:	f000 fc6f 	bl	801cbf8 <xTaskResumeAll>
 801c31a:	e77a      	b.n	801c212 <xQueueReceive+0x8e>
 801c31c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c31e:	f000 f8a1 	bl	801c464 <prvUnlockQueue>
 801c322:	f000 fc69 	bl	801cbf8 <xTaskResumeAll>
 801c326:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c328:	f000 f8ee 	bl	801c508 <prvIsQueueEmpty>
 801c32c:	4603      	mov	r3, r0
 801c32e:	2b00      	cmp	r3, #0
 801c330:	f43f af6f 	beq.w	801c212 <xQueueReceive+0x8e>
 801c334:	2300      	movs	r3, #0
 801c336:	4618      	mov	r0, r3
 801c338:	3730      	adds	r7, #48	; 0x30
 801c33a:	46bd      	mov	sp, r7
 801c33c:	bd80      	pop	{r7, pc}
 801c33e:	bf00      	nop
 801c340:	e000ed04 	.word	0xe000ed04

0801c344 <prvCopyDataToQueue>:
 801c344:	b580      	push	{r7, lr}
 801c346:	b086      	sub	sp, #24
 801c348:	af00      	add	r7, sp, #0
 801c34a:	60f8      	str	r0, [r7, #12]
 801c34c:	60b9      	str	r1, [r7, #8]
 801c34e:	607a      	str	r2, [r7, #4]
 801c350:	2300      	movs	r3, #0
 801c352:	617b      	str	r3, [r7, #20]
 801c354:	68fb      	ldr	r3, [r7, #12]
 801c356:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c358:	613b      	str	r3, [r7, #16]
 801c35a:	68fb      	ldr	r3, [r7, #12]
 801c35c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c35e:	2b00      	cmp	r3, #0
 801c360:	d10d      	bne.n	801c37e <prvCopyDataToQueue+0x3a>
 801c362:	68fb      	ldr	r3, [r7, #12]
 801c364:	681b      	ldr	r3, [r3, #0]
 801c366:	2b00      	cmp	r3, #0
 801c368:	d14d      	bne.n	801c406 <prvCopyDataToQueue+0xc2>
 801c36a:	68fb      	ldr	r3, [r7, #12]
 801c36c:	689b      	ldr	r3, [r3, #8]
 801c36e:	4618      	mov	r0, r3
 801c370:	f001 f900 	bl	801d574 <xTaskPriorityDisinherit>
 801c374:	6178      	str	r0, [r7, #20]
 801c376:	68fb      	ldr	r3, [r7, #12]
 801c378:	2200      	movs	r2, #0
 801c37a:	609a      	str	r2, [r3, #8]
 801c37c:	e043      	b.n	801c406 <prvCopyDataToQueue+0xc2>
 801c37e:	687b      	ldr	r3, [r7, #4]
 801c380:	2b00      	cmp	r3, #0
 801c382:	d119      	bne.n	801c3b8 <prvCopyDataToQueue+0x74>
 801c384:	68fb      	ldr	r3, [r7, #12]
 801c386:	6858      	ldr	r0, [r3, #4]
 801c388:	68fb      	ldr	r3, [r7, #12]
 801c38a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c38c:	461a      	mov	r2, r3
 801c38e:	68b9      	ldr	r1, [r7, #8]
 801c390:	f003 f8e1 	bl	801f556 <memcpy>
 801c394:	68fb      	ldr	r3, [r7, #12]
 801c396:	685a      	ldr	r2, [r3, #4]
 801c398:	68fb      	ldr	r3, [r7, #12]
 801c39a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c39c:	441a      	add	r2, r3
 801c39e:	68fb      	ldr	r3, [r7, #12]
 801c3a0:	605a      	str	r2, [r3, #4]
 801c3a2:	68fb      	ldr	r3, [r7, #12]
 801c3a4:	685a      	ldr	r2, [r3, #4]
 801c3a6:	68fb      	ldr	r3, [r7, #12]
 801c3a8:	689b      	ldr	r3, [r3, #8]
 801c3aa:	429a      	cmp	r2, r3
 801c3ac:	d32b      	bcc.n	801c406 <prvCopyDataToQueue+0xc2>
 801c3ae:	68fb      	ldr	r3, [r7, #12]
 801c3b0:	681a      	ldr	r2, [r3, #0]
 801c3b2:	68fb      	ldr	r3, [r7, #12]
 801c3b4:	605a      	str	r2, [r3, #4]
 801c3b6:	e026      	b.n	801c406 <prvCopyDataToQueue+0xc2>
 801c3b8:	68fb      	ldr	r3, [r7, #12]
 801c3ba:	68d8      	ldr	r0, [r3, #12]
 801c3bc:	68fb      	ldr	r3, [r7, #12]
 801c3be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c3c0:	461a      	mov	r2, r3
 801c3c2:	68b9      	ldr	r1, [r7, #8]
 801c3c4:	f003 f8c7 	bl	801f556 <memcpy>
 801c3c8:	68fb      	ldr	r3, [r7, #12]
 801c3ca:	68da      	ldr	r2, [r3, #12]
 801c3cc:	68fb      	ldr	r3, [r7, #12]
 801c3ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c3d0:	425b      	negs	r3, r3
 801c3d2:	441a      	add	r2, r3
 801c3d4:	68fb      	ldr	r3, [r7, #12]
 801c3d6:	60da      	str	r2, [r3, #12]
 801c3d8:	68fb      	ldr	r3, [r7, #12]
 801c3da:	68da      	ldr	r2, [r3, #12]
 801c3dc:	68fb      	ldr	r3, [r7, #12]
 801c3de:	681b      	ldr	r3, [r3, #0]
 801c3e0:	429a      	cmp	r2, r3
 801c3e2:	d207      	bcs.n	801c3f4 <prvCopyDataToQueue+0xb0>
 801c3e4:	68fb      	ldr	r3, [r7, #12]
 801c3e6:	689a      	ldr	r2, [r3, #8]
 801c3e8:	68fb      	ldr	r3, [r7, #12]
 801c3ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c3ec:	425b      	negs	r3, r3
 801c3ee:	441a      	add	r2, r3
 801c3f0:	68fb      	ldr	r3, [r7, #12]
 801c3f2:	60da      	str	r2, [r3, #12]
 801c3f4:	687b      	ldr	r3, [r7, #4]
 801c3f6:	2b02      	cmp	r3, #2
 801c3f8:	d105      	bne.n	801c406 <prvCopyDataToQueue+0xc2>
 801c3fa:	693b      	ldr	r3, [r7, #16]
 801c3fc:	2b00      	cmp	r3, #0
 801c3fe:	d002      	beq.n	801c406 <prvCopyDataToQueue+0xc2>
 801c400:	693b      	ldr	r3, [r7, #16]
 801c402:	3b01      	subs	r3, #1
 801c404:	613b      	str	r3, [r7, #16]
 801c406:	693b      	ldr	r3, [r7, #16]
 801c408:	1c5a      	adds	r2, r3, #1
 801c40a:	68fb      	ldr	r3, [r7, #12]
 801c40c:	639a      	str	r2, [r3, #56]	; 0x38
 801c40e:	697b      	ldr	r3, [r7, #20]
 801c410:	4618      	mov	r0, r3
 801c412:	3718      	adds	r7, #24
 801c414:	46bd      	mov	sp, r7
 801c416:	bd80      	pop	{r7, pc}

0801c418 <prvCopyDataFromQueue>:
 801c418:	b580      	push	{r7, lr}
 801c41a:	b082      	sub	sp, #8
 801c41c:	af00      	add	r7, sp, #0
 801c41e:	6078      	str	r0, [r7, #4]
 801c420:	6039      	str	r1, [r7, #0]
 801c422:	687b      	ldr	r3, [r7, #4]
 801c424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c426:	2b00      	cmp	r3, #0
 801c428:	d018      	beq.n	801c45c <prvCopyDataFromQueue+0x44>
 801c42a:	687b      	ldr	r3, [r7, #4]
 801c42c:	68da      	ldr	r2, [r3, #12]
 801c42e:	687b      	ldr	r3, [r7, #4]
 801c430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c432:	441a      	add	r2, r3
 801c434:	687b      	ldr	r3, [r7, #4]
 801c436:	60da      	str	r2, [r3, #12]
 801c438:	687b      	ldr	r3, [r7, #4]
 801c43a:	68da      	ldr	r2, [r3, #12]
 801c43c:	687b      	ldr	r3, [r7, #4]
 801c43e:	689b      	ldr	r3, [r3, #8]
 801c440:	429a      	cmp	r2, r3
 801c442:	d303      	bcc.n	801c44c <prvCopyDataFromQueue+0x34>
 801c444:	687b      	ldr	r3, [r7, #4]
 801c446:	681a      	ldr	r2, [r3, #0]
 801c448:	687b      	ldr	r3, [r7, #4]
 801c44a:	60da      	str	r2, [r3, #12]
 801c44c:	687b      	ldr	r3, [r7, #4]
 801c44e:	68d9      	ldr	r1, [r3, #12]
 801c450:	687b      	ldr	r3, [r7, #4]
 801c452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c454:	461a      	mov	r2, r3
 801c456:	6838      	ldr	r0, [r7, #0]
 801c458:	f003 f87d 	bl	801f556 <memcpy>
 801c45c:	bf00      	nop
 801c45e:	3708      	adds	r7, #8
 801c460:	46bd      	mov	sp, r7
 801c462:	bd80      	pop	{r7, pc}

0801c464 <prvUnlockQueue>:
 801c464:	b580      	push	{r7, lr}
 801c466:	b084      	sub	sp, #16
 801c468:	af00      	add	r7, sp, #0
 801c46a:	6078      	str	r0, [r7, #4]
 801c46c:	f001 ff02 	bl	801e274 <vPortEnterCritical>
 801c470:	687b      	ldr	r3, [r7, #4]
 801c472:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c476:	73fb      	strb	r3, [r7, #15]
 801c478:	e011      	b.n	801c49e <prvUnlockQueue+0x3a>
 801c47a:	687b      	ldr	r3, [r7, #4]
 801c47c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c47e:	2b00      	cmp	r3, #0
 801c480:	d012      	beq.n	801c4a8 <prvUnlockQueue+0x44>
 801c482:	687b      	ldr	r3, [r7, #4]
 801c484:	3324      	adds	r3, #36	; 0x24
 801c486:	4618      	mov	r0, r3
 801c488:	f000 fe34 	bl	801d0f4 <xTaskRemoveFromEventList>
 801c48c:	4603      	mov	r3, r0
 801c48e:	2b00      	cmp	r3, #0
 801c490:	d001      	beq.n	801c496 <prvUnlockQueue+0x32>
 801c492:	f000 ff6b 	bl	801d36c <vTaskMissedYield>
 801c496:	7bfb      	ldrb	r3, [r7, #15]
 801c498:	3b01      	subs	r3, #1
 801c49a:	b2db      	uxtb	r3, r3
 801c49c:	73fb      	strb	r3, [r7, #15]
 801c49e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801c4a2:	2b00      	cmp	r3, #0
 801c4a4:	dce9      	bgt.n	801c47a <prvUnlockQueue+0x16>
 801c4a6:	e000      	b.n	801c4aa <prvUnlockQueue+0x46>
 801c4a8:	bf00      	nop
 801c4aa:	687b      	ldr	r3, [r7, #4]
 801c4ac:	22ff      	movs	r2, #255	; 0xff
 801c4ae:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c4b2:	f001 ff0f 	bl	801e2d4 <vPortExitCritical>
 801c4b6:	f001 fedd 	bl	801e274 <vPortEnterCritical>
 801c4ba:	687b      	ldr	r3, [r7, #4]
 801c4bc:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c4c0:	73bb      	strb	r3, [r7, #14]
 801c4c2:	e011      	b.n	801c4e8 <prvUnlockQueue+0x84>
 801c4c4:	687b      	ldr	r3, [r7, #4]
 801c4c6:	691b      	ldr	r3, [r3, #16]
 801c4c8:	2b00      	cmp	r3, #0
 801c4ca:	d012      	beq.n	801c4f2 <prvUnlockQueue+0x8e>
 801c4cc:	687b      	ldr	r3, [r7, #4]
 801c4ce:	3310      	adds	r3, #16
 801c4d0:	4618      	mov	r0, r3
 801c4d2:	f000 fe0f 	bl	801d0f4 <xTaskRemoveFromEventList>
 801c4d6:	4603      	mov	r3, r0
 801c4d8:	2b00      	cmp	r3, #0
 801c4da:	d001      	beq.n	801c4e0 <prvUnlockQueue+0x7c>
 801c4dc:	f000 ff46 	bl	801d36c <vTaskMissedYield>
 801c4e0:	7bbb      	ldrb	r3, [r7, #14]
 801c4e2:	3b01      	subs	r3, #1
 801c4e4:	b2db      	uxtb	r3, r3
 801c4e6:	73bb      	strb	r3, [r7, #14]
 801c4e8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801c4ec:	2b00      	cmp	r3, #0
 801c4ee:	dce9      	bgt.n	801c4c4 <prvUnlockQueue+0x60>
 801c4f0:	e000      	b.n	801c4f4 <prvUnlockQueue+0x90>
 801c4f2:	bf00      	nop
 801c4f4:	687b      	ldr	r3, [r7, #4]
 801c4f6:	22ff      	movs	r2, #255	; 0xff
 801c4f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c4fc:	f001 feea 	bl	801e2d4 <vPortExitCritical>
 801c500:	bf00      	nop
 801c502:	3710      	adds	r7, #16
 801c504:	46bd      	mov	sp, r7
 801c506:	bd80      	pop	{r7, pc}

0801c508 <prvIsQueueEmpty>:
 801c508:	b580      	push	{r7, lr}
 801c50a:	b084      	sub	sp, #16
 801c50c:	af00      	add	r7, sp, #0
 801c50e:	6078      	str	r0, [r7, #4]
 801c510:	f001 feb0 	bl	801e274 <vPortEnterCritical>
 801c514:	687b      	ldr	r3, [r7, #4]
 801c516:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c518:	2b00      	cmp	r3, #0
 801c51a:	d102      	bne.n	801c522 <prvIsQueueEmpty+0x1a>
 801c51c:	2301      	movs	r3, #1
 801c51e:	60fb      	str	r3, [r7, #12]
 801c520:	e001      	b.n	801c526 <prvIsQueueEmpty+0x1e>
 801c522:	2300      	movs	r3, #0
 801c524:	60fb      	str	r3, [r7, #12]
 801c526:	f001 fed5 	bl	801e2d4 <vPortExitCritical>
 801c52a:	68fb      	ldr	r3, [r7, #12]
 801c52c:	4618      	mov	r0, r3
 801c52e:	3710      	adds	r7, #16
 801c530:	46bd      	mov	sp, r7
 801c532:	bd80      	pop	{r7, pc}

0801c534 <prvIsQueueFull>:
 801c534:	b580      	push	{r7, lr}
 801c536:	b084      	sub	sp, #16
 801c538:	af00      	add	r7, sp, #0
 801c53a:	6078      	str	r0, [r7, #4]
 801c53c:	f001 fe9a 	bl	801e274 <vPortEnterCritical>
 801c540:	687b      	ldr	r3, [r7, #4]
 801c542:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801c544:	687b      	ldr	r3, [r7, #4]
 801c546:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c548:	429a      	cmp	r2, r3
 801c54a:	d102      	bne.n	801c552 <prvIsQueueFull+0x1e>
 801c54c:	2301      	movs	r3, #1
 801c54e:	60fb      	str	r3, [r7, #12]
 801c550:	e001      	b.n	801c556 <prvIsQueueFull+0x22>
 801c552:	2300      	movs	r3, #0
 801c554:	60fb      	str	r3, [r7, #12]
 801c556:	f001 febd 	bl	801e2d4 <vPortExitCritical>
 801c55a:	68fb      	ldr	r3, [r7, #12]
 801c55c:	4618      	mov	r0, r3
 801c55e:	3710      	adds	r7, #16
 801c560:	46bd      	mov	sp, r7
 801c562:	bd80      	pop	{r7, pc}

0801c564 <vQueueAddToRegistry>:
 801c564:	b480      	push	{r7}
 801c566:	b085      	sub	sp, #20
 801c568:	af00      	add	r7, sp, #0
 801c56a:	6078      	str	r0, [r7, #4]
 801c56c:	6039      	str	r1, [r7, #0]
 801c56e:	2300      	movs	r3, #0
 801c570:	60fb      	str	r3, [r7, #12]
 801c572:	e014      	b.n	801c59e <vQueueAddToRegistry+0x3a>
 801c574:	4a0f      	ldr	r2, [pc, #60]	; (801c5b4 <vQueueAddToRegistry+0x50>)
 801c576:	68fb      	ldr	r3, [r7, #12]
 801c578:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 801c57c:	2b00      	cmp	r3, #0
 801c57e:	d10b      	bne.n	801c598 <vQueueAddToRegistry+0x34>
 801c580:	490c      	ldr	r1, [pc, #48]	; (801c5b4 <vQueueAddToRegistry+0x50>)
 801c582:	68fb      	ldr	r3, [r7, #12]
 801c584:	683a      	ldr	r2, [r7, #0]
 801c586:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 801c58a:	4a0a      	ldr	r2, [pc, #40]	; (801c5b4 <vQueueAddToRegistry+0x50>)
 801c58c:	68fb      	ldr	r3, [r7, #12]
 801c58e:	00db      	lsls	r3, r3, #3
 801c590:	4413      	add	r3, r2
 801c592:	687a      	ldr	r2, [r7, #4]
 801c594:	605a      	str	r2, [r3, #4]
 801c596:	e006      	b.n	801c5a6 <vQueueAddToRegistry+0x42>
 801c598:	68fb      	ldr	r3, [r7, #12]
 801c59a:	3301      	adds	r3, #1
 801c59c:	60fb      	str	r3, [r7, #12]
 801c59e:	68fb      	ldr	r3, [r7, #12]
 801c5a0:	2b07      	cmp	r3, #7
 801c5a2:	d9e7      	bls.n	801c574 <vQueueAddToRegistry+0x10>
 801c5a4:	bf00      	nop
 801c5a6:	bf00      	nop
 801c5a8:	3714      	adds	r7, #20
 801c5aa:	46bd      	mov	sp, r7
 801c5ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c5b0:	4770      	bx	lr
 801c5b2:	bf00      	nop
 801c5b4:	200039c0 	.word	0x200039c0

0801c5b8 <vQueueWaitForMessageRestricted>:
 801c5b8:	b580      	push	{r7, lr}
 801c5ba:	b086      	sub	sp, #24
 801c5bc:	af00      	add	r7, sp, #0
 801c5be:	60f8      	str	r0, [r7, #12]
 801c5c0:	60b9      	str	r1, [r7, #8]
 801c5c2:	607a      	str	r2, [r7, #4]
 801c5c4:	68fb      	ldr	r3, [r7, #12]
 801c5c6:	617b      	str	r3, [r7, #20]
 801c5c8:	f001 fe54 	bl	801e274 <vPortEnterCritical>
 801c5cc:	697b      	ldr	r3, [r7, #20]
 801c5ce:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c5d2:	b25b      	sxtb	r3, r3
 801c5d4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c5d8:	d103      	bne.n	801c5e2 <vQueueWaitForMessageRestricted+0x2a>
 801c5da:	697b      	ldr	r3, [r7, #20]
 801c5dc:	2200      	movs	r2, #0
 801c5de:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c5e2:	697b      	ldr	r3, [r7, #20]
 801c5e4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c5e8:	b25b      	sxtb	r3, r3
 801c5ea:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c5ee:	d103      	bne.n	801c5f8 <vQueueWaitForMessageRestricted+0x40>
 801c5f0:	697b      	ldr	r3, [r7, #20]
 801c5f2:	2200      	movs	r2, #0
 801c5f4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c5f8:	f001 fe6c 	bl	801e2d4 <vPortExitCritical>
 801c5fc:	697b      	ldr	r3, [r7, #20]
 801c5fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c600:	2b00      	cmp	r3, #0
 801c602:	d106      	bne.n	801c612 <vQueueWaitForMessageRestricted+0x5a>
 801c604:	697b      	ldr	r3, [r7, #20]
 801c606:	3324      	adds	r3, #36	; 0x24
 801c608:	687a      	ldr	r2, [r7, #4]
 801c60a:	68b9      	ldr	r1, [r7, #8]
 801c60c:	4618      	mov	r0, r3
 801c60e:	f000 fd45 	bl	801d09c <vTaskPlaceOnEventListRestricted>
 801c612:	6978      	ldr	r0, [r7, #20]
 801c614:	f7ff ff26 	bl	801c464 <prvUnlockQueue>
 801c618:	bf00      	nop
 801c61a:	3718      	adds	r7, #24
 801c61c:	46bd      	mov	sp, r7
 801c61e:	bd80      	pop	{r7, pc}

0801c620 <xTaskCreateStatic>:
 801c620:	b580      	push	{r7, lr}
 801c622:	b08e      	sub	sp, #56	; 0x38
 801c624:	af04      	add	r7, sp, #16
 801c626:	60f8      	str	r0, [r7, #12]
 801c628:	60b9      	str	r1, [r7, #8]
 801c62a:	607a      	str	r2, [r7, #4]
 801c62c:	603b      	str	r3, [r7, #0]
 801c62e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c630:	2b00      	cmp	r3, #0
 801c632:	d10a      	bne.n	801c64a <xTaskCreateStatic+0x2a>
 801c634:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c638:	f383 8811 	msr	BASEPRI, r3
 801c63c:	f3bf 8f6f 	isb	sy
 801c640:	f3bf 8f4f 	dsb	sy
 801c644:	623b      	str	r3, [r7, #32]
 801c646:	bf00      	nop
 801c648:	e7fe      	b.n	801c648 <xTaskCreateStatic+0x28>
 801c64a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c64c:	2b00      	cmp	r3, #0
 801c64e:	d10a      	bne.n	801c666 <xTaskCreateStatic+0x46>
 801c650:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c654:	f383 8811 	msr	BASEPRI, r3
 801c658:	f3bf 8f6f 	isb	sy
 801c65c:	f3bf 8f4f 	dsb	sy
 801c660:	61fb      	str	r3, [r7, #28]
 801c662:	bf00      	nop
 801c664:	e7fe      	b.n	801c664 <xTaskCreateStatic+0x44>
 801c666:	23c0      	movs	r3, #192	; 0xc0
 801c668:	613b      	str	r3, [r7, #16]
 801c66a:	693b      	ldr	r3, [r7, #16]
 801c66c:	2bc0      	cmp	r3, #192	; 0xc0
 801c66e:	d00a      	beq.n	801c686 <xTaskCreateStatic+0x66>
 801c670:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c674:	f383 8811 	msr	BASEPRI, r3
 801c678:	f3bf 8f6f 	isb	sy
 801c67c:	f3bf 8f4f 	dsb	sy
 801c680:	61bb      	str	r3, [r7, #24]
 801c682:	bf00      	nop
 801c684:	e7fe      	b.n	801c684 <xTaskCreateStatic+0x64>
 801c686:	693b      	ldr	r3, [r7, #16]
 801c688:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c68a:	2b00      	cmp	r3, #0
 801c68c:	d01e      	beq.n	801c6cc <xTaskCreateStatic+0xac>
 801c68e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c690:	2b00      	cmp	r3, #0
 801c692:	d01b      	beq.n	801c6cc <xTaskCreateStatic+0xac>
 801c694:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c696:	627b      	str	r3, [r7, #36]	; 0x24
 801c698:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c69a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801c69c:	631a      	str	r2, [r3, #48]	; 0x30
 801c69e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c6a0:	2202      	movs	r2, #2
 801c6a2:	f883 20bd 	strb.w	r2, [r3, #189]	; 0xbd
 801c6a6:	2300      	movs	r3, #0
 801c6a8:	9303      	str	r3, [sp, #12]
 801c6aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c6ac:	9302      	str	r3, [sp, #8]
 801c6ae:	f107 0314 	add.w	r3, r7, #20
 801c6b2:	9301      	str	r3, [sp, #4]
 801c6b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c6b6:	9300      	str	r3, [sp, #0]
 801c6b8:	683b      	ldr	r3, [r7, #0]
 801c6ba:	687a      	ldr	r2, [r7, #4]
 801c6bc:	68b9      	ldr	r1, [r7, #8]
 801c6be:	68f8      	ldr	r0, [r7, #12]
 801c6c0:	f000 f850 	bl	801c764 <prvInitialiseNewTask>
 801c6c4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801c6c6:	f000 f8f7 	bl	801c8b8 <prvAddNewTaskToReadyList>
 801c6ca:	e001      	b.n	801c6d0 <xTaskCreateStatic+0xb0>
 801c6cc:	2300      	movs	r3, #0
 801c6ce:	617b      	str	r3, [r7, #20]
 801c6d0:	697b      	ldr	r3, [r7, #20]
 801c6d2:	4618      	mov	r0, r3
 801c6d4:	3728      	adds	r7, #40	; 0x28
 801c6d6:	46bd      	mov	sp, r7
 801c6d8:	bd80      	pop	{r7, pc}

0801c6da <xTaskCreate>:
 801c6da:	b580      	push	{r7, lr}
 801c6dc:	b08c      	sub	sp, #48	; 0x30
 801c6de:	af04      	add	r7, sp, #16
 801c6e0:	60f8      	str	r0, [r7, #12]
 801c6e2:	60b9      	str	r1, [r7, #8]
 801c6e4:	603b      	str	r3, [r7, #0]
 801c6e6:	4613      	mov	r3, r2
 801c6e8:	80fb      	strh	r3, [r7, #6]
 801c6ea:	88fb      	ldrh	r3, [r7, #6]
 801c6ec:	009b      	lsls	r3, r3, #2
 801c6ee:	4618      	mov	r0, r3
 801c6f0:	f001 fee2 	bl	801e4b8 <pvPortMalloc>
 801c6f4:	6178      	str	r0, [r7, #20]
 801c6f6:	697b      	ldr	r3, [r7, #20]
 801c6f8:	2b00      	cmp	r3, #0
 801c6fa:	d00e      	beq.n	801c71a <xTaskCreate+0x40>
 801c6fc:	20c0      	movs	r0, #192	; 0xc0
 801c6fe:	f001 fedb 	bl	801e4b8 <pvPortMalloc>
 801c702:	61f8      	str	r0, [r7, #28]
 801c704:	69fb      	ldr	r3, [r7, #28]
 801c706:	2b00      	cmp	r3, #0
 801c708:	d003      	beq.n	801c712 <xTaskCreate+0x38>
 801c70a:	69fb      	ldr	r3, [r7, #28]
 801c70c:	697a      	ldr	r2, [r7, #20]
 801c70e:	631a      	str	r2, [r3, #48]	; 0x30
 801c710:	e005      	b.n	801c71e <xTaskCreate+0x44>
 801c712:	6978      	ldr	r0, [r7, #20]
 801c714:	f001 ff9c 	bl	801e650 <vPortFree>
 801c718:	e001      	b.n	801c71e <xTaskCreate+0x44>
 801c71a:	2300      	movs	r3, #0
 801c71c:	61fb      	str	r3, [r7, #28]
 801c71e:	69fb      	ldr	r3, [r7, #28]
 801c720:	2b00      	cmp	r3, #0
 801c722:	d017      	beq.n	801c754 <xTaskCreate+0x7a>
 801c724:	69fb      	ldr	r3, [r7, #28]
 801c726:	2200      	movs	r2, #0
 801c728:	f883 20bd 	strb.w	r2, [r3, #189]	; 0xbd
 801c72c:	88fa      	ldrh	r2, [r7, #6]
 801c72e:	2300      	movs	r3, #0
 801c730:	9303      	str	r3, [sp, #12]
 801c732:	69fb      	ldr	r3, [r7, #28]
 801c734:	9302      	str	r3, [sp, #8]
 801c736:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c738:	9301      	str	r3, [sp, #4]
 801c73a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c73c:	9300      	str	r3, [sp, #0]
 801c73e:	683b      	ldr	r3, [r7, #0]
 801c740:	68b9      	ldr	r1, [r7, #8]
 801c742:	68f8      	ldr	r0, [r7, #12]
 801c744:	f000 f80e 	bl	801c764 <prvInitialiseNewTask>
 801c748:	69f8      	ldr	r0, [r7, #28]
 801c74a:	f000 f8b5 	bl	801c8b8 <prvAddNewTaskToReadyList>
 801c74e:	2301      	movs	r3, #1
 801c750:	61bb      	str	r3, [r7, #24]
 801c752:	e002      	b.n	801c75a <xTaskCreate+0x80>
 801c754:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c758:	61bb      	str	r3, [r7, #24]
 801c75a:	69bb      	ldr	r3, [r7, #24]
 801c75c:	4618      	mov	r0, r3
 801c75e:	3720      	adds	r7, #32
 801c760:	46bd      	mov	sp, r7
 801c762:	bd80      	pop	{r7, pc}

0801c764 <prvInitialiseNewTask>:
 801c764:	b580      	push	{r7, lr}
 801c766:	b088      	sub	sp, #32
 801c768:	af00      	add	r7, sp, #0
 801c76a:	60f8      	str	r0, [r7, #12]
 801c76c:	60b9      	str	r1, [r7, #8]
 801c76e:	607a      	str	r2, [r7, #4]
 801c770:	603b      	str	r3, [r7, #0]
 801c772:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c774:	6b18      	ldr	r0, [r3, #48]	; 0x30
 801c776:	687b      	ldr	r3, [r7, #4]
 801c778:	009b      	lsls	r3, r3, #2
 801c77a:	461a      	mov	r2, r3
 801c77c:	21a5      	movs	r1, #165	; 0xa5
 801c77e:	f002 fef8 	bl	801f572 <memset>
 801c782:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 801c786:	687b      	ldr	r3, [r7, #4]
 801c788:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801c78c:	3b01      	subs	r3, #1
 801c78e:	009b      	lsls	r3, r3, #2
 801c790:	4413      	add	r3, r2
 801c792:	61bb      	str	r3, [r7, #24]
 801c794:	69bb      	ldr	r3, [r7, #24]
 801c796:	f023 0307 	bic.w	r3, r3, #7
 801c79a:	61bb      	str	r3, [r7, #24]
 801c79c:	69bb      	ldr	r3, [r7, #24]
 801c79e:	f003 0307 	and.w	r3, r3, #7
 801c7a2:	2b00      	cmp	r3, #0
 801c7a4:	d00a      	beq.n	801c7bc <prvInitialiseNewTask+0x58>
 801c7a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c7aa:	f383 8811 	msr	BASEPRI, r3
 801c7ae:	f3bf 8f6f 	isb	sy
 801c7b2:	f3bf 8f4f 	dsb	sy
 801c7b6:	617b      	str	r3, [r7, #20]
 801c7b8:	bf00      	nop
 801c7ba:	e7fe      	b.n	801c7ba <prvInitialiseNewTask+0x56>
 801c7bc:	68bb      	ldr	r3, [r7, #8]
 801c7be:	2b00      	cmp	r3, #0
 801c7c0:	d01f      	beq.n	801c802 <prvInitialiseNewTask+0x9e>
 801c7c2:	2300      	movs	r3, #0
 801c7c4:	61fb      	str	r3, [r7, #28]
 801c7c6:	e012      	b.n	801c7ee <prvInitialiseNewTask+0x8a>
 801c7c8:	68ba      	ldr	r2, [r7, #8]
 801c7ca:	69fb      	ldr	r3, [r7, #28]
 801c7cc:	4413      	add	r3, r2
 801c7ce:	7819      	ldrb	r1, [r3, #0]
 801c7d0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c7d2:	69fb      	ldr	r3, [r7, #28]
 801c7d4:	4413      	add	r3, r2
 801c7d6:	3334      	adds	r3, #52	; 0x34
 801c7d8:	460a      	mov	r2, r1
 801c7da:	701a      	strb	r2, [r3, #0]
 801c7dc:	68ba      	ldr	r2, [r7, #8]
 801c7de:	69fb      	ldr	r3, [r7, #28]
 801c7e0:	4413      	add	r3, r2
 801c7e2:	781b      	ldrb	r3, [r3, #0]
 801c7e4:	2b00      	cmp	r3, #0
 801c7e6:	d006      	beq.n	801c7f6 <prvInitialiseNewTask+0x92>
 801c7e8:	69fb      	ldr	r3, [r7, #28]
 801c7ea:	3301      	adds	r3, #1
 801c7ec:	61fb      	str	r3, [r7, #28]
 801c7ee:	69fb      	ldr	r3, [r7, #28]
 801c7f0:	2b0f      	cmp	r3, #15
 801c7f2:	d9e9      	bls.n	801c7c8 <prvInitialiseNewTask+0x64>
 801c7f4:	e000      	b.n	801c7f8 <prvInitialiseNewTask+0x94>
 801c7f6:	bf00      	nop
 801c7f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c7fa:	2200      	movs	r2, #0
 801c7fc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 801c800:	e003      	b.n	801c80a <prvInitialiseNewTask+0xa6>
 801c802:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c804:	2200      	movs	r2, #0
 801c806:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 801c80a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c80c:	2b0e      	cmp	r3, #14
 801c80e:	d901      	bls.n	801c814 <prvInitialiseNewTask+0xb0>
 801c810:	230e      	movs	r3, #14
 801c812:	62bb      	str	r3, [r7, #40]	; 0x28
 801c814:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c816:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c818:	62da      	str	r2, [r3, #44]	; 0x2c
 801c81a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c81c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c81e:	64da      	str	r2, [r3, #76]	; 0x4c
 801c820:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c822:	2200      	movs	r2, #0
 801c824:	651a      	str	r2, [r3, #80]	; 0x50
 801c826:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c828:	3304      	adds	r3, #4
 801c82a:	4618      	mov	r0, r3
 801c82c:	f7ff f8b2 	bl	801b994 <vListInitialiseItem>
 801c830:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c832:	3318      	adds	r3, #24
 801c834:	4618      	mov	r0, r3
 801c836:	f7ff f8ad 	bl	801b994 <vListInitialiseItem>
 801c83a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c83c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c83e:	611a      	str	r2, [r3, #16]
 801c840:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c842:	f1c3 020f 	rsb	r2, r3, #15
 801c846:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c848:	619a      	str	r2, [r3, #24]
 801c84a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c84c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c84e:	625a      	str	r2, [r3, #36]	; 0x24
 801c850:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c852:	2200      	movs	r2, #0
 801c854:	655a      	str	r2, [r3, #84]	; 0x54
 801c856:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c858:	2200      	movs	r2, #0
 801c85a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801c85e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c860:	2200      	movs	r2, #0
 801c862:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801c866:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c868:	3358      	adds	r3, #88	; 0x58
 801c86a:	2260      	movs	r2, #96	; 0x60
 801c86c:	2100      	movs	r1, #0
 801c86e:	4618      	mov	r0, r3
 801c870:	f002 fe7f 	bl	801f572 <memset>
 801c874:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c876:	4a0d      	ldr	r2, [pc, #52]	; (801c8ac <prvInitialiseNewTask+0x148>)
 801c878:	65da      	str	r2, [r3, #92]	; 0x5c
 801c87a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c87c:	4a0c      	ldr	r2, [pc, #48]	; (801c8b0 <prvInitialiseNewTask+0x14c>)
 801c87e:	661a      	str	r2, [r3, #96]	; 0x60
 801c880:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c882:	4a0c      	ldr	r2, [pc, #48]	; (801c8b4 <prvInitialiseNewTask+0x150>)
 801c884:	665a      	str	r2, [r3, #100]	; 0x64
 801c886:	683a      	ldr	r2, [r7, #0]
 801c888:	68f9      	ldr	r1, [r7, #12]
 801c88a:	69b8      	ldr	r0, [r7, #24]
 801c88c:	f001 fbc4 	bl	801e018 <pxPortInitialiseStack>
 801c890:	4602      	mov	r2, r0
 801c892:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c894:	601a      	str	r2, [r3, #0]
 801c896:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c898:	2b00      	cmp	r3, #0
 801c89a:	d002      	beq.n	801c8a2 <prvInitialiseNewTask+0x13e>
 801c89c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c89e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c8a0:	601a      	str	r2, [r3, #0]
 801c8a2:	bf00      	nop
 801c8a4:	3720      	adds	r7, #32
 801c8a6:	46bd      	mov	sp, r7
 801c8a8:	bd80      	pop	{r7, pc}
 801c8aa:	bf00      	nop
 801c8ac:	08026ee8 	.word	0x08026ee8
 801c8b0:	08026f08 	.word	0x08026f08
 801c8b4:	08026ec8 	.word	0x08026ec8

0801c8b8 <prvAddNewTaskToReadyList>:
 801c8b8:	b580      	push	{r7, lr}
 801c8ba:	b082      	sub	sp, #8
 801c8bc:	af00      	add	r7, sp, #0
 801c8be:	6078      	str	r0, [r7, #4]
 801c8c0:	f001 fcd8 	bl	801e274 <vPortEnterCritical>
 801c8c4:	4b2c      	ldr	r3, [pc, #176]	; (801c978 <prvAddNewTaskToReadyList+0xc0>)
 801c8c6:	681b      	ldr	r3, [r3, #0]
 801c8c8:	3301      	adds	r3, #1
 801c8ca:	4a2b      	ldr	r2, [pc, #172]	; (801c978 <prvAddNewTaskToReadyList+0xc0>)
 801c8cc:	6013      	str	r3, [r2, #0]
 801c8ce:	4b2b      	ldr	r3, [pc, #172]	; (801c97c <prvAddNewTaskToReadyList+0xc4>)
 801c8d0:	681b      	ldr	r3, [r3, #0]
 801c8d2:	2b00      	cmp	r3, #0
 801c8d4:	d109      	bne.n	801c8ea <prvAddNewTaskToReadyList+0x32>
 801c8d6:	4a29      	ldr	r2, [pc, #164]	; (801c97c <prvAddNewTaskToReadyList+0xc4>)
 801c8d8:	687b      	ldr	r3, [r7, #4]
 801c8da:	6013      	str	r3, [r2, #0]
 801c8dc:	4b26      	ldr	r3, [pc, #152]	; (801c978 <prvAddNewTaskToReadyList+0xc0>)
 801c8de:	681b      	ldr	r3, [r3, #0]
 801c8e0:	2b01      	cmp	r3, #1
 801c8e2:	d110      	bne.n	801c906 <prvAddNewTaskToReadyList+0x4e>
 801c8e4:	f000 fd66 	bl	801d3b4 <prvInitialiseTaskLists>
 801c8e8:	e00d      	b.n	801c906 <prvAddNewTaskToReadyList+0x4e>
 801c8ea:	4b25      	ldr	r3, [pc, #148]	; (801c980 <prvAddNewTaskToReadyList+0xc8>)
 801c8ec:	681b      	ldr	r3, [r3, #0]
 801c8ee:	2b00      	cmp	r3, #0
 801c8f0:	d109      	bne.n	801c906 <prvAddNewTaskToReadyList+0x4e>
 801c8f2:	4b22      	ldr	r3, [pc, #136]	; (801c97c <prvAddNewTaskToReadyList+0xc4>)
 801c8f4:	681b      	ldr	r3, [r3, #0]
 801c8f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801c8f8:	687b      	ldr	r3, [r7, #4]
 801c8fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8fc:	429a      	cmp	r2, r3
 801c8fe:	d802      	bhi.n	801c906 <prvAddNewTaskToReadyList+0x4e>
 801c900:	4a1e      	ldr	r2, [pc, #120]	; (801c97c <prvAddNewTaskToReadyList+0xc4>)
 801c902:	687b      	ldr	r3, [r7, #4]
 801c904:	6013      	str	r3, [r2, #0]
 801c906:	4b1f      	ldr	r3, [pc, #124]	; (801c984 <prvAddNewTaskToReadyList+0xcc>)
 801c908:	681b      	ldr	r3, [r3, #0]
 801c90a:	3301      	adds	r3, #1
 801c90c:	4a1d      	ldr	r2, [pc, #116]	; (801c984 <prvAddNewTaskToReadyList+0xcc>)
 801c90e:	6013      	str	r3, [r2, #0]
 801c910:	4b1c      	ldr	r3, [pc, #112]	; (801c984 <prvAddNewTaskToReadyList+0xcc>)
 801c912:	681a      	ldr	r2, [r3, #0]
 801c914:	687b      	ldr	r3, [r7, #4]
 801c916:	645a      	str	r2, [r3, #68]	; 0x44
 801c918:	687b      	ldr	r3, [r7, #4]
 801c91a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c91c:	2201      	movs	r2, #1
 801c91e:	409a      	lsls	r2, r3
 801c920:	4b19      	ldr	r3, [pc, #100]	; (801c988 <prvAddNewTaskToReadyList+0xd0>)
 801c922:	681b      	ldr	r3, [r3, #0]
 801c924:	4313      	orrs	r3, r2
 801c926:	4a18      	ldr	r2, [pc, #96]	; (801c988 <prvAddNewTaskToReadyList+0xd0>)
 801c928:	6013      	str	r3, [r2, #0]
 801c92a:	687b      	ldr	r3, [r7, #4]
 801c92c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801c92e:	4613      	mov	r3, r2
 801c930:	009b      	lsls	r3, r3, #2
 801c932:	4413      	add	r3, r2
 801c934:	009b      	lsls	r3, r3, #2
 801c936:	4a15      	ldr	r2, [pc, #84]	; (801c98c <prvAddNewTaskToReadyList+0xd4>)
 801c938:	441a      	add	r2, r3
 801c93a:	687b      	ldr	r3, [r7, #4]
 801c93c:	3304      	adds	r3, #4
 801c93e:	4619      	mov	r1, r3
 801c940:	4610      	mov	r0, r2
 801c942:	f7ff f834 	bl	801b9ae <vListInsertEnd>
 801c946:	f001 fcc5 	bl	801e2d4 <vPortExitCritical>
 801c94a:	4b0d      	ldr	r3, [pc, #52]	; (801c980 <prvAddNewTaskToReadyList+0xc8>)
 801c94c:	681b      	ldr	r3, [r3, #0]
 801c94e:	2b00      	cmp	r3, #0
 801c950:	d00e      	beq.n	801c970 <prvAddNewTaskToReadyList+0xb8>
 801c952:	4b0a      	ldr	r3, [pc, #40]	; (801c97c <prvAddNewTaskToReadyList+0xc4>)
 801c954:	681b      	ldr	r3, [r3, #0]
 801c956:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801c958:	687b      	ldr	r3, [r7, #4]
 801c95a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c95c:	429a      	cmp	r2, r3
 801c95e:	d207      	bcs.n	801c970 <prvAddNewTaskToReadyList+0xb8>
 801c960:	4b0b      	ldr	r3, [pc, #44]	; (801c990 <prvAddNewTaskToReadyList+0xd8>)
 801c962:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c966:	601a      	str	r2, [r3, #0]
 801c968:	f3bf 8f4f 	dsb	sy
 801c96c:	f3bf 8f6f 	isb	sy
 801c970:	bf00      	nop
 801c972:	3708      	adds	r7, #8
 801c974:	46bd      	mov	sp, r7
 801c976:	bd80      	pop	{r7, pc}
 801c978:	20003ba0 	.word	0x20003ba0
 801c97c:	20003a00 	.word	0x20003a00
 801c980:	20003bac 	.word	0x20003bac
 801c984:	20003bbc 	.word	0x20003bbc
 801c988:	20003ba8 	.word	0x20003ba8
 801c98c:	20003a04 	.word	0x20003a04
 801c990:	e000ed04 	.word	0xe000ed04

0801c994 <vTaskDelayUntil>:
 801c994:	b580      	push	{r7, lr}
 801c996:	b08a      	sub	sp, #40	; 0x28
 801c998:	af00      	add	r7, sp, #0
 801c99a:	6078      	str	r0, [r7, #4]
 801c99c:	6039      	str	r1, [r7, #0]
 801c99e:	2300      	movs	r3, #0
 801c9a0:	627b      	str	r3, [r7, #36]	; 0x24
 801c9a2:	687b      	ldr	r3, [r7, #4]
 801c9a4:	2b00      	cmp	r3, #0
 801c9a6:	d10a      	bne.n	801c9be <vTaskDelayUntil+0x2a>
 801c9a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c9ac:	f383 8811 	msr	BASEPRI, r3
 801c9b0:	f3bf 8f6f 	isb	sy
 801c9b4:	f3bf 8f4f 	dsb	sy
 801c9b8:	617b      	str	r3, [r7, #20]
 801c9ba:	bf00      	nop
 801c9bc:	e7fe      	b.n	801c9bc <vTaskDelayUntil+0x28>
 801c9be:	683b      	ldr	r3, [r7, #0]
 801c9c0:	2b00      	cmp	r3, #0
 801c9c2:	d10a      	bne.n	801c9da <vTaskDelayUntil+0x46>
 801c9c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c9c8:	f383 8811 	msr	BASEPRI, r3
 801c9cc:	f3bf 8f6f 	isb	sy
 801c9d0:	f3bf 8f4f 	dsb	sy
 801c9d4:	613b      	str	r3, [r7, #16]
 801c9d6:	bf00      	nop
 801c9d8:	e7fe      	b.n	801c9d8 <vTaskDelayUntil+0x44>
 801c9da:	4b2a      	ldr	r3, [pc, #168]	; (801ca84 <vTaskDelayUntil+0xf0>)
 801c9dc:	681b      	ldr	r3, [r3, #0]
 801c9de:	2b00      	cmp	r3, #0
 801c9e0:	d00a      	beq.n	801c9f8 <vTaskDelayUntil+0x64>
 801c9e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c9e6:	f383 8811 	msr	BASEPRI, r3
 801c9ea:	f3bf 8f6f 	isb	sy
 801c9ee:	f3bf 8f4f 	dsb	sy
 801c9f2:	60fb      	str	r3, [r7, #12]
 801c9f4:	bf00      	nop
 801c9f6:	e7fe      	b.n	801c9f6 <vTaskDelayUntil+0x62>
 801c9f8:	f000 f8f0 	bl	801cbdc <vTaskSuspendAll>
 801c9fc:	4b22      	ldr	r3, [pc, #136]	; (801ca88 <vTaskDelayUntil+0xf4>)
 801c9fe:	681b      	ldr	r3, [r3, #0]
 801ca00:	623b      	str	r3, [r7, #32]
 801ca02:	687b      	ldr	r3, [r7, #4]
 801ca04:	681b      	ldr	r3, [r3, #0]
 801ca06:	683a      	ldr	r2, [r7, #0]
 801ca08:	4413      	add	r3, r2
 801ca0a:	61fb      	str	r3, [r7, #28]
 801ca0c:	687b      	ldr	r3, [r7, #4]
 801ca0e:	681b      	ldr	r3, [r3, #0]
 801ca10:	6a3a      	ldr	r2, [r7, #32]
 801ca12:	429a      	cmp	r2, r3
 801ca14:	d20b      	bcs.n	801ca2e <vTaskDelayUntil+0x9a>
 801ca16:	687b      	ldr	r3, [r7, #4]
 801ca18:	681b      	ldr	r3, [r3, #0]
 801ca1a:	69fa      	ldr	r2, [r7, #28]
 801ca1c:	429a      	cmp	r2, r3
 801ca1e:	d211      	bcs.n	801ca44 <vTaskDelayUntil+0xb0>
 801ca20:	69fa      	ldr	r2, [r7, #28]
 801ca22:	6a3b      	ldr	r3, [r7, #32]
 801ca24:	429a      	cmp	r2, r3
 801ca26:	d90d      	bls.n	801ca44 <vTaskDelayUntil+0xb0>
 801ca28:	2301      	movs	r3, #1
 801ca2a:	627b      	str	r3, [r7, #36]	; 0x24
 801ca2c:	e00a      	b.n	801ca44 <vTaskDelayUntil+0xb0>
 801ca2e:	687b      	ldr	r3, [r7, #4]
 801ca30:	681b      	ldr	r3, [r3, #0]
 801ca32:	69fa      	ldr	r2, [r7, #28]
 801ca34:	429a      	cmp	r2, r3
 801ca36:	d303      	bcc.n	801ca40 <vTaskDelayUntil+0xac>
 801ca38:	69fa      	ldr	r2, [r7, #28]
 801ca3a:	6a3b      	ldr	r3, [r7, #32]
 801ca3c:	429a      	cmp	r2, r3
 801ca3e:	d901      	bls.n	801ca44 <vTaskDelayUntil+0xb0>
 801ca40:	2301      	movs	r3, #1
 801ca42:	627b      	str	r3, [r7, #36]	; 0x24
 801ca44:	687b      	ldr	r3, [r7, #4]
 801ca46:	69fa      	ldr	r2, [r7, #28]
 801ca48:	601a      	str	r2, [r3, #0]
 801ca4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801ca4c:	2b00      	cmp	r3, #0
 801ca4e:	d006      	beq.n	801ca5e <vTaskDelayUntil+0xca>
 801ca50:	69fa      	ldr	r2, [r7, #28]
 801ca52:	6a3b      	ldr	r3, [r7, #32]
 801ca54:	1ad3      	subs	r3, r2, r3
 801ca56:	2100      	movs	r1, #0
 801ca58:	4618      	mov	r0, r3
 801ca5a:	f000 ff09 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801ca5e:	f000 f8cb 	bl	801cbf8 <xTaskResumeAll>
 801ca62:	61b8      	str	r0, [r7, #24]
 801ca64:	69bb      	ldr	r3, [r7, #24]
 801ca66:	2b00      	cmp	r3, #0
 801ca68:	d107      	bne.n	801ca7a <vTaskDelayUntil+0xe6>
 801ca6a:	4b08      	ldr	r3, [pc, #32]	; (801ca8c <vTaskDelayUntil+0xf8>)
 801ca6c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801ca70:	601a      	str	r2, [r3, #0]
 801ca72:	f3bf 8f4f 	dsb	sy
 801ca76:	f3bf 8f6f 	isb	sy
 801ca7a:	bf00      	nop
 801ca7c:	3728      	adds	r7, #40	; 0x28
 801ca7e:	46bd      	mov	sp, r7
 801ca80:	bd80      	pop	{r7, pc}
 801ca82:	bf00      	nop
 801ca84:	20003bc8 	.word	0x20003bc8
 801ca88:	20003ba4 	.word	0x20003ba4
 801ca8c:	e000ed04 	.word	0xe000ed04

0801ca90 <vTaskDelay>:
 801ca90:	b580      	push	{r7, lr}
 801ca92:	b084      	sub	sp, #16
 801ca94:	af00      	add	r7, sp, #0
 801ca96:	6078      	str	r0, [r7, #4]
 801ca98:	2300      	movs	r3, #0
 801ca9a:	60fb      	str	r3, [r7, #12]
 801ca9c:	687b      	ldr	r3, [r7, #4]
 801ca9e:	2b00      	cmp	r3, #0
 801caa0:	d017      	beq.n	801cad2 <vTaskDelay+0x42>
 801caa2:	4b13      	ldr	r3, [pc, #76]	; (801caf0 <vTaskDelay+0x60>)
 801caa4:	681b      	ldr	r3, [r3, #0]
 801caa6:	2b00      	cmp	r3, #0
 801caa8:	d00a      	beq.n	801cac0 <vTaskDelay+0x30>
 801caaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 801caae:	f383 8811 	msr	BASEPRI, r3
 801cab2:	f3bf 8f6f 	isb	sy
 801cab6:	f3bf 8f4f 	dsb	sy
 801caba:	60bb      	str	r3, [r7, #8]
 801cabc:	bf00      	nop
 801cabe:	e7fe      	b.n	801cabe <vTaskDelay+0x2e>
 801cac0:	f000 f88c 	bl	801cbdc <vTaskSuspendAll>
 801cac4:	2100      	movs	r1, #0
 801cac6:	6878      	ldr	r0, [r7, #4]
 801cac8:	f000 fed2 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801cacc:	f000 f894 	bl	801cbf8 <xTaskResumeAll>
 801cad0:	60f8      	str	r0, [r7, #12]
 801cad2:	68fb      	ldr	r3, [r7, #12]
 801cad4:	2b00      	cmp	r3, #0
 801cad6:	d107      	bne.n	801cae8 <vTaskDelay+0x58>
 801cad8:	4b06      	ldr	r3, [pc, #24]	; (801caf4 <vTaskDelay+0x64>)
 801cada:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801cade:	601a      	str	r2, [r3, #0]
 801cae0:	f3bf 8f4f 	dsb	sy
 801cae4:	f3bf 8f6f 	isb	sy
 801cae8:	bf00      	nop
 801caea:	3710      	adds	r7, #16
 801caec:	46bd      	mov	sp, r7
 801caee:	bd80      	pop	{r7, pc}
 801caf0:	20003bc8 	.word	0x20003bc8
 801caf4:	e000ed04 	.word	0xe000ed04

0801caf8 <vTaskStartScheduler>:
 801caf8:	b580      	push	{r7, lr}
 801cafa:	b08a      	sub	sp, #40	; 0x28
 801cafc:	af04      	add	r7, sp, #16
 801cafe:	2300      	movs	r3, #0
 801cb00:	60bb      	str	r3, [r7, #8]
 801cb02:	2300      	movs	r3, #0
 801cb04:	607b      	str	r3, [r7, #4]
 801cb06:	463a      	mov	r2, r7
 801cb08:	1d39      	adds	r1, r7, #4
 801cb0a:	f107 0308 	add.w	r3, r7, #8
 801cb0e:	4618      	mov	r0, r3
 801cb10:	f7e6 fbda 	bl	80032c8 <vApplicationGetIdleTaskMemory>
 801cb14:	6839      	ldr	r1, [r7, #0]
 801cb16:	687b      	ldr	r3, [r7, #4]
 801cb18:	68ba      	ldr	r2, [r7, #8]
 801cb1a:	9202      	str	r2, [sp, #8]
 801cb1c:	9301      	str	r3, [sp, #4]
 801cb1e:	2300      	movs	r3, #0
 801cb20:	9300      	str	r3, [sp, #0]
 801cb22:	2300      	movs	r3, #0
 801cb24:	460a      	mov	r2, r1
 801cb26:	4925      	ldr	r1, [pc, #148]	; (801cbbc <vTaskStartScheduler+0xc4>)
 801cb28:	4825      	ldr	r0, [pc, #148]	; (801cbc0 <vTaskStartScheduler+0xc8>)
 801cb2a:	f7ff fd79 	bl	801c620 <xTaskCreateStatic>
 801cb2e:	4603      	mov	r3, r0
 801cb30:	4a24      	ldr	r2, [pc, #144]	; (801cbc4 <vTaskStartScheduler+0xcc>)
 801cb32:	6013      	str	r3, [r2, #0]
 801cb34:	4b23      	ldr	r3, [pc, #140]	; (801cbc4 <vTaskStartScheduler+0xcc>)
 801cb36:	681b      	ldr	r3, [r3, #0]
 801cb38:	2b00      	cmp	r3, #0
 801cb3a:	d002      	beq.n	801cb42 <vTaskStartScheduler+0x4a>
 801cb3c:	2301      	movs	r3, #1
 801cb3e:	617b      	str	r3, [r7, #20]
 801cb40:	e001      	b.n	801cb46 <vTaskStartScheduler+0x4e>
 801cb42:	2300      	movs	r3, #0
 801cb44:	617b      	str	r3, [r7, #20]
 801cb46:	697b      	ldr	r3, [r7, #20]
 801cb48:	2b01      	cmp	r3, #1
 801cb4a:	d102      	bne.n	801cb52 <vTaskStartScheduler+0x5a>
 801cb4c:	f000 fef6 	bl	801d93c <xTimerCreateTimerTask>
 801cb50:	6178      	str	r0, [r7, #20]
 801cb52:	697b      	ldr	r3, [r7, #20]
 801cb54:	2b01      	cmp	r3, #1
 801cb56:	d11d      	bne.n	801cb94 <vTaskStartScheduler+0x9c>
 801cb58:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cb5c:	f383 8811 	msr	BASEPRI, r3
 801cb60:	f3bf 8f6f 	isb	sy
 801cb64:	f3bf 8f4f 	dsb	sy
 801cb68:	613b      	str	r3, [r7, #16]
 801cb6a:	bf00      	nop
 801cb6c:	4b16      	ldr	r3, [pc, #88]	; (801cbc8 <vTaskStartScheduler+0xd0>)
 801cb6e:	681b      	ldr	r3, [r3, #0]
 801cb70:	3358      	adds	r3, #88	; 0x58
 801cb72:	4a16      	ldr	r2, [pc, #88]	; (801cbcc <vTaskStartScheduler+0xd4>)
 801cb74:	6013      	str	r3, [r2, #0]
 801cb76:	4b16      	ldr	r3, [pc, #88]	; (801cbd0 <vTaskStartScheduler+0xd8>)
 801cb78:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801cb7c:	601a      	str	r2, [r3, #0]
 801cb7e:	4b15      	ldr	r3, [pc, #84]	; (801cbd4 <vTaskStartScheduler+0xdc>)
 801cb80:	2201      	movs	r2, #1
 801cb82:	601a      	str	r2, [r3, #0]
 801cb84:	4b14      	ldr	r3, [pc, #80]	; (801cbd8 <vTaskStartScheduler+0xe0>)
 801cb86:	2200      	movs	r2, #0
 801cb88:	601a      	str	r2, [r3, #0]
 801cb8a:	f7e6 fb83 	bl	8003294 <configureTimerForRunTimeStats>
 801cb8e:	f001 facf 	bl	801e130 <xPortStartScheduler>
 801cb92:	e00e      	b.n	801cbb2 <vTaskStartScheduler+0xba>
 801cb94:	697b      	ldr	r3, [r7, #20]
 801cb96:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801cb9a:	d10a      	bne.n	801cbb2 <vTaskStartScheduler+0xba>
 801cb9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cba0:	f383 8811 	msr	BASEPRI, r3
 801cba4:	f3bf 8f6f 	isb	sy
 801cba8:	f3bf 8f4f 	dsb	sy
 801cbac:	60fb      	str	r3, [r7, #12]
 801cbae:	bf00      	nop
 801cbb0:	e7fe      	b.n	801cbb0 <vTaskStartScheduler+0xb8>
 801cbb2:	bf00      	nop
 801cbb4:	3718      	adds	r7, #24
 801cbb6:	46bd      	mov	sp, r7
 801cbb8:	bd80      	pop	{r7, pc}
 801cbba:	bf00      	nop
 801cbbc:	08026830 	.word	0x08026830
 801cbc0:	0801d385 	.word	0x0801d385
 801cbc4:	20003bc4 	.word	0x20003bc4
 801cbc8:	20003a00 	.word	0x20003a00
 801cbcc:	20000150 	.word	0x20000150
 801cbd0:	20003bc0 	.word	0x20003bc0
 801cbd4:	20003bac 	.word	0x20003bac
 801cbd8:	20003ba4 	.word	0x20003ba4

0801cbdc <vTaskSuspendAll>:
 801cbdc:	b480      	push	{r7}
 801cbde:	af00      	add	r7, sp, #0
 801cbe0:	4b04      	ldr	r3, [pc, #16]	; (801cbf4 <vTaskSuspendAll+0x18>)
 801cbe2:	681b      	ldr	r3, [r3, #0]
 801cbe4:	3301      	adds	r3, #1
 801cbe6:	4a03      	ldr	r2, [pc, #12]	; (801cbf4 <vTaskSuspendAll+0x18>)
 801cbe8:	6013      	str	r3, [r2, #0]
 801cbea:	bf00      	nop
 801cbec:	46bd      	mov	sp, r7
 801cbee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbf2:	4770      	bx	lr
 801cbf4:	20003bc8 	.word	0x20003bc8

0801cbf8 <xTaskResumeAll>:
 801cbf8:	b580      	push	{r7, lr}
 801cbfa:	b084      	sub	sp, #16
 801cbfc:	af00      	add	r7, sp, #0
 801cbfe:	2300      	movs	r3, #0
 801cc00:	60fb      	str	r3, [r7, #12]
 801cc02:	2300      	movs	r3, #0
 801cc04:	60bb      	str	r3, [r7, #8]
 801cc06:	4b41      	ldr	r3, [pc, #260]	; (801cd0c <xTaskResumeAll+0x114>)
 801cc08:	681b      	ldr	r3, [r3, #0]
 801cc0a:	2b00      	cmp	r3, #0
 801cc0c:	d10a      	bne.n	801cc24 <xTaskResumeAll+0x2c>
 801cc0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cc12:	f383 8811 	msr	BASEPRI, r3
 801cc16:	f3bf 8f6f 	isb	sy
 801cc1a:	f3bf 8f4f 	dsb	sy
 801cc1e:	603b      	str	r3, [r7, #0]
 801cc20:	bf00      	nop
 801cc22:	e7fe      	b.n	801cc22 <xTaskResumeAll+0x2a>
 801cc24:	f001 fb26 	bl	801e274 <vPortEnterCritical>
 801cc28:	4b38      	ldr	r3, [pc, #224]	; (801cd0c <xTaskResumeAll+0x114>)
 801cc2a:	681b      	ldr	r3, [r3, #0]
 801cc2c:	3b01      	subs	r3, #1
 801cc2e:	4a37      	ldr	r2, [pc, #220]	; (801cd0c <xTaskResumeAll+0x114>)
 801cc30:	6013      	str	r3, [r2, #0]
 801cc32:	4b36      	ldr	r3, [pc, #216]	; (801cd0c <xTaskResumeAll+0x114>)
 801cc34:	681b      	ldr	r3, [r3, #0]
 801cc36:	2b00      	cmp	r3, #0
 801cc38:	d161      	bne.n	801ccfe <xTaskResumeAll+0x106>
 801cc3a:	4b35      	ldr	r3, [pc, #212]	; (801cd10 <xTaskResumeAll+0x118>)
 801cc3c:	681b      	ldr	r3, [r3, #0]
 801cc3e:	2b00      	cmp	r3, #0
 801cc40:	d05d      	beq.n	801ccfe <xTaskResumeAll+0x106>
 801cc42:	e02e      	b.n	801cca2 <xTaskResumeAll+0xaa>
 801cc44:	4b33      	ldr	r3, [pc, #204]	; (801cd14 <xTaskResumeAll+0x11c>)
 801cc46:	68db      	ldr	r3, [r3, #12]
 801cc48:	68db      	ldr	r3, [r3, #12]
 801cc4a:	60fb      	str	r3, [r7, #12]
 801cc4c:	68fb      	ldr	r3, [r7, #12]
 801cc4e:	3318      	adds	r3, #24
 801cc50:	4618      	mov	r0, r3
 801cc52:	f7fe ff09 	bl	801ba68 <uxListRemove>
 801cc56:	68fb      	ldr	r3, [r7, #12]
 801cc58:	3304      	adds	r3, #4
 801cc5a:	4618      	mov	r0, r3
 801cc5c:	f7fe ff04 	bl	801ba68 <uxListRemove>
 801cc60:	68fb      	ldr	r3, [r7, #12]
 801cc62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc64:	2201      	movs	r2, #1
 801cc66:	409a      	lsls	r2, r3
 801cc68:	4b2b      	ldr	r3, [pc, #172]	; (801cd18 <xTaskResumeAll+0x120>)
 801cc6a:	681b      	ldr	r3, [r3, #0]
 801cc6c:	4313      	orrs	r3, r2
 801cc6e:	4a2a      	ldr	r2, [pc, #168]	; (801cd18 <xTaskResumeAll+0x120>)
 801cc70:	6013      	str	r3, [r2, #0]
 801cc72:	68fb      	ldr	r3, [r7, #12]
 801cc74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cc76:	4613      	mov	r3, r2
 801cc78:	009b      	lsls	r3, r3, #2
 801cc7a:	4413      	add	r3, r2
 801cc7c:	009b      	lsls	r3, r3, #2
 801cc7e:	4a27      	ldr	r2, [pc, #156]	; (801cd1c <xTaskResumeAll+0x124>)
 801cc80:	441a      	add	r2, r3
 801cc82:	68fb      	ldr	r3, [r7, #12]
 801cc84:	3304      	adds	r3, #4
 801cc86:	4619      	mov	r1, r3
 801cc88:	4610      	mov	r0, r2
 801cc8a:	f7fe fe90 	bl	801b9ae <vListInsertEnd>
 801cc8e:	68fb      	ldr	r3, [r7, #12]
 801cc90:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cc92:	4b23      	ldr	r3, [pc, #140]	; (801cd20 <xTaskResumeAll+0x128>)
 801cc94:	681b      	ldr	r3, [r3, #0]
 801cc96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc98:	429a      	cmp	r2, r3
 801cc9a:	d302      	bcc.n	801cca2 <xTaskResumeAll+0xaa>
 801cc9c:	4b21      	ldr	r3, [pc, #132]	; (801cd24 <xTaskResumeAll+0x12c>)
 801cc9e:	2201      	movs	r2, #1
 801cca0:	601a      	str	r2, [r3, #0]
 801cca2:	4b1c      	ldr	r3, [pc, #112]	; (801cd14 <xTaskResumeAll+0x11c>)
 801cca4:	681b      	ldr	r3, [r3, #0]
 801cca6:	2b00      	cmp	r3, #0
 801cca8:	d1cc      	bne.n	801cc44 <xTaskResumeAll+0x4c>
 801ccaa:	68fb      	ldr	r3, [r7, #12]
 801ccac:	2b00      	cmp	r3, #0
 801ccae:	d001      	beq.n	801ccb4 <xTaskResumeAll+0xbc>
 801ccb0:	f000 fc22 	bl	801d4f8 <prvResetNextTaskUnblockTime>
 801ccb4:	4b1c      	ldr	r3, [pc, #112]	; (801cd28 <xTaskResumeAll+0x130>)
 801ccb6:	681b      	ldr	r3, [r3, #0]
 801ccb8:	607b      	str	r3, [r7, #4]
 801ccba:	687b      	ldr	r3, [r7, #4]
 801ccbc:	2b00      	cmp	r3, #0
 801ccbe:	d010      	beq.n	801cce2 <xTaskResumeAll+0xea>
 801ccc0:	f000 f846 	bl	801cd50 <xTaskIncrementTick>
 801ccc4:	4603      	mov	r3, r0
 801ccc6:	2b00      	cmp	r3, #0
 801ccc8:	d002      	beq.n	801ccd0 <xTaskResumeAll+0xd8>
 801ccca:	4b16      	ldr	r3, [pc, #88]	; (801cd24 <xTaskResumeAll+0x12c>)
 801cccc:	2201      	movs	r2, #1
 801ccce:	601a      	str	r2, [r3, #0]
 801ccd0:	687b      	ldr	r3, [r7, #4]
 801ccd2:	3b01      	subs	r3, #1
 801ccd4:	607b      	str	r3, [r7, #4]
 801ccd6:	687b      	ldr	r3, [r7, #4]
 801ccd8:	2b00      	cmp	r3, #0
 801ccda:	d1f1      	bne.n	801ccc0 <xTaskResumeAll+0xc8>
 801ccdc:	4b12      	ldr	r3, [pc, #72]	; (801cd28 <xTaskResumeAll+0x130>)
 801ccde:	2200      	movs	r2, #0
 801cce0:	601a      	str	r2, [r3, #0]
 801cce2:	4b10      	ldr	r3, [pc, #64]	; (801cd24 <xTaskResumeAll+0x12c>)
 801cce4:	681b      	ldr	r3, [r3, #0]
 801cce6:	2b00      	cmp	r3, #0
 801cce8:	d009      	beq.n	801ccfe <xTaskResumeAll+0x106>
 801ccea:	2301      	movs	r3, #1
 801ccec:	60bb      	str	r3, [r7, #8]
 801ccee:	4b0f      	ldr	r3, [pc, #60]	; (801cd2c <xTaskResumeAll+0x134>)
 801ccf0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801ccf4:	601a      	str	r2, [r3, #0]
 801ccf6:	f3bf 8f4f 	dsb	sy
 801ccfa:	f3bf 8f6f 	isb	sy
 801ccfe:	f001 fae9 	bl	801e2d4 <vPortExitCritical>
 801cd02:	68bb      	ldr	r3, [r7, #8]
 801cd04:	4618      	mov	r0, r3
 801cd06:	3710      	adds	r7, #16
 801cd08:	46bd      	mov	sp, r7
 801cd0a:	bd80      	pop	{r7, pc}
 801cd0c:	20003bc8 	.word	0x20003bc8
 801cd10:	20003ba0 	.word	0x20003ba0
 801cd14:	20003b60 	.word	0x20003b60
 801cd18:	20003ba8 	.word	0x20003ba8
 801cd1c:	20003a04 	.word	0x20003a04
 801cd20:	20003a00 	.word	0x20003a00
 801cd24:	20003bb4 	.word	0x20003bb4
 801cd28:	20003bb0 	.word	0x20003bb0
 801cd2c:	e000ed04 	.word	0xe000ed04

0801cd30 <xTaskGetTickCount>:
 801cd30:	b480      	push	{r7}
 801cd32:	b083      	sub	sp, #12
 801cd34:	af00      	add	r7, sp, #0
 801cd36:	4b05      	ldr	r3, [pc, #20]	; (801cd4c <xTaskGetTickCount+0x1c>)
 801cd38:	681b      	ldr	r3, [r3, #0]
 801cd3a:	607b      	str	r3, [r7, #4]
 801cd3c:	687b      	ldr	r3, [r7, #4]
 801cd3e:	4618      	mov	r0, r3
 801cd40:	370c      	adds	r7, #12
 801cd42:	46bd      	mov	sp, r7
 801cd44:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd48:	4770      	bx	lr
 801cd4a:	bf00      	nop
 801cd4c:	20003ba4 	.word	0x20003ba4

0801cd50 <xTaskIncrementTick>:
 801cd50:	b580      	push	{r7, lr}
 801cd52:	b086      	sub	sp, #24
 801cd54:	af00      	add	r7, sp, #0
 801cd56:	2300      	movs	r3, #0
 801cd58:	617b      	str	r3, [r7, #20]
 801cd5a:	4b4e      	ldr	r3, [pc, #312]	; (801ce94 <xTaskIncrementTick+0x144>)
 801cd5c:	681b      	ldr	r3, [r3, #0]
 801cd5e:	2b00      	cmp	r3, #0
 801cd60:	f040 808e 	bne.w	801ce80 <xTaskIncrementTick+0x130>
 801cd64:	4b4c      	ldr	r3, [pc, #304]	; (801ce98 <xTaskIncrementTick+0x148>)
 801cd66:	681b      	ldr	r3, [r3, #0]
 801cd68:	3301      	adds	r3, #1
 801cd6a:	613b      	str	r3, [r7, #16]
 801cd6c:	4a4a      	ldr	r2, [pc, #296]	; (801ce98 <xTaskIncrementTick+0x148>)
 801cd6e:	693b      	ldr	r3, [r7, #16]
 801cd70:	6013      	str	r3, [r2, #0]
 801cd72:	693b      	ldr	r3, [r7, #16]
 801cd74:	2b00      	cmp	r3, #0
 801cd76:	d120      	bne.n	801cdba <xTaskIncrementTick+0x6a>
 801cd78:	4b48      	ldr	r3, [pc, #288]	; (801ce9c <xTaskIncrementTick+0x14c>)
 801cd7a:	681b      	ldr	r3, [r3, #0]
 801cd7c:	681b      	ldr	r3, [r3, #0]
 801cd7e:	2b00      	cmp	r3, #0
 801cd80:	d00a      	beq.n	801cd98 <xTaskIncrementTick+0x48>
 801cd82:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cd86:	f383 8811 	msr	BASEPRI, r3
 801cd8a:	f3bf 8f6f 	isb	sy
 801cd8e:	f3bf 8f4f 	dsb	sy
 801cd92:	603b      	str	r3, [r7, #0]
 801cd94:	bf00      	nop
 801cd96:	e7fe      	b.n	801cd96 <xTaskIncrementTick+0x46>
 801cd98:	4b40      	ldr	r3, [pc, #256]	; (801ce9c <xTaskIncrementTick+0x14c>)
 801cd9a:	681b      	ldr	r3, [r3, #0]
 801cd9c:	60fb      	str	r3, [r7, #12]
 801cd9e:	4b40      	ldr	r3, [pc, #256]	; (801cea0 <xTaskIncrementTick+0x150>)
 801cda0:	681b      	ldr	r3, [r3, #0]
 801cda2:	4a3e      	ldr	r2, [pc, #248]	; (801ce9c <xTaskIncrementTick+0x14c>)
 801cda4:	6013      	str	r3, [r2, #0]
 801cda6:	4a3e      	ldr	r2, [pc, #248]	; (801cea0 <xTaskIncrementTick+0x150>)
 801cda8:	68fb      	ldr	r3, [r7, #12]
 801cdaa:	6013      	str	r3, [r2, #0]
 801cdac:	4b3d      	ldr	r3, [pc, #244]	; (801cea4 <xTaskIncrementTick+0x154>)
 801cdae:	681b      	ldr	r3, [r3, #0]
 801cdb0:	3301      	adds	r3, #1
 801cdb2:	4a3c      	ldr	r2, [pc, #240]	; (801cea4 <xTaskIncrementTick+0x154>)
 801cdb4:	6013      	str	r3, [r2, #0]
 801cdb6:	f000 fb9f 	bl	801d4f8 <prvResetNextTaskUnblockTime>
 801cdba:	4b3b      	ldr	r3, [pc, #236]	; (801cea8 <xTaskIncrementTick+0x158>)
 801cdbc:	681b      	ldr	r3, [r3, #0]
 801cdbe:	693a      	ldr	r2, [r7, #16]
 801cdc0:	429a      	cmp	r2, r3
 801cdc2:	d348      	bcc.n	801ce56 <xTaskIncrementTick+0x106>
 801cdc4:	4b35      	ldr	r3, [pc, #212]	; (801ce9c <xTaskIncrementTick+0x14c>)
 801cdc6:	681b      	ldr	r3, [r3, #0]
 801cdc8:	681b      	ldr	r3, [r3, #0]
 801cdca:	2b00      	cmp	r3, #0
 801cdcc:	d104      	bne.n	801cdd8 <xTaskIncrementTick+0x88>
 801cdce:	4b36      	ldr	r3, [pc, #216]	; (801cea8 <xTaskIncrementTick+0x158>)
 801cdd0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801cdd4:	601a      	str	r2, [r3, #0]
 801cdd6:	e03e      	b.n	801ce56 <xTaskIncrementTick+0x106>
 801cdd8:	4b30      	ldr	r3, [pc, #192]	; (801ce9c <xTaskIncrementTick+0x14c>)
 801cdda:	681b      	ldr	r3, [r3, #0]
 801cddc:	68db      	ldr	r3, [r3, #12]
 801cdde:	68db      	ldr	r3, [r3, #12]
 801cde0:	60bb      	str	r3, [r7, #8]
 801cde2:	68bb      	ldr	r3, [r7, #8]
 801cde4:	685b      	ldr	r3, [r3, #4]
 801cde6:	607b      	str	r3, [r7, #4]
 801cde8:	693a      	ldr	r2, [r7, #16]
 801cdea:	687b      	ldr	r3, [r7, #4]
 801cdec:	429a      	cmp	r2, r3
 801cdee:	d203      	bcs.n	801cdf8 <xTaskIncrementTick+0xa8>
 801cdf0:	4a2d      	ldr	r2, [pc, #180]	; (801cea8 <xTaskIncrementTick+0x158>)
 801cdf2:	687b      	ldr	r3, [r7, #4]
 801cdf4:	6013      	str	r3, [r2, #0]
 801cdf6:	e02e      	b.n	801ce56 <xTaskIncrementTick+0x106>
 801cdf8:	68bb      	ldr	r3, [r7, #8]
 801cdfa:	3304      	adds	r3, #4
 801cdfc:	4618      	mov	r0, r3
 801cdfe:	f7fe fe33 	bl	801ba68 <uxListRemove>
 801ce02:	68bb      	ldr	r3, [r7, #8]
 801ce04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce06:	2b00      	cmp	r3, #0
 801ce08:	d004      	beq.n	801ce14 <xTaskIncrementTick+0xc4>
 801ce0a:	68bb      	ldr	r3, [r7, #8]
 801ce0c:	3318      	adds	r3, #24
 801ce0e:	4618      	mov	r0, r3
 801ce10:	f7fe fe2a 	bl	801ba68 <uxListRemove>
 801ce14:	68bb      	ldr	r3, [r7, #8]
 801ce16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce18:	2201      	movs	r2, #1
 801ce1a:	409a      	lsls	r2, r3
 801ce1c:	4b23      	ldr	r3, [pc, #140]	; (801ceac <xTaskIncrementTick+0x15c>)
 801ce1e:	681b      	ldr	r3, [r3, #0]
 801ce20:	4313      	orrs	r3, r2
 801ce22:	4a22      	ldr	r2, [pc, #136]	; (801ceac <xTaskIncrementTick+0x15c>)
 801ce24:	6013      	str	r3, [r2, #0]
 801ce26:	68bb      	ldr	r3, [r7, #8]
 801ce28:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801ce2a:	4613      	mov	r3, r2
 801ce2c:	009b      	lsls	r3, r3, #2
 801ce2e:	4413      	add	r3, r2
 801ce30:	009b      	lsls	r3, r3, #2
 801ce32:	4a1f      	ldr	r2, [pc, #124]	; (801ceb0 <xTaskIncrementTick+0x160>)
 801ce34:	441a      	add	r2, r3
 801ce36:	68bb      	ldr	r3, [r7, #8]
 801ce38:	3304      	adds	r3, #4
 801ce3a:	4619      	mov	r1, r3
 801ce3c:	4610      	mov	r0, r2
 801ce3e:	f7fe fdb6 	bl	801b9ae <vListInsertEnd>
 801ce42:	68bb      	ldr	r3, [r7, #8]
 801ce44:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801ce46:	4b1b      	ldr	r3, [pc, #108]	; (801ceb4 <xTaskIncrementTick+0x164>)
 801ce48:	681b      	ldr	r3, [r3, #0]
 801ce4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce4c:	429a      	cmp	r2, r3
 801ce4e:	d3b9      	bcc.n	801cdc4 <xTaskIncrementTick+0x74>
 801ce50:	2301      	movs	r3, #1
 801ce52:	617b      	str	r3, [r7, #20]
 801ce54:	e7b6      	b.n	801cdc4 <xTaskIncrementTick+0x74>
 801ce56:	4b17      	ldr	r3, [pc, #92]	; (801ceb4 <xTaskIncrementTick+0x164>)
 801ce58:	681b      	ldr	r3, [r3, #0]
 801ce5a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801ce5c:	4914      	ldr	r1, [pc, #80]	; (801ceb0 <xTaskIncrementTick+0x160>)
 801ce5e:	4613      	mov	r3, r2
 801ce60:	009b      	lsls	r3, r3, #2
 801ce62:	4413      	add	r3, r2
 801ce64:	009b      	lsls	r3, r3, #2
 801ce66:	440b      	add	r3, r1
 801ce68:	681b      	ldr	r3, [r3, #0]
 801ce6a:	2b01      	cmp	r3, #1
 801ce6c:	d901      	bls.n	801ce72 <xTaskIncrementTick+0x122>
 801ce6e:	2301      	movs	r3, #1
 801ce70:	617b      	str	r3, [r7, #20]
 801ce72:	4b11      	ldr	r3, [pc, #68]	; (801ceb8 <xTaskIncrementTick+0x168>)
 801ce74:	681b      	ldr	r3, [r3, #0]
 801ce76:	2b00      	cmp	r3, #0
 801ce78:	d007      	beq.n	801ce8a <xTaskIncrementTick+0x13a>
 801ce7a:	2301      	movs	r3, #1
 801ce7c:	617b      	str	r3, [r7, #20]
 801ce7e:	e004      	b.n	801ce8a <xTaskIncrementTick+0x13a>
 801ce80:	4b0e      	ldr	r3, [pc, #56]	; (801cebc <xTaskIncrementTick+0x16c>)
 801ce82:	681b      	ldr	r3, [r3, #0]
 801ce84:	3301      	adds	r3, #1
 801ce86:	4a0d      	ldr	r2, [pc, #52]	; (801cebc <xTaskIncrementTick+0x16c>)
 801ce88:	6013      	str	r3, [r2, #0]
 801ce8a:	697b      	ldr	r3, [r7, #20]
 801ce8c:	4618      	mov	r0, r3
 801ce8e:	3718      	adds	r7, #24
 801ce90:	46bd      	mov	sp, r7
 801ce92:	bd80      	pop	{r7, pc}
 801ce94:	20003bc8 	.word	0x20003bc8
 801ce98:	20003ba4 	.word	0x20003ba4
 801ce9c:	20003b58 	.word	0x20003b58
 801cea0:	20003b5c 	.word	0x20003b5c
 801cea4:	20003bb8 	.word	0x20003bb8
 801cea8:	20003bc0 	.word	0x20003bc0
 801ceac:	20003ba8 	.word	0x20003ba8
 801ceb0:	20003a04 	.word	0x20003a04
 801ceb4:	20003a00 	.word	0x20003a00
 801ceb8:	20003bb4 	.word	0x20003bb4
 801cebc:	20003bb0 	.word	0x20003bb0

0801cec0 <vTaskSwitchContext>:
 801cec0:	b580      	push	{r7, lr}
 801cec2:	b086      	sub	sp, #24
 801cec4:	af00      	add	r7, sp, #0
 801cec6:	4b3d      	ldr	r3, [pc, #244]	; (801cfbc <vTaskSwitchContext+0xfc>)
 801cec8:	681b      	ldr	r3, [r3, #0]
 801ceca:	2b00      	cmp	r3, #0
 801cecc:	d003      	beq.n	801ced6 <vTaskSwitchContext+0x16>
 801cece:	4b3c      	ldr	r3, [pc, #240]	; (801cfc0 <vTaskSwitchContext+0x100>)
 801ced0:	2201      	movs	r2, #1
 801ced2:	601a      	str	r2, [r3, #0]
 801ced4:	e06e      	b.n	801cfb4 <vTaskSwitchContext+0xf4>
 801ced6:	4b3a      	ldr	r3, [pc, #232]	; (801cfc0 <vTaskSwitchContext+0x100>)
 801ced8:	2200      	movs	r2, #0
 801ceda:	601a      	str	r2, [r3, #0]
 801cedc:	f7e6 f9e1 	bl	80032a2 <getRunTimeCounterValue>
 801cee0:	4603      	mov	r3, r0
 801cee2:	4a38      	ldr	r2, [pc, #224]	; (801cfc4 <vTaskSwitchContext+0x104>)
 801cee4:	6013      	str	r3, [r2, #0]
 801cee6:	4b37      	ldr	r3, [pc, #220]	; (801cfc4 <vTaskSwitchContext+0x104>)
 801cee8:	681a      	ldr	r2, [r3, #0]
 801ceea:	4b37      	ldr	r3, [pc, #220]	; (801cfc8 <vTaskSwitchContext+0x108>)
 801ceec:	681b      	ldr	r3, [r3, #0]
 801ceee:	429a      	cmp	r2, r3
 801cef0:	d909      	bls.n	801cf06 <vTaskSwitchContext+0x46>
 801cef2:	4b36      	ldr	r3, [pc, #216]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cef4:	681b      	ldr	r3, [r3, #0]
 801cef6:	6d59      	ldr	r1, [r3, #84]	; 0x54
 801cef8:	4a32      	ldr	r2, [pc, #200]	; (801cfc4 <vTaskSwitchContext+0x104>)
 801cefa:	6810      	ldr	r0, [r2, #0]
 801cefc:	4a32      	ldr	r2, [pc, #200]	; (801cfc8 <vTaskSwitchContext+0x108>)
 801cefe:	6812      	ldr	r2, [r2, #0]
 801cf00:	1a82      	subs	r2, r0, r2
 801cf02:	440a      	add	r2, r1
 801cf04:	655a      	str	r2, [r3, #84]	; 0x54
 801cf06:	4b2f      	ldr	r3, [pc, #188]	; (801cfc4 <vTaskSwitchContext+0x104>)
 801cf08:	681b      	ldr	r3, [r3, #0]
 801cf0a:	4a2f      	ldr	r2, [pc, #188]	; (801cfc8 <vTaskSwitchContext+0x108>)
 801cf0c:	6013      	str	r3, [r2, #0]
 801cf0e:	4b2f      	ldr	r3, [pc, #188]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cf10:	681b      	ldr	r3, [r3, #0]
 801cf12:	681a      	ldr	r2, [r3, #0]
 801cf14:	4b2d      	ldr	r3, [pc, #180]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cf16:	681b      	ldr	r3, [r3, #0]
 801cf18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf1a:	429a      	cmp	r2, r3
 801cf1c:	d808      	bhi.n	801cf30 <vTaskSwitchContext+0x70>
 801cf1e:	4b2b      	ldr	r3, [pc, #172]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cf20:	681a      	ldr	r2, [r3, #0]
 801cf22:	4b2a      	ldr	r3, [pc, #168]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cf24:	681b      	ldr	r3, [r3, #0]
 801cf26:	3334      	adds	r3, #52	; 0x34
 801cf28:	4619      	mov	r1, r3
 801cf2a:	4610      	mov	r0, r2
 801cf2c:	f7e6 f9c1 	bl	80032b2 <vApplicationStackOverflowHook>
 801cf30:	4b27      	ldr	r3, [pc, #156]	; (801cfd0 <vTaskSwitchContext+0x110>)
 801cf32:	681b      	ldr	r3, [r3, #0]
 801cf34:	60fb      	str	r3, [r7, #12]
 801cf36:	68fb      	ldr	r3, [r7, #12]
 801cf38:	fab3 f383 	clz	r3, r3
 801cf3c:	72fb      	strb	r3, [r7, #11]
 801cf3e:	7afb      	ldrb	r3, [r7, #11]
 801cf40:	f1c3 031f 	rsb	r3, r3, #31
 801cf44:	617b      	str	r3, [r7, #20]
 801cf46:	4923      	ldr	r1, [pc, #140]	; (801cfd4 <vTaskSwitchContext+0x114>)
 801cf48:	697a      	ldr	r2, [r7, #20]
 801cf4a:	4613      	mov	r3, r2
 801cf4c:	009b      	lsls	r3, r3, #2
 801cf4e:	4413      	add	r3, r2
 801cf50:	009b      	lsls	r3, r3, #2
 801cf52:	440b      	add	r3, r1
 801cf54:	681b      	ldr	r3, [r3, #0]
 801cf56:	2b00      	cmp	r3, #0
 801cf58:	d10a      	bne.n	801cf70 <vTaskSwitchContext+0xb0>
 801cf5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cf5e:	f383 8811 	msr	BASEPRI, r3
 801cf62:	f3bf 8f6f 	isb	sy
 801cf66:	f3bf 8f4f 	dsb	sy
 801cf6a:	607b      	str	r3, [r7, #4]
 801cf6c:	bf00      	nop
 801cf6e:	e7fe      	b.n	801cf6e <vTaskSwitchContext+0xae>
 801cf70:	697a      	ldr	r2, [r7, #20]
 801cf72:	4613      	mov	r3, r2
 801cf74:	009b      	lsls	r3, r3, #2
 801cf76:	4413      	add	r3, r2
 801cf78:	009b      	lsls	r3, r3, #2
 801cf7a:	4a16      	ldr	r2, [pc, #88]	; (801cfd4 <vTaskSwitchContext+0x114>)
 801cf7c:	4413      	add	r3, r2
 801cf7e:	613b      	str	r3, [r7, #16]
 801cf80:	693b      	ldr	r3, [r7, #16]
 801cf82:	685b      	ldr	r3, [r3, #4]
 801cf84:	685a      	ldr	r2, [r3, #4]
 801cf86:	693b      	ldr	r3, [r7, #16]
 801cf88:	605a      	str	r2, [r3, #4]
 801cf8a:	693b      	ldr	r3, [r7, #16]
 801cf8c:	685a      	ldr	r2, [r3, #4]
 801cf8e:	693b      	ldr	r3, [r7, #16]
 801cf90:	3308      	adds	r3, #8
 801cf92:	429a      	cmp	r2, r3
 801cf94:	d104      	bne.n	801cfa0 <vTaskSwitchContext+0xe0>
 801cf96:	693b      	ldr	r3, [r7, #16]
 801cf98:	685b      	ldr	r3, [r3, #4]
 801cf9a:	685a      	ldr	r2, [r3, #4]
 801cf9c:	693b      	ldr	r3, [r7, #16]
 801cf9e:	605a      	str	r2, [r3, #4]
 801cfa0:	693b      	ldr	r3, [r7, #16]
 801cfa2:	685b      	ldr	r3, [r3, #4]
 801cfa4:	68db      	ldr	r3, [r3, #12]
 801cfa6:	4a09      	ldr	r2, [pc, #36]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cfa8:	6013      	str	r3, [r2, #0]
 801cfaa:	4b08      	ldr	r3, [pc, #32]	; (801cfcc <vTaskSwitchContext+0x10c>)
 801cfac:	681b      	ldr	r3, [r3, #0]
 801cfae:	3358      	adds	r3, #88	; 0x58
 801cfb0:	4a09      	ldr	r2, [pc, #36]	; (801cfd8 <vTaskSwitchContext+0x118>)
 801cfb2:	6013      	str	r3, [r2, #0]
 801cfb4:	bf00      	nop
 801cfb6:	3718      	adds	r7, #24
 801cfb8:	46bd      	mov	sp, r7
 801cfba:	bd80      	pop	{r7, pc}
 801cfbc:	20003bc8 	.word	0x20003bc8
 801cfc0:	20003bb4 	.word	0x20003bb4
 801cfc4:	20003bd0 	.word	0x20003bd0
 801cfc8:	20003bcc 	.word	0x20003bcc
 801cfcc:	20003a00 	.word	0x20003a00
 801cfd0:	20003ba8 	.word	0x20003ba8
 801cfd4:	20003a04 	.word	0x20003a04
 801cfd8:	20000150 	.word	0x20000150

0801cfdc <vTaskPlaceOnEventList>:
 801cfdc:	b580      	push	{r7, lr}
 801cfde:	b084      	sub	sp, #16
 801cfe0:	af00      	add	r7, sp, #0
 801cfe2:	6078      	str	r0, [r7, #4]
 801cfe4:	6039      	str	r1, [r7, #0]
 801cfe6:	687b      	ldr	r3, [r7, #4]
 801cfe8:	2b00      	cmp	r3, #0
 801cfea:	d10a      	bne.n	801d002 <vTaskPlaceOnEventList+0x26>
 801cfec:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cff0:	f383 8811 	msr	BASEPRI, r3
 801cff4:	f3bf 8f6f 	isb	sy
 801cff8:	f3bf 8f4f 	dsb	sy
 801cffc:	60fb      	str	r3, [r7, #12]
 801cffe:	bf00      	nop
 801d000:	e7fe      	b.n	801d000 <vTaskPlaceOnEventList+0x24>
 801d002:	4b07      	ldr	r3, [pc, #28]	; (801d020 <vTaskPlaceOnEventList+0x44>)
 801d004:	681b      	ldr	r3, [r3, #0]
 801d006:	3318      	adds	r3, #24
 801d008:	4619      	mov	r1, r3
 801d00a:	6878      	ldr	r0, [r7, #4]
 801d00c:	f7fe fcf3 	bl	801b9f6 <vListInsert>
 801d010:	2101      	movs	r1, #1
 801d012:	6838      	ldr	r0, [r7, #0]
 801d014:	f000 fc2c 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801d018:	bf00      	nop
 801d01a:	3710      	adds	r7, #16
 801d01c:	46bd      	mov	sp, r7
 801d01e:	bd80      	pop	{r7, pc}
 801d020:	20003a00 	.word	0x20003a00

0801d024 <vTaskPlaceOnUnorderedEventList>:
 801d024:	b580      	push	{r7, lr}
 801d026:	b086      	sub	sp, #24
 801d028:	af00      	add	r7, sp, #0
 801d02a:	60f8      	str	r0, [r7, #12]
 801d02c:	60b9      	str	r1, [r7, #8]
 801d02e:	607a      	str	r2, [r7, #4]
 801d030:	68fb      	ldr	r3, [r7, #12]
 801d032:	2b00      	cmp	r3, #0
 801d034:	d10a      	bne.n	801d04c <vTaskPlaceOnUnorderedEventList+0x28>
 801d036:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d03a:	f383 8811 	msr	BASEPRI, r3
 801d03e:	f3bf 8f6f 	isb	sy
 801d042:	f3bf 8f4f 	dsb	sy
 801d046:	617b      	str	r3, [r7, #20]
 801d048:	bf00      	nop
 801d04a:	e7fe      	b.n	801d04a <vTaskPlaceOnUnorderedEventList+0x26>
 801d04c:	4b11      	ldr	r3, [pc, #68]	; (801d094 <vTaskPlaceOnUnorderedEventList+0x70>)
 801d04e:	681b      	ldr	r3, [r3, #0]
 801d050:	2b00      	cmp	r3, #0
 801d052:	d10a      	bne.n	801d06a <vTaskPlaceOnUnorderedEventList+0x46>
 801d054:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d058:	f383 8811 	msr	BASEPRI, r3
 801d05c:	f3bf 8f6f 	isb	sy
 801d060:	f3bf 8f4f 	dsb	sy
 801d064:	613b      	str	r3, [r7, #16]
 801d066:	bf00      	nop
 801d068:	e7fe      	b.n	801d068 <vTaskPlaceOnUnorderedEventList+0x44>
 801d06a:	4b0b      	ldr	r3, [pc, #44]	; (801d098 <vTaskPlaceOnUnorderedEventList+0x74>)
 801d06c:	681b      	ldr	r3, [r3, #0]
 801d06e:	68ba      	ldr	r2, [r7, #8]
 801d070:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 801d074:	619a      	str	r2, [r3, #24]
 801d076:	4b08      	ldr	r3, [pc, #32]	; (801d098 <vTaskPlaceOnUnorderedEventList+0x74>)
 801d078:	681b      	ldr	r3, [r3, #0]
 801d07a:	3318      	adds	r3, #24
 801d07c:	4619      	mov	r1, r3
 801d07e:	68f8      	ldr	r0, [r7, #12]
 801d080:	f7fe fc95 	bl	801b9ae <vListInsertEnd>
 801d084:	2101      	movs	r1, #1
 801d086:	6878      	ldr	r0, [r7, #4]
 801d088:	f000 fbf2 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801d08c:	bf00      	nop
 801d08e:	3718      	adds	r7, #24
 801d090:	46bd      	mov	sp, r7
 801d092:	bd80      	pop	{r7, pc}
 801d094:	20003bc8 	.word	0x20003bc8
 801d098:	20003a00 	.word	0x20003a00

0801d09c <vTaskPlaceOnEventListRestricted>:
 801d09c:	b580      	push	{r7, lr}
 801d09e:	b086      	sub	sp, #24
 801d0a0:	af00      	add	r7, sp, #0
 801d0a2:	60f8      	str	r0, [r7, #12]
 801d0a4:	60b9      	str	r1, [r7, #8]
 801d0a6:	607a      	str	r2, [r7, #4]
 801d0a8:	68fb      	ldr	r3, [r7, #12]
 801d0aa:	2b00      	cmp	r3, #0
 801d0ac:	d10a      	bne.n	801d0c4 <vTaskPlaceOnEventListRestricted+0x28>
 801d0ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d0b2:	f383 8811 	msr	BASEPRI, r3
 801d0b6:	f3bf 8f6f 	isb	sy
 801d0ba:	f3bf 8f4f 	dsb	sy
 801d0be:	617b      	str	r3, [r7, #20]
 801d0c0:	bf00      	nop
 801d0c2:	e7fe      	b.n	801d0c2 <vTaskPlaceOnEventListRestricted+0x26>
 801d0c4:	4b0a      	ldr	r3, [pc, #40]	; (801d0f0 <vTaskPlaceOnEventListRestricted+0x54>)
 801d0c6:	681b      	ldr	r3, [r3, #0]
 801d0c8:	3318      	adds	r3, #24
 801d0ca:	4619      	mov	r1, r3
 801d0cc:	68f8      	ldr	r0, [r7, #12]
 801d0ce:	f7fe fc6e 	bl	801b9ae <vListInsertEnd>
 801d0d2:	687b      	ldr	r3, [r7, #4]
 801d0d4:	2b00      	cmp	r3, #0
 801d0d6:	d002      	beq.n	801d0de <vTaskPlaceOnEventListRestricted+0x42>
 801d0d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801d0dc:	60bb      	str	r3, [r7, #8]
 801d0de:	6879      	ldr	r1, [r7, #4]
 801d0e0:	68b8      	ldr	r0, [r7, #8]
 801d0e2:	f000 fbc5 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801d0e6:	bf00      	nop
 801d0e8:	3718      	adds	r7, #24
 801d0ea:	46bd      	mov	sp, r7
 801d0ec:	bd80      	pop	{r7, pc}
 801d0ee:	bf00      	nop
 801d0f0:	20003a00 	.word	0x20003a00

0801d0f4 <xTaskRemoveFromEventList>:
 801d0f4:	b580      	push	{r7, lr}
 801d0f6:	b086      	sub	sp, #24
 801d0f8:	af00      	add	r7, sp, #0
 801d0fa:	6078      	str	r0, [r7, #4]
 801d0fc:	687b      	ldr	r3, [r7, #4]
 801d0fe:	68db      	ldr	r3, [r3, #12]
 801d100:	68db      	ldr	r3, [r3, #12]
 801d102:	613b      	str	r3, [r7, #16]
 801d104:	693b      	ldr	r3, [r7, #16]
 801d106:	2b00      	cmp	r3, #0
 801d108:	d10a      	bne.n	801d120 <xTaskRemoveFromEventList+0x2c>
 801d10a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d10e:	f383 8811 	msr	BASEPRI, r3
 801d112:	f3bf 8f6f 	isb	sy
 801d116:	f3bf 8f4f 	dsb	sy
 801d11a:	60fb      	str	r3, [r7, #12]
 801d11c:	bf00      	nop
 801d11e:	e7fe      	b.n	801d11e <xTaskRemoveFromEventList+0x2a>
 801d120:	693b      	ldr	r3, [r7, #16]
 801d122:	3318      	adds	r3, #24
 801d124:	4618      	mov	r0, r3
 801d126:	f7fe fc9f 	bl	801ba68 <uxListRemove>
 801d12a:	4b1d      	ldr	r3, [pc, #116]	; (801d1a0 <xTaskRemoveFromEventList+0xac>)
 801d12c:	681b      	ldr	r3, [r3, #0]
 801d12e:	2b00      	cmp	r3, #0
 801d130:	d11c      	bne.n	801d16c <xTaskRemoveFromEventList+0x78>
 801d132:	693b      	ldr	r3, [r7, #16]
 801d134:	3304      	adds	r3, #4
 801d136:	4618      	mov	r0, r3
 801d138:	f7fe fc96 	bl	801ba68 <uxListRemove>
 801d13c:	693b      	ldr	r3, [r7, #16]
 801d13e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d140:	2201      	movs	r2, #1
 801d142:	409a      	lsls	r2, r3
 801d144:	4b17      	ldr	r3, [pc, #92]	; (801d1a4 <xTaskRemoveFromEventList+0xb0>)
 801d146:	681b      	ldr	r3, [r3, #0]
 801d148:	4313      	orrs	r3, r2
 801d14a:	4a16      	ldr	r2, [pc, #88]	; (801d1a4 <xTaskRemoveFromEventList+0xb0>)
 801d14c:	6013      	str	r3, [r2, #0]
 801d14e:	693b      	ldr	r3, [r7, #16]
 801d150:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d152:	4613      	mov	r3, r2
 801d154:	009b      	lsls	r3, r3, #2
 801d156:	4413      	add	r3, r2
 801d158:	009b      	lsls	r3, r3, #2
 801d15a:	4a13      	ldr	r2, [pc, #76]	; (801d1a8 <xTaskRemoveFromEventList+0xb4>)
 801d15c:	441a      	add	r2, r3
 801d15e:	693b      	ldr	r3, [r7, #16]
 801d160:	3304      	adds	r3, #4
 801d162:	4619      	mov	r1, r3
 801d164:	4610      	mov	r0, r2
 801d166:	f7fe fc22 	bl	801b9ae <vListInsertEnd>
 801d16a:	e005      	b.n	801d178 <xTaskRemoveFromEventList+0x84>
 801d16c:	693b      	ldr	r3, [r7, #16]
 801d16e:	3318      	adds	r3, #24
 801d170:	4619      	mov	r1, r3
 801d172:	480e      	ldr	r0, [pc, #56]	; (801d1ac <xTaskRemoveFromEventList+0xb8>)
 801d174:	f7fe fc1b 	bl	801b9ae <vListInsertEnd>
 801d178:	693b      	ldr	r3, [r7, #16]
 801d17a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d17c:	4b0c      	ldr	r3, [pc, #48]	; (801d1b0 <xTaskRemoveFromEventList+0xbc>)
 801d17e:	681b      	ldr	r3, [r3, #0]
 801d180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d182:	429a      	cmp	r2, r3
 801d184:	d905      	bls.n	801d192 <xTaskRemoveFromEventList+0x9e>
 801d186:	2301      	movs	r3, #1
 801d188:	617b      	str	r3, [r7, #20]
 801d18a:	4b0a      	ldr	r3, [pc, #40]	; (801d1b4 <xTaskRemoveFromEventList+0xc0>)
 801d18c:	2201      	movs	r2, #1
 801d18e:	601a      	str	r2, [r3, #0]
 801d190:	e001      	b.n	801d196 <xTaskRemoveFromEventList+0xa2>
 801d192:	2300      	movs	r3, #0
 801d194:	617b      	str	r3, [r7, #20]
 801d196:	697b      	ldr	r3, [r7, #20]
 801d198:	4618      	mov	r0, r3
 801d19a:	3718      	adds	r7, #24
 801d19c:	46bd      	mov	sp, r7
 801d19e:	bd80      	pop	{r7, pc}
 801d1a0:	20003bc8 	.word	0x20003bc8
 801d1a4:	20003ba8 	.word	0x20003ba8
 801d1a8:	20003a04 	.word	0x20003a04
 801d1ac:	20003b60 	.word	0x20003b60
 801d1b0:	20003a00 	.word	0x20003a00
 801d1b4:	20003bb4 	.word	0x20003bb4

0801d1b8 <vTaskRemoveFromUnorderedEventList>:
 801d1b8:	b580      	push	{r7, lr}
 801d1ba:	b086      	sub	sp, #24
 801d1bc:	af00      	add	r7, sp, #0
 801d1be:	6078      	str	r0, [r7, #4]
 801d1c0:	6039      	str	r1, [r7, #0]
 801d1c2:	4b29      	ldr	r3, [pc, #164]	; (801d268 <vTaskRemoveFromUnorderedEventList+0xb0>)
 801d1c4:	681b      	ldr	r3, [r3, #0]
 801d1c6:	2b00      	cmp	r3, #0
 801d1c8:	d10a      	bne.n	801d1e0 <vTaskRemoveFromUnorderedEventList+0x28>
 801d1ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d1ce:	f383 8811 	msr	BASEPRI, r3
 801d1d2:	f3bf 8f6f 	isb	sy
 801d1d6:	f3bf 8f4f 	dsb	sy
 801d1da:	613b      	str	r3, [r7, #16]
 801d1dc:	bf00      	nop
 801d1de:	e7fe      	b.n	801d1de <vTaskRemoveFromUnorderedEventList+0x26>
 801d1e0:	683b      	ldr	r3, [r7, #0]
 801d1e2:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 801d1e6:	687b      	ldr	r3, [r7, #4]
 801d1e8:	601a      	str	r2, [r3, #0]
 801d1ea:	687b      	ldr	r3, [r7, #4]
 801d1ec:	68db      	ldr	r3, [r3, #12]
 801d1ee:	617b      	str	r3, [r7, #20]
 801d1f0:	697b      	ldr	r3, [r7, #20]
 801d1f2:	2b00      	cmp	r3, #0
 801d1f4:	d10a      	bne.n	801d20c <vTaskRemoveFromUnorderedEventList+0x54>
 801d1f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d1fa:	f383 8811 	msr	BASEPRI, r3
 801d1fe:	f3bf 8f6f 	isb	sy
 801d202:	f3bf 8f4f 	dsb	sy
 801d206:	60fb      	str	r3, [r7, #12]
 801d208:	bf00      	nop
 801d20a:	e7fe      	b.n	801d20a <vTaskRemoveFromUnorderedEventList+0x52>
 801d20c:	6878      	ldr	r0, [r7, #4]
 801d20e:	f7fe fc2b 	bl	801ba68 <uxListRemove>
 801d212:	697b      	ldr	r3, [r7, #20]
 801d214:	3304      	adds	r3, #4
 801d216:	4618      	mov	r0, r3
 801d218:	f7fe fc26 	bl	801ba68 <uxListRemove>
 801d21c:	697b      	ldr	r3, [r7, #20]
 801d21e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d220:	2201      	movs	r2, #1
 801d222:	409a      	lsls	r2, r3
 801d224:	4b11      	ldr	r3, [pc, #68]	; (801d26c <vTaskRemoveFromUnorderedEventList+0xb4>)
 801d226:	681b      	ldr	r3, [r3, #0]
 801d228:	4313      	orrs	r3, r2
 801d22a:	4a10      	ldr	r2, [pc, #64]	; (801d26c <vTaskRemoveFromUnorderedEventList+0xb4>)
 801d22c:	6013      	str	r3, [r2, #0]
 801d22e:	697b      	ldr	r3, [r7, #20]
 801d230:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d232:	4613      	mov	r3, r2
 801d234:	009b      	lsls	r3, r3, #2
 801d236:	4413      	add	r3, r2
 801d238:	009b      	lsls	r3, r3, #2
 801d23a:	4a0d      	ldr	r2, [pc, #52]	; (801d270 <vTaskRemoveFromUnorderedEventList+0xb8>)
 801d23c:	441a      	add	r2, r3
 801d23e:	697b      	ldr	r3, [r7, #20]
 801d240:	3304      	adds	r3, #4
 801d242:	4619      	mov	r1, r3
 801d244:	4610      	mov	r0, r2
 801d246:	f7fe fbb2 	bl	801b9ae <vListInsertEnd>
 801d24a:	697b      	ldr	r3, [r7, #20]
 801d24c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d24e:	4b09      	ldr	r3, [pc, #36]	; (801d274 <vTaskRemoveFromUnorderedEventList+0xbc>)
 801d250:	681b      	ldr	r3, [r3, #0]
 801d252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d254:	429a      	cmp	r2, r3
 801d256:	d902      	bls.n	801d25e <vTaskRemoveFromUnorderedEventList+0xa6>
 801d258:	4b07      	ldr	r3, [pc, #28]	; (801d278 <vTaskRemoveFromUnorderedEventList+0xc0>)
 801d25a:	2201      	movs	r2, #1
 801d25c:	601a      	str	r2, [r3, #0]
 801d25e:	bf00      	nop
 801d260:	3718      	adds	r7, #24
 801d262:	46bd      	mov	sp, r7
 801d264:	bd80      	pop	{r7, pc}
 801d266:	bf00      	nop
 801d268:	20003bc8 	.word	0x20003bc8
 801d26c:	20003ba8 	.word	0x20003ba8
 801d270:	20003a04 	.word	0x20003a04
 801d274:	20003a00 	.word	0x20003a00
 801d278:	20003bb4 	.word	0x20003bb4

0801d27c <vTaskInternalSetTimeOutState>:
 801d27c:	b480      	push	{r7}
 801d27e:	b083      	sub	sp, #12
 801d280:	af00      	add	r7, sp, #0
 801d282:	6078      	str	r0, [r7, #4]
 801d284:	4b06      	ldr	r3, [pc, #24]	; (801d2a0 <vTaskInternalSetTimeOutState+0x24>)
 801d286:	681a      	ldr	r2, [r3, #0]
 801d288:	687b      	ldr	r3, [r7, #4]
 801d28a:	601a      	str	r2, [r3, #0]
 801d28c:	4b05      	ldr	r3, [pc, #20]	; (801d2a4 <vTaskInternalSetTimeOutState+0x28>)
 801d28e:	681a      	ldr	r2, [r3, #0]
 801d290:	687b      	ldr	r3, [r7, #4]
 801d292:	605a      	str	r2, [r3, #4]
 801d294:	bf00      	nop
 801d296:	370c      	adds	r7, #12
 801d298:	46bd      	mov	sp, r7
 801d29a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d29e:	4770      	bx	lr
 801d2a0:	20003bb8 	.word	0x20003bb8
 801d2a4:	20003ba4 	.word	0x20003ba4

0801d2a8 <xTaskCheckForTimeOut>:
 801d2a8:	b580      	push	{r7, lr}
 801d2aa:	b088      	sub	sp, #32
 801d2ac:	af00      	add	r7, sp, #0
 801d2ae:	6078      	str	r0, [r7, #4]
 801d2b0:	6039      	str	r1, [r7, #0]
 801d2b2:	687b      	ldr	r3, [r7, #4]
 801d2b4:	2b00      	cmp	r3, #0
 801d2b6:	d10a      	bne.n	801d2ce <xTaskCheckForTimeOut+0x26>
 801d2b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d2bc:	f383 8811 	msr	BASEPRI, r3
 801d2c0:	f3bf 8f6f 	isb	sy
 801d2c4:	f3bf 8f4f 	dsb	sy
 801d2c8:	613b      	str	r3, [r7, #16]
 801d2ca:	bf00      	nop
 801d2cc:	e7fe      	b.n	801d2cc <xTaskCheckForTimeOut+0x24>
 801d2ce:	683b      	ldr	r3, [r7, #0]
 801d2d0:	2b00      	cmp	r3, #0
 801d2d2:	d10a      	bne.n	801d2ea <xTaskCheckForTimeOut+0x42>
 801d2d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d2d8:	f383 8811 	msr	BASEPRI, r3
 801d2dc:	f3bf 8f6f 	isb	sy
 801d2e0:	f3bf 8f4f 	dsb	sy
 801d2e4:	60fb      	str	r3, [r7, #12]
 801d2e6:	bf00      	nop
 801d2e8:	e7fe      	b.n	801d2e8 <xTaskCheckForTimeOut+0x40>
 801d2ea:	f000 ffc3 	bl	801e274 <vPortEnterCritical>
 801d2ee:	4b1d      	ldr	r3, [pc, #116]	; (801d364 <xTaskCheckForTimeOut+0xbc>)
 801d2f0:	681b      	ldr	r3, [r3, #0]
 801d2f2:	61bb      	str	r3, [r7, #24]
 801d2f4:	687b      	ldr	r3, [r7, #4]
 801d2f6:	685b      	ldr	r3, [r3, #4]
 801d2f8:	69ba      	ldr	r2, [r7, #24]
 801d2fa:	1ad3      	subs	r3, r2, r3
 801d2fc:	617b      	str	r3, [r7, #20]
 801d2fe:	683b      	ldr	r3, [r7, #0]
 801d300:	681b      	ldr	r3, [r3, #0]
 801d302:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801d306:	d102      	bne.n	801d30e <xTaskCheckForTimeOut+0x66>
 801d308:	2300      	movs	r3, #0
 801d30a:	61fb      	str	r3, [r7, #28]
 801d30c:	e023      	b.n	801d356 <xTaskCheckForTimeOut+0xae>
 801d30e:	687b      	ldr	r3, [r7, #4]
 801d310:	681a      	ldr	r2, [r3, #0]
 801d312:	4b15      	ldr	r3, [pc, #84]	; (801d368 <xTaskCheckForTimeOut+0xc0>)
 801d314:	681b      	ldr	r3, [r3, #0]
 801d316:	429a      	cmp	r2, r3
 801d318:	d007      	beq.n	801d32a <xTaskCheckForTimeOut+0x82>
 801d31a:	687b      	ldr	r3, [r7, #4]
 801d31c:	685b      	ldr	r3, [r3, #4]
 801d31e:	69ba      	ldr	r2, [r7, #24]
 801d320:	429a      	cmp	r2, r3
 801d322:	d302      	bcc.n	801d32a <xTaskCheckForTimeOut+0x82>
 801d324:	2301      	movs	r3, #1
 801d326:	61fb      	str	r3, [r7, #28]
 801d328:	e015      	b.n	801d356 <xTaskCheckForTimeOut+0xae>
 801d32a:	683b      	ldr	r3, [r7, #0]
 801d32c:	681b      	ldr	r3, [r3, #0]
 801d32e:	697a      	ldr	r2, [r7, #20]
 801d330:	429a      	cmp	r2, r3
 801d332:	d20b      	bcs.n	801d34c <xTaskCheckForTimeOut+0xa4>
 801d334:	683b      	ldr	r3, [r7, #0]
 801d336:	681a      	ldr	r2, [r3, #0]
 801d338:	697b      	ldr	r3, [r7, #20]
 801d33a:	1ad2      	subs	r2, r2, r3
 801d33c:	683b      	ldr	r3, [r7, #0]
 801d33e:	601a      	str	r2, [r3, #0]
 801d340:	6878      	ldr	r0, [r7, #4]
 801d342:	f7ff ff9b 	bl	801d27c <vTaskInternalSetTimeOutState>
 801d346:	2300      	movs	r3, #0
 801d348:	61fb      	str	r3, [r7, #28]
 801d34a:	e004      	b.n	801d356 <xTaskCheckForTimeOut+0xae>
 801d34c:	683b      	ldr	r3, [r7, #0]
 801d34e:	2200      	movs	r2, #0
 801d350:	601a      	str	r2, [r3, #0]
 801d352:	2301      	movs	r3, #1
 801d354:	61fb      	str	r3, [r7, #28]
 801d356:	f000 ffbd 	bl	801e2d4 <vPortExitCritical>
 801d35a:	69fb      	ldr	r3, [r7, #28]
 801d35c:	4618      	mov	r0, r3
 801d35e:	3720      	adds	r7, #32
 801d360:	46bd      	mov	sp, r7
 801d362:	bd80      	pop	{r7, pc}
 801d364:	20003ba4 	.word	0x20003ba4
 801d368:	20003bb8 	.word	0x20003bb8

0801d36c <vTaskMissedYield>:
 801d36c:	b480      	push	{r7}
 801d36e:	af00      	add	r7, sp, #0
 801d370:	4b03      	ldr	r3, [pc, #12]	; (801d380 <vTaskMissedYield+0x14>)
 801d372:	2201      	movs	r2, #1
 801d374:	601a      	str	r2, [r3, #0]
 801d376:	bf00      	nop
 801d378:	46bd      	mov	sp, r7
 801d37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d37e:	4770      	bx	lr
 801d380:	20003bb4 	.word	0x20003bb4

0801d384 <prvIdleTask>:
 801d384:	b580      	push	{r7, lr}
 801d386:	b082      	sub	sp, #8
 801d388:	af00      	add	r7, sp, #0
 801d38a:	6078      	str	r0, [r7, #4]
 801d38c:	f000 f852 	bl	801d434 <prvCheckTasksWaitingTermination>
 801d390:	4b06      	ldr	r3, [pc, #24]	; (801d3ac <prvIdleTask+0x28>)
 801d392:	681b      	ldr	r3, [r3, #0]
 801d394:	2b01      	cmp	r3, #1
 801d396:	d9f9      	bls.n	801d38c <prvIdleTask+0x8>
 801d398:	4b05      	ldr	r3, [pc, #20]	; (801d3b0 <prvIdleTask+0x2c>)
 801d39a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801d39e:	601a      	str	r2, [r3, #0]
 801d3a0:	f3bf 8f4f 	dsb	sy
 801d3a4:	f3bf 8f6f 	isb	sy
 801d3a8:	e7f0      	b.n	801d38c <prvIdleTask+0x8>
 801d3aa:	bf00      	nop
 801d3ac:	20003a04 	.word	0x20003a04
 801d3b0:	e000ed04 	.word	0xe000ed04

0801d3b4 <prvInitialiseTaskLists>:
 801d3b4:	b580      	push	{r7, lr}
 801d3b6:	b082      	sub	sp, #8
 801d3b8:	af00      	add	r7, sp, #0
 801d3ba:	2300      	movs	r3, #0
 801d3bc:	607b      	str	r3, [r7, #4]
 801d3be:	e00c      	b.n	801d3da <prvInitialiseTaskLists+0x26>
 801d3c0:	687a      	ldr	r2, [r7, #4]
 801d3c2:	4613      	mov	r3, r2
 801d3c4:	009b      	lsls	r3, r3, #2
 801d3c6:	4413      	add	r3, r2
 801d3c8:	009b      	lsls	r3, r3, #2
 801d3ca:	4a12      	ldr	r2, [pc, #72]	; (801d414 <prvInitialiseTaskLists+0x60>)
 801d3cc:	4413      	add	r3, r2
 801d3ce:	4618      	mov	r0, r3
 801d3d0:	f7fe fac0 	bl	801b954 <vListInitialise>
 801d3d4:	687b      	ldr	r3, [r7, #4]
 801d3d6:	3301      	adds	r3, #1
 801d3d8:	607b      	str	r3, [r7, #4]
 801d3da:	687b      	ldr	r3, [r7, #4]
 801d3dc:	2b0e      	cmp	r3, #14
 801d3de:	d9ef      	bls.n	801d3c0 <prvInitialiseTaskLists+0xc>
 801d3e0:	480d      	ldr	r0, [pc, #52]	; (801d418 <prvInitialiseTaskLists+0x64>)
 801d3e2:	f7fe fab7 	bl	801b954 <vListInitialise>
 801d3e6:	480d      	ldr	r0, [pc, #52]	; (801d41c <prvInitialiseTaskLists+0x68>)
 801d3e8:	f7fe fab4 	bl	801b954 <vListInitialise>
 801d3ec:	480c      	ldr	r0, [pc, #48]	; (801d420 <prvInitialiseTaskLists+0x6c>)
 801d3ee:	f7fe fab1 	bl	801b954 <vListInitialise>
 801d3f2:	480c      	ldr	r0, [pc, #48]	; (801d424 <prvInitialiseTaskLists+0x70>)
 801d3f4:	f7fe faae 	bl	801b954 <vListInitialise>
 801d3f8:	480b      	ldr	r0, [pc, #44]	; (801d428 <prvInitialiseTaskLists+0x74>)
 801d3fa:	f7fe faab 	bl	801b954 <vListInitialise>
 801d3fe:	4b0b      	ldr	r3, [pc, #44]	; (801d42c <prvInitialiseTaskLists+0x78>)
 801d400:	4a05      	ldr	r2, [pc, #20]	; (801d418 <prvInitialiseTaskLists+0x64>)
 801d402:	601a      	str	r2, [r3, #0]
 801d404:	4b0a      	ldr	r3, [pc, #40]	; (801d430 <prvInitialiseTaskLists+0x7c>)
 801d406:	4a05      	ldr	r2, [pc, #20]	; (801d41c <prvInitialiseTaskLists+0x68>)
 801d408:	601a      	str	r2, [r3, #0]
 801d40a:	bf00      	nop
 801d40c:	3708      	adds	r7, #8
 801d40e:	46bd      	mov	sp, r7
 801d410:	bd80      	pop	{r7, pc}
 801d412:	bf00      	nop
 801d414:	20003a04 	.word	0x20003a04
 801d418:	20003b30 	.word	0x20003b30
 801d41c:	20003b44 	.word	0x20003b44
 801d420:	20003b60 	.word	0x20003b60
 801d424:	20003b74 	.word	0x20003b74
 801d428:	20003b8c 	.word	0x20003b8c
 801d42c:	20003b58 	.word	0x20003b58
 801d430:	20003b5c 	.word	0x20003b5c

0801d434 <prvCheckTasksWaitingTermination>:
 801d434:	b580      	push	{r7, lr}
 801d436:	b082      	sub	sp, #8
 801d438:	af00      	add	r7, sp, #0
 801d43a:	e019      	b.n	801d470 <prvCheckTasksWaitingTermination+0x3c>
 801d43c:	f000 ff1a 	bl	801e274 <vPortEnterCritical>
 801d440:	4b10      	ldr	r3, [pc, #64]	; (801d484 <prvCheckTasksWaitingTermination+0x50>)
 801d442:	68db      	ldr	r3, [r3, #12]
 801d444:	68db      	ldr	r3, [r3, #12]
 801d446:	607b      	str	r3, [r7, #4]
 801d448:	687b      	ldr	r3, [r7, #4]
 801d44a:	3304      	adds	r3, #4
 801d44c:	4618      	mov	r0, r3
 801d44e:	f7fe fb0b 	bl	801ba68 <uxListRemove>
 801d452:	4b0d      	ldr	r3, [pc, #52]	; (801d488 <prvCheckTasksWaitingTermination+0x54>)
 801d454:	681b      	ldr	r3, [r3, #0]
 801d456:	3b01      	subs	r3, #1
 801d458:	4a0b      	ldr	r2, [pc, #44]	; (801d488 <prvCheckTasksWaitingTermination+0x54>)
 801d45a:	6013      	str	r3, [r2, #0]
 801d45c:	4b0b      	ldr	r3, [pc, #44]	; (801d48c <prvCheckTasksWaitingTermination+0x58>)
 801d45e:	681b      	ldr	r3, [r3, #0]
 801d460:	3b01      	subs	r3, #1
 801d462:	4a0a      	ldr	r2, [pc, #40]	; (801d48c <prvCheckTasksWaitingTermination+0x58>)
 801d464:	6013      	str	r3, [r2, #0]
 801d466:	f000 ff35 	bl	801e2d4 <vPortExitCritical>
 801d46a:	6878      	ldr	r0, [r7, #4]
 801d46c:	f000 f810 	bl	801d490 <prvDeleteTCB>
 801d470:	4b06      	ldr	r3, [pc, #24]	; (801d48c <prvCheckTasksWaitingTermination+0x58>)
 801d472:	681b      	ldr	r3, [r3, #0]
 801d474:	2b00      	cmp	r3, #0
 801d476:	d1e1      	bne.n	801d43c <prvCheckTasksWaitingTermination+0x8>
 801d478:	bf00      	nop
 801d47a:	bf00      	nop
 801d47c:	3708      	adds	r7, #8
 801d47e:	46bd      	mov	sp, r7
 801d480:	bd80      	pop	{r7, pc}
 801d482:	bf00      	nop
 801d484:	20003b74 	.word	0x20003b74
 801d488:	20003ba0 	.word	0x20003ba0
 801d48c:	20003b88 	.word	0x20003b88

0801d490 <prvDeleteTCB>:
 801d490:	b580      	push	{r7, lr}
 801d492:	b084      	sub	sp, #16
 801d494:	af00      	add	r7, sp, #0
 801d496:	6078      	str	r0, [r7, #4]
 801d498:	687b      	ldr	r3, [r7, #4]
 801d49a:	3358      	adds	r3, #88	; 0x58
 801d49c:	4618      	mov	r0, r3
 801d49e:	f002 ff8d 	bl	80203bc <_reclaim_reent>
 801d4a2:	687b      	ldr	r3, [r7, #4]
 801d4a4:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d4a8:	2b00      	cmp	r3, #0
 801d4aa:	d108      	bne.n	801d4be <prvDeleteTCB+0x2e>
 801d4ac:	687b      	ldr	r3, [r7, #4]
 801d4ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d4b0:	4618      	mov	r0, r3
 801d4b2:	f001 f8cd 	bl	801e650 <vPortFree>
 801d4b6:	6878      	ldr	r0, [r7, #4]
 801d4b8:	f001 f8ca 	bl	801e650 <vPortFree>
 801d4bc:	e018      	b.n	801d4f0 <prvDeleteTCB+0x60>
 801d4be:	687b      	ldr	r3, [r7, #4]
 801d4c0:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d4c4:	2b01      	cmp	r3, #1
 801d4c6:	d103      	bne.n	801d4d0 <prvDeleteTCB+0x40>
 801d4c8:	6878      	ldr	r0, [r7, #4]
 801d4ca:	f001 f8c1 	bl	801e650 <vPortFree>
 801d4ce:	e00f      	b.n	801d4f0 <prvDeleteTCB+0x60>
 801d4d0:	687b      	ldr	r3, [r7, #4]
 801d4d2:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d4d6:	2b02      	cmp	r3, #2
 801d4d8:	d00a      	beq.n	801d4f0 <prvDeleteTCB+0x60>
 801d4da:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d4de:	f383 8811 	msr	BASEPRI, r3
 801d4e2:	f3bf 8f6f 	isb	sy
 801d4e6:	f3bf 8f4f 	dsb	sy
 801d4ea:	60fb      	str	r3, [r7, #12]
 801d4ec:	bf00      	nop
 801d4ee:	e7fe      	b.n	801d4ee <prvDeleteTCB+0x5e>
 801d4f0:	bf00      	nop
 801d4f2:	3710      	adds	r7, #16
 801d4f4:	46bd      	mov	sp, r7
 801d4f6:	bd80      	pop	{r7, pc}

0801d4f8 <prvResetNextTaskUnblockTime>:
 801d4f8:	b480      	push	{r7}
 801d4fa:	b083      	sub	sp, #12
 801d4fc:	af00      	add	r7, sp, #0
 801d4fe:	4b0c      	ldr	r3, [pc, #48]	; (801d530 <prvResetNextTaskUnblockTime+0x38>)
 801d500:	681b      	ldr	r3, [r3, #0]
 801d502:	681b      	ldr	r3, [r3, #0]
 801d504:	2b00      	cmp	r3, #0
 801d506:	d104      	bne.n	801d512 <prvResetNextTaskUnblockTime+0x1a>
 801d508:	4b0a      	ldr	r3, [pc, #40]	; (801d534 <prvResetNextTaskUnblockTime+0x3c>)
 801d50a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801d50e:	601a      	str	r2, [r3, #0]
 801d510:	e008      	b.n	801d524 <prvResetNextTaskUnblockTime+0x2c>
 801d512:	4b07      	ldr	r3, [pc, #28]	; (801d530 <prvResetNextTaskUnblockTime+0x38>)
 801d514:	681b      	ldr	r3, [r3, #0]
 801d516:	68db      	ldr	r3, [r3, #12]
 801d518:	68db      	ldr	r3, [r3, #12]
 801d51a:	607b      	str	r3, [r7, #4]
 801d51c:	687b      	ldr	r3, [r7, #4]
 801d51e:	685b      	ldr	r3, [r3, #4]
 801d520:	4a04      	ldr	r2, [pc, #16]	; (801d534 <prvResetNextTaskUnblockTime+0x3c>)
 801d522:	6013      	str	r3, [r2, #0]
 801d524:	bf00      	nop
 801d526:	370c      	adds	r7, #12
 801d528:	46bd      	mov	sp, r7
 801d52a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d52e:	4770      	bx	lr
 801d530:	20003b58 	.word	0x20003b58
 801d534:	20003bc0 	.word	0x20003bc0

0801d538 <xTaskGetSchedulerState>:
 801d538:	b480      	push	{r7}
 801d53a:	b083      	sub	sp, #12
 801d53c:	af00      	add	r7, sp, #0
 801d53e:	4b0b      	ldr	r3, [pc, #44]	; (801d56c <xTaskGetSchedulerState+0x34>)
 801d540:	681b      	ldr	r3, [r3, #0]
 801d542:	2b00      	cmp	r3, #0
 801d544:	d102      	bne.n	801d54c <xTaskGetSchedulerState+0x14>
 801d546:	2301      	movs	r3, #1
 801d548:	607b      	str	r3, [r7, #4]
 801d54a:	e008      	b.n	801d55e <xTaskGetSchedulerState+0x26>
 801d54c:	4b08      	ldr	r3, [pc, #32]	; (801d570 <xTaskGetSchedulerState+0x38>)
 801d54e:	681b      	ldr	r3, [r3, #0]
 801d550:	2b00      	cmp	r3, #0
 801d552:	d102      	bne.n	801d55a <xTaskGetSchedulerState+0x22>
 801d554:	2302      	movs	r3, #2
 801d556:	607b      	str	r3, [r7, #4]
 801d558:	e001      	b.n	801d55e <xTaskGetSchedulerState+0x26>
 801d55a:	2300      	movs	r3, #0
 801d55c:	607b      	str	r3, [r7, #4]
 801d55e:	687b      	ldr	r3, [r7, #4]
 801d560:	4618      	mov	r0, r3
 801d562:	370c      	adds	r7, #12
 801d564:	46bd      	mov	sp, r7
 801d566:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d56a:	4770      	bx	lr
 801d56c:	20003bac 	.word	0x20003bac
 801d570:	20003bc8 	.word	0x20003bc8

0801d574 <xTaskPriorityDisinherit>:
 801d574:	b580      	push	{r7, lr}
 801d576:	b086      	sub	sp, #24
 801d578:	af00      	add	r7, sp, #0
 801d57a:	6078      	str	r0, [r7, #4]
 801d57c:	687b      	ldr	r3, [r7, #4]
 801d57e:	613b      	str	r3, [r7, #16]
 801d580:	2300      	movs	r3, #0
 801d582:	617b      	str	r3, [r7, #20]
 801d584:	687b      	ldr	r3, [r7, #4]
 801d586:	2b00      	cmp	r3, #0
 801d588:	d06e      	beq.n	801d668 <xTaskPriorityDisinherit+0xf4>
 801d58a:	4b3a      	ldr	r3, [pc, #232]	; (801d674 <xTaskPriorityDisinherit+0x100>)
 801d58c:	681b      	ldr	r3, [r3, #0]
 801d58e:	693a      	ldr	r2, [r7, #16]
 801d590:	429a      	cmp	r2, r3
 801d592:	d00a      	beq.n	801d5aa <xTaskPriorityDisinherit+0x36>
 801d594:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d598:	f383 8811 	msr	BASEPRI, r3
 801d59c:	f3bf 8f6f 	isb	sy
 801d5a0:	f3bf 8f4f 	dsb	sy
 801d5a4:	60fb      	str	r3, [r7, #12]
 801d5a6:	bf00      	nop
 801d5a8:	e7fe      	b.n	801d5a8 <xTaskPriorityDisinherit+0x34>
 801d5aa:	693b      	ldr	r3, [r7, #16]
 801d5ac:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d5ae:	2b00      	cmp	r3, #0
 801d5b0:	d10a      	bne.n	801d5c8 <xTaskPriorityDisinherit+0x54>
 801d5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d5b6:	f383 8811 	msr	BASEPRI, r3
 801d5ba:	f3bf 8f6f 	isb	sy
 801d5be:	f3bf 8f4f 	dsb	sy
 801d5c2:	60bb      	str	r3, [r7, #8]
 801d5c4:	bf00      	nop
 801d5c6:	e7fe      	b.n	801d5c6 <xTaskPriorityDisinherit+0x52>
 801d5c8:	693b      	ldr	r3, [r7, #16]
 801d5ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d5cc:	1e5a      	subs	r2, r3, #1
 801d5ce:	693b      	ldr	r3, [r7, #16]
 801d5d0:	651a      	str	r2, [r3, #80]	; 0x50
 801d5d2:	693b      	ldr	r3, [r7, #16]
 801d5d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d5d6:	693b      	ldr	r3, [r7, #16]
 801d5d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801d5da:	429a      	cmp	r2, r3
 801d5dc:	d044      	beq.n	801d668 <xTaskPriorityDisinherit+0xf4>
 801d5de:	693b      	ldr	r3, [r7, #16]
 801d5e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d5e2:	2b00      	cmp	r3, #0
 801d5e4:	d140      	bne.n	801d668 <xTaskPriorityDisinherit+0xf4>
 801d5e6:	693b      	ldr	r3, [r7, #16]
 801d5e8:	3304      	adds	r3, #4
 801d5ea:	4618      	mov	r0, r3
 801d5ec:	f7fe fa3c 	bl	801ba68 <uxListRemove>
 801d5f0:	4603      	mov	r3, r0
 801d5f2:	2b00      	cmp	r3, #0
 801d5f4:	d115      	bne.n	801d622 <xTaskPriorityDisinherit+0xae>
 801d5f6:	693b      	ldr	r3, [r7, #16]
 801d5f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d5fa:	491f      	ldr	r1, [pc, #124]	; (801d678 <xTaskPriorityDisinherit+0x104>)
 801d5fc:	4613      	mov	r3, r2
 801d5fe:	009b      	lsls	r3, r3, #2
 801d600:	4413      	add	r3, r2
 801d602:	009b      	lsls	r3, r3, #2
 801d604:	440b      	add	r3, r1
 801d606:	681b      	ldr	r3, [r3, #0]
 801d608:	2b00      	cmp	r3, #0
 801d60a:	d10a      	bne.n	801d622 <xTaskPriorityDisinherit+0xae>
 801d60c:	693b      	ldr	r3, [r7, #16]
 801d60e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d610:	2201      	movs	r2, #1
 801d612:	fa02 f303 	lsl.w	r3, r2, r3
 801d616:	43da      	mvns	r2, r3
 801d618:	4b18      	ldr	r3, [pc, #96]	; (801d67c <xTaskPriorityDisinherit+0x108>)
 801d61a:	681b      	ldr	r3, [r3, #0]
 801d61c:	4013      	ands	r3, r2
 801d61e:	4a17      	ldr	r2, [pc, #92]	; (801d67c <xTaskPriorityDisinherit+0x108>)
 801d620:	6013      	str	r3, [r2, #0]
 801d622:	693b      	ldr	r3, [r7, #16]
 801d624:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801d626:	693b      	ldr	r3, [r7, #16]
 801d628:	62da      	str	r2, [r3, #44]	; 0x2c
 801d62a:	693b      	ldr	r3, [r7, #16]
 801d62c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d62e:	f1c3 020f 	rsb	r2, r3, #15
 801d632:	693b      	ldr	r3, [r7, #16]
 801d634:	619a      	str	r2, [r3, #24]
 801d636:	693b      	ldr	r3, [r7, #16]
 801d638:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d63a:	2201      	movs	r2, #1
 801d63c:	409a      	lsls	r2, r3
 801d63e:	4b0f      	ldr	r3, [pc, #60]	; (801d67c <xTaskPriorityDisinherit+0x108>)
 801d640:	681b      	ldr	r3, [r3, #0]
 801d642:	4313      	orrs	r3, r2
 801d644:	4a0d      	ldr	r2, [pc, #52]	; (801d67c <xTaskPriorityDisinherit+0x108>)
 801d646:	6013      	str	r3, [r2, #0]
 801d648:	693b      	ldr	r3, [r7, #16]
 801d64a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d64c:	4613      	mov	r3, r2
 801d64e:	009b      	lsls	r3, r3, #2
 801d650:	4413      	add	r3, r2
 801d652:	009b      	lsls	r3, r3, #2
 801d654:	4a08      	ldr	r2, [pc, #32]	; (801d678 <xTaskPriorityDisinherit+0x104>)
 801d656:	441a      	add	r2, r3
 801d658:	693b      	ldr	r3, [r7, #16]
 801d65a:	3304      	adds	r3, #4
 801d65c:	4619      	mov	r1, r3
 801d65e:	4610      	mov	r0, r2
 801d660:	f7fe f9a5 	bl	801b9ae <vListInsertEnd>
 801d664:	2301      	movs	r3, #1
 801d666:	617b      	str	r3, [r7, #20]
 801d668:	697b      	ldr	r3, [r7, #20]
 801d66a:	4618      	mov	r0, r3
 801d66c:	3718      	adds	r7, #24
 801d66e:	46bd      	mov	sp, r7
 801d670:	bd80      	pop	{r7, pc}
 801d672:	bf00      	nop
 801d674:	20003a00 	.word	0x20003a00
 801d678:	20003a04 	.word	0x20003a04
 801d67c:	20003ba8 	.word	0x20003ba8

0801d680 <uxTaskResetEventItemValue>:
 801d680:	b480      	push	{r7}
 801d682:	b083      	sub	sp, #12
 801d684:	af00      	add	r7, sp, #0
 801d686:	4b09      	ldr	r3, [pc, #36]	; (801d6ac <uxTaskResetEventItemValue+0x2c>)
 801d688:	681b      	ldr	r3, [r3, #0]
 801d68a:	699b      	ldr	r3, [r3, #24]
 801d68c:	607b      	str	r3, [r7, #4]
 801d68e:	4b07      	ldr	r3, [pc, #28]	; (801d6ac <uxTaskResetEventItemValue+0x2c>)
 801d690:	681b      	ldr	r3, [r3, #0]
 801d692:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d694:	4b05      	ldr	r3, [pc, #20]	; (801d6ac <uxTaskResetEventItemValue+0x2c>)
 801d696:	681b      	ldr	r3, [r3, #0]
 801d698:	f1c2 020f 	rsb	r2, r2, #15
 801d69c:	619a      	str	r2, [r3, #24]
 801d69e:	687b      	ldr	r3, [r7, #4]
 801d6a0:	4618      	mov	r0, r3
 801d6a2:	370c      	adds	r7, #12
 801d6a4:	46bd      	mov	sp, r7
 801d6a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d6aa:	4770      	bx	lr
 801d6ac:	20003a00 	.word	0x20003a00

0801d6b0 <ulTaskNotifyTake>:
 801d6b0:	b580      	push	{r7, lr}
 801d6b2:	b084      	sub	sp, #16
 801d6b4:	af00      	add	r7, sp, #0
 801d6b6:	6078      	str	r0, [r7, #4]
 801d6b8:	6039      	str	r1, [r7, #0]
 801d6ba:	f000 fddb 	bl	801e274 <vPortEnterCritical>
 801d6be:	4b20      	ldr	r3, [pc, #128]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d6c0:	681b      	ldr	r3, [r3, #0]
 801d6c2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d6c6:	2b00      	cmp	r3, #0
 801d6c8:	d113      	bne.n	801d6f2 <ulTaskNotifyTake+0x42>
 801d6ca:	4b1d      	ldr	r3, [pc, #116]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d6cc:	681b      	ldr	r3, [r3, #0]
 801d6ce:	2201      	movs	r2, #1
 801d6d0:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d6d4:	683b      	ldr	r3, [r7, #0]
 801d6d6:	2b00      	cmp	r3, #0
 801d6d8:	d00b      	beq.n	801d6f2 <ulTaskNotifyTake+0x42>
 801d6da:	2101      	movs	r1, #1
 801d6dc:	6838      	ldr	r0, [r7, #0]
 801d6de:	f000 f8c7 	bl	801d870 <prvAddCurrentTaskToDelayedList>
 801d6e2:	4b18      	ldr	r3, [pc, #96]	; (801d744 <ulTaskNotifyTake+0x94>)
 801d6e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801d6e8:	601a      	str	r2, [r3, #0]
 801d6ea:	f3bf 8f4f 	dsb	sy
 801d6ee:	f3bf 8f6f 	isb	sy
 801d6f2:	f000 fdef 	bl	801e2d4 <vPortExitCritical>
 801d6f6:	f000 fdbd 	bl	801e274 <vPortEnterCritical>
 801d6fa:	4b11      	ldr	r3, [pc, #68]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d6fc:	681b      	ldr	r3, [r3, #0]
 801d6fe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d702:	60fb      	str	r3, [r7, #12]
 801d704:	68fb      	ldr	r3, [r7, #12]
 801d706:	2b00      	cmp	r3, #0
 801d708:	d00e      	beq.n	801d728 <ulTaskNotifyTake+0x78>
 801d70a:	687b      	ldr	r3, [r7, #4]
 801d70c:	2b00      	cmp	r3, #0
 801d70e:	d005      	beq.n	801d71c <ulTaskNotifyTake+0x6c>
 801d710:	4b0b      	ldr	r3, [pc, #44]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d712:	681b      	ldr	r3, [r3, #0]
 801d714:	2200      	movs	r2, #0
 801d716:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d71a:	e005      	b.n	801d728 <ulTaskNotifyTake+0x78>
 801d71c:	4b08      	ldr	r3, [pc, #32]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d71e:	681b      	ldr	r3, [r3, #0]
 801d720:	68fa      	ldr	r2, [r7, #12]
 801d722:	3a01      	subs	r2, #1
 801d724:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d728:	4b05      	ldr	r3, [pc, #20]	; (801d740 <ulTaskNotifyTake+0x90>)
 801d72a:	681b      	ldr	r3, [r3, #0]
 801d72c:	2200      	movs	r2, #0
 801d72e:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d732:	f000 fdcf 	bl	801e2d4 <vPortExitCritical>
 801d736:	68fb      	ldr	r3, [r7, #12]
 801d738:	4618      	mov	r0, r3
 801d73a:	3710      	adds	r7, #16
 801d73c:	46bd      	mov	sp, r7
 801d73e:	bd80      	pop	{r7, pc}
 801d740:	20003a00 	.word	0x20003a00
 801d744:	e000ed04 	.word	0xe000ed04

0801d748 <vTaskNotifyGiveFromISR>:
 801d748:	b580      	push	{r7, lr}
 801d74a:	b08a      	sub	sp, #40	; 0x28
 801d74c:	af00      	add	r7, sp, #0
 801d74e:	6078      	str	r0, [r7, #4]
 801d750:	6039      	str	r1, [r7, #0]
 801d752:	687b      	ldr	r3, [r7, #4]
 801d754:	2b00      	cmp	r3, #0
 801d756:	d10a      	bne.n	801d76e <vTaskNotifyGiveFromISR+0x26>
 801d758:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d75c:	f383 8811 	msr	BASEPRI, r3
 801d760:	f3bf 8f6f 	isb	sy
 801d764:	f3bf 8f4f 	dsb	sy
 801d768:	61bb      	str	r3, [r7, #24]
 801d76a:	bf00      	nop
 801d76c:	e7fe      	b.n	801d76c <vTaskNotifyGiveFromISR+0x24>
 801d76e:	f000 fe63 	bl	801e438 <vPortValidateInterruptPriority>
 801d772:	687b      	ldr	r3, [r7, #4]
 801d774:	627b      	str	r3, [r7, #36]	; 0x24
 801d776:	f3ef 8211 	mrs	r2, BASEPRI
 801d77a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d77e:	f383 8811 	msr	BASEPRI, r3
 801d782:	f3bf 8f6f 	isb	sy
 801d786:	f3bf 8f4f 	dsb	sy
 801d78a:	617a      	str	r2, [r7, #20]
 801d78c:	613b      	str	r3, [r7, #16]
 801d78e:	697b      	ldr	r3, [r7, #20]
 801d790:	623b      	str	r3, [r7, #32]
 801d792:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d794:	f893 30bc 	ldrb.w	r3, [r3, #188]	; 0xbc
 801d798:	77fb      	strb	r3, [r7, #31]
 801d79a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d79c:	2202      	movs	r2, #2
 801d79e:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d7a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7a4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d7a8:	1c5a      	adds	r2, r3, #1
 801d7aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7ac:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d7b0:	7ffb      	ldrb	r3, [r7, #31]
 801d7b2:	2b01      	cmp	r3, #1
 801d7b4:	d145      	bne.n	801d842 <vTaskNotifyGiveFromISR+0xfa>
 801d7b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7ba:	2b00      	cmp	r3, #0
 801d7bc:	d00a      	beq.n	801d7d4 <vTaskNotifyGiveFromISR+0x8c>
 801d7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d7c2:	f383 8811 	msr	BASEPRI, r3
 801d7c6:	f3bf 8f6f 	isb	sy
 801d7ca:	f3bf 8f4f 	dsb	sy
 801d7ce:	60fb      	str	r3, [r7, #12]
 801d7d0:	bf00      	nop
 801d7d2:	e7fe      	b.n	801d7d2 <vTaskNotifyGiveFromISR+0x8a>
 801d7d4:	4b20      	ldr	r3, [pc, #128]	; (801d858 <vTaskNotifyGiveFromISR+0x110>)
 801d7d6:	681b      	ldr	r3, [r3, #0]
 801d7d8:	2b00      	cmp	r3, #0
 801d7da:	d11c      	bne.n	801d816 <vTaskNotifyGiveFromISR+0xce>
 801d7dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7de:	3304      	adds	r3, #4
 801d7e0:	4618      	mov	r0, r3
 801d7e2:	f7fe f941 	bl	801ba68 <uxListRemove>
 801d7e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7ea:	2201      	movs	r2, #1
 801d7ec:	409a      	lsls	r2, r3
 801d7ee:	4b1b      	ldr	r3, [pc, #108]	; (801d85c <vTaskNotifyGiveFromISR+0x114>)
 801d7f0:	681b      	ldr	r3, [r3, #0]
 801d7f2:	4313      	orrs	r3, r2
 801d7f4:	4a19      	ldr	r2, [pc, #100]	; (801d85c <vTaskNotifyGiveFromISR+0x114>)
 801d7f6:	6013      	str	r3, [r2, #0]
 801d7f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d7fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d7fc:	4613      	mov	r3, r2
 801d7fe:	009b      	lsls	r3, r3, #2
 801d800:	4413      	add	r3, r2
 801d802:	009b      	lsls	r3, r3, #2
 801d804:	4a16      	ldr	r2, [pc, #88]	; (801d860 <vTaskNotifyGiveFromISR+0x118>)
 801d806:	441a      	add	r2, r3
 801d808:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d80a:	3304      	adds	r3, #4
 801d80c:	4619      	mov	r1, r3
 801d80e:	4610      	mov	r0, r2
 801d810:	f7fe f8cd 	bl	801b9ae <vListInsertEnd>
 801d814:	e005      	b.n	801d822 <vTaskNotifyGiveFromISR+0xda>
 801d816:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d818:	3318      	adds	r3, #24
 801d81a:	4619      	mov	r1, r3
 801d81c:	4811      	ldr	r0, [pc, #68]	; (801d864 <vTaskNotifyGiveFromISR+0x11c>)
 801d81e:	f7fe f8c6 	bl	801b9ae <vListInsertEnd>
 801d822:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d824:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d826:	4b10      	ldr	r3, [pc, #64]	; (801d868 <vTaskNotifyGiveFromISR+0x120>)
 801d828:	681b      	ldr	r3, [r3, #0]
 801d82a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d82c:	429a      	cmp	r2, r3
 801d82e:	d908      	bls.n	801d842 <vTaskNotifyGiveFromISR+0xfa>
 801d830:	683b      	ldr	r3, [r7, #0]
 801d832:	2b00      	cmp	r3, #0
 801d834:	d002      	beq.n	801d83c <vTaskNotifyGiveFromISR+0xf4>
 801d836:	683b      	ldr	r3, [r7, #0]
 801d838:	2201      	movs	r2, #1
 801d83a:	601a      	str	r2, [r3, #0]
 801d83c:	4b0b      	ldr	r3, [pc, #44]	; (801d86c <vTaskNotifyGiveFromISR+0x124>)
 801d83e:	2201      	movs	r2, #1
 801d840:	601a      	str	r2, [r3, #0]
 801d842:	6a3b      	ldr	r3, [r7, #32]
 801d844:	60bb      	str	r3, [r7, #8]
 801d846:	68bb      	ldr	r3, [r7, #8]
 801d848:	f383 8811 	msr	BASEPRI, r3
 801d84c:	bf00      	nop
 801d84e:	bf00      	nop
 801d850:	3728      	adds	r7, #40	; 0x28
 801d852:	46bd      	mov	sp, r7
 801d854:	bd80      	pop	{r7, pc}
 801d856:	bf00      	nop
 801d858:	20003bc8 	.word	0x20003bc8
 801d85c:	20003ba8 	.word	0x20003ba8
 801d860:	20003a04 	.word	0x20003a04
 801d864:	20003b60 	.word	0x20003b60
 801d868:	20003a00 	.word	0x20003a00
 801d86c:	20003bb4 	.word	0x20003bb4

0801d870 <prvAddCurrentTaskToDelayedList>:
 801d870:	b580      	push	{r7, lr}
 801d872:	b084      	sub	sp, #16
 801d874:	af00      	add	r7, sp, #0
 801d876:	6078      	str	r0, [r7, #4]
 801d878:	6039      	str	r1, [r7, #0]
 801d87a:	4b29      	ldr	r3, [pc, #164]	; (801d920 <prvAddCurrentTaskToDelayedList+0xb0>)
 801d87c:	681b      	ldr	r3, [r3, #0]
 801d87e:	60fb      	str	r3, [r7, #12]
 801d880:	4b28      	ldr	r3, [pc, #160]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d882:	681b      	ldr	r3, [r3, #0]
 801d884:	3304      	adds	r3, #4
 801d886:	4618      	mov	r0, r3
 801d888:	f7fe f8ee 	bl	801ba68 <uxListRemove>
 801d88c:	4603      	mov	r3, r0
 801d88e:	2b00      	cmp	r3, #0
 801d890:	d10b      	bne.n	801d8aa <prvAddCurrentTaskToDelayedList+0x3a>
 801d892:	4b24      	ldr	r3, [pc, #144]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d894:	681b      	ldr	r3, [r3, #0]
 801d896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d898:	2201      	movs	r2, #1
 801d89a:	fa02 f303 	lsl.w	r3, r2, r3
 801d89e:	43da      	mvns	r2, r3
 801d8a0:	4b21      	ldr	r3, [pc, #132]	; (801d928 <prvAddCurrentTaskToDelayedList+0xb8>)
 801d8a2:	681b      	ldr	r3, [r3, #0]
 801d8a4:	4013      	ands	r3, r2
 801d8a6:	4a20      	ldr	r2, [pc, #128]	; (801d928 <prvAddCurrentTaskToDelayedList+0xb8>)
 801d8a8:	6013      	str	r3, [r2, #0]
 801d8aa:	687b      	ldr	r3, [r7, #4]
 801d8ac:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801d8b0:	d10a      	bne.n	801d8c8 <prvAddCurrentTaskToDelayedList+0x58>
 801d8b2:	683b      	ldr	r3, [r7, #0]
 801d8b4:	2b00      	cmp	r3, #0
 801d8b6:	d007      	beq.n	801d8c8 <prvAddCurrentTaskToDelayedList+0x58>
 801d8b8:	4b1a      	ldr	r3, [pc, #104]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d8ba:	681b      	ldr	r3, [r3, #0]
 801d8bc:	3304      	adds	r3, #4
 801d8be:	4619      	mov	r1, r3
 801d8c0:	481a      	ldr	r0, [pc, #104]	; (801d92c <prvAddCurrentTaskToDelayedList+0xbc>)
 801d8c2:	f7fe f874 	bl	801b9ae <vListInsertEnd>
 801d8c6:	e026      	b.n	801d916 <prvAddCurrentTaskToDelayedList+0xa6>
 801d8c8:	68fa      	ldr	r2, [r7, #12]
 801d8ca:	687b      	ldr	r3, [r7, #4]
 801d8cc:	4413      	add	r3, r2
 801d8ce:	60bb      	str	r3, [r7, #8]
 801d8d0:	4b14      	ldr	r3, [pc, #80]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d8d2:	681b      	ldr	r3, [r3, #0]
 801d8d4:	68ba      	ldr	r2, [r7, #8]
 801d8d6:	605a      	str	r2, [r3, #4]
 801d8d8:	68ba      	ldr	r2, [r7, #8]
 801d8da:	68fb      	ldr	r3, [r7, #12]
 801d8dc:	429a      	cmp	r2, r3
 801d8de:	d209      	bcs.n	801d8f4 <prvAddCurrentTaskToDelayedList+0x84>
 801d8e0:	4b13      	ldr	r3, [pc, #76]	; (801d930 <prvAddCurrentTaskToDelayedList+0xc0>)
 801d8e2:	681a      	ldr	r2, [r3, #0]
 801d8e4:	4b0f      	ldr	r3, [pc, #60]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d8e6:	681b      	ldr	r3, [r3, #0]
 801d8e8:	3304      	adds	r3, #4
 801d8ea:	4619      	mov	r1, r3
 801d8ec:	4610      	mov	r0, r2
 801d8ee:	f7fe f882 	bl	801b9f6 <vListInsert>
 801d8f2:	e010      	b.n	801d916 <prvAddCurrentTaskToDelayedList+0xa6>
 801d8f4:	4b0f      	ldr	r3, [pc, #60]	; (801d934 <prvAddCurrentTaskToDelayedList+0xc4>)
 801d8f6:	681a      	ldr	r2, [r3, #0]
 801d8f8:	4b0a      	ldr	r3, [pc, #40]	; (801d924 <prvAddCurrentTaskToDelayedList+0xb4>)
 801d8fa:	681b      	ldr	r3, [r3, #0]
 801d8fc:	3304      	adds	r3, #4
 801d8fe:	4619      	mov	r1, r3
 801d900:	4610      	mov	r0, r2
 801d902:	f7fe f878 	bl	801b9f6 <vListInsert>
 801d906:	4b0c      	ldr	r3, [pc, #48]	; (801d938 <prvAddCurrentTaskToDelayedList+0xc8>)
 801d908:	681b      	ldr	r3, [r3, #0]
 801d90a:	68ba      	ldr	r2, [r7, #8]
 801d90c:	429a      	cmp	r2, r3
 801d90e:	d202      	bcs.n	801d916 <prvAddCurrentTaskToDelayedList+0xa6>
 801d910:	4a09      	ldr	r2, [pc, #36]	; (801d938 <prvAddCurrentTaskToDelayedList+0xc8>)
 801d912:	68bb      	ldr	r3, [r7, #8]
 801d914:	6013      	str	r3, [r2, #0]
 801d916:	bf00      	nop
 801d918:	3710      	adds	r7, #16
 801d91a:	46bd      	mov	sp, r7
 801d91c:	bd80      	pop	{r7, pc}
 801d91e:	bf00      	nop
 801d920:	20003ba4 	.word	0x20003ba4
 801d924:	20003a00 	.word	0x20003a00
 801d928:	20003ba8 	.word	0x20003ba8
 801d92c:	20003b8c 	.word	0x20003b8c
 801d930:	20003b5c 	.word	0x20003b5c
 801d934:	20003b58 	.word	0x20003b58
 801d938:	20003bc0 	.word	0x20003bc0

0801d93c <xTimerCreateTimerTask>:
 801d93c:	b580      	push	{r7, lr}
 801d93e:	b08a      	sub	sp, #40	; 0x28
 801d940:	af04      	add	r7, sp, #16
 801d942:	2300      	movs	r3, #0
 801d944:	617b      	str	r3, [r7, #20]
 801d946:	f000 fb07 	bl	801df58 <prvCheckForValidListAndQueue>
 801d94a:	4b1c      	ldr	r3, [pc, #112]	; (801d9bc <xTimerCreateTimerTask+0x80>)
 801d94c:	681b      	ldr	r3, [r3, #0]
 801d94e:	2b00      	cmp	r3, #0
 801d950:	d021      	beq.n	801d996 <xTimerCreateTimerTask+0x5a>
 801d952:	2300      	movs	r3, #0
 801d954:	60fb      	str	r3, [r7, #12]
 801d956:	2300      	movs	r3, #0
 801d958:	60bb      	str	r3, [r7, #8]
 801d95a:	1d3a      	adds	r2, r7, #4
 801d95c:	f107 0108 	add.w	r1, r7, #8
 801d960:	f107 030c 	add.w	r3, r7, #12
 801d964:	4618      	mov	r0, r3
 801d966:	f7e5 fcc9 	bl	80032fc <vApplicationGetTimerTaskMemory>
 801d96a:	6879      	ldr	r1, [r7, #4]
 801d96c:	68bb      	ldr	r3, [r7, #8]
 801d96e:	68fa      	ldr	r2, [r7, #12]
 801d970:	9202      	str	r2, [sp, #8]
 801d972:	9301      	str	r3, [sp, #4]
 801d974:	2302      	movs	r3, #2
 801d976:	9300      	str	r3, [sp, #0]
 801d978:	2300      	movs	r3, #0
 801d97a:	460a      	mov	r2, r1
 801d97c:	4910      	ldr	r1, [pc, #64]	; (801d9c0 <xTimerCreateTimerTask+0x84>)
 801d97e:	4811      	ldr	r0, [pc, #68]	; (801d9c4 <xTimerCreateTimerTask+0x88>)
 801d980:	f7fe fe4e 	bl	801c620 <xTaskCreateStatic>
 801d984:	4603      	mov	r3, r0
 801d986:	4a10      	ldr	r2, [pc, #64]	; (801d9c8 <xTimerCreateTimerTask+0x8c>)
 801d988:	6013      	str	r3, [r2, #0]
 801d98a:	4b0f      	ldr	r3, [pc, #60]	; (801d9c8 <xTimerCreateTimerTask+0x8c>)
 801d98c:	681b      	ldr	r3, [r3, #0]
 801d98e:	2b00      	cmp	r3, #0
 801d990:	d001      	beq.n	801d996 <xTimerCreateTimerTask+0x5a>
 801d992:	2301      	movs	r3, #1
 801d994:	617b      	str	r3, [r7, #20]
 801d996:	697b      	ldr	r3, [r7, #20]
 801d998:	2b00      	cmp	r3, #0
 801d99a:	d10a      	bne.n	801d9b2 <xTimerCreateTimerTask+0x76>
 801d99c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d9a0:	f383 8811 	msr	BASEPRI, r3
 801d9a4:	f3bf 8f6f 	isb	sy
 801d9a8:	f3bf 8f4f 	dsb	sy
 801d9ac:	613b      	str	r3, [r7, #16]
 801d9ae:	bf00      	nop
 801d9b0:	e7fe      	b.n	801d9b0 <xTimerCreateTimerTask+0x74>
 801d9b2:	697b      	ldr	r3, [r7, #20]
 801d9b4:	4618      	mov	r0, r3
 801d9b6:	3718      	adds	r7, #24
 801d9b8:	46bd      	mov	sp, r7
 801d9ba:	bd80      	pop	{r7, pc}
 801d9bc:	20003c04 	.word	0x20003c04
 801d9c0:	08026860 	.word	0x08026860
 801d9c4:	0801db01 	.word	0x0801db01
 801d9c8:	20003c08 	.word	0x20003c08

0801d9cc <xTimerGenericCommand>:
 801d9cc:	b580      	push	{r7, lr}
 801d9ce:	b08a      	sub	sp, #40	; 0x28
 801d9d0:	af00      	add	r7, sp, #0
 801d9d2:	60f8      	str	r0, [r7, #12]
 801d9d4:	60b9      	str	r1, [r7, #8]
 801d9d6:	607a      	str	r2, [r7, #4]
 801d9d8:	603b      	str	r3, [r7, #0]
 801d9da:	2300      	movs	r3, #0
 801d9dc:	627b      	str	r3, [r7, #36]	; 0x24
 801d9de:	68fb      	ldr	r3, [r7, #12]
 801d9e0:	2b00      	cmp	r3, #0
 801d9e2:	d10a      	bne.n	801d9fa <xTimerGenericCommand+0x2e>
 801d9e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d9e8:	f383 8811 	msr	BASEPRI, r3
 801d9ec:	f3bf 8f6f 	isb	sy
 801d9f0:	f3bf 8f4f 	dsb	sy
 801d9f4:	623b      	str	r3, [r7, #32]
 801d9f6:	bf00      	nop
 801d9f8:	e7fe      	b.n	801d9f8 <xTimerGenericCommand+0x2c>
 801d9fa:	4b1a      	ldr	r3, [pc, #104]	; (801da64 <xTimerGenericCommand+0x98>)
 801d9fc:	681b      	ldr	r3, [r3, #0]
 801d9fe:	2b00      	cmp	r3, #0
 801da00:	d02a      	beq.n	801da58 <xTimerGenericCommand+0x8c>
 801da02:	68bb      	ldr	r3, [r7, #8]
 801da04:	613b      	str	r3, [r7, #16]
 801da06:	687b      	ldr	r3, [r7, #4]
 801da08:	617b      	str	r3, [r7, #20]
 801da0a:	68fb      	ldr	r3, [r7, #12]
 801da0c:	61bb      	str	r3, [r7, #24]
 801da0e:	68bb      	ldr	r3, [r7, #8]
 801da10:	2b05      	cmp	r3, #5
 801da12:	dc18      	bgt.n	801da46 <xTimerGenericCommand+0x7a>
 801da14:	f7ff fd90 	bl	801d538 <xTaskGetSchedulerState>
 801da18:	4603      	mov	r3, r0
 801da1a:	2b02      	cmp	r3, #2
 801da1c:	d109      	bne.n	801da32 <xTimerGenericCommand+0x66>
 801da1e:	4b11      	ldr	r3, [pc, #68]	; (801da64 <xTimerGenericCommand+0x98>)
 801da20:	6818      	ldr	r0, [r3, #0]
 801da22:	f107 0110 	add.w	r1, r7, #16
 801da26:	2300      	movs	r3, #0
 801da28:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801da2a:	f7fe f985 	bl	801bd38 <xQueueGenericSend>
 801da2e:	6278      	str	r0, [r7, #36]	; 0x24
 801da30:	e012      	b.n	801da58 <xTimerGenericCommand+0x8c>
 801da32:	4b0c      	ldr	r3, [pc, #48]	; (801da64 <xTimerGenericCommand+0x98>)
 801da34:	6818      	ldr	r0, [r3, #0]
 801da36:	f107 0110 	add.w	r1, r7, #16
 801da3a:	2300      	movs	r3, #0
 801da3c:	2200      	movs	r2, #0
 801da3e:	f7fe f97b 	bl	801bd38 <xQueueGenericSend>
 801da42:	6278      	str	r0, [r7, #36]	; 0x24
 801da44:	e008      	b.n	801da58 <xTimerGenericCommand+0x8c>
 801da46:	4b07      	ldr	r3, [pc, #28]	; (801da64 <xTimerGenericCommand+0x98>)
 801da48:	6818      	ldr	r0, [r3, #0]
 801da4a:	f107 0110 	add.w	r1, r7, #16
 801da4e:	2300      	movs	r3, #0
 801da50:	683a      	ldr	r2, [r7, #0]
 801da52:	f7fe fa6f 	bl	801bf34 <xQueueGenericSendFromISR>
 801da56:	6278      	str	r0, [r7, #36]	; 0x24
 801da58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801da5a:	4618      	mov	r0, r3
 801da5c:	3728      	adds	r7, #40	; 0x28
 801da5e:	46bd      	mov	sp, r7
 801da60:	bd80      	pop	{r7, pc}
 801da62:	bf00      	nop
 801da64:	20003c04 	.word	0x20003c04

0801da68 <prvProcessExpiredTimer>:
 801da68:	b580      	push	{r7, lr}
 801da6a:	b088      	sub	sp, #32
 801da6c:	af02      	add	r7, sp, #8
 801da6e:	6078      	str	r0, [r7, #4]
 801da70:	6039      	str	r1, [r7, #0]
 801da72:	4b22      	ldr	r3, [pc, #136]	; (801dafc <prvProcessExpiredTimer+0x94>)
 801da74:	681b      	ldr	r3, [r3, #0]
 801da76:	68db      	ldr	r3, [r3, #12]
 801da78:	68db      	ldr	r3, [r3, #12]
 801da7a:	617b      	str	r3, [r7, #20]
 801da7c:	697b      	ldr	r3, [r7, #20]
 801da7e:	3304      	adds	r3, #4
 801da80:	4618      	mov	r0, r3
 801da82:	f7fd fff1 	bl	801ba68 <uxListRemove>
 801da86:	697b      	ldr	r3, [r7, #20]
 801da88:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801da8c:	f003 0304 	and.w	r3, r3, #4
 801da90:	2b00      	cmp	r3, #0
 801da92:	d022      	beq.n	801dada <prvProcessExpiredTimer+0x72>
 801da94:	697b      	ldr	r3, [r7, #20]
 801da96:	699a      	ldr	r2, [r3, #24]
 801da98:	687b      	ldr	r3, [r7, #4]
 801da9a:	18d1      	adds	r1, r2, r3
 801da9c:	687b      	ldr	r3, [r7, #4]
 801da9e:	683a      	ldr	r2, [r7, #0]
 801daa0:	6978      	ldr	r0, [r7, #20]
 801daa2:	f000 f8d1 	bl	801dc48 <prvInsertTimerInActiveList>
 801daa6:	4603      	mov	r3, r0
 801daa8:	2b00      	cmp	r3, #0
 801daaa:	d01f      	beq.n	801daec <prvProcessExpiredTimer+0x84>
 801daac:	2300      	movs	r3, #0
 801daae:	9300      	str	r3, [sp, #0]
 801dab0:	2300      	movs	r3, #0
 801dab2:	687a      	ldr	r2, [r7, #4]
 801dab4:	2100      	movs	r1, #0
 801dab6:	6978      	ldr	r0, [r7, #20]
 801dab8:	f7ff ff88 	bl	801d9cc <xTimerGenericCommand>
 801dabc:	6138      	str	r0, [r7, #16]
 801dabe:	693b      	ldr	r3, [r7, #16]
 801dac0:	2b00      	cmp	r3, #0
 801dac2:	d113      	bne.n	801daec <prvProcessExpiredTimer+0x84>
 801dac4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801dac8:	f383 8811 	msr	BASEPRI, r3
 801dacc:	f3bf 8f6f 	isb	sy
 801dad0:	f3bf 8f4f 	dsb	sy
 801dad4:	60fb      	str	r3, [r7, #12]
 801dad6:	bf00      	nop
 801dad8:	e7fe      	b.n	801dad8 <prvProcessExpiredTimer+0x70>
 801dada:	697b      	ldr	r3, [r7, #20]
 801dadc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dae0:	f023 0301 	bic.w	r3, r3, #1
 801dae4:	b2da      	uxtb	r2, r3
 801dae6:	697b      	ldr	r3, [r7, #20]
 801dae8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801daec:	697b      	ldr	r3, [r7, #20]
 801daee:	6a1b      	ldr	r3, [r3, #32]
 801daf0:	6978      	ldr	r0, [r7, #20]
 801daf2:	4798      	blx	r3
 801daf4:	bf00      	nop
 801daf6:	3718      	adds	r7, #24
 801daf8:	46bd      	mov	sp, r7
 801dafa:	bd80      	pop	{r7, pc}
 801dafc:	20003bfc 	.word	0x20003bfc

0801db00 <prvTimerTask>:
 801db00:	b580      	push	{r7, lr}
 801db02:	b084      	sub	sp, #16
 801db04:	af00      	add	r7, sp, #0
 801db06:	6078      	str	r0, [r7, #4]
 801db08:	f107 0308 	add.w	r3, r7, #8
 801db0c:	4618      	mov	r0, r3
 801db0e:	f000 f857 	bl	801dbc0 <prvGetNextExpireTime>
 801db12:	60f8      	str	r0, [r7, #12]
 801db14:	68bb      	ldr	r3, [r7, #8]
 801db16:	4619      	mov	r1, r3
 801db18:	68f8      	ldr	r0, [r7, #12]
 801db1a:	f000 f803 	bl	801db24 <prvProcessTimerOrBlockTask>
 801db1e:	f000 f8d5 	bl	801dccc <prvProcessReceivedCommands>
 801db22:	e7f1      	b.n	801db08 <prvTimerTask+0x8>

0801db24 <prvProcessTimerOrBlockTask>:
 801db24:	b580      	push	{r7, lr}
 801db26:	b084      	sub	sp, #16
 801db28:	af00      	add	r7, sp, #0
 801db2a:	6078      	str	r0, [r7, #4]
 801db2c:	6039      	str	r1, [r7, #0]
 801db2e:	f7ff f855 	bl	801cbdc <vTaskSuspendAll>
 801db32:	f107 0308 	add.w	r3, r7, #8
 801db36:	4618      	mov	r0, r3
 801db38:	f000 f866 	bl	801dc08 <prvSampleTimeNow>
 801db3c:	60f8      	str	r0, [r7, #12]
 801db3e:	68bb      	ldr	r3, [r7, #8]
 801db40:	2b00      	cmp	r3, #0
 801db42:	d130      	bne.n	801dba6 <prvProcessTimerOrBlockTask+0x82>
 801db44:	683b      	ldr	r3, [r7, #0]
 801db46:	2b00      	cmp	r3, #0
 801db48:	d10a      	bne.n	801db60 <prvProcessTimerOrBlockTask+0x3c>
 801db4a:	687a      	ldr	r2, [r7, #4]
 801db4c:	68fb      	ldr	r3, [r7, #12]
 801db4e:	429a      	cmp	r2, r3
 801db50:	d806      	bhi.n	801db60 <prvProcessTimerOrBlockTask+0x3c>
 801db52:	f7ff f851 	bl	801cbf8 <xTaskResumeAll>
 801db56:	68f9      	ldr	r1, [r7, #12]
 801db58:	6878      	ldr	r0, [r7, #4]
 801db5a:	f7ff ff85 	bl	801da68 <prvProcessExpiredTimer>
 801db5e:	e024      	b.n	801dbaa <prvProcessTimerOrBlockTask+0x86>
 801db60:	683b      	ldr	r3, [r7, #0]
 801db62:	2b00      	cmp	r3, #0
 801db64:	d008      	beq.n	801db78 <prvProcessTimerOrBlockTask+0x54>
 801db66:	4b13      	ldr	r3, [pc, #76]	; (801dbb4 <prvProcessTimerOrBlockTask+0x90>)
 801db68:	681b      	ldr	r3, [r3, #0]
 801db6a:	681b      	ldr	r3, [r3, #0]
 801db6c:	2b00      	cmp	r3, #0
 801db6e:	d101      	bne.n	801db74 <prvProcessTimerOrBlockTask+0x50>
 801db70:	2301      	movs	r3, #1
 801db72:	e000      	b.n	801db76 <prvProcessTimerOrBlockTask+0x52>
 801db74:	2300      	movs	r3, #0
 801db76:	603b      	str	r3, [r7, #0]
 801db78:	4b0f      	ldr	r3, [pc, #60]	; (801dbb8 <prvProcessTimerOrBlockTask+0x94>)
 801db7a:	6818      	ldr	r0, [r3, #0]
 801db7c:	687a      	ldr	r2, [r7, #4]
 801db7e:	68fb      	ldr	r3, [r7, #12]
 801db80:	1ad3      	subs	r3, r2, r3
 801db82:	683a      	ldr	r2, [r7, #0]
 801db84:	4619      	mov	r1, r3
 801db86:	f7fe fd17 	bl	801c5b8 <vQueueWaitForMessageRestricted>
 801db8a:	f7ff f835 	bl	801cbf8 <xTaskResumeAll>
 801db8e:	4603      	mov	r3, r0
 801db90:	2b00      	cmp	r3, #0
 801db92:	d10a      	bne.n	801dbaa <prvProcessTimerOrBlockTask+0x86>
 801db94:	4b09      	ldr	r3, [pc, #36]	; (801dbbc <prvProcessTimerOrBlockTask+0x98>)
 801db96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801db9a:	601a      	str	r2, [r3, #0]
 801db9c:	f3bf 8f4f 	dsb	sy
 801dba0:	f3bf 8f6f 	isb	sy
 801dba4:	e001      	b.n	801dbaa <prvProcessTimerOrBlockTask+0x86>
 801dba6:	f7ff f827 	bl	801cbf8 <xTaskResumeAll>
 801dbaa:	bf00      	nop
 801dbac:	3710      	adds	r7, #16
 801dbae:	46bd      	mov	sp, r7
 801dbb0:	bd80      	pop	{r7, pc}
 801dbb2:	bf00      	nop
 801dbb4:	20003c00 	.word	0x20003c00
 801dbb8:	20003c04 	.word	0x20003c04
 801dbbc:	e000ed04 	.word	0xe000ed04

0801dbc0 <prvGetNextExpireTime>:
 801dbc0:	b480      	push	{r7}
 801dbc2:	b085      	sub	sp, #20
 801dbc4:	af00      	add	r7, sp, #0
 801dbc6:	6078      	str	r0, [r7, #4]
 801dbc8:	4b0e      	ldr	r3, [pc, #56]	; (801dc04 <prvGetNextExpireTime+0x44>)
 801dbca:	681b      	ldr	r3, [r3, #0]
 801dbcc:	681b      	ldr	r3, [r3, #0]
 801dbce:	2b00      	cmp	r3, #0
 801dbd0:	d101      	bne.n	801dbd6 <prvGetNextExpireTime+0x16>
 801dbd2:	2201      	movs	r2, #1
 801dbd4:	e000      	b.n	801dbd8 <prvGetNextExpireTime+0x18>
 801dbd6:	2200      	movs	r2, #0
 801dbd8:	687b      	ldr	r3, [r7, #4]
 801dbda:	601a      	str	r2, [r3, #0]
 801dbdc:	687b      	ldr	r3, [r7, #4]
 801dbde:	681b      	ldr	r3, [r3, #0]
 801dbe0:	2b00      	cmp	r3, #0
 801dbe2:	d105      	bne.n	801dbf0 <prvGetNextExpireTime+0x30>
 801dbe4:	4b07      	ldr	r3, [pc, #28]	; (801dc04 <prvGetNextExpireTime+0x44>)
 801dbe6:	681b      	ldr	r3, [r3, #0]
 801dbe8:	68db      	ldr	r3, [r3, #12]
 801dbea:	681b      	ldr	r3, [r3, #0]
 801dbec:	60fb      	str	r3, [r7, #12]
 801dbee:	e001      	b.n	801dbf4 <prvGetNextExpireTime+0x34>
 801dbf0:	2300      	movs	r3, #0
 801dbf2:	60fb      	str	r3, [r7, #12]
 801dbf4:	68fb      	ldr	r3, [r7, #12]
 801dbf6:	4618      	mov	r0, r3
 801dbf8:	3714      	adds	r7, #20
 801dbfa:	46bd      	mov	sp, r7
 801dbfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dc00:	4770      	bx	lr
 801dc02:	bf00      	nop
 801dc04:	20003bfc 	.word	0x20003bfc

0801dc08 <prvSampleTimeNow>:
 801dc08:	b580      	push	{r7, lr}
 801dc0a:	b084      	sub	sp, #16
 801dc0c:	af00      	add	r7, sp, #0
 801dc0e:	6078      	str	r0, [r7, #4]
 801dc10:	f7ff f88e 	bl	801cd30 <xTaskGetTickCount>
 801dc14:	60f8      	str	r0, [r7, #12]
 801dc16:	4b0b      	ldr	r3, [pc, #44]	; (801dc44 <prvSampleTimeNow+0x3c>)
 801dc18:	681b      	ldr	r3, [r3, #0]
 801dc1a:	68fa      	ldr	r2, [r7, #12]
 801dc1c:	429a      	cmp	r2, r3
 801dc1e:	d205      	bcs.n	801dc2c <prvSampleTimeNow+0x24>
 801dc20:	f000 f936 	bl	801de90 <prvSwitchTimerLists>
 801dc24:	687b      	ldr	r3, [r7, #4]
 801dc26:	2201      	movs	r2, #1
 801dc28:	601a      	str	r2, [r3, #0]
 801dc2a:	e002      	b.n	801dc32 <prvSampleTimeNow+0x2a>
 801dc2c:	687b      	ldr	r3, [r7, #4]
 801dc2e:	2200      	movs	r2, #0
 801dc30:	601a      	str	r2, [r3, #0]
 801dc32:	4a04      	ldr	r2, [pc, #16]	; (801dc44 <prvSampleTimeNow+0x3c>)
 801dc34:	68fb      	ldr	r3, [r7, #12]
 801dc36:	6013      	str	r3, [r2, #0]
 801dc38:	68fb      	ldr	r3, [r7, #12]
 801dc3a:	4618      	mov	r0, r3
 801dc3c:	3710      	adds	r7, #16
 801dc3e:	46bd      	mov	sp, r7
 801dc40:	bd80      	pop	{r7, pc}
 801dc42:	bf00      	nop
 801dc44:	20003c0c 	.word	0x20003c0c

0801dc48 <prvInsertTimerInActiveList>:
 801dc48:	b580      	push	{r7, lr}
 801dc4a:	b086      	sub	sp, #24
 801dc4c:	af00      	add	r7, sp, #0
 801dc4e:	60f8      	str	r0, [r7, #12]
 801dc50:	60b9      	str	r1, [r7, #8]
 801dc52:	607a      	str	r2, [r7, #4]
 801dc54:	603b      	str	r3, [r7, #0]
 801dc56:	2300      	movs	r3, #0
 801dc58:	617b      	str	r3, [r7, #20]
 801dc5a:	68fb      	ldr	r3, [r7, #12]
 801dc5c:	68ba      	ldr	r2, [r7, #8]
 801dc5e:	605a      	str	r2, [r3, #4]
 801dc60:	68fb      	ldr	r3, [r7, #12]
 801dc62:	68fa      	ldr	r2, [r7, #12]
 801dc64:	611a      	str	r2, [r3, #16]
 801dc66:	68ba      	ldr	r2, [r7, #8]
 801dc68:	687b      	ldr	r3, [r7, #4]
 801dc6a:	429a      	cmp	r2, r3
 801dc6c:	d812      	bhi.n	801dc94 <prvInsertTimerInActiveList+0x4c>
 801dc6e:	687a      	ldr	r2, [r7, #4]
 801dc70:	683b      	ldr	r3, [r7, #0]
 801dc72:	1ad2      	subs	r2, r2, r3
 801dc74:	68fb      	ldr	r3, [r7, #12]
 801dc76:	699b      	ldr	r3, [r3, #24]
 801dc78:	429a      	cmp	r2, r3
 801dc7a:	d302      	bcc.n	801dc82 <prvInsertTimerInActiveList+0x3a>
 801dc7c:	2301      	movs	r3, #1
 801dc7e:	617b      	str	r3, [r7, #20]
 801dc80:	e01b      	b.n	801dcba <prvInsertTimerInActiveList+0x72>
 801dc82:	4b10      	ldr	r3, [pc, #64]	; (801dcc4 <prvInsertTimerInActiveList+0x7c>)
 801dc84:	681a      	ldr	r2, [r3, #0]
 801dc86:	68fb      	ldr	r3, [r7, #12]
 801dc88:	3304      	adds	r3, #4
 801dc8a:	4619      	mov	r1, r3
 801dc8c:	4610      	mov	r0, r2
 801dc8e:	f7fd feb2 	bl	801b9f6 <vListInsert>
 801dc92:	e012      	b.n	801dcba <prvInsertTimerInActiveList+0x72>
 801dc94:	687a      	ldr	r2, [r7, #4]
 801dc96:	683b      	ldr	r3, [r7, #0]
 801dc98:	429a      	cmp	r2, r3
 801dc9a:	d206      	bcs.n	801dcaa <prvInsertTimerInActiveList+0x62>
 801dc9c:	68ba      	ldr	r2, [r7, #8]
 801dc9e:	683b      	ldr	r3, [r7, #0]
 801dca0:	429a      	cmp	r2, r3
 801dca2:	d302      	bcc.n	801dcaa <prvInsertTimerInActiveList+0x62>
 801dca4:	2301      	movs	r3, #1
 801dca6:	617b      	str	r3, [r7, #20]
 801dca8:	e007      	b.n	801dcba <prvInsertTimerInActiveList+0x72>
 801dcaa:	4b07      	ldr	r3, [pc, #28]	; (801dcc8 <prvInsertTimerInActiveList+0x80>)
 801dcac:	681a      	ldr	r2, [r3, #0]
 801dcae:	68fb      	ldr	r3, [r7, #12]
 801dcb0:	3304      	adds	r3, #4
 801dcb2:	4619      	mov	r1, r3
 801dcb4:	4610      	mov	r0, r2
 801dcb6:	f7fd fe9e 	bl	801b9f6 <vListInsert>
 801dcba:	697b      	ldr	r3, [r7, #20]
 801dcbc:	4618      	mov	r0, r3
 801dcbe:	3718      	adds	r7, #24
 801dcc0:	46bd      	mov	sp, r7
 801dcc2:	bd80      	pop	{r7, pc}
 801dcc4:	20003c00 	.word	0x20003c00
 801dcc8:	20003bfc 	.word	0x20003bfc

0801dccc <prvProcessReceivedCommands>:
 801dccc:	b580      	push	{r7, lr}
 801dcce:	b08e      	sub	sp, #56	; 0x38
 801dcd0:	af02      	add	r7, sp, #8
 801dcd2:	e0ca      	b.n	801de6a <prvProcessReceivedCommands+0x19e>
 801dcd4:	687b      	ldr	r3, [r7, #4]
 801dcd6:	2b00      	cmp	r3, #0
 801dcd8:	da18      	bge.n	801dd0c <prvProcessReceivedCommands+0x40>
 801dcda:	1d3b      	adds	r3, r7, #4
 801dcdc:	3304      	adds	r3, #4
 801dcde:	62fb      	str	r3, [r7, #44]	; 0x2c
 801dce0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801dce2:	2b00      	cmp	r3, #0
 801dce4:	d10a      	bne.n	801dcfc <prvProcessReceivedCommands+0x30>
 801dce6:	f04f 0350 	mov.w	r3, #80	; 0x50
 801dcea:	f383 8811 	msr	BASEPRI, r3
 801dcee:	f3bf 8f6f 	isb	sy
 801dcf2:	f3bf 8f4f 	dsb	sy
 801dcf6:	61fb      	str	r3, [r7, #28]
 801dcf8:	bf00      	nop
 801dcfa:	e7fe      	b.n	801dcfa <prvProcessReceivedCommands+0x2e>
 801dcfc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801dcfe:	681b      	ldr	r3, [r3, #0]
 801dd00:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801dd02:	6850      	ldr	r0, [r2, #4]
 801dd04:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801dd06:	6892      	ldr	r2, [r2, #8]
 801dd08:	4611      	mov	r1, r2
 801dd0a:	4798      	blx	r3
 801dd0c:	687b      	ldr	r3, [r7, #4]
 801dd0e:	2b00      	cmp	r3, #0
 801dd10:	f2c0 80aa 	blt.w	801de68 <prvProcessReceivedCommands+0x19c>
 801dd14:	68fb      	ldr	r3, [r7, #12]
 801dd16:	62bb      	str	r3, [r7, #40]	; 0x28
 801dd18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd1a:	695b      	ldr	r3, [r3, #20]
 801dd1c:	2b00      	cmp	r3, #0
 801dd1e:	d004      	beq.n	801dd2a <prvProcessReceivedCommands+0x5e>
 801dd20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd22:	3304      	adds	r3, #4
 801dd24:	4618      	mov	r0, r3
 801dd26:	f7fd fe9f 	bl	801ba68 <uxListRemove>
 801dd2a:	463b      	mov	r3, r7
 801dd2c:	4618      	mov	r0, r3
 801dd2e:	f7ff ff6b 	bl	801dc08 <prvSampleTimeNow>
 801dd32:	6278      	str	r0, [r7, #36]	; 0x24
 801dd34:	687b      	ldr	r3, [r7, #4]
 801dd36:	2b09      	cmp	r3, #9
 801dd38:	f200 8097 	bhi.w	801de6a <prvProcessReceivedCommands+0x19e>
 801dd3c:	a201      	add	r2, pc, #4	; (adr r2, 801dd44 <prvProcessReceivedCommands+0x78>)
 801dd3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801dd42:	bf00      	nop
 801dd44:	0801dd6d 	.word	0x0801dd6d
 801dd48:	0801dd6d 	.word	0x0801dd6d
 801dd4c:	0801dd6d 	.word	0x0801dd6d
 801dd50:	0801dde1 	.word	0x0801dde1
 801dd54:	0801ddf5 	.word	0x0801ddf5
 801dd58:	0801de3f 	.word	0x0801de3f
 801dd5c:	0801dd6d 	.word	0x0801dd6d
 801dd60:	0801dd6d 	.word	0x0801dd6d
 801dd64:	0801dde1 	.word	0x0801dde1
 801dd68:	0801ddf5 	.word	0x0801ddf5
 801dd6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd6e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dd72:	f043 0301 	orr.w	r3, r3, #1
 801dd76:	b2da      	uxtb	r2, r3
 801dd78:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd7a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801dd7e:	68ba      	ldr	r2, [r7, #8]
 801dd80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd82:	699b      	ldr	r3, [r3, #24]
 801dd84:	18d1      	adds	r1, r2, r3
 801dd86:	68bb      	ldr	r3, [r7, #8]
 801dd88:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801dd8a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801dd8c:	f7ff ff5c 	bl	801dc48 <prvInsertTimerInActiveList>
 801dd90:	4603      	mov	r3, r0
 801dd92:	2b00      	cmp	r3, #0
 801dd94:	d069      	beq.n	801de6a <prvProcessReceivedCommands+0x19e>
 801dd96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dd98:	6a1b      	ldr	r3, [r3, #32]
 801dd9a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801dd9c:	4798      	blx	r3
 801dd9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dda0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dda4:	f003 0304 	and.w	r3, r3, #4
 801dda8:	2b00      	cmp	r3, #0
 801ddaa:	d05e      	beq.n	801de6a <prvProcessReceivedCommands+0x19e>
 801ddac:	68ba      	ldr	r2, [r7, #8]
 801ddae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ddb0:	699b      	ldr	r3, [r3, #24]
 801ddb2:	441a      	add	r2, r3
 801ddb4:	2300      	movs	r3, #0
 801ddb6:	9300      	str	r3, [sp, #0]
 801ddb8:	2300      	movs	r3, #0
 801ddba:	2100      	movs	r1, #0
 801ddbc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801ddbe:	f7ff fe05 	bl	801d9cc <xTimerGenericCommand>
 801ddc2:	6238      	str	r0, [r7, #32]
 801ddc4:	6a3b      	ldr	r3, [r7, #32]
 801ddc6:	2b00      	cmp	r3, #0
 801ddc8:	d14f      	bne.n	801de6a <prvProcessReceivedCommands+0x19e>
 801ddca:	f04f 0350 	mov.w	r3, #80	; 0x50
 801ddce:	f383 8811 	msr	BASEPRI, r3
 801ddd2:	f3bf 8f6f 	isb	sy
 801ddd6:	f3bf 8f4f 	dsb	sy
 801ddda:	61bb      	str	r3, [r7, #24]
 801dddc:	bf00      	nop
 801ddde:	e7fe      	b.n	801ddde <prvProcessReceivedCommands+0x112>
 801dde0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dde2:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dde6:	f023 0301 	bic.w	r3, r3, #1
 801ddea:	b2da      	uxtb	r2, r3
 801ddec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ddee:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801ddf2:	e03a      	b.n	801de6a <prvProcessReceivedCommands+0x19e>
 801ddf4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ddf6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801ddfa:	f043 0301 	orr.w	r3, r3, #1
 801ddfe:	b2da      	uxtb	r2, r3
 801de00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de02:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801de06:	68ba      	ldr	r2, [r7, #8]
 801de08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de0a:	619a      	str	r2, [r3, #24]
 801de0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de0e:	699b      	ldr	r3, [r3, #24]
 801de10:	2b00      	cmp	r3, #0
 801de12:	d10a      	bne.n	801de2a <prvProcessReceivedCommands+0x15e>
 801de14:	f04f 0350 	mov.w	r3, #80	; 0x50
 801de18:	f383 8811 	msr	BASEPRI, r3
 801de1c:	f3bf 8f6f 	isb	sy
 801de20:	f3bf 8f4f 	dsb	sy
 801de24:	617b      	str	r3, [r7, #20]
 801de26:	bf00      	nop
 801de28:	e7fe      	b.n	801de28 <prvProcessReceivedCommands+0x15c>
 801de2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de2c:	699a      	ldr	r2, [r3, #24]
 801de2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801de30:	18d1      	adds	r1, r2, r3
 801de32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801de34:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801de36:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801de38:	f7ff ff06 	bl	801dc48 <prvInsertTimerInActiveList>
 801de3c:	e015      	b.n	801de6a <prvProcessReceivedCommands+0x19e>
 801de3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de40:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801de44:	f003 0302 	and.w	r3, r3, #2
 801de48:	2b00      	cmp	r3, #0
 801de4a:	d103      	bne.n	801de54 <prvProcessReceivedCommands+0x188>
 801de4c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801de4e:	f000 fbff 	bl	801e650 <vPortFree>
 801de52:	e00a      	b.n	801de6a <prvProcessReceivedCommands+0x19e>
 801de54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de56:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801de5a:	f023 0301 	bic.w	r3, r3, #1
 801de5e:	b2da      	uxtb	r2, r3
 801de60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de62:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801de66:	e000      	b.n	801de6a <prvProcessReceivedCommands+0x19e>
 801de68:	bf00      	nop
 801de6a:	4b08      	ldr	r3, [pc, #32]	; (801de8c <prvProcessReceivedCommands+0x1c0>)
 801de6c:	681b      	ldr	r3, [r3, #0]
 801de6e:	1d39      	adds	r1, r7, #4
 801de70:	2200      	movs	r2, #0
 801de72:	4618      	mov	r0, r3
 801de74:	f7fe f986 	bl	801c184 <xQueueReceive>
 801de78:	4603      	mov	r3, r0
 801de7a:	2b00      	cmp	r3, #0
 801de7c:	f47f af2a 	bne.w	801dcd4 <prvProcessReceivedCommands+0x8>
 801de80:	bf00      	nop
 801de82:	bf00      	nop
 801de84:	3730      	adds	r7, #48	; 0x30
 801de86:	46bd      	mov	sp, r7
 801de88:	bd80      	pop	{r7, pc}
 801de8a:	bf00      	nop
 801de8c:	20003c04 	.word	0x20003c04

0801de90 <prvSwitchTimerLists>:
 801de90:	b580      	push	{r7, lr}
 801de92:	b088      	sub	sp, #32
 801de94:	af02      	add	r7, sp, #8
 801de96:	e048      	b.n	801df2a <prvSwitchTimerLists+0x9a>
 801de98:	4b2d      	ldr	r3, [pc, #180]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801de9a:	681b      	ldr	r3, [r3, #0]
 801de9c:	68db      	ldr	r3, [r3, #12]
 801de9e:	681b      	ldr	r3, [r3, #0]
 801dea0:	613b      	str	r3, [r7, #16]
 801dea2:	4b2b      	ldr	r3, [pc, #172]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801dea4:	681b      	ldr	r3, [r3, #0]
 801dea6:	68db      	ldr	r3, [r3, #12]
 801dea8:	68db      	ldr	r3, [r3, #12]
 801deaa:	60fb      	str	r3, [r7, #12]
 801deac:	68fb      	ldr	r3, [r7, #12]
 801deae:	3304      	adds	r3, #4
 801deb0:	4618      	mov	r0, r3
 801deb2:	f7fd fdd9 	bl	801ba68 <uxListRemove>
 801deb6:	68fb      	ldr	r3, [r7, #12]
 801deb8:	6a1b      	ldr	r3, [r3, #32]
 801deba:	68f8      	ldr	r0, [r7, #12]
 801debc:	4798      	blx	r3
 801debe:	68fb      	ldr	r3, [r7, #12]
 801dec0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dec4:	f003 0304 	and.w	r3, r3, #4
 801dec8:	2b00      	cmp	r3, #0
 801deca:	d02e      	beq.n	801df2a <prvSwitchTimerLists+0x9a>
 801decc:	68fb      	ldr	r3, [r7, #12]
 801dece:	699b      	ldr	r3, [r3, #24]
 801ded0:	693a      	ldr	r2, [r7, #16]
 801ded2:	4413      	add	r3, r2
 801ded4:	60bb      	str	r3, [r7, #8]
 801ded6:	68ba      	ldr	r2, [r7, #8]
 801ded8:	693b      	ldr	r3, [r7, #16]
 801deda:	429a      	cmp	r2, r3
 801dedc:	d90e      	bls.n	801defc <prvSwitchTimerLists+0x6c>
 801dede:	68fb      	ldr	r3, [r7, #12]
 801dee0:	68ba      	ldr	r2, [r7, #8]
 801dee2:	605a      	str	r2, [r3, #4]
 801dee4:	68fb      	ldr	r3, [r7, #12]
 801dee6:	68fa      	ldr	r2, [r7, #12]
 801dee8:	611a      	str	r2, [r3, #16]
 801deea:	4b19      	ldr	r3, [pc, #100]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801deec:	681a      	ldr	r2, [r3, #0]
 801deee:	68fb      	ldr	r3, [r7, #12]
 801def0:	3304      	adds	r3, #4
 801def2:	4619      	mov	r1, r3
 801def4:	4610      	mov	r0, r2
 801def6:	f7fd fd7e 	bl	801b9f6 <vListInsert>
 801defa:	e016      	b.n	801df2a <prvSwitchTimerLists+0x9a>
 801defc:	2300      	movs	r3, #0
 801defe:	9300      	str	r3, [sp, #0]
 801df00:	2300      	movs	r3, #0
 801df02:	693a      	ldr	r2, [r7, #16]
 801df04:	2100      	movs	r1, #0
 801df06:	68f8      	ldr	r0, [r7, #12]
 801df08:	f7ff fd60 	bl	801d9cc <xTimerGenericCommand>
 801df0c:	6078      	str	r0, [r7, #4]
 801df0e:	687b      	ldr	r3, [r7, #4]
 801df10:	2b00      	cmp	r3, #0
 801df12:	d10a      	bne.n	801df2a <prvSwitchTimerLists+0x9a>
 801df14:	f04f 0350 	mov.w	r3, #80	; 0x50
 801df18:	f383 8811 	msr	BASEPRI, r3
 801df1c:	f3bf 8f6f 	isb	sy
 801df20:	f3bf 8f4f 	dsb	sy
 801df24:	603b      	str	r3, [r7, #0]
 801df26:	bf00      	nop
 801df28:	e7fe      	b.n	801df28 <prvSwitchTimerLists+0x98>
 801df2a:	4b09      	ldr	r3, [pc, #36]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801df2c:	681b      	ldr	r3, [r3, #0]
 801df2e:	681b      	ldr	r3, [r3, #0]
 801df30:	2b00      	cmp	r3, #0
 801df32:	d1b1      	bne.n	801de98 <prvSwitchTimerLists+0x8>
 801df34:	4b06      	ldr	r3, [pc, #24]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801df36:	681b      	ldr	r3, [r3, #0]
 801df38:	617b      	str	r3, [r7, #20]
 801df3a:	4b06      	ldr	r3, [pc, #24]	; (801df54 <prvSwitchTimerLists+0xc4>)
 801df3c:	681b      	ldr	r3, [r3, #0]
 801df3e:	4a04      	ldr	r2, [pc, #16]	; (801df50 <prvSwitchTimerLists+0xc0>)
 801df40:	6013      	str	r3, [r2, #0]
 801df42:	4a04      	ldr	r2, [pc, #16]	; (801df54 <prvSwitchTimerLists+0xc4>)
 801df44:	697b      	ldr	r3, [r7, #20]
 801df46:	6013      	str	r3, [r2, #0]
 801df48:	bf00      	nop
 801df4a:	3718      	adds	r7, #24
 801df4c:	46bd      	mov	sp, r7
 801df4e:	bd80      	pop	{r7, pc}
 801df50:	20003bfc 	.word	0x20003bfc
 801df54:	20003c00 	.word	0x20003c00

0801df58 <prvCheckForValidListAndQueue>:
 801df58:	b580      	push	{r7, lr}
 801df5a:	b082      	sub	sp, #8
 801df5c:	af02      	add	r7, sp, #8
 801df5e:	f000 f989 	bl	801e274 <vPortEnterCritical>
 801df62:	4b15      	ldr	r3, [pc, #84]	; (801dfb8 <prvCheckForValidListAndQueue+0x60>)
 801df64:	681b      	ldr	r3, [r3, #0]
 801df66:	2b00      	cmp	r3, #0
 801df68:	d120      	bne.n	801dfac <prvCheckForValidListAndQueue+0x54>
 801df6a:	4814      	ldr	r0, [pc, #80]	; (801dfbc <prvCheckForValidListAndQueue+0x64>)
 801df6c:	f7fd fcf2 	bl	801b954 <vListInitialise>
 801df70:	4813      	ldr	r0, [pc, #76]	; (801dfc0 <prvCheckForValidListAndQueue+0x68>)
 801df72:	f7fd fcef 	bl	801b954 <vListInitialise>
 801df76:	4b13      	ldr	r3, [pc, #76]	; (801dfc4 <prvCheckForValidListAndQueue+0x6c>)
 801df78:	4a10      	ldr	r2, [pc, #64]	; (801dfbc <prvCheckForValidListAndQueue+0x64>)
 801df7a:	601a      	str	r2, [r3, #0]
 801df7c:	4b12      	ldr	r3, [pc, #72]	; (801dfc8 <prvCheckForValidListAndQueue+0x70>)
 801df7e:	4a10      	ldr	r2, [pc, #64]	; (801dfc0 <prvCheckForValidListAndQueue+0x68>)
 801df80:	601a      	str	r2, [r3, #0]
 801df82:	2300      	movs	r3, #0
 801df84:	9300      	str	r3, [sp, #0]
 801df86:	4b11      	ldr	r3, [pc, #68]	; (801dfcc <prvCheckForValidListAndQueue+0x74>)
 801df88:	4a11      	ldr	r2, [pc, #68]	; (801dfd0 <prvCheckForValidListAndQueue+0x78>)
 801df8a:	2110      	movs	r1, #16
 801df8c:	200a      	movs	r0, #10
 801df8e:	f7fd fdfd 	bl	801bb8c <xQueueGenericCreateStatic>
 801df92:	4603      	mov	r3, r0
 801df94:	4a08      	ldr	r2, [pc, #32]	; (801dfb8 <prvCheckForValidListAndQueue+0x60>)
 801df96:	6013      	str	r3, [r2, #0]
 801df98:	4b07      	ldr	r3, [pc, #28]	; (801dfb8 <prvCheckForValidListAndQueue+0x60>)
 801df9a:	681b      	ldr	r3, [r3, #0]
 801df9c:	2b00      	cmp	r3, #0
 801df9e:	d005      	beq.n	801dfac <prvCheckForValidListAndQueue+0x54>
 801dfa0:	4b05      	ldr	r3, [pc, #20]	; (801dfb8 <prvCheckForValidListAndQueue+0x60>)
 801dfa2:	681b      	ldr	r3, [r3, #0]
 801dfa4:	490b      	ldr	r1, [pc, #44]	; (801dfd4 <prvCheckForValidListAndQueue+0x7c>)
 801dfa6:	4618      	mov	r0, r3
 801dfa8:	f7fe fadc 	bl	801c564 <vQueueAddToRegistry>
 801dfac:	f000 f992 	bl	801e2d4 <vPortExitCritical>
 801dfb0:	bf00      	nop
 801dfb2:	46bd      	mov	sp, r7
 801dfb4:	bd80      	pop	{r7, pc}
 801dfb6:	bf00      	nop
 801dfb8:	20003c04 	.word	0x20003c04
 801dfbc:	20003bd4 	.word	0x20003bd4
 801dfc0:	20003be8 	.word	0x20003be8
 801dfc4:	20003bfc 	.word	0x20003bfc
 801dfc8:	20003c00 	.word	0x20003c00
 801dfcc:	20003cb0 	.word	0x20003cb0
 801dfd0:	20003c10 	.word	0x20003c10
 801dfd4:	08026868 	.word	0x08026868

0801dfd8 <xTimerPendFunctionCallFromISR>:
 801dfd8:	b580      	push	{r7, lr}
 801dfda:	b08a      	sub	sp, #40	; 0x28
 801dfdc:	af00      	add	r7, sp, #0
 801dfde:	60f8      	str	r0, [r7, #12]
 801dfe0:	60b9      	str	r1, [r7, #8]
 801dfe2:	607a      	str	r2, [r7, #4]
 801dfe4:	603b      	str	r3, [r7, #0]
 801dfe6:	f06f 0301 	mvn.w	r3, #1
 801dfea:	617b      	str	r3, [r7, #20]
 801dfec:	68fb      	ldr	r3, [r7, #12]
 801dfee:	61bb      	str	r3, [r7, #24]
 801dff0:	68bb      	ldr	r3, [r7, #8]
 801dff2:	61fb      	str	r3, [r7, #28]
 801dff4:	687b      	ldr	r3, [r7, #4]
 801dff6:	623b      	str	r3, [r7, #32]
 801dff8:	4b06      	ldr	r3, [pc, #24]	; (801e014 <xTimerPendFunctionCallFromISR+0x3c>)
 801dffa:	6818      	ldr	r0, [r3, #0]
 801dffc:	f107 0114 	add.w	r1, r7, #20
 801e000:	2300      	movs	r3, #0
 801e002:	683a      	ldr	r2, [r7, #0]
 801e004:	f7fd ff96 	bl	801bf34 <xQueueGenericSendFromISR>
 801e008:	6278      	str	r0, [r7, #36]	; 0x24
 801e00a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e00c:	4618      	mov	r0, r3
 801e00e:	3728      	adds	r7, #40	; 0x28
 801e010:	46bd      	mov	sp, r7
 801e012:	bd80      	pop	{r7, pc}
 801e014:	20003c04 	.word	0x20003c04

0801e018 <pxPortInitialiseStack>:
 801e018:	b480      	push	{r7}
 801e01a:	b085      	sub	sp, #20
 801e01c:	af00      	add	r7, sp, #0
 801e01e:	60f8      	str	r0, [r7, #12]
 801e020:	60b9      	str	r1, [r7, #8]
 801e022:	607a      	str	r2, [r7, #4]
 801e024:	68fb      	ldr	r3, [r7, #12]
 801e026:	3b04      	subs	r3, #4
 801e028:	60fb      	str	r3, [r7, #12]
 801e02a:	68fb      	ldr	r3, [r7, #12]
 801e02c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801e030:	601a      	str	r2, [r3, #0]
 801e032:	68fb      	ldr	r3, [r7, #12]
 801e034:	3b04      	subs	r3, #4
 801e036:	60fb      	str	r3, [r7, #12]
 801e038:	68bb      	ldr	r3, [r7, #8]
 801e03a:	f023 0201 	bic.w	r2, r3, #1
 801e03e:	68fb      	ldr	r3, [r7, #12]
 801e040:	601a      	str	r2, [r3, #0]
 801e042:	68fb      	ldr	r3, [r7, #12]
 801e044:	3b04      	subs	r3, #4
 801e046:	60fb      	str	r3, [r7, #12]
 801e048:	4a0c      	ldr	r2, [pc, #48]	; (801e07c <pxPortInitialiseStack+0x64>)
 801e04a:	68fb      	ldr	r3, [r7, #12]
 801e04c:	601a      	str	r2, [r3, #0]
 801e04e:	68fb      	ldr	r3, [r7, #12]
 801e050:	3b14      	subs	r3, #20
 801e052:	60fb      	str	r3, [r7, #12]
 801e054:	687a      	ldr	r2, [r7, #4]
 801e056:	68fb      	ldr	r3, [r7, #12]
 801e058:	601a      	str	r2, [r3, #0]
 801e05a:	68fb      	ldr	r3, [r7, #12]
 801e05c:	3b04      	subs	r3, #4
 801e05e:	60fb      	str	r3, [r7, #12]
 801e060:	68fb      	ldr	r3, [r7, #12]
 801e062:	f06f 0202 	mvn.w	r2, #2
 801e066:	601a      	str	r2, [r3, #0]
 801e068:	68fb      	ldr	r3, [r7, #12]
 801e06a:	3b20      	subs	r3, #32
 801e06c:	60fb      	str	r3, [r7, #12]
 801e06e:	68fb      	ldr	r3, [r7, #12]
 801e070:	4618      	mov	r0, r3
 801e072:	3714      	adds	r7, #20
 801e074:	46bd      	mov	sp, r7
 801e076:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e07a:	4770      	bx	lr
 801e07c:	0801e081 	.word	0x0801e081

0801e080 <prvTaskExitError>:
 801e080:	b480      	push	{r7}
 801e082:	b085      	sub	sp, #20
 801e084:	af00      	add	r7, sp, #0
 801e086:	2300      	movs	r3, #0
 801e088:	607b      	str	r3, [r7, #4]
 801e08a:	4b12      	ldr	r3, [pc, #72]	; (801e0d4 <prvTaskExitError+0x54>)
 801e08c:	681b      	ldr	r3, [r3, #0]
 801e08e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801e092:	d00a      	beq.n	801e0aa <prvTaskExitError+0x2a>
 801e094:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e098:	f383 8811 	msr	BASEPRI, r3
 801e09c:	f3bf 8f6f 	isb	sy
 801e0a0:	f3bf 8f4f 	dsb	sy
 801e0a4:	60fb      	str	r3, [r7, #12]
 801e0a6:	bf00      	nop
 801e0a8:	e7fe      	b.n	801e0a8 <prvTaskExitError+0x28>
 801e0aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e0ae:	f383 8811 	msr	BASEPRI, r3
 801e0b2:	f3bf 8f6f 	isb	sy
 801e0b6:	f3bf 8f4f 	dsb	sy
 801e0ba:	60bb      	str	r3, [r7, #8]
 801e0bc:	bf00      	nop
 801e0be:	bf00      	nop
 801e0c0:	687b      	ldr	r3, [r7, #4]
 801e0c2:	2b00      	cmp	r3, #0
 801e0c4:	d0fc      	beq.n	801e0c0 <prvTaskExitError+0x40>
 801e0c6:	bf00      	nop
 801e0c8:	bf00      	nop
 801e0ca:	3714      	adds	r7, #20
 801e0cc:	46bd      	mov	sp, r7
 801e0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e0d2:	4770      	bx	lr
 801e0d4:	200000e8 	.word	0x200000e8
	...

0801e0e0 <SVC_Handler>:
 801e0e0:	4b07      	ldr	r3, [pc, #28]	; (801e100 <pxCurrentTCBConst2>)
 801e0e2:	6819      	ldr	r1, [r3, #0]
 801e0e4:	6808      	ldr	r0, [r1, #0]
 801e0e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0ea:	f380 8809 	msr	PSP, r0
 801e0ee:	f3bf 8f6f 	isb	sy
 801e0f2:	f04f 0000 	mov.w	r0, #0
 801e0f6:	f380 8811 	msr	BASEPRI, r0
 801e0fa:	4770      	bx	lr
 801e0fc:	f3af 8000 	nop.w

0801e100 <pxCurrentTCBConst2>:
 801e100:	20003a00 	.word	0x20003a00
 801e104:	bf00      	nop
 801e106:	bf00      	nop

0801e108 <prvPortStartFirstTask>:
 801e108:	4808      	ldr	r0, [pc, #32]	; (801e12c <prvPortStartFirstTask+0x24>)
 801e10a:	6800      	ldr	r0, [r0, #0]
 801e10c:	6800      	ldr	r0, [r0, #0]
 801e10e:	f380 8808 	msr	MSP, r0
 801e112:	f04f 0000 	mov.w	r0, #0
 801e116:	f380 8814 	msr	CONTROL, r0
 801e11a:	b662      	cpsie	i
 801e11c:	b661      	cpsie	f
 801e11e:	f3bf 8f4f 	dsb	sy
 801e122:	f3bf 8f6f 	isb	sy
 801e126:	df00      	svc	0
 801e128:	bf00      	nop
 801e12a:	bf00      	nop
 801e12c:	e000ed08 	.word	0xe000ed08

0801e130 <xPortStartScheduler>:
 801e130:	b580      	push	{r7, lr}
 801e132:	b086      	sub	sp, #24
 801e134:	af00      	add	r7, sp, #0
 801e136:	4b46      	ldr	r3, [pc, #280]	; (801e250 <xPortStartScheduler+0x120>)
 801e138:	681b      	ldr	r3, [r3, #0]
 801e13a:	4a46      	ldr	r2, [pc, #280]	; (801e254 <xPortStartScheduler+0x124>)
 801e13c:	4293      	cmp	r3, r2
 801e13e:	d10a      	bne.n	801e156 <xPortStartScheduler+0x26>
 801e140:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e144:	f383 8811 	msr	BASEPRI, r3
 801e148:	f3bf 8f6f 	isb	sy
 801e14c:	f3bf 8f4f 	dsb	sy
 801e150:	613b      	str	r3, [r7, #16]
 801e152:	bf00      	nop
 801e154:	e7fe      	b.n	801e154 <xPortStartScheduler+0x24>
 801e156:	4b3e      	ldr	r3, [pc, #248]	; (801e250 <xPortStartScheduler+0x120>)
 801e158:	681b      	ldr	r3, [r3, #0]
 801e15a:	4a3f      	ldr	r2, [pc, #252]	; (801e258 <xPortStartScheduler+0x128>)
 801e15c:	4293      	cmp	r3, r2
 801e15e:	d10a      	bne.n	801e176 <xPortStartScheduler+0x46>
 801e160:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e164:	f383 8811 	msr	BASEPRI, r3
 801e168:	f3bf 8f6f 	isb	sy
 801e16c:	f3bf 8f4f 	dsb	sy
 801e170:	60fb      	str	r3, [r7, #12]
 801e172:	bf00      	nop
 801e174:	e7fe      	b.n	801e174 <xPortStartScheduler+0x44>
 801e176:	4b39      	ldr	r3, [pc, #228]	; (801e25c <xPortStartScheduler+0x12c>)
 801e178:	617b      	str	r3, [r7, #20]
 801e17a:	697b      	ldr	r3, [r7, #20]
 801e17c:	781b      	ldrb	r3, [r3, #0]
 801e17e:	b2db      	uxtb	r3, r3
 801e180:	607b      	str	r3, [r7, #4]
 801e182:	697b      	ldr	r3, [r7, #20]
 801e184:	22ff      	movs	r2, #255	; 0xff
 801e186:	701a      	strb	r2, [r3, #0]
 801e188:	697b      	ldr	r3, [r7, #20]
 801e18a:	781b      	ldrb	r3, [r3, #0]
 801e18c:	b2db      	uxtb	r3, r3
 801e18e:	70fb      	strb	r3, [r7, #3]
 801e190:	78fb      	ldrb	r3, [r7, #3]
 801e192:	b2db      	uxtb	r3, r3
 801e194:	f003 0350 	and.w	r3, r3, #80	; 0x50
 801e198:	b2da      	uxtb	r2, r3
 801e19a:	4b31      	ldr	r3, [pc, #196]	; (801e260 <xPortStartScheduler+0x130>)
 801e19c:	701a      	strb	r2, [r3, #0]
 801e19e:	4b31      	ldr	r3, [pc, #196]	; (801e264 <xPortStartScheduler+0x134>)
 801e1a0:	2207      	movs	r2, #7
 801e1a2:	601a      	str	r2, [r3, #0]
 801e1a4:	e009      	b.n	801e1ba <xPortStartScheduler+0x8a>
 801e1a6:	4b2f      	ldr	r3, [pc, #188]	; (801e264 <xPortStartScheduler+0x134>)
 801e1a8:	681b      	ldr	r3, [r3, #0]
 801e1aa:	3b01      	subs	r3, #1
 801e1ac:	4a2d      	ldr	r2, [pc, #180]	; (801e264 <xPortStartScheduler+0x134>)
 801e1ae:	6013      	str	r3, [r2, #0]
 801e1b0:	78fb      	ldrb	r3, [r7, #3]
 801e1b2:	b2db      	uxtb	r3, r3
 801e1b4:	005b      	lsls	r3, r3, #1
 801e1b6:	b2db      	uxtb	r3, r3
 801e1b8:	70fb      	strb	r3, [r7, #3]
 801e1ba:	78fb      	ldrb	r3, [r7, #3]
 801e1bc:	b2db      	uxtb	r3, r3
 801e1be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801e1c2:	2b80      	cmp	r3, #128	; 0x80
 801e1c4:	d0ef      	beq.n	801e1a6 <xPortStartScheduler+0x76>
 801e1c6:	4b27      	ldr	r3, [pc, #156]	; (801e264 <xPortStartScheduler+0x134>)
 801e1c8:	681b      	ldr	r3, [r3, #0]
 801e1ca:	f1c3 0307 	rsb	r3, r3, #7
 801e1ce:	2b04      	cmp	r3, #4
 801e1d0:	d00a      	beq.n	801e1e8 <xPortStartScheduler+0xb8>
 801e1d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e1d6:	f383 8811 	msr	BASEPRI, r3
 801e1da:	f3bf 8f6f 	isb	sy
 801e1de:	f3bf 8f4f 	dsb	sy
 801e1e2:	60bb      	str	r3, [r7, #8]
 801e1e4:	bf00      	nop
 801e1e6:	e7fe      	b.n	801e1e6 <xPortStartScheduler+0xb6>
 801e1e8:	4b1e      	ldr	r3, [pc, #120]	; (801e264 <xPortStartScheduler+0x134>)
 801e1ea:	681b      	ldr	r3, [r3, #0]
 801e1ec:	021b      	lsls	r3, r3, #8
 801e1ee:	4a1d      	ldr	r2, [pc, #116]	; (801e264 <xPortStartScheduler+0x134>)
 801e1f0:	6013      	str	r3, [r2, #0]
 801e1f2:	4b1c      	ldr	r3, [pc, #112]	; (801e264 <xPortStartScheduler+0x134>)
 801e1f4:	681b      	ldr	r3, [r3, #0]
 801e1f6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 801e1fa:	4a1a      	ldr	r2, [pc, #104]	; (801e264 <xPortStartScheduler+0x134>)
 801e1fc:	6013      	str	r3, [r2, #0]
 801e1fe:	687b      	ldr	r3, [r7, #4]
 801e200:	b2da      	uxtb	r2, r3
 801e202:	697b      	ldr	r3, [r7, #20]
 801e204:	701a      	strb	r2, [r3, #0]
 801e206:	4b18      	ldr	r3, [pc, #96]	; (801e268 <xPortStartScheduler+0x138>)
 801e208:	681b      	ldr	r3, [r3, #0]
 801e20a:	4a17      	ldr	r2, [pc, #92]	; (801e268 <xPortStartScheduler+0x138>)
 801e20c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801e210:	6013      	str	r3, [r2, #0]
 801e212:	4b15      	ldr	r3, [pc, #84]	; (801e268 <xPortStartScheduler+0x138>)
 801e214:	681b      	ldr	r3, [r3, #0]
 801e216:	4a14      	ldr	r2, [pc, #80]	; (801e268 <xPortStartScheduler+0x138>)
 801e218:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 801e21c:	6013      	str	r3, [r2, #0]
 801e21e:	f000 f8dd 	bl	801e3dc <vPortSetupTimerInterrupt>
 801e222:	4b12      	ldr	r3, [pc, #72]	; (801e26c <xPortStartScheduler+0x13c>)
 801e224:	2200      	movs	r2, #0
 801e226:	601a      	str	r2, [r3, #0]
 801e228:	f000 f8fc 	bl	801e424 <vPortEnableVFP>
 801e22c:	4b10      	ldr	r3, [pc, #64]	; (801e270 <xPortStartScheduler+0x140>)
 801e22e:	681b      	ldr	r3, [r3, #0]
 801e230:	4a0f      	ldr	r2, [pc, #60]	; (801e270 <xPortStartScheduler+0x140>)
 801e232:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 801e236:	6013      	str	r3, [r2, #0]
 801e238:	f7ff ff66 	bl	801e108 <prvPortStartFirstTask>
 801e23c:	f7fe fe40 	bl	801cec0 <vTaskSwitchContext>
 801e240:	f7ff ff1e 	bl	801e080 <prvTaskExitError>
 801e244:	2300      	movs	r3, #0
 801e246:	4618      	mov	r0, r3
 801e248:	3718      	adds	r7, #24
 801e24a:	46bd      	mov	sp, r7
 801e24c:	bd80      	pop	{r7, pc}
 801e24e:	bf00      	nop
 801e250:	e000ed00 	.word	0xe000ed00
 801e254:	410fc271 	.word	0x410fc271
 801e258:	410fc270 	.word	0x410fc270
 801e25c:	e000e400 	.word	0xe000e400
 801e260:	20003d00 	.word	0x20003d00
 801e264:	20003d04 	.word	0x20003d04
 801e268:	e000ed20 	.word	0xe000ed20
 801e26c:	200000e8 	.word	0x200000e8
 801e270:	e000ef34 	.word	0xe000ef34

0801e274 <vPortEnterCritical>:
 801e274:	b480      	push	{r7}
 801e276:	b083      	sub	sp, #12
 801e278:	af00      	add	r7, sp, #0
 801e27a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e27e:	f383 8811 	msr	BASEPRI, r3
 801e282:	f3bf 8f6f 	isb	sy
 801e286:	f3bf 8f4f 	dsb	sy
 801e28a:	607b      	str	r3, [r7, #4]
 801e28c:	bf00      	nop
 801e28e:	4b0f      	ldr	r3, [pc, #60]	; (801e2cc <vPortEnterCritical+0x58>)
 801e290:	681b      	ldr	r3, [r3, #0]
 801e292:	3301      	adds	r3, #1
 801e294:	4a0d      	ldr	r2, [pc, #52]	; (801e2cc <vPortEnterCritical+0x58>)
 801e296:	6013      	str	r3, [r2, #0]
 801e298:	4b0c      	ldr	r3, [pc, #48]	; (801e2cc <vPortEnterCritical+0x58>)
 801e29a:	681b      	ldr	r3, [r3, #0]
 801e29c:	2b01      	cmp	r3, #1
 801e29e:	d10f      	bne.n	801e2c0 <vPortEnterCritical+0x4c>
 801e2a0:	4b0b      	ldr	r3, [pc, #44]	; (801e2d0 <vPortEnterCritical+0x5c>)
 801e2a2:	681b      	ldr	r3, [r3, #0]
 801e2a4:	b2db      	uxtb	r3, r3
 801e2a6:	2b00      	cmp	r3, #0
 801e2a8:	d00a      	beq.n	801e2c0 <vPortEnterCritical+0x4c>
 801e2aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e2ae:	f383 8811 	msr	BASEPRI, r3
 801e2b2:	f3bf 8f6f 	isb	sy
 801e2b6:	f3bf 8f4f 	dsb	sy
 801e2ba:	603b      	str	r3, [r7, #0]
 801e2bc:	bf00      	nop
 801e2be:	e7fe      	b.n	801e2be <vPortEnterCritical+0x4a>
 801e2c0:	bf00      	nop
 801e2c2:	370c      	adds	r7, #12
 801e2c4:	46bd      	mov	sp, r7
 801e2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e2ca:	4770      	bx	lr
 801e2cc:	200000e8 	.word	0x200000e8
 801e2d0:	e000ed04 	.word	0xe000ed04

0801e2d4 <vPortExitCritical>:
 801e2d4:	b480      	push	{r7}
 801e2d6:	b083      	sub	sp, #12
 801e2d8:	af00      	add	r7, sp, #0
 801e2da:	4b12      	ldr	r3, [pc, #72]	; (801e324 <vPortExitCritical+0x50>)
 801e2dc:	681b      	ldr	r3, [r3, #0]
 801e2de:	2b00      	cmp	r3, #0
 801e2e0:	d10a      	bne.n	801e2f8 <vPortExitCritical+0x24>
 801e2e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e2e6:	f383 8811 	msr	BASEPRI, r3
 801e2ea:	f3bf 8f6f 	isb	sy
 801e2ee:	f3bf 8f4f 	dsb	sy
 801e2f2:	607b      	str	r3, [r7, #4]
 801e2f4:	bf00      	nop
 801e2f6:	e7fe      	b.n	801e2f6 <vPortExitCritical+0x22>
 801e2f8:	4b0a      	ldr	r3, [pc, #40]	; (801e324 <vPortExitCritical+0x50>)
 801e2fa:	681b      	ldr	r3, [r3, #0]
 801e2fc:	3b01      	subs	r3, #1
 801e2fe:	4a09      	ldr	r2, [pc, #36]	; (801e324 <vPortExitCritical+0x50>)
 801e300:	6013      	str	r3, [r2, #0]
 801e302:	4b08      	ldr	r3, [pc, #32]	; (801e324 <vPortExitCritical+0x50>)
 801e304:	681b      	ldr	r3, [r3, #0]
 801e306:	2b00      	cmp	r3, #0
 801e308:	d105      	bne.n	801e316 <vPortExitCritical+0x42>
 801e30a:	2300      	movs	r3, #0
 801e30c:	603b      	str	r3, [r7, #0]
 801e30e:	683b      	ldr	r3, [r7, #0]
 801e310:	f383 8811 	msr	BASEPRI, r3
 801e314:	bf00      	nop
 801e316:	bf00      	nop
 801e318:	370c      	adds	r7, #12
 801e31a:	46bd      	mov	sp, r7
 801e31c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e320:	4770      	bx	lr
 801e322:	bf00      	nop
 801e324:	200000e8 	.word	0x200000e8
	...

0801e330 <PendSV_Handler>:
 801e330:	f3ef 8009 	mrs	r0, PSP
 801e334:	f3bf 8f6f 	isb	sy
 801e338:	4b15      	ldr	r3, [pc, #84]	; (801e390 <pxCurrentTCBConst>)
 801e33a:	681a      	ldr	r2, [r3, #0]
 801e33c:	f01e 0f10 	tst.w	lr, #16
 801e340:	bf08      	it	eq
 801e342:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 801e346:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e34a:	6010      	str	r0, [r2, #0]
 801e34c:	e92d 0009 	stmdb	sp!, {r0, r3}
 801e350:	f04f 0050 	mov.w	r0, #80	; 0x50
 801e354:	f380 8811 	msr	BASEPRI, r0
 801e358:	f3bf 8f4f 	dsb	sy
 801e35c:	f3bf 8f6f 	isb	sy
 801e360:	f7fe fdae 	bl	801cec0 <vTaskSwitchContext>
 801e364:	f04f 0000 	mov.w	r0, #0
 801e368:	f380 8811 	msr	BASEPRI, r0
 801e36c:	bc09      	pop	{r0, r3}
 801e36e:	6819      	ldr	r1, [r3, #0]
 801e370:	6808      	ldr	r0, [r1, #0]
 801e372:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e376:	f01e 0f10 	tst.w	lr, #16
 801e37a:	bf08      	it	eq
 801e37c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 801e380:	f380 8809 	msr	PSP, r0
 801e384:	f3bf 8f6f 	isb	sy
 801e388:	4770      	bx	lr
 801e38a:	bf00      	nop
 801e38c:	f3af 8000 	nop.w

0801e390 <pxCurrentTCBConst>:
 801e390:	20003a00 	.word	0x20003a00
 801e394:	bf00      	nop
 801e396:	bf00      	nop

0801e398 <SysTick_Handler>:
 801e398:	b580      	push	{r7, lr}
 801e39a:	b082      	sub	sp, #8
 801e39c:	af00      	add	r7, sp, #0
 801e39e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e3a2:	f383 8811 	msr	BASEPRI, r3
 801e3a6:	f3bf 8f6f 	isb	sy
 801e3aa:	f3bf 8f4f 	dsb	sy
 801e3ae:	607b      	str	r3, [r7, #4]
 801e3b0:	bf00      	nop
 801e3b2:	f7fe fccd 	bl	801cd50 <xTaskIncrementTick>
 801e3b6:	4603      	mov	r3, r0
 801e3b8:	2b00      	cmp	r3, #0
 801e3ba:	d003      	beq.n	801e3c4 <SysTick_Handler+0x2c>
 801e3bc:	4b06      	ldr	r3, [pc, #24]	; (801e3d8 <SysTick_Handler+0x40>)
 801e3be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801e3c2:	601a      	str	r2, [r3, #0]
 801e3c4:	2300      	movs	r3, #0
 801e3c6:	603b      	str	r3, [r7, #0]
 801e3c8:	683b      	ldr	r3, [r7, #0]
 801e3ca:	f383 8811 	msr	BASEPRI, r3
 801e3ce:	bf00      	nop
 801e3d0:	bf00      	nop
 801e3d2:	3708      	adds	r7, #8
 801e3d4:	46bd      	mov	sp, r7
 801e3d6:	bd80      	pop	{r7, pc}
 801e3d8:	e000ed04 	.word	0xe000ed04

0801e3dc <vPortSetupTimerInterrupt>:
 801e3dc:	b480      	push	{r7}
 801e3de:	af00      	add	r7, sp, #0
 801e3e0:	4b0b      	ldr	r3, [pc, #44]	; (801e410 <vPortSetupTimerInterrupt+0x34>)
 801e3e2:	2200      	movs	r2, #0
 801e3e4:	601a      	str	r2, [r3, #0]
 801e3e6:	4b0b      	ldr	r3, [pc, #44]	; (801e414 <vPortSetupTimerInterrupt+0x38>)
 801e3e8:	2200      	movs	r2, #0
 801e3ea:	601a      	str	r2, [r3, #0]
 801e3ec:	4b0a      	ldr	r3, [pc, #40]	; (801e418 <vPortSetupTimerInterrupt+0x3c>)
 801e3ee:	681b      	ldr	r3, [r3, #0]
 801e3f0:	4a0a      	ldr	r2, [pc, #40]	; (801e41c <vPortSetupTimerInterrupt+0x40>)
 801e3f2:	fba2 2303 	umull	r2, r3, r2, r3
 801e3f6:	099b      	lsrs	r3, r3, #6
 801e3f8:	4a09      	ldr	r2, [pc, #36]	; (801e420 <vPortSetupTimerInterrupt+0x44>)
 801e3fa:	3b01      	subs	r3, #1
 801e3fc:	6013      	str	r3, [r2, #0]
 801e3fe:	4b04      	ldr	r3, [pc, #16]	; (801e410 <vPortSetupTimerInterrupt+0x34>)
 801e400:	2207      	movs	r2, #7
 801e402:	601a      	str	r2, [r3, #0]
 801e404:	bf00      	nop
 801e406:	46bd      	mov	sp, r7
 801e408:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e40c:	4770      	bx	lr
 801e40e:	bf00      	nop
 801e410:	e000e010 	.word	0xe000e010
 801e414:	e000e018 	.word	0xe000e018
 801e418:	20000004 	.word	0x20000004
 801e41c:	10624dd3 	.word	0x10624dd3
 801e420:	e000e014 	.word	0xe000e014

0801e424 <vPortEnableVFP>:
 801e424:	f8df 000c 	ldr.w	r0, [pc, #12]	; 801e434 <vPortEnableVFP+0x10>
 801e428:	6801      	ldr	r1, [r0, #0]
 801e42a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801e42e:	6001      	str	r1, [r0, #0]
 801e430:	4770      	bx	lr
 801e432:	bf00      	nop
 801e434:	e000ed88 	.word	0xe000ed88

0801e438 <vPortValidateInterruptPriority>:
 801e438:	b480      	push	{r7}
 801e43a:	b085      	sub	sp, #20
 801e43c:	af00      	add	r7, sp, #0
 801e43e:	f3ef 8305 	mrs	r3, IPSR
 801e442:	60fb      	str	r3, [r7, #12]
 801e444:	68fb      	ldr	r3, [r7, #12]
 801e446:	2b0f      	cmp	r3, #15
 801e448:	d914      	bls.n	801e474 <vPortValidateInterruptPriority+0x3c>
 801e44a:	4a17      	ldr	r2, [pc, #92]	; (801e4a8 <vPortValidateInterruptPriority+0x70>)
 801e44c:	68fb      	ldr	r3, [r7, #12]
 801e44e:	4413      	add	r3, r2
 801e450:	781b      	ldrb	r3, [r3, #0]
 801e452:	72fb      	strb	r3, [r7, #11]
 801e454:	4b15      	ldr	r3, [pc, #84]	; (801e4ac <vPortValidateInterruptPriority+0x74>)
 801e456:	781b      	ldrb	r3, [r3, #0]
 801e458:	7afa      	ldrb	r2, [r7, #11]
 801e45a:	429a      	cmp	r2, r3
 801e45c:	d20a      	bcs.n	801e474 <vPortValidateInterruptPriority+0x3c>
 801e45e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e462:	f383 8811 	msr	BASEPRI, r3
 801e466:	f3bf 8f6f 	isb	sy
 801e46a:	f3bf 8f4f 	dsb	sy
 801e46e:	607b      	str	r3, [r7, #4]
 801e470:	bf00      	nop
 801e472:	e7fe      	b.n	801e472 <vPortValidateInterruptPriority+0x3a>
 801e474:	4b0e      	ldr	r3, [pc, #56]	; (801e4b0 <vPortValidateInterruptPriority+0x78>)
 801e476:	681b      	ldr	r3, [r3, #0]
 801e478:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 801e47c:	4b0d      	ldr	r3, [pc, #52]	; (801e4b4 <vPortValidateInterruptPriority+0x7c>)
 801e47e:	681b      	ldr	r3, [r3, #0]
 801e480:	429a      	cmp	r2, r3
 801e482:	d90a      	bls.n	801e49a <vPortValidateInterruptPriority+0x62>
 801e484:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e488:	f383 8811 	msr	BASEPRI, r3
 801e48c:	f3bf 8f6f 	isb	sy
 801e490:	f3bf 8f4f 	dsb	sy
 801e494:	603b      	str	r3, [r7, #0]
 801e496:	bf00      	nop
 801e498:	e7fe      	b.n	801e498 <vPortValidateInterruptPriority+0x60>
 801e49a:	bf00      	nop
 801e49c:	3714      	adds	r7, #20
 801e49e:	46bd      	mov	sp, r7
 801e4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e4a4:	4770      	bx	lr
 801e4a6:	bf00      	nop
 801e4a8:	e000e3f0 	.word	0xe000e3f0
 801e4ac:	20003d00 	.word	0x20003d00
 801e4b0:	e000ed0c 	.word	0xe000ed0c
 801e4b4:	20003d04 	.word	0x20003d04

0801e4b8 <pvPortMalloc>:
 801e4b8:	b580      	push	{r7, lr}
 801e4ba:	b08a      	sub	sp, #40	; 0x28
 801e4bc:	af00      	add	r7, sp, #0
 801e4be:	6078      	str	r0, [r7, #4]
 801e4c0:	2300      	movs	r3, #0
 801e4c2:	61fb      	str	r3, [r7, #28]
 801e4c4:	f7fe fb8a 	bl	801cbdc <vTaskSuspendAll>
 801e4c8:	4b5b      	ldr	r3, [pc, #364]	; (801e638 <pvPortMalloc+0x180>)
 801e4ca:	681b      	ldr	r3, [r3, #0]
 801e4cc:	2b00      	cmp	r3, #0
 801e4ce:	d101      	bne.n	801e4d4 <pvPortMalloc+0x1c>
 801e4d0:	f000 f920 	bl	801e714 <prvHeapInit>
 801e4d4:	4b59      	ldr	r3, [pc, #356]	; (801e63c <pvPortMalloc+0x184>)
 801e4d6:	681a      	ldr	r2, [r3, #0]
 801e4d8:	687b      	ldr	r3, [r7, #4]
 801e4da:	4013      	ands	r3, r2
 801e4dc:	2b00      	cmp	r3, #0
 801e4de:	f040 8093 	bne.w	801e608 <pvPortMalloc+0x150>
 801e4e2:	687b      	ldr	r3, [r7, #4]
 801e4e4:	2b00      	cmp	r3, #0
 801e4e6:	d01d      	beq.n	801e524 <pvPortMalloc+0x6c>
 801e4e8:	2208      	movs	r2, #8
 801e4ea:	687b      	ldr	r3, [r7, #4]
 801e4ec:	4413      	add	r3, r2
 801e4ee:	607b      	str	r3, [r7, #4]
 801e4f0:	687b      	ldr	r3, [r7, #4]
 801e4f2:	f003 0307 	and.w	r3, r3, #7
 801e4f6:	2b00      	cmp	r3, #0
 801e4f8:	d014      	beq.n	801e524 <pvPortMalloc+0x6c>
 801e4fa:	687b      	ldr	r3, [r7, #4]
 801e4fc:	f023 0307 	bic.w	r3, r3, #7
 801e500:	3308      	adds	r3, #8
 801e502:	607b      	str	r3, [r7, #4]
 801e504:	687b      	ldr	r3, [r7, #4]
 801e506:	f003 0307 	and.w	r3, r3, #7
 801e50a:	2b00      	cmp	r3, #0
 801e50c:	d00a      	beq.n	801e524 <pvPortMalloc+0x6c>
 801e50e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e512:	f383 8811 	msr	BASEPRI, r3
 801e516:	f3bf 8f6f 	isb	sy
 801e51a:	f3bf 8f4f 	dsb	sy
 801e51e:	617b      	str	r3, [r7, #20]
 801e520:	bf00      	nop
 801e522:	e7fe      	b.n	801e522 <pvPortMalloc+0x6a>
 801e524:	687b      	ldr	r3, [r7, #4]
 801e526:	2b00      	cmp	r3, #0
 801e528:	d06e      	beq.n	801e608 <pvPortMalloc+0x150>
 801e52a:	4b45      	ldr	r3, [pc, #276]	; (801e640 <pvPortMalloc+0x188>)
 801e52c:	681b      	ldr	r3, [r3, #0]
 801e52e:	687a      	ldr	r2, [r7, #4]
 801e530:	429a      	cmp	r2, r3
 801e532:	d869      	bhi.n	801e608 <pvPortMalloc+0x150>
 801e534:	4b43      	ldr	r3, [pc, #268]	; (801e644 <pvPortMalloc+0x18c>)
 801e536:	623b      	str	r3, [r7, #32]
 801e538:	4b42      	ldr	r3, [pc, #264]	; (801e644 <pvPortMalloc+0x18c>)
 801e53a:	681b      	ldr	r3, [r3, #0]
 801e53c:	627b      	str	r3, [r7, #36]	; 0x24
 801e53e:	e004      	b.n	801e54a <pvPortMalloc+0x92>
 801e540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e542:	623b      	str	r3, [r7, #32]
 801e544:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e546:	681b      	ldr	r3, [r3, #0]
 801e548:	627b      	str	r3, [r7, #36]	; 0x24
 801e54a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e54c:	685b      	ldr	r3, [r3, #4]
 801e54e:	687a      	ldr	r2, [r7, #4]
 801e550:	429a      	cmp	r2, r3
 801e552:	d903      	bls.n	801e55c <pvPortMalloc+0xa4>
 801e554:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e556:	681b      	ldr	r3, [r3, #0]
 801e558:	2b00      	cmp	r3, #0
 801e55a:	d1f1      	bne.n	801e540 <pvPortMalloc+0x88>
 801e55c:	4b36      	ldr	r3, [pc, #216]	; (801e638 <pvPortMalloc+0x180>)
 801e55e:	681b      	ldr	r3, [r3, #0]
 801e560:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801e562:	429a      	cmp	r2, r3
 801e564:	d050      	beq.n	801e608 <pvPortMalloc+0x150>
 801e566:	6a3b      	ldr	r3, [r7, #32]
 801e568:	681b      	ldr	r3, [r3, #0]
 801e56a:	2208      	movs	r2, #8
 801e56c:	4413      	add	r3, r2
 801e56e:	61fb      	str	r3, [r7, #28]
 801e570:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e572:	681a      	ldr	r2, [r3, #0]
 801e574:	6a3b      	ldr	r3, [r7, #32]
 801e576:	601a      	str	r2, [r3, #0]
 801e578:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e57a:	685a      	ldr	r2, [r3, #4]
 801e57c:	687b      	ldr	r3, [r7, #4]
 801e57e:	1ad2      	subs	r2, r2, r3
 801e580:	2308      	movs	r3, #8
 801e582:	005b      	lsls	r3, r3, #1
 801e584:	429a      	cmp	r2, r3
 801e586:	d91f      	bls.n	801e5c8 <pvPortMalloc+0x110>
 801e588:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801e58a:	687b      	ldr	r3, [r7, #4]
 801e58c:	4413      	add	r3, r2
 801e58e:	61bb      	str	r3, [r7, #24]
 801e590:	69bb      	ldr	r3, [r7, #24]
 801e592:	f003 0307 	and.w	r3, r3, #7
 801e596:	2b00      	cmp	r3, #0
 801e598:	d00a      	beq.n	801e5b0 <pvPortMalloc+0xf8>
 801e59a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e59e:	f383 8811 	msr	BASEPRI, r3
 801e5a2:	f3bf 8f6f 	isb	sy
 801e5a6:	f3bf 8f4f 	dsb	sy
 801e5aa:	613b      	str	r3, [r7, #16]
 801e5ac:	bf00      	nop
 801e5ae:	e7fe      	b.n	801e5ae <pvPortMalloc+0xf6>
 801e5b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5b2:	685a      	ldr	r2, [r3, #4]
 801e5b4:	687b      	ldr	r3, [r7, #4]
 801e5b6:	1ad2      	subs	r2, r2, r3
 801e5b8:	69bb      	ldr	r3, [r7, #24]
 801e5ba:	605a      	str	r2, [r3, #4]
 801e5bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5be:	687a      	ldr	r2, [r7, #4]
 801e5c0:	605a      	str	r2, [r3, #4]
 801e5c2:	69b8      	ldr	r0, [r7, #24]
 801e5c4:	f000 f908 	bl	801e7d8 <prvInsertBlockIntoFreeList>
 801e5c8:	4b1d      	ldr	r3, [pc, #116]	; (801e640 <pvPortMalloc+0x188>)
 801e5ca:	681a      	ldr	r2, [r3, #0]
 801e5cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5ce:	685b      	ldr	r3, [r3, #4]
 801e5d0:	1ad3      	subs	r3, r2, r3
 801e5d2:	4a1b      	ldr	r2, [pc, #108]	; (801e640 <pvPortMalloc+0x188>)
 801e5d4:	6013      	str	r3, [r2, #0]
 801e5d6:	4b1a      	ldr	r3, [pc, #104]	; (801e640 <pvPortMalloc+0x188>)
 801e5d8:	681a      	ldr	r2, [r3, #0]
 801e5da:	4b1b      	ldr	r3, [pc, #108]	; (801e648 <pvPortMalloc+0x190>)
 801e5dc:	681b      	ldr	r3, [r3, #0]
 801e5de:	429a      	cmp	r2, r3
 801e5e0:	d203      	bcs.n	801e5ea <pvPortMalloc+0x132>
 801e5e2:	4b17      	ldr	r3, [pc, #92]	; (801e640 <pvPortMalloc+0x188>)
 801e5e4:	681b      	ldr	r3, [r3, #0]
 801e5e6:	4a18      	ldr	r2, [pc, #96]	; (801e648 <pvPortMalloc+0x190>)
 801e5e8:	6013      	str	r3, [r2, #0]
 801e5ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5ec:	685a      	ldr	r2, [r3, #4]
 801e5ee:	4b13      	ldr	r3, [pc, #76]	; (801e63c <pvPortMalloc+0x184>)
 801e5f0:	681b      	ldr	r3, [r3, #0]
 801e5f2:	431a      	orrs	r2, r3
 801e5f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5f6:	605a      	str	r2, [r3, #4]
 801e5f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e5fa:	2200      	movs	r2, #0
 801e5fc:	601a      	str	r2, [r3, #0]
 801e5fe:	4b13      	ldr	r3, [pc, #76]	; (801e64c <pvPortMalloc+0x194>)
 801e600:	681b      	ldr	r3, [r3, #0]
 801e602:	3301      	adds	r3, #1
 801e604:	4a11      	ldr	r2, [pc, #68]	; (801e64c <pvPortMalloc+0x194>)
 801e606:	6013      	str	r3, [r2, #0]
 801e608:	f7fe faf6 	bl	801cbf8 <xTaskResumeAll>
 801e60c:	69fb      	ldr	r3, [r7, #28]
 801e60e:	f003 0307 	and.w	r3, r3, #7
 801e612:	2b00      	cmp	r3, #0
 801e614:	d00a      	beq.n	801e62c <pvPortMalloc+0x174>
 801e616:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e61a:	f383 8811 	msr	BASEPRI, r3
 801e61e:	f3bf 8f6f 	isb	sy
 801e622:	f3bf 8f4f 	dsb	sy
 801e626:	60fb      	str	r3, [r7, #12]
 801e628:	bf00      	nop
 801e62a:	e7fe      	b.n	801e62a <pvPortMalloc+0x172>
 801e62c:	69fb      	ldr	r3, [r7, #28]
 801e62e:	4618      	mov	r0, r3
 801e630:	3728      	adds	r7, #40	; 0x28
 801e632:	46bd      	mov	sp, r7
 801e634:	bd80      	pop	{r7, pc}
 801e636:	bf00      	nop
 801e638:	2000d950 	.word	0x2000d950
 801e63c:	2000d964 	.word	0x2000d964
 801e640:	2000d954 	.word	0x2000d954
 801e644:	2000d948 	.word	0x2000d948
 801e648:	2000d958 	.word	0x2000d958
 801e64c:	2000d95c 	.word	0x2000d95c

0801e650 <vPortFree>:
 801e650:	b580      	push	{r7, lr}
 801e652:	b086      	sub	sp, #24
 801e654:	af00      	add	r7, sp, #0
 801e656:	6078      	str	r0, [r7, #4]
 801e658:	687b      	ldr	r3, [r7, #4]
 801e65a:	617b      	str	r3, [r7, #20]
 801e65c:	687b      	ldr	r3, [r7, #4]
 801e65e:	2b00      	cmp	r3, #0
 801e660:	d04d      	beq.n	801e6fe <vPortFree+0xae>
 801e662:	2308      	movs	r3, #8
 801e664:	425b      	negs	r3, r3
 801e666:	697a      	ldr	r2, [r7, #20]
 801e668:	4413      	add	r3, r2
 801e66a:	617b      	str	r3, [r7, #20]
 801e66c:	697b      	ldr	r3, [r7, #20]
 801e66e:	613b      	str	r3, [r7, #16]
 801e670:	693b      	ldr	r3, [r7, #16]
 801e672:	685a      	ldr	r2, [r3, #4]
 801e674:	4b24      	ldr	r3, [pc, #144]	; (801e708 <vPortFree+0xb8>)
 801e676:	681b      	ldr	r3, [r3, #0]
 801e678:	4013      	ands	r3, r2
 801e67a:	2b00      	cmp	r3, #0
 801e67c:	d10a      	bne.n	801e694 <vPortFree+0x44>
 801e67e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e682:	f383 8811 	msr	BASEPRI, r3
 801e686:	f3bf 8f6f 	isb	sy
 801e68a:	f3bf 8f4f 	dsb	sy
 801e68e:	60fb      	str	r3, [r7, #12]
 801e690:	bf00      	nop
 801e692:	e7fe      	b.n	801e692 <vPortFree+0x42>
 801e694:	693b      	ldr	r3, [r7, #16]
 801e696:	681b      	ldr	r3, [r3, #0]
 801e698:	2b00      	cmp	r3, #0
 801e69a:	d00a      	beq.n	801e6b2 <vPortFree+0x62>
 801e69c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e6a0:	f383 8811 	msr	BASEPRI, r3
 801e6a4:	f3bf 8f6f 	isb	sy
 801e6a8:	f3bf 8f4f 	dsb	sy
 801e6ac:	60bb      	str	r3, [r7, #8]
 801e6ae:	bf00      	nop
 801e6b0:	e7fe      	b.n	801e6b0 <vPortFree+0x60>
 801e6b2:	693b      	ldr	r3, [r7, #16]
 801e6b4:	685a      	ldr	r2, [r3, #4]
 801e6b6:	4b14      	ldr	r3, [pc, #80]	; (801e708 <vPortFree+0xb8>)
 801e6b8:	681b      	ldr	r3, [r3, #0]
 801e6ba:	4013      	ands	r3, r2
 801e6bc:	2b00      	cmp	r3, #0
 801e6be:	d01e      	beq.n	801e6fe <vPortFree+0xae>
 801e6c0:	693b      	ldr	r3, [r7, #16]
 801e6c2:	681b      	ldr	r3, [r3, #0]
 801e6c4:	2b00      	cmp	r3, #0
 801e6c6:	d11a      	bne.n	801e6fe <vPortFree+0xae>
 801e6c8:	693b      	ldr	r3, [r7, #16]
 801e6ca:	685a      	ldr	r2, [r3, #4]
 801e6cc:	4b0e      	ldr	r3, [pc, #56]	; (801e708 <vPortFree+0xb8>)
 801e6ce:	681b      	ldr	r3, [r3, #0]
 801e6d0:	43db      	mvns	r3, r3
 801e6d2:	401a      	ands	r2, r3
 801e6d4:	693b      	ldr	r3, [r7, #16]
 801e6d6:	605a      	str	r2, [r3, #4]
 801e6d8:	f7fe fa80 	bl	801cbdc <vTaskSuspendAll>
 801e6dc:	693b      	ldr	r3, [r7, #16]
 801e6de:	685a      	ldr	r2, [r3, #4]
 801e6e0:	4b0a      	ldr	r3, [pc, #40]	; (801e70c <vPortFree+0xbc>)
 801e6e2:	681b      	ldr	r3, [r3, #0]
 801e6e4:	4413      	add	r3, r2
 801e6e6:	4a09      	ldr	r2, [pc, #36]	; (801e70c <vPortFree+0xbc>)
 801e6e8:	6013      	str	r3, [r2, #0]
 801e6ea:	6938      	ldr	r0, [r7, #16]
 801e6ec:	f000 f874 	bl	801e7d8 <prvInsertBlockIntoFreeList>
 801e6f0:	4b07      	ldr	r3, [pc, #28]	; (801e710 <vPortFree+0xc0>)
 801e6f2:	681b      	ldr	r3, [r3, #0]
 801e6f4:	3301      	adds	r3, #1
 801e6f6:	4a06      	ldr	r2, [pc, #24]	; (801e710 <vPortFree+0xc0>)
 801e6f8:	6013      	str	r3, [r2, #0]
 801e6fa:	f7fe fa7d 	bl	801cbf8 <xTaskResumeAll>
 801e6fe:	bf00      	nop
 801e700:	3718      	adds	r7, #24
 801e702:	46bd      	mov	sp, r7
 801e704:	bd80      	pop	{r7, pc}
 801e706:	bf00      	nop
 801e708:	2000d964 	.word	0x2000d964
 801e70c:	2000d954 	.word	0x2000d954
 801e710:	2000d960 	.word	0x2000d960

0801e714 <prvHeapInit>:
 801e714:	b480      	push	{r7}
 801e716:	b085      	sub	sp, #20
 801e718:	af00      	add	r7, sp, #0
 801e71a:	f649 4340 	movw	r3, #40000	; 0x9c40
 801e71e:	60bb      	str	r3, [r7, #8]
 801e720:	4b27      	ldr	r3, [pc, #156]	; (801e7c0 <prvHeapInit+0xac>)
 801e722:	60fb      	str	r3, [r7, #12]
 801e724:	68fb      	ldr	r3, [r7, #12]
 801e726:	f003 0307 	and.w	r3, r3, #7
 801e72a:	2b00      	cmp	r3, #0
 801e72c:	d00c      	beq.n	801e748 <prvHeapInit+0x34>
 801e72e:	68fb      	ldr	r3, [r7, #12]
 801e730:	3307      	adds	r3, #7
 801e732:	60fb      	str	r3, [r7, #12]
 801e734:	68fb      	ldr	r3, [r7, #12]
 801e736:	f023 0307 	bic.w	r3, r3, #7
 801e73a:	60fb      	str	r3, [r7, #12]
 801e73c:	68ba      	ldr	r2, [r7, #8]
 801e73e:	68fb      	ldr	r3, [r7, #12]
 801e740:	1ad3      	subs	r3, r2, r3
 801e742:	4a1f      	ldr	r2, [pc, #124]	; (801e7c0 <prvHeapInit+0xac>)
 801e744:	4413      	add	r3, r2
 801e746:	60bb      	str	r3, [r7, #8]
 801e748:	68fb      	ldr	r3, [r7, #12]
 801e74a:	607b      	str	r3, [r7, #4]
 801e74c:	4a1d      	ldr	r2, [pc, #116]	; (801e7c4 <prvHeapInit+0xb0>)
 801e74e:	687b      	ldr	r3, [r7, #4]
 801e750:	6013      	str	r3, [r2, #0]
 801e752:	4b1c      	ldr	r3, [pc, #112]	; (801e7c4 <prvHeapInit+0xb0>)
 801e754:	2200      	movs	r2, #0
 801e756:	605a      	str	r2, [r3, #4]
 801e758:	687b      	ldr	r3, [r7, #4]
 801e75a:	68ba      	ldr	r2, [r7, #8]
 801e75c:	4413      	add	r3, r2
 801e75e:	60fb      	str	r3, [r7, #12]
 801e760:	2208      	movs	r2, #8
 801e762:	68fb      	ldr	r3, [r7, #12]
 801e764:	1a9b      	subs	r3, r3, r2
 801e766:	60fb      	str	r3, [r7, #12]
 801e768:	68fb      	ldr	r3, [r7, #12]
 801e76a:	f023 0307 	bic.w	r3, r3, #7
 801e76e:	60fb      	str	r3, [r7, #12]
 801e770:	68fb      	ldr	r3, [r7, #12]
 801e772:	4a15      	ldr	r2, [pc, #84]	; (801e7c8 <prvHeapInit+0xb4>)
 801e774:	6013      	str	r3, [r2, #0]
 801e776:	4b14      	ldr	r3, [pc, #80]	; (801e7c8 <prvHeapInit+0xb4>)
 801e778:	681b      	ldr	r3, [r3, #0]
 801e77a:	2200      	movs	r2, #0
 801e77c:	605a      	str	r2, [r3, #4]
 801e77e:	4b12      	ldr	r3, [pc, #72]	; (801e7c8 <prvHeapInit+0xb4>)
 801e780:	681b      	ldr	r3, [r3, #0]
 801e782:	2200      	movs	r2, #0
 801e784:	601a      	str	r2, [r3, #0]
 801e786:	687b      	ldr	r3, [r7, #4]
 801e788:	603b      	str	r3, [r7, #0]
 801e78a:	683b      	ldr	r3, [r7, #0]
 801e78c:	68fa      	ldr	r2, [r7, #12]
 801e78e:	1ad2      	subs	r2, r2, r3
 801e790:	683b      	ldr	r3, [r7, #0]
 801e792:	605a      	str	r2, [r3, #4]
 801e794:	4b0c      	ldr	r3, [pc, #48]	; (801e7c8 <prvHeapInit+0xb4>)
 801e796:	681a      	ldr	r2, [r3, #0]
 801e798:	683b      	ldr	r3, [r7, #0]
 801e79a:	601a      	str	r2, [r3, #0]
 801e79c:	683b      	ldr	r3, [r7, #0]
 801e79e:	685b      	ldr	r3, [r3, #4]
 801e7a0:	4a0a      	ldr	r2, [pc, #40]	; (801e7cc <prvHeapInit+0xb8>)
 801e7a2:	6013      	str	r3, [r2, #0]
 801e7a4:	683b      	ldr	r3, [r7, #0]
 801e7a6:	685b      	ldr	r3, [r3, #4]
 801e7a8:	4a09      	ldr	r2, [pc, #36]	; (801e7d0 <prvHeapInit+0xbc>)
 801e7aa:	6013      	str	r3, [r2, #0]
 801e7ac:	4b09      	ldr	r3, [pc, #36]	; (801e7d4 <prvHeapInit+0xc0>)
 801e7ae:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 801e7b2:	601a      	str	r2, [r3, #0]
 801e7b4:	bf00      	nop
 801e7b6:	3714      	adds	r7, #20
 801e7b8:	46bd      	mov	sp, r7
 801e7ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e7be:	4770      	bx	lr
 801e7c0:	20003d08 	.word	0x20003d08
 801e7c4:	2000d948 	.word	0x2000d948
 801e7c8:	2000d950 	.word	0x2000d950
 801e7cc:	2000d958 	.word	0x2000d958
 801e7d0:	2000d954 	.word	0x2000d954
 801e7d4:	2000d964 	.word	0x2000d964

0801e7d8 <prvInsertBlockIntoFreeList>:
 801e7d8:	b480      	push	{r7}
 801e7da:	b085      	sub	sp, #20
 801e7dc:	af00      	add	r7, sp, #0
 801e7de:	6078      	str	r0, [r7, #4]
 801e7e0:	4b28      	ldr	r3, [pc, #160]	; (801e884 <prvInsertBlockIntoFreeList+0xac>)
 801e7e2:	60fb      	str	r3, [r7, #12]
 801e7e4:	e002      	b.n	801e7ec <prvInsertBlockIntoFreeList+0x14>
 801e7e6:	68fb      	ldr	r3, [r7, #12]
 801e7e8:	681b      	ldr	r3, [r3, #0]
 801e7ea:	60fb      	str	r3, [r7, #12]
 801e7ec:	68fb      	ldr	r3, [r7, #12]
 801e7ee:	681b      	ldr	r3, [r3, #0]
 801e7f0:	687a      	ldr	r2, [r7, #4]
 801e7f2:	429a      	cmp	r2, r3
 801e7f4:	d8f7      	bhi.n	801e7e6 <prvInsertBlockIntoFreeList+0xe>
 801e7f6:	68fb      	ldr	r3, [r7, #12]
 801e7f8:	60bb      	str	r3, [r7, #8]
 801e7fa:	68fb      	ldr	r3, [r7, #12]
 801e7fc:	685b      	ldr	r3, [r3, #4]
 801e7fe:	68ba      	ldr	r2, [r7, #8]
 801e800:	4413      	add	r3, r2
 801e802:	687a      	ldr	r2, [r7, #4]
 801e804:	429a      	cmp	r2, r3
 801e806:	d108      	bne.n	801e81a <prvInsertBlockIntoFreeList+0x42>
 801e808:	68fb      	ldr	r3, [r7, #12]
 801e80a:	685a      	ldr	r2, [r3, #4]
 801e80c:	687b      	ldr	r3, [r7, #4]
 801e80e:	685b      	ldr	r3, [r3, #4]
 801e810:	441a      	add	r2, r3
 801e812:	68fb      	ldr	r3, [r7, #12]
 801e814:	605a      	str	r2, [r3, #4]
 801e816:	68fb      	ldr	r3, [r7, #12]
 801e818:	607b      	str	r3, [r7, #4]
 801e81a:	687b      	ldr	r3, [r7, #4]
 801e81c:	60bb      	str	r3, [r7, #8]
 801e81e:	687b      	ldr	r3, [r7, #4]
 801e820:	685b      	ldr	r3, [r3, #4]
 801e822:	68ba      	ldr	r2, [r7, #8]
 801e824:	441a      	add	r2, r3
 801e826:	68fb      	ldr	r3, [r7, #12]
 801e828:	681b      	ldr	r3, [r3, #0]
 801e82a:	429a      	cmp	r2, r3
 801e82c:	d118      	bne.n	801e860 <prvInsertBlockIntoFreeList+0x88>
 801e82e:	68fb      	ldr	r3, [r7, #12]
 801e830:	681a      	ldr	r2, [r3, #0]
 801e832:	4b15      	ldr	r3, [pc, #84]	; (801e888 <prvInsertBlockIntoFreeList+0xb0>)
 801e834:	681b      	ldr	r3, [r3, #0]
 801e836:	429a      	cmp	r2, r3
 801e838:	d00d      	beq.n	801e856 <prvInsertBlockIntoFreeList+0x7e>
 801e83a:	687b      	ldr	r3, [r7, #4]
 801e83c:	685a      	ldr	r2, [r3, #4]
 801e83e:	68fb      	ldr	r3, [r7, #12]
 801e840:	681b      	ldr	r3, [r3, #0]
 801e842:	685b      	ldr	r3, [r3, #4]
 801e844:	441a      	add	r2, r3
 801e846:	687b      	ldr	r3, [r7, #4]
 801e848:	605a      	str	r2, [r3, #4]
 801e84a:	68fb      	ldr	r3, [r7, #12]
 801e84c:	681b      	ldr	r3, [r3, #0]
 801e84e:	681a      	ldr	r2, [r3, #0]
 801e850:	687b      	ldr	r3, [r7, #4]
 801e852:	601a      	str	r2, [r3, #0]
 801e854:	e008      	b.n	801e868 <prvInsertBlockIntoFreeList+0x90>
 801e856:	4b0c      	ldr	r3, [pc, #48]	; (801e888 <prvInsertBlockIntoFreeList+0xb0>)
 801e858:	681a      	ldr	r2, [r3, #0]
 801e85a:	687b      	ldr	r3, [r7, #4]
 801e85c:	601a      	str	r2, [r3, #0]
 801e85e:	e003      	b.n	801e868 <prvInsertBlockIntoFreeList+0x90>
 801e860:	68fb      	ldr	r3, [r7, #12]
 801e862:	681a      	ldr	r2, [r3, #0]
 801e864:	687b      	ldr	r3, [r7, #4]
 801e866:	601a      	str	r2, [r3, #0]
 801e868:	68fa      	ldr	r2, [r7, #12]
 801e86a:	687b      	ldr	r3, [r7, #4]
 801e86c:	429a      	cmp	r2, r3
 801e86e:	d002      	beq.n	801e876 <prvInsertBlockIntoFreeList+0x9e>
 801e870:	68fb      	ldr	r3, [r7, #12]
 801e872:	687a      	ldr	r2, [r7, #4]
 801e874:	601a      	str	r2, [r3, #0]
 801e876:	bf00      	nop
 801e878:	3714      	adds	r7, #20
 801e87a:	46bd      	mov	sp, r7
 801e87c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e880:	4770      	bx	lr
 801e882:	bf00      	nop
 801e884:	2000d948 	.word	0x2000d948
 801e888:	2000d950 	.word	0x2000d950

0801e88c <MX_USB_DEVICE_Init>:
 801e88c:	b580      	push	{r7, lr}
 801e88e:	af00      	add	r7, sp, #0
 801e890:	2200      	movs	r2, #0
 801e892:	4912      	ldr	r1, [pc, #72]	; (801e8dc <MX_USB_DEVICE_Init+0x50>)
 801e894:	4812      	ldr	r0, [pc, #72]	; (801e8e0 <MX_USB_DEVICE_Init+0x54>)
 801e896:	f7fb fafd 	bl	8019e94 <USBD_Init>
 801e89a:	4603      	mov	r3, r0
 801e89c:	2b00      	cmp	r3, #0
 801e89e:	d001      	beq.n	801e8a4 <MX_USB_DEVICE_Init+0x18>
 801e8a0:	f7e5 f98f 	bl	8003bc2 <Error_Handler>
 801e8a4:	490f      	ldr	r1, [pc, #60]	; (801e8e4 <MX_USB_DEVICE_Init+0x58>)
 801e8a6:	480e      	ldr	r0, [pc, #56]	; (801e8e0 <MX_USB_DEVICE_Init+0x54>)
 801e8a8:	f7fb fb24 	bl	8019ef4 <USBD_RegisterClass>
 801e8ac:	4603      	mov	r3, r0
 801e8ae:	2b00      	cmp	r3, #0
 801e8b0:	d001      	beq.n	801e8b6 <MX_USB_DEVICE_Init+0x2a>
 801e8b2:	f7e5 f986 	bl	8003bc2 <Error_Handler>
 801e8b6:	490c      	ldr	r1, [pc, #48]	; (801e8e8 <MX_USB_DEVICE_Init+0x5c>)
 801e8b8:	4809      	ldr	r0, [pc, #36]	; (801e8e0 <MX_USB_DEVICE_Init+0x54>)
 801e8ba:	f7fb fa5b 	bl	8019d74 <USBD_CDC_RegisterInterface>
 801e8be:	4603      	mov	r3, r0
 801e8c0:	2b00      	cmp	r3, #0
 801e8c2:	d001      	beq.n	801e8c8 <MX_USB_DEVICE_Init+0x3c>
 801e8c4:	f7e5 f97d 	bl	8003bc2 <Error_Handler>
 801e8c8:	4805      	ldr	r0, [pc, #20]	; (801e8e0 <MX_USB_DEVICE_Init+0x54>)
 801e8ca:	f7fb fb49 	bl	8019f60 <USBD_Start>
 801e8ce:	4603      	mov	r3, r0
 801e8d0:	2b00      	cmp	r3, #0
 801e8d2:	d001      	beq.n	801e8d8 <MX_USB_DEVICE_Init+0x4c>
 801e8d4:	f7e5 f975 	bl	8003bc2 <Error_Handler>
 801e8d8:	bf00      	nop
 801e8da:	bd80      	pop	{r7, pc}
 801e8dc:	20000100 	.word	0x20000100
 801e8e0:	2000d968 	.word	0x2000d968
 801e8e4:	20000068 	.word	0x20000068
 801e8e8:	200000ec 	.word	0x200000ec

0801e8ec <CDC_Init_FS>:
 801e8ec:	b580      	push	{r7, lr}
 801e8ee:	af00      	add	r7, sp, #0
 801e8f0:	2200      	movs	r2, #0
 801e8f2:	4905      	ldr	r1, [pc, #20]	; (801e908 <CDC_Init_FS+0x1c>)
 801e8f4:	4805      	ldr	r0, [pc, #20]	; (801e90c <CDC_Init_FS+0x20>)
 801e8f6:	f7fb fa57 	bl	8019da8 <USBD_CDC_SetTxBuffer>
 801e8fa:	4905      	ldr	r1, [pc, #20]	; (801e910 <CDC_Init_FS+0x24>)
 801e8fc:	4803      	ldr	r0, [pc, #12]	; (801e90c <CDC_Init_FS+0x20>)
 801e8fe:	f7fb fa75 	bl	8019dec <USBD_CDC_SetRxBuffer>
 801e902:	2300      	movs	r3, #0
 801e904:	4618      	mov	r0, r3
 801e906:	bd80      	pop	{r7, pc}
 801e908:	2000e44c 	.word	0x2000e44c
 801e90c:	2000d968 	.word	0x2000d968
 801e910:	2000dc4c 	.word	0x2000dc4c

0801e914 <CDC_DeInit_FS>:
 801e914:	b480      	push	{r7}
 801e916:	af00      	add	r7, sp, #0
 801e918:	2300      	movs	r3, #0
 801e91a:	4618      	mov	r0, r3
 801e91c:	46bd      	mov	sp, r7
 801e91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e922:	4770      	bx	lr

0801e924 <CDC_Control_FS>:
 801e924:	b480      	push	{r7}
 801e926:	b083      	sub	sp, #12
 801e928:	af00      	add	r7, sp, #0
 801e92a:	4603      	mov	r3, r0
 801e92c:	6039      	str	r1, [r7, #0]
 801e92e:	71fb      	strb	r3, [r7, #7]
 801e930:	4613      	mov	r3, r2
 801e932:	80bb      	strh	r3, [r7, #4]
 801e934:	79fb      	ldrb	r3, [r7, #7]
 801e936:	2b23      	cmp	r3, #35	; 0x23
 801e938:	f200 808c 	bhi.w	801ea54 <CDC_Control_FS+0x130>
 801e93c:	a201      	add	r2, pc, #4	; (adr r2, 801e944 <CDC_Control_FS+0x20>)
 801e93e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801e942:	bf00      	nop
 801e944:	0801ea55 	.word	0x0801ea55
 801e948:	0801ea55 	.word	0x0801ea55
 801e94c:	0801ea55 	.word	0x0801ea55
 801e950:	0801ea55 	.word	0x0801ea55
 801e954:	0801ea55 	.word	0x0801ea55
 801e958:	0801ea55 	.word	0x0801ea55
 801e95c:	0801ea55 	.word	0x0801ea55
 801e960:	0801ea55 	.word	0x0801ea55
 801e964:	0801ea55 	.word	0x0801ea55
 801e968:	0801ea55 	.word	0x0801ea55
 801e96c:	0801ea55 	.word	0x0801ea55
 801e970:	0801ea55 	.word	0x0801ea55
 801e974:	0801ea55 	.word	0x0801ea55
 801e978:	0801ea55 	.word	0x0801ea55
 801e97c:	0801ea55 	.word	0x0801ea55
 801e980:	0801ea55 	.word	0x0801ea55
 801e984:	0801ea55 	.word	0x0801ea55
 801e988:	0801ea55 	.word	0x0801ea55
 801e98c:	0801ea55 	.word	0x0801ea55
 801e990:	0801ea55 	.word	0x0801ea55
 801e994:	0801ea55 	.word	0x0801ea55
 801e998:	0801ea55 	.word	0x0801ea55
 801e99c:	0801ea55 	.word	0x0801ea55
 801e9a0:	0801ea55 	.word	0x0801ea55
 801e9a4:	0801ea55 	.word	0x0801ea55
 801e9a8:	0801ea55 	.word	0x0801ea55
 801e9ac:	0801ea55 	.word	0x0801ea55
 801e9b0:	0801ea55 	.word	0x0801ea55
 801e9b4:	0801ea55 	.word	0x0801ea55
 801e9b8:	0801ea55 	.word	0x0801ea55
 801e9bc:	0801ea55 	.word	0x0801ea55
 801e9c0:	0801ea55 	.word	0x0801ea55
 801e9c4:	0801e9d5 	.word	0x0801e9d5
 801e9c8:	0801ea0f 	.word	0x0801ea0f
 801e9cc:	0801ea55 	.word	0x0801ea55
 801e9d0:	0801ea55 	.word	0x0801ea55
 801e9d4:	683b      	ldr	r3, [r7, #0]
 801e9d6:	781a      	ldrb	r2, [r3, #0]
 801e9d8:	4b22      	ldr	r3, [pc, #136]	; (801ea64 <CDC_Control_FS+0x140>)
 801e9da:	701a      	strb	r2, [r3, #0]
 801e9dc:	683b      	ldr	r3, [r7, #0]
 801e9de:	785a      	ldrb	r2, [r3, #1]
 801e9e0:	4b20      	ldr	r3, [pc, #128]	; (801ea64 <CDC_Control_FS+0x140>)
 801e9e2:	705a      	strb	r2, [r3, #1]
 801e9e4:	683b      	ldr	r3, [r7, #0]
 801e9e6:	789a      	ldrb	r2, [r3, #2]
 801e9e8:	4b1e      	ldr	r3, [pc, #120]	; (801ea64 <CDC_Control_FS+0x140>)
 801e9ea:	709a      	strb	r2, [r3, #2]
 801e9ec:	683b      	ldr	r3, [r7, #0]
 801e9ee:	78da      	ldrb	r2, [r3, #3]
 801e9f0:	4b1c      	ldr	r3, [pc, #112]	; (801ea64 <CDC_Control_FS+0x140>)
 801e9f2:	70da      	strb	r2, [r3, #3]
 801e9f4:	683b      	ldr	r3, [r7, #0]
 801e9f6:	791a      	ldrb	r2, [r3, #4]
 801e9f8:	4b1a      	ldr	r3, [pc, #104]	; (801ea64 <CDC_Control_FS+0x140>)
 801e9fa:	711a      	strb	r2, [r3, #4]
 801e9fc:	683b      	ldr	r3, [r7, #0]
 801e9fe:	795a      	ldrb	r2, [r3, #5]
 801ea00:	4b18      	ldr	r3, [pc, #96]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea02:	715a      	strb	r2, [r3, #5]
 801ea04:	683b      	ldr	r3, [r7, #0]
 801ea06:	799a      	ldrb	r2, [r3, #6]
 801ea08:	4b16      	ldr	r3, [pc, #88]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea0a:	719a      	strb	r2, [r3, #6]
 801ea0c:	e023      	b.n	801ea56 <CDC_Control_FS+0x132>
 801ea0e:	4b15      	ldr	r3, [pc, #84]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea10:	781a      	ldrb	r2, [r3, #0]
 801ea12:	683b      	ldr	r3, [r7, #0]
 801ea14:	701a      	strb	r2, [r3, #0]
 801ea16:	683b      	ldr	r3, [r7, #0]
 801ea18:	3301      	adds	r3, #1
 801ea1a:	4a12      	ldr	r2, [pc, #72]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea1c:	7852      	ldrb	r2, [r2, #1]
 801ea1e:	701a      	strb	r2, [r3, #0]
 801ea20:	683b      	ldr	r3, [r7, #0]
 801ea22:	3302      	adds	r3, #2
 801ea24:	4a0f      	ldr	r2, [pc, #60]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea26:	7892      	ldrb	r2, [r2, #2]
 801ea28:	701a      	strb	r2, [r3, #0]
 801ea2a:	683b      	ldr	r3, [r7, #0]
 801ea2c:	3303      	adds	r3, #3
 801ea2e:	4a0d      	ldr	r2, [pc, #52]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea30:	78d2      	ldrb	r2, [r2, #3]
 801ea32:	701a      	strb	r2, [r3, #0]
 801ea34:	683b      	ldr	r3, [r7, #0]
 801ea36:	3304      	adds	r3, #4
 801ea38:	4a0a      	ldr	r2, [pc, #40]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea3a:	7912      	ldrb	r2, [r2, #4]
 801ea3c:	701a      	strb	r2, [r3, #0]
 801ea3e:	683b      	ldr	r3, [r7, #0]
 801ea40:	3305      	adds	r3, #5
 801ea42:	4a08      	ldr	r2, [pc, #32]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea44:	7952      	ldrb	r2, [r2, #5]
 801ea46:	701a      	strb	r2, [r3, #0]
 801ea48:	683b      	ldr	r3, [r7, #0]
 801ea4a:	3306      	adds	r3, #6
 801ea4c:	4a05      	ldr	r2, [pc, #20]	; (801ea64 <CDC_Control_FS+0x140>)
 801ea4e:	7992      	ldrb	r2, [r2, #6]
 801ea50:	701a      	strb	r2, [r3, #0]
 801ea52:	e000      	b.n	801ea56 <CDC_Control_FS+0x132>
 801ea54:	bf00      	nop
 801ea56:	2300      	movs	r3, #0
 801ea58:	4618      	mov	r0, r3
 801ea5a:	370c      	adds	r7, #12
 801ea5c:	46bd      	mov	sp, r7
 801ea5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ea62:	4770      	bx	lr
 801ea64:	2000dc44 	.word	0x2000dc44

0801ea68 <CDC_Receive_FS>:
 801ea68:	b580      	push	{r7, lr}
 801ea6a:	b082      	sub	sp, #8
 801ea6c:	af00      	add	r7, sp, #0
 801ea6e:	6078      	str	r0, [r7, #4]
 801ea70:	6039      	str	r1, [r7, #0]
 801ea72:	6879      	ldr	r1, [r7, #4]
 801ea74:	4807      	ldr	r0, [pc, #28]	; (801ea94 <CDC_Receive_FS+0x2c>)
 801ea76:	f7fb f9b9 	bl	8019dec <USBD_CDC_SetRxBuffer>
 801ea7a:	4806      	ldr	r0, [pc, #24]	; (801ea94 <CDC_Receive_FS+0x2c>)
 801ea7c:	f7fb f9d4 	bl	8019e28 <USBD_CDC_ReceivePacket>
 801ea80:	6839      	ldr	r1, [r7, #0]
 801ea82:	6878      	ldr	r0, [r7, #4]
 801ea84:	f7ef faac 	bl	800dfe0 <usb_vcp_processing>
 801ea88:	2300      	movs	r3, #0
 801ea8a:	4618      	mov	r0, r3
 801ea8c:	3708      	adds	r7, #8
 801ea8e:	46bd      	mov	sp, r7
 801ea90:	bd80      	pop	{r7, pc}
 801ea92:	bf00      	nop
 801ea94:	2000d968 	.word	0x2000d968

0801ea98 <CDC_TransmitCplt_FS>:
 801ea98:	b480      	push	{r7}
 801ea9a:	b087      	sub	sp, #28
 801ea9c:	af00      	add	r7, sp, #0
 801ea9e:	60f8      	str	r0, [r7, #12]
 801eaa0:	60b9      	str	r1, [r7, #8]
 801eaa2:	4613      	mov	r3, r2
 801eaa4:	71fb      	strb	r3, [r7, #7]
 801eaa6:	2300      	movs	r3, #0
 801eaa8:	75fb      	strb	r3, [r7, #23]
 801eaaa:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801eaae:	4618      	mov	r0, r3
 801eab0:	371c      	adds	r7, #28
 801eab2:	46bd      	mov	sp, r7
 801eab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eab8:	4770      	bx	lr
	...

0801eabc <USBD_FS_DeviceDescriptor>:
 801eabc:	b480      	push	{r7}
 801eabe:	b083      	sub	sp, #12
 801eac0:	af00      	add	r7, sp, #0
 801eac2:	4603      	mov	r3, r0
 801eac4:	6039      	str	r1, [r7, #0]
 801eac6:	71fb      	strb	r3, [r7, #7]
 801eac8:	683b      	ldr	r3, [r7, #0]
 801eaca:	2212      	movs	r2, #18
 801eacc:	801a      	strh	r2, [r3, #0]
 801eace:	4b03      	ldr	r3, [pc, #12]	; (801eadc <USBD_FS_DeviceDescriptor+0x20>)
 801ead0:	4618      	mov	r0, r3
 801ead2:	370c      	adds	r7, #12
 801ead4:	46bd      	mov	sp, r7
 801ead6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eada:	4770      	bx	lr
 801eadc:	2000011c 	.word	0x2000011c

0801eae0 <USBD_FS_LangIDStrDescriptor>:
 801eae0:	b480      	push	{r7}
 801eae2:	b083      	sub	sp, #12
 801eae4:	af00      	add	r7, sp, #0
 801eae6:	4603      	mov	r3, r0
 801eae8:	6039      	str	r1, [r7, #0]
 801eaea:	71fb      	strb	r3, [r7, #7]
 801eaec:	683b      	ldr	r3, [r7, #0]
 801eaee:	2204      	movs	r2, #4
 801eaf0:	801a      	strh	r2, [r3, #0]
 801eaf2:	4b03      	ldr	r3, [pc, #12]	; (801eb00 <USBD_FS_LangIDStrDescriptor+0x20>)
 801eaf4:	4618      	mov	r0, r3
 801eaf6:	370c      	adds	r7, #12
 801eaf8:	46bd      	mov	sp, r7
 801eafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eafe:	4770      	bx	lr
 801eb00:	20000130 	.word	0x20000130

0801eb04 <USBD_FS_ProductStrDescriptor>:
 801eb04:	b580      	push	{r7, lr}
 801eb06:	b082      	sub	sp, #8
 801eb08:	af00      	add	r7, sp, #0
 801eb0a:	4603      	mov	r3, r0
 801eb0c:	6039      	str	r1, [r7, #0]
 801eb0e:	71fb      	strb	r3, [r7, #7]
 801eb10:	79fb      	ldrb	r3, [r7, #7]
 801eb12:	2b00      	cmp	r3, #0
 801eb14:	d105      	bne.n	801eb22 <USBD_FS_ProductStrDescriptor+0x1e>
 801eb16:	683a      	ldr	r2, [r7, #0]
 801eb18:	4907      	ldr	r1, [pc, #28]	; (801eb38 <USBD_FS_ProductStrDescriptor+0x34>)
 801eb1a:	4808      	ldr	r0, [pc, #32]	; (801eb3c <USBD_FS_ProductStrDescriptor+0x38>)
 801eb1c:	f7fc fbcc 	bl	801b2b8 <USBD_GetString>
 801eb20:	e004      	b.n	801eb2c <USBD_FS_ProductStrDescriptor+0x28>
 801eb22:	683a      	ldr	r2, [r7, #0]
 801eb24:	4904      	ldr	r1, [pc, #16]	; (801eb38 <USBD_FS_ProductStrDescriptor+0x34>)
 801eb26:	4805      	ldr	r0, [pc, #20]	; (801eb3c <USBD_FS_ProductStrDescriptor+0x38>)
 801eb28:	f7fc fbc6 	bl	801b2b8 <USBD_GetString>
 801eb2c:	4b02      	ldr	r3, [pc, #8]	; (801eb38 <USBD_FS_ProductStrDescriptor+0x34>)
 801eb2e:	4618      	mov	r0, r3
 801eb30:	3708      	adds	r7, #8
 801eb32:	46bd      	mov	sp, r7
 801eb34:	bd80      	pop	{r7, pc}
 801eb36:	bf00      	nop
 801eb38:	2000ec4c 	.word	0x2000ec4c
 801eb3c:	08026870 	.word	0x08026870

0801eb40 <USBD_FS_ManufacturerStrDescriptor>:
 801eb40:	b580      	push	{r7, lr}
 801eb42:	b082      	sub	sp, #8
 801eb44:	af00      	add	r7, sp, #0
 801eb46:	4603      	mov	r3, r0
 801eb48:	6039      	str	r1, [r7, #0]
 801eb4a:	71fb      	strb	r3, [r7, #7]
 801eb4c:	683a      	ldr	r2, [r7, #0]
 801eb4e:	4904      	ldr	r1, [pc, #16]	; (801eb60 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801eb50:	4804      	ldr	r0, [pc, #16]	; (801eb64 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801eb52:	f7fc fbb1 	bl	801b2b8 <USBD_GetString>
 801eb56:	4b02      	ldr	r3, [pc, #8]	; (801eb60 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801eb58:	4618      	mov	r0, r3
 801eb5a:	3708      	adds	r7, #8
 801eb5c:	46bd      	mov	sp, r7
 801eb5e:	bd80      	pop	{r7, pc}
 801eb60:	2000ec4c 	.word	0x2000ec4c
 801eb64:	08026888 	.word	0x08026888

0801eb68 <USBD_FS_SerialStrDescriptor>:
 801eb68:	b580      	push	{r7, lr}
 801eb6a:	b082      	sub	sp, #8
 801eb6c:	af00      	add	r7, sp, #0
 801eb6e:	4603      	mov	r3, r0
 801eb70:	6039      	str	r1, [r7, #0]
 801eb72:	71fb      	strb	r3, [r7, #7]
 801eb74:	683b      	ldr	r3, [r7, #0]
 801eb76:	221a      	movs	r2, #26
 801eb78:	801a      	strh	r2, [r3, #0]
 801eb7a:	f000 f843 	bl	801ec04 <Get_SerialNum>
 801eb7e:	4b02      	ldr	r3, [pc, #8]	; (801eb88 <USBD_FS_SerialStrDescriptor+0x20>)
 801eb80:	4618      	mov	r0, r3
 801eb82:	3708      	adds	r7, #8
 801eb84:	46bd      	mov	sp, r7
 801eb86:	bd80      	pop	{r7, pc}
 801eb88:	20000134 	.word	0x20000134

0801eb8c <USBD_FS_ConfigStrDescriptor>:
 801eb8c:	b580      	push	{r7, lr}
 801eb8e:	b082      	sub	sp, #8
 801eb90:	af00      	add	r7, sp, #0
 801eb92:	4603      	mov	r3, r0
 801eb94:	6039      	str	r1, [r7, #0]
 801eb96:	71fb      	strb	r3, [r7, #7]
 801eb98:	79fb      	ldrb	r3, [r7, #7]
 801eb9a:	2b00      	cmp	r3, #0
 801eb9c:	d105      	bne.n	801ebaa <USBD_FS_ConfigStrDescriptor+0x1e>
 801eb9e:	683a      	ldr	r2, [r7, #0]
 801eba0:	4907      	ldr	r1, [pc, #28]	; (801ebc0 <USBD_FS_ConfigStrDescriptor+0x34>)
 801eba2:	4808      	ldr	r0, [pc, #32]	; (801ebc4 <USBD_FS_ConfigStrDescriptor+0x38>)
 801eba4:	f7fc fb88 	bl	801b2b8 <USBD_GetString>
 801eba8:	e004      	b.n	801ebb4 <USBD_FS_ConfigStrDescriptor+0x28>
 801ebaa:	683a      	ldr	r2, [r7, #0]
 801ebac:	4904      	ldr	r1, [pc, #16]	; (801ebc0 <USBD_FS_ConfigStrDescriptor+0x34>)
 801ebae:	4805      	ldr	r0, [pc, #20]	; (801ebc4 <USBD_FS_ConfigStrDescriptor+0x38>)
 801ebb0:	f7fc fb82 	bl	801b2b8 <USBD_GetString>
 801ebb4:	4b02      	ldr	r3, [pc, #8]	; (801ebc0 <USBD_FS_ConfigStrDescriptor+0x34>)
 801ebb6:	4618      	mov	r0, r3
 801ebb8:	3708      	adds	r7, #8
 801ebba:	46bd      	mov	sp, r7
 801ebbc:	bd80      	pop	{r7, pc}
 801ebbe:	bf00      	nop
 801ebc0:	2000ec4c 	.word	0x2000ec4c
 801ebc4:	0802689c 	.word	0x0802689c

0801ebc8 <USBD_FS_InterfaceStrDescriptor>:
 801ebc8:	b580      	push	{r7, lr}
 801ebca:	b082      	sub	sp, #8
 801ebcc:	af00      	add	r7, sp, #0
 801ebce:	4603      	mov	r3, r0
 801ebd0:	6039      	str	r1, [r7, #0]
 801ebd2:	71fb      	strb	r3, [r7, #7]
 801ebd4:	79fb      	ldrb	r3, [r7, #7]
 801ebd6:	2b00      	cmp	r3, #0
 801ebd8:	d105      	bne.n	801ebe6 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801ebda:	683a      	ldr	r2, [r7, #0]
 801ebdc:	4907      	ldr	r1, [pc, #28]	; (801ebfc <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ebde:	4808      	ldr	r0, [pc, #32]	; (801ec00 <USBD_FS_InterfaceStrDescriptor+0x38>)
 801ebe0:	f7fc fb6a 	bl	801b2b8 <USBD_GetString>
 801ebe4:	e004      	b.n	801ebf0 <USBD_FS_InterfaceStrDescriptor+0x28>
 801ebe6:	683a      	ldr	r2, [r7, #0]
 801ebe8:	4904      	ldr	r1, [pc, #16]	; (801ebfc <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ebea:	4805      	ldr	r0, [pc, #20]	; (801ec00 <USBD_FS_InterfaceStrDescriptor+0x38>)
 801ebec:	f7fc fb64 	bl	801b2b8 <USBD_GetString>
 801ebf0:	4b02      	ldr	r3, [pc, #8]	; (801ebfc <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ebf2:	4618      	mov	r0, r3
 801ebf4:	3708      	adds	r7, #8
 801ebf6:	46bd      	mov	sp, r7
 801ebf8:	bd80      	pop	{r7, pc}
 801ebfa:	bf00      	nop
 801ebfc:	2000ec4c 	.word	0x2000ec4c
 801ec00:	080268a8 	.word	0x080268a8

0801ec04 <Get_SerialNum>:
 801ec04:	b580      	push	{r7, lr}
 801ec06:	b084      	sub	sp, #16
 801ec08:	af00      	add	r7, sp, #0
 801ec0a:	4b0f      	ldr	r3, [pc, #60]	; (801ec48 <Get_SerialNum+0x44>)
 801ec0c:	681b      	ldr	r3, [r3, #0]
 801ec0e:	60fb      	str	r3, [r7, #12]
 801ec10:	4b0e      	ldr	r3, [pc, #56]	; (801ec4c <Get_SerialNum+0x48>)
 801ec12:	681b      	ldr	r3, [r3, #0]
 801ec14:	60bb      	str	r3, [r7, #8]
 801ec16:	4b0e      	ldr	r3, [pc, #56]	; (801ec50 <Get_SerialNum+0x4c>)
 801ec18:	681b      	ldr	r3, [r3, #0]
 801ec1a:	607b      	str	r3, [r7, #4]
 801ec1c:	68fa      	ldr	r2, [r7, #12]
 801ec1e:	687b      	ldr	r3, [r7, #4]
 801ec20:	4413      	add	r3, r2
 801ec22:	60fb      	str	r3, [r7, #12]
 801ec24:	68fb      	ldr	r3, [r7, #12]
 801ec26:	2b00      	cmp	r3, #0
 801ec28:	d009      	beq.n	801ec3e <Get_SerialNum+0x3a>
 801ec2a:	2208      	movs	r2, #8
 801ec2c:	4909      	ldr	r1, [pc, #36]	; (801ec54 <Get_SerialNum+0x50>)
 801ec2e:	68f8      	ldr	r0, [r7, #12]
 801ec30:	f000 f814 	bl	801ec5c <IntToUnicode>
 801ec34:	2204      	movs	r2, #4
 801ec36:	4908      	ldr	r1, [pc, #32]	; (801ec58 <Get_SerialNum+0x54>)
 801ec38:	68b8      	ldr	r0, [r7, #8]
 801ec3a:	f000 f80f 	bl	801ec5c <IntToUnicode>
 801ec3e:	bf00      	nop
 801ec40:	3710      	adds	r7, #16
 801ec42:	46bd      	mov	sp, r7
 801ec44:	bd80      	pop	{r7, pc}
 801ec46:	bf00      	nop
 801ec48:	1fff7a10 	.word	0x1fff7a10
 801ec4c:	1fff7a14 	.word	0x1fff7a14
 801ec50:	1fff7a18 	.word	0x1fff7a18
 801ec54:	20000136 	.word	0x20000136
 801ec58:	20000146 	.word	0x20000146

0801ec5c <IntToUnicode>:
 801ec5c:	b480      	push	{r7}
 801ec5e:	b087      	sub	sp, #28
 801ec60:	af00      	add	r7, sp, #0
 801ec62:	60f8      	str	r0, [r7, #12]
 801ec64:	60b9      	str	r1, [r7, #8]
 801ec66:	4613      	mov	r3, r2
 801ec68:	71fb      	strb	r3, [r7, #7]
 801ec6a:	2300      	movs	r3, #0
 801ec6c:	75fb      	strb	r3, [r7, #23]
 801ec6e:	2300      	movs	r3, #0
 801ec70:	75fb      	strb	r3, [r7, #23]
 801ec72:	e027      	b.n	801ecc4 <IntToUnicode+0x68>
 801ec74:	68fb      	ldr	r3, [r7, #12]
 801ec76:	0f1b      	lsrs	r3, r3, #28
 801ec78:	2b09      	cmp	r3, #9
 801ec7a:	d80b      	bhi.n	801ec94 <IntToUnicode+0x38>
 801ec7c:	68fb      	ldr	r3, [r7, #12]
 801ec7e:	0f1b      	lsrs	r3, r3, #28
 801ec80:	b2da      	uxtb	r2, r3
 801ec82:	7dfb      	ldrb	r3, [r7, #23]
 801ec84:	005b      	lsls	r3, r3, #1
 801ec86:	4619      	mov	r1, r3
 801ec88:	68bb      	ldr	r3, [r7, #8]
 801ec8a:	440b      	add	r3, r1
 801ec8c:	3230      	adds	r2, #48	; 0x30
 801ec8e:	b2d2      	uxtb	r2, r2
 801ec90:	701a      	strb	r2, [r3, #0]
 801ec92:	e00a      	b.n	801ecaa <IntToUnicode+0x4e>
 801ec94:	68fb      	ldr	r3, [r7, #12]
 801ec96:	0f1b      	lsrs	r3, r3, #28
 801ec98:	b2da      	uxtb	r2, r3
 801ec9a:	7dfb      	ldrb	r3, [r7, #23]
 801ec9c:	005b      	lsls	r3, r3, #1
 801ec9e:	4619      	mov	r1, r3
 801eca0:	68bb      	ldr	r3, [r7, #8]
 801eca2:	440b      	add	r3, r1
 801eca4:	3237      	adds	r2, #55	; 0x37
 801eca6:	b2d2      	uxtb	r2, r2
 801eca8:	701a      	strb	r2, [r3, #0]
 801ecaa:	68fb      	ldr	r3, [r7, #12]
 801ecac:	011b      	lsls	r3, r3, #4
 801ecae:	60fb      	str	r3, [r7, #12]
 801ecb0:	7dfb      	ldrb	r3, [r7, #23]
 801ecb2:	005b      	lsls	r3, r3, #1
 801ecb4:	3301      	adds	r3, #1
 801ecb6:	68ba      	ldr	r2, [r7, #8]
 801ecb8:	4413      	add	r3, r2
 801ecba:	2200      	movs	r2, #0
 801ecbc:	701a      	strb	r2, [r3, #0]
 801ecbe:	7dfb      	ldrb	r3, [r7, #23]
 801ecc0:	3301      	adds	r3, #1
 801ecc2:	75fb      	strb	r3, [r7, #23]
 801ecc4:	7dfa      	ldrb	r2, [r7, #23]
 801ecc6:	79fb      	ldrb	r3, [r7, #7]
 801ecc8:	429a      	cmp	r2, r3
 801ecca:	d3d3      	bcc.n	801ec74 <IntToUnicode+0x18>
 801eccc:	bf00      	nop
 801ecce:	bf00      	nop
 801ecd0:	371c      	adds	r7, #28
 801ecd2:	46bd      	mov	sp, r7
 801ecd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ecd8:	4770      	bx	lr
	...

0801ecdc <HAL_PCD_MspInit>:
 801ecdc:	b580      	push	{r7, lr}
 801ecde:	b08a      	sub	sp, #40	; 0x28
 801ece0:	af00      	add	r7, sp, #0
 801ece2:	6078      	str	r0, [r7, #4]
 801ece4:	f107 0314 	add.w	r3, r7, #20
 801ece8:	2200      	movs	r2, #0
 801ecea:	601a      	str	r2, [r3, #0]
 801ecec:	605a      	str	r2, [r3, #4]
 801ecee:	609a      	str	r2, [r3, #8]
 801ecf0:	60da      	str	r2, [r3, #12]
 801ecf2:	611a      	str	r2, [r3, #16]
 801ecf4:	687b      	ldr	r3, [r7, #4]
 801ecf6:	681b      	ldr	r3, [r3, #0]
 801ecf8:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 801ecfc:	d13a      	bne.n	801ed74 <HAL_PCD_MspInit+0x98>
 801ecfe:	2300      	movs	r3, #0
 801ed00:	613b      	str	r3, [r7, #16]
 801ed02:	4b1e      	ldr	r3, [pc, #120]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed06:	4a1d      	ldr	r2, [pc, #116]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed08:	f043 0301 	orr.w	r3, r3, #1
 801ed0c:	6313      	str	r3, [r2, #48]	; 0x30
 801ed0e:	4b1b      	ldr	r3, [pc, #108]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed12:	f003 0301 	and.w	r3, r3, #1
 801ed16:	613b      	str	r3, [r7, #16]
 801ed18:	693b      	ldr	r3, [r7, #16]
 801ed1a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 801ed1e:	617b      	str	r3, [r7, #20]
 801ed20:	2302      	movs	r3, #2
 801ed22:	61bb      	str	r3, [r7, #24]
 801ed24:	2300      	movs	r3, #0
 801ed26:	61fb      	str	r3, [r7, #28]
 801ed28:	2303      	movs	r3, #3
 801ed2a:	623b      	str	r3, [r7, #32]
 801ed2c:	230a      	movs	r3, #10
 801ed2e:	627b      	str	r3, [r7, #36]	; 0x24
 801ed30:	f107 0314 	add.w	r3, r7, #20
 801ed34:	4619      	mov	r1, r3
 801ed36:	4812      	ldr	r0, [pc, #72]	; (801ed80 <HAL_PCD_MspInit+0xa4>)
 801ed38:	f7f2 fa02 	bl	8011140 <HAL_GPIO_Init>
 801ed3c:	4b0f      	ldr	r3, [pc, #60]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801ed40:	4a0e      	ldr	r2, [pc, #56]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed42:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ed46:	6353      	str	r3, [r2, #52]	; 0x34
 801ed48:	2300      	movs	r3, #0
 801ed4a:	60fb      	str	r3, [r7, #12]
 801ed4c:	4b0b      	ldr	r3, [pc, #44]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ed50:	4a0a      	ldr	r2, [pc, #40]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed52:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801ed56:	6453      	str	r3, [r2, #68]	; 0x44
 801ed58:	4b08      	ldr	r3, [pc, #32]	; (801ed7c <HAL_PCD_MspInit+0xa0>)
 801ed5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ed5c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801ed60:	60fb      	str	r3, [r7, #12]
 801ed62:	68fb      	ldr	r3, [r7, #12]
 801ed64:	2200      	movs	r2, #0
 801ed66:	2105      	movs	r1, #5
 801ed68:	2043      	movs	r0, #67	; 0x43
 801ed6a:	f7f1 fdb1 	bl	80108d0 <HAL_NVIC_SetPriority>
 801ed6e:	2043      	movs	r0, #67	; 0x43
 801ed70:	f7f1 fdca 	bl	8010908 <HAL_NVIC_EnableIRQ>
 801ed74:	bf00      	nop
 801ed76:	3728      	adds	r7, #40	; 0x28
 801ed78:	46bd      	mov	sp, r7
 801ed7a:	bd80      	pop	{r7, pc}
 801ed7c:	40023800 	.word	0x40023800
 801ed80:	40020000 	.word	0x40020000

0801ed84 <HAL_PCD_SetupStageCallback>:
 801ed84:	b580      	push	{r7, lr}
 801ed86:	b082      	sub	sp, #8
 801ed88:	af00      	add	r7, sp, #0
 801ed8a:	6078      	str	r0, [r7, #4]
 801ed8c:	687b      	ldr	r3, [r7, #4]
 801ed8e:	f8d3 2508 	ldr.w	r2, [r3, #1288]	; 0x508
 801ed92:	687b      	ldr	r3, [r7, #4]
 801ed94:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 801ed98:	4619      	mov	r1, r3
 801ed9a:	4610      	mov	r0, r2
 801ed9c:	f7fb f92d 	bl	8019ffa <USBD_LL_SetupStage>
 801eda0:	bf00      	nop
 801eda2:	3708      	adds	r7, #8
 801eda4:	46bd      	mov	sp, r7
 801eda6:	bd80      	pop	{r7, pc}

0801eda8 <HAL_PCD_DataOutStageCallback>:
 801eda8:	b580      	push	{r7, lr}
 801edaa:	b082      	sub	sp, #8
 801edac:	af00      	add	r7, sp, #0
 801edae:	6078      	str	r0, [r7, #4]
 801edb0:	460b      	mov	r3, r1
 801edb2:	70fb      	strb	r3, [r7, #3]
 801edb4:	687b      	ldr	r3, [r7, #4]
 801edb6:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 801edba:	78fa      	ldrb	r2, [r7, #3]
 801edbc:	6879      	ldr	r1, [r7, #4]
 801edbe:	4613      	mov	r3, r2
 801edc0:	00db      	lsls	r3, r3, #3
 801edc2:	4413      	add	r3, r2
 801edc4:	009b      	lsls	r3, r3, #2
 801edc6:	440b      	add	r3, r1
 801edc8:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 801edcc:	681a      	ldr	r2, [r3, #0]
 801edce:	78fb      	ldrb	r3, [r7, #3]
 801edd0:	4619      	mov	r1, r3
 801edd2:	f7fb f967 	bl	801a0a4 <USBD_LL_DataOutStage>
 801edd6:	bf00      	nop
 801edd8:	3708      	adds	r7, #8
 801edda:	46bd      	mov	sp, r7
 801eddc:	bd80      	pop	{r7, pc}

0801edde <HAL_PCD_DataInStageCallback>:
 801edde:	b580      	push	{r7, lr}
 801ede0:	b082      	sub	sp, #8
 801ede2:	af00      	add	r7, sp, #0
 801ede4:	6078      	str	r0, [r7, #4]
 801ede6:	460b      	mov	r3, r1
 801ede8:	70fb      	strb	r3, [r7, #3]
 801edea:	687b      	ldr	r3, [r7, #4]
 801edec:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 801edf0:	78fa      	ldrb	r2, [r7, #3]
 801edf2:	6879      	ldr	r1, [r7, #4]
 801edf4:	4613      	mov	r3, r2
 801edf6:	00db      	lsls	r3, r3, #3
 801edf8:	4413      	add	r3, r2
 801edfa:	009b      	lsls	r3, r3, #2
 801edfc:	440b      	add	r3, r1
 801edfe:	334c      	adds	r3, #76	; 0x4c
 801ee00:	681a      	ldr	r2, [r3, #0]
 801ee02:	78fb      	ldrb	r3, [r7, #3]
 801ee04:	4619      	mov	r1, r3
 801ee06:	f7fb fa00 	bl	801a20a <USBD_LL_DataInStage>
 801ee0a:	bf00      	nop
 801ee0c:	3708      	adds	r7, #8
 801ee0e:	46bd      	mov	sp, r7
 801ee10:	bd80      	pop	{r7, pc}

0801ee12 <HAL_PCD_SOFCallback>:
 801ee12:	b580      	push	{r7, lr}
 801ee14:	b082      	sub	sp, #8
 801ee16:	af00      	add	r7, sp, #0
 801ee18:	6078      	str	r0, [r7, #4]
 801ee1a:	687b      	ldr	r3, [r7, #4]
 801ee1c:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ee20:	4618      	mov	r0, r3
 801ee22:	f7fb fb34 	bl	801a48e <USBD_LL_SOF>
 801ee26:	bf00      	nop
 801ee28:	3708      	adds	r7, #8
 801ee2a:	46bd      	mov	sp, r7
 801ee2c:	bd80      	pop	{r7, pc}

0801ee2e <HAL_PCD_ResetCallback>:
 801ee2e:	b580      	push	{r7, lr}
 801ee30:	b084      	sub	sp, #16
 801ee32:	af00      	add	r7, sp, #0
 801ee34:	6078      	str	r0, [r7, #4]
 801ee36:	2301      	movs	r3, #1
 801ee38:	73fb      	strb	r3, [r7, #15]
 801ee3a:	687b      	ldr	r3, [r7, #4]
 801ee3c:	68db      	ldr	r3, [r3, #12]
 801ee3e:	2b00      	cmp	r3, #0
 801ee40:	d102      	bne.n	801ee48 <HAL_PCD_ResetCallback+0x1a>
 801ee42:	2300      	movs	r3, #0
 801ee44:	73fb      	strb	r3, [r7, #15]
 801ee46:	e008      	b.n	801ee5a <HAL_PCD_ResetCallback+0x2c>
 801ee48:	687b      	ldr	r3, [r7, #4]
 801ee4a:	68db      	ldr	r3, [r3, #12]
 801ee4c:	2b02      	cmp	r3, #2
 801ee4e:	d102      	bne.n	801ee56 <HAL_PCD_ResetCallback+0x28>
 801ee50:	2301      	movs	r3, #1
 801ee52:	73fb      	strb	r3, [r7, #15]
 801ee54:	e001      	b.n	801ee5a <HAL_PCD_ResetCallback+0x2c>
 801ee56:	f7e4 feb4 	bl	8003bc2 <Error_Handler>
 801ee5a:	687b      	ldr	r3, [r7, #4]
 801ee5c:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ee60:	7bfa      	ldrb	r2, [r7, #15]
 801ee62:	4611      	mov	r1, r2
 801ee64:	4618      	mov	r0, r3
 801ee66:	f7fb fad4 	bl	801a412 <USBD_LL_SetSpeed>
 801ee6a:	687b      	ldr	r3, [r7, #4]
 801ee6c:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ee70:	4618      	mov	r0, r3
 801ee72:	f7fb fa7c 	bl	801a36e <USBD_LL_Reset>
 801ee76:	bf00      	nop
 801ee78:	3710      	adds	r7, #16
 801ee7a:	46bd      	mov	sp, r7
 801ee7c:	bd80      	pop	{r7, pc}
	...

0801ee80 <HAL_PCD_SuspendCallback>:
 801ee80:	b580      	push	{r7, lr}
 801ee82:	b082      	sub	sp, #8
 801ee84:	af00      	add	r7, sp, #0
 801ee86:	6078      	str	r0, [r7, #4]
 801ee88:	687b      	ldr	r3, [r7, #4]
 801ee8a:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ee8e:	4618      	mov	r0, r3
 801ee90:	f7fb facf 	bl	801a432 <USBD_LL_Suspend>
 801ee94:	687b      	ldr	r3, [r7, #4]
 801ee96:	681b      	ldr	r3, [r3, #0]
 801ee98:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 801ee9c:	681b      	ldr	r3, [r3, #0]
 801ee9e:	687a      	ldr	r2, [r7, #4]
 801eea0:	6812      	ldr	r2, [r2, #0]
 801eea2:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 801eea6:	f043 0301 	orr.w	r3, r3, #1
 801eeaa:	6013      	str	r3, [r2, #0]
 801eeac:	4b08      	ldr	r3, [pc, #32]	; (801eed0 <HAL_PCD_SuspendCallback+0x50>)
 801eeae:	2200      	movs	r2, #0
 801eeb0:	701a      	strb	r2, [r3, #0]
 801eeb2:	687b      	ldr	r3, [r7, #4]
 801eeb4:	6a1b      	ldr	r3, [r3, #32]
 801eeb6:	2b00      	cmp	r3, #0
 801eeb8:	d005      	beq.n	801eec6 <HAL_PCD_SuspendCallback+0x46>
 801eeba:	4b06      	ldr	r3, [pc, #24]	; (801eed4 <HAL_PCD_SuspendCallback+0x54>)
 801eebc:	691b      	ldr	r3, [r3, #16]
 801eebe:	4a05      	ldr	r2, [pc, #20]	; (801eed4 <HAL_PCD_SuspendCallback+0x54>)
 801eec0:	f043 0306 	orr.w	r3, r3, #6
 801eec4:	6113      	str	r3, [r2, #16]
 801eec6:	bf00      	nop
 801eec8:	3708      	adds	r7, #8
 801eeca:	46bd      	mov	sp, r7
 801eecc:	bd80      	pop	{r7, pc}
 801eece:	bf00      	nop
 801eed0:	2000351d 	.word	0x2000351d
 801eed4:	e000ed00 	.word	0xe000ed00

0801eed8 <HAL_PCD_ResumeCallback>:
 801eed8:	b580      	push	{r7, lr}
 801eeda:	b082      	sub	sp, #8
 801eedc:	af00      	add	r7, sp, #0
 801eede:	6078      	str	r0, [r7, #4]
 801eee0:	4b06      	ldr	r3, [pc, #24]	; (801eefc <HAL_PCD_ResumeCallback+0x24>)
 801eee2:	2201      	movs	r2, #1
 801eee4:	701a      	strb	r2, [r3, #0]
 801eee6:	687b      	ldr	r3, [r7, #4]
 801eee8:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801eeec:	4618      	mov	r0, r3
 801eeee:	f7fb fab6 	bl	801a45e <USBD_LL_Resume>
 801eef2:	bf00      	nop
 801eef4:	3708      	adds	r7, #8
 801eef6:	46bd      	mov	sp, r7
 801eef8:	bd80      	pop	{r7, pc}
 801eefa:	bf00      	nop
 801eefc:	2000351d 	.word	0x2000351d

0801ef00 <HAL_PCD_ISOOUTIncompleteCallback>:
 801ef00:	b580      	push	{r7, lr}
 801ef02:	b082      	sub	sp, #8
 801ef04:	af00      	add	r7, sp, #0
 801ef06:	6078      	str	r0, [r7, #4]
 801ef08:	460b      	mov	r3, r1
 801ef0a:	70fb      	strb	r3, [r7, #3]
 801ef0c:	687b      	ldr	r3, [r7, #4]
 801ef0e:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ef12:	78fa      	ldrb	r2, [r7, #3]
 801ef14:	4611      	mov	r1, r2
 801ef16:	4618      	mov	r0, r3
 801ef18:	f7fb fb0b 	bl	801a532 <USBD_LL_IsoOUTIncomplete>
 801ef1c:	bf00      	nop
 801ef1e:	3708      	adds	r7, #8
 801ef20:	46bd      	mov	sp, r7
 801ef22:	bd80      	pop	{r7, pc}

0801ef24 <HAL_PCD_ISOINIncompleteCallback>:
 801ef24:	b580      	push	{r7, lr}
 801ef26:	b082      	sub	sp, #8
 801ef28:	af00      	add	r7, sp, #0
 801ef2a:	6078      	str	r0, [r7, #4]
 801ef2c:	460b      	mov	r3, r1
 801ef2e:	70fb      	strb	r3, [r7, #3]
 801ef30:	687b      	ldr	r3, [r7, #4]
 801ef32:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ef36:	78fa      	ldrb	r2, [r7, #3]
 801ef38:	4611      	mov	r1, r2
 801ef3a:	4618      	mov	r0, r3
 801ef3c:	f7fb fac7 	bl	801a4ce <USBD_LL_IsoINIncomplete>
 801ef40:	bf00      	nop
 801ef42:	3708      	adds	r7, #8
 801ef44:	46bd      	mov	sp, r7
 801ef46:	bd80      	pop	{r7, pc}

0801ef48 <HAL_PCD_ConnectCallback>:
 801ef48:	b580      	push	{r7, lr}
 801ef4a:	b082      	sub	sp, #8
 801ef4c:	af00      	add	r7, sp, #0
 801ef4e:	6078      	str	r0, [r7, #4]
 801ef50:	687b      	ldr	r3, [r7, #4]
 801ef52:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ef56:	4618      	mov	r0, r3
 801ef58:	f7fb fb1d 	bl	801a596 <USBD_LL_DevConnected>
 801ef5c:	bf00      	nop
 801ef5e:	3708      	adds	r7, #8
 801ef60:	46bd      	mov	sp, r7
 801ef62:	bd80      	pop	{r7, pc}

0801ef64 <HAL_PCD_DisconnectCallback>:
 801ef64:	b580      	push	{r7, lr}
 801ef66:	b082      	sub	sp, #8
 801ef68:	af00      	add	r7, sp, #0
 801ef6a:	6078      	str	r0, [r7, #4]
 801ef6c:	687b      	ldr	r3, [r7, #4]
 801ef6e:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ef72:	4618      	mov	r0, r3
 801ef74:	f7fb fb1a 	bl	801a5ac <USBD_LL_DevDisconnected>
 801ef78:	bf00      	nop
 801ef7a:	3708      	adds	r7, #8
 801ef7c:	46bd      	mov	sp, r7
 801ef7e:	bd80      	pop	{r7, pc}

0801ef80 <USBD_LL_Init>:
 801ef80:	b580      	push	{r7, lr}
 801ef82:	b082      	sub	sp, #8
 801ef84:	af00      	add	r7, sp, #0
 801ef86:	6078      	str	r0, [r7, #4]
 801ef88:	687b      	ldr	r3, [r7, #4]
 801ef8a:	781b      	ldrb	r3, [r3, #0]
 801ef8c:	2b00      	cmp	r3, #0
 801ef8e:	d13c      	bne.n	801f00a <USBD_LL_Init+0x8a>
 801ef90:	4a20      	ldr	r2, [pc, #128]	; (801f014 <USBD_LL_Init+0x94>)
 801ef92:	687b      	ldr	r3, [r7, #4]
 801ef94:	f8c2 3508 	str.w	r3, [r2, #1288]	; 0x508
 801ef98:	687b      	ldr	r3, [r7, #4]
 801ef9a:	4a1e      	ldr	r2, [pc, #120]	; (801f014 <USBD_LL_Init+0x94>)
 801ef9c:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8
 801efa0:	4b1c      	ldr	r3, [pc, #112]	; (801f014 <USBD_LL_Init+0x94>)
 801efa2:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 801efa6:	601a      	str	r2, [r3, #0]
 801efa8:	4b1a      	ldr	r3, [pc, #104]	; (801f014 <USBD_LL_Init+0x94>)
 801efaa:	2204      	movs	r2, #4
 801efac:	605a      	str	r2, [r3, #4]
 801efae:	4b19      	ldr	r3, [pc, #100]	; (801f014 <USBD_LL_Init+0x94>)
 801efb0:	2202      	movs	r2, #2
 801efb2:	60da      	str	r2, [r3, #12]
 801efb4:	4b17      	ldr	r3, [pc, #92]	; (801f014 <USBD_LL_Init+0x94>)
 801efb6:	2200      	movs	r2, #0
 801efb8:	611a      	str	r2, [r3, #16]
 801efba:	4b16      	ldr	r3, [pc, #88]	; (801f014 <USBD_LL_Init+0x94>)
 801efbc:	2202      	movs	r2, #2
 801efbe:	619a      	str	r2, [r3, #24]
 801efc0:	4b14      	ldr	r3, [pc, #80]	; (801f014 <USBD_LL_Init+0x94>)
 801efc2:	2200      	movs	r2, #0
 801efc4:	61da      	str	r2, [r3, #28]
 801efc6:	4b13      	ldr	r3, [pc, #76]	; (801f014 <USBD_LL_Init+0x94>)
 801efc8:	2200      	movs	r2, #0
 801efca:	621a      	str	r2, [r3, #32]
 801efcc:	4b11      	ldr	r3, [pc, #68]	; (801f014 <USBD_LL_Init+0x94>)
 801efce:	2200      	movs	r2, #0
 801efd0:	625a      	str	r2, [r3, #36]	; 0x24
 801efd2:	4b10      	ldr	r3, [pc, #64]	; (801f014 <USBD_LL_Init+0x94>)
 801efd4:	2200      	movs	r2, #0
 801efd6:	62da      	str	r2, [r3, #44]	; 0x2c
 801efd8:	4b0e      	ldr	r3, [pc, #56]	; (801f014 <USBD_LL_Init+0x94>)
 801efda:	2200      	movs	r2, #0
 801efdc:	631a      	str	r2, [r3, #48]	; 0x30
 801efde:	480d      	ldr	r0, [pc, #52]	; (801f014 <USBD_LL_Init+0x94>)
 801efe0:	f7f4 f80f 	bl	8013002 <HAL_PCD_Init>
 801efe4:	4603      	mov	r3, r0
 801efe6:	2b00      	cmp	r3, #0
 801efe8:	d001      	beq.n	801efee <USBD_LL_Init+0x6e>
 801efea:	f7e4 fdea 	bl	8003bc2 <Error_Handler>
 801efee:	2180      	movs	r1, #128	; 0x80
 801eff0:	4808      	ldr	r0, [pc, #32]	; (801f014 <USBD_LL_Init+0x94>)
 801eff2:	f7f5 fa66 	bl	80144c2 <HAL_PCDEx_SetRxFiFo>
 801eff6:	2240      	movs	r2, #64	; 0x40
 801eff8:	2100      	movs	r1, #0
 801effa:	4806      	ldr	r0, [pc, #24]	; (801f014 <USBD_LL_Init+0x94>)
 801effc:	f7f5 fa1a 	bl	8014434 <HAL_PCDEx_SetTxFiFo>
 801f000:	2280      	movs	r2, #128	; 0x80
 801f002:	2101      	movs	r1, #1
 801f004:	4803      	ldr	r0, [pc, #12]	; (801f014 <USBD_LL_Init+0x94>)
 801f006:	f7f5 fa15 	bl	8014434 <HAL_PCDEx_SetTxFiFo>
 801f00a:	2300      	movs	r3, #0
 801f00c:	4618      	mov	r0, r3
 801f00e:	3708      	adds	r7, #8
 801f010:	46bd      	mov	sp, r7
 801f012:	bd80      	pop	{r7, pc}
 801f014:	2000ee4c 	.word	0x2000ee4c

0801f018 <USBD_LL_Start>:
 801f018:	b580      	push	{r7, lr}
 801f01a:	b084      	sub	sp, #16
 801f01c:	af00      	add	r7, sp, #0
 801f01e:	6078      	str	r0, [r7, #4]
 801f020:	2300      	movs	r3, #0
 801f022:	73fb      	strb	r3, [r7, #15]
 801f024:	2300      	movs	r3, #0
 801f026:	73bb      	strb	r3, [r7, #14]
 801f028:	687b      	ldr	r3, [r7, #4]
 801f02a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f02e:	4618      	mov	r0, r3
 801f030:	f7f4 f904 	bl	801323c <HAL_PCD_Start>
 801f034:	4603      	mov	r3, r0
 801f036:	73fb      	strb	r3, [r7, #15]
 801f038:	7bfb      	ldrb	r3, [r7, #15]
 801f03a:	4618      	mov	r0, r3
 801f03c:	f000 f942 	bl	801f2c4 <USBD_Get_USB_Status>
 801f040:	4603      	mov	r3, r0
 801f042:	73bb      	strb	r3, [r7, #14]
 801f044:	7bbb      	ldrb	r3, [r7, #14]
 801f046:	4618      	mov	r0, r3
 801f048:	3710      	adds	r7, #16
 801f04a:	46bd      	mov	sp, r7
 801f04c:	bd80      	pop	{r7, pc}

0801f04e <USBD_LL_OpenEP>:
 801f04e:	b580      	push	{r7, lr}
 801f050:	b084      	sub	sp, #16
 801f052:	af00      	add	r7, sp, #0
 801f054:	6078      	str	r0, [r7, #4]
 801f056:	4608      	mov	r0, r1
 801f058:	4611      	mov	r1, r2
 801f05a:	461a      	mov	r2, r3
 801f05c:	4603      	mov	r3, r0
 801f05e:	70fb      	strb	r3, [r7, #3]
 801f060:	460b      	mov	r3, r1
 801f062:	70bb      	strb	r3, [r7, #2]
 801f064:	4613      	mov	r3, r2
 801f066:	803b      	strh	r3, [r7, #0]
 801f068:	2300      	movs	r3, #0
 801f06a:	73fb      	strb	r3, [r7, #15]
 801f06c:	2300      	movs	r3, #0
 801f06e:	73bb      	strb	r3, [r7, #14]
 801f070:	687b      	ldr	r3, [r7, #4]
 801f072:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f076:	78bb      	ldrb	r3, [r7, #2]
 801f078:	883a      	ldrh	r2, [r7, #0]
 801f07a:	78f9      	ldrb	r1, [r7, #3]
 801f07c:	f7f4 fdd5 	bl	8013c2a <HAL_PCD_EP_Open>
 801f080:	4603      	mov	r3, r0
 801f082:	73fb      	strb	r3, [r7, #15]
 801f084:	7bfb      	ldrb	r3, [r7, #15]
 801f086:	4618      	mov	r0, r3
 801f088:	f000 f91c 	bl	801f2c4 <USBD_Get_USB_Status>
 801f08c:	4603      	mov	r3, r0
 801f08e:	73bb      	strb	r3, [r7, #14]
 801f090:	7bbb      	ldrb	r3, [r7, #14]
 801f092:	4618      	mov	r0, r3
 801f094:	3710      	adds	r7, #16
 801f096:	46bd      	mov	sp, r7
 801f098:	bd80      	pop	{r7, pc}

0801f09a <USBD_LL_CloseEP>:
 801f09a:	b580      	push	{r7, lr}
 801f09c:	b084      	sub	sp, #16
 801f09e:	af00      	add	r7, sp, #0
 801f0a0:	6078      	str	r0, [r7, #4]
 801f0a2:	460b      	mov	r3, r1
 801f0a4:	70fb      	strb	r3, [r7, #3]
 801f0a6:	2300      	movs	r3, #0
 801f0a8:	73fb      	strb	r3, [r7, #15]
 801f0aa:	2300      	movs	r3, #0
 801f0ac:	73bb      	strb	r3, [r7, #14]
 801f0ae:	687b      	ldr	r3, [r7, #4]
 801f0b0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f0b4:	78fa      	ldrb	r2, [r7, #3]
 801f0b6:	4611      	mov	r1, r2
 801f0b8:	4618      	mov	r0, r3
 801f0ba:	f7f4 fe1e 	bl	8013cfa <HAL_PCD_EP_Close>
 801f0be:	4603      	mov	r3, r0
 801f0c0:	73fb      	strb	r3, [r7, #15]
 801f0c2:	7bfb      	ldrb	r3, [r7, #15]
 801f0c4:	4618      	mov	r0, r3
 801f0c6:	f000 f8fd 	bl	801f2c4 <USBD_Get_USB_Status>
 801f0ca:	4603      	mov	r3, r0
 801f0cc:	73bb      	strb	r3, [r7, #14]
 801f0ce:	7bbb      	ldrb	r3, [r7, #14]
 801f0d0:	4618      	mov	r0, r3
 801f0d2:	3710      	adds	r7, #16
 801f0d4:	46bd      	mov	sp, r7
 801f0d6:	bd80      	pop	{r7, pc}

0801f0d8 <USBD_LL_StallEP>:
 801f0d8:	b580      	push	{r7, lr}
 801f0da:	b084      	sub	sp, #16
 801f0dc:	af00      	add	r7, sp, #0
 801f0de:	6078      	str	r0, [r7, #4]
 801f0e0:	460b      	mov	r3, r1
 801f0e2:	70fb      	strb	r3, [r7, #3]
 801f0e4:	2300      	movs	r3, #0
 801f0e6:	73fb      	strb	r3, [r7, #15]
 801f0e8:	2300      	movs	r3, #0
 801f0ea:	73bb      	strb	r3, [r7, #14]
 801f0ec:	687b      	ldr	r3, [r7, #4]
 801f0ee:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f0f2:	78fa      	ldrb	r2, [r7, #3]
 801f0f4:	4611      	mov	r1, r2
 801f0f6:	4618      	mov	r0, r3
 801f0f8:	f7f4 fef6 	bl	8013ee8 <HAL_PCD_EP_SetStall>
 801f0fc:	4603      	mov	r3, r0
 801f0fe:	73fb      	strb	r3, [r7, #15]
 801f100:	7bfb      	ldrb	r3, [r7, #15]
 801f102:	4618      	mov	r0, r3
 801f104:	f000 f8de 	bl	801f2c4 <USBD_Get_USB_Status>
 801f108:	4603      	mov	r3, r0
 801f10a:	73bb      	strb	r3, [r7, #14]
 801f10c:	7bbb      	ldrb	r3, [r7, #14]
 801f10e:	4618      	mov	r0, r3
 801f110:	3710      	adds	r7, #16
 801f112:	46bd      	mov	sp, r7
 801f114:	bd80      	pop	{r7, pc}

0801f116 <USBD_LL_ClearStallEP>:
 801f116:	b580      	push	{r7, lr}
 801f118:	b084      	sub	sp, #16
 801f11a:	af00      	add	r7, sp, #0
 801f11c:	6078      	str	r0, [r7, #4]
 801f11e:	460b      	mov	r3, r1
 801f120:	70fb      	strb	r3, [r7, #3]
 801f122:	2300      	movs	r3, #0
 801f124:	73fb      	strb	r3, [r7, #15]
 801f126:	2300      	movs	r3, #0
 801f128:	73bb      	strb	r3, [r7, #14]
 801f12a:	687b      	ldr	r3, [r7, #4]
 801f12c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f130:	78fa      	ldrb	r2, [r7, #3]
 801f132:	4611      	mov	r1, r2
 801f134:	4618      	mov	r0, r3
 801f136:	f7f4 ff3b 	bl	8013fb0 <HAL_PCD_EP_ClrStall>
 801f13a:	4603      	mov	r3, r0
 801f13c:	73fb      	strb	r3, [r7, #15]
 801f13e:	7bfb      	ldrb	r3, [r7, #15]
 801f140:	4618      	mov	r0, r3
 801f142:	f000 f8bf 	bl	801f2c4 <USBD_Get_USB_Status>
 801f146:	4603      	mov	r3, r0
 801f148:	73bb      	strb	r3, [r7, #14]
 801f14a:	7bbb      	ldrb	r3, [r7, #14]
 801f14c:	4618      	mov	r0, r3
 801f14e:	3710      	adds	r7, #16
 801f150:	46bd      	mov	sp, r7
 801f152:	bd80      	pop	{r7, pc}

0801f154 <USBD_LL_IsStallEP>:
 801f154:	b480      	push	{r7}
 801f156:	b085      	sub	sp, #20
 801f158:	af00      	add	r7, sp, #0
 801f15a:	6078      	str	r0, [r7, #4]
 801f15c:	460b      	mov	r3, r1
 801f15e:	70fb      	strb	r3, [r7, #3]
 801f160:	687b      	ldr	r3, [r7, #4]
 801f162:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f166:	60fb      	str	r3, [r7, #12]
 801f168:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801f16c:	2b00      	cmp	r3, #0
 801f16e:	da0b      	bge.n	801f188 <USBD_LL_IsStallEP+0x34>
 801f170:	78fb      	ldrb	r3, [r7, #3]
 801f172:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801f176:	68f9      	ldr	r1, [r7, #12]
 801f178:	4613      	mov	r3, r2
 801f17a:	00db      	lsls	r3, r3, #3
 801f17c:	4413      	add	r3, r2
 801f17e:	009b      	lsls	r3, r3, #2
 801f180:	440b      	add	r3, r1
 801f182:	333e      	adds	r3, #62	; 0x3e
 801f184:	781b      	ldrb	r3, [r3, #0]
 801f186:	e00b      	b.n	801f1a0 <USBD_LL_IsStallEP+0x4c>
 801f188:	78fb      	ldrb	r3, [r7, #3]
 801f18a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801f18e:	68f9      	ldr	r1, [r7, #12]
 801f190:	4613      	mov	r3, r2
 801f192:	00db      	lsls	r3, r3, #3
 801f194:	4413      	add	r3, r2
 801f196:	009b      	lsls	r3, r3, #2
 801f198:	440b      	add	r3, r1
 801f19a:	f203 237e 	addw	r3, r3, #638	; 0x27e
 801f19e:	781b      	ldrb	r3, [r3, #0]
 801f1a0:	4618      	mov	r0, r3
 801f1a2:	3714      	adds	r7, #20
 801f1a4:	46bd      	mov	sp, r7
 801f1a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f1aa:	4770      	bx	lr

0801f1ac <USBD_LL_SetUSBAddress>:
 801f1ac:	b580      	push	{r7, lr}
 801f1ae:	b084      	sub	sp, #16
 801f1b0:	af00      	add	r7, sp, #0
 801f1b2:	6078      	str	r0, [r7, #4]
 801f1b4:	460b      	mov	r3, r1
 801f1b6:	70fb      	strb	r3, [r7, #3]
 801f1b8:	2300      	movs	r3, #0
 801f1ba:	73fb      	strb	r3, [r7, #15]
 801f1bc:	2300      	movs	r3, #0
 801f1be:	73bb      	strb	r3, [r7, #14]
 801f1c0:	687b      	ldr	r3, [r7, #4]
 801f1c2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f1c6:	78fa      	ldrb	r2, [r7, #3]
 801f1c8:	4611      	mov	r1, r2
 801f1ca:	4618      	mov	r0, r3
 801f1cc:	f7f4 fd08 	bl	8013be0 <HAL_PCD_SetAddress>
 801f1d0:	4603      	mov	r3, r0
 801f1d2:	73fb      	strb	r3, [r7, #15]
 801f1d4:	7bfb      	ldrb	r3, [r7, #15]
 801f1d6:	4618      	mov	r0, r3
 801f1d8:	f000 f874 	bl	801f2c4 <USBD_Get_USB_Status>
 801f1dc:	4603      	mov	r3, r0
 801f1de:	73bb      	strb	r3, [r7, #14]
 801f1e0:	7bbb      	ldrb	r3, [r7, #14]
 801f1e2:	4618      	mov	r0, r3
 801f1e4:	3710      	adds	r7, #16
 801f1e6:	46bd      	mov	sp, r7
 801f1e8:	bd80      	pop	{r7, pc}

0801f1ea <USBD_LL_Transmit>:
 801f1ea:	b580      	push	{r7, lr}
 801f1ec:	b086      	sub	sp, #24
 801f1ee:	af00      	add	r7, sp, #0
 801f1f0:	60f8      	str	r0, [r7, #12]
 801f1f2:	607a      	str	r2, [r7, #4]
 801f1f4:	603b      	str	r3, [r7, #0]
 801f1f6:	460b      	mov	r3, r1
 801f1f8:	72fb      	strb	r3, [r7, #11]
 801f1fa:	2300      	movs	r3, #0
 801f1fc:	75fb      	strb	r3, [r7, #23]
 801f1fe:	2300      	movs	r3, #0
 801f200:	75bb      	strb	r3, [r7, #22]
 801f202:	68fb      	ldr	r3, [r7, #12]
 801f204:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f208:	7af9      	ldrb	r1, [r7, #11]
 801f20a:	683b      	ldr	r3, [r7, #0]
 801f20c:	687a      	ldr	r2, [r7, #4]
 801f20e:	f7f4 fe21 	bl	8013e54 <HAL_PCD_EP_Transmit>
 801f212:	4603      	mov	r3, r0
 801f214:	75fb      	strb	r3, [r7, #23]
 801f216:	7dfb      	ldrb	r3, [r7, #23]
 801f218:	4618      	mov	r0, r3
 801f21a:	f000 f853 	bl	801f2c4 <USBD_Get_USB_Status>
 801f21e:	4603      	mov	r3, r0
 801f220:	75bb      	strb	r3, [r7, #22]
 801f222:	7dbb      	ldrb	r3, [r7, #22]
 801f224:	4618      	mov	r0, r3
 801f226:	3718      	adds	r7, #24
 801f228:	46bd      	mov	sp, r7
 801f22a:	bd80      	pop	{r7, pc}

0801f22c <USBD_LL_PrepareReceive>:
 801f22c:	b580      	push	{r7, lr}
 801f22e:	b086      	sub	sp, #24
 801f230:	af00      	add	r7, sp, #0
 801f232:	60f8      	str	r0, [r7, #12]
 801f234:	607a      	str	r2, [r7, #4]
 801f236:	603b      	str	r3, [r7, #0]
 801f238:	460b      	mov	r3, r1
 801f23a:	72fb      	strb	r3, [r7, #11]
 801f23c:	2300      	movs	r3, #0
 801f23e:	75fb      	strb	r3, [r7, #23]
 801f240:	2300      	movs	r3, #0
 801f242:	75bb      	strb	r3, [r7, #22]
 801f244:	68fb      	ldr	r3, [r7, #12]
 801f246:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f24a:	7af9      	ldrb	r1, [r7, #11]
 801f24c:	683b      	ldr	r3, [r7, #0]
 801f24e:	687a      	ldr	r2, [r7, #4]
 801f250:	f7f4 fd9d 	bl	8013d8e <HAL_PCD_EP_Receive>
 801f254:	4603      	mov	r3, r0
 801f256:	75fb      	strb	r3, [r7, #23]
 801f258:	7dfb      	ldrb	r3, [r7, #23]
 801f25a:	4618      	mov	r0, r3
 801f25c:	f000 f832 	bl	801f2c4 <USBD_Get_USB_Status>
 801f260:	4603      	mov	r3, r0
 801f262:	75bb      	strb	r3, [r7, #22]
 801f264:	7dbb      	ldrb	r3, [r7, #22]
 801f266:	4618      	mov	r0, r3
 801f268:	3718      	adds	r7, #24
 801f26a:	46bd      	mov	sp, r7
 801f26c:	bd80      	pop	{r7, pc}

0801f26e <USBD_LL_GetRxDataSize>:
 801f26e:	b580      	push	{r7, lr}
 801f270:	b082      	sub	sp, #8
 801f272:	af00      	add	r7, sp, #0
 801f274:	6078      	str	r0, [r7, #4]
 801f276:	460b      	mov	r3, r1
 801f278:	70fb      	strb	r3, [r7, #3]
 801f27a:	687b      	ldr	r3, [r7, #4]
 801f27c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f280:	78fa      	ldrb	r2, [r7, #3]
 801f282:	4611      	mov	r1, r2
 801f284:	4618      	mov	r0, r3
 801f286:	f7f4 fdcd 	bl	8013e24 <HAL_PCD_EP_GetRxCount>
 801f28a:	4603      	mov	r3, r0
 801f28c:	4618      	mov	r0, r3
 801f28e:	3708      	adds	r7, #8
 801f290:	46bd      	mov	sp, r7
 801f292:	bd80      	pop	{r7, pc}

0801f294 <USBD_static_malloc>:
 801f294:	b480      	push	{r7}
 801f296:	b083      	sub	sp, #12
 801f298:	af00      	add	r7, sp, #0
 801f29a:	6078      	str	r0, [r7, #4]
 801f29c:	4b03      	ldr	r3, [pc, #12]	; (801f2ac <USBD_static_malloc+0x18>)
 801f29e:	4618      	mov	r0, r3
 801f2a0:	370c      	adds	r7, #12
 801f2a2:	46bd      	mov	sp, r7
 801f2a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f2a8:	4770      	bx	lr
 801f2aa:	bf00      	nop
 801f2ac:	2000f358 	.word	0x2000f358

0801f2b0 <USBD_static_free>:
 801f2b0:	b480      	push	{r7}
 801f2b2:	b083      	sub	sp, #12
 801f2b4:	af00      	add	r7, sp, #0
 801f2b6:	6078      	str	r0, [r7, #4]
 801f2b8:	bf00      	nop
 801f2ba:	370c      	adds	r7, #12
 801f2bc:	46bd      	mov	sp, r7
 801f2be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f2c2:	4770      	bx	lr

0801f2c4 <USBD_Get_USB_Status>:
 801f2c4:	b480      	push	{r7}
 801f2c6:	b085      	sub	sp, #20
 801f2c8:	af00      	add	r7, sp, #0
 801f2ca:	4603      	mov	r3, r0
 801f2cc:	71fb      	strb	r3, [r7, #7]
 801f2ce:	2300      	movs	r3, #0
 801f2d0:	73fb      	strb	r3, [r7, #15]
 801f2d2:	79fb      	ldrb	r3, [r7, #7]
 801f2d4:	2b03      	cmp	r3, #3
 801f2d6:	d817      	bhi.n	801f308 <USBD_Get_USB_Status+0x44>
 801f2d8:	a201      	add	r2, pc, #4	; (adr r2, 801f2e0 <USBD_Get_USB_Status+0x1c>)
 801f2da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801f2de:	bf00      	nop
 801f2e0:	0801f2f1 	.word	0x0801f2f1
 801f2e4:	0801f2f7 	.word	0x0801f2f7
 801f2e8:	0801f2fd 	.word	0x0801f2fd
 801f2ec:	0801f303 	.word	0x0801f303
 801f2f0:	2300      	movs	r3, #0
 801f2f2:	73fb      	strb	r3, [r7, #15]
 801f2f4:	e00b      	b.n	801f30e <USBD_Get_USB_Status+0x4a>
 801f2f6:	2303      	movs	r3, #3
 801f2f8:	73fb      	strb	r3, [r7, #15]
 801f2fa:	e008      	b.n	801f30e <USBD_Get_USB_Status+0x4a>
 801f2fc:	2301      	movs	r3, #1
 801f2fe:	73fb      	strb	r3, [r7, #15]
 801f300:	e005      	b.n	801f30e <USBD_Get_USB_Status+0x4a>
 801f302:	2303      	movs	r3, #3
 801f304:	73fb      	strb	r3, [r7, #15]
 801f306:	e002      	b.n	801f30e <USBD_Get_USB_Status+0x4a>
 801f308:	2303      	movs	r3, #3
 801f30a:	73fb      	strb	r3, [r7, #15]
 801f30c:	bf00      	nop
 801f30e:	7bfb      	ldrb	r3, [r7, #15]
 801f310:	4618      	mov	r0, r3
 801f312:	3714      	adds	r7, #20
 801f314:	46bd      	mov	sp, r7
 801f316:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f31a:	4770      	bx	lr

0801f31c <std>:
 801f31c:	2300      	movs	r3, #0
 801f31e:	b510      	push	{r4, lr}
 801f320:	4604      	mov	r4, r0
 801f322:	e9c0 3300 	strd	r3, r3, [r0]
 801f326:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801f32a:	6083      	str	r3, [r0, #8]
 801f32c:	8181      	strh	r1, [r0, #12]
 801f32e:	6643      	str	r3, [r0, #100]	; 0x64
 801f330:	81c2      	strh	r2, [r0, #14]
 801f332:	6183      	str	r3, [r0, #24]
 801f334:	4619      	mov	r1, r3
 801f336:	2208      	movs	r2, #8
 801f338:	305c      	adds	r0, #92	; 0x5c
 801f33a:	f000 f91a 	bl	801f572 <memset>
 801f33e:	4b05      	ldr	r3, [pc, #20]	; (801f354 <std+0x38>)
 801f340:	6263      	str	r3, [r4, #36]	; 0x24
 801f342:	4b05      	ldr	r3, [pc, #20]	; (801f358 <std+0x3c>)
 801f344:	62a3      	str	r3, [r4, #40]	; 0x28
 801f346:	4b05      	ldr	r3, [pc, #20]	; (801f35c <std+0x40>)
 801f348:	62e3      	str	r3, [r4, #44]	; 0x2c
 801f34a:	4b05      	ldr	r3, [pc, #20]	; (801f360 <std+0x44>)
 801f34c:	6224      	str	r4, [r4, #32]
 801f34e:	6323      	str	r3, [r4, #48]	; 0x30
 801f350:	bd10      	pop	{r4, pc}
 801f352:	bf00      	nop
 801f354:	08020549 	.word	0x08020549
 801f358:	0802056b 	.word	0x0802056b
 801f35c:	080205a3 	.word	0x080205a3
 801f360:	080205c7 	.word	0x080205c7

0801f364 <_cleanup_r>:
 801f364:	4901      	ldr	r1, [pc, #4]	; (801f36c <_cleanup_r+0x8>)
 801f366:	f000 b8af 	b.w	801f4c8 <_fwalk_reent>
 801f36a:	bf00      	nop
 801f36c:	0802217d 	.word	0x0802217d

0801f370 <__sfmoreglue>:
 801f370:	b570      	push	{r4, r5, r6, lr}
 801f372:	2268      	movs	r2, #104	; 0x68
 801f374:	1e4d      	subs	r5, r1, #1
 801f376:	4355      	muls	r5, r2
 801f378:	460e      	mov	r6, r1
 801f37a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801f37e:	f000 f921 	bl	801f5c4 <_malloc_r>
 801f382:	4604      	mov	r4, r0
 801f384:	b140      	cbz	r0, 801f398 <__sfmoreglue+0x28>
 801f386:	2100      	movs	r1, #0
 801f388:	e9c0 1600 	strd	r1, r6, [r0]
 801f38c:	300c      	adds	r0, #12
 801f38e:	60a0      	str	r0, [r4, #8]
 801f390:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801f394:	f000 f8ed 	bl	801f572 <memset>
 801f398:	4620      	mov	r0, r4
 801f39a:	bd70      	pop	{r4, r5, r6, pc}

0801f39c <__sfp_lock_acquire>:
 801f39c:	4801      	ldr	r0, [pc, #4]	; (801f3a4 <__sfp_lock_acquire+0x8>)
 801f39e:	f000 b8d8 	b.w	801f552 <__retarget_lock_acquire_recursive>
 801f3a2:	bf00      	nop
 801f3a4:	2000f579 	.word	0x2000f579

0801f3a8 <__sfp_lock_release>:
 801f3a8:	4801      	ldr	r0, [pc, #4]	; (801f3b0 <__sfp_lock_release+0x8>)
 801f3aa:	f000 b8d3 	b.w	801f554 <__retarget_lock_release_recursive>
 801f3ae:	bf00      	nop
 801f3b0:	2000f579 	.word	0x2000f579

0801f3b4 <__sinit_lock_acquire>:
 801f3b4:	4801      	ldr	r0, [pc, #4]	; (801f3bc <__sinit_lock_acquire+0x8>)
 801f3b6:	f000 b8cc 	b.w	801f552 <__retarget_lock_acquire_recursive>
 801f3ba:	bf00      	nop
 801f3bc:	2000f57a 	.word	0x2000f57a

0801f3c0 <__sinit_lock_release>:
 801f3c0:	4801      	ldr	r0, [pc, #4]	; (801f3c8 <__sinit_lock_release+0x8>)
 801f3c2:	f000 b8c7 	b.w	801f554 <__retarget_lock_release_recursive>
 801f3c6:	bf00      	nop
 801f3c8:	2000f57a 	.word	0x2000f57a

0801f3cc <__sinit>:
 801f3cc:	b510      	push	{r4, lr}
 801f3ce:	4604      	mov	r4, r0
 801f3d0:	f7ff fff0 	bl	801f3b4 <__sinit_lock_acquire>
 801f3d4:	69a3      	ldr	r3, [r4, #24]
 801f3d6:	b11b      	cbz	r3, 801f3e0 <__sinit+0x14>
 801f3d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f3dc:	f7ff bff0 	b.w	801f3c0 <__sinit_lock_release>
 801f3e0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801f3e4:	6523      	str	r3, [r4, #80]	; 0x50
 801f3e6:	4b13      	ldr	r3, [pc, #76]	; (801f434 <__sinit+0x68>)
 801f3e8:	4a13      	ldr	r2, [pc, #76]	; (801f438 <__sinit+0x6c>)
 801f3ea:	681b      	ldr	r3, [r3, #0]
 801f3ec:	62a2      	str	r2, [r4, #40]	; 0x28
 801f3ee:	42a3      	cmp	r3, r4
 801f3f0:	bf04      	itt	eq
 801f3f2:	2301      	moveq	r3, #1
 801f3f4:	61a3      	streq	r3, [r4, #24]
 801f3f6:	4620      	mov	r0, r4
 801f3f8:	f000 f820 	bl	801f43c <__sfp>
 801f3fc:	6060      	str	r0, [r4, #4]
 801f3fe:	4620      	mov	r0, r4
 801f400:	f000 f81c 	bl	801f43c <__sfp>
 801f404:	60a0      	str	r0, [r4, #8]
 801f406:	4620      	mov	r0, r4
 801f408:	f000 f818 	bl	801f43c <__sfp>
 801f40c:	2200      	movs	r2, #0
 801f40e:	60e0      	str	r0, [r4, #12]
 801f410:	2104      	movs	r1, #4
 801f412:	6860      	ldr	r0, [r4, #4]
 801f414:	f7ff ff82 	bl	801f31c <std>
 801f418:	68a0      	ldr	r0, [r4, #8]
 801f41a:	2201      	movs	r2, #1
 801f41c:	2109      	movs	r1, #9
 801f41e:	f7ff ff7d 	bl	801f31c <std>
 801f422:	68e0      	ldr	r0, [r4, #12]
 801f424:	2202      	movs	r2, #2
 801f426:	2112      	movs	r1, #18
 801f428:	f7ff ff78 	bl	801f31c <std>
 801f42c:	2301      	movs	r3, #1
 801f42e:	61a3      	str	r3, [r4, #24]
 801f430:	e7d2      	b.n	801f3d8 <__sinit+0xc>
 801f432:	bf00      	nop
 801f434:	08026f28 	.word	0x08026f28
 801f438:	0801f365 	.word	0x0801f365

0801f43c <__sfp>:
 801f43c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f43e:	4607      	mov	r7, r0
 801f440:	f7ff ffac 	bl	801f39c <__sfp_lock_acquire>
 801f444:	4b1e      	ldr	r3, [pc, #120]	; (801f4c0 <__sfp+0x84>)
 801f446:	681e      	ldr	r6, [r3, #0]
 801f448:	69b3      	ldr	r3, [r6, #24]
 801f44a:	b913      	cbnz	r3, 801f452 <__sfp+0x16>
 801f44c:	4630      	mov	r0, r6
 801f44e:	f7ff ffbd 	bl	801f3cc <__sinit>
 801f452:	3648      	adds	r6, #72	; 0x48
 801f454:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801f458:	3b01      	subs	r3, #1
 801f45a:	d503      	bpl.n	801f464 <__sfp+0x28>
 801f45c:	6833      	ldr	r3, [r6, #0]
 801f45e:	b30b      	cbz	r3, 801f4a4 <__sfp+0x68>
 801f460:	6836      	ldr	r6, [r6, #0]
 801f462:	e7f7      	b.n	801f454 <__sfp+0x18>
 801f464:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801f468:	b9d5      	cbnz	r5, 801f4a0 <__sfp+0x64>
 801f46a:	4b16      	ldr	r3, [pc, #88]	; (801f4c4 <__sfp+0x88>)
 801f46c:	60e3      	str	r3, [r4, #12]
 801f46e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801f472:	6665      	str	r5, [r4, #100]	; 0x64
 801f474:	f000 f86c 	bl	801f550 <__retarget_lock_init_recursive>
 801f478:	f7ff ff96 	bl	801f3a8 <__sfp_lock_release>
 801f47c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801f480:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801f484:	6025      	str	r5, [r4, #0]
 801f486:	61a5      	str	r5, [r4, #24]
 801f488:	2208      	movs	r2, #8
 801f48a:	4629      	mov	r1, r5
 801f48c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801f490:	f000 f86f 	bl	801f572 <memset>
 801f494:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801f498:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801f49c:	4620      	mov	r0, r4
 801f49e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f4a0:	3468      	adds	r4, #104	; 0x68
 801f4a2:	e7d9      	b.n	801f458 <__sfp+0x1c>
 801f4a4:	2104      	movs	r1, #4
 801f4a6:	4638      	mov	r0, r7
 801f4a8:	f7ff ff62 	bl	801f370 <__sfmoreglue>
 801f4ac:	4604      	mov	r4, r0
 801f4ae:	6030      	str	r0, [r6, #0]
 801f4b0:	2800      	cmp	r0, #0
 801f4b2:	d1d5      	bne.n	801f460 <__sfp+0x24>
 801f4b4:	f7ff ff78 	bl	801f3a8 <__sfp_lock_release>
 801f4b8:	230c      	movs	r3, #12
 801f4ba:	603b      	str	r3, [r7, #0]
 801f4bc:	e7ee      	b.n	801f49c <__sfp+0x60>
 801f4be:	bf00      	nop
 801f4c0:	08026f28 	.word	0x08026f28
 801f4c4:	ffff0001 	.word	0xffff0001

0801f4c8 <_fwalk_reent>:
 801f4c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f4cc:	4606      	mov	r6, r0
 801f4ce:	4688      	mov	r8, r1
 801f4d0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801f4d4:	2700      	movs	r7, #0
 801f4d6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801f4da:	f1b9 0901 	subs.w	r9, r9, #1
 801f4de:	d505      	bpl.n	801f4ec <_fwalk_reent+0x24>
 801f4e0:	6824      	ldr	r4, [r4, #0]
 801f4e2:	2c00      	cmp	r4, #0
 801f4e4:	d1f7      	bne.n	801f4d6 <_fwalk_reent+0xe>
 801f4e6:	4638      	mov	r0, r7
 801f4e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f4ec:	89ab      	ldrh	r3, [r5, #12]
 801f4ee:	2b01      	cmp	r3, #1
 801f4f0:	d907      	bls.n	801f502 <_fwalk_reent+0x3a>
 801f4f2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801f4f6:	3301      	adds	r3, #1
 801f4f8:	d003      	beq.n	801f502 <_fwalk_reent+0x3a>
 801f4fa:	4629      	mov	r1, r5
 801f4fc:	4630      	mov	r0, r6
 801f4fe:	47c0      	blx	r8
 801f500:	4307      	orrs	r7, r0
 801f502:	3568      	adds	r5, #104	; 0x68
 801f504:	e7e9      	b.n	801f4da <_fwalk_reent+0x12>
	...

0801f508 <__libc_init_array>:
 801f508:	b570      	push	{r4, r5, r6, lr}
 801f50a:	4d0d      	ldr	r5, [pc, #52]	; (801f540 <__libc_init_array+0x38>)
 801f50c:	4c0d      	ldr	r4, [pc, #52]	; (801f544 <__libc_init_array+0x3c>)
 801f50e:	1b64      	subs	r4, r4, r5
 801f510:	10a4      	asrs	r4, r4, #2
 801f512:	2600      	movs	r6, #0
 801f514:	42a6      	cmp	r6, r4
 801f516:	d109      	bne.n	801f52c <__libc_init_array+0x24>
 801f518:	4d0b      	ldr	r5, [pc, #44]	; (801f548 <__libc_init_array+0x40>)
 801f51a:	4c0c      	ldr	r4, [pc, #48]	; (801f54c <__libc_init_array+0x44>)
 801f51c:	f007 f8c6 	bl	80266ac <_init>
 801f520:	1b64      	subs	r4, r4, r5
 801f522:	10a4      	asrs	r4, r4, #2
 801f524:	2600      	movs	r6, #0
 801f526:	42a6      	cmp	r6, r4
 801f528:	d105      	bne.n	801f536 <__libc_init_array+0x2e>
 801f52a:	bd70      	pop	{r4, r5, r6, pc}
 801f52c:	f855 3b04 	ldr.w	r3, [r5], #4
 801f530:	4798      	blx	r3
 801f532:	3601      	adds	r6, #1
 801f534:	e7ee      	b.n	801f514 <__libc_init_array+0xc>
 801f536:	f855 3b04 	ldr.w	r3, [r5], #4
 801f53a:	4798      	blx	r3
 801f53c:	3601      	adds	r6, #1
 801f53e:	e7f2      	b.n	801f526 <__libc_init_array+0x1e>
 801f540:	080275f0 	.word	0x080275f0
 801f544:	080275f0 	.word	0x080275f0
 801f548:	080275f0 	.word	0x080275f0
 801f54c:	080275f4 	.word	0x080275f4

0801f550 <__retarget_lock_init_recursive>:
 801f550:	4770      	bx	lr

0801f552 <__retarget_lock_acquire_recursive>:
 801f552:	4770      	bx	lr

0801f554 <__retarget_lock_release_recursive>:
 801f554:	4770      	bx	lr

0801f556 <memcpy>:
 801f556:	440a      	add	r2, r1
 801f558:	4291      	cmp	r1, r2
 801f55a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 801f55e:	d100      	bne.n	801f562 <memcpy+0xc>
 801f560:	4770      	bx	lr
 801f562:	b510      	push	{r4, lr}
 801f564:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f568:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f56c:	4291      	cmp	r1, r2
 801f56e:	d1f9      	bne.n	801f564 <memcpy+0xe>
 801f570:	bd10      	pop	{r4, pc}

0801f572 <memset>:
 801f572:	4402      	add	r2, r0
 801f574:	4603      	mov	r3, r0
 801f576:	4293      	cmp	r3, r2
 801f578:	d100      	bne.n	801f57c <memset+0xa>
 801f57a:	4770      	bx	lr
 801f57c:	f803 1b01 	strb.w	r1, [r3], #1
 801f580:	e7f9      	b.n	801f576 <memset+0x4>
	...

0801f584 <sbrk_aligned>:
 801f584:	b570      	push	{r4, r5, r6, lr}
 801f586:	4e0e      	ldr	r6, [pc, #56]	; (801f5c0 <sbrk_aligned+0x3c>)
 801f588:	460c      	mov	r4, r1
 801f58a:	6831      	ldr	r1, [r6, #0]
 801f58c:	4605      	mov	r5, r0
 801f58e:	b911      	cbnz	r1, 801f596 <sbrk_aligned+0x12>
 801f590:	f000 ff70 	bl	8020474 <_sbrk_r>
 801f594:	6030      	str	r0, [r6, #0]
 801f596:	4621      	mov	r1, r4
 801f598:	4628      	mov	r0, r5
 801f59a:	f000 ff6b 	bl	8020474 <_sbrk_r>
 801f59e:	1c43      	adds	r3, r0, #1
 801f5a0:	d00a      	beq.n	801f5b8 <sbrk_aligned+0x34>
 801f5a2:	1cc4      	adds	r4, r0, #3
 801f5a4:	f024 0403 	bic.w	r4, r4, #3
 801f5a8:	42a0      	cmp	r0, r4
 801f5aa:	d007      	beq.n	801f5bc <sbrk_aligned+0x38>
 801f5ac:	1a21      	subs	r1, r4, r0
 801f5ae:	4628      	mov	r0, r5
 801f5b0:	f000 ff60 	bl	8020474 <_sbrk_r>
 801f5b4:	3001      	adds	r0, #1
 801f5b6:	d101      	bne.n	801f5bc <sbrk_aligned+0x38>
 801f5b8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801f5bc:	4620      	mov	r0, r4
 801f5be:	bd70      	pop	{r4, r5, r6, pc}
 801f5c0:	2000f580 	.word	0x2000f580

0801f5c4 <_malloc_r>:
 801f5c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f5c8:	1ccd      	adds	r5, r1, #3
 801f5ca:	f025 0503 	bic.w	r5, r5, #3
 801f5ce:	3508      	adds	r5, #8
 801f5d0:	2d0c      	cmp	r5, #12
 801f5d2:	bf38      	it	cc
 801f5d4:	250c      	movcc	r5, #12
 801f5d6:	2d00      	cmp	r5, #0
 801f5d8:	4607      	mov	r7, r0
 801f5da:	db01      	blt.n	801f5e0 <_malloc_r+0x1c>
 801f5dc:	42a9      	cmp	r1, r5
 801f5de:	d905      	bls.n	801f5ec <_malloc_r+0x28>
 801f5e0:	230c      	movs	r3, #12
 801f5e2:	603b      	str	r3, [r7, #0]
 801f5e4:	2600      	movs	r6, #0
 801f5e6:	4630      	mov	r0, r6
 801f5e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f5ec:	4e2e      	ldr	r6, [pc, #184]	; (801f6a8 <_malloc_r+0xe4>)
 801f5ee:	f003 f9a1 	bl	8022934 <__malloc_lock>
 801f5f2:	6833      	ldr	r3, [r6, #0]
 801f5f4:	461c      	mov	r4, r3
 801f5f6:	bb34      	cbnz	r4, 801f646 <_malloc_r+0x82>
 801f5f8:	4629      	mov	r1, r5
 801f5fa:	4638      	mov	r0, r7
 801f5fc:	f7ff ffc2 	bl	801f584 <sbrk_aligned>
 801f600:	1c43      	adds	r3, r0, #1
 801f602:	4604      	mov	r4, r0
 801f604:	d14d      	bne.n	801f6a2 <_malloc_r+0xde>
 801f606:	6834      	ldr	r4, [r6, #0]
 801f608:	4626      	mov	r6, r4
 801f60a:	2e00      	cmp	r6, #0
 801f60c:	d140      	bne.n	801f690 <_malloc_r+0xcc>
 801f60e:	6823      	ldr	r3, [r4, #0]
 801f610:	4631      	mov	r1, r6
 801f612:	4638      	mov	r0, r7
 801f614:	eb04 0803 	add.w	r8, r4, r3
 801f618:	f000 ff2c 	bl	8020474 <_sbrk_r>
 801f61c:	4580      	cmp	r8, r0
 801f61e:	d13a      	bne.n	801f696 <_malloc_r+0xd2>
 801f620:	6821      	ldr	r1, [r4, #0]
 801f622:	3503      	adds	r5, #3
 801f624:	1a6d      	subs	r5, r5, r1
 801f626:	f025 0503 	bic.w	r5, r5, #3
 801f62a:	3508      	adds	r5, #8
 801f62c:	2d0c      	cmp	r5, #12
 801f62e:	bf38      	it	cc
 801f630:	250c      	movcc	r5, #12
 801f632:	4629      	mov	r1, r5
 801f634:	4638      	mov	r0, r7
 801f636:	f7ff ffa5 	bl	801f584 <sbrk_aligned>
 801f63a:	3001      	adds	r0, #1
 801f63c:	d02b      	beq.n	801f696 <_malloc_r+0xd2>
 801f63e:	6823      	ldr	r3, [r4, #0]
 801f640:	442b      	add	r3, r5
 801f642:	6023      	str	r3, [r4, #0]
 801f644:	e00e      	b.n	801f664 <_malloc_r+0xa0>
 801f646:	6822      	ldr	r2, [r4, #0]
 801f648:	1b52      	subs	r2, r2, r5
 801f64a:	d41e      	bmi.n	801f68a <_malloc_r+0xc6>
 801f64c:	2a0b      	cmp	r2, #11
 801f64e:	d916      	bls.n	801f67e <_malloc_r+0xba>
 801f650:	1961      	adds	r1, r4, r5
 801f652:	42a3      	cmp	r3, r4
 801f654:	6025      	str	r5, [r4, #0]
 801f656:	bf18      	it	ne
 801f658:	6059      	strne	r1, [r3, #4]
 801f65a:	6863      	ldr	r3, [r4, #4]
 801f65c:	bf08      	it	eq
 801f65e:	6031      	streq	r1, [r6, #0]
 801f660:	5162      	str	r2, [r4, r5]
 801f662:	604b      	str	r3, [r1, #4]
 801f664:	4638      	mov	r0, r7
 801f666:	f104 060b 	add.w	r6, r4, #11
 801f66a:	f003 f969 	bl	8022940 <__malloc_unlock>
 801f66e:	f026 0607 	bic.w	r6, r6, #7
 801f672:	1d23      	adds	r3, r4, #4
 801f674:	1af2      	subs	r2, r6, r3
 801f676:	d0b6      	beq.n	801f5e6 <_malloc_r+0x22>
 801f678:	1b9b      	subs	r3, r3, r6
 801f67a:	50a3      	str	r3, [r4, r2]
 801f67c:	e7b3      	b.n	801f5e6 <_malloc_r+0x22>
 801f67e:	6862      	ldr	r2, [r4, #4]
 801f680:	42a3      	cmp	r3, r4
 801f682:	bf0c      	ite	eq
 801f684:	6032      	streq	r2, [r6, #0]
 801f686:	605a      	strne	r2, [r3, #4]
 801f688:	e7ec      	b.n	801f664 <_malloc_r+0xa0>
 801f68a:	4623      	mov	r3, r4
 801f68c:	6864      	ldr	r4, [r4, #4]
 801f68e:	e7b2      	b.n	801f5f6 <_malloc_r+0x32>
 801f690:	4634      	mov	r4, r6
 801f692:	6876      	ldr	r6, [r6, #4]
 801f694:	e7b9      	b.n	801f60a <_malloc_r+0x46>
 801f696:	230c      	movs	r3, #12
 801f698:	603b      	str	r3, [r7, #0]
 801f69a:	4638      	mov	r0, r7
 801f69c:	f003 f950 	bl	8022940 <__malloc_unlock>
 801f6a0:	e7a1      	b.n	801f5e6 <_malloc_r+0x22>
 801f6a2:	6025      	str	r5, [r4, #0]
 801f6a4:	e7de      	b.n	801f664 <_malloc_r+0xa0>
 801f6a6:	bf00      	nop
 801f6a8:	2000f57c 	.word	0x2000f57c

0801f6ac <__cvt>:
 801f6ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f6b0:	ec55 4b10 	vmov	r4, r5, d0
 801f6b4:	2d00      	cmp	r5, #0
 801f6b6:	460e      	mov	r6, r1
 801f6b8:	4619      	mov	r1, r3
 801f6ba:	462b      	mov	r3, r5
 801f6bc:	bfbb      	ittet	lt
 801f6be:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801f6c2:	461d      	movlt	r5, r3
 801f6c4:	2300      	movge	r3, #0
 801f6c6:	232d      	movlt	r3, #45	; 0x2d
 801f6c8:	700b      	strb	r3, [r1, #0]
 801f6ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6cc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801f6d0:	4691      	mov	r9, r2
 801f6d2:	f023 0820 	bic.w	r8, r3, #32
 801f6d6:	bfbc      	itt	lt
 801f6d8:	4622      	movlt	r2, r4
 801f6da:	4614      	movlt	r4, r2
 801f6dc:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801f6e0:	d005      	beq.n	801f6ee <__cvt+0x42>
 801f6e2:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801f6e6:	d100      	bne.n	801f6ea <__cvt+0x3e>
 801f6e8:	3601      	adds	r6, #1
 801f6ea:	2102      	movs	r1, #2
 801f6ec:	e000      	b.n	801f6f0 <__cvt+0x44>
 801f6ee:	2103      	movs	r1, #3
 801f6f0:	ab03      	add	r3, sp, #12
 801f6f2:	9301      	str	r3, [sp, #4]
 801f6f4:	ab02      	add	r3, sp, #8
 801f6f6:	9300      	str	r3, [sp, #0]
 801f6f8:	ec45 4b10 	vmov	d0, r4, r5
 801f6fc:	4653      	mov	r3, sl
 801f6fe:	4632      	mov	r2, r6
 801f700:	f001 fec2 	bl	8021488 <_dtoa_r>
 801f704:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 801f708:	4607      	mov	r7, r0
 801f70a:	d102      	bne.n	801f712 <__cvt+0x66>
 801f70c:	f019 0f01 	tst.w	r9, #1
 801f710:	d022      	beq.n	801f758 <__cvt+0xac>
 801f712:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801f716:	eb07 0906 	add.w	r9, r7, r6
 801f71a:	d110      	bne.n	801f73e <__cvt+0x92>
 801f71c:	783b      	ldrb	r3, [r7, #0]
 801f71e:	2b30      	cmp	r3, #48	; 0x30
 801f720:	d10a      	bne.n	801f738 <__cvt+0x8c>
 801f722:	2200      	movs	r2, #0
 801f724:	2300      	movs	r3, #0
 801f726:	4620      	mov	r0, r4
 801f728:	4629      	mov	r1, r5
 801f72a:	f7e1 f9cd 	bl	8000ac8 <__aeabi_dcmpeq>
 801f72e:	b918      	cbnz	r0, 801f738 <__cvt+0x8c>
 801f730:	f1c6 0601 	rsb	r6, r6, #1
 801f734:	f8ca 6000 	str.w	r6, [sl]
 801f738:	f8da 3000 	ldr.w	r3, [sl]
 801f73c:	4499      	add	r9, r3
 801f73e:	2200      	movs	r2, #0
 801f740:	2300      	movs	r3, #0
 801f742:	4620      	mov	r0, r4
 801f744:	4629      	mov	r1, r5
 801f746:	f7e1 f9bf 	bl	8000ac8 <__aeabi_dcmpeq>
 801f74a:	b108      	cbz	r0, 801f750 <__cvt+0xa4>
 801f74c:	f8cd 900c 	str.w	r9, [sp, #12]
 801f750:	2230      	movs	r2, #48	; 0x30
 801f752:	9b03      	ldr	r3, [sp, #12]
 801f754:	454b      	cmp	r3, r9
 801f756:	d307      	bcc.n	801f768 <__cvt+0xbc>
 801f758:	9b03      	ldr	r3, [sp, #12]
 801f75a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f75c:	1bdb      	subs	r3, r3, r7
 801f75e:	4638      	mov	r0, r7
 801f760:	6013      	str	r3, [r2, #0]
 801f762:	b004      	add	sp, #16
 801f764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f768:	1c59      	adds	r1, r3, #1
 801f76a:	9103      	str	r1, [sp, #12]
 801f76c:	701a      	strb	r2, [r3, #0]
 801f76e:	e7f0      	b.n	801f752 <__cvt+0xa6>

0801f770 <__exponent>:
 801f770:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f772:	4603      	mov	r3, r0
 801f774:	2900      	cmp	r1, #0
 801f776:	bfb8      	it	lt
 801f778:	4249      	neglt	r1, r1
 801f77a:	f803 2b02 	strb.w	r2, [r3], #2
 801f77e:	bfb4      	ite	lt
 801f780:	222d      	movlt	r2, #45	; 0x2d
 801f782:	222b      	movge	r2, #43	; 0x2b
 801f784:	2909      	cmp	r1, #9
 801f786:	7042      	strb	r2, [r0, #1]
 801f788:	dd2a      	ble.n	801f7e0 <__exponent+0x70>
 801f78a:	f10d 0407 	add.w	r4, sp, #7
 801f78e:	46a4      	mov	ip, r4
 801f790:	270a      	movs	r7, #10
 801f792:	46a6      	mov	lr, r4
 801f794:	460a      	mov	r2, r1
 801f796:	fb91 f6f7 	sdiv	r6, r1, r7
 801f79a:	fb07 1516 	mls	r5, r7, r6, r1
 801f79e:	3530      	adds	r5, #48	; 0x30
 801f7a0:	2a63      	cmp	r2, #99	; 0x63
 801f7a2:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 801f7a6:	f80e 5c01 	strb.w	r5, [lr, #-1]
 801f7aa:	4631      	mov	r1, r6
 801f7ac:	dcf1      	bgt.n	801f792 <__exponent+0x22>
 801f7ae:	3130      	adds	r1, #48	; 0x30
 801f7b0:	f1ae 0502 	sub.w	r5, lr, #2
 801f7b4:	f804 1c01 	strb.w	r1, [r4, #-1]
 801f7b8:	1c44      	adds	r4, r0, #1
 801f7ba:	4629      	mov	r1, r5
 801f7bc:	4561      	cmp	r1, ip
 801f7be:	d30a      	bcc.n	801f7d6 <__exponent+0x66>
 801f7c0:	f10d 0209 	add.w	r2, sp, #9
 801f7c4:	eba2 020e 	sub.w	r2, r2, lr
 801f7c8:	4565      	cmp	r5, ip
 801f7ca:	bf88      	it	hi
 801f7cc:	2200      	movhi	r2, #0
 801f7ce:	4413      	add	r3, r2
 801f7d0:	1a18      	subs	r0, r3, r0
 801f7d2:	b003      	add	sp, #12
 801f7d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f7d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f7da:	f804 2f01 	strb.w	r2, [r4, #1]!
 801f7de:	e7ed      	b.n	801f7bc <__exponent+0x4c>
 801f7e0:	2330      	movs	r3, #48	; 0x30
 801f7e2:	3130      	adds	r1, #48	; 0x30
 801f7e4:	7083      	strb	r3, [r0, #2]
 801f7e6:	70c1      	strb	r1, [r0, #3]
 801f7e8:	1d03      	adds	r3, r0, #4
 801f7ea:	e7f1      	b.n	801f7d0 <__exponent+0x60>

0801f7ec <_printf_float>:
 801f7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7f0:	ed2d 8b02 	vpush	{d8}
 801f7f4:	b08d      	sub	sp, #52	; 0x34
 801f7f6:	460c      	mov	r4, r1
 801f7f8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801f7fc:	4616      	mov	r6, r2
 801f7fe:	461f      	mov	r7, r3
 801f800:	4605      	mov	r5, r0
 801f802:	f003 f867 	bl	80228d4 <_localeconv_r>
 801f806:	f8d0 a000 	ldr.w	sl, [r0]
 801f80a:	4650      	mov	r0, sl
 801f80c:	f7e0 fce0 	bl	80001d0 <strlen>
 801f810:	2300      	movs	r3, #0
 801f812:	930a      	str	r3, [sp, #40]	; 0x28
 801f814:	6823      	ldr	r3, [r4, #0]
 801f816:	9305      	str	r3, [sp, #20]
 801f818:	f8d8 3000 	ldr.w	r3, [r8]
 801f81c:	f894 b018 	ldrb.w	fp, [r4, #24]
 801f820:	3307      	adds	r3, #7
 801f822:	f023 0307 	bic.w	r3, r3, #7
 801f826:	f103 0208 	add.w	r2, r3, #8
 801f82a:	f8c8 2000 	str.w	r2, [r8]
 801f82e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f832:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 801f836:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 801f83a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801f83e:	9307      	str	r3, [sp, #28]
 801f840:	f8cd 8018 	str.w	r8, [sp, #24]
 801f844:	ee08 0a10 	vmov	s16, r0
 801f848:	4b9f      	ldr	r3, [pc, #636]	; (801fac8 <_printf_float+0x2dc>)
 801f84a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f84e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f852:	f7e1 f96b 	bl	8000b2c <__aeabi_dcmpun>
 801f856:	bb88      	cbnz	r0, 801f8bc <_printf_float+0xd0>
 801f858:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f85c:	4b9a      	ldr	r3, [pc, #616]	; (801fac8 <_printf_float+0x2dc>)
 801f85e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f862:	f7e1 f945 	bl	8000af0 <__aeabi_dcmple>
 801f866:	bb48      	cbnz	r0, 801f8bc <_printf_float+0xd0>
 801f868:	2200      	movs	r2, #0
 801f86a:	2300      	movs	r3, #0
 801f86c:	4640      	mov	r0, r8
 801f86e:	4649      	mov	r1, r9
 801f870:	f7e1 f934 	bl	8000adc <__aeabi_dcmplt>
 801f874:	b110      	cbz	r0, 801f87c <_printf_float+0x90>
 801f876:	232d      	movs	r3, #45	; 0x2d
 801f878:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801f87c:	4b93      	ldr	r3, [pc, #588]	; (801facc <_printf_float+0x2e0>)
 801f87e:	4894      	ldr	r0, [pc, #592]	; (801fad0 <_printf_float+0x2e4>)
 801f880:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801f884:	bf94      	ite	ls
 801f886:	4698      	movls	r8, r3
 801f888:	4680      	movhi	r8, r0
 801f88a:	2303      	movs	r3, #3
 801f88c:	6123      	str	r3, [r4, #16]
 801f88e:	9b05      	ldr	r3, [sp, #20]
 801f890:	f023 0204 	bic.w	r2, r3, #4
 801f894:	6022      	str	r2, [r4, #0]
 801f896:	f04f 0900 	mov.w	r9, #0
 801f89a:	9700      	str	r7, [sp, #0]
 801f89c:	4633      	mov	r3, r6
 801f89e:	aa0b      	add	r2, sp, #44	; 0x2c
 801f8a0:	4621      	mov	r1, r4
 801f8a2:	4628      	mov	r0, r5
 801f8a4:	f000 f9d8 	bl	801fc58 <_printf_common>
 801f8a8:	3001      	adds	r0, #1
 801f8aa:	f040 8090 	bne.w	801f9ce <_printf_float+0x1e2>
 801f8ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801f8b2:	b00d      	add	sp, #52	; 0x34
 801f8b4:	ecbd 8b02 	vpop	{d8}
 801f8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8bc:	4642      	mov	r2, r8
 801f8be:	464b      	mov	r3, r9
 801f8c0:	4640      	mov	r0, r8
 801f8c2:	4649      	mov	r1, r9
 801f8c4:	f7e1 f932 	bl	8000b2c <__aeabi_dcmpun>
 801f8c8:	b140      	cbz	r0, 801f8dc <_printf_float+0xf0>
 801f8ca:	464b      	mov	r3, r9
 801f8cc:	2b00      	cmp	r3, #0
 801f8ce:	bfbc      	itt	lt
 801f8d0:	232d      	movlt	r3, #45	; 0x2d
 801f8d2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801f8d6:	487f      	ldr	r0, [pc, #508]	; (801fad4 <_printf_float+0x2e8>)
 801f8d8:	4b7f      	ldr	r3, [pc, #508]	; (801fad8 <_printf_float+0x2ec>)
 801f8da:	e7d1      	b.n	801f880 <_printf_float+0x94>
 801f8dc:	6863      	ldr	r3, [r4, #4]
 801f8de:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 801f8e2:	9206      	str	r2, [sp, #24]
 801f8e4:	1c5a      	adds	r2, r3, #1
 801f8e6:	d13f      	bne.n	801f968 <_printf_float+0x17c>
 801f8e8:	2306      	movs	r3, #6
 801f8ea:	6063      	str	r3, [r4, #4]
 801f8ec:	9b05      	ldr	r3, [sp, #20]
 801f8ee:	6861      	ldr	r1, [r4, #4]
 801f8f0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 801f8f4:	2300      	movs	r3, #0
 801f8f6:	9303      	str	r3, [sp, #12]
 801f8f8:	ab0a      	add	r3, sp, #40	; 0x28
 801f8fa:	e9cd b301 	strd	fp, r3, [sp, #4]
 801f8fe:	ab09      	add	r3, sp, #36	; 0x24
 801f900:	ec49 8b10 	vmov	d0, r8, r9
 801f904:	9300      	str	r3, [sp, #0]
 801f906:	6022      	str	r2, [r4, #0]
 801f908:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 801f90c:	4628      	mov	r0, r5
 801f90e:	f7ff fecd 	bl	801f6ac <__cvt>
 801f912:	9b06      	ldr	r3, [sp, #24]
 801f914:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f916:	2b47      	cmp	r3, #71	; 0x47
 801f918:	4680      	mov	r8, r0
 801f91a:	d108      	bne.n	801f92e <_printf_float+0x142>
 801f91c:	1cc8      	adds	r0, r1, #3
 801f91e:	db02      	blt.n	801f926 <_printf_float+0x13a>
 801f920:	6863      	ldr	r3, [r4, #4]
 801f922:	4299      	cmp	r1, r3
 801f924:	dd41      	ble.n	801f9aa <_printf_float+0x1be>
 801f926:	f1ab 0b02 	sub.w	fp, fp, #2
 801f92a:	fa5f fb8b 	uxtb.w	fp, fp
 801f92e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801f932:	d820      	bhi.n	801f976 <_printf_float+0x18a>
 801f934:	3901      	subs	r1, #1
 801f936:	465a      	mov	r2, fp
 801f938:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801f93c:	9109      	str	r1, [sp, #36]	; 0x24
 801f93e:	f7ff ff17 	bl	801f770 <__exponent>
 801f942:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f944:	1813      	adds	r3, r2, r0
 801f946:	2a01      	cmp	r2, #1
 801f948:	4681      	mov	r9, r0
 801f94a:	6123      	str	r3, [r4, #16]
 801f94c:	dc02      	bgt.n	801f954 <_printf_float+0x168>
 801f94e:	6822      	ldr	r2, [r4, #0]
 801f950:	07d2      	lsls	r2, r2, #31
 801f952:	d501      	bpl.n	801f958 <_printf_float+0x16c>
 801f954:	3301      	adds	r3, #1
 801f956:	6123      	str	r3, [r4, #16]
 801f958:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801f95c:	2b00      	cmp	r3, #0
 801f95e:	d09c      	beq.n	801f89a <_printf_float+0xae>
 801f960:	232d      	movs	r3, #45	; 0x2d
 801f962:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801f966:	e798      	b.n	801f89a <_printf_float+0xae>
 801f968:	9a06      	ldr	r2, [sp, #24]
 801f96a:	2a47      	cmp	r2, #71	; 0x47
 801f96c:	d1be      	bne.n	801f8ec <_printf_float+0x100>
 801f96e:	2b00      	cmp	r3, #0
 801f970:	d1bc      	bne.n	801f8ec <_printf_float+0x100>
 801f972:	2301      	movs	r3, #1
 801f974:	e7b9      	b.n	801f8ea <_printf_float+0xfe>
 801f976:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 801f97a:	d118      	bne.n	801f9ae <_printf_float+0x1c2>
 801f97c:	2900      	cmp	r1, #0
 801f97e:	6863      	ldr	r3, [r4, #4]
 801f980:	dd0b      	ble.n	801f99a <_printf_float+0x1ae>
 801f982:	6121      	str	r1, [r4, #16]
 801f984:	b913      	cbnz	r3, 801f98c <_printf_float+0x1a0>
 801f986:	6822      	ldr	r2, [r4, #0]
 801f988:	07d0      	lsls	r0, r2, #31
 801f98a:	d502      	bpl.n	801f992 <_printf_float+0x1a6>
 801f98c:	3301      	adds	r3, #1
 801f98e:	440b      	add	r3, r1
 801f990:	6123      	str	r3, [r4, #16]
 801f992:	65a1      	str	r1, [r4, #88]	; 0x58
 801f994:	f04f 0900 	mov.w	r9, #0
 801f998:	e7de      	b.n	801f958 <_printf_float+0x16c>
 801f99a:	b913      	cbnz	r3, 801f9a2 <_printf_float+0x1b6>
 801f99c:	6822      	ldr	r2, [r4, #0]
 801f99e:	07d2      	lsls	r2, r2, #31
 801f9a0:	d501      	bpl.n	801f9a6 <_printf_float+0x1ba>
 801f9a2:	3302      	adds	r3, #2
 801f9a4:	e7f4      	b.n	801f990 <_printf_float+0x1a4>
 801f9a6:	2301      	movs	r3, #1
 801f9a8:	e7f2      	b.n	801f990 <_printf_float+0x1a4>
 801f9aa:	f04f 0b67 	mov.w	fp, #103	; 0x67
 801f9ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9b0:	4299      	cmp	r1, r3
 801f9b2:	db05      	blt.n	801f9c0 <_printf_float+0x1d4>
 801f9b4:	6823      	ldr	r3, [r4, #0]
 801f9b6:	6121      	str	r1, [r4, #16]
 801f9b8:	07d8      	lsls	r0, r3, #31
 801f9ba:	d5ea      	bpl.n	801f992 <_printf_float+0x1a6>
 801f9bc:	1c4b      	adds	r3, r1, #1
 801f9be:	e7e7      	b.n	801f990 <_printf_float+0x1a4>
 801f9c0:	2900      	cmp	r1, #0
 801f9c2:	bfd4      	ite	le
 801f9c4:	f1c1 0202 	rsble	r2, r1, #2
 801f9c8:	2201      	movgt	r2, #1
 801f9ca:	4413      	add	r3, r2
 801f9cc:	e7e0      	b.n	801f990 <_printf_float+0x1a4>
 801f9ce:	6823      	ldr	r3, [r4, #0]
 801f9d0:	055a      	lsls	r2, r3, #21
 801f9d2:	d407      	bmi.n	801f9e4 <_printf_float+0x1f8>
 801f9d4:	6923      	ldr	r3, [r4, #16]
 801f9d6:	4642      	mov	r2, r8
 801f9d8:	4631      	mov	r1, r6
 801f9da:	4628      	mov	r0, r5
 801f9dc:	47b8      	blx	r7
 801f9de:	3001      	adds	r0, #1
 801f9e0:	d12c      	bne.n	801fa3c <_printf_float+0x250>
 801f9e2:	e764      	b.n	801f8ae <_printf_float+0xc2>
 801f9e4:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801f9e8:	f240 80e0 	bls.w	801fbac <_printf_float+0x3c0>
 801f9ec:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801f9f0:	2200      	movs	r2, #0
 801f9f2:	2300      	movs	r3, #0
 801f9f4:	f7e1 f868 	bl	8000ac8 <__aeabi_dcmpeq>
 801f9f8:	2800      	cmp	r0, #0
 801f9fa:	d034      	beq.n	801fa66 <_printf_float+0x27a>
 801f9fc:	4a37      	ldr	r2, [pc, #220]	; (801fadc <_printf_float+0x2f0>)
 801f9fe:	2301      	movs	r3, #1
 801fa00:	4631      	mov	r1, r6
 801fa02:	4628      	mov	r0, r5
 801fa04:	47b8      	blx	r7
 801fa06:	3001      	adds	r0, #1
 801fa08:	f43f af51 	beq.w	801f8ae <_printf_float+0xc2>
 801fa0c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fa10:	429a      	cmp	r2, r3
 801fa12:	db02      	blt.n	801fa1a <_printf_float+0x22e>
 801fa14:	6823      	ldr	r3, [r4, #0]
 801fa16:	07d8      	lsls	r0, r3, #31
 801fa18:	d510      	bpl.n	801fa3c <_printf_float+0x250>
 801fa1a:	ee18 3a10 	vmov	r3, s16
 801fa1e:	4652      	mov	r2, sl
 801fa20:	4631      	mov	r1, r6
 801fa22:	4628      	mov	r0, r5
 801fa24:	47b8      	blx	r7
 801fa26:	3001      	adds	r0, #1
 801fa28:	f43f af41 	beq.w	801f8ae <_printf_float+0xc2>
 801fa2c:	f04f 0800 	mov.w	r8, #0
 801fa30:	f104 091a 	add.w	r9, r4, #26
 801fa34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa36:	3b01      	subs	r3, #1
 801fa38:	4543      	cmp	r3, r8
 801fa3a:	dc09      	bgt.n	801fa50 <_printf_float+0x264>
 801fa3c:	6823      	ldr	r3, [r4, #0]
 801fa3e:	079b      	lsls	r3, r3, #30
 801fa40:	f100 8105 	bmi.w	801fc4e <_printf_float+0x462>
 801fa44:	68e0      	ldr	r0, [r4, #12]
 801fa46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa48:	4298      	cmp	r0, r3
 801fa4a:	bfb8      	it	lt
 801fa4c:	4618      	movlt	r0, r3
 801fa4e:	e730      	b.n	801f8b2 <_printf_float+0xc6>
 801fa50:	2301      	movs	r3, #1
 801fa52:	464a      	mov	r2, r9
 801fa54:	4631      	mov	r1, r6
 801fa56:	4628      	mov	r0, r5
 801fa58:	47b8      	blx	r7
 801fa5a:	3001      	adds	r0, #1
 801fa5c:	f43f af27 	beq.w	801f8ae <_printf_float+0xc2>
 801fa60:	f108 0801 	add.w	r8, r8, #1
 801fa64:	e7e6      	b.n	801fa34 <_printf_float+0x248>
 801fa66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa68:	2b00      	cmp	r3, #0
 801fa6a:	dc39      	bgt.n	801fae0 <_printf_float+0x2f4>
 801fa6c:	4a1b      	ldr	r2, [pc, #108]	; (801fadc <_printf_float+0x2f0>)
 801fa6e:	2301      	movs	r3, #1
 801fa70:	4631      	mov	r1, r6
 801fa72:	4628      	mov	r0, r5
 801fa74:	47b8      	blx	r7
 801fa76:	3001      	adds	r0, #1
 801fa78:	f43f af19 	beq.w	801f8ae <_printf_float+0xc2>
 801fa7c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fa80:	4313      	orrs	r3, r2
 801fa82:	d102      	bne.n	801fa8a <_printf_float+0x29e>
 801fa84:	6823      	ldr	r3, [r4, #0]
 801fa86:	07d9      	lsls	r1, r3, #31
 801fa88:	d5d8      	bpl.n	801fa3c <_printf_float+0x250>
 801fa8a:	ee18 3a10 	vmov	r3, s16
 801fa8e:	4652      	mov	r2, sl
 801fa90:	4631      	mov	r1, r6
 801fa92:	4628      	mov	r0, r5
 801fa94:	47b8      	blx	r7
 801fa96:	3001      	adds	r0, #1
 801fa98:	f43f af09 	beq.w	801f8ae <_printf_float+0xc2>
 801fa9c:	f04f 0900 	mov.w	r9, #0
 801faa0:	f104 0a1a 	add.w	sl, r4, #26
 801faa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faa6:	425b      	negs	r3, r3
 801faa8:	454b      	cmp	r3, r9
 801faaa:	dc01      	bgt.n	801fab0 <_printf_float+0x2c4>
 801faac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801faae:	e792      	b.n	801f9d6 <_printf_float+0x1ea>
 801fab0:	2301      	movs	r3, #1
 801fab2:	4652      	mov	r2, sl
 801fab4:	4631      	mov	r1, r6
 801fab6:	4628      	mov	r0, r5
 801fab8:	47b8      	blx	r7
 801faba:	3001      	adds	r0, #1
 801fabc:	f43f aef7 	beq.w	801f8ae <_printf_float+0xc2>
 801fac0:	f109 0901 	add.w	r9, r9, #1
 801fac4:	e7ee      	b.n	801faa4 <_printf_float+0x2b8>
 801fac6:	bf00      	nop
 801fac8:	7fefffff 	.word	0x7fefffff
 801facc:	08026f2c 	.word	0x08026f2c
 801fad0:	08026f30 	.word	0x08026f30
 801fad4:	08026f38 	.word	0x08026f38
 801fad8:	08026f34 	.word	0x08026f34
 801fadc:	08026f3c 	.word	0x08026f3c
 801fae0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fae2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801fae4:	429a      	cmp	r2, r3
 801fae6:	bfa8      	it	ge
 801fae8:	461a      	movge	r2, r3
 801faea:	2a00      	cmp	r2, #0
 801faec:	4691      	mov	r9, r2
 801faee:	dc37      	bgt.n	801fb60 <_printf_float+0x374>
 801faf0:	f04f 0b00 	mov.w	fp, #0
 801faf4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801faf8:	f104 021a 	add.w	r2, r4, #26
 801fafc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801fafe:	9305      	str	r3, [sp, #20]
 801fb00:	eba3 0309 	sub.w	r3, r3, r9
 801fb04:	455b      	cmp	r3, fp
 801fb06:	dc33      	bgt.n	801fb70 <_printf_float+0x384>
 801fb08:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fb0c:	429a      	cmp	r2, r3
 801fb0e:	db3b      	blt.n	801fb88 <_printf_float+0x39c>
 801fb10:	6823      	ldr	r3, [r4, #0]
 801fb12:	07da      	lsls	r2, r3, #31
 801fb14:	d438      	bmi.n	801fb88 <_printf_float+0x39c>
 801fb16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb18:	9a05      	ldr	r2, [sp, #20]
 801fb1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fb1c:	1a9a      	subs	r2, r3, r2
 801fb1e:	eba3 0901 	sub.w	r9, r3, r1
 801fb22:	4591      	cmp	r9, r2
 801fb24:	bfa8      	it	ge
 801fb26:	4691      	movge	r9, r2
 801fb28:	f1b9 0f00 	cmp.w	r9, #0
 801fb2c:	dc35      	bgt.n	801fb9a <_printf_float+0x3ae>
 801fb2e:	f04f 0800 	mov.w	r8, #0
 801fb32:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801fb36:	f104 0a1a 	add.w	sl, r4, #26
 801fb3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fb3e:	1a9b      	subs	r3, r3, r2
 801fb40:	eba3 0309 	sub.w	r3, r3, r9
 801fb44:	4543      	cmp	r3, r8
 801fb46:	f77f af79 	ble.w	801fa3c <_printf_float+0x250>
 801fb4a:	2301      	movs	r3, #1
 801fb4c:	4652      	mov	r2, sl
 801fb4e:	4631      	mov	r1, r6
 801fb50:	4628      	mov	r0, r5
 801fb52:	47b8      	blx	r7
 801fb54:	3001      	adds	r0, #1
 801fb56:	f43f aeaa 	beq.w	801f8ae <_printf_float+0xc2>
 801fb5a:	f108 0801 	add.w	r8, r8, #1
 801fb5e:	e7ec      	b.n	801fb3a <_printf_float+0x34e>
 801fb60:	4613      	mov	r3, r2
 801fb62:	4631      	mov	r1, r6
 801fb64:	4642      	mov	r2, r8
 801fb66:	4628      	mov	r0, r5
 801fb68:	47b8      	blx	r7
 801fb6a:	3001      	adds	r0, #1
 801fb6c:	d1c0      	bne.n	801faf0 <_printf_float+0x304>
 801fb6e:	e69e      	b.n	801f8ae <_printf_float+0xc2>
 801fb70:	2301      	movs	r3, #1
 801fb72:	4631      	mov	r1, r6
 801fb74:	4628      	mov	r0, r5
 801fb76:	9205      	str	r2, [sp, #20]
 801fb78:	47b8      	blx	r7
 801fb7a:	3001      	adds	r0, #1
 801fb7c:	f43f ae97 	beq.w	801f8ae <_printf_float+0xc2>
 801fb80:	9a05      	ldr	r2, [sp, #20]
 801fb82:	f10b 0b01 	add.w	fp, fp, #1
 801fb86:	e7b9      	b.n	801fafc <_printf_float+0x310>
 801fb88:	ee18 3a10 	vmov	r3, s16
 801fb8c:	4652      	mov	r2, sl
 801fb8e:	4631      	mov	r1, r6
 801fb90:	4628      	mov	r0, r5
 801fb92:	47b8      	blx	r7
 801fb94:	3001      	adds	r0, #1
 801fb96:	d1be      	bne.n	801fb16 <_printf_float+0x32a>
 801fb98:	e689      	b.n	801f8ae <_printf_float+0xc2>
 801fb9a:	9a05      	ldr	r2, [sp, #20]
 801fb9c:	464b      	mov	r3, r9
 801fb9e:	4442      	add	r2, r8
 801fba0:	4631      	mov	r1, r6
 801fba2:	4628      	mov	r0, r5
 801fba4:	47b8      	blx	r7
 801fba6:	3001      	adds	r0, #1
 801fba8:	d1c1      	bne.n	801fb2e <_printf_float+0x342>
 801fbaa:	e680      	b.n	801f8ae <_printf_float+0xc2>
 801fbac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fbae:	2a01      	cmp	r2, #1
 801fbb0:	dc01      	bgt.n	801fbb6 <_printf_float+0x3ca>
 801fbb2:	07db      	lsls	r3, r3, #31
 801fbb4:	d538      	bpl.n	801fc28 <_printf_float+0x43c>
 801fbb6:	2301      	movs	r3, #1
 801fbb8:	4642      	mov	r2, r8
 801fbba:	4631      	mov	r1, r6
 801fbbc:	4628      	mov	r0, r5
 801fbbe:	47b8      	blx	r7
 801fbc0:	3001      	adds	r0, #1
 801fbc2:	f43f ae74 	beq.w	801f8ae <_printf_float+0xc2>
 801fbc6:	ee18 3a10 	vmov	r3, s16
 801fbca:	4652      	mov	r2, sl
 801fbcc:	4631      	mov	r1, r6
 801fbce:	4628      	mov	r0, r5
 801fbd0:	47b8      	blx	r7
 801fbd2:	3001      	adds	r0, #1
 801fbd4:	f43f ae6b 	beq.w	801f8ae <_printf_float+0xc2>
 801fbd8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801fbdc:	2200      	movs	r2, #0
 801fbde:	2300      	movs	r3, #0
 801fbe0:	f7e0 ff72 	bl	8000ac8 <__aeabi_dcmpeq>
 801fbe4:	b9d8      	cbnz	r0, 801fc1e <_printf_float+0x432>
 801fbe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbe8:	f108 0201 	add.w	r2, r8, #1
 801fbec:	3b01      	subs	r3, #1
 801fbee:	4631      	mov	r1, r6
 801fbf0:	4628      	mov	r0, r5
 801fbf2:	47b8      	blx	r7
 801fbf4:	3001      	adds	r0, #1
 801fbf6:	d10e      	bne.n	801fc16 <_printf_float+0x42a>
 801fbf8:	e659      	b.n	801f8ae <_printf_float+0xc2>
 801fbfa:	2301      	movs	r3, #1
 801fbfc:	4652      	mov	r2, sl
 801fbfe:	4631      	mov	r1, r6
 801fc00:	4628      	mov	r0, r5
 801fc02:	47b8      	blx	r7
 801fc04:	3001      	adds	r0, #1
 801fc06:	f43f ae52 	beq.w	801f8ae <_printf_float+0xc2>
 801fc0a:	f108 0801 	add.w	r8, r8, #1
 801fc0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc10:	3b01      	subs	r3, #1
 801fc12:	4543      	cmp	r3, r8
 801fc14:	dcf1      	bgt.n	801fbfa <_printf_float+0x40e>
 801fc16:	464b      	mov	r3, r9
 801fc18:	f104 0250 	add.w	r2, r4, #80	; 0x50
 801fc1c:	e6dc      	b.n	801f9d8 <_printf_float+0x1ec>
 801fc1e:	f04f 0800 	mov.w	r8, #0
 801fc22:	f104 0a1a 	add.w	sl, r4, #26
 801fc26:	e7f2      	b.n	801fc0e <_printf_float+0x422>
 801fc28:	2301      	movs	r3, #1
 801fc2a:	4642      	mov	r2, r8
 801fc2c:	e7df      	b.n	801fbee <_printf_float+0x402>
 801fc2e:	2301      	movs	r3, #1
 801fc30:	464a      	mov	r2, r9
 801fc32:	4631      	mov	r1, r6
 801fc34:	4628      	mov	r0, r5
 801fc36:	47b8      	blx	r7
 801fc38:	3001      	adds	r0, #1
 801fc3a:	f43f ae38 	beq.w	801f8ae <_printf_float+0xc2>
 801fc3e:	f108 0801 	add.w	r8, r8, #1
 801fc42:	68e3      	ldr	r3, [r4, #12]
 801fc44:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fc46:	1a5b      	subs	r3, r3, r1
 801fc48:	4543      	cmp	r3, r8
 801fc4a:	dcf0      	bgt.n	801fc2e <_printf_float+0x442>
 801fc4c:	e6fa      	b.n	801fa44 <_printf_float+0x258>
 801fc4e:	f04f 0800 	mov.w	r8, #0
 801fc52:	f104 0919 	add.w	r9, r4, #25
 801fc56:	e7f4      	b.n	801fc42 <_printf_float+0x456>

0801fc58 <_printf_common>:
 801fc58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fc5c:	4616      	mov	r6, r2
 801fc5e:	4699      	mov	r9, r3
 801fc60:	688a      	ldr	r2, [r1, #8]
 801fc62:	690b      	ldr	r3, [r1, #16]
 801fc64:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801fc68:	4293      	cmp	r3, r2
 801fc6a:	bfb8      	it	lt
 801fc6c:	4613      	movlt	r3, r2
 801fc6e:	6033      	str	r3, [r6, #0]
 801fc70:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801fc74:	4607      	mov	r7, r0
 801fc76:	460c      	mov	r4, r1
 801fc78:	b10a      	cbz	r2, 801fc7e <_printf_common+0x26>
 801fc7a:	3301      	adds	r3, #1
 801fc7c:	6033      	str	r3, [r6, #0]
 801fc7e:	6823      	ldr	r3, [r4, #0]
 801fc80:	0699      	lsls	r1, r3, #26
 801fc82:	bf42      	ittt	mi
 801fc84:	6833      	ldrmi	r3, [r6, #0]
 801fc86:	3302      	addmi	r3, #2
 801fc88:	6033      	strmi	r3, [r6, #0]
 801fc8a:	6825      	ldr	r5, [r4, #0]
 801fc8c:	f015 0506 	ands.w	r5, r5, #6
 801fc90:	d106      	bne.n	801fca0 <_printf_common+0x48>
 801fc92:	f104 0a19 	add.w	sl, r4, #25
 801fc96:	68e3      	ldr	r3, [r4, #12]
 801fc98:	6832      	ldr	r2, [r6, #0]
 801fc9a:	1a9b      	subs	r3, r3, r2
 801fc9c:	42ab      	cmp	r3, r5
 801fc9e:	dc26      	bgt.n	801fcee <_printf_common+0x96>
 801fca0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801fca4:	1e13      	subs	r3, r2, #0
 801fca6:	6822      	ldr	r2, [r4, #0]
 801fca8:	bf18      	it	ne
 801fcaa:	2301      	movne	r3, #1
 801fcac:	0692      	lsls	r2, r2, #26
 801fcae:	d42b      	bmi.n	801fd08 <_printf_common+0xb0>
 801fcb0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801fcb4:	4649      	mov	r1, r9
 801fcb6:	4638      	mov	r0, r7
 801fcb8:	47c0      	blx	r8
 801fcba:	3001      	adds	r0, #1
 801fcbc:	d01e      	beq.n	801fcfc <_printf_common+0xa4>
 801fcbe:	6823      	ldr	r3, [r4, #0]
 801fcc0:	68e5      	ldr	r5, [r4, #12]
 801fcc2:	6832      	ldr	r2, [r6, #0]
 801fcc4:	f003 0306 	and.w	r3, r3, #6
 801fcc8:	2b04      	cmp	r3, #4
 801fcca:	bf08      	it	eq
 801fccc:	1aad      	subeq	r5, r5, r2
 801fcce:	68a3      	ldr	r3, [r4, #8]
 801fcd0:	6922      	ldr	r2, [r4, #16]
 801fcd2:	bf0c      	ite	eq
 801fcd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801fcd8:	2500      	movne	r5, #0
 801fcda:	4293      	cmp	r3, r2
 801fcdc:	bfc4      	itt	gt
 801fcde:	1a9b      	subgt	r3, r3, r2
 801fce0:	18ed      	addgt	r5, r5, r3
 801fce2:	2600      	movs	r6, #0
 801fce4:	341a      	adds	r4, #26
 801fce6:	42b5      	cmp	r5, r6
 801fce8:	d11a      	bne.n	801fd20 <_printf_common+0xc8>
 801fcea:	2000      	movs	r0, #0
 801fcec:	e008      	b.n	801fd00 <_printf_common+0xa8>
 801fcee:	2301      	movs	r3, #1
 801fcf0:	4652      	mov	r2, sl
 801fcf2:	4649      	mov	r1, r9
 801fcf4:	4638      	mov	r0, r7
 801fcf6:	47c0      	blx	r8
 801fcf8:	3001      	adds	r0, #1
 801fcfa:	d103      	bne.n	801fd04 <_printf_common+0xac>
 801fcfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fd00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fd04:	3501      	adds	r5, #1
 801fd06:	e7c6      	b.n	801fc96 <_printf_common+0x3e>
 801fd08:	18e1      	adds	r1, r4, r3
 801fd0a:	1c5a      	adds	r2, r3, #1
 801fd0c:	2030      	movs	r0, #48	; 0x30
 801fd0e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801fd12:	4422      	add	r2, r4
 801fd14:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801fd18:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801fd1c:	3302      	adds	r3, #2
 801fd1e:	e7c7      	b.n	801fcb0 <_printf_common+0x58>
 801fd20:	2301      	movs	r3, #1
 801fd22:	4622      	mov	r2, r4
 801fd24:	4649      	mov	r1, r9
 801fd26:	4638      	mov	r0, r7
 801fd28:	47c0      	blx	r8
 801fd2a:	3001      	adds	r0, #1
 801fd2c:	d0e6      	beq.n	801fcfc <_printf_common+0xa4>
 801fd2e:	3601      	adds	r6, #1
 801fd30:	e7d9      	b.n	801fce6 <_printf_common+0x8e>
	...

0801fd34 <_printf_i>:
 801fd34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801fd38:	7e0f      	ldrb	r7, [r1, #24]
 801fd3a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fd3c:	2f78      	cmp	r7, #120	; 0x78
 801fd3e:	4691      	mov	r9, r2
 801fd40:	4680      	mov	r8, r0
 801fd42:	460c      	mov	r4, r1
 801fd44:	469a      	mov	sl, r3
 801fd46:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801fd4a:	d807      	bhi.n	801fd5c <_printf_i+0x28>
 801fd4c:	2f62      	cmp	r7, #98	; 0x62
 801fd4e:	d80a      	bhi.n	801fd66 <_printf_i+0x32>
 801fd50:	2f00      	cmp	r7, #0
 801fd52:	f000 80d8 	beq.w	801ff06 <_printf_i+0x1d2>
 801fd56:	2f58      	cmp	r7, #88	; 0x58
 801fd58:	f000 80a3 	beq.w	801fea2 <_printf_i+0x16e>
 801fd5c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fd60:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801fd64:	e03a      	b.n	801fddc <_printf_i+0xa8>
 801fd66:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801fd6a:	2b15      	cmp	r3, #21
 801fd6c:	d8f6      	bhi.n	801fd5c <_printf_i+0x28>
 801fd6e:	a101      	add	r1, pc, #4	; (adr r1, 801fd74 <_printf_i+0x40>)
 801fd70:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801fd74:	0801fdcd 	.word	0x0801fdcd
 801fd78:	0801fde1 	.word	0x0801fde1
 801fd7c:	0801fd5d 	.word	0x0801fd5d
 801fd80:	0801fd5d 	.word	0x0801fd5d
 801fd84:	0801fd5d 	.word	0x0801fd5d
 801fd88:	0801fd5d 	.word	0x0801fd5d
 801fd8c:	0801fde1 	.word	0x0801fde1
 801fd90:	0801fd5d 	.word	0x0801fd5d
 801fd94:	0801fd5d 	.word	0x0801fd5d
 801fd98:	0801fd5d 	.word	0x0801fd5d
 801fd9c:	0801fd5d 	.word	0x0801fd5d
 801fda0:	0801feed 	.word	0x0801feed
 801fda4:	0801fe11 	.word	0x0801fe11
 801fda8:	0801fecf 	.word	0x0801fecf
 801fdac:	0801fd5d 	.word	0x0801fd5d
 801fdb0:	0801fd5d 	.word	0x0801fd5d
 801fdb4:	0801ff0f 	.word	0x0801ff0f
 801fdb8:	0801fd5d 	.word	0x0801fd5d
 801fdbc:	0801fe11 	.word	0x0801fe11
 801fdc0:	0801fd5d 	.word	0x0801fd5d
 801fdc4:	0801fd5d 	.word	0x0801fd5d
 801fdc8:	0801fed7 	.word	0x0801fed7
 801fdcc:	682b      	ldr	r3, [r5, #0]
 801fdce:	1d1a      	adds	r2, r3, #4
 801fdd0:	681b      	ldr	r3, [r3, #0]
 801fdd2:	602a      	str	r2, [r5, #0]
 801fdd4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fdd8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801fddc:	2301      	movs	r3, #1
 801fdde:	e0a3      	b.n	801ff28 <_printf_i+0x1f4>
 801fde0:	6820      	ldr	r0, [r4, #0]
 801fde2:	6829      	ldr	r1, [r5, #0]
 801fde4:	0606      	lsls	r6, r0, #24
 801fde6:	f101 0304 	add.w	r3, r1, #4
 801fdea:	d50a      	bpl.n	801fe02 <_printf_i+0xce>
 801fdec:	680e      	ldr	r6, [r1, #0]
 801fdee:	602b      	str	r3, [r5, #0]
 801fdf0:	2e00      	cmp	r6, #0
 801fdf2:	da03      	bge.n	801fdfc <_printf_i+0xc8>
 801fdf4:	232d      	movs	r3, #45	; 0x2d
 801fdf6:	4276      	negs	r6, r6
 801fdf8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fdfc:	485e      	ldr	r0, [pc, #376]	; (801ff78 <_printf_i+0x244>)
 801fdfe:	230a      	movs	r3, #10
 801fe00:	e019      	b.n	801fe36 <_printf_i+0x102>
 801fe02:	680e      	ldr	r6, [r1, #0]
 801fe04:	602b      	str	r3, [r5, #0]
 801fe06:	f010 0f40 	tst.w	r0, #64	; 0x40
 801fe0a:	bf18      	it	ne
 801fe0c:	b236      	sxthne	r6, r6
 801fe0e:	e7ef      	b.n	801fdf0 <_printf_i+0xbc>
 801fe10:	682b      	ldr	r3, [r5, #0]
 801fe12:	6820      	ldr	r0, [r4, #0]
 801fe14:	1d19      	adds	r1, r3, #4
 801fe16:	6029      	str	r1, [r5, #0]
 801fe18:	0601      	lsls	r1, r0, #24
 801fe1a:	d501      	bpl.n	801fe20 <_printf_i+0xec>
 801fe1c:	681e      	ldr	r6, [r3, #0]
 801fe1e:	e002      	b.n	801fe26 <_printf_i+0xf2>
 801fe20:	0646      	lsls	r6, r0, #25
 801fe22:	d5fb      	bpl.n	801fe1c <_printf_i+0xe8>
 801fe24:	881e      	ldrh	r6, [r3, #0]
 801fe26:	4854      	ldr	r0, [pc, #336]	; (801ff78 <_printf_i+0x244>)
 801fe28:	2f6f      	cmp	r7, #111	; 0x6f
 801fe2a:	bf0c      	ite	eq
 801fe2c:	2308      	moveq	r3, #8
 801fe2e:	230a      	movne	r3, #10
 801fe30:	2100      	movs	r1, #0
 801fe32:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801fe36:	6865      	ldr	r5, [r4, #4]
 801fe38:	60a5      	str	r5, [r4, #8]
 801fe3a:	2d00      	cmp	r5, #0
 801fe3c:	bfa2      	ittt	ge
 801fe3e:	6821      	ldrge	r1, [r4, #0]
 801fe40:	f021 0104 	bicge.w	r1, r1, #4
 801fe44:	6021      	strge	r1, [r4, #0]
 801fe46:	b90e      	cbnz	r6, 801fe4c <_printf_i+0x118>
 801fe48:	2d00      	cmp	r5, #0
 801fe4a:	d04d      	beq.n	801fee8 <_printf_i+0x1b4>
 801fe4c:	4615      	mov	r5, r2
 801fe4e:	fbb6 f1f3 	udiv	r1, r6, r3
 801fe52:	fb03 6711 	mls	r7, r3, r1, r6
 801fe56:	5dc7      	ldrb	r7, [r0, r7]
 801fe58:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801fe5c:	4637      	mov	r7, r6
 801fe5e:	42bb      	cmp	r3, r7
 801fe60:	460e      	mov	r6, r1
 801fe62:	d9f4      	bls.n	801fe4e <_printf_i+0x11a>
 801fe64:	2b08      	cmp	r3, #8
 801fe66:	d10b      	bne.n	801fe80 <_printf_i+0x14c>
 801fe68:	6823      	ldr	r3, [r4, #0]
 801fe6a:	07de      	lsls	r6, r3, #31
 801fe6c:	d508      	bpl.n	801fe80 <_printf_i+0x14c>
 801fe6e:	6923      	ldr	r3, [r4, #16]
 801fe70:	6861      	ldr	r1, [r4, #4]
 801fe72:	4299      	cmp	r1, r3
 801fe74:	bfde      	ittt	le
 801fe76:	2330      	movle	r3, #48	; 0x30
 801fe78:	f805 3c01 	strble.w	r3, [r5, #-1]
 801fe7c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 801fe80:	1b52      	subs	r2, r2, r5
 801fe82:	6122      	str	r2, [r4, #16]
 801fe84:	f8cd a000 	str.w	sl, [sp]
 801fe88:	464b      	mov	r3, r9
 801fe8a:	aa03      	add	r2, sp, #12
 801fe8c:	4621      	mov	r1, r4
 801fe8e:	4640      	mov	r0, r8
 801fe90:	f7ff fee2 	bl	801fc58 <_printf_common>
 801fe94:	3001      	adds	r0, #1
 801fe96:	d14c      	bne.n	801ff32 <_printf_i+0x1fe>
 801fe98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fe9c:	b004      	add	sp, #16
 801fe9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fea2:	4835      	ldr	r0, [pc, #212]	; (801ff78 <_printf_i+0x244>)
 801fea4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801fea8:	6829      	ldr	r1, [r5, #0]
 801feaa:	6823      	ldr	r3, [r4, #0]
 801feac:	f851 6b04 	ldr.w	r6, [r1], #4
 801feb0:	6029      	str	r1, [r5, #0]
 801feb2:	061d      	lsls	r5, r3, #24
 801feb4:	d514      	bpl.n	801fee0 <_printf_i+0x1ac>
 801feb6:	07df      	lsls	r7, r3, #31
 801feb8:	bf44      	itt	mi
 801feba:	f043 0320 	orrmi.w	r3, r3, #32
 801febe:	6023      	strmi	r3, [r4, #0]
 801fec0:	b91e      	cbnz	r6, 801feca <_printf_i+0x196>
 801fec2:	6823      	ldr	r3, [r4, #0]
 801fec4:	f023 0320 	bic.w	r3, r3, #32
 801fec8:	6023      	str	r3, [r4, #0]
 801feca:	2310      	movs	r3, #16
 801fecc:	e7b0      	b.n	801fe30 <_printf_i+0xfc>
 801fece:	6823      	ldr	r3, [r4, #0]
 801fed0:	f043 0320 	orr.w	r3, r3, #32
 801fed4:	6023      	str	r3, [r4, #0]
 801fed6:	2378      	movs	r3, #120	; 0x78
 801fed8:	4828      	ldr	r0, [pc, #160]	; (801ff7c <_printf_i+0x248>)
 801feda:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801fede:	e7e3      	b.n	801fea8 <_printf_i+0x174>
 801fee0:	0659      	lsls	r1, r3, #25
 801fee2:	bf48      	it	mi
 801fee4:	b2b6      	uxthmi	r6, r6
 801fee6:	e7e6      	b.n	801feb6 <_printf_i+0x182>
 801fee8:	4615      	mov	r5, r2
 801feea:	e7bb      	b.n	801fe64 <_printf_i+0x130>
 801feec:	682b      	ldr	r3, [r5, #0]
 801feee:	6826      	ldr	r6, [r4, #0]
 801fef0:	6961      	ldr	r1, [r4, #20]
 801fef2:	1d18      	adds	r0, r3, #4
 801fef4:	6028      	str	r0, [r5, #0]
 801fef6:	0635      	lsls	r5, r6, #24
 801fef8:	681b      	ldr	r3, [r3, #0]
 801fefa:	d501      	bpl.n	801ff00 <_printf_i+0x1cc>
 801fefc:	6019      	str	r1, [r3, #0]
 801fefe:	e002      	b.n	801ff06 <_printf_i+0x1d2>
 801ff00:	0670      	lsls	r0, r6, #25
 801ff02:	d5fb      	bpl.n	801fefc <_printf_i+0x1c8>
 801ff04:	8019      	strh	r1, [r3, #0]
 801ff06:	2300      	movs	r3, #0
 801ff08:	6123      	str	r3, [r4, #16]
 801ff0a:	4615      	mov	r5, r2
 801ff0c:	e7ba      	b.n	801fe84 <_printf_i+0x150>
 801ff0e:	682b      	ldr	r3, [r5, #0]
 801ff10:	1d1a      	adds	r2, r3, #4
 801ff12:	602a      	str	r2, [r5, #0]
 801ff14:	681d      	ldr	r5, [r3, #0]
 801ff16:	6862      	ldr	r2, [r4, #4]
 801ff18:	2100      	movs	r1, #0
 801ff1a:	4628      	mov	r0, r5
 801ff1c:	f7e0 f960 	bl	80001e0 <memchr>
 801ff20:	b108      	cbz	r0, 801ff26 <_printf_i+0x1f2>
 801ff22:	1b40      	subs	r0, r0, r5
 801ff24:	6060      	str	r0, [r4, #4]
 801ff26:	6863      	ldr	r3, [r4, #4]
 801ff28:	6123      	str	r3, [r4, #16]
 801ff2a:	2300      	movs	r3, #0
 801ff2c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ff30:	e7a8      	b.n	801fe84 <_printf_i+0x150>
 801ff32:	6923      	ldr	r3, [r4, #16]
 801ff34:	462a      	mov	r2, r5
 801ff36:	4649      	mov	r1, r9
 801ff38:	4640      	mov	r0, r8
 801ff3a:	47d0      	blx	sl
 801ff3c:	3001      	adds	r0, #1
 801ff3e:	d0ab      	beq.n	801fe98 <_printf_i+0x164>
 801ff40:	6823      	ldr	r3, [r4, #0]
 801ff42:	079b      	lsls	r3, r3, #30
 801ff44:	d413      	bmi.n	801ff6e <_printf_i+0x23a>
 801ff46:	68e0      	ldr	r0, [r4, #12]
 801ff48:	9b03      	ldr	r3, [sp, #12]
 801ff4a:	4298      	cmp	r0, r3
 801ff4c:	bfb8      	it	lt
 801ff4e:	4618      	movlt	r0, r3
 801ff50:	e7a4      	b.n	801fe9c <_printf_i+0x168>
 801ff52:	2301      	movs	r3, #1
 801ff54:	4632      	mov	r2, r6
 801ff56:	4649      	mov	r1, r9
 801ff58:	4640      	mov	r0, r8
 801ff5a:	47d0      	blx	sl
 801ff5c:	3001      	adds	r0, #1
 801ff5e:	d09b      	beq.n	801fe98 <_printf_i+0x164>
 801ff60:	3501      	adds	r5, #1
 801ff62:	68e3      	ldr	r3, [r4, #12]
 801ff64:	9903      	ldr	r1, [sp, #12]
 801ff66:	1a5b      	subs	r3, r3, r1
 801ff68:	42ab      	cmp	r3, r5
 801ff6a:	dcf2      	bgt.n	801ff52 <_printf_i+0x21e>
 801ff6c:	e7eb      	b.n	801ff46 <_printf_i+0x212>
 801ff6e:	2500      	movs	r5, #0
 801ff70:	f104 0619 	add.w	r6, r4, #25
 801ff74:	e7f5      	b.n	801ff62 <_printf_i+0x22e>
 801ff76:	bf00      	nop
 801ff78:	08026f3e 	.word	0x08026f3e
 801ff7c:	08026f4f 	.word	0x08026f4f

0801ff80 <_scanf_float>:
 801ff80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff84:	b087      	sub	sp, #28
 801ff86:	4617      	mov	r7, r2
 801ff88:	9303      	str	r3, [sp, #12]
 801ff8a:	688b      	ldr	r3, [r1, #8]
 801ff8c:	1e5a      	subs	r2, r3, #1
 801ff8e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 801ff92:	bf83      	ittte	hi
 801ff94:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 801ff98:	195b      	addhi	r3, r3, r5
 801ff9a:	9302      	strhi	r3, [sp, #8]
 801ff9c:	2300      	movls	r3, #0
 801ff9e:	bf86      	itte	hi
 801ffa0:	f240 135d 	movwhi	r3, #349	; 0x15d
 801ffa4:	608b      	strhi	r3, [r1, #8]
 801ffa6:	9302      	strls	r3, [sp, #8]
 801ffa8:	680b      	ldr	r3, [r1, #0]
 801ffaa:	468b      	mov	fp, r1
 801ffac:	2500      	movs	r5, #0
 801ffae:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 801ffb2:	f84b 3b1c 	str.w	r3, [fp], #28
 801ffb6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801ffba:	4680      	mov	r8, r0
 801ffbc:	460c      	mov	r4, r1
 801ffbe:	465e      	mov	r6, fp
 801ffc0:	46aa      	mov	sl, r5
 801ffc2:	46a9      	mov	r9, r5
 801ffc4:	9501      	str	r5, [sp, #4]
 801ffc6:	68a2      	ldr	r2, [r4, #8]
 801ffc8:	b152      	cbz	r2, 801ffe0 <_scanf_float+0x60>
 801ffca:	683b      	ldr	r3, [r7, #0]
 801ffcc:	781b      	ldrb	r3, [r3, #0]
 801ffce:	2b4e      	cmp	r3, #78	; 0x4e
 801ffd0:	d864      	bhi.n	802009c <_scanf_float+0x11c>
 801ffd2:	2b40      	cmp	r3, #64	; 0x40
 801ffd4:	d83c      	bhi.n	8020050 <_scanf_float+0xd0>
 801ffd6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 801ffda:	b2c8      	uxtb	r0, r1
 801ffdc:	280e      	cmp	r0, #14
 801ffde:	d93a      	bls.n	8020056 <_scanf_float+0xd6>
 801ffe0:	f1b9 0f00 	cmp.w	r9, #0
 801ffe4:	d003      	beq.n	801ffee <_scanf_float+0x6e>
 801ffe6:	6823      	ldr	r3, [r4, #0]
 801ffe8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801ffec:	6023      	str	r3, [r4, #0]
 801ffee:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 801fff2:	f1ba 0f01 	cmp.w	sl, #1
 801fff6:	f200 8113 	bhi.w	8020220 <_scanf_float+0x2a0>
 801fffa:	455e      	cmp	r6, fp
 801fffc:	f200 8105 	bhi.w	802020a <_scanf_float+0x28a>
 8020000:	2501      	movs	r5, #1
 8020002:	4628      	mov	r0, r5
 8020004:	b007      	add	sp, #28
 8020006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802000a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 802000e:	2a0d      	cmp	r2, #13
 8020010:	d8e6      	bhi.n	801ffe0 <_scanf_float+0x60>
 8020012:	a101      	add	r1, pc, #4	; (adr r1, 8020018 <_scanf_float+0x98>)
 8020014:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8020018:	08020157 	.word	0x08020157
 802001c:	0801ffe1 	.word	0x0801ffe1
 8020020:	0801ffe1 	.word	0x0801ffe1
 8020024:	0801ffe1 	.word	0x0801ffe1
 8020028:	080201b7 	.word	0x080201b7
 802002c:	0802018f 	.word	0x0802018f
 8020030:	0801ffe1 	.word	0x0801ffe1
 8020034:	0801ffe1 	.word	0x0801ffe1
 8020038:	08020165 	.word	0x08020165
 802003c:	0801ffe1 	.word	0x0801ffe1
 8020040:	0801ffe1 	.word	0x0801ffe1
 8020044:	0801ffe1 	.word	0x0801ffe1
 8020048:	0801ffe1 	.word	0x0801ffe1
 802004c:	0802011d 	.word	0x0802011d
 8020050:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8020054:	e7db      	b.n	802000e <_scanf_float+0x8e>
 8020056:	290e      	cmp	r1, #14
 8020058:	d8c2      	bhi.n	801ffe0 <_scanf_float+0x60>
 802005a:	a001      	add	r0, pc, #4	; (adr r0, 8020060 <_scanf_float+0xe0>)
 802005c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8020060:	0802010f 	.word	0x0802010f
 8020064:	0801ffe1 	.word	0x0801ffe1
 8020068:	0802010f 	.word	0x0802010f
 802006c:	080201a3 	.word	0x080201a3
 8020070:	0801ffe1 	.word	0x0801ffe1
 8020074:	080200bd 	.word	0x080200bd
 8020078:	080200f9 	.word	0x080200f9
 802007c:	080200f9 	.word	0x080200f9
 8020080:	080200f9 	.word	0x080200f9
 8020084:	080200f9 	.word	0x080200f9
 8020088:	080200f9 	.word	0x080200f9
 802008c:	080200f9 	.word	0x080200f9
 8020090:	080200f9 	.word	0x080200f9
 8020094:	080200f9 	.word	0x080200f9
 8020098:	080200f9 	.word	0x080200f9
 802009c:	2b6e      	cmp	r3, #110	; 0x6e
 802009e:	d809      	bhi.n	80200b4 <_scanf_float+0x134>
 80200a0:	2b60      	cmp	r3, #96	; 0x60
 80200a2:	d8b2      	bhi.n	802000a <_scanf_float+0x8a>
 80200a4:	2b54      	cmp	r3, #84	; 0x54
 80200a6:	d077      	beq.n	8020198 <_scanf_float+0x218>
 80200a8:	2b59      	cmp	r3, #89	; 0x59
 80200aa:	d199      	bne.n	801ffe0 <_scanf_float+0x60>
 80200ac:	2d07      	cmp	r5, #7
 80200ae:	d197      	bne.n	801ffe0 <_scanf_float+0x60>
 80200b0:	2508      	movs	r5, #8
 80200b2:	e029      	b.n	8020108 <_scanf_float+0x188>
 80200b4:	2b74      	cmp	r3, #116	; 0x74
 80200b6:	d06f      	beq.n	8020198 <_scanf_float+0x218>
 80200b8:	2b79      	cmp	r3, #121	; 0x79
 80200ba:	e7f6      	b.n	80200aa <_scanf_float+0x12a>
 80200bc:	6821      	ldr	r1, [r4, #0]
 80200be:	05c8      	lsls	r0, r1, #23
 80200c0:	d51a      	bpl.n	80200f8 <_scanf_float+0x178>
 80200c2:	9b02      	ldr	r3, [sp, #8]
 80200c4:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80200c8:	6021      	str	r1, [r4, #0]
 80200ca:	f109 0901 	add.w	r9, r9, #1
 80200ce:	b11b      	cbz	r3, 80200d8 <_scanf_float+0x158>
 80200d0:	3b01      	subs	r3, #1
 80200d2:	3201      	adds	r2, #1
 80200d4:	9302      	str	r3, [sp, #8]
 80200d6:	60a2      	str	r2, [r4, #8]
 80200d8:	68a3      	ldr	r3, [r4, #8]
 80200da:	3b01      	subs	r3, #1
 80200dc:	60a3      	str	r3, [r4, #8]
 80200de:	6923      	ldr	r3, [r4, #16]
 80200e0:	3301      	adds	r3, #1
 80200e2:	6123      	str	r3, [r4, #16]
 80200e4:	687b      	ldr	r3, [r7, #4]
 80200e6:	3b01      	subs	r3, #1
 80200e8:	2b00      	cmp	r3, #0
 80200ea:	607b      	str	r3, [r7, #4]
 80200ec:	f340 8084 	ble.w	80201f8 <_scanf_float+0x278>
 80200f0:	683b      	ldr	r3, [r7, #0]
 80200f2:	3301      	adds	r3, #1
 80200f4:	603b      	str	r3, [r7, #0]
 80200f6:	e766      	b.n	801ffc6 <_scanf_float+0x46>
 80200f8:	eb1a 0f05 	cmn.w	sl, r5
 80200fc:	f47f af70 	bne.w	801ffe0 <_scanf_float+0x60>
 8020100:	6822      	ldr	r2, [r4, #0]
 8020102:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8020106:	6022      	str	r2, [r4, #0]
 8020108:	f806 3b01 	strb.w	r3, [r6], #1
 802010c:	e7e4      	b.n	80200d8 <_scanf_float+0x158>
 802010e:	6822      	ldr	r2, [r4, #0]
 8020110:	0610      	lsls	r0, r2, #24
 8020112:	f57f af65 	bpl.w	801ffe0 <_scanf_float+0x60>
 8020116:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 802011a:	e7f4      	b.n	8020106 <_scanf_float+0x186>
 802011c:	f1ba 0f00 	cmp.w	sl, #0
 8020120:	d10e      	bne.n	8020140 <_scanf_float+0x1c0>
 8020122:	f1b9 0f00 	cmp.w	r9, #0
 8020126:	d10e      	bne.n	8020146 <_scanf_float+0x1c6>
 8020128:	6822      	ldr	r2, [r4, #0]
 802012a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 802012e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8020132:	d108      	bne.n	8020146 <_scanf_float+0x1c6>
 8020134:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8020138:	6022      	str	r2, [r4, #0]
 802013a:	f04f 0a01 	mov.w	sl, #1
 802013e:	e7e3      	b.n	8020108 <_scanf_float+0x188>
 8020140:	f1ba 0f02 	cmp.w	sl, #2
 8020144:	d055      	beq.n	80201f2 <_scanf_float+0x272>
 8020146:	2d01      	cmp	r5, #1
 8020148:	d002      	beq.n	8020150 <_scanf_float+0x1d0>
 802014a:	2d04      	cmp	r5, #4
 802014c:	f47f af48 	bne.w	801ffe0 <_scanf_float+0x60>
 8020150:	3501      	adds	r5, #1
 8020152:	b2ed      	uxtb	r5, r5
 8020154:	e7d8      	b.n	8020108 <_scanf_float+0x188>
 8020156:	f1ba 0f01 	cmp.w	sl, #1
 802015a:	f47f af41 	bne.w	801ffe0 <_scanf_float+0x60>
 802015e:	f04f 0a02 	mov.w	sl, #2
 8020162:	e7d1      	b.n	8020108 <_scanf_float+0x188>
 8020164:	b97d      	cbnz	r5, 8020186 <_scanf_float+0x206>
 8020166:	f1b9 0f00 	cmp.w	r9, #0
 802016a:	f47f af3c 	bne.w	801ffe6 <_scanf_float+0x66>
 802016e:	6822      	ldr	r2, [r4, #0]
 8020170:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8020174:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8020178:	f47f af39 	bne.w	801ffee <_scanf_float+0x6e>
 802017c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8020180:	6022      	str	r2, [r4, #0]
 8020182:	2501      	movs	r5, #1
 8020184:	e7c0      	b.n	8020108 <_scanf_float+0x188>
 8020186:	2d03      	cmp	r5, #3
 8020188:	d0e2      	beq.n	8020150 <_scanf_float+0x1d0>
 802018a:	2d05      	cmp	r5, #5
 802018c:	e7de      	b.n	802014c <_scanf_float+0x1cc>
 802018e:	2d02      	cmp	r5, #2
 8020190:	f47f af26 	bne.w	801ffe0 <_scanf_float+0x60>
 8020194:	2503      	movs	r5, #3
 8020196:	e7b7      	b.n	8020108 <_scanf_float+0x188>
 8020198:	2d06      	cmp	r5, #6
 802019a:	f47f af21 	bne.w	801ffe0 <_scanf_float+0x60>
 802019e:	2507      	movs	r5, #7
 80201a0:	e7b2      	b.n	8020108 <_scanf_float+0x188>
 80201a2:	6822      	ldr	r2, [r4, #0]
 80201a4:	0591      	lsls	r1, r2, #22
 80201a6:	f57f af1b 	bpl.w	801ffe0 <_scanf_float+0x60>
 80201aa:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 80201ae:	6022      	str	r2, [r4, #0]
 80201b0:	f8cd 9004 	str.w	r9, [sp, #4]
 80201b4:	e7a8      	b.n	8020108 <_scanf_float+0x188>
 80201b6:	6822      	ldr	r2, [r4, #0]
 80201b8:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 80201bc:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 80201c0:	d006      	beq.n	80201d0 <_scanf_float+0x250>
 80201c2:	0550      	lsls	r0, r2, #21
 80201c4:	f57f af0c 	bpl.w	801ffe0 <_scanf_float+0x60>
 80201c8:	f1b9 0f00 	cmp.w	r9, #0
 80201cc:	f43f af0f 	beq.w	801ffee <_scanf_float+0x6e>
 80201d0:	0591      	lsls	r1, r2, #22
 80201d2:	bf58      	it	pl
 80201d4:	9901      	ldrpl	r1, [sp, #4]
 80201d6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80201da:	bf58      	it	pl
 80201dc:	eba9 0101 	subpl.w	r1, r9, r1
 80201e0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80201e4:	bf58      	it	pl
 80201e6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80201ea:	6022      	str	r2, [r4, #0]
 80201ec:	f04f 0900 	mov.w	r9, #0
 80201f0:	e78a      	b.n	8020108 <_scanf_float+0x188>
 80201f2:	f04f 0a03 	mov.w	sl, #3
 80201f6:	e787      	b.n	8020108 <_scanf_float+0x188>
 80201f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80201fc:	4639      	mov	r1, r7
 80201fe:	4640      	mov	r0, r8
 8020200:	4798      	blx	r3
 8020202:	2800      	cmp	r0, #0
 8020204:	f43f aedf 	beq.w	801ffc6 <_scanf_float+0x46>
 8020208:	e6ea      	b.n	801ffe0 <_scanf_float+0x60>
 802020a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 802020e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8020212:	463a      	mov	r2, r7
 8020214:	4640      	mov	r0, r8
 8020216:	4798      	blx	r3
 8020218:	6923      	ldr	r3, [r4, #16]
 802021a:	3b01      	subs	r3, #1
 802021c:	6123      	str	r3, [r4, #16]
 802021e:	e6ec      	b.n	801fffa <_scanf_float+0x7a>
 8020220:	1e6b      	subs	r3, r5, #1
 8020222:	2b06      	cmp	r3, #6
 8020224:	d825      	bhi.n	8020272 <_scanf_float+0x2f2>
 8020226:	2d02      	cmp	r5, #2
 8020228:	d836      	bhi.n	8020298 <_scanf_float+0x318>
 802022a:	455e      	cmp	r6, fp
 802022c:	f67f aee8 	bls.w	8020000 <_scanf_float+0x80>
 8020230:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8020234:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8020238:	463a      	mov	r2, r7
 802023a:	4640      	mov	r0, r8
 802023c:	4798      	blx	r3
 802023e:	6923      	ldr	r3, [r4, #16]
 8020240:	3b01      	subs	r3, #1
 8020242:	6123      	str	r3, [r4, #16]
 8020244:	e7f1      	b.n	802022a <_scanf_float+0x2aa>
 8020246:	9802      	ldr	r0, [sp, #8]
 8020248:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 802024c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8020250:	9002      	str	r0, [sp, #8]
 8020252:	463a      	mov	r2, r7
 8020254:	4640      	mov	r0, r8
 8020256:	4798      	blx	r3
 8020258:	6923      	ldr	r3, [r4, #16]
 802025a:	3b01      	subs	r3, #1
 802025c:	6123      	str	r3, [r4, #16]
 802025e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8020262:	fa5f fa8a 	uxtb.w	sl, sl
 8020266:	f1ba 0f02 	cmp.w	sl, #2
 802026a:	d1ec      	bne.n	8020246 <_scanf_float+0x2c6>
 802026c:	3d03      	subs	r5, #3
 802026e:	b2ed      	uxtb	r5, r5
 8020270:	1b76      	subs	r6, r6, r5
 8020272:	6823      	ldr	r3, [r4, #0]
 8020274:	05da      	lsls	r2, r3, #23
 8020276:	d52f      	bpl.n	80202d8 <_scanf_float+0x358>
 8020278:	055b      	lsls	r3, r3, #21
 802027a:	d510      	bpl.n	802029e <_scanf_float+0x31e>
 802027c:	455e      	cmp	r6, fp
 802027e:	f67f aebf 	bls.w	8020000 <_scanf_float+0x80>
 8020282:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8020286:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 802028a:	463a      	mov	r2, r7
 802028c:	4640      	mov	r0, r8
 802028e:	4798      	blx	r3
 8020290:	6923      	ldr	r3, [r4, #16]
 8020292:	3b01      	subs	r3, #1
 8020294:	6123      	str	r3, [r4, #16]
 8020296:	e7f1      	b.n	802027c <_scanf_float+0x2fc>
 8020298:	46aa      	mov	sl, r5
 802029a:	9602      	str	r6, [sp, #8]
 802029c:	e7df      	b.n	802025e <_scanf_float+0x2de>
 802029e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80202a2:	6923      	ldr	r3, [r4, #16]
 80202a4:	2965      	cmp	r1, #101	; 0x65
 80202a6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 80202aa:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
 80202ae:	6123      	str	r3, [r4, #16]
 80202b0:	d00c      	beq.n	80202cc <_scanf_float+0x34c>
 80202b2:	2945      	cmp	r1, #69	; 0x45
 80202b4:	d00a      	beq.n	80202cc <_scanf_float+0x34c>
 80202b6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80202ba:	463a      	mov	r2, r7
 80202bc:	4640      	mov	r0, r8
 80202be:	4798      	blx	r3
 80202c0:	6923      	ldr	r3, [r4, #16]
 80202c2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80202c6:	3b01      	subs	r3, #1
 80202c8:	1eb5      	subs	r5, r6, #2
 80202ca:	6123      	str	r3, [r4, #16]
 80202cc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80202d0:	463a      	mov	r2, r7
 80202d2:	4640      	mov	r0, r8
 80202d4:	4798      	blx	r3
 80202d6:	462e      	mov	r6, r5
 80202d8:	6825      	ldr	r5, [r4, #0]
 80202da:	f015 0510 	ands.w	r5, r5, #16
 80202de:	d159      	bne.n	8020394 <_scanf_float+0x414>
 80202e0:	7035      	strb	r5, [r6, #0]
 80202e2:	6823      	ldr	r3, [r4, #0]
 80202e4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80202e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80202ec:	d11b      	bne.n	8020326 <_scanf_float+0x3a6>
 80202ee:	9b01      	ldr	r3, [sp, #4]
 80202f0:	454b      	cmp	r3, r9
 80202f2:	eba3 0209 	sub.w	r2, r3, r9
 80202f6:	d123      	bne.n	8020340 <_scanf_float+0x3c0>
 80202f8:	2200      	movs	r2, #0
 80202fa:	4659      	mov	r1, fp
 80202fc:	4640      	mov	r0, r8
 80202fe:	f000 ff89 	bl	8021214 <_strtod_r>
 8020302:	6822      	ldr	r2, [r4, #0]
 8020304:	9b03      	ldr	r3, [sp, #12]
 8020306:	f012 0f02 	tst.w	r2, #2
 802030a:	ec57 6b10 	vmov	r6, r7, d0
 802030e:	681b      	ldr	r3, [r3, #0]
 8020310:	d021      	beq.n	8020356 <_scanf_float+0x3d6>
 8020312:	9903      	ldr	r1, [sp, #12]
 8020314:	1d1a      	adds	r2, r3, #4
 8020316:	600a      	str	r2, [r1, #0]
 8020318:	681b      	ldr	r3, [r3, #0]
 802031a:	e9c3 6700 	strd	r6, r7, [r3]
 802031e:	68e3      	ldr	r3, [r4, #12]
 8020320:	3301      	adds	r3, #1
 8020322:	60e3      	str	r3, [r4, #12]
 8020324:	e66d      	b.n	8020002 <_scanf_float+0x82>
 8020326:	9b04      	ldr	r3, [sp, #16]
 8020328:	2b00      	cmp	r3, #0
 802032a:	d0e5      	beq.n	80202f8 <_scanf_float+0x378>
 802032c:	9905      	ldr	r1, [sp, #20]
 802032e:	230a      	movs	r3, #10
 8020330:	462a      	mov	r2, r5
 8020332:	3101      	adds	r1, #1
 8020334:	4640      	mov	r0, r8
 8020336:	f000 fff5 	bl	8021324 <_strtol_r>
 802033a:	9b04      	ldr	r3, [sp, #16]
 802033c:	9e05      	ldr	r6, [sp, #20]
 802033e:	1ac2      	subs	r2, r0, r3
 8020340:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8020344:	429e      	cmp	r6, r3
 8020346:	bf28      	it	cs
 8020348:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 802034c:	4912      	ldr	r1, [pc, #72]	; (8020398 <_scanf_float+0x418>)
 802034e:	4630      	mov	r0, r6
 8020350:	f000 f8da 	bl	8020508 <siprintf>
 8020354:	e7d0      	b.n	80202f8 <_scanf_float+0x378>
 8020356:	9903      	ldr	r1, [sp, #12]
 8020358:	f012 0f04 	tst.w	r2, #4
 802035c:	f103 0204 	add.w	r2, r3, #4
 8020360:	600a      	str	r2, [r1, #0]
 8020362:	d1d9      	bne.n	8020318 <_scanf_float+0x398>
 8020364:	f8d3 8000 	ldr.w	r8, [r3]
 8020368:	ee10 2a10 	vmov	r2, s0
 802036c:	ee10 0a10 	vmov	r0, s0
 8020370:	463b      	mov	r3, r7
 8020372:	4639      	mov	r1, r7
 8020374:	f7e0 fbda 	bl	8000b2c <__aeabi_dcmpun>
 8020378:	b128      	cbz	r0, 8020386 <_scanf_float+0x406>
 802037a:	4808      	ldr	r0, [pc, #32]	; (802039c <_scanf_float+0x41c>)
 802037c:	f000 f88a 	bl	8020494 <nanf>
 8020380:	ed88 0a00 	vstr	s0, [r8]
 8020384:	e7cb      	b.n	802031e <_scanf_float+0x39e>
 8020386:	4630      	mov	r0, r6
 8020388:	4639      	mov	r1, r7
 802038a:	f7e0 fc2d 	bl	8000be8 <__aeabi_d2f>
 802038e:	f8c8 0000 	str.w	r0, [r8]
 8020392:	e7c4      	b.n	802031e <_scanf_float+0x39e>
 8020394:	2500      	movs	r5, #0
 8020396:	e634      	b.n	8020002 <_scanf_float+0x82>
 8020398:	08026f60 	.word	0x08026f60
 802039c:	08027368 	.word	0x08027368

080203a0 <cleanup_glue>:
 80203a0:	b538      	push	{r3, r4, r5, lr}
 80203a2:	460c      	mov	r4, r1
 80203a4:	6809      	ldr	r1, [r1, #0]
 80203a6:	4605      	mov	r5, r0
 80203a8:	b109      	cbz	r1, 80203ae <cleanup_glue+0xe>
 80203aa:	f7ff fff9 	bl	80203a0 <cleanup_glue>
 80203ae:	4621      	mov	r1, r4
 80203b0:	4628      	mov	r0, r5
 80203b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80203b6:	f002 bfa1 	b.w	80232fc <_free_r>
	...

080203bc <_reclaim_reent>:
 80203bc:	4b2c      	ldr	r3, [pc, #176]	; (8020470 <_reclaim_reent+0xb4>)
 80203be:	681b      	ldr	r3, [r3, #0]
 80203c0:	4283      	cmp	r3, r0
 80203c2:	b570      	push	{r4, r5, r6, lr}
 80203c4:	4604      	mov	r4, r0
 80203c6:	d051      	beq.n	802046c <_reclaim_reent+0xb0>
 80203c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80203ca:	b143      	cbz	r3, 80203de <_reclaim_reent+0x22>
 80203cc:	68db      	ldr	r3, [r3, #12]
 80203ce:	2b00      	cmp	r3, #0
 80203d0:	d14a      	bne.n	8020468 <_reclaim_reent+0xac>
 80203d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80203d4:	6819      	ldr	r1, [r3, #0]
 80203d6:	b111      	cbz	r1, 80203de <_reclaim_reent+0x22>
 80203d8:	4620      	mov	r0, r4
 80203da:	f002 ff8f 	bl	80232fc <_free_r>
 80203de:	6961      	ldr	r1, [r4, #20]
 80203e0:	b111      	cbz	r1, 80203e8 <_reclaim_reent+0x2c>
 80203e2:	4620      	mov	r0, r4
 80203e4:	f002 ff8a 	bl	80232fc <_free_r>
 80203e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80203ea:	b111      	cbz	r1, 80203f2 <_reclaim_reent+0x36>
 80203ec:	4620      	mov	r0, r4
 80203ee:	f002 ff85 	bl	80232fc <_free_r>
 80203f2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80203f4:	b111      	cbz	r1, 80203fc <_reclaim_reent+0x40>
 80203f6:	4620      	mov	r0, r4
 80203f8:	f002 ff80 	bl	80232fc <_free_r>
 80203fc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80203fe:	b111      	cbz	r1, 8020406 <_reclaim_reent+0x4a>
 8020400:	4620      	mov	r0, r4
 8020402:	f002 ff7b 	bl	80232fc <_free_r>
 8020406:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020408:	b111      	cbz	r1, 8020410 <_reclaim_reent+0x54>
 802040a:	4620      	mov	r0, r4
 802040c:	f002 ff76 	bl	80232fc <_free_r>
 8020410:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8020412:	b111      	cbz	r1, 802041a <_reclaim_reent+0x5e>
 8020414:	4620      	mov	r0, r4
 8020416:	f002 ff71 	bl	80232fc <_free_r>
 802041a:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802041c:	b111      	cbz	r1, 8020424 <_reclaim_reent+0x68>
 802041e:	4620      	mov	r0, r4
 8020420:	f002 ff6c 	bl	80232fc <_free_r>
 8020424:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020426:	b111      	cbz	r1, 802042e <_reclaim_reent+0x72>
 8020428:	4620      	mov	r0, r4
 802042a:	f002 ff67 	bl	80232fc <_free_r>
 802042e:	69a3      	ldr	r3, [r4, #24]
 8020430:	b1e3      	cbz	r3, 802046c <_reclaim_reent+0xb0>
 8020432:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8020434:	4620      	mov	r0, r4
 8020436:	4798      	blx	r3
 8020438:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802043a:	b1b9      	cbz	r1, 802046c <_reclaim_reent+0xb0>
 802043c:	4620      	mov	r0, r4
 802043e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8020442:	f7ff bfad 	b.w	80203a0 <cleanup_glue>
 8020446:	5949      	ldr	r1, [r1, r5]
 8020448:	b941      	cbnz	r1, 802045c <_reclaim_reent+0xa0>
 802044a:	3504      	adds	r5, #4
 802044c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802044e:	2d80      	cmp	r5, #128	; 0x80
 8020450:	68d9      	ldr	r1, [r3, #12]
 8020452:	d1f8      	bne.n	8020446 <_reclaim_reent+0x8a>
 8020454:	4620      	mov	r0, r4
 8020456:	f002 ff51 	bl	80232fc <_free_r>
 802045a:	e7ba      	b.n	80203d2 <_reclaim_reent+0x16>
 802045c:	680e      	ldr	r6, [r1, #0]
 802045e:	4620      	mov	r0, r4
 8020460:	f002 ff4c 	bl	80232fc <_free_r>
 8020464:	4631      	mov	r1, r6
 8020466:	e7ef      	b.n	8020448 <_reclaim_reent+0x8c>
 8020468:	2500      	movs	r5, #0
 802046a:	e7ef      	b.n	802044c <_reclaim_reent+0x90>
 802046c:	bd70      	pop	{r4, r5, r6, pc}
 802046e:	bf00      	nop
 8020470:	20000150 	.word	0x20000150

08020474 <_sbrk_r>:
 8020474:	b538      	push	{r3, r4, r5, lr}
 8020476:	4d06      	ldr	r5, [pc, #24]	; (8020490 <_sbrk_r+0x1c>)
 8020478:	2300      	movs	r3, #0
 802047a:	4604      	mov	r4, r0
 802047c:	4608      	mov	r0, r1
 802047e:	602b      	str	r3, [r5, #0]
 8020480:	f006 f8fc 	bl	802667c <_sbrk>
 8020484:	1c43      	adds	r3, r0, #1
 8020486:	d102      	bne.n	802048e <_sbrk_r+0x1a>
 8020488:	682b      	ldr	r3, [r5, #0]
 802048a:	b103      	cbz	r3, 802048e <_sbrk_r+0x1a>
 802048c:	6023      	str	r3, [r4, #0]
 802048e:	bd38      	pop	{r3, r4, r5, pc}
 8020490:	2000f584 	.word	0x2000f584

08020494 <nanf>:
 8020494:	ed9f 0a01 	vldr	s0, [pc, #4]	; 802049c <nanf+0x8>
 8020498:	4770      	bx	lr
 802049a:	bf00      	nop
 802049c:	7fc00000 	.word	0x7fc00000

080204a0 <sniprintf>:
 80204a0:	b40c      	push	{r2, r3}
 80204a2:	b530      	push	{r4, r5, lr}
 80204a4:	4b17      	ldr	r3, [pc, #92]	; (8020504 <sniprintf+0x64>)
 80204a6:	1e0c      	subs	r4, r1, #0
 80204a8:	681d      	ldr	r5, [r3, #0]
 80204aa:	b09d      	sub	sp, #116	; 0x74
 80204ac:	da08      	bge.n	80204c0 <sniprintf+0x20>
 80204ae:	238b      	movs	r3, #139	; 0x8b
 80204b0:	602b      	str	r3, [r5, #0]
 80204b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80204b6:	b01d      	add	sp, #116	; 0x74
 80204b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80204bc:	b002      	add	sp, #8
 80204be:	4770      	bx	lr
 80204c0:	f44f 7302 	mov.w	r3, #520	; 0x208
 80204c4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80204c8:	bf14      	ite	ne
 80204ca:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 80204ce:	4623      	moveq	r3, r4
 80204d0:	9304      	str	r3, [sp, #16]
 80204d2:	9307      	str	r3, [sp, #28]
 80204d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80204d8:	9002      	str	r0, [sp, #8]
 80204da:	9006      	str	r0, [sp, #24]
 80204dc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80204e0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80204e2:	ab21      	add	r3, sp, #132	; 0x84
 80204e4:	a902      	add	r1, sp, #8
 80204e6:	4628      	mov	r0, r5
 80204e8:	9301      	str	r3, [sp, #4]
 80204ea:	f002 ffaf 	bl	802344c <_svfiprintf_r>
 80204ee:	1c43      	adds	r3, r0, #1
 80204f0:	bfbc      	itt	lt
 80204f2:	238b      	movlt	r3, #139	; 0x8b
 80204f4:	602b      	strlt	r3, [r5, #0]
 80204f6:	2c00      	cmp	r4, #0
 80204f8:	d0dd      	beq.n	80204b6 <sniprintf+0x16>
 80204fa:	9b02      	ldr	r3, [sp, #8]
 80204fc:	2200      	movs	r2, #0
 80204fe:	701a      	strb	r2, [r3, #0]
 8020500:	e7d9      	b.n	80204b6 <sniprintf+0x16>
 8020502:	bf00      	nop
 8020504:	20000150 	.word	0x20000150

08020508 <siprintf>:
 8020508:	b40e      	push	{r1, r2, r3}
 802050a:	b500      	push	{lr}
 802050c:	b09c      	sub	sp, #112	; 0x70
 802050e:	ab1d      	add	r3, sp, #116	; 0x74
 8020510:	9002      	str	r0, [sp, #8]
 8020512:	9006      	str	r0, [sp, #24]
 8020514:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8020518:	4809      	ldr	r0, [pc, #36]	; (8020540 <siprintf+0x38>)
 802051a:	9107      	str	r1, [sp, #28]
 802051c:	9104      	str	r1, [sp, #16]
 802051e:	4909      	ldr	r1, [pc, #36]	; (8020544 <siprintf+0x3c>)
 8020520:	f853 2b04 	ldr.w	r2, [r3], #4
 8020524:	9105      	str	r1, [sp, #20]
 8020526:	6800      	ldr	r0, [r0, #0]
 8020528:	9301      	str	r3, [sp, #4]
 802052a:	a902      	add	r1, sp, #8
 802052c:	f002 ff8e 	bl	802344c <_svfiprintf_r>
 8020530:	9b02      	ldr	r3, [sp, #8]
 8020532:	2200      	movs	r2, #0
 8020534:	701a      	strb	r2, [r3, #0]
 8020536:	b01c      	add	sp, #112	; 0x70
 8020538:	f85d eb04 	ldr.w	lr, [sp], #4
 802053c:	b003      	add	sp, #12
 802053e:	4770      	bx	lr
 8020540:	20000150 	.word	0x20000150
 8020544:	ffff0208 	.word	0xffff0208

08020548 <__sread>:
 8020548:	b510      	push	{r4, lr}
 802054a:	460c      	mov	r4, r1
 802054c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020550:	f003 f87c 	bl	802364c <_read_r>
 8020554:	2800      	cmp	r0, #0
 8020556:	bfab      	itete	ge
 8020558:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802055a:	89a3      	ldrhlt	r3, [r4, #12]
 802055c:	181b      	addge	r3, r3, r0
 802055e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8020562:	bfac      	ite	ge
 8020564:	6563      	strge	r3, [r4, #84]	; 0x54
 8020566:	81a3      	strhlt	r3, [r4, #12]
 8020568:	bd10      	pop	{r4, pc}

0802056a <__swrite>:
 802056a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802056e:	461f      	mov	r7, r3
 8020570:	898b      	ldrh	r3, [r1, #12]
 8020572:	05db      	lsls	r3, r3, #23
 8020574:	4605      	mov	r5, r0
 8020576:	460c      	mov	r4, r1
 8020578:	4616      	mov	r6, r2
 802057a:	d505      	bpl.n	8020588 <__swrite+0x1e>
 802057c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020580:	2302      	movs	r3, #2
 8020582:	2200      	movs	r2, #0
 8020584:	f002 f9aa 	bl	80228dc <_lseek_r>
 8020588:	89a3      	ldrh	r3, [r4, #12]
 802058a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802058e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8020592:	81a3      	strh	r3, [r4, #12]
 8020594:	4632      	mov	r2, r6
 8020596:	463b      	mov	r3, r7
 8020598:	4628      	mov	r0, r5
 802059a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802059e:	f000 bec3 	b.w	8021328 <_write_r>

080205a2 <__sseek>:
 80205a2:	b510      	push	{r4, lr}
 80205a4:	460c      	mov	r4, r1
 80205a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80205aa:	f002 f997 	bl	80228dc <_lseek_r>
 80205ae:	1c43      	adds	r3, r0, #1
 80205b0:	89a3      	ldrh	r3, [r4, #12]
 80205b2:	bf15      	itete	ne
 80205b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80205b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80205ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80205be:	81a3      	strheq	r3, [r4, #12]
 80205c0:	bf18      	it	ne
 80205c2:	81a3      	strhne	r3, [r4, #12]
 80205c4:	bd10      	pop	{r4, pc}

080205c6 <__sclose>:
 80205c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80205ca:	f000 bebf 	b.w	802134c <_close_r>

080205ce <sulp>:
 80205ce:	b570      	push	{r4, r5, r6, lr}
 80205d0:	4604      	mov	r4, r0
 80205d2:	460d      	mov	r5, r1
 80205d4:	ec45 4b10 	vmov	d0, r4, r5
 80205d8:	4616      	mov	r6, r2
 80205da:	f002 fd29 	bl	8023030 <__ulp>
 80205de:	ec51 0b10 	vmov	r0, r1, d0
 80205e2:	b17e      	cbz	r6, 8020604 <sulp+0x36>
 80205e4:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80205e8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80205ec:	2b00      	cmp	r3, #0
 80205ee:	dd09      	ble.n	8020604 <sulp+0x36>
 80205f0:	051b      	lsls	r3, r3, #20
 80205f2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80205f6:	2400      	movs	r4, #0
 80205f8:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80205fc:	4622      	mov	r2, r4
 80205fe:	462b      	mov	r3, r5
 8020600:	f7df fffa 	bl	80005f8 <__aeabi_dmul>
 8020604:	bd70      	pop	{r4, r5, r6, pc}
	...

08020608 <_strtod_l>:
 8020608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802060c:	ed2d 8b02 	vpush	{d8}
 8020610:	b09d      	sub	sp, #116	; 0x74
 8020612:	461f      	mov	r7, r3
 8020614:	2300      	movs	r3, #0
 8020616:	9318      	str	r3, [sp, #96]	; 0x60
 8020618:	4ba2      	ldr	r3, [pc, #648]	; (80208a4 <_strtod_l+0x29c>)
 802061a:	9213      	str	r2, [sp, #76]	; 0x4c
 802061c:	681b      	ldr	r3, [r3, #0]
 802061e:	9305      	str	r3, [sp, #20]
 8020620:	4604      	mov	r4, r0
 8020622:	4618      	mov	r0, r3
 8020624:	4688      	mov	r8, r1
 8020626:	f7df fdd3 	bl	80001d0 <strlen>
 802062a:	f04f 0a00 	mov.w	sl, #0
 802062e:	4605      	mov	r5, r0
 8020630:	f04f 0b00 	mov.w	fp, #0
 8020634:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8020638:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802063a:	781a      	ldrb	r2, [r3, #0]
 802063c:	2a2b      	cmp	r2, #43	; 0x2b
 802063e:	d04e      	beq.n	80206de <_strtod_l+0xd6>
 8020640:	d83b      	bhi.n	80206ba <_strtod_l+0xb2>
 8020642:	2a0d      	cmp	r2, #13
 8020644:	d834      	bhi.n	80206b0 <_strtod_l+0xa8>
 8020646:	2a08      	cmp	r2, #8
 8020648:	d834      	bhi.n	80206b4 <_strtod_l+0xac>
 802064a:	2a00      	cmp	r2, #0
 802064c:	d03e      	beq.n	80206cc <_strtod_l+0xc4>
 802064e:	2300      	movs	r3, #0
 8020650:	930a      	str	r3, [sp, #40]	; 0x28
 8020652:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8020654:	7833      	ldrb	r3, [r6, #0]
 8020656:	2b30      	cmp	r3, #48	; 0x30
 8020658:	f040 80b0 	bne.w	80207bc <_strtod_l+0x1b4>
 802065c:	7873      	ldrb	r3, [r6, #1]
 802065e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8020662:	2b58      	cmp	r3, #88	; 0x58
 8020664:	d168      	bne.n	8020738 <_strtod_l+0x130>
 8020666:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020668:	9301      	str	r3, [sp, #4]
 802066a:	ab18      	add	r3, sp, #96	; 0x60
 802066c:	9702      	str	r7, [sp, #8]
 802066e:	9300      	str	r3, [sp, #0]
 8020670:	4a8d      	ldr	r2, [pc, #564]	; (80208a8 <_strtod_l+0x2a0>)
 8020672:	ab19      	add	r3, sp, #100	; 0x64
 8020674:	a917      	add	r1, sp, #92	; 0x5c
 8020676:	4620      	mov	r0, r4
 8020678:	f001 fe24 	bl	80222c4 <__gethex>
 802067c:	f010 0707 	ands.w	r7, r0, #7
 8020680:	4605      	mov	r5, r0
 8020682:	d005      	beq.n	8020690 <_strtod_l+0x88>
 8020684:	2f06      	cmp	r7, #6
 8020686:	d12c      	bne.n	80206e2 <_strtod_l+0xda>
 8020688:	3601      	adds	r6, #1
 802068a:	2300      	movs	r3, #0
 802068c:	9617      	str	r6, [sp, #92]	; 0x5c
 802068e:	930a      	str	r3, [sp, #40]	; 0x28
 8020690:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020692:	2b00      	cmp	r3, #0
 8020694:	f040 8590 	bne.w	80211b8 <_strtod_l+0xbb0>
 8020698:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802069a:	b1eb      	cbz	r3, 80206d8 <_strtod_l+0xd0>
 802069c:	4652      	mov	r2, sl
 802069e:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80206a2:	ec43 2b10 	vmov	d0, r2, r3
 80206a6:	b01d      	add	sp, #116	; 0x74
 80206a8:	ecbd 8b02 	vpop	{d8}
 80206ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206b0:	2a20      	cmp	r2, #32
 80206b2:	d1cc      	bne.n	802064e <_strtod_l+0x46>
 80206b4:	3301      	adds	r3, #1
 80206b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80206b8:	e7be      	b.n	8020638 <_strtod_l+0x30>
 80206ba:	2a2d      	cmp	r2, #45	; 0x2d
 80206bc:	d1c7      	bne.n	802064e <_strtod_l+0x46>
 80206be:	2201      	movs	r2, #1
 80206c0:	920a      	str	r2, [sp, #40]	; 0x28
 80206c2:	1c5a      	adds	r2, r3, #1
 80206c4:	9217      	str	r2, [sp, #92]	; 0x5c
 80206c6:	785b      	ldrb	r3, [r3, #1]
 80206c8:	2b00      	cmp	r3, #0
 80206ca:	d1c2      	bne.n	8020652 <_strtod_l+0x4a>
 80206cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80206ce:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80206d2:	2b00      	cmp	r3, #0
 80206d4:	f040 856e 	bne.w	80211b4 <_strtod_l+0xbac>
 80206d8:	4652      	mov	r2, sl
 80206da:	465b      	mov	r3, fp
 80206dc:	e7e1      	b.n	80206a2 <_strtod_l+0x9a>
 80206de:	2200      	movs	r2, #0
 80206e0:	e7ee      	b.n	80206c0 <_strtod_l+0xb8>
 80206e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80206e4:	b13a      	cbz	r2, 80206f6 <_strtod_l+0xee>
 80206e6:	2135      	movs	r1, #53	; 0x35
 80206e8:	a81a      	add	r0, sp, #104	; 0x68
 80206ea:	f002 fdac 	bl	8023246 <__copybits>
 80206ee:	9918      	ldr	r1, [sp, #96]	; 0x60
 80206f0:	4620      	mov	r0, r4
 80206f2:	f002 f96b 	bl	80229cc <_Bfree>
 80206f6:	3f01      	subs	r7, #1
 80206f8:	2f04      	cmp	r7, #4
 80206fa:	d806      	bhi.n	802070a <_strtod_l+0x102>
 80206fc:	e8df f007 	tbb	[pc, r7]
 8020700:	1714030a 	.word	0x1714030a
 8020704:	0a          	.byte	0x0a
 8020705:	00          	.byte	0x00
 8020706:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 802070a:	0728      	lsls	r0, r5, #28
 802070c:	d5c0      	bpl.n	8020690 <_strtod_l+0x88>
 802070e:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8020712:	e7bd      	b.n	8020690 <_strtod_l+0x88>
 8020714:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8020718:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802071a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802071e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8020722:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8020726:	e7f0      	b.n	802070a <_strtod_l+0x102>
 8020728:	f8df b180 	ldr.w	fp, [pc, #384]	; 80208ac <_strtod_l+0x2a4>
 802072c:	e7ed      	b.n	802070a <_strtod_l+0x102>
 802072e:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8020732:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8020736:	e7e8      	b.n	802070a <_strtod_l+0x102>
 8020738:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802073a:	1c5a      	adds	r2, r3, #1
 802073c:	9217      	str	r2, [sp, #92]	; 0x5c
 802073e:	785b      	ldrb	r3, [r3, #1]
 8020740:	2b30      	cmp	r3, #48	; 0x30
 8020742:	d0f9      	beq.n	8020738 <_strtod_l+0x130>
 8020744:	2b00      	cmp	r3, #0
 8020746:	d0a3      	beq.n	8020690 <_strtod_l+0x88>
 8020748:	2301      	movs	r3, #1
 802074a:	f04f 0900 	mov.w	r9, #0
 802074e:	9304      	str	r3, [sp, #16]
 8020750:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020752:	9308      	str	r3, [sp, #32]
 8020754:	f8cd 901c 	str.w	r9, [sp, #28]
 8020758:	464f      	mov	r7, r9
 802075a:	220a      	movs	r2, #10
 802075c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 802075e:	7806      	ldrb	r6, [r0, #0]
 8020760:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8020764:	b2d9      	uxtb	r1, r3
 8020766:	2909      	cmp	r1, #9
 8020768:	d92a      	bls.n	80207c0 <_strtod_l+0x1b8>
 802076a:	9905      	ldr	r1, [sp, #20]
 802076c:	462a      	mov	r2, r5
 802076e:	f002 ff87 	bl	8023680 <strncmp>
 8020772:	b398      	cbz	r0, 80207dc <_strtod_l+0x1d4>
 8020774:	2000      	movs	r0, #0
 8020776:	4632      	mov	r2, r6
 8020778:	463d      	mov	r5, r7
 802077a:	9005      	str	r0, [sp, #20]
 802077c:	4603      	mov	r3, r0
 802077e:	2a65      	cmp	r2, #101	; 0x65
 8020780:	d001      	beq.n	8020786 <_strtod_l+0x17e>
 8020782:	2a45      	cmp	r2, #69	; 0x45
 8020784:	d118      	bne.n	80207b8 <_strtod_l+0x1b0>
 8020786:	b91d      	cbnz	r5, 8020790 <_strtod_l+0x188>
 8020788:	9a04      	ldr	r2, [sp, #16]
 802078a:	4302      	orrs	r2, r0
 802078c:	d09e      	beq.n	80206cc <_strtod_l+0xc4>
 802078e:	2500      	movs	r5, #0
 8020790:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 8020794:	f108 0201 	add.w	r2, r8, #1
 8020798:	9217      	str	r2, [sp, #92]	; 0x5c
 802079a:	f898 2001 	ldrb.w	r2, [r8, #1]
 802079e:	2a2b      	cmp	r2, #43	; 0x2b
 80207a0:	d075      	beq.n	802088e <_strtod_l+0x286>
 80207a2:	2a2d      	cmp	r2, #45	; 0x2d
 80207a4:	d07b      	beq.n	802089e <_strtod_l+0x296>
 80207a6:	f04f 0c00 	mov.w	ip, #0
 80207aa:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80207ae:	2909      	cmp	r1, #9
 80207b0:	f240 8082 	bls.w	80208b8 <_strtod_l+0x2b0>
 80207b4:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80207b8:	2600      	movs	r6, #0
 80207ba:	e09d      	b.n	80208f8 <_strtod_l+0x2f0>
 80207bc:	2300      	movs	r3, #0
 80207be:	e7c4      	b.n	802074a <_strtod_l+0x142>
 80207c0:	2f08      	cmp	r7, #8
 80207c2:	bfd8      	it	le
 80207c4:	9907      	ldrle	r1, [sp, #28]
 80207c6:	f100 0001 	add.w	r0, r0, #1
 80207ca:	bfda      	itte	le
 80207cc:	fb02 3301 	mlale	r3, r2, r1, r3
 80207d0:	9307      	strle	r3, [sp, #28]
 80207d2:	fb02 3909 	mlagt	r9, r2, r9, r3
 80207d6:	3701      	adds	r7, #1
 80207d8:	9017      	str	r0, [sp, #92]	; 0x5c
 80207da:	e7bf      	b.n	802075c <_strtod_l+0x154>
 80207dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80207de:	195a      	adds	r2, r3, r5
 80207e0:	9217      	str	r2, [sp, #92]	; 0x5c
 80207e2:	5d5a      	ldrb	r2, [r3, r5]
 80207e4:	2f00      	cmp	r7, #0
 80207e6:	d037      	beq.n	8020858 <_strtod_l+0x250>
 80207e8:	9005      	str	r0, [sp, #20]
 80207ea:	463d      	mov	r5, r7
 80207ec:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80207f0:	2b09      	cmp	r3, #9
 80207f2:	d912      	bls.n	802081a <_strtod_l+0x212>
 80207f4:	2301      	movs	r3, #1
 80207f6:	e7c2      	b.n	802077e <_strtod_l+0x176>
 80207f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80207fa:	1c5a      	adds	r2, r3, #1
 80207fc:	9217      	str	r2, [sp, #92]	; 0x5c
 80207fe:	785a      	ldrb	r2, [r3, #1]
 8020800:	3001      	adds	r0, #1
 8020802:	2a30      	cmp	r2, #48	; 0x30
 8020804:	d0f8      	beq.n	80207f8 <_strtod_l+0x1f0>
 8020806:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 802080a:	2b08      	cmp	r3, #8
 802080c:	f200 84d9 	bhi.w	80211c2 <_strtod_l+0xbba>
 8020810:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020812:	9005      	str	r0, [sp, #20]
 8020814:	2000      	movs	r0, #0
 8020816:	9308      	str	r3, [sp, #32]
 8020818:	4605      	mov	r5, r0
 802081a:	3a30      	subs	r2, #48	; 0x30
 802081c:	f100 0301 	add.w	r3, r0, #1
 8020820:	d014      	beq.n	802084c <_strtod_l+0x244>
 8020822:	9905      	ldr	r1, [sp, #20]
 8020824:	4419      	add	r1, r3
 8020826:	9105      	str	r1, [sp, #20]
 8020828:	462b      	mov	r3, r5
 802082a:	eb00 0e05 	add.w	lr, r0, r5
 802082e:	210a      	movs	r1, #10
 8020830:	4573      	cmp	r3, lr
 8020832:	d113      	bne.n	802085c <_strtod_l+0x254>
 8020834:	182b      	adds	r3, r5, r0
 8020836:	2b08      	cmp	r3, #8
 8020838:	f105 0501 	add.w	r5, r5, #1
 802083c:	4405      	add	r5, r0
 802083e:	dc1c      	bgt.n	802087a <_strtod_l+0x272>
 8020840:	9907      	ldr	r1, [sp, #28]
 8020842:	230a      	movs	r3, #10
 8020844:	fb03 2301 	mla	r3, r3, r1, r2
 8020848:	9307      	str	r3, [sp, #28]
 802084a:	2300      	movs	r3, #0
 802084c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 802084e:	1c51      	adds	r1, r2, #1
 8020850:	9117      	str	r1, [sp, #92]	; 0x5c
 8020852:	7852      	ldrb	r2, [r2, #1]
 8020854:	4618      	mov	r0, r3
 8020856:	e7c9      	b.n	80207ec <_strtod_l+0x1e4>
 8020858:	4638      	mov	r0, r7
 802085a:	e7d2      	b.n	8020802 <_strtod_l+0x1fa>
 802085c:	2b08      	cmp	r3, #8
 802085e:	dc04      	bgt.n	802086a <_strtod_l+0x262>
 8020860:	9e07      	ldr	r6, [sp, #28]
 8020862:	434e      	muls	r6, r1
 8020864:	9607      	str	r6, [sp, #28]
 8020866:	3301      	adds	r3, #1
 8020868:	e7e2      	b.n	8020830 <_strtod_l+0x228>
 802086a:	f103 0c01 	add.w	ip, r3, #1
 802086e:	f1bc 0f10 	cmp.w	ip, #16
 8020872:	bfd8      	it	le
 8020874:	fb01 f909 	mulle.w	r9, r1, r9
 8020878:	e7f5      	b.n	8020866 <_strtod_l+0x25e>
 802087a:	2d10      	cmp	r5, #16
 802087c:	bfdc      	itt	le
 802087e:	230a      	movle	r3, #10
 8020880:	fb03 2909 	mlale	r9, r3, r9, r2
 8020884:	e7e1      	b.n	802084a <_strtod_l+0x242>
 8020886:	2300      	movs	r3, #0
 8020888:	9305      	str	r3, [sp, #20]
 802088a:	2301      	movs	r3, #1
 802088c:	e77c      	b.n	8020788 <_strtod_l+0x180>
 802088e:	f04f 0c00 	mov.w	ip, #0
 8020892:	f108 0202 	add.w	r2, r8, #2
 8020896:	9217      	str	r2, [sp, #92]	; 0x5c
 8020898:	f898 2002 	ldrb.w	r2, [r8, #2]
 802089c:	e785      	b.n	80207aa <_strtod_l+0x1a2>
 802089e:	f04f 0c01 	mov.w	ip, #1
 80208a2:	e7f6      	b.n	8020892 <_strtod_l+0x28a>
 80208a4:	080271b0 	.word	0x080271b0
 80208a8:	08026f68 	.word	0x08026f68
 80208ac:	7ff00000 	.word	0x7ff00000
 80208b0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80208b2:	1c51      	adds	r1, r2, #1
 80208b4:	9117      	str	r1, [sp, #92]	; 0x5c
 80208b6:	7852      	ldrb	r2, [r2, #1]
 80208b8:	2a30      	cmp	r2, #48	; 0x30
 80208ba:	d0f9      	beq.n	80208b0 <_strtod_l+0x2a8>
 80208bc:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 80208c0:	2908      	cmp	r1, #8
 80208c2:	f63f af79 	bhi.w	80207b8 <_strtod_l+0x1b0>
 80208c6:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 80208ca:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80208cc:	9206      	str	r2, [sp, #24]
 80208ce:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80208d0:	1c51      	adds	r1, r2, #1
 80208d2:	9117      	str	r1, [sp, #92]	; 0x5c
 80208d4:	7852      	ldrb	r2, [r2, #1]
 80208d6:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 80208da:	2e09      	cmp	r6, #9
 80208dc:	d937      	bls.n	802094e <_strtod_l+0x346>
 80208de:	9e06      	ldr	r6, [sp, #24]
 80208e0:	1b89      	subs	r1, r1, r6
 80208e2:	2908      	cmp	r1, #8
 80208e4:	f644 661f 	movw	r6, #19999	; 0x4e1f
 80208e8:	dc02      	bgt.n	80208f0 <_strtod_l+0x2e8>
 80208ea:	4576      	cmp	r6, lr
 80208ec:	bfa8      	it	ge
 80208ee:	4676      	movge	r6, lr
 80208f0:	f1bc 0f00 	cmp.w	ip, #0
 80208f4:	d000      	beq.n	80208f8 <_strtod_l+0x2f0>
 80208f6:	4276      	negs	r6, r6
 80208f8:	2d00      	cmp	r5, #0
 80208fa:	d14d      	bne.n	8020998 <_strtod_l+0x390>
 80208fc:	9904      	ldr	r1, [sp, #16]
 80208fe:	4301      	orrs	r1, r0
 8020900:	f47f aec6 	bne.w	8020690 <_strtod_l+0x88>
 8020904:	2b00      	cmp	r3, #0
 8020906:	f47f aee1 	bne.w	80206cc <_strtod_l+0xc4>
 802090a:	2a69      	cmp	r2, #105	; 0x69
 802090c:	d027      	beq.n	802095e <_strtod_l+0x356>
 802090e:	dc24      	bgt.n	802095a <_strtod_l+0x352>
 8020910:	2a49      	cmp	r2, #73	; 0x49
 8020912:	d024      	beq.n	802095e <_strtod_l+0x356>
 8020914:	2a4e      	cmp	r2, #78	; 0x4e
 8020916:	f47f aed9 	bne.w	80206cc <_strtod_l+0xc4>
 802091a:	499f      	ldr	r1, [pc, #636]	; (8020b98 <_strtod_l+0x590>)
 802091c:	a817      	add	r0, sp, #92	; 0x5c
 802091e:	f001 ff29 	bl	8022774 <__match>
 8020922:	2800      	cmp	r0, #0
 8020924:	f43f aed2 	beq.w	80206cc <_strtod_l+0xc4>
 8020928:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802092a:	781b      	ldrb	r3, [r3, #0]
 802092c:	2b28      	cmp	r3, #40	; 0x28
 802092e:	d12d      	bne.n	802098c <_strtod_l+0x384>
 8020930:	499a      	ldr	r1, [pc, #616]	; (8020b9c <_strtod_l+0x594>)
 8020932:	aa1a      	add	r2, sp, #104	; 0x68
 8020934:	a817      	add	r0, sp, #92	; 0x5c
 8020936:	f001 ff31 	bl	802279c <__hexnan>
 802093a:	2805      	cmp	r0, #5
 802093c:	d126      	bne.n	802098c <_strtod_l+0x384>
 802093e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020940:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8020944:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8020948:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 802094c:	e6a0      	b.n	8020690 <_strtod_l+0x88>
 802094e:	210a      	movs	r1, #10
 8020950:	fb01 2e0e 	mla	lr, r1, lr, r2
 8020954:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8020958:	e7b9      	b.n	80208ce <_strtod_l+0x2c6>
 802095a:	2a6e      	cmp	r2, #110	; 0x6e
 802095c:	e7db      	b.n	8020916 <_strtod_l+0x30e>
 802095e:	4990      	ldr	r1, [pc, #576]	; (8020ba0 <_strtod_l+0x598>)
 8020960:	a817      	add	r0, sp, #92	; 0x5c
 8020962:	f001 ff07 	bl	8022774 <__match>
 8020966:	2800      	cmp	r0, #0
 8020968:	f43f aeb0 	beq.w	80206cc <_strtod_l+0xc4>
 802096c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802096e:	498d      	ldr	r1, [pc, #564]	; (8020ba4 <_strtod_l+0x59c>)
 8020970:	3b01      	subs	r3, #1
 8020972:	a817      	add	r0, sp, #92	; 0x5c
 8020974:	9317      	str	r3, [sp, #92]	; 0x5c
 8020976:	f001 fefd 	bl	8022774 <__match>
 802097a:	b910      	cbnz	r0, 8020982 <_strtod_l+0x37a>
 802097c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802097e:	3301      	adds	r3, #1
 8020980:	9317      	str	r3, [sp, #92]	; 0x5c
 8020982:	f8df b230 	ldr.w	fp, [pc, #560]	; 8020bb4 <_strtod_l+0x5ac>
 8020986:	f04f 0a00 	mov.w	sl, #0
 802098a:	e681      	b.n	8020690 <_strtod_l+0x88>
 802098c:	4886      	ldr	r0, [pc, #536]	; (8020ba8 <_strtod_l+0x5a0>)
 802098e:	f002 fe6f 	bl	8023670 <nan>
 8020992:	ec5b ab10 	vmov	sl, fp, d0
 8020996:	e67b      	b.n	8020690 <_strtod_l+0x88>
 8020998:	9b05      	ldr	r3, [sp, #20]
 802099a:	9807      	ldr	r0, [sp, #28]
 802099c:	1af3      	subs	r3, r6, r3
 802099e:	2f00      	cmp	r7, #0
 80209a0:	bf08      	it	eq
 80209a2:	462f      	moveq	r7, r5
 80209a4:	2d10      	cmp	r5, #16
 80209a6:	9306      	str	r3, [sp, #24]
 80209a8:	46a8      	mov	r8, r5
 80209aa:	bfa8      	it	ge
 80209ac:	f04f 0810 	movge.w	r8, #16
 80209b0:	f7df fda8 	bl	8000504 <__aeabi_ui2d>
 80209b4:	2d09      	cmp	r5, #9
 80209b6:	4682      	mov	sl, r0
 80209b8:	468b      	mov	fp, r1
 80209ba:	dd13      	ble.n	80209e4 <_strtod_l+0x3dc>
 80209bc:	4b7b      	ldr	r3, [pc, #492]	; (8020bac <_strtod_l+0x5a4>)
 80209be:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80209c2:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80209c6:	f7df fe17 	bl	80005f8 <__aeabi_dmul>
 80209ca:	4682      	mov	sl, r0
 80209cc:	4648      	mov	r0, r9
 80209ce:	468b      	mov	fp, r1
 80209d0:	f7df fd98 	bl	8000504 <__aeabi_ui2d>
 80209d4:	4602      	mov	r2, r0
 80209d6:	460b      	mov	r3, r1
 80209d8:	4650      	mov	r0, sl
 80209da:	4659      	mov	r1, fp
 80209dc:	f7df fc56 	bl	800028c <__adddf3>
 80209e0:	4682      	mov	sl, r0
 80209e2:	468b      	mov	fp, r1
 80209e4:	2d0f      	cmp	r5, #15
 80209e6:	dc38      	bgt.n	8020a5a <_strtod_l+0x452>
 80209e8:	9b06      	ldr	r3, [sp, #24]
 80209ea:	2b00      	cmp	r3, #0
 80209ec:	f43f ae50 	beq.w	8020690 <_strtod_l+0x88>
 80209f0:	dd24      	ble.n	8020a3c <_strtod_l+0x434>
 80209f2:	2b16      	cmp	r3, #22
 80209f4:	dc0b      	bgt.n	8020a0e <_strtod_l+0x406>
 80209f6:	496d      	ldr	r1, [pc, #436]	; (8020bac <_strtod_l+0x5a4>)
 80209f8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80209fc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020a00:	4652      	mov	r2, sl
 8020a02:	465b      	mov	r3, fp
 8020a04:	f7df fdf8 	bl	80005f8 <__aeabi_dmul>
 8020a08:	4682      	mov	sl, r0
 8020a0a:	468b      	mov	fp, r1
 8020a0c:	e640      	b.n	8020690 <_strtod_l+0x88>
 8020a0e:	9a06      	ldr	r2, [sp, #24]
 8020a10:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8020a14:	4293      	cmp	r3, r2
 8020a16:	db20      	blt.n	8020a5a <_strtod_l+0x452>
 8020a18:	4c64      	ldr	r4, [pc, #400]	; (8020bac <_strtod_l+0x5a4>)
 8020a1a:	f1c5 050f 	rsb	r5, r5, #15
 8020a1e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8020a22:	4652      	mov	r2, sl
 8020a24:	465b      	mov	r3, fp
 8020a26:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020a2a:	f7df fde5 	bl	80005f8 <__aeabi_dmul>
 8020a2e:	9b06      	ldr	r3, [sp, #24]
 8020a30:	1b5d      	subs	r5, r3, r5
 8020a32:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8020a36:	e9d4 2300 	ldrd	r2, r3, [r4]
 8020a3a:	e7e3      	b.n	8020a04 <_strtod_l+0x3fc>
 8020a3c:	9b06      	ldr	r3, [sp, #24]
 8020a3e:	3316      	adds	r3, #22
 8020a40:	db0b      	blt.n	8020a5a <_strtod_l+0x452>
 8020a42:	9b05      	ldr	r3, [sp, #20]
 8020a44:	1b9e      	subs	r6, r3, r6
 8020a46:	4b59      	ldr	r3, [pc, #356]	; (8020bac <_strtod_l+0x5a4>)
 8020a48:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8020a4c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8020a50:	4650      	mov	r0, sl
 8020a52:	4659      	mov	r1, fp
 8020a54:	f7df fefa 	bl	800084c <__aeabi_ddiv>
 8020a58:	e7d6      	b.n	8020a08 <_strtod_l+0x400>
 8020a5a:	9b06      	ldr	r3, [sp, #24]
 8020a5c:	eba5 0808 	sub.w	r8, r5, r8
 8020a60:	4498      	add	r8, r3
 8020a62:	f1b8 0f00 	cmp.w	r8, #0
 8020a66:	dd74      	ble.n	8020b52 <_strtod_l+0x54a>
 8020a68:	f018 030f 	ands.w	r3, r8, #15
 8020a6c:	d00a      	beq.n	8020a84 <_strtod_l+0x47c>
 8020a6e:	494f      	ldr	r1, [pc, #316]	; (8020bac <_strtod_l+0x5a4>)
 8020a70:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8020a74:	4652      	mov	r2, sl
 8020a76:	465b      	mov	r3, fp
 8020a78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020a7c:	f7df fdbc 	bl	80005f8 <__aeabi_dmul>
 8020a80:	4682      	mov	sl, r0
 8020a82:	468b      	mov	fp, r1
 8020a84:	f038 080f 	bics.w	r8, r8, #15
 8020a88:	d04f      	beq.n	8020b2a <_strtod_l+0x522>
 8020a8a:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8020a8e:	dd22      	ble.n	8020ad6 <_strtod_l+0x4ce>
 8020a90:	2500      	movs	r5, #0
 8020a92:	462e      	mov	r6, r5
 8020a94:	9507      	str	r5, [sp, #28]
 8020a96:	9505      	str	r5, [sp, #20]
 8020a98:	2322      	movs	r3, #34	; 0x22
 8020a9a:	f8df b118 	ldr.w	fp, [pc, #280]	; 8020bb4 <_strtod_l+0x5ac>
 8020a9e:	6023      	str	r3, [r4, #0]
 8020aa0:	f04f 0a00 	mov.w	sl, #0
 8020aa4:	9b07      	ldr	r3, [sp, #28]
 8020aa6:	2b00      	cmp	r3, #0
 8020aa8:	f43f adf2 	beq.w	8020690 <_strtod_l+0x88>
 8020aac:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020aae:	4620      	mov	r0, r4
 8020ab0:	f001 ff8c 	bl	80229cc <_Bfree>
 8020ab4:	9905      	ldr	r1, [sp, #20]
 8020ab6:	4620      	mov	r0, r4
 8020ab8:	f001 ff88 	bl	80229cc <_Bfree>
 8020abc:	4631      	mov	r1, r6
 8020abe:	4620      	mov	r0, r4
 8020ac0:	f001 ff84 	bl	80229cc <_Bfree>
 8020ac4:	9907      	ldr	r1, [sp, #28]
 8020ac6:	4620      	mov	r0, r4
 8020ac8:	f001 ff80 	bl	80229cc <_Bfree>
 8020acc:	4629      	mov	r1, r5
 8020ace:	4620      	mov	r0, r4
 8020ad0:	f001 ff7c 	bl	80229cc <_Bfree>
 8020ad4:	e5dc      	b.n	8020690 <_strtod_l+0x88>
 8020ad6:	4b36      	ldr	r3, [pc, #216]	; (8020bb0 <_strtod_l+0x5a8>)
 8020ad8:	9304      	str	r3, [sp, #16]
 8020ada:	2300      	movs	r3, #0
 8020adc:	ea4f 1828 	mov.w	r8, r8, asr #4
 8020ae0:	4650      	mov	r0, sl
 8020ae2:	4659      	mov	r1, fp
 8020ae4:	4699      	mov	r9, r3
 8020ae6:	f1b8 0f01 	cmp.w	r8, #1
 8020aea:	dc21      	bgt.n	8020b30 <_strtod_l+0x528>
 8020aec:	b10b      	cbz	r3, 8020af2 <_strtod_l+0x4ea>
 8020aee:	4682      	mov	sl, r0
 8020af0:	468b      	mov	fp, r1
 8020af2:	4b2f      	ldr	r3, [pc, #188]	; (8020bb0 <_strtod_l+0x5a8>)
 8020af4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8020af8:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8020afc:	4652      	mov	r2, sl
 8020afe:	465b      	mov	r3, fp
 8020b00:	e9d9 0100 	ldrd	r0, r1, [r9]
 8020b04:	f7df fd78 	bl	80005f8 <__aeabi_dmul>
 8020b08:	4b2a      	ldr	r3, [pc, #168]	; (8020bb4 <_strtod_l+0x5ac>)
 8020b0a:	460a      	mov	r2, r1
 8020b0c:	400b      	ands	r3, r1
 8020b0e:	492a      	ldr	r1, [pc, #168]	; (8020bb8 <_strtod_l+0x5b0>)
 8020b10:	428b      	cmp	r3, r1
 8020b12:	4682      	mov	sl, r0
 8020b14:	d8bc      	bhi.n	8020a90 <_strtod_l+0x488>
 8020b16:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8020b1a:	428b      	cmp	r3, r1
 8020b1c:	bf86      	itte	hi
 8020b1e:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8020bbc <_strtod_l+0x5b4>
 8020b22:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
 8020b26:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8020b2a:	2300      	movs	r3, #0
 8020b2c:	9304      	str	r3, [sp, #16]
 8020b2e:	e084      	b.n	8020c3a <_strtod_l+0x632>
 8020b30:	f018 0f01 	tst.w	r8, #1
 8020b34:	d005      	beq.n	8020b42 <_strtod_l+0x53a>
 8020b36:	9b04      	ldr	r3, [sp, #16]
 8020b38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020b3c:	f7df fd5c 	bl	80005f8 <__aeabi_dmul>
 8020b40:	2301      	movs	r3, #1
 8020b42:	9a04      	ldr	r2, [sp, #16]
 8020b44:	3208      	adds	r2, #8
 8020b46:	f109 0901 	add.w	r9, r9, #1
 8020b4a:	ea4f 0868 	mov.w	r8, r8, asr #1
 8020b4e:	9204      	str	r2, [sp, #16]
 8020b50:	e7c9      	b.n	8020ae6 <_strtod_l+0x4de>
 8020b52:	d0ea      	beq.n	8020b2a <_strtod_l+0x522>
 8020b54:	f1c8 0800 	rsb	r8, r8, #0
 8020b58:	f018 020f 	ands.w	r2, r8, #15
 8020b5c:	d00a      	beq.n	8020b74 <_strtod_l+0x56c>
 8020b5e:	4b13      	ldr	r3, [pc, #76]	; (8020bac <_strtod_l+0x5a4>)
 8020b60:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8020b64:	4650      	mov	r0, sl
 8020b66:	4659      	mov	r1, fp
 8020b68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020b6c:	f7df fe6e 	bl	800084c <__aeabi_ddiv>
 8020b70:	4682      	mov	sl, r0
 8020b72:	468b      	mov	fp, r1
 8020b74:	ea5f 1828 	movs.w	r8, r8, asr #4
 8020b78:	d0d7      	beq.n	8020b2a <_strtod_l+0x522>
 8020b7a:	f1b8 0f1f 	cmp.w	r8, #31
 8020b7e:	dd1f      	ble.n	8020bc0 <_strtod_l+0x5b8>
 8020b80:	2500      	movs	r5, #0
 8020b82:	462e      	mov	r6, r5
 8020b84:	9507      	str	r5, [sp, #28]
 8020b86:	9505      	str	r5, [sp, #20]
 8020b88:	2322      	movs	r3, #34	; 0x22
 8020b8a:	f04f 0a00 	mov.w	sl, #0
 8020b8e:	f04f 0b00 	mov.w	fp, #0
 8020b92:	6023      	str	r3, [r4, #0]
 8020b94:	e786      	b.n	8020aa4 <_strtod_l+0x49c>
 8020b96:	bf00      	nop
 8020b98:	08026f39 	.word	0x08026f39
 8020b9c:	08026f7c 	.word	0x08026f7c
 8020ba0:	08026f31 	.word	0x08026f31
 8020ba4:	080270bc 	.word	0x080270bc
 8020ba8:	08027368 	.word	0x08027368
 8020bac:	08027248 	.word	0x08027248
 8020bb0:	08027220 	.word	0x08027220
 8020bb4:	7ff00000 	.word	0x7ff00000
 8020bb8:	7ca00000 	.word	0x7ca00000
 8020bbc:	7fefffff 	.word	0x7fefffff
 8020bc0:	f018 0310 	ands.w	r3, r8, #16
 8020bc4:	bf18      	it	ne
 8020bc6:	236a      	movne	r3, #106	; 0x6a
 8020bc8:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8020f78 <_strtod_l+0x970>
 8020bcc:	9304      	str	r3, [sp, #16]
 8020bce:	4650      	mov	r0, sl
 8020bd0:	4659      	mov	r1, fp
 8020bd2:	2300      	movs	r3, #0
 8020bd4:	f018 0f01 	tst.w	r8, #1
 8020bd8:	d004      	beq.n	8020be4 <_strtod_l+0x5dc>
 8020bda:	e9d9 2300 	ldrd	r2, r3, [r9]
 8020bde:	f7df fd0b 	bl	80005f8 <__aeabi_dmul>
 8020be2:	2301      	movs	r3, #1
 8020be4:	ea5f 0868 	movs.w	r8, r8, asr #1
 8020be8:	f109 0908 	add.w	r9, r9, #8
 8020bec:	d1f2      	bne.n	8020bd4 <_strtod_l+0x5cc>
 8020bee:	b10b      	cbz	r3, 8020bf4 <_strtod_l+0x5ec>
 8020bf0:	4682      	mov	sl, r0
 8020bf2:	468b      	mov	fp, r1
 8020bf4:	9b04      	ldr	r3, [sp, #16]
 8020bf6:	b1c3      	cbz	r3, 8020c2a <_strtod_l+0x622>
 8020bf8:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8020bfc:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8020c00:	2b00      	cmp	r3, #0
 8020c02:	4659      	mov	r1, fp
 8020c04:	dd11      	ble.n	8020c2a <_strtod_l+0x622>
 8020c06:	2b1f      	cmp	r3, #31
 8020c08:	f340 8124 	ble.w	8020e54 <_strtod_l+0x84c>
 8020c0c:	2b34      	cmp	r3, #52	; 0x34
 8020c0e:	bfde      	ittt	le
 8020c10:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8020c14:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 8020c18:	fa03 f202 	lslle.w	r2, r3, r2
 8020c1c:	f04f 0a00 	mov.w	sl, #0
 8020c20:	bfcc      	ite	gt
 8020c22:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8020c26:	ea02 0b01 	andle.w	fp, r2, r1
 8020c2a:	2200      	movs	r2, #0
 8020c2c:	2300      	movs	r3, #0
 8020c2e:	4650      	mov	r0, sl
 8020c30:	4659      	mov	r1, fp
 8020c32:	f7df ff49 	bl	8000ac8 <__aeabi_dcmpeq>
 8020c36:	2800      	cmp	r0, #0
 8020c38:	d1a2      	bne.n	8020b80 <_strtod_l+0x578>
 8020c3a:	9b07      	ldr	r3, [sp, #28]
 8020c3c:	9300      	str	r3, [sp, #0]
 8020c3e:	9908      	ldr	r1, [sp, #32]
 8020c40:	462b      	mov	r3, r5
 8020c42:	463a      	mov	r2, r7
 8020c44:	4620      	mov	r0, r4
 8020c46:	f001 ff29 	bl	8022a9c <__s2b>
 8020c4a:	9007      	str	r0, [sp, #28]
 8020c4c:	2800      	cmp	r0, #0
 8020c4e:	f43f af1f 	beq.w	8020a90 <_strtod_l+0x488>
 8020c52:	9b05      	ldr	r3, [sp, #20]
 8020c54:	1b9e      	subs	r6, r3, r6
 8020c56:	9b06      	ldr	r3, [sp, #24]
 8020c58:	2b00      	cmp	r3, #0
 8020c5a:	bfb4      	ite	lt
 8020c5c:	4633      	movlt	r3, r6
 8020c5e:	2300      	movge	r3, #0
 8020c60:	930c      	str	r3, [sp, #48]	; 0x30
 8020c62:	9b06      	ldr	r3, [sp, #24]
 8020c64:	2500      	movs	r5, #0
 8020c66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020c6a:	9312      	str	r3, [sp, #72]	; 0x48
 8020c6c:	462e      	mov	r6, r5
 8020c6e:	9b07      	ldr	r3, [sp, #28]
 8020c70:	4620      	mov	r0, r4
 8020c72:	6859      	ldr	r1, [r3, #4]
 8020c74:	f001 fe6a 	bl	802294c <_Balloc>
 8020c78:	9005      	str	r0, [sp, #20]
 8020c7a:	2800      	cmp	r0, #0
 8020c7c:	f43f af0c 	beq.w	8020a98 <_strtod_l+0x490>
 8020c80:	9b07      	ldr	r3, [sp, #28]
 8020c82:	691a      	ldr	r2, [r3, #16]
 8020c84:	3202      	adds	r2, #2
 8020c86:	f103 010c 	add.w	r1, r3, #12
 8020c8a:	0092      	lsls	r2, r2, #2
 8020c8c:	300c      	adds	r0, #12
 8020c8e:	f7fe fc62 	bl	801f556 <memcpy>
 8020c92:	ec4b ab10 	vmov	d0, sl, fp
 8020c96:	aa1a      	add	r2, sp, #104	; 0x68
 8020c98:	a919      	add	r1, sp, #100	; 0x64
 8020c9a:	4620      	mov	r0, r4
 8020c9c:	f002 fa44 	bl	8023128 <__d2b>
 8020ca0:	ec4b ab18 	vmov	d8, sl, fp
 8020ca4:	9018      	str	r0, [sp, #96]	; 0x60
 8020ca6:	2800      	cmp	r0, #0
 8020ca8:	f43f aef6 	beq.w	8020a98 <_strtod_l+0x490>
 8020cac:	2101      	movs	r1, #1
 8020cae:	4620      	mov	r0, r4
 8020cb0:	f001 ff8e 	bl	8022bd0 <__i2b>
 8020cb4:	4606      	mov	r6, r0
 8020cb6:	2800      	cmp	r0, #0
 8020cb8:	f43f aeee 	beq.w	8020a98 <_strtod_l+0x490>
 8020cbc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020cbe:	9904      	ldr	r1, [sp, #16]
 8020cc0:	2b00      	cmp	r3, #0
 8020cc2:	bfab      	itete	ge
 8020cc4:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8020cc6:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8020cc8:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8020cca:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8020cce:	bfac      	ite	ge
 8020cd0:	eb03 0902 	addge.w	r9, r3, r2
 8020cd4:	1ad7      	sublt	r7, r2, r3
 8020cd6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8020cd8:	eba3 0801 	sub.w	r8, r3, r1
 8020cdc:	4490      	add	r8, r2
 8020cde:	4ba1      	ldr	r3, [pc, #644]	; (8020f64 <_strtod_l+0x95c>)
 8020ce0:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8020ce4:	4598      	cmp	r8, r3
 8020ce6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8020cea:	f280 80c7 	bge.w	8020e7c <_strtod_l+0x874>
 8020cee:	eba3 0308 	sub.w	r3, r3, r8
 8020cf2:	2b1f      	cmp	r3, #31
 8020cf4:	eba2 0203 	sub.w	r2, r2, r3
 8020cf8:	f04f 0101 	mov.w	r1, #1
 8020cfc:	f300 80b1 	bgt.w	8020e62 <_strtod_l+0x85a>
 8020d00:	fa01 f303 	lsl.w	r3, r1, r3
 8020d04:	930d      	str	r3, [sp, #52]	; 0x34
 8020d06:	2300      	movs	r3, #0
 8020d08:	9308      	str	r3, [sp, #32]
 8020d0a:	eb09 0802 	add.w	r8, r9, r2
 8020d0e:	9b04      	ldr	r3, [sp, #16]
 8020d10:	45c1      	cmp	r9, r8
 8020d12:	4417      	add	r7, r2
 8020d14:	441f      	add	r7, r3
 8020d16:	464b      	mov	r3, r9
 8020d18:	bfa8      	it	ge
 8020d1a:	4643      	movge	r3, r8
 8020d1c:	42bb      	cmp	r3, r7
 8020d1e:	bfa8      	it	ge
 8020d20:	463b      	movge	r3, r7
 8020d22:	2b00      	cmp	r3, #0
 8020d24:	bfc2      	ittt	gt
 8020d26:	eba8 0803 	subgt.w	r8, r8, r3
 8020d2a:	1aff      	subgt	r7, r7, r3
 8020d2c:	eba9 0903 	subgt.w	r9, r9, r3
 8020d30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020d32:	2b00      	cmp	r3, #0
 8020d34:	dd17      	ble.n	8020d66 <_strtod_l+0x75e>
 8020d36:	4631      	mov	r1, r6
 8020d38:	461a      	mov	r2, r3
 8020d3a:	4620      	mov	r0, r4
 8020d3c:	f002 f808 	bl	8022d50 <__pow5mult>
 8020d40:	4606      	mov	r6, r0
 8020d42:	2800      	cmp	r0, #0
 8020d44:	f43f aea8 	beq.w	8020a98 <_strtod_l+0x490>
 8020d48:	4601      	mov	r1, r0
 8020d4a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020d4c:	4620      	mov	r0, r4
 8020d4e:	f001 ff55 	bl	8022bfc <__multiply>
 8020d52:	900b      	str	r0, [sp, #44]	; 0x2c
 8020d54:	2800      	cmp	r0, #0
 8020d56:	f43f ae9f 	beq.w	8020a98 <_strtod_l+0x490>
 8020d5a:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020d5c:	4620      	mov	r0, r4
 8020d5e:	f001 fe35 	bl	80229cc <_Bfree>
 8020d62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d64:	9318      	str	r3, [sp, #96]	; 0x60
 8020d66:	f1b8 0f00 	cmp.w	r8, #0
 8020d6a:	f300 808c 	bgt.w	8020e86 <_strtod_l+0x87e>
 8020d6e:	9b06      	ldr	r3, [sp, #24]
 8020d70:	2b00      	cmp	r3, #0
 8020d72:	dd08      	ble.n	8020d86 <_strtod_l+0x77e>
 8020d74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020d76:	9905      	ldr	r1, [sp, #20]
 8020d78:	4620      	mov	r0, r4
 8020d7a:	f001 ffe9 	bl	8022d50 <__pow5mult>
 8020d7e:	9005      	str	r0, [sp, #20]
 8020d80:	2800      	cmp	r0, #0
 8020d82:	f43f ae89 	beq.w	8020a98 <_strtod_l+0x490>
 8020d86:	2f00      	cmp	r7, #0
 8020d88:	dd08      	ble.n	8020d9c <_strtod_l+0x794>
 8020d8a:	9905      	ldr	r1, [sp, #20]
 8020d8c:	463a      	mov	r2, r7
 8020d8e:	4620      	mov	r0, r4
 8020d90:	f002 f838 	bl	8022e04 <__lshift>
 8020d94:	9005      	str	r0, [sp, #20]
 8020d96:	2800      	cmp	r0, #0
 8020d98:	f43f ae7e 	beq.w	8020a98 <_strtod_l+0x490>
 8020d9c:	f1b9 0f00 	cmp.w	r9, #0
 8020da0:	dd08      	ble.n	8020db4 <_strtod_l+0x7ac>
 8020da2:	4631      	mov	r1, r6
 8020da4:	464a      	mov	r2, r9
 8020da6:	4620      	mov	r0, r4
 8020da8:	f002 f82c 	bl	8022e04 <__lshift>
 8020dac:	4606      	mov	r6, r0
 8020dae:	2800      	cmp	r0, #0
 8020db0:	f43f ae72 	beq.w	8020a98 <_strtod_l+0x490>
 8020db4:	9a05      	ldr	r2, [sp, #20]
 8020db6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020db8:	4620      	mov	r0, r4
 8020dba:	f002 f8af 	bl	8022f1c <__mdiff>
 8020dbe:	4605      	mov	r5, r0
 8020dc0:	2800      	cmp	r0, #0
 8020dc2:	f43f ae69 	beq.w	8020a98 <_strtod_l+0x490>
 8020dc6:	68c3      	ldr	r3, [r0, #12]
 8020dc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dca:	2300      	movs	r3, #0
 8020dcc:	60c3      	str	r3, [r0, #12]
 8020dce:	4631      	mov	r1, r6
 8020dd0:	f002 f888 	bl	8022ee4 <__mcmp>
 8020dd4:	2800      	cmp	r0, #0
 8020dd6:	da60      	bge.n	8020e9a <_strtod_l+0x892>
 8020dd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020dda:	ea53 030a 	orrs.w	r3, r3, sl
 8020dde:	f040 8082 	bne.w	8020ee6 <_strtod_l+0x8de>
 8020de2:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8020de6:	2b00      	cmp	r3, #0
 8020de8:	d17d      	bne.n	8020ee6 <_strtod_l+0x8de>
 8020dea:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8020dee:	0d1b      	lsrs	r3, r3, #20
 8020df0:	051b      	lsls	r3, r3, #20
 8020df2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8020df6:	d976      	bls.n	8020ee6 <_strtod_l+0x8de>
 8020df8:	696b      	ldr	r3, [r5, #20]
 8020dfa:	b913      	cbnz	r3, 8020e02 <_strtod_l+0x7fa>
 8020dfc:	692b      	ldr	r3, [r5, #16]
 8020dfe:	2b01      	cmp	r3, #1
 8020e00:	dd71      	ble.n	8020ee6 <_strtod_l+0x8de>
 8020e02:	4629      	mov	r1, r5
 8020e04:	2201      	movs	r2, #1
 8020e06:	4620      	mov	r0, r4
 8020e08:	f001 fffc 	bl	8022e04 <__lshift>
 8020e0c:	4631      	mov	r1, r6
 8020e0e:	4605      	mov	r5, r0
 8020e10:	f002 f868 	bl	8022ee4 <__mcmp>
 8020e14:	2800      	cmp	r0, #0
 8020e16:	dd66      	ble.n	8020ee6 <_strtod_l+0x8de>
 8020e18:	9904      	ldr	r1, [sp, #16]
 8020e1a:	4a53      	ldr	r2, [pc, #332]	; (8020f68 <_strtod_l+0x960>)
 8020e1c:	465b      	mov	r3, fp
 8020e1e:	2900      	cmp	r1, #0
 8020e20:	f000 8081 	beq.w	8020f26 <_strtod_l+0x91e>
 8020e24:	ea02 010b 	and.w	r1, r2, fp
 8020e28:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8020e2c:	dc7b      	bgt.n	8020f26 <_strtod_l+0x91e>
 8020e2e:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8020e32:	f77f aea9 	ble.w	8020b88 <_strtod_l+0x580>
 8020e36:	4b4d      	ldr	r3, [pc, #308]	; (8020f6c <_strtod_l+0x964>)
 8020e38:	4650      	mov	r0, sl
 8020e3a:	4659      	mov	r1, fp
 8020e3c:	2200      	movs	r2, #0
 8020e3e:	f7df fbdb 	bl	80005f8 <__aeabi_dmul>
 8020e42:	460b      	mov	r3, r1
 8020e44:	4303      	orrs	r3, r0
 8020e46:	bf08      	it	eq
 8020e48:	2322      	moveq	r3, #34	; 0x22
 8020e4a:	4682      	mov	sl, r0
 8020e4c:	468b      	mov	fp, r1
 8020e4e:	bf08      	it	eq
 8020e50:	6023      	streq	r3, [r4, #0]
 8020e52:	e62b      	b.n	8020aac <_strtod_l+0x4a4>
 8020e54:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8020e58:	fa02 f303 	lsl.w	r3, r2, r3
 8020e5c:	ea03 0a0a 	and.w	sl, r3, sl
 8020e60:	e6e3      	b.n	8020c2a <_strtod_l+0x622>
 8020e62:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8020e66:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8020e6a:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8020e6e:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8020e72:	fa01 f308 	lsl.w	r3, r1, r8
 8020e76:	9308      	str	r3, [sp, #32]
 8020e78:	910d      	str	r1, [sp, #52]	; 0x34
 8020e7a:	e746      	b.n	8020d0a <_strtod_l+0x702>
 8020e7c:	2300      	movs	r3, #0
 8020e7e:	9308      	str	r3, [sp, #32]
 8020e80:	2301      	movs	r3, #1
 8020e82:	930d      	str	r3, [sp, #52]	; 0x34
 8020e84:	e741      	b.n	8020d0a <_strtod_l+0x702>
 8020e86:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020e88:	4642      	mov	r2, r8
 8020e8a:	4620      	mov	r0, r4
 8020e8c:	f001 ffba 	bl	8022e04 <__lshift>
 8020e90:	9018      	str	r0, [sp, #96]	; 0x60
 8020e92:	2800      	cmp	r0, #0
 8020e94:	f47f af6b 	bne.w	8020d6e <_strtod_l+0x766>
 8020e98:	e5fe      	b.n	8020a98 <_strtod_l+0x490>
 8020e9a:	465f      	mov	r7, fp
 8020e9c:	d16e      	bne.n	8020f7c <_strtod_l+0x974>
 8020e9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020ea0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8020ea4:	b342      	cbz	r2, 8020ef8 <_strtod_l+0x8f0>
 8020ea6:	4a32      	ldr	r2, [pc, #200]	; (8020f70 <_strtod_l+0x968>)
 8020ea8:	4293      	cmp	r3, r2
 8020eaa:	d128      	bne.n	8020efe <_strtod_l+0x8f6>
 8020eac:	9b04      	ldr	r3, [sp, #16]
 8020eae:	4651      	mov	r1, sl
 8020eb0:	b1eb      	cbz	r3, 8020eee <_strtod_l+0x8e6>
 8020eb2:	4b2d      	ldr	r3, [pc, #180]	; (8020f68 <_strtod_l+0x960>)
 8020eb4:	403b      	ands	r3, r7
 8020eb6:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8020eba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8020ebe:	d819      	bhi.n	8020ef4 <_strtod_l+0x8ec>
 8020ec0:	0d1b      	lsrs	r3, r3, #20
 8020ec2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8020ec6:	fa02 f303 	lsl.w	r3, r2, r3
 8020eca:	4299      	cmp	r1, r3
 8020ecc:	d117      	bne.n	8020efe <_strtod_l+0x8f6>
 8020ece:	4b29      	ldr	r3, [pc, #164]	; (8020f74 <_strtod_l+0x96c>)
 8020ed0:	429f      	cmp	r7, r3
 8020ed2:	d102      	bne.n	8020eda <_strtod_l+0x8d2>
 8020ed4:	3101      	adds	r1, #1
 8020ed6:	f43f addf 	beq.w	8020a98 <_strtod_l+0x490>
 8020eda:	4b23      	ldr	r3, [pc, #140]	; (8020f68 <_strtod_l+0x960>)
 8020edc:	403b      	ands	r3, r7
 8020ede:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8020ee2:	f04f 0a00 	mov.w	sl, #0
 8020ee6:	9b04      	ldr	r3, [sp, #16]
 8020ee8:	2b00      	cmp	r3, #0
 8020eea:	d1a4      	bne.n	8020e36 <_strtod_l+0x82e>
 8020eec:	e5de      	b.n	8020aac <_strtod_l+0x4a4>
 8020eee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8020ef2:	e7ea      	b.n	8020eca <_strtod_l+0x8c2>
 8020ef4:	4613      	mov	r3, r2
 8020ef6:	e7e8      	b.n	8020eca <_strtod_l+0x8c2>
 8020ef8:	ea53 030a 	orrs.w	r3, r3, sl
 8020efc:	d08c      	beq.n	8020e18 <_strtod_l+0x810>
 8020efe:	9b08      	ldr	r3, [sp, #32]
 8020f00:	b1db      	cbz	r3, 8020f3a <_strtod_l+0x932>
 8020f02:	423b      	tst	r3, r7
 8020f04:	d0ef      	beq.n	8020ee6 <_strtod_l+0x8de>
 8020f06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f08:	9a04      	ldr	r2, [sp, #16]
 8020f0a:	4650      	mov	r0, sl
 8020f0c:	4659      	mov	r1, fp
 8020f0e:	b1c3      	cbz	r3, 8020f42 <_strtod_l+0x93a>
 8020f10:	f7ff fb5d 	bl	80205ce <sulp>
 8020f14:	4602      	mov	r2, r0
 8020f16:	460b      	mov	r3, r1
 8020f18:	ec51 0b18 	vmov	r0, r1, d8
 8020f1c:	f7df f9b6 	bl	800028c <__adddf3>
 8020f20:	4682      	mov	sl, r0
 8020f22:	468b      	mov	fp, r1
 8020f24:	e7df      	b.n	8020ee6 <_strtod_l+0x8de>
 8020f26:	4013      	ands	r3, r2
 8020f28:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8020f2c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8020f30:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8020f34:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8020f38:	e7d5      	b.n	8020ee6 <_strtod_l+0x8de>
 8020f3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f3c:	ea13 0f0a 	tst.w	r3, sl
 8020f40:	e7e0      	b.n	8020f04 <_strtod_l+0x8fc>
 8020f42:	f7ff fb44 	bl	80205ce <sulp>
 8020f46:	4602      	mov	r2, r0
 8020f48:	460b      	mov	r3, r1
 8020f4a:	ec51 0b18 	vmov	r0, r1, d8
 8020f4e:	f7df f99b 	bl	8000288 <__aeabi_dsub>
 8020f52:	2200      	movs	r2, #0
 8020f54:	2300      	movs	r3, #0
 8020f56:	4682      	mov	sl, r0
 8020f58:	468b      	mov	fp, r1
 8020f5a:	f7df fdb5 	bl	8000ac8 <__aeabi_dcmpeq>
 8020f5e:	2800      	cmp	r0, #0
 8020f60:	d0c1      	beq.n	8020ee6 <_strtod_l+0x8de>
 8020f62:	e611      	b.n	8020b88 <_strtod_l+0x580>
 8020f64:	fffffc02 	.word	0xfffffc02
 8020f68:	7ff00000 	.word	0x7ff00000
 8020f6c:	39500000 	.word	0x39500000
 8020f70:	000fffff 	.word	0x000fffff
 8020f74:	7fefffff 	.word	0x7fefffff
 8020f78:	08026f90 	.word	0x08026f90
 8020f7c:	4631      	mov	r1, r6
 8020f7e:	4628      	mov	r0, r5
 8020f80:	f002 f92e 	bl	80231e0 <__ratio>
 8020f84:	ec59 8b10 	vmov	r8, r9, d0
 8020f88:	ee10 0a10 	vmov	r0, s0
 8020f8c:	2200      	movs	r2, #0
 8020f8e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8020f92:	4649      	mov	r1, r9
 8020f94:	f7df fdac 	bl	8000af0 <__aeabi_dcmple>
 8020f98:	2800      	cmp	r0, #0
 8020f9a:	d07a      	beq.n	8021092 <_strtod_l+0xa8a>
 8020f9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f9e:	2b00      	cmp	r3, #0
 8020fa0:	d04a      	beq.n	8021038 <_strtod_l+0xa30>
 8020fa2:	4b95      	ldr	r3, [pc, #596]	; (80211f8 <_strtod_l+0xbf0>)
 8020fa4:	2200      	movs	r2, #0
 8020fa6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8020faa:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80211f8 <_strtod_l+0xbf0>
 8020fae:	f04f 0800 	mov.w	r8, #0
 8020fb2:	4b92      	ldr	r3, [pc, #584]	; (80211fc <_strtod_l+0xbf4>)
 8020fb4:	403b      	ands	r3, r7
 8020fb6:	930d      	str	r3, [sp, #52]	; 0x34
 8020fb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020fba:	4b91      	ldr	r3, [pc, #580]	; (8021200 <_strtod_l+0xbf8>)
 8020fbc:	429a      	cmp	r2, r3
 8020fbe:	f040 80b0 	bne.w	8021122 <_strtod_l+0xb1a>
 8020fc2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8020fc6:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8020fca:	ec4b ab10 	vmov	d0, sl, fp
 8020fce:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8020fd2:	f002 f82d 	bl	8023030 <__ulp>
 8020fd6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8020fda:	ec53 2b10 	vmov	r2, r3, d0
 8020fde:	f7df fb0b 	bl	80005f8 <__aeabi_dmul>
 8020fe2:	4652      	mov	r2, sl
 8020fe4:	465b      	mov	r3, fp
 8020fe6:	f7df f951 	bl	800028c <__adddf3>
 8020fea:	460b      	mov	r3, r1
 8020fec:	4983      	ldr	r1, [pc, #524]	; (80211fc <_strtod_l+0xbf4>)
 8020fee:	4a85      	ldr	r2, [pc, #532]	; (8021204 <_strtod_l+0xbfc>)
 8020ff0:	4019      	ands	r1, r3
 8020ff2:	4291      	cmp	r1, r2
 8020ff4:	4682      	mov	sl, r0
 8020ff6:	d960      	bls.n	80210ba <_strtod_l+0xab2>
 8020ff8:	ee18 3a90 	vmov	r3, s17
 8020ffc:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8021000:	4293      	cmp	r3, r2
 8021002:	d104      	bne.n	802100e <_strtod_l+0xa06>
 8021004:	ee18 3a10 	vmov	r3, s16
 8021008:	3301      	adds	r3, #1
 802100a:	f43f ad45 	beq.w	8020a98 <_strtod_l+0x490>
 802100e:	f8df b200 	ldr.w	fp, [pc, #512]	; 8021210 <_strtod_l+0xc08>
 8021012:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8021016:	9918      	ldr	r1, [sp, #96]	; 0x60
 8021018:	4620      	mov	r0, r4
 802101a:	f001 fcd7 	bl	80229cc <_Bfree>
 802101e:	9905      	ldr	r1, [sp, #20]
 8021020:	4620      	mov	r0, r4
 8021022:	f001 fcd3 	bl	80229cc <_Bfree>
 8021026:	4631      	mov	r1, r6
 8021028:	4620      	mov	r0, r4
 802102a:	f001 fccf 	bl	80229cc <_Bfree>
 802102e:	4629      	mov	r1, r5
 8021030:	4620      	mov	r0, r4
 8021032:	f001 fccb 	bl	80229cc <_Bfree>
 8021036:	e61a      	b.n	8020c6e <_strtod_l+0x666>
 8021038:	f1ba 0f00 	cmp.w	sl, #0
 802103c:	d11b      	bne.n	8021076 <_strtod_l+0xa6e>
 802103e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021042:	b9f3      	cbnz	r3, 8021082 <_strtod_l+0xa7a>
 8021044:	4b6c      	ldr	r3, [pc, #432]	; (80211f8 <_strtod_l+0xbf0>)
 8021046:	2200      	movs	r2, #0
 8021048:	4640      	mov	r0, r8
 802104a:	4649      	mov	r1, r9
 802104c:	f7df fd46 	bl	8000adc <__aeabi_dcmplt>
 8021050:	b9d0      	cbnz	r0, 8021088 <_strtod_l+0xa80>
 8021052:	4640      	mov	r0, r8
 8021054:	4649      	mov	r1, r9
 8021056:	4b6c      	ldr	r3, [pc, #432]	; (8021208 <_strtod_l+0xc00>)
 8021058:	2200      	movs	r2, #0
 802105a:	f7df facd 	bl	80005f8 <__aeabi_dmul>
 802105e:	4680      	mov	r8, r0
 8021060:	4689      	mov	r9, r1
 8021062:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8021066:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 802106a:	9315      	str	r3, [sp, #84]	; 0x54
 802106c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8021070:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8021074:	e79d      	b.n	8020fb2 <_strtod_l+0x9aa>
 8021076:	f1ba 0f01 	cmp.w	sl, #1
 802107a:	d102      	bne.n	8021082 <_strtod_l+0xa7a>
 802107c:	2f00      	cmp	r7, #0
 802107e:	f43f ad83 	beq.w	8020b88 <_strtod_l+0x580>
 8021082:	4b62      	ldr	r3, [pc, #392]	; (802120c <_strtod_l+0xc04>)
 8021084:	2200      	movs	r2, #0
 8021086:	e78e      	b.n	8020fa6 <_strtod_l+0x99e>
 8021088:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8021208 <_strtod_l+0xc00>
 802108c:	f04f 0800 	mov.w	r8, #0
 8021090:	e7e7      	b.n	8021062 <_strtod_l+0xa5a>
 8021092:	4b5d      	ldr	r3, [pc, #372]	; (8021208 <_strtod_l+0xc00>)
 8021094:	4640      	mov	r0, r8
 8021096:	4649      	mov	r1, r9
 8021098:	2200      	movs	r2, #0
 802109a:	f7df faad 	bl	80005f8 <__aeabi_dmul>
 802109e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210a0:	4680      	mov	r8, r0
 80210a2:	4689      	mov	r9, r1
 80210a4:	b933      	cbnz	r3, 80210b4 <_strtod_l+0xaac>
 80210a6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80210aa:	900e      	str	r0, [sp, #56]	; 0x38
 80210ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80210ae:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80210b2:	e7dd      	b.n	8021070 <_strtod_l+0xa68>
 80210b4:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 80210b8:	e7f9      	b.n	80210ae <_strtod_l+0xaa6>
 80210ba:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 80210be:	9b04      	ldr	r3, [sp, #16]
 80210c0:	2b00      	cmp	r3, #0
 80210c2:	d1a8      	bne.n	8021016 <_strtod_l+0xa0e>
 80210c4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80210c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80210ca:	0d1b      	lsrs	r3, r3, #20
 80210cc:	051b      	lsls	r3, r3, #20
 80210ce:	429a      	cmp	r2, r3
 80210d0:	d1a1      	bne.n	8021016 <_strtod_l+0xa0e>
 80210d2:	4640      	mov	r0, r8
 80210d4:	4649      	mov	r1, r9
 80210d6:	f7df fdef 	bl	8000cb8 <__aeabi_d2lz>
 80210da:	f7df fa5f 	bl	800059c <__aeabi_l2d>
 80210de:	4602      	mov	r2, r0
 80210e0:	460b      	mov	r3, r1
 80210e2:	4640      	mov	r0, r8
 80210e4:	4649      	mov	r1, r9
 80210e6:	f7df f8cf 	bl	8000288 <__aeabi_dsub>
 80210ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80210ec:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80210f0:	ea43 030a 	orr.w	r3, r3, sl
 80210f4:	4313      	orrs	r3, r2
 80210f6:	4680      	mov	r8, r0
 80210f8:	4689      	mov	r9, r1
 80210fa:	d055      	beq.n	80211a8 <_strtod_l+0xba0>
 80210fc:	a336      	add	r3, pc, #216	; (adr r3, 80211d8 <_strtod_l+0xbd0>)
 80210fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021102:	f7df fceb 	bl	8000adc <__aeabi_dcmplt>
 8021106:	2800      	cmp	r0, #0
 8021108:	f47f acd0 	bne.w	8020aac <_strtod_l+0x4a4>
 802110c:	a334      	add	r3, pc, #208	; (adr r3, 80211e0 <_strtod_l+0xbd8>)
 802110e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021112:	4640      	mov	r0, r8
 8021114:	4649      	mov	r1, r9
 8021116:	f7df fcff 	bl	8000b18 <__aeabi_dcmpgt>
 802111a:	2800      	cmp	r0, #0
 802111c:	f43f af7b 	beq.w	8021016 <_strtod_l+0xa0e>
 8021120:	e4c4      	b.n	8020aac <_strtod_l+0x4a4>
 8021122:	9b04      	ldr	r3, [sp, #16]
 8021124:	b333      	cbz	r3, 8021174 <_strtod_l+0xb6c>
 8021126:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021128:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 802112c:	d822      	bhi.n	8021174 <_strtod_l+0xb6c>
 802112e:	a32e      	add	r3, pc, #184	; (adr r3, 80211e8 <_strtod_l+0xbe0>)
 8021130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021134:	4640      	mov	r0, r8
 8021136:	4649      	mov	r1, r9
 8021138:	f7df fcda 	bl	8000af0 <__aeabi_dcmple>
 802113c:	b1a0      	cbz	r0, 8021168 <_strtod_l+0xb60>
 802113e:	4649      	mov	r1, r9
 8021140:	4640      	mov	r0, r8
 8021142:	f7df fd31 	bl	8000ba8 <__aeabi_d2uiz>
 8021146:	2801      	cmp	r0, #1
 8021148:	bf38      	it	cc
 802114a:	2001      	movcc	r0, #1
 802114c:	f7df f9da 	bl	8000504 <__aeabi_ui2d>
 8021150:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021152:	4680      	mov	r8, r0
 8021154:	4689      	mov	r9, r1
 8021156:	bb23      	cbnz	r3, 80211a2 <_strtod_l+0xb9a>
 8021158:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802115c:	9010      	str	r0, [sp, #64]	; 0x40
 802115e:	9311      	str	r3, [sp, #68]	; 0x44
 8021160:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8021164:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8021168:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802116a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802116c:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8021170:	1a9b      	subs	r3, r3, r2
 8021172:	9309      	str	r3, [sp, #36]	; 0x24
 8021174:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8021178:	eeb0 0a48 	vmov.f32	s0, s16
 802117c:	eef0 0a68 	vmov.f32	s1, s17
 8021180:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8021184:	f001 ff54 	bl	8023030 <__ulp>
 8021188:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 802118c:	ec53 2b10 	vmov	r2, r3, d0
 8021190:	f7df fa32 	bl	80005f8 <__aeabi_dmul>
 8021194:	ec53 2b18 	vmov	r2, r3, d8
 8021198:	f7df f878 	bl	800028c <__adddf3>
 802119c:	4682      	mov	sl, r0
 802119e:	468b      	mov	fp, r1
 80211a0:	e78d      	b.n	80210be <_strtod_l+0xab6>
 80211a2:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 80211a6:	e7db      	b.n	8021160 <_strtod_l+0xb58>
 80211a8:	a311      	add	r3, pc, #68	; (adr r3, 80211f0 <_strtod_l+0xbe8>)
 80211aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80211ae:	f7df fc95 	bl	8000adc <__aeabi_dcmplt>
 80211b2:	e7b2      	b.n	802111a <_strtod_l+0xb12>
 80211b4:	2300      	movs	r3, #0
 80211b6:	930a      	str	r3, [sp, #40]	; 0x28
 80211b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80211ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80211bc:	6013      	str	r3, [r2, #0]
 80211be:	f7ff ba6b 	b.w	8020698 <_strtod_l+0x90>
 80211c2:	2a65      	cmp	r2, #101	; 0x65
 80211c4:	f43f ab5f 	beq.w	8020886 <_strtod_l+0x27e>
 80211c8:	2a45      	cmp	r2, #69	; 0x45
 80211ca:	f43f ab5c 	beq.w	8020886 <_strtod_l+0x27e>
 80211ce:	2301      	movs	r3, #1
 80211d0:	f7ff bb94 	b.w	80208fc <_strtod_l+0x2f4>
 80211d4:	f3af 8000 	nop.w
 80211d8:	94a03595 	.word	0x94a03595
 80211dc:	3fdfffff 	.word	0x3fdfffff
 80211e0:	35afe535 	.word	0x35afe535
 80211e4:	3fe00000 	.word	0x3fe00000
 80211e8:	ffc00000 	.word	0xffc00000
 80211ec:	41dfffff 	.word	0x41dfffff
 80211f0:	94a03595 	.word	0x94a03595
 80211f4:	3fcfffff 	.word	0x3fcfffff
 80211f8:	3ff00000 	.word	0x3ff00000
 80211fc:	7ff00000 	.word	0x7ff00000
 8021200:	7fe00000 	.word	0x7fe00000
 8021204:	7c9fffff 	.word	0x7c9fffff
 8021208:	3fe00000 	.word	0x3fe00000
 802120c:	bff00000 	.word	0xbff00000
 8021210:	7fefffff 	.word	0x7fefffff

08021214 <_strtod_r>:
 8021214:	4b01      	ldr	r3, [pc, #4]	; (802121c <_strtod_r+0x8>)
 8021216:	f7ff b9f7 	b.w	8020608 <_strtod_l>
 802121a:	bf00      	nop
 802121c:	200001b8 	.word	0x200001b8

08021220 <_strtol_l.constprop.0>:
 8021220:	2b01      	cmp	r3, #1
 8021222:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021226:	d001      	beq.n	802122c <_strtol_l.constprop.0+0xc>
 8021228:	2b24      	cmp	r3, #36	; 0x24
 802122a:	d906      	bls.n	802123a <_strtol_l.constprop.0+0x1a>
 802122c:	f000 ff1a 	bl	8022064 <__errno>
 8021230:	2316      	movs	r3, #22
 8021232:	6003      	str	r3, [r0, #0]
 8021234:	2000      	movs	r0, #0
 8021236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802123a:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8021320 <_strtol_l.constprop.0+0x100>
 802123e:	460d      	mov	r5, r1
 8021240:	462e      	mov	r6, r5
 8021242:	f815 4b01 	ldrb.w	r4, [r5], #1
 8021246:	f814 700c 	ldrb.w	r7, [r4, ip]
 802124a:	f017 0708 	ands.w	r7, r7, #8
 802124e:	d1f7      	bne.n	8021240 <_strtol_l.constprop.0+0x20>
 8021250:	2c2d      	cmp	r4, #45	; 0x2d
 8021252:	d132      	bne.n	80212ba <_strtol_l.constprop.0+0x9a>
 8021254:	782c      	ldrb	r4, [r5, #0]
 8021256:	2701      	movs	r7, #1
 8021258:	1cb5      	adds	r5, r6, #2
 802125a:	2b00      	cmp	r3, #0
 802125c:	d05b      	beq.n	8021316 <_strtol_l.constprop.0+0xf6>
 802125e:	2b10      	cmp	r3, #16
 8021260:	d109      	bne.n	8021276 <_strtol_l.constprop.0+0x56>
 8021262:	2c30      	cmp	r4, #48	; 0x30
 8021264:	d107      	bne.n	8021276 <_strtol_l.constprop.0+0x56>
 8021266:	782c      	ldrb	r4, [r5, #0]
 8021268:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 802126c:	2c58      	cmp	r4, #88	; 0x58
 802126e:	d14d      	bne.n	802130c <_strtol_l.constprop.0+0xec>
 8021270:	786c      	ldrb	r4, [r5, #1]
 8021272:	2310      	movs	r3, #16
 8021274:	3502      	adds	r5, #2
 8021276:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 802127a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 802127e:	f04f 0c00 	mov.w	ip, #0
 8021282:	fbb8 f9f3 	udiv	r9, r8, r3
 8021286:	4666      	mov	r6, ip
 8021288:	fb03 8a19 	mls	sl, r3, r9, r8
 802128c:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8021290:	f1be 0f09 	cmp.w	lr, #9
 8021294:	d816      	bhi.n	80212c4 <_strtol_l.constprop.0+0xa4>
 8021296:	4674      	mov	r4, lr
 8021298:	42a3      	cmp	r3, r4
 802129a:	dd24      	ble.n	80212e6 <_strtol_l.constprop.0+0xc6>
 802129c:	f1bc 0f00 	cmp.w	ip, #0
 80212a0:	db1e      	blt.n	80212e0 <_strtol_l.constprop.0+0xc0>
 80212a2:	45b1      	cmp	r9, r6
 80212a4:	d31c      	bcc.n	80212e0 <_strtol_l.constprop.0+0xc0>
 80212a6:	d101      	bne.n	80212ac <_strtol_l.constprop.0+0x8c>
 80212a8:	45a2      	cmp	sl, r4
 80212aa:	db19      	blt.n	80212e0 <_strtol_l.constprop.0+0xc0>
 80212ac:	fb06 4603 	mla	r6, r6, r3, r4
 80212b0:	f04f 0c01 	mov.w	ip, #1
 80212b4:	f815 4b01 	ldrb.w	r4, [r5], #1
 80212b8:	e7e8      	b.n	802128c <_strtol_l.constprop.0+0x6c>
 80212ba:	2c2b      	cmp	r4, #43	; 0x2b
 80212bc:	bf04      	itt	eq
 80212be:	782c      	ldrbeq	r4, [r5, #0]
 80212c0:	1cb5      	addeq	r5, r6, #2
 80212c2:	e7ca      	b.n	802125a <_strtol_l.constprop.0+0x3a>
 80212c4:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 80212c8:	f1be 0f19 	cmp.w	lr, #25
 80212cc:	d801      	bhi.n	80212d2 <_strtol_l.constprop.0+0xb2>
 80212ce:	3c37      	subs	r4, #55	; 0x37
 80212d0:	e7e2      	b.n	8021298 <_strtol_l.constprop.0+0x78>
 80212d2:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 80212d6:	f1be 0f19 	cmp.w	lr, #25
 80212da:	d804      	bhi.n	80212e6 <_strtol_l.constprop.0+0xc6>
 80212dc:	3c57      	subs	r4, #87	; 0x57
 80212de:	e7db      	b.n	8021298 <_strtol_l.constprop.0+0x78>
 80212e0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80212e4:	e7e6      	b.n	80212b4 <_strtol_l.constprop.0+0x94>
 80212e6:	f1bc 0f00 	cmp.w	ip, #0
 80212ea:	da05      	bge.n	80212f8 <_strtol_l.constprop.0+0xd8>
 80212ec:	2322      	movs	r3, #34	; 0x22
 80212ee:	6003      	str	r3, [r0, #0]
 80212f0:	4646      	mov	r6, r8
 80212f2:	b942      	cbnz	r2, 8021306 <_strtol_l.constprop.0+0xe6>
 80212f4:	4630      	mov	r0, r6
 80212f6:	e79e      	b.n	8021236 <_strtol_l.constprop.0+0x16>
 80212f8:	b107      	cbz	r7, 80212fc <_strtol_l.constprop.0+0xdc>
 80212fa:	4276      	negs	r6, r6
 80212fc:	2a00      	cmp	r2, #0
 80212fe:	d0f9      	beq.n	80212f4 <_strtol_l.constprop.0+0xd4>
 8021300:	f1bc 0f00 	cmp.w	ip, #0
 8021304:	d000      	beq.n	8021308 <_strtol_l.constprop.0+0xe8>
 8021306:	1e69      	subs	r1, r5, #1
 8021308:	6011      	str	r1, [r2, #0]
 802130a:	e7f3      	b.n	80212f4 <_strtol_l.constprop.0+0xd4>
 802130c:	2430      	movs	r4, #48	; 0x30
 802130e:	2b00      	cmp	r3, #0
 8021310:	d1b1      	bne.n	8021276 <_strtol_l.constprop.0+0x56>
 8021312:	2308      	movs	r3, #8
 8021314:	e7af      	b.n	8021276 <_strtol_l.constprop.0+0x56>
 8021316:	2c30      	cmp	r4, #48	; 0x30
 8021318:	d0a5      	beq.n	8021266 <_strtol_l.constprop.0+0x46>
 802131a:	230a      	movs	r3, #10
 802131c:	e7ab      	b.n	8021276 <_strtol_l.constprop.0+0x56>
 802131e:	bf00      	nop
 8021320:	08026fb9 	.word	0x08026fb9

08021324 <_strtol_r>:
 8021324:	f7ff bf7c 	b.w	8021220 <_strtol_l.constprop.0>

08021328 <_write_r>:
 8021328:	b538      	push	{r3, r4, r5, lr}
 802132a:	4d07      	ldr	r5, [pc, #28]	; (8021348 <_write_r+0x20>)
 802132c:	4604      	mov	r4, r0
 802132e:	4608      	mov	r0, r1
 8021330:	4611      	mov	r1, r2
 8021332:	2200      	movs	r2, #0
 8021334:	602a      	str	r2, [r5, #0]
 8021336:	461a      	mov	r2, r3
 8021338:	f005 f9ae 	bl	8026698 <_write>
 802133c:	1c43      	adds	r3, r0, #1
 802133e:	d102      	bne.n	8021346 <_write_r+0x1e>
 8021340:	682b      	ldr	r3, [r5, #0]
 8021342:	b103      	cbz	r3, 8021346 <_write_r+0x1e>
 8021344:	6023      	str	r3, [r4, #0]
 8021346:	bd38      	pop	{r3, r4, r5, pc}
 8021348:	2000f584 	.word	0x2000f584

0802134c <_close_r>:
 802134c:	b538      	push	{r3, r4, r5, lr}
 802134e:	4d06      	ldr	r5, [pc, #24]	; (8021368 <_close_r+0x1c>)
 8021350:	2300      	movs	r3, #0
 8021352:	4604      	mov	r4, r0
 8021354:	4608      	mov	r0, r1
 8021356:	602b      	str	r3, [r5, #0]
 8021358:	f005 f958 	bl	802660c <_close>
 802135c:	1c43      	adds	r3, r0, #1
 802135e:	d102      	bne.n	8021366 <_close_r+0x1a>
 8021360:	682b      	ldr	r3, [r5, #0]
 8021362:	b103      	cbz	r3, 8021366 <_close_r+0x1a>
 8021364:	6023      	str	r3, [r4, #0]
 8021366:	bd38      	pop	{r3, r4, r5, pc}
 8021368:	2000f584 	.word	0x2000f584

0802136c <quorem>:
 802136c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021370:	6903      	ldr	r3, [r0, #16]
 8021372:	690c      	ldr	r4, [r1, #16]
 8021374:	42a3      	cmp	r3, r4
 8021376:	4607      	mov	r7, r0
 8021378:	f2c0 8081 	blt.w	802147e <quorem+0x112>
 802137c:	3c01      	subs	r4, #1
 802137e:	f101 0814 	add.w	r8, r1, #20
 8021382:	f100 0514 	add.w	r5, r0, #20
 8021386:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802138a:	9301      	str	r3, [sp, #4]
 802138c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8021390:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8021394:	3301      	adds	r3, #1
 8021396:	429a      	cmp	r2, r3
 8021398:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802139c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80213a0:	fbb2 f6f3 	udiv	r6, r2, r3
 80213a4:	d331      	bcc.n	802140a <quorem+0x9e>
 80213a6:	f04f 0e00 	mov.w	lr, #0
 80213aa:	4640      	mov	r0, r8
 80213ac:	46ac      	mov	ip, r5
 80213ae:	46f2      	mov	sl, lr
 80213b0:	f850 2b04 	ldr.w	r2, [r0], #4
 80213b4:	b293      	uxth	r3, r2
 80213b6:	fb06 e303 	mla	r3, r6, r3, lr
 80213ba:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80213be:	b29b      	uxth	r3, r3
 80213c0:	ebaa 0303 	sub.w	r3, sl, r3
 80213c4:	f8dc a000 	ldr.w	sl, [ip]
 80213c8:	0c12      	lsrs	r2, r2, #16
 80213ca:	fa13 f38a 	uxtah	r3, r3, sl
 80213ce:	fb06 e202 	mla	r2, r6, r2, lr
 80213d2:	9300      	str	r3, [sp, #0]
 80213d4:	9b00      	ldr	r3, [sp, #0]
 80213d6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80213da:	b292      	uxth	r2, r2
 80213dc:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80213e0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80213e4:	f8bd 3000 	ldrh.w	r3, [sp]
 80213e8:	4581      	cmp	r9, r0
 80213ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80213ee:	f84c 3b04 	str.w	r3, [ip], #4
 80213f2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80213f6:	d2db      	bcs.n	80213b0 <quorem+0x44>
 80213f8:	f855 300b 	ldr.w	r3, [r5, fp]
 80213fc:	b92b      	cbnz	r3, 802140a <quorem+0x9e>
 80213fe:	9b01      	ldr	r3, [sp, #4]
 8021400:	3b04      	subs	r3, #4
 8021402:	429d      	cmp	r5, r3
 8021404:	461a      	mov	r2, r3
 8021406:	d32e      	bcc.n	8021466 <quorem+0xfa>
 8021408:	613c      	str	r4, [r7, #16]
 802140a:	4638      	mov	r0, r7
 802140c:	f001 fd6a 	bl	8022ee4 <__mcmp>
 8021410:	2800      	cmp	r0, #0
 8021412:	db24      	blt.n	802145e <quorem+0xf2>
 8021414:	3601      	adds	r6, #1
 8021416:	4628      	mov	r0, r5
 8021418:	f04f 0c00 	mov.w	ip, #0
 802141c:	f858 2b04 	ldr.w	r2, [r8], #4
 8021420:	f8d0 e000 	ldr.w	lr, [r0]
 8021424:	b293      	uxth	r3, r2
 8021426:	ebac 0303 	sub.w	r3, ip, r3
 802142a:	0c12      	lsrs	r2, r2, #16
 802142c:	fa13 f38e 	uxtah	r3, r3, lr
 8021430:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8021434:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8021438:	b29b      	uxth	r3, r3
 802143a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802143e:	45c1      	cmp	r9, r8
 8021440:	f840 3b04 	str.w	r3, [r0], #4
 8021444:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8021448:	d2e8      	bcs.n	802141c <quorem+0xb0>
 802144a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802144e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8021452:	b922      	cbnz	r2, 802145e <quorem+0xf2>
 8021454:	3b04      	subs	r3, #4
 8021456:	429d      	cmp	r5, r3
 8021458:	461a      	mov	r2, r3
 802145a:	d30a      	bcc.n	8021472 <quorem+0x106>
 802145c:	613c      	str	r4, [r7, #16]
 802145e:	4630      	mov	r0, r6
 8021460:	b003      	add	sp, #12
 8021462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021466:	6812      	ldr	r2, [r2, #0]
 8021468:	3b04      	subs	r3, #4
 802146a:	2a00      	cmp	r2, #0
 802146c:	d1cc      	bne.n	8021408 <quorem+0x9c>
 802146e:	3c01      	subs	r4, #1
 8021470:	e7c7      	b.n	8021402 <quorem+0x96>
 8021472:	6812      	ldr	r2, [r2, #0]
 8021474:	3b04      	subs	r3, #4
 8021476:	2a00      	cmp	r2, #0
 8021478:	d1f0      	bne.n	802145c <quorem+0xf0>
 802147a:	3c01      	subs	r4, #1
 802147c:	e7eb      	b.n	8021456 <quorem+0xea>
 802147e:	2000      	movs	r0, #0
 8021480:	e7ee      	b.n	8021460 <quorem+0xf4>
 8021482:	0000      	movs	r0, r0
 8021484:	0000      	movs	r0, r0
	...

08021488 <_dtoa_r>:
 8021488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802148c:	ed2d 8b04 	vpush	{d8-d9}
 8021490:	ec57 6b10 	vmov	r6, r7, d0
 8021494:	b093      	sub	sp, #76	; 0x4c
 8021496:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8021498:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802149c:	9106      	str	r1, [sp, #24]
 802149e:	ee10 aa10 	vmov	sl, s0
 80214a2:	4604      	mov	r4, r0
 80214a4:	9209      	str	r2, [sp, #36]	; 0x24
 80214a6:	930c      	str	r3, [sp, #48]	; 0x30
 80214a8:	46bb      	mov	fp, r7
 80214aa:	b975      	cbnz	r5, 80214ca <_dtoa_r+0x42>
 80214ac:	2010      	movs	r0, #16
 80214ae:	f001 fa27 	bl	8022900 <malloc>
 80214b2:	4602      	mov	r2, r0
 80214b4:	6260      	str	r0, [r4, #36]	; 0x24
 80214b6:	b920      	cbnz	r0, 80214c2 <_dtoa_r+0x3a>
 80214b8:	4ba7      	ldr	r3, [pc, #668]	; (8021758 <_dtoa_r+0x2d0>)
 80214ba:	21ea      	movs	r1, #234	; 0xea
 80214bc:	48a7      	ldr	r0, [pc, #668]	; (802175c <_dtoa_r+0x2d4>)
 80214be:	f002 f901 	bl	80236c4 <__assert_func>
 80214c2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80214c6:	6005      	str	r5, [r0, #0]
 80214c8:	60c5      	str	r5, [r0, #12]
 80214ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80214cc:	6819      	ldr	r1, [r3, #0]
 80214ce:	b151      	cbz	r1, 80214e6 <_dtoa_r+0x5e>
 80214d0:	685a      	ldr	r2, [r3, #4]
 80214d2:	604a      	str	r2, [r1, #4]
 80214d4:	2301      	movs	r3, #1
 80214d6:	4093      	lsls	r3, r2
 80214d8:	608b      	str	r3, [r1, #8]
 80214da:	4620      	mov	r0, r4
 80214dc:	f001 fa76 	bl	80229cc <_Bfree>
 80214e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80214e2:	2200      	movs	r2, #0
 80214e4:	601a      	str	r2, [r3, #0]
 80214e6:	1e3b      	subs	r3, r7, #0
 80214e8:	bfaa      	itet	ge
 80214ea:	2300      	movge	r3, #0
 80214ec:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 80214f0:	f8c8 3000 	strge.w	r3, [r8]
 80214f4:	4b9a      	ldr	r3, [pc, #616]	; (8021760 <_dtoa_r+0x2d8>)
 80214f6:	bfbc      	itt	lt
 80214f8:	2201      	movlt	r2, #1
 80214fa:	f8c8 2000 	strlt.w	r2, [r8]
 80214fe:	ea33 030b 	bics.w	r3, r3, fp
 8021502:	d11b      	bne.n	802153c <_dtoa_r+0xb4>
 8021504:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021506:	f242 730f 	movw	r3, #9999	; 0x270f
 802150a:	6013      	str	r3, [r2, #0]
 802150c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021510:	4333      	orrs	r3, r6
 8021512:	f000 8592 	beq.w	802203a <_dtoa_r+0xbb2>
 8021516:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021518:	b963      	cbnz	r3, 8021534 <_dtoa_r+0xac>
 802151a:	4b92      	ldr	r3, [pc, #584]	; (8021764 <_dtoa_r+0x2dc>)
 802151c:	e022      	b.n	8021564 <_dtoa_r+0xdc>
 802151e:	4b92      	ldr	r3, [pc, #584]	; (8021768 <_dtoa_r+0x2e0>)
 8021520:	9301      	str	r3, [sp, #4]
 8021522:	3308      	adds	r3, #8
 8021524:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021526:	6013      	str	r3, [r2, #0]
 8021528:	9801      	ldr	r0, [sp, #4]
 802152a:	b013      	add	sp, #76	; 0x4c
 802152c:	ecbd 8b04 	vpop	{d8-d9}
 8021530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021534:	4b8b      	ldr	r3, [pc, #556]	; (8021764 <_dtoa_r+0x2dc>)
 8021536:	9301      	str	r3, [sp, #4]
 8021538:	3303      	adds	r3, #3
 802153a:	e7f3      	b.n	8021524 <_dtoa_r+0x9c>
 802153c:	2200      	movs	r2, #0
 802153e:	2300      	movs	r3, #0
 8021540:	4650      	mov	r0, sl
 8021542:	4659      	mov	r1, fp
 8021544:	f7df fac0 	bl	8000ac8 <__aeabi_dcmpeq>
 8021548:	ec4b ab19 	vmov	d9, sl, fp
 802154c:	4680      	mov	r8, r0
 802154e:	b158      	cbz	r0, 8021568 <_dtoa_r+0xe0>
 8021550:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021552:	2301      	movs	r3, #1
 8021554:	6013      	str	r3, [r2, #0]
 8021556:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021558:	2b00      	cmp	r3, #0
 802155a:	f000 856b 	beq.w	8022034 <_dtoa_r+0xbac>
 802155e:	4883      	ldr	r0, [pc, #524]	; (802176c <_dtoa_r+0x2e4>)
 8021560:	6018      	str	r0, [r3, #0]
 8021562:	1e43      	subs	r3, r0, #1
 8021564:	9301      	str	r3, [sp, #4]
 8021566:	e7df      	b.n	8021528 <_dtoa_r+0xa0>
 8021568:	ec4b ab10 	vmov	d0, sl, fp
 802156c:	aa10      	add	r2, sp, #64	; 0x40
 802156e:	a911      	add	r1, sp, #68	; 0x44
 8021570:	4620      	mov	r0, r4
 8021572:	f001 fdd9 	bl	8023128 <__d2b>
 8021576:	f3cb 550a 	ubfx	r5, fp, #20, #11
 802157a:	ee08 0a10 	vmov	s16, r0
 802157e:	2d00      	cmp	r5, #0
 8021580:	f000 8084 	beq.w	802168c <_dtoa_r+0x204>
 8021584:	ee19 3a90 	vmov	r3, s19
 8021588:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802158c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8021590:	4656      	mov	r6, sl
 8021592:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8021596:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802159a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802159e:	4b74      	ldr	r3, [pc, #464]	; (8021770 <_dtoa_r+0x2e8>)
 80215a0:	2200      	movs	r2, #0
 80215a2:	4630      	mov	r0, r6
 80215a4:	4639      	mov	r1, r7
 80215a6:	f7de fe6f 	bl	8000288 <__aeabi_dsub>
 80215aa:	a365      	add	r3, pc, #404	; (adr r3, 8021740 <_dtoa_r+0x2b8>)
 80215ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80215b0:	f7df f822 	bl	80005f8 <__aeabi_dmul>
 80215b4:	a364      	add	r3, pc, #400	; (adr r3, 8021748 <_dtoa_r+0x2c0>)
 80215b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80215ba:	f7de fe67 	bl	800028c <__adddf3>
 80215be:	4606      	mov	r6, r0
 80215c0:	4628      	mov	r0, r5
 80215c2:	460f      	mov	r7, r1
 80215c4:	f7de ffae 	bl	8000524 <__aeabi_i2d>
 80215c8:	a361      	add	r3, pc, #388	; (adr r3, 8021750 <_dtoa_r+0x2c8>)
 80215ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80215ce:	f7df f813 	bl	80005f8 <__aeabi_dmul>
 80215d2:	4602      	mov	r2, r0
 80215d4:	460b      	mov	r3, r1
 80215d6:	4630      	mov	r0, r6
 80215d8:	4639      	mov	r1, r7
 80215da:	f7de fe57 	bl	800028c <__adddf3>
 80215de:	4606      	mov	r6, r0
 80215e0:	460f      	mov	r7, r1
 80215e2:	f7df fab9 	bl	8000b58 <__aeabi_d2iz>
 80215e6:	2200      	movs	r2, #0
 80215e8:	9000      	str	r0, [sp, #0]
 80215ea:	2300      	movs	r3, #0
 80215ec:	4630      	mov	r0, r6
 80215ee:	4639      	mov	r1, r7
 80215f0:	f7df fa74 	bl	8000adc <__aeabi_dcmplt>
 80215f4:	b150      	cbz	r0, 802160c <_dtoa_r+0x184>
 80215f6:	9800      	ldr	r0, [sp, #0]
 80215f8:	f7de ff94 	bl	8000524 <__aeabi_i2d>
 80215fc:	4632      	mov	r2, r6
 80215fe:	463b      	mov	r3, r7
 8021600:	f7df fa62 	bl	8000ac8 <__aeabi_dcmpeq>
 8021604:	b910      	cbnz	r0, 802160c <_dtoa_r+0x184>
 8021606:	9b00      	ldr	r3, [sp, #0]
 8021608:	3b01      	subs	r3, #1
 802160a:	9300      	str	r3, [sp, #0]
 802160c:	9b00      	ldr	r3, [sp, #0]
 802160e:	2b16      	cmp	r3, #22
 8021610:	d85a      	bhi.n	80216c8 <_dtoa_r+0x240>
 8021612:	9a00      	ldr	r2, [sp, #0]
 8021614:	4b57      	ldr	r3, [pc, #348]	; (8021774 <_dtoa_r+0x2ec>)
 8021616:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802161a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802161e:	ec51 0b19 	vmov	r0, r1, d9
 8021622:	f7df fa5b 	bl	8000adc <__aeabi_dcmplt>
 8021626:	2800      	cmp	r0, #0
 8021628:	d050      	beq.n	80216cc <_dtoa_r+0x244>
 802162a:	9b00      	ldr	r3, [sp, #0]
 802162c:	3b01      	subs	r3, #1
 802162e:	9300      	str	r3, [sp, #0]
 8021630:	2300      	movs	r3, #0
 8021632:	930b      	str	r3, [sp, #44]	; 0x2c
 8021634:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021636:	1b5d      	subs	r5, r3, r5
 8021638:	1e6b      	subs	r3, r5, #1
 802163a:	9305      	str	r3, [sp, #20]
 802163c:	bf45      	ittet	mi
 802163e:	f1c5 0301 	rsbmi	r3, r5, #1
 8021642:	9304      	strmi	r3, [sp, #16]
 8021644:	2300      	movpl	r3, #0
 8021646:	2300      	movmi	r3, #0
 8021648:	bf4c      	ite	mi
 802164a:	9305      	strmi	r3, [sp, #20]
 802164c:	9304      	strpl	r3, [sp, #16]
 802164e:	9b00      	ldr	r3, [sp, #0]
 8021650:	2b00      	cmp	r3, #0
 8021652:	db3d      	blt.n	80216d0 <_dtoa_r+0x248>
 8021654:	9b05      	ldr	r3, [sp, #20]
 8021656:	9a00      	ldr	r2, [sp, #0]
 8021658:	920a      	str	r2, [sp, #40]	; 0x28
 802165a:	4413      	add	r3, r2
 802165c:	9305      	str	r3, [sp, #20]
 802165e:	2300      	movs	r3, #0
 8021660:	9307      	str	r3, [sp, #28]
 8021662:	9b06      	ldr	r3, [sp, #24]
 8021664:	2b09      	cmp	r3, #9
 8021666:	f200 8089 	bhi.w	802177c <_dtoa_r+0x2f4>
 802166a:	2b05      	cmp	r3, #5
 802166c:	bfc4      	itt	gt
 802166e:	3b04      	subgt	r3, #4
 8021670:	9306      	strgt	r3, [sp, #24]
 8021672:	9b06      	ldr	r3, [sp, #24]
 8021674:	f1a3 0302 	sub.w	r3, r3, #2
 8021678:	bfcc      	ite	gt
 802167a:	2500      	movgt	r5, #0
 802167c:	2501      	movle	r5, #1
 802167e:	2b03      	cmp	r3, #3
 8021680:	f200 8087 	bhi.w	8021792 <_dtoa_r+0x30a>
 8021684:	e8df f003 	tbb	[pc, r3]
 8021688:	59383a2d 	.word	0x59383a2d
 802168c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8021690:	441d      	add	r5, r3
 8021692:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8021696:	2b20      	cmp	r3, #32
 8021698:	bfc1      	itttt	gt
 802169a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802169e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 80216a2:	fa0b f303 	lslgt.w	r3, fp, r3
 80216a6:	fa26 f000 	lsrgt.w	r0, r6, r0
 80216aa:	bfda      	itte	le
 80216ac:	f1c3 0320 	rsble	r3, r3, #32
 80216b0:	fa06 f003 	lslle.w	r0, r6, r3
 80216b4:	4318      	orrgt	r0, r3
 80216b6:	f7de ff25 	bl	8000504 <__aeabi_ui2d>
 80216ba:	2301      	movs	r3, #1
 80216bc:	4606      	mov	r6, r0
 80216be:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 80216c2:	3d01      	subs	r5, #1
 80216c4:	930e      	str	r3, [sp, #56]	; 0x38
 80216c6:	e76a      	b.n	802159e <_dtoa_r+0x116>
 80216c8:	2301      	movs	r3, #1
 80216ca:	e7b2      	b.n	8021632 <_dtoa_r+0x1aa>
 80216cc:	900b      	str	r0, [sp, #44]	; 0x2c
 80216ce:	e7b1      	b.n	8021634 <_dtoa_r+0x1ac>
 80216d0:	9b04      	ldr	r3, [sp, #16]
 80216d2:	9a00      	ldr	r2, [sp, #0]
 80216d4:	1a9b      	subs	r3, r3, r2
 80216d6:	9304      	str	r3, [sp, #16]
 80216d8:	4253      	negs	r3, r2
 80216da:	9307      	str	r3, [sp, #28]
 80216dc:	2300      	movs	r3, #0
 80216de:	930a      	str	r3, [sp, #40]	; 0x28
 80216e0:	e7bf      	b.n	8021662 <_dtoa_r+0x1da>
 80216e2:	2300      	movs	r3, #0
 80216e4:	9308      	str	r3, [sp, #32]
 80216e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216e8:	2b00      	cmp	r3, #0
 80216ea:	dc55      	bgt.n	8021798 <_dtoa_r+0x310>
 80216ec:	2301      	movs	r3, #1
 80216ee:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80216f2:	461a      	mov	r2, r3
 80216f4:	9209      	str	r2, [sp, #36]	; 0x24
 80216f6:	e00c      	b.n	8021712 <_dtoa_r+0x28a>
 80216f8:	2301      	movs	r3, #1
 80216fa:	e7f3      	b.n	80216e4 <_dtoa_r+0x25c>
 80216fc:	2300      	movs	r3, #0
 80216fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021700:	9308      	str	r3, [sp, #32]
 8021702:	9b00      	ldr	r3, [sp, #0]
 8021704:	4413      	add	r3, r2
 8021706:	9302      	str	r3, [sp, #8]
 8021708:	3301      	adds	r3, #1
 802170a:	2b01      	cmp	r3, #1
 802170c:	9303      	str	r3, [sp, #12]
 802170e:	bfb8      	it	lt
 8021710:	2301      	movlt	r3, #1
 8021712:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8021714:	2200      	movs	r2, #0
 8021716:	6042      	str	r2, [r0, #4]
 8021718:	2204      	movs	r2, #4
 802171a:	f102 0614 	add.w	r6, r2, #20
 802171e:	429e      	cmp	r6, r3
 8021720:	6841      	ldr	r1, [r0, #4]
 8021722:	d93d      	bls.n	80217a0 <_dtoa_r+0x318>
 8021724:	4620      	mov	r0, r4
 8021726:	f001 f911 	bl	802294c <_Balloc>
 802172a:	9001      	str	r0, [sp, #4]
 802172c:	2800      	cmp	r0, #0
 802172e:	d13b      	bne.n	80217a8 <_dtoa_r+0x320>
 8021730:	4b11      	ldr	r3, [pc, #68]	; (8021778 <_dtoa_r+0x2f0>)
 8021732:	4602      	mov	r2, r0
 8021734:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8021738:	e6c0      	b.n	80214bc <_dtoa_r+0x34>
 802173a:	2301      	movs	r3, #1
 802173c:	e7df      	b.n	80216fe <_dtoa_r+0x276>
 802173e:	bf00      	nop
 8021740:	636f4361 	.word	0x636f4361
 8021744:	3fd287a7 	.word	0x3fd287a7
 8021748:	8b60c8b3 	.word	0x8b60c8b3
 802174c:	3fc68a28 	.word	0x3fc68a28
 8021750:	509f79fb 	.word	0x509f79fb
 8021754:	3fd34413 	.word	0x3fd34413
 8021758:	080270c6 	.word	0x080270c6
 802175c:	080270dd 	.word	0x080270dd
 8021760:	7ff00000 	.word	0x7ff00000
 8021764:	080270c2 	.word	0x080270c2
 8021768:	080270b9 	.word	0x080270b9
 802176c:	08026f3d 	.word	0x08026f3d
 8021770:	3ff80000 	.word	0x3ff80000
 8021774:	08027248 	.word	0x08027248
 8021778:	08027138 	.word	0x08027138
 802177c:	2501      	movs	r5, #1
 802177e:	2300      	movs	r3, #0
 8021780:	9306      	str	r3, [sp, #24]
 8021782:	9508      	str	r5, [sp, #32]
 8021784:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021788:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802178c:	2200      	movs	r2, #0
 802178e:	2312      	movs	r3, #18
 8021790:	e7b0      	b.n	80216f4 <_dtoa_r+0x26c>
 8021792:	2301      	movs	r3, #1
 8021794:	9308      	str	r3, [sp, #32]
 8021796:	e7f5      	b.n	8021784 <_dtoa_r+0x2fc>
 8021798:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802179a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802179e:	e7b8      	b.n	8021712 <_dtoa_r+0x28a>
 80217a0:	3101      	adds	r1, #1
 80217a2:	6041      	str	r1, [r0, #4]
 80217a4:	0052      	lsls	r2, r2, #1
 80217a6:	e7b8      	b.n	802171a <_dtoa_r+0x292>
 80217a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80217aa:	9a01      	ldr	r2, [sp, #4]
 80217ac:	601a      	str	r2, [r3, #0]
 80217ae:	9b03      	ldr	r3, [sp, #12]
 80217b0:	2b0e      	cmp	r3, #14
 80217b2:	f200 809d 	bhi.w	80218f0 <_dtoa_r+0x468>
 80217b6:	2d00      	cmp	r5, #0
 80217b8:	f000 809a 	beq.w	80218f0 <_dtoa_r+0x468>
 80217bc:	9b00      	ldr	r3, [sp, #0]
 80217be:	2b00      	cmp	r3, #0
 80217c0:	dd32      	ble.n	8021828 <_dtoa_r+0x3a0>
 80217c2:	4ab7      	ldr	r2, [pc, #732]	; (8021aa0 <_dtoa_r+0x618>)
 80217c4:	f003 030f 	and.w	r3, r3, #15
 80217c8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80217cc:	e9d3 8900 	ldrd	r8, r9, [r3]
 80217d0:	9b00      	ldr	r3, [sp, #0]
 80217d2:	05d8      	lsls	r0, r3, #23
 80217d4:	ea4f 1723 	mov.w	r7, r3, asr #4
 80217d8:	d516      	bpl.n	8021808 <_dtoa_r+0x380>
 80217da:	4bb2      	ldr	r3, [pc, #712]	; (8021aa4 <_dtoa_r+0x61c>)
 80217dc:	ec51 0b19 	vmov	r0, r1, d9
 80217e0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80217e4:	f7df f832 	bl	800084c <__aeabi_ddiv>
 80217e8:	f007 070f 	and.w	r7, r7, #15
 80217ec:	4682      	mov	sl, r0
 80217ee:	468b      	mov	fp, r1
 80217f0:	2503      	movs	r5, #3
 80217f2:	4eac      	ldr	r6, [pc, #688]	; (8021aa4 <_dtoa_r+0x61c>)
 80217f4:	b957      	cbnz	r7, 802180c <_dtoa_r+0x384>
 80217f6:	4642      	mov	r2, r8
 80217f8:	464b      	mov	r3, r9
 80217fa:	4650      	mov	r0, sl
 80217fc:	4659      	mov	r1, fp
 80217fe:	f7df f825 	bl	800084c <__aeabi_ddiv>
 8021802:	4682      	mov	sl, r0
 8021804:	468b      	mov	fp, r1
 8021806:	e028      	b.n	802185a <_dtoa_r+0x3d2>
 8021808:	2502      	movs	r5, #2
 802180a:	e7f2      	b.n	80217f2 <_dtoa_r+0x36a>
 802180c:	07f9      	lsls	r1, r7, #31
 802180e:	d508      	bpl.n	8021822 <_dtoa_r+0x39a>
 8021810:	4640      	mov	r0, r8
 8021812:	4649      	mov	r1, r9
 8021814:	e9d6 2300 	ldrd	r2, r3, [r6]
 8021818:	f7de feee 	bl	80005f8 <__aeabi_dmul>
 802181c:	3501      	adds	r5, #1
 802181e:	4680      	mov	r8, r0
 8021820:	4689      	mov	r9, r1
 8021822:	107f      	asrs	r7, r7, #1
 8021824:	3608      	adds	r6, #8
 8021826:	e7e5      	b.n	80217f4 <_dtoa_r+0x36c>
 8021828:	f000 809b 	beq.w	8021962 <_dtoa_r+0x4da>
 802182c:	9b00      	ldr	r3, [sp, #0]
 802182e:	4f9d      	ldr	r7, [pc, #628]	; (8021aa4 <_dtoa_r+0x61c>)
 8021830:	425e      	negs	r6, r3
 8021832:	4b9b      	ldr	r3, [pc, #620]	; (8021aa0 <_dtoa_r+0x618>)
 8021834:	f006 020f 	and.w	r2, r6, #15
 8021838:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802183c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021840:	ec51 0b19 	vmov	r0, r1, d9
 8021844:	f7de fed8 	bl	80005f8 <__aeabi_dmul>
 8021848:	1136      	asrs	r6, r6, #4
 802184a:	4682      	mov	sl, r0
 802184c:	468b      	mov	fp, r1
 802184e:	2300      	movs	r3, #0
 8021850:	2502      	movs	r5, #2
 8021852:	2e00      	cmp	r6, #0
 8021854:	d17a      	bne.n	802194c <_dtoa_r+0x4c4>
 8021856:	2b00      	cmp	r3, #0
 8021858:	d1d3      	bne.n	8021802 <_dtoa_r+0x37a>
 802185a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802185c:	2b00      	cmp	r3, #0
 802185e:	f000 8082 	beq.w	8021966 <_dtoa_r+0x4de>
 8021862:	4b91      	ldr	r3, [pc, #580]	; (8021aa8 <_dtoa_r+0x620>)
 8021864:	2200      	movs	r2, #0
 8021866:	4650      	mov	r0, sl
 8021868:	4659      	mov	r1, fp
 802186a:	f7df f937 	bl	8000adc <__aeabi_dcmplt>
 802186e:	2800      	cmp	r0, #0
 8021870:	d079      	beq.n	8021966 <_dtoa_r+0x4de>
 8021872:	9b03      	ldr	r3, [sp, #12]
 8021874:	2b00      	cmp	r3, #0
 8021876:	d076      	beq.n	8021966 <_dtoa_r+0x4de>
 8021878:	9b02      	ldr	r3, [sp, #8]
 802187a:	2b00      	cmp	r3, #0
 802187c:	dd36      	ble.n	80218ec <_dtoa_r+0x464>
 802187e:	9b00      	ldr	r3, [sp, #0]
 8021880:	4650      	mov	r0, sl
 8021882:	4659      	mov	r1, fp
 8021884:	1e5f      	subs	r7, r3, #1
 8021886:	2200      	movs	r2, #0
 8021888:	4b88      	ldr	r3, [pc, #544]	; (8021aac <_dtoa_r+0x624>)
 802188a:	f7de feb5 	bl	80005f8 <__aeabi_dmul>
 802188e:	9e02      	ldr	r6, [sp, #8]
 8021890:	4682      	mov	sl, r0
 8021892:	468b      	mov	fp, r1
 8021894:	3501      	adds	r5, #1
 8021896:	4628      	mov	r0, r5
 8021898:	f7de fe44 	bl	8000524 <__aeabi_i2d>
 802189c:	4652      	mov	r2, sl
 802189e:	465b      	mov	r3, fp
 80218a0:	f7de feaa 	bl	80005f8 <__aeabi_dmul>
 80218a4:	4b82      	ldr	r3, [pc, #520]	; (8021ab0 <_dtoa_r+0x628>)
 80218a6:	2200      	movs	r2, #0
 80218a8:	f7de fcf0 	bl	800028c <__adddf3>
 80218ac:	46d0      	mov	r8, sl
 80218ae:	46d9      	mov	r9, fp
 80218b0:	4682      	mov	sl, r0
 80218b2:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 80218b6:	2e00      	cmp	r6, #0
 80218b8:	d158      	bne.n	802196c <_dtoa_r+0x4e4>
 80218ba:	4b7e      	ldr	r3, [pc, #504]	; (8021ab4 <_dtoa_r+0x62c>)
 80218bc:	2200      	movs	r2, #0
 80218be:	4640      	mov	r0, r8
 80218c0:	4649      	mov	r1, r9
 80218c2:	f7de fce1 	bl	8000288 <__aeabi_dsub>
 80218c6:	4652      	mov	r2, sl
 80218c8:	465b      	mov	r3, fp
 80218ca:	4680      	mov	r8, r0
 80218cc:	4689      	mov	r9, r1
 80218ce:	f7df f923 	bl	8000b18 <__aeabi_dcmpgt>
 80218d2:	2800      	cmp	r0, #0
 80218d4:	f040 8295 	bne.w	8021e02 <_dtoa_r+0x97a>
 80218d8:	4652      	mov	r2, sl
 80218da:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80218de:	4640      	mov	r0, r8
 80218e0:	4649      	mov	r1, r9
 80218e2:	f7df f8fb 	bl	8000adc <__aeabi_dcmplt>
 80218e6:	2800      	cmp	r0, #0
 80218e8:	f040 8289 	bne.w	8021dfe <_dtoa_r+0x976>
 80218ec:	ec5b ab19 	vmov	sl, fp, d9
 80218f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218f2:	2b00      	cmp	r3, #0
 80218f4:	f2c0 8148 	blt.w	8021b88 <_dtoa_r+0x700>
 80218f8:	9a00      	ldr	r2, [sp, #0]
 80218fa:	2a0e      	cmp	r2, #14
 80218fc:	f300 8144 	bgt.w	8021b88 <_dtoa_r+0x700>
 8021900:	4b67      	ldr	r3, [pc, #412]	; (8021aa0 <_dtoa_r+0x618>)
 8021902:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8021906:	e9d3 8900 	ldrd	r8, r9, [r3]
 802190a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802190c:	2b00      	cmp	r3, #0
 802190e:	f280 80d5 	bge.w	8021abc <_dtoa_r+0x634>
 8021912:	9b03      	ldr	r3, [sp, #12]
 8021914:	2b00      	cmp	r3, #0
 8021916:	f300 80d1 	bgt.w	8021abc <_dtoa_r+0x634>
 802191a:	f040 826f 	bne.w	8021dfc <_dtoa_r+0x974>
 802191e:	4b65      	ldr	r3, [pc, #404]	; (8021ab4 <_dtoa_r+0x62c>)
 8021920:	2200      	movs	r2, #0
 8021922:	4640      	mov	r0, r8
 8021924:	4649      	mov	r1, r9
 8021926:	f7de fe67 	bl	80005f8 <__aeabi_dmul>
 802192a:	4652      	mov	r2, sl
 802192c:	465b      	mov	r3, fp
 802192e:	f7df f8e9 	bl	8000b04 <__aeabi_dcmpge>
 8021932:	9e03      	ldr	r6, [sp, #12]
 8021934:	4637      	mov	r7, r6
 8021936:	2800      	cmp	r0, #0
 8021938:	f040 8245 	bne.w	8021dc6 <_dtoa_r+0x93e>
 802193c:	9d01      	ldr	r5, [sp, #4]
 802193e:	2331      	movs	r3, #49	; 0x31
 8021940:	f805 3b01 	strb.w	r3, [r5], #1
 8021944:	9b00      	ldr	r3, [sp, #0]
 8021946:	3301      	adds	r3, #1
 8021948:	9300      	str	r3, [sp, #0]
 802194a:	e240      	b.n	8021dce <_dtoa_r+0x946>
 802194c:	07f2      	lsls	r2, r6, #31
 802194e:	d505      	bpl.n	802195c <_dtoa_r+0x4d4>
 8021950:	e9d7 2300 	ldrd	r2, r3, [r7]
 8021954:	f7de fe50 	bl	80005f8 <__aeabi_dmul>
 8021958:	3501      	adds	r5, #1
 802195a:	2301      	movs	r3, #1
 802195c:	1076      	asrs	r6, r6, #1
 802195e:	3708      	adds	r7, #8
 8021960:	e777      	b.n	8021852 <_dtoa_r+0x3ca>
 8021962:	2502      	movs	r5, #2
 8021964:	e779      	b.n	802185a <_dtoa_r+0x3d2>
 8021966:	9f00      	ldr	r7, [sp, #0]
 8021968:	9e03      	ldr	r6, [sp, #12]
 802196a:	e794      	b.n	8021896 <_dtoa_r+0x40e>
 802196c:	9901      	ldr	r1, [sp, #4]
 802196e:	4b4c      	ldr	r3, [pc, #304]	; (8021aa0 <_dtoa_r+0x618>)
 8021970:	4431      	add	r1, r6
 8021972:	910d      	str	r1, [sp, #52]	; 0x34
 8021974:	9908      	ldr	r1, [sp, #32]
 8021976:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802197a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802197e:	2900      	cmp	r1, #0
 8021980:	d043      	beq.n	8021a0a <_dtoa_r+0x582>
 8021982:	494d      	ldr	r1, [pc, #308]	; (8021ab8 <_dtoa_r+0x630>)
 8021984:	2000      	movs	r0, #0
 8021986:	f7de ff61 	bl	800084c <__aeabi_ddiv>
 802198a:	4652      	mov	r2, sl
 802198c:	465b      	mov	r3, fp
 802198e:	f7de fc7b 	bl	8000288 <__aeabi_dsub>
 8021992:	9d01      	ldr	r5, [sp, #4]
 8021994:	4682      	mov	sl, r0
 8021996:	468b      	mov	fp, r1
 8021998:	4649      	mov	r1, r9
 802199a:	4640      	mov	r0, r8
 802199c:	f7df f8dc 	bl	8000b58 <__aeabi_d2iz>
 80219a0:	4606      	mov	r6, r0
 80219a2:	f7de fdbf 	bl	8000524 <__aeabi_i2d>
 80219a6:	4602      	mov	r2, r0
 80219a8:	460b      	mov	r3, r1
 80219aa:	4640      	mov	r0, r8
 80219ac:	4649      	mov	r1, r9
 80219ae:	f7de fc6b 	bl	8000288 <__aeabi_dsub>
 80219b2:	3630      	adds	r6, #48	; 0x30
 80219b4:	f805 6b01 	strb.w	r6, [r5], #1
 80219b8:	4652      	mov	r2, sl
 80219ba:	465b      	mov	r3, fp
 80219bc:	4680      	mov	r8, r0
 80219be:	4689      	mov	r9, r1
 80219c0:	f7df f88c 	bl	8000adc <__aeabi_dcmplt>
 80219c4:	2800      	cmp	r0, #0
 80219c6:	d163      	bne.n	8021a90 <_dtoa_r+0x608>
 80219c8:	4642      	mov	r2, r8
 80219ca:	464b      	mov	r3, r9
 80219cc:	4936      	ldr	r1, [pc, #216]	; (8021aa8 <_dtoa_r+0x620>)
 80219ce:	2000      	movs	r0, #0
 80219d0:	f7de fc5a 	bl	8000288 <__aeabi_dsub>
 80219d4:	4652      	mov	r2, sl
 80219d6:	465b      	mov	r3, fp
 80219d8:	f7df f880 	bl	8000adc <__aeabi_dcmplt>
 80219dc:	2800      	cmp	r0, #0
 80219de:	f040 80b5 	bne.w	8021b4c <_dtoa_r+0x6c4>
 80219e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80219e4:	429d      	cmp	r5, r3
 80219e6:	d081      	beq.n	80218ec <_dtoa_r+0x464>
 80219e8:	4b30      	ldr	r3, [pc, #192]	; (8021aac <_dtoa_r+0x624>)
 80219ea:	2200      	movs	r2, #0
 80219ec:	4650      	mov	r0, sl
 80219ee:	4659      	mov	r1, fp
 80219f0:	f7de fe02 	bl	80005f8 <__aeabi_dmul>
 80219f4:	4b2d      	ldr	r3, [pc, #180]	; (8021aac <_dtoa_r+0x624>)
 80219f6:	4682      	mov	sl, r0
 80219f8:	468b      	mov	fp, r1
 80219fa:	4640      	mov	r0, r8
 80219fc:	4649      	mov	r1, r9
 80219fe:	2200      	movs	r2, #0
 8021a00:	f7de fdfa 	bl	80005f8 <__aeabi_dmul>
 8021a04:	4680      	mov	r8, r0
 8021a06:	4689      	mov	r9, r1
 8021a08:	e7c6      	b.n	8021998 <_dtoa_r+0x510>
 8021a0a:	4650      	mov	r0, sl
 8021a0c:	4659      	mov	r1, fp
 8021a0e:	f7de fdf3 	bl	80005f8 <__aeabi_dmul>
 8021a12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a14:	9d01      	ldr	r5, [sp, #4]
 8021a16:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a18:	4682      	mov	sl, r0
 8021a1a:	468b      	mov	fp, r1
 8021a1c:	4649      	mov	r1, r9
 8021a1e:	4640      	mov	r0, r8
 8021a20:	f7df f89a 	bl	8000b58 <__aeabi_d2iz>
 8021a24:	4606      	mov	r6, r0
 8021a26:	f7de fd7d 	bl	8000524 <__aeabi_i2d>
 8021a2a:	3630      	adds	r6, #48	; 0x30
 8021a2c:	4602      	mov	r2, r0
 8021a2e:	460b      	mov	r3, r1
 8021a30:	4640      	mov	r0, r8
 8021a32:	4649      	mov	r1, r9
 8021a34:	f7de fc28 	bl	8000288 <__aeabi_dsub>
 8021a38:	f805 6b01 	strb.w	r6, [r5], #1
 8021a3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a3e:	429d      	cmp	r5, r3
 8021a40:	4680      	mov	r8, r0
 8021a42:	4689      	mov	r9, r1
 8021a44:	f04f 0200 	mov.w	r2, #0
 8021a48:	d124      	bne.n	8021a94 <_dtoa_r+0x60c>
 8021a4a:	4b1b      	ldr	r3, [pc, #108]	; (8021ab8 <_dtoa_r+0x630>)
 8021a4c:	4650      	mov	r0, sl
 8021a4e:	4659      	mov	r1, fp
 8021a50:	f7de fc1c 	bl	800028c <__adddf3>
 8021a54:	4602      	mov	r2, r0
 8021a56:	460b      	mov	r3, r1
 8021a58:	4640      	mov	r0, r8
 8021a5a:	4649      	mov	r1, r9
 8021a5c:	f7df f85c 	bl	8000b18 <__aeabi_dcmpgt>
 8021a60:	2800      	cmp	r0, #0
 8021a62:	d173      	bne.n	8021b4c <_dtoa_r+0x6c4>
 8021a64:	4652      	mov	r2, sl
 8021a66:	465b      	mov	r3, fp
 8021a68:	4913      	ldr	r1, [pc, #76]	; (8021ab8 <_dtoa_r+0x630>)
 8021a6a:	2000      	movs	r0, #0
 8021a6c:	f7de fc0c 	bl	8000288 <__aeabi_dsub>
 8021a70:	4602      	mov	r2, r0
 8021a72:	460b      	mov	r3, r1
 8021a74:	4640      	mov	r0, r8
 8021a76:	4649      	mov	r1, r9
 8021a78:	f7df f830 	bl	8000adc <__aeabi_dcmplt>
 8021a7c:	2800      	cmp	r0, #0
 8021a7e:	f43f af35 	beq.w	80218ec <_dtoa_r+0x464>
 8021a82:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021a84:	1e6b      	subs	r3, r5, #1
 8021a86:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a88:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8021a8c:	2b30      	cmp	r3, #48	; 0x30
 8021a8e:	d0f8      	beq.n	8021a82 <_dtoa_r+0x5fa>
 8021a90:	9700      	str	r7, [sp, #0]
 8021a92:	e049      	b.n	8021b28 <_dtoa_r+0x6a0>
 8021a94:	4b05      	ldr	r3, [pc, #20]	; (8021aac <_dtoa_r+0x624>)
 8021a96:	f7de fdaf 	bl	80005f8 <__aeabi_dmul>
 8021a9a:	4680      	mov	r8, r0
 8021a9c:	4689      	mov	r9, r1
 8021a9e:	e7bd      	b.n	8021a1c <_dtoa_r+0x594>
 8021aa0:	08027248 	.word	0x08027248
 8021aa4:	08027220 	.word	0x08027220
 8021aa8:	3ff00000 	.word	0x3ff00000
 8021aac:	40240000 	.word	0x40240000
 8021ab0:	401c0000 	.word	0x401c0000
 8021ab4:	40140000 	.word	0x40140000
 8021ab8:	3fe00000 	.word	0x3fe00000
 8021abc:	9d01      	ldr	r5, [sp, #4]
 8021abe:	4656      	mov	r6, sl
 8021ac0:	465f      	mov	r7, fp
 8021ac2:	4642      	mov	r2, r8
 8021ac4:	464b      	mov	r3, r9
 8021ac6:	4630      	mov	r0, r6
 8021ac8:	4639      	mov	r1, r7
 8021aca:	f7de febf 	bl	800084c <__aeabi_ddiv>
 8021ace:	f7df f843 	bl	8000b58 <__aeabi_d2iz>
 8021ad2:	4682      	mov	sl, r0
 8021ad4:	f7de fd26 	bl	8000524 <__aeabi_i2d>
 8021ad8:	4642      	mov	r2, r8
 8021ada:	464b      	mov	r3, r9
 8021adc:	f7de fd8c 	bl	80005f8 <__aeabi_dmul>
 8021ae0:	4602      	mov	r2, r0
 8021ae2:	460b      	mov	r3, r1
 8021ae4:	4630      	mov	r0, r6
 8021ae6:	4639      	mov	r1, r7
 8021ae8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8021aec:	f7de fbcc 	bl	8000288 <__aeabi_dsub>
 8021af0:	f805 6b01 	strb.w	r6, [r5], #1
 8021af4:	9e01      	ldr	r6, [sp, #4]
 8021af6:	9f03      	ldr	r7, [sp, #12]
 8021af8:	1bae      	subs	r6, r5, r6
 8021afa:	42b7      	cmp	r7, r6
 8021afc:	4602      	mov	r2, r0
 8021afe:	460b      	mov	r3, r1
 8021b00:	d135      	bne.n	8021b6e <_dtoa_r+0x6e6>
 8021b02:	f7de fbc3 	bl	800028c <__adddf3>
 8021b06:	4642      	mov	r2, r8
 8021b08:	464b      	mov	r3, r9
 8021b0a:	4606      	mov	r6, r0
 8021b0c:	460f      	mov	r7, r1
 8021b0e:	f7df f803 	bl	8000b18 <__aeabi_dcmpgt>
 8021b12:	b9d0      	cbnz	r0, 8021b4a <_dtoa_r+0x6c2>
 8021b14:	4642      	mov	r2, r8
 8021b16:	464b      	mov	r3, r9
 8021b18:	4630      	mov	r0, r6
 8021b1a:	4639      	mov	r1, r7
 8021b1c:	f7de ffd4 	bl	8000ac8 <__aeabi_dcmpeq>
 8021b20:	b110      	cbz	r0, 8021b28 <_dtoa_r+0x6a0>
 8021b22:	f01a 0f01 	tst.w	sl, #1
 8021b26:	d110      	bne.n	8021b4a <_dtoa_r+0x6c2>
 8021b28:	4620      	mov	r0, r4
 8021b2a:	ee18 1a10 	vmov	r1, s16
 8021b2e:	f000 ff4d 	bl	80229cc <_Bfree>
 8021b32:	2300      	movs	r3, #0
 8021b34:	9800      	ldr	r0, [sp, #0]
 8021b36:	702b      	strb	r3, [r5, #0]
 8021b38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b3a:	3001      	adds	r0, #1
 8021b3c:	6018      	str	r0, [r3, #0]
 8021b3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b40:	2b00      	cmp	r3, #0
 8021b42:	f43f acf1 	beq.w	8021528 <_dtoa_r+0xa0>
 8021b46:	601d      	str	r5, [r3, #0]
 8021b48:	e4ee      	b.n	8021528 <_dtoa_r+0xa0>
 8021b4a:	9f00      	ldr	r7, [sp, #0]
 8021b4c:	462b      	mov	r3, r5
 8021b4e:	461d      	mov	r5, r3
 8021b50:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8021b54:	2a39      	cmp	r2, #57	; 0x39
 8021b56:	d106      	bne.n	8021b66 <_dtoa_r+0x6de>
 8021b58:	9a01      	ldr	r2, [sp, #4]
 8021b5a:	429a      	cmp	r2, r3
 8021b5c:	d1f7      	bne.n	8021b4e <_dtoa_r+0x6c6>
 8021b5e:	9901      	ldr	r1, [sp, #4]
 8021b60:	2230      	movs	r2, #48	; 0x30
 8021b62:	3701      	adds	r7, #1
 8021b64:	700a      	strb	r2, [r1, #0]
 8021b66:	781a      	ldrb	r2, [r3, #0]
 8021b68:	3201      	adds	r2, #1
 8021b6a:	701a      	strb	r2, [r3, #0]
 8021b6c:	e790      	b.n	8021a90 <_dtoa_r+0x608>
 8021b6e:	4ba6      	ldr	r3, [pc, #664]	; (8021e08 <_dtoa_r+0x980>)
 8021b70:	2200      	movs	r2, #0
 8021b72:	f7de fd41 	bl	80005f8 <__aeabi_dmul>
 8021b76:	2200      	movs	r2, #0
 8021b78:	2300      	movs	r3, #0
 8021b7a:	4606      	mov	r6, r0
 8021b7c:	460f      	mov	r7, r1
 8021b7e:	f7de ffa3 	bl	8000ac8 <__aeabi_dcmpeq>
 8021b82:	2800      	cmp	r0, #0
 8021b84:	d09d      	beq.n	8021ac2 <_dtoa_r+0x63a>
 8021b86:	e7cf      	b.n	8021b28 <_dtoa_r+0x6a0>
 8021b88:	9a08      	ldr	r2, [sp, #32]
 8021b8a:	2a00      	cmp	r2, #0
 8021b8c:	f000 80d7 	beq.w	8021d3e <_dtoa_r+0x8b6>
 8021b90:	9a06      	ldr	r2, [sp, #24]
 8021b92:	2a01      	cmp	r2, #1
 8021b94:	f300 80ba 	bgt.w	8021d0c <_dtoa_r+0x884>
 8021b98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021b9a:	2a00      	cmp	r2, #0
 8021b9c:	f000 80b2 	beq.w	8021d04 <_dtoa_r+0x87c>
 8021ba0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8021ba4:	9e07      	ldr	r6, [sp, #28]
 8021ba6:	9d04      	ldr	r5, [sp, #16]
 8021ba8:	9a04      	ldr	r2, [sp, #16]
 8021baa:	441a      	add	r2, r3
 8021bac:	9204      	str	r2, [sp, #16]
 8021bae:	9a05      	ldr	r2, [sp, #20]
 8021bb0:	2101      	movs	r1, #1
 8021bb2:	441a      	add	r2, r3
 8021bb4:	4620      	mov	r0, r4
 8021bb6:	9205      	str	r2, [sp, #20]
 8021bb8:	f001 f80a 	bl	8022bd0 <__i2b>
 8021bbc:	4607      	mov	r7, r0
 8021bbe:	2d00      	cmp	r5, #0
 8021bc0:	dd0c      	ble.n	8021bdc <_dtoa_r+0x754>
 8021bc2:	9b05      	ldr	r3, [sp, #20]
 8021bc4:	2b00      	cmp	r3, #0
 8021bc6:	dd09      	ble.n	8021bdc <_dtoa_r+0x754>
 8021bc8:	42ab      	cmp	r3, r5
 8021bca:	9a04      	ldr	r2, [sp, #16]
 8021bcc:	bfa8      	it	ge
 8021bce:	462b      	movge	r3, r5
 8021bd0:	1ad2      	subs	r2, r2, r3
 8021bd2:	9204      	str	r2, [sp, #16]
 8021bd4:	9a05      	ldr	r2, [sp, #20]
 8021bd6:	1aed      	subs	r5, r5, r3
 8021bd8:	1ad3      	subs	r3, r2, r3
 8021bda:	9305      	str	r3, [sp, #20]
 8021bdc:	9b07      	ldr	r3, [sp, #28]
 8021bde:	b31b      	cbz	r3, 8021c28 <_dtoa_r+0x7a0>
 8021be0:	9b08      	ldr	r3, [sp, #32]
 8021be2:	2b00      	cmp	r3, #0
 8021be4:	f000 80af 	beq.w	8021d46 <_dtoa_r+0x8be>
 8021be8:	2e00      	cmp	r6, #0
 8021bea:	dd13      	ble.n	8021c14 <_dtoa_r+0x78c>
 8021bec:	4639      	mov	r1, r7
 8021bee:	4632      	mov	r2, r6
 8021bf0:	4620      	mov	r0, r4
 8021bf2:	f001 f8ad 	bl	8022d50 <__pow5mult>
 8021bf6:	ee18 2a10 	vmov	r2, s16
 8021bfa:	4601      	mov	r1, r0
 8021bfc:	4607      	mov	r7, r0
 8021bfe:	4620      	mov	r0, r4
 8021c00:	f000 fffc 	bl	8022bfc <__multiply>
 8021c04:	ee18 1a10 	vmov	r1, s16
 8021c08:	4680      	mov	r8, r0
 8021c0a:	4620      	mov	r0, r4
 8021c0c:	f000 fede 	bl	80229cc <_Bfree>
 8021c10:	ee08 8a10 	vmov	s16, r8
 8021c14:	9b07      	ldr	r3, [sp, #28]
 8021c16:	1b9a      	subs	r2, r3, r6
 8021c18:	d006      	beq.n	8021c28 <_dtoa_r+0x7a0>
 8021c1a:	ee18 1a10 	vmov	r1, s16
 8021c1e:	4620      	mov	r0, r4
 8021c20:	f001 f896 	bl	8022d50 <__pow5mult>
 8021c24:	ee08 0a10 	vmov	s16, r0
 8021c28:	2101      	movs	r1, #1
 8021c2a:	4620      	mov	r0, r4
 8021c2c:	f000 ffd0 	bl	8022bd0 <__i2b>
 8021c30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021c32:	2b00      	cmp	r3, #0
 8021c34:	4606      	mov	r6, r0
 8021c36:	f340 8088 	ble.w	8021d4a <_dtoa_r+0x8c2>
 8021c3a:	461a      	mov	r2, r3
 8021c3c:	4601      	mov	r1, r0
 8021c3e:	4620      	mov	r0, r4
 8021c40:	f001 f886 	bl	8022d50 <__pow5mult>
 8021c44:	9b06      	ldr	r3, [sp, #24]
 8021c46:	2b01      	cmp	r3, #1
 8021c48:	4606      	mov	r6, r0
 8021c4a:	f340 8081 	ble.w	8021d50 <_dtoa_r+0x8c8>
 8021c4e:	f04f 0800 	mov.w	r8, #0
 8021c52:	6933      	ldr	r3, [r6, #16]
 8021c54:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8021c58:	6918      	ldr	r0, [r3, #16]
 8021c5a:	f000 ff69 	bl	8022b30 <__hi0bits>
 8021c5e:	f1c0 0020 	rsb	r0, r0, #32
 8021c62:	9b05      	ldr	r3, [sp, #20]
 8021c64:	4418      	add	r0, r3
 8021c66:	f010 001f 	ands.w	r0, r0, #31
 8021c6a:	f000 8092 	beq.w	8021d92 <_dtoa_r+0x90a>
 8021c6e:	f1c0 0320 	rsb	r3, r0, #32
 8021c72:	2b04      	cmp	r3, #4
 8021c74:	f340 808a 	ble.w	8021d8c <_dtoa_r+0x904>
 8021c78:	f1c0 001c 	rsb	r0, r0, #28
 8021c7c:	9b04      	ldr	r3, [sp, #16]
 8021c7e:	4403      	add	r3, r0
 8021c80:	9304      	str	r3, [sp, #16]
 8021c82:	9b05      	ldr	r3, [sp, #20]
 8021c84:	4403      	add	r3, r0
 8021c86:	4405      	add	r5, r0
 8021c88:	9305      	str	r3, [sp, #20]
 8021c8a:	9b04      	ldr	r3, [sp, #16]
 8021c8c:	2b00      	cmp	r3, #0
 8021c8e:	dd07      	ble.n	8021ca0 <_dtoa_r+0x818>
 8021c90:	ee18 1a10 	vmov	r1, s16
 8021c94:	461a      	mov	r2, r3
 8021c96:	4620      	mov	r0, r4
 8021c98:	f001 f8b4 	bl	8022e04 <__lshift>
 8021c9c:	ee08 0a10 	vmov	s16, r0
 8021ca0:	9b05      	ldr	r3, [sp, #20]
 8021ca2:	2b00      	cmp	r3, #0
 8021ca4:	dd05      	ble.n	8021cb2 <_dtoa_r+0x82a>
 8021ca6:	4631      	mov	r1, r6
 8021ca8:	461a      	mov	r2, r3
 8021caa:	4620      	mov	r0, r4
 8021cac:	f001 f8aa 	bl	8022e04 <__lshift>
 8021cb0:	4606      	mov	r6, r0
 8021cb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021cb4:	2b00      	cmp	r3, #0
 8021cb6:	d06e      	beq.n	8021d96 <_dtoa_r+0x90e>
 8021cb8:	ee18 0a10 	vmov	r0, s16
 8021cbc:	4631      	mov	r1, r6
 8021cbe:	f001 f911 	bl	8022ee4 <__mcmp>
 8021cc2:	2800      	cmp	r0, #0
 8021cc4:	da67      	bge.n	8021d96 <_dtoa_r+0x90e>
 8021cc6:	9b00      	ldr	r3, [sp, #0]
 8021cc8:	3b01      	subs	r3, #1
 8021cca:	ee18 1a10 	vmov	r1, s16
 8021cce:	9300      	str	r3, [sp, #0]
 8021cd0:	220a      	movs	r2, #10
 8021cd2:	2300      	movs	r3, #0
 8021cd4:	4620      	mov	r0, r4
 8021cd6:	f000 fe9b 	bl	8022a10 <__multadd>
 8021cda:	9b08      	ldr	r3, [sp, #32]
 8021cdc:	ee08 0a10 	vmov	s16, r0
 8021ce0:	2b00      	cmp	r3, #0
 8021ce2:	f000 81b1 	beq.w	8022048 <_dtoa_r+0xbc0>
 8021ce6:	2300      	movs	r3, #0
 8021ce8:	4639      	mov	r1, r7
 8021cea:	220a      	movs	r2, #10
 8021cec:	4620      	mov	r0, r4
 8021cee:	f000 fe8f 	bl	8022a10 <__multadd>
 8021cf2:	9b02      	ldr	r3, [sp, #8]
 8021cf4:	2b00      	cmp	r3, #0
 8021cf6:	4607      	mov	r7, r0
 8021cf8:	f300 808e 	bgt.w	8021e18 <_dtoa_r+0x990>
 8021cfc:	9b06      	ldr	r3, [sp, #24]
 8021cfe:	2b02      	cmp	r3, #2
 8021d00:	dc51      	bgt.n	8021da6 <_dtoa_r+0x91e>
 8021d02:	e089      	b.n	8021e18 <_dtoa_r+0x990>
 8021d04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021d06:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8021d0a:	e74b      	b.n	8021ba4 <_dtoa_r+0x71c>
 8021d0c:	9b03      	ldr	r3, [sp, #12]
 8021d0e:	1e5e      	subs	r6, r3, #1
 8021d10:	9b07      	ldr	r3, [sp, #28]
 8021d12:	42b3      	cmp	r3, r6
 8021d14:	bfbf      	itttt	lt
 8021d16:	9b07      	ldrlt	r3, [sp, #28]
 8021d18:	9607      	strlt	r6, [sp, #28]
 8021d1a:	1af2      	sublt	r2, r6, r3
 8021d1c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8021d1e:	bfb6      	itet	lt
 8021d20:	189b      	addlt	r3, r3, r2
 8021d22:	1b9e      	subge	r6, r3, r6
 8021d24:	930a      	strlt	r3, [sp, #40]	; 0x28
 8021d26:	9b03      	ldr	r3, [sp, #12]
 8021d28:	bfb8      	it	lt
 8021d2a:	2600      	movlt	r6, #0
 8021d2c:	2b00      	cmp	r3, #0
 8021d2e:	bfb7      	itett	lt
 8021d30:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8021d34:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8021d38:	1a9d      	sublt	r5, r3, r2
 8021d3a:	2300      	movlt	r3, #0
 8021d3c:	e734      	b.n	8021ba8 <_dtoa_r+0x720>
 8021d3e:	9e07      	ldr	r6, [sp, #28]
 8021d40:	9d04      	ldr	r5, [sp, #16]
 8021d42:	9f08      	ldr	r7, [sp, #32]
 8021d44:	e73b      	b.n	8021bbe <_dtoa_r+0x736>
 8021d46:	9a07      	ldr	r2, [sp, #28]
 8021d48:	e767      	b.n	8021c1a <_dtoa_r+0x792>
 8021d4a:	9b06      	ldr	r3, [sp, #24]
 8021d4c:	2b01      	cmp	r3, #1
 8021d4e:	dc18      	bgt.n	8021d82 <_dtoa_r+0x8fa>
 8021d50:	f1ba 0f00 	cmp.w	sl, #0
 8021d54:	d115      	bne.n	8021d82 <_dtoa_r+0x8fa>
 8021d56:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021d5a:	b993      	cbnz	r3, 8021d82 <_dtoa_r+0x8fa>
 8021d5c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8021d60:	0d1b      	lsrs	r3, r3, #20
 8021d62:	051b      	lsls	r3, r3, #20
 8021d64:	b183      	cbz	r3, 8021d88 <_dtoa_r+0x900>
 8021d66:	9b04      	ldr	r3, [sp, #16]
 8021d68:	3301      	adds	r3, #1
 8021d6a:	9304      	str	r3, [sp, #16]
 8021d6c:	9b05      	ldr	r3, [sp, #20]
 8021d6e:	3301      	adds	r3, #1
 8021d70:	9305      	str	r3, [sp, #20]
 8021d72:	f04f 0801 	mov.w	r8, #1
 8021d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d78:	2b00      	cmp	r3, #0
 8021d7a:	f47f af6a 	bne.w	8021c52 <_dtoa_r+0x7ca>
 8021d7e:	2001      	movs	r0, #1
 8021d80:	e76f      	b.n	8021c62 <_dtoa_r+0x7da>
 8021d82:	f04f 0800 	mov.w	r8, #0
 8021d86:	e7f6      	b.n	8021d76 <_dtoa_r+0x8ee>
 8021d88:	4698      	mov	r8, r3
 8021d8a:	e7f4      	b.n	8021d76 <_dtoa_r+0x8ee>
 8021d8c:	f43f af7d 	beq.w	8021c8a <_dtoa_r+0x802>
 8021d90:	4618      	mov	r0, r3
 8021d92:	301c      	adds	r0, #28
 8021d94:	e772      	b.n	8021c7c <_dtoa_r+0x7f4>
 8021d96:	9b03      	ldr	r3, [sp, #12]
 8021d98:	2b00      	cmp	r3, #0
 8021d9a:	dc37      	bgt.n	8021e0c <_dtoa_r+0x984>
 8021d9c:	9b06      	ldr	r3, [sp, #24]
 8021d9e:	2b02      	cmp	r3, #2
 8021da0:	dd34      	ble.n	8021e0c <_dtoa_r+0x984>
 8021da2:	9b03      	ldr	r3, [sp, #12]
 8021da4:	9302      	str	r3, [sp, #8]
 8021da6:	9b02      	ldr	r3, [sp, #8]
 8021da8:	b96b      	cbnz	r3, 8021dc6 <_dtoa_r+0x93e>
 8021daa:	4631      	mov	r1, r6
 8021dac:	2205      	movs	r2, #5
 8021dae:	4620      	mov	r0, r4
 8021db0:	f000 fe2e 	bl	8022a10 <__multadd>
 8021db4:	4601      	mov	r1, r0
 8021db6:	4606      	mov	r6, r0
 8021db8:	ee18 0a10 	vmov	r0, s16
 8021dbc:	f001 f892 	bl	8022ee4 <__mcmp>
 8021dc0:	2800      	cmp	r0, #0
 8021dc2:	f73f adbb 	bgt.w	802193c <_dtoa_r+0x4b4>
 8021dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021dc8:	9d01      	ldr	r5, [sp, #4]
 8021dca:	43db      	mvns	r3, r3
 8021dcc:	9300      	str	r3, [sp, #0]
 8021dce:	f04f 0800 	mov.w	r8, #0
 8021dd2:	4631      	mov	r1, r6
 8021dd4:	4620      	mov	r0, r4
 8021dd6:	f000 fdf9 	bl	80229cc <_Bfree>
 8021dda:	2f00      	cmp	r7, #0
 8021ddc:	f43f aea4 	beq.w	8021b28 <_dtoa_r+0x6a0>
 8021de0:	f1b8 0f00 	cmp.w	r8, #0
 8021de4:	d005      	beq.n	8021df2 <_dtoa_r+0x96a>
 8021de6:	45b8      	cmp	r8, r7
 8021de8:	d003      	beq.n	8021df2 <_dtoa_r+0x96a>
 8021dea:	4641      	mov	r1, r8
 8021dec:	4620      	mov	r0, r4
 8021dee:	f000 fded 	bl	80229cc <_Bfree>
 8021df2:	4639      	mov	r1, r7
 8021df4:	4620      	mov	r0, r4
 8021df6:	f000 fde9 	bl	80229cc <_Bfree>
 8021dfa:	e695      	b.n	8021b28 <_dtoa_r+0x6a0>
 8021dfc:	2600      	movs	r6, #0
 8021dfe:	4637      	mov	r7, r6
 8021e00:	e7e1      	b.n	8021dc6 <_dtoa_r+0x93e>
 8021e02:	9700      	str	r7, [sp, #0]
 8021e04:	4637      	mov	r7, r6
 8021e06:	e599      	b.n	802193c <_dtoa_r+0x4b4>
 8021e08:	40240000 	.word	0x40240000
 8021e0c:	9b08      	ldr	r3, [sp, #32]
 8021e0e:	2b00      	cmp	r3, #0
 8021e10:	f000 80ca 	beq.w	8021fa8 <_dtoa_r+0xb20>
 8021e14:	9b03      	ldr	r3, [sp, #12]
 8021e16:	9302      	str	r3, [sp, #8]
 8021e18:	2d00      	cmp	r5, #0
 8021e1a:	dd05      	ble.n	8021e28 <_dtoa_r+0x9a0>
 8021e1c:	4639      	mov	r1, r7
 8021e1e:	462a      	mov	r2, r5
 8021e20:	4620      	mov	r0, r4
 8021e22:	f000 ffef 	bl	8022e04 <__lshift>
 8021e26:	4607      	mov	r7, r0
 8021e28:	f1b8 0f00 	cmp.w	r8, #0
 8021e2c:	d05b      	beq.n	8021ee6 <_dtoa_r+0xa5e>
 8021e2e:	6879      	ldr	r1, [r7, #4]
 8021e30:	4620      	mov	r0, r4
 8021e32:	f000 fd8b 	bl	802294c <_Balloc>
 8021e36:	4605      	mov	r5, r0
 8021e38:	b928      	cbnz	r0, 8021e46 <_dtoa_r+0x9be>
 8021e3a:	4b87      	ldr	r3, [pc, #540]	; (8022058 <_dtoa_r+0xbd0>)
 8021e3c:	4602      	mov	r2, r0
 8021e3e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8021e42:	f7ff bb3b 	b.w	80214bc <_dtoa_r+0x34>
 8021e46:	693a      	ldr	r2, [r7, #16]
 8021e48:	3202      	adds	r2, #2
 8021e4a:	0092      	lsls	r2, r2, #2
 8021e4c:	f107 010c 	add.w	r1, r7, #12
 8021e50:	300c      	adds	r0, #12
 8021e52:	f7fd fb80 	bl	801f556 <memcpy>
 8021e56:	2201      	movs	r2, #1
 8021e58:	4629      	mov	r1, r5
 8021e5a:	4620      	mov	r0, r4
 8021e5c:	f000 ffd2 	bl	8022e04 <__lshift>
 8021e60:	9b01      	ldr	r3, [sp, #4]
 8021e62:	f103 0901 	add.w	r9, r3, #1
 8021e66:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8021e6a:	4413      	add	r3, r2
 8021e6c:	9305      	str	r3, [sp, #20]
 8021e6e:	f00a 0301 	and.w	r3, sl, #1
 8021e72:	46b8      	mov	r8, r7
 8021e74:	9304      	str	r3, [sp, #16]
 8021e76:	4607      	mov	r7, r0
 8021e78:	4631      	mov	r1, r6
 8021e7a:	ee18 0a10 	vmov	r0, s16
 8021e7e:	f7ff fa75 	bl	802136c <quorem>
 8021e82:	4641      	mov	r1, r8
 8021e84:	9002      	str	r0, [sp, #8]
 8021e86:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8021e8a:	ee18 0a10 	vmov	r0, s16
 8021e8e:	f001 f829 	bl	8022ee4 <__mcmp>
 8021e92:	463a      	mov	r2, r7
 8021e94:	9003      	str	r0, [sp, #12]
 8021e96:	4631      	mov	r1, r6
 8021e98:	4620      	mov	r0, r4
 8021e9a:	f001 f83f 	bl	8022f1c <__mdiff>
 8021e9e:	68c2      	ldr	r2, [r0, #12]
 8021ea0:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 8021ea4:	4605      	mov	r5, r0
 8021ea6:	bb02      	cbnz	r2, 8021eea <_dtoa_r+0xa62>
 8021ea8:	4601      	mov	r1, r0
 8021eaa:	ee18 0a10 	vmov	r0, s16
 8021eae:	f001 f819 	bl	8022ee4 <__mcmp>
 8021eb2:	4602      	mov	r2, r0
 8021eb4:	4629      	mov	r1, r5
 8021eb6:	4620      	mov	r0, r4
 8021eb8:	9207      	str	r2, [sp, #28]
 8021eba:	f000 fd87 	bl	80229cc <_Bfree>
 8021ebe:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8021ec2:	ea43 0102 	orr.w	r1, r3, r2
 8021ec6:	9b04      	ldr	r3, [sp, #16]
 8021ec8:	430b      	orrs	r3, r1
 8021eca:	464d      	mov	r5, r9
 8021ecc:	d10f      	bne.n	8021eee <_dtoa_r+0xa66>
 8021ece:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8021ed2:	d02a      	beq.n	8021f2a <_dtoa_r+0xaa2>
 8021ed4:	9b03      	ldr	r3, [sp, #12]
 8021ed6:	2b00      	cmp	r3, #0
 8021ed8:	dd02      	ble.n	8021ee0 <_dtoa_r+0xa58>
 8021eda:	9b02      	ldr	r3, [sp, #8]
 8021edc:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8021ee0:	f88b a000 	strb.w	sl, [fp]
 8021ee4:	e775      	b.n	8021dd2 <_dtoa_r+0x94a>
 8021ee6:	4638      	mov	r0, r7
 8021ee8:	e7ba      	b.n	8021e60 <_dtoa_r+0x9d8>
 8021eea:	2201      	movs	r2, #1
 8021eec:	e7e2      	b.n	8021eb4 <_dtoa_r+0xa2c>
 8021eee:	9b03      	ldr	r3, [sp, #12]
 8021ef0:	2b00      	cmp	r3, #0
 8021ef2:	db04      	blt.n	8021efe <_dtoa_r+0xa76>
 8021ef4:	9906      	ldr	r1, [sp, #24]
 8021ef6:	430b      	orrs	r3, r1
 8021ef8:	9904      	ldr	r1, [sp, #16]
 8021efa:	430b      	orrs	r3, r1
 8021efc:	d122      	bne.n	8021f44 <_dtoa_r+0xabc>
 8021efe:	2a00      	cmp	r2, #0
 8021f00:	ddee      	ble.n	8021ee0 <_dtoa_r+0xa58>
 8021f02:	ee18 1a10 	vmov	r1, s16
 8021f06:	2201      	movs	r2, #1
 8021f08:	4620      	mov	r0, r4
 8021f0a:	f000 ff7b 	bl	8022e04 <__lshift>
 8021f0e:	4631      	mov	r1, r6
 8021f10:	ee08 0a10 	vmov	s16, r0
 8021f14:	f000 ffe6 	bl	8022ee4 <__mcmp>
 8021f18:	2800      	cmp	r0, #0
 8021f1a:	dc03      	bgt.n	8021f24 <_dtoa_r+0xa9c>
 8021f1c:	d1e0      	bne.n	8021ee0 <_dtoa_r+0xa58>
 8021f1e:	f01a 0f01 	tst.w	sl, #1
 8021f22:	d0dd      	beq.n	8021ee0 <_dtoa_r+0xa58>
 8021f24:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8021f28:	d1d7      	bne.n	8021eda <_dtoa_r+0xa52>
 8021f2a:	2339      	movs	r3, #57	; 0x39
 8021f2c:	f88b 3000 	strb.w	r3, [fp]
 8021f30:	462b      	mov	r3, r5
 8021f32:	461d      	mov	r5, r3
 8021f34:	3b01      	subs	r3, #1
 8021f36:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8021f3a:	2a39      	cmp	r2, #57	; 0x39
 8021f3c:	d071      	beq.n	8022022 <_dtoa_r+0xb9a>
 8021f3e:	3201      	adds	r2, #1
 8021f40:	701a      	strb	r2, [r3, #0]
 8021f42:	e746      	b.n	8021dd2 <_dtoa_r+0x94a>
 8021f44:	2a00      	cmp	r2, #0
 8021f46:	dd07      	ble.n	8021f58 <_dtoa_r+0xad0>
 8021f48:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8021f4c:	d0ed      	beq.n	8021f2a <_dtoa_r+0xaa2>
 8021f4e:	f10a 0301 	add.w	r3, sl, #1
 8021f52:	f88b 3000 	strb.w	r3, [fp]
 8021f56:	e73c      	b.n	8021dd2 <_dtoa_r+0x94a>
 8021f58:	9b05      	ldr	r3, [sp, #20]
 8021f5a:	f809 ac01 	strb.w	sl, [r9, #-1]
 8021f5e:	4599      	cmp	r9, r3
 8021f60:	d047      	beq.n	8021ff2 <_dtoa_r+0xb6a>
 8021f62:	ee18 1a10 	vmov	r1, s16
 8021f66:	2300      	movs	r3, #0
 8021f68:	220a      	movs	r2, #10
 8021f6a:	4620      	mov	r0, r4
 8021f6c:	f000 fd50 	bl	8022a10 <__multadd>
 8021f70:	45b8      	cmp	r8, r7
 8021f72:	ee08 0a10 	vmov	s16, r0
 8021f76:	f04f 0300 	mov.w	r3, #0
 8021f7a:	f04f 020a 	mov.w	r2, #10
 8021f7e:	4641      	mov	r1, r8
 8021f80:	4620      	mov	r0, r4
 8021f82:	d106      	bne.n	8021f92 <_dtoa_r+0xb0a>
 8021f84:	f000 fd44 	bl	8022a10 <__multadd>
 8021f88:	4680      	mov	r8, r0
 8021f8a:	4607      	mov	r7, r0
 8021f8c:	f109 0901 	add.w	r9, r9, #1
 8021f90:	e772      	b.n	8021e78 <_dtoa_r+0x9f0>
 8021f92:	f000 fd3d 	bl	8022a10 <__multadd>
 8021f96:	4639      	mov	r1, r7
 8021f98:	4680      	mov	r8, r0
 8021f9a:	2300      	movs	r3, #0
 8021f9c:	220a      	movs	r2, #10
 8021f9e:	4620      	mov	r0, r4
 8021fa0:	f000 fd36 	bl	8022a10 <__multadd>
 8021fa4:	4607      	mov	r7, r0
 8021fa6:	e7f1      	b.n	8021f8c <_dtoa_r+0xb04>
 8021fa8:	9b03      	ldr	r3, [sp, #12]
 8021faa:	9302      	str	r3, [sp, #8]
 8021fac:	9d01      	ldr	r5, [sp, #4]
 8021fae:	ee18 0a10 	vmov	r0, s16
 8021fb2:	4631      	mov	r1, r6
 8021fb4:	f7ff f9da 	bl	802136c <quorem>
 8021fb8:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8021fbc:	9b01      	ldr	r3, [sp, #4]
 8021fbe:	f805 ab01 	strb.w	sl, [r5], #1
 8021fc2:	1aea      	subs	r2, r5, r3
 8021fc4:	9b02      	ldr	r3, [sp, #8]
 8021fc6:	4293      	cmp	r3, r2
 8021fc8:	dd09      	ble.n	8021fde <_dtoa_r+0xb56>
 8021fca:	ee18 1a10 	vmov	r1, s16
 8021fce:	2300      	movs	r3, #0
 8021fd0:	220a      	movs	r2, #10
 8021fd2:	4620      	mov	r0, r4
 8021fd4:	f000 fd1c 	bl	8022a10 <__multadd>
 8021fd8:	ee08 0a10 	vmov	s16, r0
 8021fdc:	e7e7      	b.n	8021fae <_dtoa_r+0xb26>
 8021fde:	9b02      	ldr	r3, [sp, #8]
 8021fe0:	2b00      	cmp	r3, #0
 8021fe2:	bfc8      	it	gt
 8021fe4:	461d      	movgt	r5, r3
 8021fe6:	9b01      	ldr	r3, [sp, #4]
 8021fe8:	bfd8      	it	le
 8021fea:	2501      	movle	r5, #1
 8021fec:	441d      	add	r5, r3
 8021fee:	f04f 0800 	mov.w	r8, #0
 8021ff2:	ee18 1a10 	vmov	r1, s16
 8021ff6:	2201      	movs	r2, #1
 8021ff8:	4620      	mov	r0, r4
 8021ffa:	f000 ff03 	bl	8022e04 <__lshift>
 8021ffe:	4631      	mov	r1, r6
 8022000:	ee08 0a10 	vmov	s16, r0
 8022004:	f000 ff6e 	bl	8022ee4 <__mcmp>
 8022008:	2800      	cmp	r0, #0
 802200a:	dc91      	bgt.n	8021f30 <_dtoa_r+0xaa8>
 802200c:	d102      	bne.n	8022014 <_dtoa_r+0xb8c>
 802200e:	f01a 0f01 	tst.w	sl, #1
 8022012:	d18d      	bne.n	8021f30 <_dtoa_r+0xaa8>
 8022014:	462b      	mov	r3, r5
 8022016:	461d      	mov	r5, r3
 8022018:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802201c:	2a30      	cmp	r2, #48	; 0x30
 802201e:	d0fa      	beq.n	8022016 <_dtoa_r+0xb8e>
 8022020:	e6d7      	b.n	8021dd2 <_dtoa_r+0x94a>
 8022022:	9a01      	ldr	r2, [sp, #4]
 8022024:	429a      	cmp	r2, r3
 8022026:	d184      	bne.n	8021f32 <_dtoa_r+0xaaa>
 8022028:	9b00      	ldr	r3, [sp, #0]
 802202a:	3301      	adds	r3, #1
 802202c:	9300      	str	r3, [sp, #0]
 802202e:	2331      	movs	r3, #49	; 0x31
 8022030:	7013      	strb	r3, [r2, #0]
 8022032:	e6ce      	b.n	8021dd2 <_dtoa_r+0x94a>
 8022034:	4b09      	ldr	r3, [pc, #36]	; (802205c <_dtoa_r+0xbd4>)
 8022036:	f7ff ba95 	b.w	8021564 <_dtoa_r+0xdc>
 802203a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802203c:	2b00      	cmp	r3, #0
 802203e:	f47f aa6e 	bne.w	802151e <_dtoa_r+0x96>
 8022042:	4b07      	ldr	r3, [pc, #28]	; (8022060 <_dtoa_r+0xbd8>)
 8022044:	f7ff ba8e 	b.w	8021564 <_dtoa_r+0xdc>
 8022048:	9b02      	ldr	r3, [sp, #8]
 802204a:	2b00      	cmp	r3, #0
 802204c:	dcae      	bgt.n	8021fac <_dtoa_r+0xb24>
 802204e:	9b06      	ldr	r3, [sp, #24]
 8022050:	2b02      	cmp	r3, #2
 8022052:	f73f aea8 	bgt.w	8021da6 <_dtoa_r+0x91e>
 8022056:	e7a9      	b.n	8021fac <_dtoa_r+0xb24>
 8022058:	08027138 	.word	0x08027138
 802205c:	08026f3c 	.word	0x08026f3c
 8022060:	080270b9 	.word	0x080270b9

08022064 <__errno>:
 8022064:	4b01      	ldr	r3, [pc, #4]	; (802206c <__errno+0x8>)
 8022066:	6818      	ldr	r0, [r3, #0]
 8022068:	4770      	bx	lr
 802206a:	bf00      	nop
 802206c:	20000150 	.word	0x20000150

08022070 <__sflush_r>:
 8022070:	898a      	ldrh	r2, [r1, #12]
 8022072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022076:	4605      	mov	r5, r0
 8022078:	0710      	lsls	r0, r2, #28
 802207a:	460c      	mov	r4, r1
 802207c:	d458      	bmi.n	8022130 <__sflush_r+0xc0>
 802207e:	684b      	ldr	r3, [r1, #4]
 8022080:	2b00      	cmp	r3, #0
 8022082:	dc05      	bgt.n	8022090 <__sflush_r+0x20>
 8022084:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8022086:	2b00      	cmp	r3, #0
 8022088:	dc02      	bgt.n	8022090 <__sflush_r+0x20>
 802208a:	2000      	movs	r0, #0
 802208c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022090:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022092:	2e00      	cmp	r6, #0
 8022094:	d0f9      	beq.n	802208a <__sflush_r+0x1a>
 8022096:	2300      	movs	r3, #0
 8022098:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802209c:	682f      	ldr	r7, [r5, #0]
 802209e:	602b      	str	r3, [r5, #0]
 80220a0:	d032      	beq.n	8022108 <__sflush_r+0x98>
 80220a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80220a4:	89a3      	ldrh	r3, [r4, #12]
 80220a6:	075a      	lsls	r2, r3, #29
 80220a8:	d505      	bpl.n	80220b6 <__sflush_r+0x46>
 80220aa:	6863      	ldr	r3, [r4, #4]
 80220ac:	1ac0      	subs	r0, r0, r3
 80220ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80220b0:	b10b      	cbz	r3, 80220b6 <__sflush_r+0x46>
 80220b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80220b4:	1ac0      	subs	r0, r0, r3
 80220b6:	2300      	movs	r3, #0
 80220b8:	4602      	mov	r2, r0
 80220ba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80220bc:	6a21      	ldr	r1, [r4, #32]
 80220be:	4628      	mov	r0, r5
 80220c0:	47b0      	blx	r6
 80220c2:	1c43      	adds	r3, r0, #1
 80220c4:	89a3      	ldrh	r3, [r4, #12]
 80220c6:	d106      	bne.n	80220d6 <__sflush_r+0x66>
 80220c8:	6829      	ldr	r1, [r5, #0]
 80220ca:	291d      	cmp	r1, #29
 80220cc:	d82c      	bhi.n	8022128 <__sflush_r+0xb8>
 80220ce:	4a2a      	ldr	r2, [pc, #168]	; (8022178 <__sflush_r+0x108>)
 80220d0:	40ca      	lsrs	r2, r1
 80220d2:	07d6      	lsls	r6, r2, #31
 80220d4:	d528      	bpl.n	8022128 <__sflush_r+0xb8>
 80220d6:	2200      	movs	r2, #0
 80220d8:	6062      	str	r2, [r4, #4]
 80220da:	04d9      	lsls	r1, r3, #19
 80220dc:	6922      	ldr	r2, [r4, #16]
 80220de:	6022      	str	r2, [r4, #0]
 80220e0:	d504      	bpl.n	80220ec <__sflush_r+0x7c>
 80220e2:	1c42      	adds	r2, r0, #1
 80220e4:	d101      	bne.n	80220ea <__sflush_r+0x7a>
 80220e6:	682b      	ldr	r3, [r5, #0]
 80220e8:	b903      	cbnz	r3, 80220ec <__sflush_r+0x7c>
 80220ea:	6560      	str	r0, [r4, #84]	; 0x54
 80220ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80220ee:	602f      	str	r7, [r5, #0]
 80220f0:	2900      	cmp	r1, #0
 80220f2:	d0ca      	beq.n	802208a <__sflush_r+0x1a>
 80220f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80220f8:	4299      	cmp	r1, r3
 80220fa:	d002      	beq.n	8022102 <__sflush_r+0x92>
 80220fc:	4628      	mov	r0, r5
 80220fe:	f001 f8fd 	bl	80232fc <_free_r>
 8022102:	2000      	movs	r0, #0
 8022104:	6360      	str	r0, [r4, #52]	; 0x34
 8022106:	e7c1      	b.n	802208c <__sflush_r+0x1c>
 8022108:	6a21      	ldr	r1, [r4, #32]
 802210a:	2301      	movs	r3, #1
 802210c:	4628      	mov	r0, r5
 802210e:	47b0      	blx	r6
 8022110:	1c41      	adds	r1, r0, #1
 8022112:	d1c7      	bne.n	80220a4 <__sflush_r+0x34>
 8022114:	682b      	ldr	r3, [r5, #0]
 8022116:	2b00      	cmp	r3, #0
 8022118:	d0c4      	beq.n	80220a4 <__sflush_r+0x34>
 802211a:	2b1d      	cmp	r3, #29
 802211c:	d001      	beq.n	8022122 <__sflush_r+0xb2>
 802211e:	2b16      	cmp	r3, #22
 8022120:	d101      	bne.n	8022126 <__sflush_r+0xb6>
 8022122:	602f      	str	r7, [r5, #0]
 8022124:	e7b1      	b.n	802208a <__sflush_r+0x1a>
 8022126:	89a3      	ldrh	r3, [r4, #12]
 8022128:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802212c:	81a3      	strh	r3, [r4, #12]
 802212e:	e7ad      	b.n	802208c <__sflush_r+0x1c>
 8022130:	690f      	ldr	r7, [r1, #16]
 8022132:	2f00      	cmp	r7, #0
 8022134:	d0a9      	beq.n	802208a <__sflush_r+0x1a>
 8022136:	0793      	lsls	r3, r2, #30
 8022138:	680e      	ldr	r6, [r1, #0]
 802213a:	bf08      	it	eq
 802213c:	694b      	ldreq	r3, [r1, #20]
 802213e:	600f      	str	r7, [r1, #0]
 8022140:	bf18      	it	ne
 8022142:	2300      	movne	r3, #0
 8022144:	eba6 0807 	sub.w	r8, r6, r7
 8022148:	608b      	str	r3, [r1, #8]
 802214a:	f1b8 0f00 	cmp.w	r8, #0
 802214e:	dd9c      	ble.n	802208a <__sflush_r+0x1a>
 8022150:	6a21      	ldr	r1, [r4, #32]
 8022152:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8022154:	4643      	mov	r3, r8
 8022156:	463a      	mov	r2, r7
 8022158:	4628      	mov	r0, r5
 802215a:	47b0      	blx	r6
 802215c:	2800      	cmp	r0, #0
 802215e:	dc06      	bgt.n	802216e <__sflush_r+0xfe>
 8022160:	89a3      	ldrh	r3, [r4, #12]
 8022162:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022166:	81a3      	strh	r3, [r4, #12]
 8022168:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802216c:	e78e      	b.n	802208c <__sflush_r+0x1c>
 802216e:	4407      	add	r7, r0
 8022170:	eba8 0800 	sub.w	r8, r8, r0
 8022174:	e7e9      	b.n	802214a <__sflush_r+0xda>
 8022176:	bf00      	nop
 8022178:	20400001 	.word	0x20400001

0802217c <_fflush_r>:
 802217c:	b538      	push	{r3, r4, r5, lr}
 802217e:	690b      	ldr	r3, [r1, #16]
 8022180:	4605      	mov	r5, r0
 8022182:	460c      	mov	r4, r1
 8022184:	b913      	cbnz	r3, 802218c <_fflush_r+0x10>
 8022186:	2500      	movs	r5, #0
 8022188:	4628      	mov	r0, r5
 802218a:	bd38      	pop	{r3, r4, r5, pc}
 802218c:	b118      	cbz	r0, 8022196 <_fflush_r+0x1a>
 802218e:	6983      	ldr	r3, [r0, #24]
 8022190:	b90b      	cbnz	r3, 8022196 <_fflush_r+0x1a>
 8022192:	f7fd f91b 	bl	801f3cc <__sinit>
 8022196:	4b14      	ldr	r3, [pc, #80]	; (80221e8 <_fflush_r+0x6c>)
 8022198:	429c      	cmp	r4, r3
 802219a:	d11b      	bne.n	80221d4 <_fflush_r+0x58>
 802219c:	686c      	ldr	r4, [r5, #4]
 802219e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80221a2:	2b00      	cmp	r3, #0
 80221a4:	d0ef      	beq.n	8022186 <_fflush_r+0xa>
 80221a6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80221a8:	07d0      	lsls	r0, r2, #31
 80221aa:	d404      	bmi.n	80221b6 <_fflush_r+0x3a>
 80221ac:	0599      	lsls	r1, r3, #22
 80221ae:	d402      	bmi.n	80221b6 <_fflush_r+0x3a>
 80221b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80221b2:	f7fd f9ce 	bl	801f552 <__retarget_lock_acquire_recursive>
 80221b6:	4628      	mov	r0, r5
 80221b8:	4621      	mov	r1, r4
 80221ba:	f7ff ff59 	bl	8022070 <__sflush_r>
 80221be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80221c0:	07da      	lsls	r2, r3, #31
 80221c2:	4605      	mov	r5, r0
 80221c4:	d4e0      	bmi.n	8022188 <_fflush_r+0xc>
 80221c6:	89a3      	ldrh	r3, [r4, #12]
 80221c8:	059b      	lsls	r3, r3, #22
 80221ca:	d4dd      	bmi.n	8022188 <_fflush_r+0xc>
 80221cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80221ce:	f7fd f9c1 	bl	801f554 <__retarget_lock_release_recursive>
 80221d2:	e7d9      	b.n	8022188 <_fflush_r+0xc>
 80221d4:	4b05      	ldr	r3, [pc, #20]	; (80221ec <_fflush_r+0x70>)
 80221d6:	429c      	cmp	r4, r3
 80221d8:	d101      	bne.n	80221de <_fflush_r+0x62>
 80221da:	68ac      	ldr	r4, [r5, #8]
 80221dc:	e7df      	b.n	802219e <_fflush_r+0x22>
 80221de:	4b04      	ldr	r3, [pc, #16]	; (80221f0 <_fflush_r+0x74>)
 80221e0:	429c      	cmp	r4, r3
 80221e2:	bf08      	it	eq
 80221e4:	68ec      	ldreq	r4, [r5, #12]
 80221e6:	e7da      	b.n	802219e <_fflush_r+0x22>
 80221e8:	08026ee8 	.word	0x08026ee8
 80221ec:	08026f08 	.word	0x08026f08
 80221f0:	08026ec8 	.word	0x08026ec8

080221f4 <rshift>:
 80221f4:	6903      	ldr	r3, [r0, #16]
 80221f6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80221fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80221fe:	ea4f 1261 	mov.w	r2, r1, asr #5
 8022202:	f100 0414 	add.w	r4, r0, #20
 8022206:	dd45      	ble.n	8022294 <rshift+0xa0>
 8022208:	f011 011f 	ands.w	r1, r1, #31
 802220c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8022210:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8022214:	d10c      	bne.n	8022230 <rshift+0x3c>
 8022216:	f100 0710 	add.w	r7, r0, #16
 802221a:	4629      	mov	r1, r5
 802221c:	42b1      	cmp	r1, r6
 802221e:	d334      	bcc.n	802228a <rshift+0x96>
 8022220:	1a9b      	subs	r3, r3, r2
 8022222:	009b      	lsls	r3, r3, #2
 8022224:	1eea      	subs	r2, r5, #3
 8022226:	4296      	cmp	r6, r2
 8022228:	bf38      	it	cc
 802222a:	2300      	movcc	r3, #0
 802222c:	4423      	add	r3, r4
 802222e:	e015      	b.n	802225c <rshift+0x68>
 8022230:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8022234:	f1c1 0820 	rsb	r8, r1, #32
 8022238:	40cf      	lsrs	r7, r1
 802223a:	f105 0e04 	add.w	lr, r5, #4
 802223e:	46a1      	mov	r9, r4
 8022240:	4576      	cmp	r6, lr
 8022242:	46f4      	mov	ip, lr
 8022244:	d815      	bhi.n	8022272 <rshift+0x7e>
 8022246:	1a9a      	subs	r2, r3, r2
 8022248:	0092      	lsls	r2, r2, #2
 802224a:	3a04      	subs	r2, #4
 802224c:	3501      	adds	r5, #1
 802224e:	42ae      	cmp	r6, r5
 8022250:	bf38      	it	cc
 8022252:	2200      	movcc	r2, #0
 8022254:	18a3      	adds	r3, r4, r2
 8022256:	50a7      	str	r7, [r4, r2]
 8022258:	b107      	cbz	r7, 802225c <rshift+0x68>
 802225a:	3304      	adds	r3, #4
 802225c:	1b1a      	subs	r2, r3, r4
 802225e:	42a3      	cmp	r3, r4
 8022260:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8022264:	bf08      	it	eq
 8022266:	2300      	moveq	r3, #0
 8022268:	6102      	str	r2, [r0, #16]
 802226a:	bf08      	it	eq
 802226c:	6143      	streq	r3, [r0, #20]
 802226e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022272:	f8dc c000 	ldr.w	ip, [ip]
 8022276:	fa0c fc08 	lsl.w	ip, ip, r8
 802227a:	ea4c 0707 	orr.w	r7, ip, r7
 802227e:	f849 7b04 	str.w	r7, [r9], #4
 8022282:	f85e 7b04 	ldr.w	r7, [lr], #4
 8022286:	40cf      	lsrs	r7, r1
 8022288:	e7da      	b.n	8022240 <rshift+0x4c>
 802228a:	f851 cb04 	ldr.w	ip, [r1], #4
 802228e:	f847 cf04 	str.w	ip, [r7, #4]!
 8022292:	e7c3      	b.n	802221c <rshift+0x28>
 8022294:	4623      	mov	r3, r4
 8022296:	e7e1      	b.n	802225c <rshift+0x68>

08022298 <__hexdig_fun>:
 8022298:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 802229c:	2b09      	cmp	r3, #9
 802229e:	d802      	bhi.n	80222a6 <__hexdig_fun+0xe>
 80222a0:	3820      	subs	r0, #32
 80222a2:	b2c0      	uxtb	r0, r0
 80222a4:	4770      	bx	lr
 80222a6:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80222aa:	2b05      	cmp	r3, #5
 80222ac:	d801      	bhi.n	80222b2 <__hexdig_fun+0x1a>
 80222ae:	3847      	subs	r0, #71	; 0x47
 80222b0:	e7f7      	b.n	80222a2 <__hexdig_fun+0xa>
 80222b2:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80222b6:	2b05      	cmp	r3, #5
 80222b8:	d801      	bhi.n	80222be <__hexdig_fun+0x26>
 80222ba:	3827      	subs	r0, #39	; 0x27
 80222bc:	e7f1      	b.n	80222a2 <__hexdig_fun+0xa>
 80222be:	2000      	movs	r0, #0
 80222c0:	4770      	bx	lr
	...

080222c4 <__gethex>:
 80222c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222c8:	ed2d 8b02 	vpush	{d8}
 80222cc:	b089      	sub	sp, #36	; 0x24
 80222ce:	ee08 0a10 	vmov	s16, r0
 80222d2:	9304      	str	r3, [sp, #16]
 80222d4:	4bb4      	ldr	r3, [pc, #720]	; (80225a8 <__gethex+0x2e4>)
 80222d6:	681b      	ldr	r3, [r3, #0]
 80222d8:	9301      	str	r3, [sp, #4]
 80222da:	4618      	mov	r0, r3
 80222dc:	468b      	mov	fp, r1
 80222de:	4690      	mov	r8, r2
 80222e0:	f7dd ff76 	bl	80001d0 <strlen>
 80222e4:	9b01      	ldr	r3, [sp, #4]
 80222e6:	f8db 2000 	ldr.w	r2, [fp]
 80222ea:	4403      	add	r3, r0
 80222ec:	4682      	mov	sl, r0
 80222ee:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80222f2:	9305      	str	r3, [sp, #20]
 80222f4:	1c93      	adds	r3, r2, #2
 80222f6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80222fa:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80222fe:	32fe      	adds	r2, #254	; 0xfe
 8022300:	18d1      	adds	r1, r2, r3
 8022302:	461f      	mov	r7, r3
 8022304:	f813 0b01 	ldrb.w	r0, [r3], #1
 8022308:	9100      	str	r1, [sp, #0]
 802230a:	2830      	cmp	r0, #48	; 0x30
 802230c:	d0f8      	beq.n	8022300 <__gethex+0x3c>
 802230e:	f7ff ffc3 	bl	8022298 <__hexdig_fun>
 8022312:	4604      	mov	r4, r0
 8022314:	2800      	cmp	r0, #0
 8022316:	d13a      	bne.n	802238e <__gethex+0xca>
 8022318:	9901      	ldr	r1, [sp, #4]
 802231a:	4652      	mov	r2, sl
 802231c:	4638      	mov	r0, r7
 802231e:	f001 f9af 	bl	8023680 <strncmp>
 8022322:	4605      	mov	r5, r0
 8022324:	2800      	cmp	r0, #0
 8022326:	d168      	bne.n	80223fa <__gethex+0x136>
 8022328:	f817 000a 	ldrb.w	r0, [r7, sl]
 802232c:	eb07 060a 	add.w	r6, r7, sl
 8022330:	f7ff ffb2 	bl	8022298 <__hexdig_fun>
 8022334:	2800      	cmp	r0, #0
 8022336:	d062      	beq.n	80223fe <__gethex+0x13a>
 8022338:	4633      	mov	r3, r6
 802233a:	7818      	ldrb	r0, [r3, #0]
 802233c:	2830      	cmp	r0, #48	; 0x30
 802233e:	461f      	mov	r7, r3
 8022340:	f103 0301 	add.w	r3, r3, #1
 8022344:	d0f9      	beq.n	802233a <__gethex+0x76>
 8022346:	f7ff ffa7 	bl	8022298 <__hexdig_fun>
 802234a:	2301      	movs	r3, #1
 802234c:	fab0 f480 	clz	r4, r0
 8022350:	0964      	lsrs	r4, r4, #5
 8022352:	4635      	mov	r5, r6
 8022354:	9300      	str	r3, [sp, #0]
 8022356:	463a      	mov	r2, r7
 8022358:	4616      	mov	r6, r2
 802235a:	3201      	adds	r2, #1
 802235c:	7830      	ldrb	r0, [r6, #0]
 802235e:	f7ff ff9b 	bl	8022298 <__hexdig_fun>
 8022362:	2800      	cmp	r0, #0
 8022364:	d1f8      	bne.n	8022358 <__gethex+0x94>
 8022366:	9901      	ldr	r1, [sp, #4]
 8022368:	4652      	mov	r2, sl
 802236a:	4630      	mov	r0, r6
 802236c:	f001 f988 	bl	8023680 <strncmp>
 8022370:	b980      	cbnz	r0, 8022394 <__gethex+0xd0>
 8022372:	b94d      	cbnz	r5, 8022388 <__gethex+0xc4>
 8022374:	eb06 050a 	add.w	r5, r6, sl
 8022378:	462a      	mov	r2, r5
 802237a:	4616      	mov	r6, r2
 802237c:	3201      	adds	r2, #1
 802237e:	7830      	ldrb	r0, [r6, #0]
 8022380:	f7ff ff8a 	bl	8022298 <__hexdig_fun>
 8022384:	2800      	cmp	r0, #0
 8022386:	d1f8      	bne.n	802237a <__gethex+0xb6>
 8022388:	1bad      	subs	r5, r5, r6
 802238a:	00ad      	lsls	r5, r5, #2
 802238c:	e004      	b.n	8022398 <__gethex+0xd4>
 802238e:	2400      	movs	r4, #0
 8022390:	4625      	mov	r5, r4
 8022392:	e7e0      	b.n	8022356 <__gethex+0x92>
 8022394:	2d00      	cmp	r5, #0
 8022396:	d1f7      	bne.n	8022388 <__gethex+0xc4>
 8022398:	7833      	ldrb	r3, [r6, #0]
 802239a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802239e:	2b50      	cmp	r3, #80	; 0x50
 80223a0:	d13b      	bne.n	802241a <__gethex+0x156>
 80223a2:	7873      	ldrb	r3, [r6, #1]
 80223a4:	2b2b      	cmp	r3, #43	; 0x2b
 80223a6:	d02c      	beq.n	8022402 <__gethex+0x13e>
 80223a8:	2b2d      	cmp	r3, #45	; 0x2d
 80223aa:	d02e      	beq.n	802240a <__gethex+0x146>
 80223ac:	1c71      	adds	r1, r6, #1
 80223ae:	f04f 0900 	mov.w	r9, #0
 80223b2:	7808      	ldrb	r0, [r1, #0]
 80223b4:	f7ff ff70 	bl	8022298 <__hexdig_fun>
 80223b8:	1e43      	subs	r3, r0, #1
 80223ba:	b2db      	uxtb	r3, r3
 80223bc:	2b18      	cmp	r3, #24
 80223be:	d82c      	bhi.n	802241a <__gethex+0x156>
 80223c0:	f1a0 0210 	sub.w	r2, r0, #16
 80223c4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80223c8:	f7ff ff66 	bl	8022298 <__hexdig_fun>
 80223cc:	1e43      	subs	r3, r0, #1
 80223ce:	b2db      	uxtb	r3, r3
 80223d0:	2b18      	cmp	r3, #24
 80223d2:	d91d      	bls.n	8022410 <__gethex+0x14c>
 80223d4:	f1b9 0f00 	cmp.w	r9, #0
 80223d8:	d000      	beq.n	80223dc <__gethex+0x118>
 80223da:	4252      	negs	r2, r2
 80223dc:	4415      	add	r5, r2
 80223de:	f8cb 1000 	str.w	r1, [fp]
 80223e2:	b1e4      	cbz	r4, 802241e <__gethex+0x15a>
 80223e4:	9b00      	ldr	r3, [sp, #0]
 80223e6:	2b00      	cmp	r3, #0
 80223e8:	bf14      	ite	ne
 80223ea:	2700      	movne	r7, #0
 80223ec:	2706      	moveq	r7, #6
 80223ee:	4638      	mov	r0, r7
 80223f0:	b009      	add	sp, #36	; 0x24
 80223f2:	ecbd 8b02 	vpop	{d8}
 80223f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223fa:	463e      	mov	r6, r7
 80223fc:	4625      	mov	r5, r4
 80223fe:	2401      	movs	r4, #1
 8022400:	e7ca      	b.n	8022398 <__gethex+0xd4>
 8022402:	f04f 0900 	mov.w	r9, #0
 8022406:	1cb1      	adds	r1, r6, #2
 8022408:	e7d3      	b.n	80223b2 <__gethex+0xee>
 802240a:	f04f 0901 	mov.w	r9, #1
 802240e:	e7fa      	b.n	8022406 <__gethex+0x142>
 8022410:	230a      	movs	r3, #10
 8022412:	fb03 0202 	mla	r2, r3, r2, r0
 8022416:	3a10      	subs	r2, #16
 8022418:	e7d4      	b.n	80223c4 <__gethex+0x100>
 802241a:	4631      	mov	r1, r6
 802241c:	e7df      	b.n	80223de <__gethex+0x11a>
 802241e:	1bf3      	subs	r3, r6, r7
 8022420:	3b01      	subs	r3, #1
 8022422:	4621      	mov	r1, r4
 8022424:	2b07      	cmp	r3, #7
 8022426:	dc0b      	bgt.n	8022440 <__gethex+0x17c>
 8022428:	ee18 0a10 	vmov	r0, s16
 802242c:	f000 fa8e 	bl	802294c <_Balloc>
 8022430:	4604      	mov	r4, r0
 8022432:	b940      	cbnz	r0, 8022446 <__gethex+0x182>
 8022434:	4b5d      	ldr	r3, [pc, #372]	; (80225ac <__gethex+0x2e8>)
 8022436:	4602      	mov	r2, r0
 8022438:	21de      	movs	r1, #222	; 0xde
 802243a:	485d      	ldr	r0, [pc, #372]	; (80225b0 <__gethex+0x2ec>)
 802243c:	f001 f942 	bl	80236c4 <__assert_func>
 8022440:	3101      	adds	r1, #1
 8022442:	105b      	asrs	r3, r3, #1
 8022444:	e7ee      	b.n	8022424 <__gethex+0x160>
 8022446:	f100 0914 	add.w	r9, r0, #20
 802244a:	f04f 0b00 	mov.w	fp, #0
 802244e:	f1ca 0301 	rsb	r3, sl, #1
 8022452:	f8cd 9008 	str.w	r9, [sp, #8]
 8022456:	f8cd b000 	str.w	fp, [sp]
 802245a:	9306      	str	r3, [sp, #24]
 802245c:	42b7      	cmp	r7, r6
 802245e:	d340      	bcc.n	80224e2 <__gethex+0x21e>
 8022460:	9802      	ldr	r0, [sp, #8]
 8022462:	9b00      	ldr	r3, [sp, #0]
 8022464:	f840 3b04 	str.w	r3, [r0], #4
 8022468:	eba0 0009 	sub.w	r0, r0, r9
 802246c:	1080      	asrs	r0, r0, #2
 802246e:	0146      	lsls	r6, r0, #5
 8022470:	6120      	str	r0, [r4, #16]
 8022472:	4618      	mov	r0, r3
 8022474:	f000 fb5c 	bl	8022b30 <__hi0bits>
 8022478:	1a30      	subs	r0, r6, r0
 802247a:	f8d8 6000 	ldr.w	r6, [r8]
 802247e:	42b0      	cmp	r0, r6
 8022480:	dd63      	ble.n	802254a <__gethex+0x286>
 8022482:	1b87      	subs	r7, r0, r6
 8022484:	4639      	mov	r1, r7
 8022486:	4620      	mov	r0, r4
 8022488:	f000 ff00 	bl	802328c <__any_on>
 802248c:	4682      	mov	sl, r0
 802248e:	b1a8      	cbz	r0, 80224bc <__gethex+0x1f8>
 8022490:	1e7b      	subs	r3, r7, #1
 8022492:	1159      	asrs	r1, r3, #5
 8022494:	f003 021f 	and.w	r2, r3, #31
 8022498:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 802249c:	f04f 0a01 	mov.w	sl, #1
 80224a0:	fa0a f202 	lsl.w	r2, sl, r2
 80224a4:	420a      	tst	r2, r1
 80224a6:	d009      	beq.n	80224bc <__gethex+0x1f8>
 80224a8:	4553      	cmp	r3, sl
 80224aa:	dd05      	ble.n	80224b8 <__gethex+0x1f4>
 80224ac:	1eb9      	subs	r1, r7, #2
 80224ae:	4620      	mov	r0, r4
 80224b0:	f000 feec 	bl	802328c <__any_on>
 80224b4:	2800      	cmp	r0, #0
 80224b6:	d145      	bne.n	8022544 <__gethex+0x280>
 80224b8:	f04f 0a02 	mov.w	sl, #2
 80224bc:	4639      	mov	r1, r7
 80224be:	4620      	mov	r0, r4
 80224c0:	f7ff fe98 	bl	80221f4 <rshift>
 80224c4:	443d      	add	r5, r7
 80224c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80224ca:	42ab      	cmp	r3, r5
 80224cc:	da4c      	bge.n	8022568 <__gethex+0x2a4>
 80224ce:	ee18 0a10 	vmov	r0, s16
 80224d2:	4621      	mov	r1, r4
 80224d4:	f000 fa7a 	bl	80229cc <_Bfree>
 80224d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80224da:	2300      	movs	r3, #0
 80224dc:	6013      	str	r3, [r2, #0]
 80224de:	27a3      	movs	r7, #163	; 0xa3
 80224e0:	e785      	b.n	80223ee <__gethex+0x12a>
 80224e2:	1e73      	subs	r3, r6, #1
 80224e4:	9a05      	ldr	r2, [sp, #20]
 80224e6:	9303      	str	r3, [sp, #12]
 80224e8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80224ec:	4293      	cmp	r3, r2
 80224ee:	d019      	beq.n	8022524 <__gethex+0x260>
 80224f0:	f1bb 0f20 	cmp.w	fp, #32
 80224f4:	d107      	bne.n	8022506 <__gethex+0x242>
 80224f6:	9b02      	ldr	r3, [sp, #8]
 80224f8:	9a00      	ldr	r2, [sp, #0]
 80224fa:	f843 2b04 	str.w	r2, [r3], #4
 80224fe:	9302      	str	r3, [sp, #8]
 8022500:	2300      	movs	r3, #0
 8022502:	9300      	str	r3, [sp, #0]
 8022504:	469b      	mov	fp, r3
 8022506:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 802250a:	f7ff fec5 	bl	8022298 <__hexdig_fun>
 802250e:	9b00      	ldr	r3, [sp, #0]
 8022510:	f000 000f 	and.w	r0, r0, #15
 8022514:	fa00 f00b 	lsl.w	r0, r0, fp
 8022518:	4303      	orrs	r3, r0
 802251a:	9300      	str	r3, [sp, #0]
 802251c:	f10b 0b04 	add.w	fp, fp, #4
 8022520:	9b03      	ldr	r3, [sp, #12]
 8022522:	e00d      	b.n	8022540 <__gethex+0x27c>
 8022524:	9b03      	ldr	r3, [sp, #12]
 8022526:	9a06      	ldr	r2, [sp, #24]
 8022528:	4413      	add	r3, r2
 802252a:	42bb      	cmp	r3, r7
 802252c:	d3e0      	bcc.n	80224f0 <__gethex+0x22c>
 802252e:	4618      	mov	r0, r3
 8022530:	9901      	ldr	r1, [sp, #4]
 8022532:	9307      	str	r3, [sp, #28]
 8022534:	4652      	mov	r2, sl
 8022536:	f001 f8a3 	bl	8023680 <strncmp>
 802253a:	9b07      	ldr	r3, [sp, #28]
 802253c:	2800      	cmp	r0, #0
 802253e:	d1d7      	bne.n	80224f0 <__gethex+0x22c>
 8022540:	461e      	mov	r6, r3
 8022542:	e78b      	b.n	802245c <__gethex+0x198>
 8022544:	f04f 0a03 	mov.w	sl, #3
 8022548:	e7b8      	b.n	80224bc <__gethex+0x1f8>
 802254a:	da0a      	bge.n	8022562 <__gethex+0x29e>
 802254c:	1a37      	subs	r7, r6, r0
 802254e:	4621      	mov	r1, r4
 8022550:	ee18 0a10 	vmov	r0, s16
 8022554:	463a      	mov	r2, r7
 8022556:	f000 fc55 	bl	8022e04 <__lshift>
 802255a:	1bed      	subs	r5, r5, r7
 802255c:	4604      	mov	r4, r0
 802255e:	f100 0914 	add.w	r9, r0, #20
 8022562:	f04f 0a00 	mov.w	sl, #0
 8022566:	e7ae      	b.n	80224c6 <__gethex+0x202>
 8022568:	f8d8 0004 	ldr.w	r0, [r8, #4]
 802256c:	42a8      	cmp	r0, r5
 802256e:	dd72      	ble.n	8022656 <__gethex+0x392>
 8022570:	1b45      	subs	r5, r0, r5
 8022572:	42ae      	cmp	r6, r5
 8022574:	dc36      	bgt.n	80225e4 <__gethex+0x320>
 8022576:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802257a:	2b02      	cmp	r3, #2
 802257c:	d02a      	beq.n	80225d4 <__gethex+0x310>
 802257e:	2b03      	cmp	r3, #3
 8022580:	d02c      	beq.n	80225dc <__gethex+0x318>
 8022582:	2b01      	cmp	r3, #1
 8022584:	d11c      	bne.n	80225c0 <__gethex+0x2fc>
 8022586:	42ae      	cmp	r6, r5
 8022588:	d11a      	bne.n	80225c0 <__gethex+0x2fc>
 802258a:	2e01      	cmp	r6, #1
 802258c:	d112      	bne.n	80225b4 <__gethex+0x2f0>
 802258e:	9a04      	ldr	r2, [sp, #16]
 8022590:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8022594:	6013      	str	r3, [r2, #0]
 8022596:	2301      	movs	r3, #1
 8022598:	6123      	str	r3, [r4, #16]
 802259a:	f8c9 3000 	str.w	r3, [r9]
 802259e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80225a0:	2762      	movs	r7, #98	; 0x62
 80225a2:	601c      	str	r4, [r3, #0]
 80225a4:	e723      	b.n	80223ee <__gethex+0x12a>
 80225a6:	bf00      	nop
 80225a8:	080271b0 	.word	0x080271b0
 80225ac:	08027138 	.word	0x08027138
 80225b0:	08027149 	.word	0x08027149
 80225b4:	1e71      	subs	r1, r6, #1
 80225b6:	4620      	mov	r0, r4
 80225b8:	f000 fe68 	bl	802328c <__any_on>
 80225bc:	2800      	cmp	r0, #0
 80225be:	d1e6      	bne.n	802258e <__gethex+0x2ca>
 80225c0:	ee18 0a10 	vmov	r0, s16
 80225c4:	4621      	mov	r1, r4
 80225c6:	f000 fa01 	bl	80229cc <_Bfree>
 80225ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80225cc:	2300      	movs	r3, #0
 80225ce:	6013      	str	r3, [r2, #0]
 80225d0:	2750      	movs	r7, #80	; 0x50
 80225d2:	e70c      	b.n	80223ee <__gethex+0x12a>
 80225d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80225d6:	2b00      	cmp	r3, #0
 80225d8:	d1f2      	bne.n	80225c0 <__gethex+0x2fc>
 80225da:	e7d8      	b.n	802258e <__gethex+0x2ca>
 80225dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80225de:	2b00      	cmp	r3, #0
 80225e0:	d1d5      	bne.n	802258e <__gethex+0x2ca>
 80225e2:	e7ed      	b.n	80225c0 <__gethex+0x2fc>
 80225e4:	1e6f      	subs	r7, r5, #1
 80225e6:	f1ba 0f00 	cmp.w	sl, #0
 80225ea:	d131      	bne.n	8022650 <__gethex+0x38c>
 80225ec:	b127      	cbz	r7, 80225f8 <__gethex+0x334>
 80225ee:	4639      	mov	r1, r7
 80225f0:	4620      	mov	r0, r4
 80225f2:	f000 fe4b 	bl	802328c <__any_on>
 80225f6:	4682      	mov	sl, r0
 80225f8:	117b      	asrs	r3, r7, #5
 80225fa:	2101      	movs	r1, #1
 80225fc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8022600:	f007 071f 	and.w	r7, r7, #31
 8022604:	fa01 f707 	lsl.w	r7, r1, r7
 8022608:	421f      	tst	r7, r3
 802260a:	4629      	mov	r1, r5
 802260c:	4620      	mov	r0, r4
 802260e:	bf18      	it	ne
 8022610:	f04a 0a02 	orrne.w	sl, sl, #2
 8022614:	1b76      	subs	r6, r6, r5
 8022616:	f7ff fded 	bl	80221f4 <rshift>
 802261a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802261e:	2702      	movs	r7, #2
 8022620:	f1ba 0f00 	cmp.w	sl, #0
 8022624:	d048      	beq.n	80226b8 <__gethex+0x3f4>
 8022626:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802262a:	2b02      	cmp	r3, #2
 802262c:	d015      	beq.n	802265a <__gethex+0x396>
 802262e:	2b03      	cmp	r3, #3
 8022630:	d017      	beq.n	8022662 <__gethex+0x39e>
 8022632:	2b01      	cmp	r3, #1
 8022634:	d109      	bne.n	802264a <__gethex+0x386>
 8022636:	f01a 0f02 	tst.w	sl, #2
 802263a:	d006      	beq.n	802264a <__gethex+0x386>
 802263c:	f8d9 0000 	ldr.w	r0, [r9]
 8022640:	ea4a 0a00 	orr.w	sl, sl, r0
 8022644:	f01a 0f01 	tst.w	sl, #1
 8022648:	d10e      	bne.n	8022668 <__gethex+0x3a4>
 802264a:	f047 0710 	orr.w	r7, r7, #16
 802264e:	e033      	b.n	80226b8 <__gethex+0x3f4>
 8022650:	f04f 0a01 	mov.w	sl, #1
 8022654:	e7d0      	b.n	80225f8 <__gethex+0x334>
 8022656:	2701      	movs	r7, #1
 8022658:	e7e2      	b.n	8022620 <__gethex+0x35c>
 802265a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802265c:	f1c3 0301 	rsb	r3, r3, #1
 8022660:	9315      	str	r3, [sp, #84]	; 0x54
 8022662:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022664:	2b00      	cmp	r3, #0
 8022666:	d0f0      	beq.n	802264a <__gethex+0x386>
 8022668:	f8d4 b010 	ldr.w	fp, [r4, #16]
 802266c:	f104 0314 	add.w	r3, r4, #20
 8022670:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8022674:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8022678:	f04f 0c00 	mov.w	ip, #0
 802267c:	4618      	mov	r0, r3
 802267e:	f853 2b04 	ldr.w	r2, [r3], #4
 8022682:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8022686:	d01c      	beq.n	80226c2 <__gethex+0x3fe>
 8022688:	3201      	adds	r2, #1
 802268a:	6002      	str	r2, [r0, #0]
 802268c:	2f02      	cmp	r7, #2
 802268e:	f104 0314 	add.w	r3, r4, #20
 8022692:	d13f      	bne.n	8022714 <__gethex+0x450>
 8022694:	f8d8 2000 	ldr.w	r2, [r8]
 8022698:	3a01      	subs	r2, #1
 802269a:	42b2      	cmp	r2, r6
 802269c:	d10a      	bne.n	80226b4 <__gethex+0x3f0>
 802269e:	1171      	asrs	r1, r6, #5
 80226a0:	2201      	movs	r2, #1
 80226a2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80226a6:	f006 061f 	and.w	r6, r6, #31
 80226aa:	fa02 f606 	lsl.w	r6, r2, r6
 80226ae:	421e      	tst	r6, r3
 80226b0:	bf18      	it	ne
 80226b2:	4617      	movne	r7, r2
 80226b4:	f047 0720 	orr.w	r7, r7, #32
 80226b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80226ba:	601c      	str	r4, [r3, #0]
 80226bc:	9b04      	ldr	r3, [sp, #16]
 80226be:	601d      	str	r5, [r3, #0]
 80226c0:	e695      	b.n	80223ee <__gethex+0x12a>
 80226c2:	4299      	cmp	r1, r3
 80226c4:	f843 cc04 	str.w	ip, [r3, #-4]
 80226c8:	d8d8      	bhi.n	802267c <__gethex+0x3b8>
 80226ca:	68a3      	ldr	r3, [r4, #8]
 80226cc:	459b      	cmp	fp, r3
 80226ce:	db19      	blt.n	8022704 <__gethex+0x440>
 80226d0:	6861      	ldr	r1, [r4, #4]
 80226d2:	ee18 0a10 	vmov	r0, s16
 80226d6:	3101      	adds	r1, #1
 80226d8:	f000 f938 	bl	802294c <_Balloc>
 80226dc:	4681      	mov	r9, r0
 80226de:	b918      	cbnz	r0, 80226e8 <__gethex+0x424>
 80226e0:	4b1a      	ldr	r3, [pc, #104]	; (802274c <__gethex+0x488>)
 80226e2:	4602      	mov	r2, r0
 80226e4:	2184      	movs	r1, #132	; 0x84
 80226e6:	e6a8      	b.n	802243a <__gethex+0x176>
 80226e8:	6922      	ldr	r2, [r4, #16]
 80226ea:	3202      	adds	r2, #2
 80226ec:	f104 010c 	add.w	r1, r4, #12
 80226f0:	0092      	lsls	r2, r2, #2
 80226f2:	300c      	adds	r0, #12
 80226f4:	f7fc ff2f 	bl	801f556 <memcpy>
 80226f8:	4621      	mov	r1, r4
 80226fa:	ee18 0a10 	vmov	r0, s16
 80226fe:	f000 f965 	bl	80229cc <_Bfree>
 8022702:	464c      	mov	r4, r9
 8022704:	6923      	ldr	r3, [r4, #16]
 8022706:	1c5a      	adds	r2, r3, #1
 8022708:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 802270c:	6122      	str	r2, [r4, #16]
 802270e:	2201      	movs	r2, #1
 8022710:	615a      	str	r2, [r3, #20]
 8022712:	e7bb      	b.n	802268c <__gethex+0x3c8>
 8022714:	6922      	ldr	r2, [r4, #16]
 8022716:	455a      	cmp	r2, fp
 8022718:	dd0b      	ble.n	8022732 <__gethex+0x46e>
 802271a:	2101      	movs	r1, #1
 802271c:	4620      	mov	r0, r4
 802271e:	f7ff fd69 	bl	80221f4 <rshift>
 8022722:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8022726:	3501      	adds	r5, #1
 8022728:	42ab      	cmp	r3, r5
 802272a:	f6ff aed0 	blt.w	80224ce <__gethex+0x20a>
 802272e:	2701      	movs	r7, #1
 8022730:	e7c0      	b.n	80226b4 <__gethex+0x3f0>
 8022732:	f016 061f 	ands.w	r6, r6, #31
 8022736:	d0fa      	beq.n	802272e <__gethex+0x46a>
 8022738:	4453      	add	r3, sl
 802273a:	f1c6 0620 	rsb	r6, r6, #32
 802273e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8022742:	f000 f9f5 	bl	8022b30 <__hi0bits>
 8022746:	42b0      	cmp	r0, r6
 8022748:	dbe7      	blt.n	802271a <__gethex+0x456>
 802274a:	e7f0      	b.n	802272e <__gethex+0x46a>
 802274c:	08027138 	.word	0x08027138

08022750 <L_shift>:
 8022750:	f1c2 0208 	rsb	r2, r2, #8
 8022754:	0092      	lsls	r2, r2, #2
 8022756:	b570      	push	{r4, r5, r6, lr}
 8022758:	f1c2 0620 	rsb	r6, r2, #32
 802275c:	6843      	ldr	r3, [r0, #4]
 802275e:	6804      	ldr	r4, [r0, #0]
 8022760:	fa03 f506 	lsl.w	r5, r3, r6
 8022764:	432c      	orrs	r4, r5
 8022766:	40d3      	lsrs	r3, r2
 8022768:	6004      	str	r4, [r0, #0]
 802276a:	f840 3f04 	str.w	r3, [r0, #4]!
 802276e:	4288      	cmp	r0, r1
 8022770:	d3f4      	bcc.n	802275c <L_shift+0xc>
 8022772:	bd70      	pop	{r4, r5, r6, pc}

08022774 <__match>:
 8022774:	b530      	push	{r4, r5, lr}
 8022776:	6803      	ldr	r3, [r0, #0]
 8022778:	3301      	adds	r3, #1
 802277a:	f811 4b01 	ldrb.w	r4, [r1], #1
 802277e:	b914      	cbnz	r4, 8022786 <__match+0x12>
 8022780:	6003      	str	r3, [r0, #0]
 8022782:	2001      	movs	r0, #1
 8022784:	bd30      	pop	{r4, r5, pc}
 8022786:	f813 2b01 	ldrb.w	r2, [r3], #1
 802278a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 802278e:	2d19      	cmp	r5, #25
 8022790:	bf98      	it	ls
 8022792:	3220      	addls	r2, #32
 8022794:	42a2      	cmp	r2, r4
 8022796:	d0f0      	beq.n	802277a <__match+0x6>
 8022798:	2000      	movs	r0, #0
 802279a:	e7f3      	b.n	8022784 <__match+0x10>

0802279c <__hexnan>:
 802279c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227a0:	680b      	ldr	r3, [r1, #0]
 80227a2:	115e      	asrs	r6, r3, #5
 80227a4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80227a8:	f013 031f 	ands.w	r3, r3, #31
 80227ac:	b087      	sub	sp, #28
 80227ae:	bf18      	it	ne
 80227b0:	3604      	addne	r6, #4
 80227b2:	2500      	movs	r5, #0
 80227b4:	1f37      	subs	r7, r6, #4
 80227b6:	4690      	mov	r8, r2
 80227b8:	6802      	ldr	r2, [r0, #0]
 80227ba:	9301      	str	r3, [sp, #4]
 80227bc:	4682      	mov	sl, r0
 80227be:	f846 5c04 	str.w	r5, [r6, #-4]
 80227c2:	46b9      	mov	r9, r7
 80227c4:	463c      	mov	r4, r7
 80227c6:	9502      	str	r5, [sp, #8]
 80227c8:	46ab      	mov	fp, r5
 80227ca:	7851      	ldrb	r1, [r2, #1]
 80227cc:	1c53      	adds	r3, r2, #1
 80227ce:	9303      	str	r3, [sp, #12]
 80227d0:	b341      	cbz	r1, 8022824 <__hexnan+0x88>
 80227d2:	4608      	mov	r0, r1
 80227d4:	9205      	str	r2, [sp, #20]
 80227d6:	9104      	str	r1, [sp, #16]
 80227d8:	f7ff fd5e 	bl	8022298 <__hexdig_fun>
 80227dc:	2800      	cmp	r0, #0
 80227de:	d14f      	bne.n	8022880 <__hexnan+0xe4>
 80227e0:	9904      	ldr	r1, [sp, #16]
 80227e2:	9a05      	ldr	r2, [sp, #20]
 80227e4:	2920      	cmp	r1, #32
 80227e6:	d818      	bhi.n	802281a <__hexnan+0x7e>
 80227e8:	9b02      	ldr	r3, [sp, #8]
 80227ea:	459b      	cmp	fp, r3
 80227ec:	dd13      	ble.n	8022816 <__hexnan+0x7a>
 80227ee:	454c      	cmp	r4, r9
 80227f0:	d206      	bcs.n	8022800 <__hexnan+0x64>
 80227f2:	2d07      	cmp	r5, #7
 80227f4:	dc04      	bgt.n	8022800 <__hexnan+0x64>
 80227f6:	462a      	mov	r2, r5
 80227f8:	4649      	mov	r1, r9
 80227fa:	4620      	mov	r0, r4
 80227fc:	f7ff ffa8 	bl	8022750 <L_shift>
 8022800:	4544      	cmp	r4, r8
 8022802:	d950      	bls.n	80228a6 <__hexnan+0x10a>
 8022804:	2300      	movs	r3, #0
 8022806:	f1a4 0904 	sub.w	r9, r4, #4
 802280a:	f844 3c04 	str.w	r3, [r4, #-4]
 802280e:	f8cd b008 	str.w	fp, [sp, #8]
 8022812:	464c      	mov	r4, r9
 8022814:	461d      	mov	r5, r3
 8022816:	9a03      	ldr	r2, [sp, #12]
 8022818:	e7d7      	b.n	80227ca <__hexnan+0x2e>
 802281a:	2929      	cmp	r1, #41	; 0x29
 802281c:	d156      	bne.n	80228cc <__hexnan+0x130>
 802281e:	3202      	adds	r2, #2
 8022820:	f8ca 2000 	str.w	r2, [sl]
 8022824:	f1bb 0f00 	cmp.w	fp, #0
 8022828:	d050      	beq.n	80228cc <__hexnan+0x130>
 802282a:	454c      	cmp	r4, r9
 802282c:	d206      	bcs.n	802283c <__hexnan+0xa0>
 802282e:	2d07      	cmp	r5, #7
 8022830:	dc04      	bgt.n	802283c <__hexnan+0xa0>
 8022832:	462a      	mov	r2, r5
 8022834:	4649      	mov	r1, r9
 8022836:	4620      	mov	r0, r4
 8022838:	f7ff ff8a 	bl	8022750 <L_shift>
 802283c:	4544      	cmp	r4, r8
 802283e:	d934      	bls.n	80228aa <__hexnan+0x10e>
 8022840:	f1a8 0204 	sub.w	r2, r8, #4
 8022844:	4623      	mov	r3, r4
 8022846:	f853 1b04 	ldr.w	r1, [r3], #4
 802284a:	f842 1f04 	str.w	r1, [r2, #4]!
 802284e:	429f      	cmp	r7, r3
 8022850:	d2f9      	bcs.n	8022846 <__hexnan+0xaa>
 8022852:	1b3b      	subs	r3, r7, r4
 8022854:	f023 0303 	bic.w	r3, r3, #3
 8022858:	3304      	adds	r3, #4
 802285a:	3401      	adds	r4, #1
 802285c:	3e03      	subs	r6, #3
 802285e:	42b4      	cmp	r4, r6
 8022860:	bf88      	it	hi
 8022862:	2304      	movhi	r3, #4
 8022864:	4443      	add	r3, r8
 8022866:	2200      	movs	r2, #0
 8022868:	f843 2b04 	str.w	r2, [r3], #4
 802286c:	429f      	cmp	r7, r3
 802286e:	d2fb      	bcs.n	8022868 <__hexnan+0xcc>
 8022870:	683b      	ldr	r3, [r7, #0]
 8022872:	b91b      	cbnz	r3, 802287c <__hexnan+0xe0>
 8022874:	4547      	cmp	r7, r8
 8022876:	d127      	bne.n	80228c8 <__hexnan+0x12c>
 8022878:	2301      	movs	r3, #1
 802287a:	603b      	str	r3, [r7, #0]
 802287c:	2005      	movs	r0, #5
 802287e:	e026      	b.n	80228ce <__hexnan+0x132>
 8022880:	3501      	adds	r5, #1
 8022882:	2d08      	cmp	r5, #8
 8022884:	f10b 0b01 	add.w	fp, fp, #1
 8022888:	dd06      	ble.n	8022898 <__hexnan+0xfc>
 802288a:	4544      	cmp	r4, r8
 802288c:	d9c3      	bls.n	8022816 <__hexnan+0x7a>
 802288e:	2300      	movs	r3, #0
 8022890:	f844 3c04 	str.w	r3, [r4, #-4]
 8022894:	2501      	movs	r5, #1
 8022896:	3c04      	subs	r4, #4
 8022898:	6822      	ldr	r2, [r4, #0]
 802289a:	f000 000f 	and.w	r0, r0, #15
 802289e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80228a2:	6022      	str	r2, [r4, #0]
 80228a4:	e7b7      	b.n	8022816 <__hexnan+0x7a>
 80228a6:	2508      	movs	r5, #8
 80228a8:	e7b5      	b.n	8022816 <__hexnan+0x7a>
 80228aa:	9b01      	ldr	r3, [sp, #4]
 80228ac:	2b00      	cmp	r3, #0
 80228ae:	d0df      	beq.n	8022870 <__hexnan+0xd4>
 80228b0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80228b4:	f1c3 0320 	rsb	r3, r3, #32
 80228b8:	fa22 f303 	lsr.w	r3, r2, r3
 80228bc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80228c0:	401a      	ands	r2, r3
 80228c2:	f846 2c04 	str.w	r2, [r6, #-4]
 80228c6:	e7d3      	b.n	8022870 <__hexnan+0xd4>
 80228c8:	3f04      	subs	r7, #4
 80228ca:	e7d1      	b.n	8022870 <__hexnan+0xd4>
 80228cc:	2004      	movs	r0, #4
 80228ce:	b007      	add	sp, #28
 80228d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080228d4 <_localeconv_r>:
 80228d4:	4800      	ldr	r0, [pc, #0]	; (80228d8 <_localeconv_r+0x4>)
 80228d6:	4770      	bx	lr
 80228d8:	200002a8 	.word	0x200002a8

080228dc <_lseek_r>:
 80228dc:	b538      	push	{r3, r4, r5, lr}
 80228de:	4d07      	ldr	r5, [pc, #28]	; (80228fc <_lseek_r+0x20>)
 80228e0:	4604      	mov	r4, r0
 80228e2:	4608      	mov	r0, r1
 80228e4:	4611      	mov	r1, r2
 80228e6:	2200      	movs	r2, #0
 80228e8:	602a      	str	r2, [r5, #0]
 80228ea:	461a      	mov	r2, r3
 80228ec:	f003 feb6 	bl	802665c <_lseek>
 80228f0:	1c43      	adds	r3, r0, #1
 80228f2:	d102      	bne.n	80228fa <_lseek_r+0x1e>
 80228f4:	682b      	ldr	r3, [r5, #0]
 80228f6:	b103      	cbz	r3, 80228fa <_lseek_r+0x1e>
 80228f8:	6023      	str	r3, [r4, #0]
 80228fa:	bd38      	pop	{r3, r4, r5, pc}
 80228fc:	2000f584 	.word	0x2000f584

08022900 <malloc>:
 8022900:	4b02      	ldr	r3, [pc, #8]	; (802290c <malloc+0xc>)
 8022902:	4601      	mov	r1, r0
 8022904:	6818      	ldr	r0, [r3, #0]
 8022906:	f7fc be5d 	b.w	801f5c4 <_malloc_r>
 802290a:	bf00      	nop
 802290c:	20000150 	.word	0x20000150

08022910 <__ascii_mbtowc>:
 8022910:	b082      	sub	sp, #8
 8022912:	b901      	cbnz	r1, 8022916 <__ascii_mbtowc+0x6>
 8022914:	a901      	add	r1, sp, #4
 8022916:	b142      	cbz	r2, 802292a <__ascii_mbtowc+0x1a>
 8022918:	b14b      	cbz	r3, 802292e <__ascii_mbtowc+0x1e>
 802291a:	7813      	ldrb	r3, [r2, #0]
 802291c:	600b      	str	r3, [r1, #0]
 802291e:	7812      	ldrb	r2, [r2, #0]
 8022920:	1e10      	subs	r0, r2, #0
 8022922:	bf18      	it	ne
 8022924:	2001      	movne	r0, #1
 8022926:	b002      	add	sp, #8
 8022928:	4770      	bx	lr
 802292a:	4610      	mov	r0, r2
 802292c:	e7fb      	b.n	8022926 <__ascii_mbtowc+0x16>
 802292e:	f06f 0001 	mvn.w	r0, #1
 8022932:	e7f8      	b.n	8022926 <__ascii_mbtowc+0x16>

08022934 <__malloc_lock>:
 8022934:	4801      	ldr	r0, [pc, #4]	; (802293c <__malloc_lock+0x8>)
 8022936:	f7fc be0c 	b.w	801f552 <__retarget_lock_acquire_recursive>
 802293a:	bf00      	nop
 802293c:	2000f578 	.word	0x2000f578

08022940 <__malloc_unlock>:
 8022940:	4801      	ldr	r0, [pc, #4]	; (8022948 <__malloc_unlock+0x8>)
 8022942:	f7fc be07 	b.w	801f554 <__retarget_lock_release_recursive>
 8022946:	bf00      	nop
 8022948:	2000f578 	.word	0x2000f578

0802294c <_Balloc>:
 802294c:	b570      	push	{r4, r5, r6, lr}
 802294e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8022950:	4604      	mov	r4, r0
 8022952:	460d      	mov	r5, r1
 8022954:	b976      	cbnz	r6, 8022974 <_Balloc+0x28>
 8022956:	2010      	movs	r0, #16
 8022958:	f7ff ffd2 	bl	8022900 <malloc>
 802295c:	4602      	mov	r2, r0
 802295e:	6260      	str	r0, [r4, #36]	; 0x24
 8022960:	b920      	cbnz	r0, 802296c <_Balloc+0x20>
 8022962:	4b18      	ldr	r3, [pc, #96]	; (80229c4 <_Balloc+0x78>)
 8022964:	4818      	ldr	r0, [pc, #96]	; (80229c8 <_Balloc+0x7c>)
 8022966:	2166      	movs	r1, #102	; 0x66
 8022968:	f000 feac 	bl	80236c4 <__assert_func>
 802296c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8022970:	6006      	str	r6, [r0, #0]
 8022972:	60c6      	str	r6, [r0, #12]
 8022974:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8022976:	68f3      	ldr	r3, [r6, #12]
 8022978:	b183      	cbz	r3, 802299c <_Balloc+0x50>
 802297a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802297c:	68db      	ldr	r3, [r3, #12]
 802297e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8022982:	b9b8      	cbnz	r0, 80229b4 <_Balloc+0x68>
 8022984:	2101      	movs	r1, #1
 8022986:	fa01 f605 	lsl.w	r6, r1, r5
 802298a:	1d72      	adds	r2, r6, #5
 802298c:	0092      	lsls	r2, r2, #2
 802298e:	4620      	mov	r0, r4
 8022990:	f000 fc9d 	bl	80232ce <_calloc_r>
 8022994:	b160      	cbz	r0, 80229b0 <_Balloc+0x64>
 8022996:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802299a:	e00e      	b.n	80229ba <_Balloc+0x6e>
 802299c:	2221      	movs	r2, #33	; 0x21
 802299e:	2104      	movs	r1, #4
 80229a0:	4620      	mov	r0, r4
 80229a2:	f000 fc94 	bl	80232ce <_calloc_r>
 80229a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80229a8:	60f0      	str	r0, [r6, #12]
 80229aa:	68db      	ldr	r3, [r3, #12]
 80229ac:	2b00      	cmp	r3, #0
 80229ae:	d1e4      	bne.n	802297a <_Balloc+0x2e>
 80229b0:	2000      	movs	r0, #0
 80229b2:	bd70      	pop	{r4, r5, r6, pc}
 80229b4:	6802      	ldr	r2, [r0, #0]
 80229b6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80229ba:	2300      	movs	r3, #0
 80229bc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80229c0:	e7f7      	b.n	80229b2 <_Balloc+0x66>
 80229c2:	bf00      	nop
 80229c4:	080270c6 	.word	0x080270c6
 80229c8:	080271c4 	.word	0x080271c4

080229cc <_Bfree>:
 80229cc:	b570      	push	{r4, r5, r6, lr}
 80229ce:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80229d0:	4605      	mov	r5, r0
 80229d2:	460c      	mov	r4, r1
 80229d4:	b976      	cbnz	r6, 80229f4 <_Bfree+0x28>
 80229d6:	2010      	movs	r0, #16
 80229d8:	f7ff ff92 	bl	8022900 <malloc>
 80229dc:	4602      	mov	r2, r0
 80229de:	6268      	str	r0, [r5, #36]	; 0x24
 80229e0:	b920      	cbnz	r0, 80229ec <_Bfree+0x20>
 80229e2:	4b09      	ldr	r3, [pc, #36]	; (8022a08 <_Bfree+0x3c>)
 80229e4:	4809      	ldr	r0, [pc, #36]	; (8022a0c <_Bfree+0x40>)
 80229e6:	218a      	movs	r1, #138	; 0x8a
 80229e8:	f000 fe6c 	bl	80236c4 <__assert_func>
 80229ec:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80229f0:	6006      	str	r6, [r0, #0]
 80229f2:	60c6      	str	r6, [r0, #12]
 80229f4:	b13c      	cbz	r4, 8022a06 <_Bfree+0x3a>
 80229f6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80229f8:	6862      	ldr	r2, [r4, #4]
 80229fa:	68db      	ldr	r3, [r3, #12]
 80229fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022a00:	6021      	str	r1, [r4, #0]
 8022a02:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8022a06:	bd70      	pop	{r4, r5, r6, pc}
 8022a08:	080270c6 	.word	0x080270c6
 8022a0c:	080271c4 	.word	0x080271c4

08022a10 <__multadd>:
 8022a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022a14:	690d      	ldr	r5, [r1, #16]
 8022a16:	4607      	mov	r7, r0
 8022a18:	460c      	mov	r4, r1
 8022a1a:	461e      	mov	r6, r3
 8022a1c:	f101 0c14 	add.w	ip, r1, #20
 8022a20:	2000      	movs	r0, #0
 8022a22:	f8dc 3000 	ldr.w	r3, [ip]
 8022a26:	b299      	uxth	r1, r3
 8022a28:	fb02 6101 	mla	r1, r2, r1, r6
 8022a2c:	0c1e      	lsrs	r6, r3, #16
 8022a2e:	0c0b      	lsrs	r3, r1, #16
 8022a30:	fb02 3306 	mla	r3, r2, r6, r3
 8022a34:	b289      	uxth	r1, r1
 8022a36:	3001      	adds	r0, #1
 8022a38:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8022a3c:	4285      	cmp	r5, r0
 8022a3e:	f84c 1b04 	str.w	r1, [ip], #4
 8022a42:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8022a46:	dcec      	bgt.n	8022a22 <__multadd+0x12>
 8022a48:	b30e      	cbz	r6, 8022a8e <__multadd+0x7e>
 8022a4a:	68a3      	ldr	r3, [r4, #8]
 8022a4c:	42ab      	cmp	r3, r5
 8022a4e:	dc19      	bgt.n	8022a84 <__multadd+0x74>
 8022a50:	6861      	ldr	r1, [r4, #4]
 8022a52:	4638      	mov	r0, r7
 8022a54:	3101      	adds	r1, #1
 8022a56:	f7ff ff79 	bl	802294c <_Balloc>
 8022a5a:	4680      	mov	r8, r0
 8022a5c:	b928      	cbnz	r0, 8022a6a <__multadd+0x5a>
 8022a5e:	4602      	mov	r2, r0
 8022a60:	4b0c      	ldr	r3, [pc, #48]	; (8022a94 <__multadd+0x84>)
 8022a62:	480d      	ldr	r0, [pc, #52]	; (8022a98 <__multadd+0x88>)
 8022a64:	21b5      	movs	r1, #181	; 0xb5
 8022a66:	f000 fe2d 	bl	80236c4 <__assert_func>
 8022a6a:	6922      	ldr	r2, [r4, #16]
 8022a6c:	3202      	adds	r2, #2
 8022a6e:	f104 010c 	add.w	r1, r4, #12
 8022a72:	0092      	lsls	r2, r2, #2
 8022a74:	300c      	adds	r0, #12
 8022a76:	f7fc fd6e 	bl	801f556 <memcpy>
 8022a7a:	4621      	mov	r1, r4
 8022a7c:	4638      	mov	r0, r7
 8022a7e:	f7ff ffa5 	bl	80229cc <_Bfree>
 8022a82:	4644      	mov	r4, r8
 8022a84:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8022a88:	3501      	adds	r5, #1
 8022a8a:	615e      	str	r6, [r3, #20]
 8022a8c:	6125      	str	r5, [r4, #16]
 8022a8e:	4620      	mov	r0, r4
 8022a90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022a94:	08027138 	.word	0x08027138
 8022a98:	080271c4 	.word	0x080271c4

08022a9c <__s2b>:
 8022a9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022aa0:	460c      	mov	r4, r1
 8022aa2:	4615      	mov	r5, r2
 8022aa4:	461f      	mov	r7, r3
 8022aa6:	2209      	movs	r2, #9
 8022aa8:	3308      	adds	r3, #8
 8022aaa:	4606      	mov	r6, r0
 8022aac:	fb93 f3f2 	sdiv	r3, r3, r2
 8022ab0:	2100      	movs	r1, #0
 8022ab2:	2201      	movs	r2, #1
 8022ab4:	429a      	cmp	r2, r3
 8022ab6:	db09      	blt.n	8022acc <__s2b+0x30>
 8022ab8:	4630      	mov	r0, r6
 8022aba:	f7ff ff47 	bl	802294c <_Balloc>
 8022abe:	b940      	cbnz	r0, 8022ad2 <__s2b+0x36>
 8022ac0:	4602      	mov	r2, r0
 8022ac2:	4b19      	ldr	r3, [pc, #100]	; (8022b28 <__s2b+0x8c>)
 8022ac4:	4819      	ldr	r0, [pc, #100]	; (8022b2c <__s2b+0x90>)
 8022ac6:	21ce      	movs	r1, #206	; 0xce
 8022ac8:	f000 fdfc 	bl	80236c4 <__assert_func>
 8022acc:	0052      	lsls	r2, r2, #1
 8022ace:	3101      	adds	r1, #1
 8022ad0:	e7f0      	b.n	8022ab4 <__s2b+0x18>
 8022ad2:	9b08      	ldr	r3, [sp, #32]
 8022ad4:	6143      	str	r3, [r0, #20]
 8022ad6:	2d09      	cmp	r5, #9
 8022ad8:	f04f 0301 	mov.w	r3, #1
 8022adc:	6103      	str	r3, [r0, #16]
 8022ade:	dd16      	ble.n	8022b0e <__s2b+0x72>
 8022ae0:	f104 0909 	add.w	r9, r4, #9
 8022ae4:	46c8      	mov	r8, r9
 8022ae6:	442c      	add	r4, r5
 8022ae8:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022aec:	4601      	mov	r1, r0
 8022aee:	3b30      	subs	r3, #48	; 0x30
 8022af0:	220a      	movs	r2, #10
 8022af2:	4630      	mov	r0, r6
 8022af4:	f7ff ff8c 	bl	8022a10 <__multadd>
 8022af8:	45a0      	cmp	r8, r4
 8022afa:	d1f5      	bne.n	8022ae8 <__s2b+0x4c>
 8022afc:	f1a5 0408 	sub.w	r4, r5, #8
 8022b00:	444c      	add	r4, r9
 8022b02:	1b2d      	subs	r5, r5, r4
 8022b04:	1963      	adds	r3, r4, r5
 8022b06:	42bb      	cmp	r3, r7
 8022b08:	db04      	blt.n	8022b14 <__s2b+0x78>
 8022b0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022b0e:	340a      	adds	r4, #10
 8022b10:	2509      	movs	r5, #9
 8022b12:	e7f6      	b.n	8022b02 <__s2b+0x66>
 8022b14:	f814 3b01 	ldrb.w	r3, [r4], #1
 8022b18:	4601      	mov	r1, r0
 8022b1a:	3b30      	subs	r3, #48	; 0x30
 8022b1c:	220a      	movs	r2, #10
 8022b1e:	4630      	mov	r0, r6
 8022b20:	f7ff ff76 	bl	8022a10 <__multadd>
 8022b24:	e7ee      	b.n	8022b04 <__s2b+0x68>
 8022b26:	bf00      	nop
 8022b28:	08027138 	.word	0x08027138
 8022b2c:	080271c4 	.word	0x080271c4

08022b30 <__hi0bits>:
 8022b30:	0c03      	lsrs	r3, r0, #16
 8022b32:	041b      	lsls	r3, r3, #16
 8022b34:	b9d3      	cbnz	r3, 8022b6c <__hi0bits+0x3c>
 8022b36:	0400      	lsls	r0, r0, #16
 8022b38:	2310      	movs	r3, #16
 8022b3a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8022b3e:	bf04      	itt	eq
 8022b40:	0200      	lsleq	r0, r0, #8
 8022b42:	3308      	addeq	r3, #8
 8022b44:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8022b48:	bf04      	itt	eq
 8022b4a:	0100      	lsleq	r0, r0, #4
 8022b4c:	3304      	addeq	r3, #4
 8022b4e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8022b52:	bf04      	itt	eq
 8022b54:	0080      	lsleq	r0, r0, #2
 8022b56:	3302      	addeq	r3, #2
 8022b58:	2800      	cmp	r0, #0
 8022b5a:	db05      	blt.n	8022b68 <__hi0bits+0x38>
 8022b5c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8022b60:	f103 0301 	add.w	r3, r3, #1
 8022b64:	bf08      	it	eq
 8022b66:	2320      	moveq	r3, #32
 8022b68:	4618      	mov	r0, r3
 8022b6a:	4770      	bx	lr
 8022b6c:	2300      	movs	r3, #0
 8022b6e:	e7e4      	b.n	8022b3a <__hi0bits+0xa>

08022b70 <__lo0bits>:
 8022b70:	6803      	ldr	r3, [r0, #0]
 8022b72:	f013 0207 	ands.w	r2, r3, #7
 8022b76:	4601      	mov	r1, r0
 8022b78:	d00b      	beq.n	8022b92 <__lo0bits+0x22>
 8022b7a:	07da      	lsls	r2, r3, #31
 8022b7c:	d423      	bmi.n	8022bc6 <__lo0bits+0x56>
 8022b7e:	0798      	lsls	r0, r3, #30
 8022b80:	bf49      	itett	mi
 8022b82:	085b      	lsrmi	r3, r3, #1
 8022b84:	089b      	lsrpl	r3, r3, #2
 8022b86:	2001      	movmi	r0, #1
 8022b88:	600b      	strmi	r3, [r1, #0]
 8022b8a:	bf5c      	itt	pl
 8022b8c:	600b      	strpl	r3, [r1, #0]
 8022b8e:	2002      	movpl	r0, #2
 8022b90:	4770      	bx	lr
 8022b92:	b298      	uxth	r0, r3
 8022b94:	b9a8      	cbnz	r0, 8022bc2 <__lo0bits+0x52>
 8022b96:	0c1b      	lsrs	r3, r3, #16
 8022b98:	2010      	movs	r0, #16
 8022b9a:	b2da      	uxtb	r2, r3
 8022b9c:	b90a      	cbnz	r2, 8022ba2 <__lo0bits+0x32>
 8022b9e:	3008      	adds	r0, #8
 8022ba0:	0a1b      	lsrs	r3, r3, #8
 8022ba2:	071a      	lsls	r2, r3, #28
 8022ba4:	bf04      	itt	eq
 8022ba6:	091b      	lsreq	r3, r3, #4
 8022ba8:	3004      	addeq	r0, #4
 8022baa:	079a      	lsls	r2, r3, #30
 8022bac:	bf04      	itt	eq
 8022bae:	089b      	lsreq	r3, r3, #2
 8022bb0:	3002      	addeq	r0, #2
 8022bb2:	07da      	lsls	r2, r3, #31
 8022bb4:	d403      	bmi.n	8022bbe <__lo0bits+0x4e>
 8022bb6:	085b      	lsrs	r3, r3, #1
 8022bb8:	f100 0001 	add.w	r0, r0, #1
 8022bbc:	d005      	beq.n	8022bca <__lo0bits+0x5a>
 8022bbe:	600b      	str	r3, [r1, #0]
 8022bc0:	4770      	bx	lr
 8022bc2:	4610      	mov	r0, r2
 8022bc4:	e7e9      	b.n	8022b9a <__lo0bits+0x2a>
 8022bc6:	2000      	movs	r0, #0
 8022bc8:	4770      	bx	lr
 8022bca:	2020      	movs	r0, #32
 8022bcc:	4770      	bx	lr
	...

08022bd0 <__i2b>:
 8022bd0:	b510      	push	{r4, lr}
 8022bd2:	460c      	mov	r4, r1
 8022bd4:	2101      	movs	r1, #1
 8022bd6:	f7ff feb9 	bl	802294c <_Balloc>
 8022bda:	4602      	mov	r2, r0
 8022bdc:	b928      	cbnz	r0, 8022bea <__i2b+0x1a>
 8022bde:	4b05      	ldr	r3, [pc, #20]	; (8022bf4 <__i2b+0x24>)
 8022be0:	4805      	ldr	r0, [pc, #20]	; (8022bf8 <__i2b+0x28>)
 8022be2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8022be6:	f000 fd6d 	bl	80236c4 <__assert_func>
 8022bea:	2301      	movs	r3, #1
 8022bec:	6144      	str	r4, [r0, #20]
 8022bee:	6103      	str	r3, [r0, #16]
 8022bf0:	bd10      	pop	{r4, pc}
 8022bf2:	bf00      	nop
 8022bf4:	08027138 	.word	0x08027138
 8022bf8:	080271c4 	.word	0x080271c4

08022bfc <__multiply>:
 8022bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c00:	4691      	mov	r9, r2
 8022c02:	690a      	ldr	r2, [r1, #16]
 8022c04:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8022c08:	429a      	cmp	r2, r3
 8022c0a:	bfb8      	it	lt
 8022c0c:	460b      	movlt	r3, r1
 8022c0e:	460c      	mov	r4, r1
 8022c10:	bfbc      	itt	lt
 8022c12:	464c      	movlt	r4, r9
 8022c14:	4699      	movlt	r9, r3
 8022c16:	6927      	ldr	r7, [r4, #16]
 8022c18:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8022c1c:	68a3      	ldr	r3, [r4, #8]
 8022c1e:	6861      	ldr	r1, [r4, #4]
 8022c20:	eb07 060a 	add.w	r6, r7, sl
 8022c24:	42b3      	cmp	r3, r6
 8022c26:	b085      	sub	sp, #20
 8022c28:	bfb8      	it	lt
 8022c2a:	3101      	addlt	r1, #1
 8022c2c:	f7ff fe8e 	bl	802294c <_Balloc>
 8022c30:	b930      	cbnz	r0, 8022c40 <__multiply+0x44>
 8022c32:	4602      	mov	r2, r0
 8022c34:	4b44      	ldr	r3, [pc, #272]	; (8022d48 <__multiply+0x14c>)
 8022c36:	4845      	ldr	r0, [pc, #276]	; (8022d4c <__multiply+0x150>)
 8022c38:	f240 115d 	movw	r1, #349	; 0x15d
 8022c3c:	f000 fd42 	bl	80236c4 <__assert_func>
 8022c40:	f100 0514 	add.w	r5, r0, #20
 8022c44:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8022c48:	462b      	mov	r3, r5
 8022c4a:	2200      	movs	r2, #0
 8022c4c:	4543      	cmp	r3, r8
 8022c4e:	d321      	bcc.n	8022c94 <__multiply+0x98>
 8022c50:	f104 0314 	add.w	r3, r4, #20
 8022c54:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8022c58:	f109 0314 	add.w	r3, r9, #20
 8022c5c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8022c60:	9202      	str	r2, [sp, #8]
 8022c62:	1b3a      	subs	r2, r7, r4
 8022c64:	3a15      	subs	r2, #21
 8022c66:	f022 0203 	bic.w	r2, r2, #3
 8022c6a:	3204      	adds	r2, #4
 8022c6c:	f104 0115 	add.w	r1, r4, #21
 8022c70:	428f      	cmp	r7, r1
 8022c72:	bf38      	it	cc
 8022c74:	2204      	movcc	r2, #4
 8022c76:	9201      	str	r2, [sp, #4]
 8022c78:	9a02      	ldr	r2, [sp, #8]
 8022c7a:	9303      	str	r3, [sp, #12]
 8022c7c:	429a      	cmp	r2, r3
 8022c7e:	d80c      	bhi.n	8022c9a <__multiply+0x9e>
 8022c80:	2e00      	cmp	r6, #0
 8022c82:	dd03      	ble.n	8022c8c <__multiply+0x90>
 8022c84:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8022c88:	2b00      	cmp	r3, #0
 8022c8a:	d05a      	beq.n	8022d42 <__multiply+0x146>
 8022c8c:	6106      	str	r6, [r0, #16]
 8022c8e:	b005      	add	sp, #20
 8022c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c94:	f843 2b04 	str.w	r2, [r3], #4
 8022c98:	e7d8      	b.n	8022c4c <__multiply+0x50>
 8022c9a:	f8b3 a000 	ldrh.w	sl, [r3]
 8022c9e:	f1ba 0f00 	cmp.w	sl, #0
 8022ca2:	d024      	beq.n	8022cee <__multiply+0xf2>
 8022ca4:	f104 0e14 	add.w	lr, r4, #20
 8022ca8:	46a9      	mov	r9, r5
 8022caa:	f04f 0c00 	mov.w	ip, #0
 8022cae:	f85e 2b04 	ldr.w	r2, [lr], #4
 8022cb2:	f8d9 1000 	ldr.w	r1, [r9]
 8022cb6:	fa1f fb82 	uxth.w	fp, r2
 8022cba:	b289      	uxth	r1, r1
 8022cbc:	fb0a 110b 	mla	r1, sl, fp, r1
 8022cc0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8022cc4:	f8d9 2000 	ldr.w	r2, [r9]
 8022cc8:	4461      	add	r1, ip
 8022cca:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8022cce:	fb0a c20b 	mla	r2, sl, fp, ip
 8022cd2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8022cd6:	b289      	uxth	r1, r1
 8022cd8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8022cdc:	4577      	cmp	r7, lr
 8022cde:	f849 1b04 	str.w	r1, [r9], #4
 8022ce2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8022ce6:	d8e2      	bhi.n	8022cae <__multiply+0xb2>
 8022ce8:	9a01      	ldr	r2, [sp, #4]
 8022cea:	f845 c002 	str.w	ip, [r5, r2]
 8022cee:	9a03      	ldr	r2, [sp, #12]
 8022cf0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8022cf4:	3304      	adds	r3, #4
 8022cf6:	f1b9 0f00 	cmp.w	r9, #0
 8022cfa:	d020      	beq.n	8022d3e <__multiply+0x142>
 8022cfc:	6829      	ldr	r1, [r5, #0]
 8022cfe:	f104 0c14 	add.w	ip, r4, #20
 8022d02:	46ae      	mov	lr, r5
 8022d04:	f04f 0a00 	mov.w	sl, #0
 8022d08:	f8bc b000 	ldrh.w	fp, [ip]
 8022d0c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8022d10:	fb09 220b 	mla	r2, r9, fp, r2
 8022d14:	4492      	add	sl, r2
 8022d16:	b289      	uxth	r1, r1
 8022d18:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8022d1c:	f84e 1b04 	str.w	r1, [lr], #4
 8022d20:	f85c 2b04 	ldr.w	r2, [ip], #4
 8022d24:	f8be 1000 	ldrh.w	r1, [lr]
 8022d28:	0c12      	lsrs	r2, r2, #16
 8022d2a:	fb09 1102 	mla	r1, r9, r2, r1
 8022d2e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8022d32:	4567      	cmp	r7, ip
 8022d34:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8022d38:	d8e6      	bhi.n	8022d08 <__multiply+0x10c>
 8022d3a:	9a01      	ldr	r2, [sp, #4]
 8022d3c:	50a9      	str	r1, [r5, r2]
 8022d3e:	3504      	adds	r5, #4
 8022d40:	e79a      	b.n	8022c78 <__multiply+0x7c>
 8022d42:	3e01      	subs	r6, #1
 8022d44:	e79c      	b.n	8022c80 <__multiply+0x84>
 8022d46:	bf00      	nop
 8022d48:	08027138 	.word	0x08027138
 8022d4c:	080271c4 	.word	0x080271c4

08022d50 <__pow5mult>:
 8022d50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022d54:	4615      	mov	r5, r2
 8022d56:	f012 0203 	ands.w	r2, r2, #3
 8022d5a:	4606      	mov	r6, r0
 8022d5c:	460f      	mov	r7, r1
 8022d5e:	d007      	beq.n	8022d70 <__pow5mult+0x20>
 8022d60:	4c25      	ldr	r4, [pc, #148]	; (8022df8 <__pow5mult+0xa8>)
 8022d62:	3a01      	subs	r2, #1
 8022d64:	2300      	movs	r3, #0
 8022d66:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8022d6a:	f7ff fe51 	bl	8022a10 <__multadd>
 8022d6e:	4607      	mov	r7, r0
 8022d70:	10ad      	asrs	r5, r5, #2
 8022d72:	d03d      	beq.n	8022df0 <__pow5mult+0xa0>
 8022d74:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8022d76:	b97c      	cbnz	r4, 8022d98 <__pow5mult+0x48>
 8022d78:	2010      	movs	r0, #16
 8022d7a:	f7ff fdc1 	bl	8022900 <malloc>
 8022d7e:	4602      	mov	r2, r0
 8022d80:	6270      	str	r0, [r6, #36]	; 0x24
 8022d82:	b928      	cbnz	r0, 8022d90 <__pow5mult+0x40>
 8022d84:	4b1d      	ldr	r3, [pc, #116]	; (8022dfc <__pow5mult+0xac>)
 8022d86:	481e      	ldr	r0, [pc, #120]	; (8022e00 <__pow5mult+0xb0>)
 8022d88:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8022d8c:	f000 fc9a 	bl	80236c4 <__assert_func>
 8022d90:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8022d94:	6004      	str	r4, [r0, #0]
 8022d96:	60c4      	str	r4, [r0, #12]
 8022d98:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8022d9c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8022da0:	b94c      	cbnz	r4, 8022db6 <__pow5mult+0x66>
 8022da2:	f240 2171 	movw	r1, #625	; 0x271
 8022da6:	4630      	mov	r0, r6
 8022da8:	f7ff ff12 	bl	8022bd0 <__i2b>
 8022dac:	2300      	movs	r3, #0
 8022dae:	f8c8 0008 	str.w	r0, [r8, #8]
 8022db2:	4604      	mov	r4, r0
 8022db4:	6003      	str	r3, [r0, #0]
 8022db6:	f04f 0900 	mov.w	r9, #0
 8022dba:	07eb      	lsls	r3, r5, #31
 8022dbc:	d50a      	bpl.n	8022dd4 <__pow5mult+0x84>
 8022dbe:	4639      	mov	r1, r7
 8022dc0:	4622      	mov	r2, r4
 8022dc2:	4630      	mov	r0, r6
 8022dc4:	f7ff ff1a 	bl	8022bfc <__multiply>
 8022dc8:	4639      	mov	r1, r7
 8022dca:	4680      	mov	r8, r0
 8022dcc:	4630      	mov	r0, r6
 8022dce:	f7ff fdfd 	bl	80229cc <_Bfree>
 8022dd2:	4647      	mov	r7, r8
 8022dd4:	106d      	asrs	r5, r5, #1
 8022dd6:	d00b      	beq.n	8022df0 <__pow5mult+0xa0>
 8022dd8:	6820      	ldr	r0, [r4, #0]
 8022dda:	b938      	cbnz	r0, 8022dec <__pow5mult+0x9c>
 8022ddc:	4622      	mov	r2, r4
 8022dde:	4621      	mov	r1, r4
 8022de0:	4630      	mov	r0, r6
 8022de2:	f7ff ff0b 	bl	8022bfc <__multiply>
 8022de6:	6020      	str	r0, [r4, #0]
 8022de8:	f8c0 9000 	str.w	r9, [r0]
 8022dec:	4604      	mov	r4, r0
 8022dee:	e7e4      	b.n	8022dba <__pow5mult+0x6a>
 8022df0:	4638      	mov	r0, r7
 8022df2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022df6:	bf00      	nop
 8022df8:	08027310 	.word	0x08027310
 8022dfc:	080270c6 	.word	0x080270c6
 8022e00:	080271c4 	.word	0x080271c4

08022e04 <__lshift>:
 8022e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022e08:	460c      	mov	r4, r1
 8022e0a:	6849      	ldr	r1, [r1, #4]
 8022e0c:	6923      	ldr	r3, [r4, #16]
 8022e0e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8022e12:	68a3      	ldr	r3, [r4, #8]
 8022e14:	4607      	mov	r7, r0
 8022e16:	4691      	mov	r9, r2
 8022e18:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8022e1c:	f108 0601 	add.w	r6, r8, #1
 8022e20:	42b3      	cmp	r3, r6
 8022e22:	db0b      	blt.n	8022e3c <__lshift+0x38>
 8022e24:	4638      	mov	r0, r7
 8022e26:	f7ff fd91 	bl	802294c <_Balloc>
 8022e2a:	4605      	mov	r5, r0
 8022e2c:	b948      	cbnz	r0, 8022e42 <__lshift+0x3e>
 8022e2e:	4602      	mov	r2, r0
 8022e30:	4b2a      	ldr	r3, [pc, #168]	; (8022edc <__lshift+0xd8>)
 8022e32:	482b      	ldr	r0, [pc, #172]	; (8022ee0 <__lshift+0xdc>)
 8022e34:	f240 11d9 	movw	r1, #473	; 0x1d9
 8022e38:	f000 fc44 	bl	80236c4 <__assert_func>
 8022e3c:	3101      	adds	r1, #1
 8022e3e:	005b      	lsls	r3, r3, #1
 8022e40:	e7ee      	b.n	8022e20 <__lshift+0x1c>
 8022e42:	2300      	movs	r3, #0
 8022e44:	f100 0114 	add.w	r1, r0, #20
 8022e48:	f100 0210 	add.w	r2, r0, #16
 8022e4c:	4618      	mov	r0, r3
 8022e4e:	4553      	cmp	r3, sl
 8022e50:	db37      	blt.n	8022ec2 <__lshift+0xbe>
 8022e52:	6920      	ldr	r0, [r4, #16]
 8022e54:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8022e58:	f104 0314 	add.w	r3, r4, #20
 8022e5c:	f019 091f 	ands.w	r9, r9, #31
 8022e60:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022e64:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8022e68:	d02f      	beq.n	8022eca <__lshift+0xc6>
 8022e6a:	f1c9 0e20 	rsb	lr, r9, #32
 8022e6e:	468a      	mov	sl, r1
 8022e70:	f04f 0c00 	mov.w	ip, #0
 8022e74:	681a      	ldr	r2, [r3, #0]
 8022e76:	fa02 f209 	lsl.w	r2, r2, r9
 8022e7a:	ea42 020c 	orr.w	r2, r2, ip
 8022e7e:	f84a 2b04 	str.w	r2, [sl], #4
 8022e82:	f853 2b04 	ldr.w	r2, [r3], #4
 8022e86:	4298      	cmp	r0, r3
 8022e88:	fa22 fc0e 	lsr.w	ip, r2, lr
 8022e8c:	d8f2      	bhi.n	8022e74 <__lshift+0x70>
 8022e8e:	1b03      	subs	r3, r0, r4
 8022e90:	3b15      	subs	r3, #21
 8022e92:	f023 0303 	bic.w	r3, r3, #3
 8022e96:	3304      	adds	r3, #4
 8022e98:	f104 0215 	add.w	r2, r4, #21
 8022e9c:	4290      	cmp	r0, r2
 8022e9e:	bf38      	it	cc
 8022ea0:	2304      	movcc	r3, #4
 8022ea2:	f841 c003 	str.w	ip, [r1, r3]
 8022ea6:	f1bc 0f00 	cmp.w	ip, #0
 8022eaa:	d001      	beq.n	8022eb0 <__lshift+0xac>
 8022eac:	f108 0602 	add.w	r6, r8, #2
 8022eb0:	3e01      	subs	r6, #1
 8022eb2:	4638      	mov	r0, r7
 8022eb4:	612e      	str	r6, [r5, #16]
 8022eb6:	4621      	mov	r1, r4
 8022eb8:	f7ff fd88 	bl	80229cc <_Bfree>
 8022ebc:	4628      	mov	r0, r5
 8022ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022ec2:	f842 0f04 	str.w	r0, [r2, #4]!
 8022ec6:	3301      	adds	r3, #1
 8022ec8:	e7c1      	b.n	8022e4e <__lshift+0x4a>
 8022eca:	3904      	subs	r1, #4
 8022ecc:	f853 2b04 	ldr.w	r2, [r3], #4
 8022ed0:	f841 2f04 	str.w	r2, [r1, #4]!
 8022ed4:	4298      	cmp	r0, r3
 8022ed6:	d8f9      	bhi.n	8022ecc <__lshift+0xc8>
 8022ed8:	e7ea      	b.n	8022eb0 <__lshift+0xac>
 8022eda:	bf00      	nop
 8022edc:	08027138 	.word	0x08027138
 8022ee0:	080271c4 	.word	0x080271c4

08022ee4 <__mcmp>:
 8022ee4:	b530      	push	{r4, r5, lr}
 8022ee6:	6902      	ldr	r2, [r0, #16]
 8022ee8:	690c      	ldr	r4, [r1, #16]
 8022eea:	1b12      	subs	r2, r2, r4
 8022eec:	d10e      	bne.n	8022f0c <__mcmp+0x28>
 8022eee:	f100 0314 	add.w	r3, r0, #20
 8022ef2:	3114      	adds	r1, #20
 8022ef4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8022ef8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8022efc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8022f00:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8022f04:	42a5      	cmp	r5, r4
 8022f06:	d003      	beq.n	8022f10 <__mcmp+0x2c>
 8022f08:	d305      	bcc.n	8022f16 <__mcmp+0x32>
 8022f0a:	2201      	movs	r2, #1
 8022f0c:	4610      	mov	r0, r2
 8022f0e:	bd30      	pop	{r4, r5, pc}
 8022f10:	4283      	cmp	r3, r0
 8022f12:	d3f3      	bcc.n	8022efc <__mcmp+0x18>
 8022f14:	e7fa      	b.n	8022f0c <__mcmp+0x28>
 8022f16:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8022f1a:	e7f7      	b.n	8022f0c <__mcmp+0x28>

08022f1c <__mdiff>:
 8022f1c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f20:	460c      	mov	r4, r1
 8022f22:	4606      	mov	r6, r0
 8022f24:	4611      	mov	r1, r2
 8022f26:	4620      	mov	r0, r4
 8022f28:	4690      	mov	r8, r2
 8022f2a:	f7ff ffdb 	bl	8022ee4 <__mcmp>
 8022f2e:	1e05      	subs	r5, r0, #0
 8022f30:	d110      	bne.n	8022f54 <__mdiff+0x38>
 8022f32:	4629      	mov	r1, r5
 8022f34:	4630      	mov	r0, r6
 8022f36:	f7ff fd09 	bl	802294c <_Balloc>
 8022f3a:	b930      	cbnz	r0, 8022f4a <__mdiff+0x2e>
 8022f3c:	4b3a      	ldr	r3, [pc, #232]	; (8023028 <__mdiff+0x10c>)
 8022f3e:	4602      	mov	r2, r0
 8022f40:	f240 2132 	movw	r1, #562	; 0x232
 8022f44:	4839      	ldr	r0, [pc, #228]	; (802302c <__mdiff+0x110>)
 8022f46:	f000 fbbd 	bl	80236c4 <__assert_func>
 8022f4a:	2301      	movs	r3, #1
 8022f4c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8022f50:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f54:	bfa4      	itt	ge
 8022f56:	4643      	movge	r3, r8
 8022f58:	46a0      	movge	r8, r4
 8022f5a:	4630      	mov	r0, r6
 8022f5c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8022f60:	bfa6      	itte	ge
 8022f62:	461c      	movge	r4, r3
 8022f64:	2500      	movge	r5, #0
 8022f66:	2501      	movlt	r5, #1
 8022f68:	f7ff fcf0 	bl	802294c <_Balloc>
 8022f6c:	b920      	cbnz	r0, 8022f78 <__mdiff+0x5c>
 8022f6e:	4b2e      	ldr	r3, [pc, #184]	; (8023028 <__mdiff+0x10c>)
 8022f70:	4602      	mov	r2, r0
 8022f72:	f44f 7110 	mov.w	r1, #576	; 0x240
 8022f76:	e7e5      	b.n	8022f44 <__mdiff+0x28>
 8022f78:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8022f7c:	6926      	ldr	r6, [r4, #16]
 8022f7e:	60c5      	str	r5, [r0, #12]
 8022f80:	f104 0914 	add.w	r9, r4, #20
 8022f84:	f108 0514 	add.w	r5, r8, #20
 8022f88:	f100 0e14 	add.w	lr, r0, #20
 8022f8c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8022f90:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8022f94:	f108 0210 	add.w	r2, r8, #16
 8022f98:	46f2      	mov	sl, lr
 8022f9a:	2100      	movs	r1, #0
 8022f9c:	f859 3b04 	ldr.w	r3, [r9], #4
 8022fa0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8022fa4:	fa1f f883 	uxth.w	r8, r3
 8022fa8:	fa11 f18b 	uxtah	r1, r1, fp
 8022fac:	0c1b      	lsrs	r3, r3, #16
 8022fae:	eba1 0808 	sub.w	r8, r1, r8
 8022fb2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8022fb6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8022fba:	fa1f f888 	uxth.w	r8, r8
 8022fbe:	1419      	asrs	r1, r3, #16
 8022fc0:	454e      	cmp	r6, r9
 8022fc2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8022fc6:	f84a 3b04 	str.w	r3, [sl], #4
 8022fca:	d8e7      	bhi.n	8022f9c <__mdiff+0x80>
 8022fcc:	1b33      	subs	r3, r6, r4
 8022fce:	3b15      	subs	r3, #21
 8022fd0:	f023 0303 	bic.w	r3, r3, #3
 8022fd4:	3304      	adds	r3, #4
 8022fd6:	3415      	adds	r4, #21
 8022fd8:	42a6      	cmp	r6, r4
 8022fda:	bf38      	it	cc
 8022fdc:	2304      	movcc	r3, #4
 8022fde:	441d      	add	r5, r3
 8022fe0:	4473      	add	r3, lr
 8022fe2:	469e      	mov	lr, r3
 8022fe4:	462e      	mov	r6, r5
 8022fe6:	4566      	cmp	r6, ip
 8022fe8:	d30e      	bcc.n	8023008 <__mdiff+0xec>
 8022fea:	f10c 0203 	add.w	r2, ip, #3
 8022fee:	1b52      	subs	r2, r2, r5
 8022ff0:	f022 0203 	bic.w	r2, r2, #3
 8022ff4:	3d03      	subs	r5, #3
 8022ff6:	45ac      	cmp	ip, r5
 8022ff8:	bf38      	it	cc
 8022ffa:	2200      	movcc	r2, #0
 8022ffc:	441a      	add	r2, r3
 8022ffe:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8023002:	b17b      	cbz	r3, 8023024 <__mdiff+0x108>
 8023004:	6107      	str	r7, [r0, #16]
 8023006:	e7a3      	b.n	8022f50 <__mdiff+0x34>
 8023008:	f856 8b04 	ldr.w	r8, [r6], #4
 802300c:	fa11 f288 	uxtah	r2, r1, r8
 8023010:	1414      	asrs	r4, r2, #16
 8023012:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8023016:	b292      	uxth	r2, r2
 8023018:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802301c:	f84e 2b04 	str.w	r2, [lr], #4
 8023020:	1421      	asrs	r1, r4, #16
 8023022:	e7e0      	b.n	8022fe6 <__mdiff+0xca>
 8023024:	3f01      	subs	r7, #1
 8023026:	e7ea      	b.n	8022ffe <__mdiff+0xe2>
 8023028:	08027138 	.word	0x08027138
 802302c:	080271c4 	.word	0x080271c4

08023030 <__ulp>:
 8023030:	b082      	sub	sp, #8
 8023032:	ed8d 0b00 	vstr	d0, [sp]
 8023036:	9b01      	ldr	r3, [sp, #4]
 8023038:	4912      	ldr	r1, [pc, #72]	; (8023084 <__ulp+0x54>)
 802303a:	4019      	ands	r1, r3
 802303c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8023040:	2900      	cmp	r1, #0
 8023042:	dd05      	ble.n	8023050 <__ulp+0x20>
 8023044:	2200      	movs	r2, #0
 8023046:	460b      	mov	r3, r1
 8023048:	ec43 2b10 	vmov	d0, r2, r3
 802304c:	b002      	add	sp, #8
 802304e:	4770      	bx	lr
 8023050:	4249      	negs	r1, r1
 8023052:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8023056:	ea4f 5021 	mov.w	r0, r1, asr #20
 802305a:	f04f 0200 	mov.w	r2, #0
 802305e:	f04f 0300 	mov.w	r3, #0
 8023062:	da04      	bge.n	802306e <__ulp+0x3e>
 8023064:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8023068:	fa41 f300 	asr.w	r3, r1, r0
 802306c:	e7ec      	b.n	8023048 <__ulp+0x18>
 802306e:	f1a0 0114 	sub.w	r1, r0, #20
 8023072:	291e      	cmp	r1, #30
 8023074:	bfda      	itte	le
 8023076:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 802307a:	fa20 f101 	lsrle.w	r1, r0, r1
 802307e:	2101      	movgt	r1, #1
 8023080:	460a      	mov	r2, r1
 8023082:	e7e1      	b.n	8023048 <__ulp+0x18>
 8023084:	7ff00000 	.word	0x7ff00000

08023088 <__b2d>:
 8023088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802308a:	6905      	ldr	r5, [r0, #16]
 802308c:	f100 0714 	add.w	r7, r0, #20
 8023090:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8023094:	1f2e      	subs	r6, r5, #4
 8023096:	f855 4c04 	ldr.w	r4, [r5, #-4]
 802309a:	4620      	mov	r0, r4
 802309c:	f7ff fd48 	bl	8022b30 <__hi0bits>
 80230a0:	f1c0 0320 	rsb	r3, r0, #32
 80230a4:	280a      	cmp	r0, #10
 80230a6:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8023124 <__b2d+0x9c>
 80230aa:	600b      	str	r3, [r1, #0]
 80230ac:	dc14      	bgt.n	80230d8 <__b2d+0x50>
 80230ae:	f1c0 0e0b 	rsb	lr, r0, #11
 80230b2:	fa24 f10e 	lsr.w	r1, r4, lr
 80230b6:	42b7      	cmp	r7, r6
 80230b8:	ea41 030c 	orr.w	r3, r1, ip
 80230bc:	bf34      	ite	cc
 80230be:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80230c2:	2100      	movcs	r1, #0
 80230c4:	3015      	adds	r0, #21
 80230c6:	fa04 f000 	lsl.w	r0, r4, r0
 80230ca:	fa21 f10e 	lsr.w	r1, r1, lr
 80230ce:	ea40 0201 	orr.w	r2, r0, r1
 80230d2:	ec43 2b10 	vmov	d0, r2, r3
 80230d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80230d8:	42b7      	cmp	r7, r6
 80230da:	bf3a      	itte	cc
 80230dc:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80230e0:	f1a5 0608 	subcc.w	r6, r5, #8
 80230e4:	2100      	movcs	r1, #0
 80230e6:	380b      	subs	r0, #11
 80230e8:	d017      	beq.n	802311a <__b2d+0x92>
 80230ea:	f1c0 0c20 	rsb	ip, r0, #32
 80230ee:	fa04 f500 	lsl.w	r5, r4, r0
 80230f2:	42be      	cmp	r6, r7
 80230f4:	fa21 f40c 	lsr.w	r4, r1, ip
 80230f8:	ea45 0504 	orr.w	r5, r5, r4
 80230fc:	bf8c      	ite	hi
 80230fe:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8023102:	2400      	movls	r4, #0
 8023104:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8023108:	fa01 f000 	lsl.w	r0, r1, r0
 802310c:	fa24 f40c 	lsr.w	r4, r4, ip
 8023110:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8023114:	ea40 0204 	orr.w	r2, r0, r4
 8023118:	e7db      	b.n	80230d2 <__b2d+0x4a>
 802311a:	ea44 030c 	orr.w	r3, r4, ip
 802311e:	460a      	mov	r2, r1
 8023120:	e7d7      	b.n	80230d2 <__b2d+0x4a>
 8023122:	bf00      	nop
 8023124:	3ff00000 	.word	0x3ff00000

08023128 <__d2b>:
 8023128:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802312c:	4689      	mov	r9, r1
 802312e:	2101      	movs	r1, #1
 8023130:	ec57 6b10 	vmov	r6, r7, d0
 8023134:	4690      	mov	r8, r2
 8023136:	f7ff fc09 	bl	802294c <_Balloc>
 802313a:	4604      	mov	r4, r0
 802313c:	b930      	cbnz	r0, 802314c <__d2b+0x24>
 802313e:	4602      	mov	r2, r0
 8023140:	4b25      	ldr	r3, [pc, #148]	; (80231d8 <__d2b+0xb0>)
 8023142:	4826      	ldr	r0, [pc, #152]	; (80231dc <__d2b+0xb4>)
 8023144:	f240 310a 	movw	r1, #778	; 0x30a
 8023148:	f000 fabc 	bl	80236c4 <__assert_func>
 802314c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8023150:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8023154:	bb35      	cbnz	r5, 80231a4 <__d2b+0x7c>
 8023156:	2e00      	cmp	r6, #0
 8023158:	9301      	str	r3, [sp, #4]
 802315a:	d028      	beq.n	80231ae <__d2b+0x86>
 802315c:	4668      	mov	r0, sp
 802315e:	9600      	str	r6, [sp, #0]
 8023160:	f7ff fd06 	bl	8022b70 <__lo0bits>
 8023164:	9900      	ldr	r1, [sp, #0]
 8023166:	b300      	cbz	r0, 80231aa <__d2b+0x82>
 8023168:	9a01      	ldr	r2, [sp, #4]
 802316a:	f1c0 0320 	rsb	r3, r0, #32
 802316e:	fa02 f303 	lsl.w	r3, r2, r3
 8023172:	430b      	orrs	r3, r1
 8023174:	40c2      	lsrs	r2, r0
 8023176:	6163      	str	r3, [r4, #20]
 8023178:	9201      	str	r2, [sp, #4]
 802317a:	9b01      	ldr	r3, [sp, #4]
 802317c:	61a3      	str	r3, [r4, #24]
 802317e:	2b00      	cmp	r3, #0
 8023180:	bf14      	ite	ne
 8023182:	2202      	movne	r2, #2
 8023184:	2201      	moveq	r2, #1
 8023186:	6122      	str	r2, [r4, #16]
 8023188:	b1d5      	cbz	r5, 80231c0 <__d2b+0x98>
 802318a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802318e:	4405      	add	r5, r0
 8023190:	f8c9 5000 	str.w	r5, [r9]
 8023194:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8023198:	f8c8 0000 	str.w	r0, [r8]
 802319c:	4620      	mov	r0, r4
 802319e:	b003      	add	sp, #12
 80231a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80231a4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80231a8:	e7d5      	b.n	8023156 <__d2b+0x2e>
 80231aa:	6161      	str	r1, [r4, #20]
 80231ac:	e7e5      	b.n	802317a <__d2b+0x52>
 80231ae:	a801      	add	r0, sp, #4
 80231b0:	f7ff fcde 	bl	8022b70 <__lo0bits>
 80231b4:	9b01      	ldr	r3, [sp, #4]
 80231b6:	6163      	str	r3, [r4, #20]
 80231b8:	2201      	movs	r2, #1
 80231ba:	6122      	str	r2, [r4, #16]
 80231bc:	3020      	adds	r0, #32
 80231be:	e7e3      	b.n	8023188 <__d2b+0x60>
 80231c0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80231c4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80231c8:	f8c9 0000 	str.w	r0, [r9]
 80231cc:	6918      	ldr	r0, [r3, #16]
 80231ce:	f7ff fcaf 	bl	8022b30 <__hi0bits>
 80231d2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80231d6:	e7df      	b.n	8023198 <__d2b+0x70>
 80231d8:	08027138 	.word	0x08027138
 80231dc:	080271c4 	.word	0x080271c4

080231e0 <__ratio>:
 80231e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231e4:	4688      	mov	r8, r1
 80231e6:	4669      	mov	r1, sp
 80231e8:	4681      	mov	r9, r0
 80231ea:	f7ff ff4d 	bl	8023088 <__b2d>
 80231ee:	a901      	add	r1, sp, #4
 80231f0:	4640      	mov	r0, r8
 80231f2:	ec55 4b10 	vmov	r4, r5, d0
 80231f6:	f7ff ff47 	bl	8023088 <__b2d>
 80231fa:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80231fe:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8023202:	eba3 0c02 	sub.w	ip, r3, r2
 8023206:	e9dd 3200 	ldrd	r3, r2, [sp]
 802320a:	1a9b      	subs	r3, r3, r2
 802320c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8023210:	ec51 0b10 	vmov	r0, r1, d0
 8023214:	2b00      	cmp	r3, #0
 8023216:	bfd6      	itet	le
 8023218:	460a      	movle	r2, r1
 802321a:	462a      	movgt	r2, r5
 802321c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8023220:	468b      	mov	fp, r1
 8023222:	462f      	mov	r7, r5
 8023224:	bfd4      	ite	le
 8023226:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 802322a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 802322e:	4620      	mov	r0, r4
 8023230:	ee10 2a10 	vmov	r2, s0
 8023234:	465b      	mov	r3, fp
 8023236:	4639      	mov	r1, r7
 8023238:	f7dd fb08 	bl	800084c <__aeabi_ddiv>
 802323c:	ec41 0b10 	vmov	d0, r0, r1
 8023240:	b003      	add	sp, #12
 8023242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023246 <__copybits>:
 8023246:	3901      	subs	r1, #1
 8023248:	b570      	push	{r4, r5, r6, lr}
 802324a:	1149      	asrs	r1, r1, #5
 802324c:	6914      	ldr	r4, [r2, #16]
 802324e:	3101      	adds	r1, #1
 8023250:	f102 0314 	add.w	r3, r2, #20
 8023254:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8023258:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 802325c:	1f05      	subs	r5, r0, #4
 802325e:	42a3      	cmp	r3, r4
 8023260:	d30c      	bcc.n	802327c <__copybits+0x36>
 8023262:	1aa3      	subs	r3, r4, r2
 8023264:	3b11      	subs	r3, #17
 8023266:	f023 0303 	bic.w	r3, r3, #3
 802326a:	3211      	adds	r2, #17
 802326c:	42a2      	cmp	r2, r4
 802326e:	bf88      	it	hi
 8023270:	2300      	movhi	r3, #0
 8023272:	4418      	add	r0, r3
 8023274:	2300      	movs	r3, #0
 8023276:	4288      	cmp	r0, r1
 8023278:	d305      	bcc.n	8023286 <__copybits+0x40>
 802327a:	bd70      	pop	{r4, r5, r6, pc}
 802327c:	f853 6b04 	ldr.w	r6, [r3], #4
 8023280:	f845 6f04 	str.w	r6, [r5, #4]!
 8023284:	e7eb      	b.n	802325e <__copybits+0x18>
 8023286:	f840 3b04 	str.w	r3, [r0], #4
 802328a:	e7f4      	b.n	8023276 <__copybits+0x30>

0802328c <__any_on>:
 802328c:	f100 0214 	add.w	r2, r0, #20
 8023290:	6900      	ldr	r0, [r0, #16]
 8023292:	114b      	asrs	r3, r1, #5
 8023294:	4298      	cmp	r0, r3
 8023296:	b510      	push	{r4, lr}
 8023298:	db11      	blt.n	80232be <__any_on+0x32>
 802329a:	dd0a      	ble.n	80232b2 <__any_on+0x26>
 802329c:	f011 011f 	ands.w	r1, r1, #31
 80232a0:	d007      	beq.n	80232b2 <__any_on+0x26>
 80232a2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80232a6:	fa24 f001 	lsr.w	r0, r4, r1
 80232aa:	fa00 f101 	lsl.w	r1, r0, r1
 80232ae:	428c      	cmp	r4, r1
 80232b0:	d10b      	bne.n	80232ca <__any_on+0x3e>
 80232b2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80232b6:	4293      	cmp	r3, r2
 80232b8:	d803      	bhi.n	80232c2 <__any_on+0x36>
 80232ba:	2000      	movs	r0, #0
 80232bc:	bd10      	pop	{r4, pc}
 80232be:	4603      	mov	r3, r0
 80232c0:	e7f7      	b.n	80232b2 <__any_on+0x26>
 80232c2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80232c6:	2900      	cmp	r1, #0
 80232c8:	d0f5      	beq.n	80232b6 <__any_on+0x2a>
 80232ca:	2001      	movs	r0, #1
 80232cc:	e7f6      	b.n	80232bc <__any_on+0x30>

080232ce <_calloc_r>:
 80232ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80232d0:	fba1 2402 	umull	r2, r4, r1, r2
 80232d4:	b94c      	cbnz	r4, 80232ea <_calloc_r+0x1c>
 80232d6:	4611      	mov	r1, r2
 80232d8:	9201      	str	r2, [sp, #4]
 80232da:	f7fc f973 	bl	801f5c4 <_malloc_r>
 80232de:	9a01      	ldr	r2, [sp, #4]
 80232e0:	4605      	mov	r5, r0
 80232e2:	b930      	cbnz	r0, 80232f2 <_calloc_r+0x24>
 80232e4:	4628      	mov	r0, r5
 80232e6:	b003      	add	sp, #12
 80232e8:	bd30      	pop	{r4, r5, pc}
 80232ea:	220c      	movs	r2, #12
 80232ec:	6002      	str	r2, [r0, #0]
 80232ee:	2500      	movs	r5, #0
 80232f0:	e7f8      	b.n	80232e4 <_calloc_r+0x16>
 80232f2:	4621      	mov	r1, r4
 80232f4:	f7fc f93d 	bl	801f572 <memset>
 80232f8:	e7f4      	b.n	80232e4 <_calloc_r+0x16>
	...

080232fc <_free_r>:
 80232fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80232fe:	2900      	cmp	r1, #0
 8023300:	d044      	beq.n	802338c <_free_r+0x90>
 8023302:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023306:	9001      	str	r0, [sp, #4]
 8023308:	2b00      	cmp	r3, #0
 802330a:	f1a1 0404 	sub.w	r4, r1, #4
 802330e:	bfb8      	it	lt
 8023310:	18e4      	addlt	r4, r4, r3
 8023312:	f7ff fb0f 	bl	8022934 <__malloc_lock>
 8023316:	4a1e      	ldr	r2, [pc, #120]	; (8023390 <_free_r+0x94>)
 8023318:	9801      	ldr	r0, [sp, #4]
 802331a:	6813      	ldr	r3, [r2, #0]
 802331c:	b933      	cbnz	r3, 802332c <_free_r+0x30>
 802331e:	6063      	str	r3, [r4, #4]
 8023320:	6014      	str	r4, [r2, #0]
 8023322:	b003      	add	sp, #12
 8023324:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023328:	f7ff bb0a 	b.w	8022940 <__malloc_unlock>
 802332c:	42a3      	cmp	r3, r4
 802332e:	d908      	bls.n	8023342 <_free_r+0x46>
 8023330:	6825      	ldr	r5, [r4, #0]
 8023332:	1961      	adds	r1, r4, r5
 8023334:	428b      	cmp	r3, r1
 8023336:	bf01      	itttt	eq
 8023338:	6819      	ldreq	r1, [r3, #0]
 802333a:	685b      	ldreq	r3, [r3, #4]
 802333c:	1949      	addeq	r1, r1, r5
 802333e:	6021      	streq	r1, [r4, #0]
 8023340:	e7ed      	b.n	802331e <_free_r+0x22>
 8023342:	461a      	mov	r2, r3
 8023344:	685b      	ldr	r3, [r3, #4]
 8023346:	b10b      	cbz	r3, 802334c <_free_r+0x50>
 8023348:	42a3      	cmp	r3, r4
 802334a:	d9fa      	bls.n	8023342 <_free_r+0x46>
 802334c:	6811      	ldr	r1, [r2, #0]
 802334e:	1855      	adds	r5, r2, r1
 8023350:	42a5      	cmp	r5, r4
 8023352:	d10b      	bne.n	802336c <_free_r+0x70>
 8023354:	6824      	ldr	r4, [r4, #0]
 8023356:	4421      	add	r1, r4
 8023358:	1854      	adds	r4, r2, r1
 802335a:	42a3      	cmp	r3, r4
 802335c:	6011      	str	r1, [r2, #0]
 802335e:	d1e0      	bne.n	8023322 <_free_r+0x26>
 8023360:	681c      	ldr	r4, [r3, #0]
 8023362:	685b      	ldr	r3, [r3, #4]
 8023364:	6053      	str	r3, [r2, #4]
 8023366:	4421      	add	r1, r4
 8023368:	6011      	str	r1, [r2, #0]
 802336a:	e7da      	b.n	8023322 <_free_r+0x26>
 802336c:	d902      	bls.n	8023374 <_free_r+0x78>
 802336e:	230c      	movs	r3, #12
 8023370:	6003      	str	r3, [r0, #0]
 8023372:	e7d6      	b.n	8023322 <_free_r+0x26>
 8023374:	6825      	ldr	r5, [r4, #0]
 8023376:	1961      	adds	r1, r4, r5
 8023378:	428b      	cmp	r3, r1
 802337a:	bf04      	itt	eq
 802337c:	6819      	ldreq	r1, [r3, #0]
 802337e:	685b      	ldreq	r3, [r3, #4]
 8023380:	6063      	str	r3, [r4, #4]
 8023382:	bf04      	itt	eq
 8023384:	1949      	addeq	r1, r1, r5
 8023386:	6021      	streq	r1, [r4, #0]
 8023388:	6054      	str	r4, [r2, #4]
 802338a:	e7ca      	b.n	8023322 <_free_r+0x26>
 802338c:	b003      	add	sp, #12
 802338e:	bd30      	pop	{r4, r5, pc}
 8023390:	2000f57c 	.word	0x2000f57c

08023394 <__ssputs_r>:
 8023394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023398:	688e      	ldr	r6, [r1, #8]
 802339a:	429e      	cmp	r6, r3
 802339c:	4682      	mov	sl, r0
 802339e:	460c      	mov	r4, r1
 80233a0:	4690      	mov	r8, r2
 80233a2:	461f      	mov	r7, r3
 80233a4:	d838      	bhi.n	8023418 <__ssputs_r+0x84>
 80233a6:	898a      	ldrh	r2, [r1, #12]
 80233a8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80233ac:	d032      	beq.n	8023414 <__ssputs_r+0x80>
 80233ae:	6825      	ldr	r5, [r4, #0]
 80233b0:	6909      	ldr	r1, [r1, #16]
 80233b2:	eba5 0901 	sub.w	r9, r5, r1
 80233b6:	6965      	ldr	r5, [r4, #20]
 80233b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80233bc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80233c0:	3301      	adds	r3, #1
 80233c2:	444b      	add	r3, r9
 80233c4:	106d      	asrs	r5, r5, #1
 80233c6:	429d      	cmp	r5, r3
 80233c8:	bf38      	it	cc
 80233ca:	461d      	movcc	r5, r3
 80233cc:	0553      	lsls	r3, r2, #21
 80233ce:	d531      	bpl.n	8023434 <__ssputs_r+0xa0>
 80233d0:	4629      	mov	r1, r5
 80233d2:	f7fc f8f7 	bl	801f5c4 <_malloc_r>
 80233d6:	4606      	mov	r6, r0
 80233d8:	b950      	cbnz	r0, 80233f0 <__ssputs_r+0x5c>
 80233da:	230c      	movs	r3, #12
 80233dc:	f8ca 3000 	str.w	r3, [sl]
 80233e0:	89a3      	ldrh	r3, [r4, #12]
 80233e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80233e6:	81a3      	strh	r3, [r4, #12]
 80233e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80233ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80233f0:	6921      	ldr	r1, [r4, #16]
 80233f2:	464a      	mov	r2, r9
 80233f4:	f7fc f8af 	bl	801f556 <memcpy>
 80233f8:	89a3      	ldrh	r3, [r4, #12]
 80233fa:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80233fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023402:	81a3      	strh	r3, [r4, #12]
 8023404:	6126      	str	r6, [r4, #16]
 8023406:	6165      	str	r5, [r4, #20]
 8023408:	444e      	add	r6, r9
 802340a:	eba5 0509 	sub.w	r5, r5, r9
 802340e:	6026      	str	r6, [r4, #0]
 8023410:	60a5      	str	r5, [r4, #8]
 8023412:	463e      	mov	r6, r7
 8023414:	42be      	cmp	r6, r7
 8023416:	d900      	bls.n	802341a <__ssputs_r+0x86>
 8023418:	463e      	mov	r6, r7
 802341a:	6820      	ldr	r0, [r4, #0]
 802341c:	4632      	mov	r2, r6
 802341e:	4641      	mov	r1, r8
 8023420:	f000 f980 	bl	8023724 <memmove>
 8023424:	68a3      	ldr	r3, [r4, #8]
 8023426:	1b9b      	subs	r3, r3, r6
 8023428:	60a3      	str	r3, [r4, #8]
 802342a:	6823      	ldr	r3, [r4, #0]
 802342c:	4433      	add	r3, r6
 802342e:	6023      	str	r3, [r4, #0]
 8023430:	2000      	movs	r0, #0
 8023432:	e7db      	b.n	80233ec <__ssputs_r+0x58>
 8023434:	462a      	mov	r2, r5
 8023436:	f000 f98f 	bl	8023758 <_realloc_r>
 802343a:	4606      	mov	r6, r0
 802343c:	2800      	cmp	r0, #0
 802343e:	d1e1      	bne.n	8023404 <__ssputs_r+0x70>
 8023440:	6921      	ldr	r1, [r4, #16]
 8023442:	4650      	mov	r0, sl
 8023444:	f7ff ff5a 	bl	80232fc <_free_r>
 8023448:	e7c7      	b.n	80233da <__ssputs_r+0x46>
	...

0802344c <_svfiprintf_r>:
 802344c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023450:	4698      	mov	r8, r3
 8023452:	898b      	ldrh	r3, [r1, #12]
 8023454:	061b      	lsls	r3, r3, #24
 8023456:	b09d      	sub	sp, #116	; 0x74
 8023458:	4607      	mov	r7, r0
 802345a:	460d      	mov	r5, r1
 802345c:	4614      	mov	r4, r2
 802345e:	d50e      	bpl.n	802347e <_svfiprintf_r+0x32>
 8023460:	690b      	ldr	r3, [r1, #16]
 8023462:	b963      	cbnz	r3, 802347e <_svfiprintf_r+0x32>
 8023464:	2140      	movs	r1, #64	; 0x40
 8023466:	f7fc f8ad 	bl	801f5c4 <_malloc_r>
 802346a:	6028      	str	r0, [r5, #0]
 802346c:	6128      	str	r0, [r5, #16]
 802346e:	b920      	cbnz	r0, 802347a <_svfiprintf_r+0x2e>
 8023470:	230c      	movs	r3, #12
 8023472:	603b      	str	r3, [r7, #0]
 8023474:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023478:	e0d1      	b.n	802361e <_svfiprintf_r+0x1d2>
 802347a:	2340      	movs	r3, #64	; 0x40
 802347c:	616b      	str	r3, [r5, #20]
 802347e:	2300      	movs	r3, #0
 8023480:	9309      	str	r3, [sp, #36]	; 0x24
 8023482:	2320      	movs	r3, #32
 8023484:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8023488:	f8cd 800c 	str.w	r8, [sp, #12]
 802348c:	2330      	movs	r3, #48	; 0x30
 802348e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8023638 <_svfiprintf_r+0x1ec>
 8023492:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8023496:	f04f 0901 	mov.w	r9, #1
 802349a:	4623      	mov	r3, r4
 802349c:	469a      	mov	sl, r3
 802349e:	f813 2b01 	ldrb.w	r2, [r3], #1
 80234a2:	b10a      	cbz	r2, 80234a8 <_svfiprintf_r+0x5c>
 80234a4:	2a25      	cmp	r2, #37	; 0x25
 80234a6:	d1f9      	bne.n	802349c <_svfiprintf_r+0x50>
 80234a8:	ebba 0b04 	subs.w	fp, sl, r4
 80234ac:	d00b      	beq.n	80234c6 <_svfiprintf_r+0x7a>
 80234ae:	465b      	mov	r3, fp
 80234b0:	4622      	mov	r2, r4
 80234b2:	4629      	mov	r1, r5
 80234b4:	4638      	mov	r0, r7
 80234b6:	f7ff ff6d 	bl	8023394 <__ssputs_r>
 80234ba:	3001      	adds	r0, #1
 80234bc:	f000 80aa 	beq.w	8023614 <_svfiprintf_r+0x1c8>
 80234c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80234c2:	445a      	add	r2, fp
 80234c4:	9209      	str	r2, [sp, #36]	; 0x24
 80234c6:	f89a 3000 	ldrb.w	r3, [sl]
 80234ca:	2b00      	cmp	r3, #0
 80234cc:	f000 80a2 	beq.w	8023614 <_svfiprintf_r+0x1c8>
 80234d0:	2300      	movs	r3, #0
 80234d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80234d6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80234da:	f10a 0a01 	add.w	sl, sl, #1
 80234de:	9304      	str	r3, [sp, #16]
 80234e0:	9307      	str	r3, [sp, #28]
 80234e2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80234e6:	931a      	str	r3, [sp, #104]	; 0x68
 80234e8:	4654      	mov	r4, sl
 80234ea:	2205      	movs	r2, #5
 80234ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80234f0:	4851      	ldr	r0, [pc, #324]	; (8023638 <_svfiprintf_r+0x1ec>)
 80234f2:	f7dc fe75 	bl	80001e0 <memchr>
 80234f6:	9a04      	ldr	r2, [sp, #16]
 80234f8:	b9d8      	cbnz	r0, 8023532 <_svfiprintf_r+0xe6>
 80234fa:	06d0      	lsls	r0, r2, #27
 80234fc:	bf44      	itt	mi
 80234fe:	2320      	movmi	r3, #32
 8023500:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023504:	0711      	lsls	r1, r2, #28
 8023506:	bf44      	itt	mi
 8023508:	232b      	movmi	r3, #43	; 0x2b
 802350a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802350e:	f89a 3000 	ldrb.w	r3, [sl]
 8023512:	2b2a      	cmp	r3, #42	; 0x2a
 8023514:	d015      	beq.n	8023542 <_svfiprintf_r+0xf6>
 8023516:	9a07      	ldr	r2, [sp, #28]
 8023518:	4654      	mov	r4, sl
 802351a:	2000      	movs	r0, #0
 802351c:	f04f 0c0a 	mov.w	ip, #10
 8023520:	4621      	mov	r1, r4
 8023522:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023526:	3b30      	subs	r3, #48	; 0x30
 8023528:	2b09      	cmp	r3, #9
 802352a:	d94e      	bls.n	80235ca <_svfiprintf_r+0x17e>
 802352c:	b1b0      	cbz	r0, 802355c <_svfiprintf_r+0x110>
 802352e:	9207      	str	r2, [sp, #28]
 8023530:	e014      	b.n	802355c <_svfiprintf_r+0x110>
 8023532:	eba0 0308 	sub.w	r3, r0, r8
 8023536:	fa09 f303 	lsl.w	r3, r9, r3
 802353a:	4313      	orrs	r3, r2
 802353c:	9304      	str	r3, [sp, #16]
 802353e:	46a2      	mov	sl, r4
 8023540:	e7d2      	b.n	80234e8 <_svfiprintf_r+0x9c>
 8023542:	9b03      	ldr	r3, [sp, #12]
 8023544:	1d19      	adds	r1, r3, #4
 8023546:	681b      	ldr	r3, [r3, #0]
 8023548:	9103      	str	r1, [sp, #12]
 802354a:	2b00      	cmp	r3, #0
 802354c:	bfbb      	ittet	lt
 802354e:	425b      	neglt	r3, r3
 8023550:	f042 0202 	orrlt.w	r2, r2, #2
 8023554:	9307      	strge	r3, [sp, #28]
 8023556:	9307      	strlt	r3, [sp, #28]
 8023558:	bfb8      	it	lt
 802355a:	9204      	strlt	r2, [sp, #16]
 802355c:	7823      	ldrb	r3, [r4, #0]
 802355e:	2b2e      	cmp	r3, #46	; 0x2e
 8023560:	d10c      	bne.n	802357c <_svfiprintf_r+0x130>
 8023562:	7863      	ldrb	r3, [r4, #1]
 8023564:	2b2a      	cmp	r3, #42	; 0x2a
 8023566:	d135      	bne.n	80235d4 <_svfiprintf_r+0x188>
 8023568:	9b03      	ldr	r3, [sp, #12]
 802356a:	1d1a      	adds	r2, r3, #4
 802356c:	681b      	ldr	r3, [r3, #0]
 802356e:	9203      	str	r2, [sp, #12]
 8023570:	2b00      	cmp	r3, #0
 8023572:	bfb8      	it	lt
 8023574:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8023578:	3402      	adds	r4, #2
 802357a:	9305      	str	r3, [sp, #20]
 802357c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8023648 <_svfiprintf_r+0x1fc>
 8023580:	7821      	ldrb	r1, [r4, #0]
 8023582:	2203      	movs	r2, #3
 8023584:	4650      	mov	r0, sl
 8023586:	f7dc fe2b 	bl	80001e0 <memchr>
 802358a:	b140      	cbz	r0, 802359e <_svfiprintf_r+0x152>
 802358c:	2340      	movs	r3, #64	; 0x40
 802358e:	eba0 000a 	sub.w	r0, r0, sl
 8023592:	fa03 f000 	lsl.w	r0, r3, r0
 8023596:	9b04      	ldr	r3, [sp, #16]
 8023598:	4303      	orrs	r3, r0
 802359a:	3401      	adds	r4, #1
 802359c:	9304      	str	r3, [sp, #16]
 802359e:	f814 1b01 	ldrb.w	r1, [r4], #1
 80235a2:	4826      	ldr	r0, [pc, #152]	; (802363c <_svfiprintf_r+0x1f0>)
 80235a4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80235a8:	2206      	movs	r2, #6
 80235aa:	f7dc fe19 	bl	80001e0 <memchr>
 80235ae:	2800      	cmp	r0, #0
 80235b0:	d038      	beq.n	8023624 <_svfiprintf_r+0x1d8>
 80235b2:	4b23      	ldr	r3, [pc, #140]	; (8023640 <_svfiprintf_r+0x1f4>)
 80235b4:	bb1b      	cbnz	r3, 80235fe <_svfiprintf_r+0x1b2>
 80235b6:	9b03      	ldr	r3, [sp, #12]
 80235b8:	3307      	adds	r3, #7
 80235ba:	f023 0307 	bic.w	r3, r3, #7
 80235be:	3308      	adds	r3, #8
 80235c0:	9303      	str	r3, [sp, #12]
 80235c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235c4:	4433      	add	r3, r6
 80235c6:	9309      	str	r3, [sp, #36]	; 0x24
 80235c8:	e767      	b.n	802349a <_svfiprintf_r+0x4e>
 80235ca:	fb0c 3202 	mla	r2, ip, r2, r3
 80235ce:	460c      	mov	r4, r1
 80235d0:	2001      	movs	r0, #1
 80235d2:	e7a5      	b.n	8023520 <_svfiprintf_r+0xd4>
 80235d4:	2300      	movs	r3, #0
 80235d6:	3401      	adds	r4, #1
 80235d8:	9305      	str	r3, [sp, #20]
 80235da:	4619      	mov	r1, r3
 80235dc:	f04f 0c0a 	mov.w	ip, #10
 80235e0:	4620      	mov	r0, r4
 80235e2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80235e6:	3a30      	subs	r2, #48	; 0x30
 80235e8:	2a09      	cmp	r2, #9
 80235ea:	d903      	bls.n	80235f4 <_svfiprintf_r+0x1a8>
 80235ec:	2b00      	cmp	r3, #0
 80235ee:	d0c5      	beq.n	802357c <_svfiprintf_r+0x130>
 80235f0:	9105      	str	r1, [sp, #20]
 80235f2:	e7c3      	b.n	802357c <_svfiprintf_r+0x130>
 80235f4:	fb0c 2101 	mla	r1, ip, r1, r2
 80235f8:	4604      	mov	r4, r0
 80235fa:	2301      	movs	r3, #1
 80235fc:	e7f0      	b.n	80235e0 <_svfiprintf_r+0x194>
 80235fe:	ab03      	add	r3, sp, #12
 8023600:	9300      	str	r3, [sp, #0]
 8023602:	462a      	mov	r2, r5
 8023604:	4b0f      	ldr	r3, [pc, #60]	; (8023644 <_svfiprintf_r+0x1f8>)
 8023606:	a904      	add	r1, sp, #16
 8023608:	4638      	mov	r0, r7
 802360a:	f7fc f8ef 	bl	801f7ec <_printf_float>
 802360e:	1c42      	adds	r2, r0, #1
 8023610:	4606      	mov	r6, r0
 8023612:	d1d6      	bne.n	80235c2 <_svfiprintf_r+0x176>
 8023614:	89ab      	ldrh	r3, [r5, #12]
 8023616:	065b      	lsls	r3, r3, #25
 8023618:	f53f af2c 	bmi.w	8023474 <_svfiprintf_r+0x28>
 802361c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802361e:	b01d      	add	sp, #116	; 0x74
 8023620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023624:	ab03      	add	r3, sp, #12
 8023626:	9300      	str	r3, [sp, #0]
 8023628:	462a      	mov	r2, r5
 802362a:	4b06      	ldr	r3, [pc, #24]	; (8023644 <_svfiprintf_r+0x1f8>)
 802362c:	a904      	add	r1, sp, #16
 802362e:	4638      	mov	r0, r7
 8023630:	f7fc fb80 	bl	801fd34 <_printf_i>
 8023634:	e7eb      	b.n	802360e <_svfiprintf_r+0x1c2>
 8023636:	bf00      	nop
 8023638:	0802731c 	.word	0x0802731c
 802363c:	08027326 	.word	0x08027326
 8023640:	0801f7ed 	.word	0x0801f7ed
 8023644:	08023395 	.word	0x08023395
 8023648:	08027322 	.word	0x08027322

0802364c <_read_r>:
 802364c:	b538      	push	{r3, r4, r5, lr}
 802364e:	4d07      	ldr	r5, [pc, #28]	; (802366c <_read_r+0x20>)
 8023650:	4604      	mov	r4, r0
 8023652:	4608      	mov	r0, r1
 8023654:	4611      	mov	r1, r2
 8023656:	2200      	movs	r2, #0
 8023658:	602a      	str	r2, [r5, #0]
 802365a:	461a      	mov	r2, r3
 802365c:	f003 f806 	bl	802666c <_read>
 8023660:	1c43      	adds	r3, r0, #1
 8023662:	d102      	bne.n	802366a <_read_r+0x1e>
 8023664:	682b      	ldr	r3, [r5, #0]
 8023666:	b103      	cbz	r3, 802366a <_read_r+0x1e>
 8023668:	6023      	str	r3, [r4, #0]
 802366a:	bd38      	pop	{r3, r4, r5, pc}
 802366c:	2000f584 	.word	0x2000f584

08023670 <nan>:
 8023670:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8023678 <nan+0x8>
 8023674:	4770      	bx	lr
 8023676:	bf00      	nop
 8023678:	00000000 	.word	0x00000000
 802367c:	7ff80000 	.word	0x7ff80000

08023680 <strncmp>:
 8023680:	b510      	push	{r4, lr}
 8023682:	b17a      	cbz	r2, 80236a4 <strncmp+0x24>
 8023684:	4603      	mov	r3, r0
 8023686:	3901      	subs	r1, #1
 8023688:	1884      	adds	r4, r0, r2
 802368a:	f813 0b01 	ldrb.w	r0, [r3], #1
 802368e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8023692:	4290      	cmp	r0, r2
 8023694:	d101      	bne.n	802369a <strncmp+0x1a>
 8023696:	42a3      	cmp	r3, r4
 8023698:	d101      	bne.n	802369e <strncmp+0x1e>
 802369a:	1a80      	subs	r0, r0, r2
 802369c:	bd10      	pop	{r4, pc}
 802369e:	2800      	cmp	r0, #0
 80236a0:	d1f3      	bne.n	802368a <strncmp+0xa>
 80236a2:	e7fa      	b.n	802369a <strncmp+0x1a>
 80236a4:	4610      	mov	r0, r2
 80236a6:	e7f9      	b.n	802369c <strncmp+0x1c>

080236a8 <__ascii_wctomb>:
 80236a8:	b149      	cbz	r1, 80236be <__ascii_wctomb+0x16>
 80236aa:	2aff      	cmp	r2, #255	; 0xff
 80236ac:	bf85      	ittet	hi
 80236ae:	238a      	movhi	r3, #138	; 0x8a
 80236b0:	6003      	strhi	r3, [r0, #0]
 80236b2:	700a      	strbls	r2, [r1, #0]
 80236b4:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 80236b8:	bf98      	it	ls
 80236ba:	2001      	movls	r0, #1
 80236bc:	4770      	bx	lr
 80236be:	4608      	mov	r0, r1
 80236c0:	4770      	bx	lr
	...

080236c4 <__assert_func>:
 80236c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80236c6:	4614      	mov	r4, r2
 80236c8:	461a      	mov	r2, r3
 80236ca:	4b09      	ldr	r3, [pc, #36]	; (80236f0 <__assert_func+0x2c>)
 80236cc:	681b      	ldr	r3, [r3, #0]
 80236ce:	4605      	mov	r5, r0
 80236d0:	68d8      	ldr	r0, [r3, #12]
 80236d2:	b14c      	cbz	r4, 80236e8 <__assert_func+0x24>
 80236d4:	4b07      	ldr	r3, [pc, #28]	; (80236f4 <__assert_func+0x30>)
 80236d6:	9100      	str	r1, [sp, #0]
 80236d8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80236dc:	4906      	ldr	r1, [pc, #24]	; (80236f8 <__assert_func+0x34>)
 80236de:	462b      	mov	r3, r5
 80236e0:	f000 f80e 	bl	8023700 <fiprintf>
 80236e4:	f000 fa80 	bl	8023be8 <abort>
 80236e8:	4b04      	ldr	r3, [pc, #16]	; (80236fc <__assert_func+0x38>)
 80236ea:	461c      	mov	r4, r3
 80236ec:	e7f3      	b.n	80236d6 <__assert_func+0x12>
 80236ee:	bf00      	nop
 80236f0:	20000150 	.word	0x20000150
 80236f4:	0802732d 	.word	0x0802732d
 80236f8:	0802733a 	.word	0x0802733a
 80236fc:	08027368 	.word	0x08027368

08023700 <fiprintf>:
 8023700:	b40e      	push	{r1, r2, r3}
 8023702:	b503      	push	{r0, r1, lr}
 8023704:	4601      	mov	r1, r0
 8023706:	ab03      	add	r3, sp, #12
 8023708:	4805      	ldr	r0, [pc, #20]	; (8023720 <fiprintf+0x20>)
 802370a:	f853 2b04 	ldr.w	r2, [r3], #4
 802370e:	6800      	ldr	r0, [r0, #0]
 8023710:	9301      	str	r3, [sp, #4]
 8023712:	f000 f879 	bl	8023808 <_vfiprintf_r>
 8023716:	b002      	add	sp, #8
 8023718:	f85d eb04 	ldr.w	lr, [sp], #4
 802371c:	b003      	add	sp, #12
 802371e:	4770      	bx	lr
 8023720:	20000150 	.word	0x20000150

08023724 <memmove>:
 8023724:	4288      	cmp	r0, r1
 8023726:	b510      	push	{r4, lr}
 8023728:	eb01 0402 	add.w	r4, r1, r2
 802372c:	d902      	bls.n	8023734 <memmove+0x10>
 802372e:	4284      	cmp	r4, r0
 8023730:	4623      	mov	r3, r4
 8023732:	d807      	bhi.n	8023744 <memmove+0x20>
 8023734:	1e43      	subs	r3, r0, #1
 8023736:	42a1      	cmp	r1, r4
 8023738:	d008      	beq.n	802374c <memmove+0x28>
 802373a:	f811 2b01 	ldrb.w	r2, [r1], #1
 802373e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8023742:	e7f8      	b.n	8023736 <memmove+0x12>
 8023744:	4402      	add	r2, r0
 8023746:	4601      	mov	r1, r0
 8023748:	428a      	cmp	r2, r1
 802374a:	d100      	bne.n	802374e <memmove+0x2a>
 802374c:	bd10      	pop	{r4, pc}
 802374e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8023752:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8023756:	e7f7      	b.n	8023748 <memmove+0x24>

08023758 <_realloc_r>:
 8023758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802375c:	4680      	mov	r8, r0
 802375e:	4614      	mov	r4, r2
 8023760:	460e      	mov	r6, r1
 8023762:	b921      	cbnz	r1, 802376e <_realloc_r+0x16>
 8023764:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023768:	4611      	mov	r1, r2
 802376a:	f7fb bf2b 	b.w	801f5c4 <_malloc_r>
 802376e:	b92a      	cbnz	r2, 802377c <_realloc_r+0x24>
 8023770:	f7ff fdc4 	bl	80232fc <_free_r>
 8023774:	4625      	mov	r5, r4
 8023776:	4628      	mov	r0, r5
 8023778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802377c:	f000 faa0 	bl	8023cc0 <_malloc_usable_size_r>
 8023780:	4284      	cmp	r4, r0
 8023782:	4607      	mov	r7, r0
 8023784:	d802      	bhi.n	802378c <_realloc_r+0x34>
 8023786:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802378a:	d812      	bhi.n	80237b2 <_realloc_r+0x5a>
 802378c:	4621      	mov	r1, r4
 802378e:	4640      	mov	r0, r8
 8023790:	f7fb ff18 	bl	801f5c4 <_malloc_r>
 8023794:	4605      	mov	r5, r0
 8023796:	2800      	cmp	r0, #0
 8023798:	d0ed      	beq.n	8023776 <_realloc_r+0x1e>
 802379a:	42bc      	cmp	r4, r7
 802379c:	4622      	mov	r2, r4
 802379e:	4631      	mov	r1, r6
 80237a0:	bf28      	it	cs
 80237a2:	463a      	movcs	r2, r7
 80237a4:	f7fb fed7 	bl	801f556 <memcpy>
 80237a8:	4631      	mov	r1, r6
 80237aa:	4640      	mov	r0, r8
 80237ac:	f7ff fda6 	bl	80232fc <_free_r>
 80237b0:	e7e1      	b.n	8023776 <_realloc_r+0x1e>
 80237b2:	4635      	mov	r5, r6
 80237b4:	e7df      	b.n	8023776 <_realloc_r+0x1e>

080237b6 <__sfputc_r>:
 80237b6:	6893      	ldr	r3, [r2, #8]
 80237b8:	3b01      	subs	r3, #1
 80237ba:	2b00      	cmp	r3, #0
 80237bc:	b410      	push	{r4}
 80237be:	6093      	str	r3, [r2, #8]
 80237c0:	da08      	bge.n	80237d4 <__sfputc_r+0x1e>
 80237c2:	6994      	ldr	r4, [r2, #24]
 80237c4:	42a3      	cmp	r3, r4
 80237c6:	db01      	blt.n	80237cc <__sfputc_r+0x16>
 80237c8:	290a      	cmp	r1, #10
 80237ca:	d103      	bne.n	80237d4 <__sfputc_r+0x1e>
 80237cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80237d0:	f000 b94a 	b.w	8023a68 <__swbuf_r>
 80237d4:	6813      	ldr	r3, [r2, #0]
 80237d6:	1c58      	adds	r0, r3, #1
 80237d8:	6010      	str	r0, [r2, #0]
 80237da:	7019      	strb	r1, [r3, #0]
 80237dc:	4608      	mov	r0, r1
 80237de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80237e2:	4770      	bx	lr

080237e4 <__sfputs_r>:
 80237e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80237e6:	4606      	mov	r6, r0
 80237e8:	460f      	mov	r7, r1
 80237ea:	4614      	mov	r4, r2
 80237ec:	18d5      	adds	r5, r2, r3
 80237ee:	42ac      	cmp	r4, r5
 80237f0:	d101      	bne.n	80237f6 <__sfputs_r+0x12>
 80237f2:	2000      	movs	r0, #0
 80237f4:	e007      	b.n	8023806 <__sfputs_r+0x22>
 80237f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80237fa:	463a      	mov	r2, r7
 80237fc:	4630      	mov	r0, r6
 80237fe:	f7ff ffda 	bl	80237b6 <__sfputc_r>
 8023802:	1c43      	adds	r3, r0, #1
 8023804:	d1f3      	bne.n	80237ee <__sfputs_r+0xa>
 8023806:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08023808 <_vfiprintf_r>:
 8023808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802380c:	460d      	mov	r5, r1
 802380e:	b09d      	sub	sp, #116	; 0x74
 8023810:	4614      	mov	r4, r2
 8023812:	4698      	mov	r8, r3
 8023814:	4606      	mov	r6, r0
 8023816:	b118      	cbz	r0, 8023820 <_vfiprintf_r+0x18>
 8023818:	6983      	ldr	r3, [r0, #24]
 802381a:	b90b      	cbnz	r3, 8023820 <_vfiprintf_r+0x18>
 802381c:	f7fb fdd6 	bl	801f3cc <__sinit>
 8023820:	4b89      	ldr	r3, [pc, #548]	; (8023a48 <_vfiprintf_r+0x240>)
 8023822:	429d      	cmp	r5, r3
 8023824:	d11b      	bne.n	802385e <_vfiprintf_r+0x56>
 8023826:	6875      	ldr	r5, [r6, #4]
 8023828:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802382a:	07d9      	lsls	r1, r3, #31
 802382c:	d405      	bmi.n	802383a <_vfiprintf_r+0x32>
 802382e:	89ab      	ldrh	r3, [r5, #12]
 8023830:	059a      	lsls	r2, r3, #22
 8023832:	d402      	bmi.n	802383a <_vfiprintf_r+0x32>
 8023834:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023836:	f7fb fe8c 	bl	801f552 <__retarget_lock_acquire_recursive>
 802383a:	89ab      	ldrh	r3, [r5, #12]
 802383c:	071b      	lsls	r3, r3, #28
 802383e:	d501      	bpl.n	8023844 <_vfiprintf_r+0x3c>
 8023840:	692b      	ldr	r3, [r5, #16]
 8023842:	b9eb      	cbnz	r3, 8023880 <_vfiprintf_r+0x78>
 8023844:	4629      	mov	r1, r5
 8023846:	4630      	mov	r0, r6
 8023848:	f000 f960 	bl	8023b0c <__swsetup_r>
 802384c:	b1c0      	cbz	r0, 8023880 <_vfiprintf_r+0x78>
 802384e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023850:	07dc      	lsls	r4, r3, #31
 8023852:	d50e      	bpl.n	8023872 <_vfiprintf_r+0x6a>
 8023854:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023858:	b01d      	add	sp, #116	; 0x74
 802385a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802385e:	4b7b      	ldr	r3, [pc, #492]	; (8023a4c <_vfiprintf_r+0x244>)
 8023860:	429d      	cmp	r5, r3
 8023862:	d101      	bne.n	8023868 <_vfiprintf_r+0x60>
 8023864:	68b5      	ldr	r5, [r6, #8]
 8023866:	e7df      	b.n	8023828 <_vfiprintf_r+0x20>
 8023868:	4b79      	ldr	r3, [pc, #484]	; (8023a50 <_vfiprintf_r+0x248>)
 802386a:	429d      	cmp	r5, r3
 802386c:	bf08      	it	eq
 802386e:	68f5      	ldreq	r5, [r6, #12]
 8023870:	e7da      	b.n	8023828 <_vfiprintf_r+0x20>
 8023872:	89ab      	ldrh	r3, [r5, #12]
 8023874:	0598      	lsls	r0, r3, #22
 8023876:	d4ed      	bmi.n	8023854 <_vfiprintf_r+0x4c>
 8023878:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802387a:	f7fb fe6b 	bl	801f554 <__retarget_lock_release_recursive>
 802387e:	e7e9      	b.n	8023854 <_vfiprintf_r+0x4c>
 8023880:	2300      	movs	r3, #0
 8023882:	9309      	str	r3, [sp, #36]	; 0x24
 8023884:	2320      	movs	r3, #32
 8023886:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802388a:	f8cd 800c 	str.w	r8, [sp, #12]
 802388e:	2330      	movs	r3, #48	; 0x30
 8023890:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8023a54 <_vfiprintf_r+0x24c>
 8023894:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8023898:	f04f 0901 	mov.w	r9, #1
 802389c:	4623      	mov	r3, r4
 802389e:	469a      	mov	sl, r3
 80238a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80238a4:	b10a      	cbz	r2, 80238aa <_vfiprintf_r+0xa2>
 80238a6:	2a25      	cmp	r2, #37	; 0x25
 80238a8:	d1f9      	bne.n	802389e <_vfiprintf_r+0x96>
 80238aa:	ebba 0b04 	subs.w	fp, sl, r4
 80238ae:	d00b      	beq.n	80238c8 <_vfiprintf_r+0xc0>
 80238b0:	465b      	mov	r3, fp
 80238b2:	4622      	mov	r2, r4
 80238b4:	4629      	mov	r1, r5
 80238b6:	4630      	mov	r0, r6
 80238b8:	f7ff ff94 	bl	80237e4 <__sfputs_r>
 80238bc:	3001      	adds	r0, #1
 80238be:	f000 80aa 	beq.w	8023a16 <_vfiprintf_r+0x20e>
 80238c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80238c4:	445a      	add	r2, fp
 80238c6:	9209      	str	r2, [sp, #36]	; 0x24
 80238c8:	f89a 3000 	ldrb.w	r3, [sl]
 80238cc:	2b00      	cmp	r3, #0
 80238ce:	f000 80a2 	beq.w	8023a16 <_vfiprintf_r+0x20e>
 80238d2:	2300      	movs	r3, #0
 80238d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80238d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80238dc:	f10a 0a01 	add.w	sl, sl, #1
 80238e0:	9304      	str	r3, [sp, #16]
 80238e2:	9307      	str	r3, [sp, #28]
 80238e4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80238e8:	931a      	str	r3, [sp, #104]	; 0x68
 80238ea:	4654      	mov	r4, sl
 80238ec:	2205      	movs	r2, #5
 80238ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80238f2:	4858      	ldr	r0, [pc, #352]	; (8023a54 <_vfiprintf_r+0x24c>)
 80238f4:	f7dc fc74 	bl	80001e0 <memchr>
 80238f8:	9a04      	ldr	r2, [sp, #16]
 80238fa:	b9d8      	cbnz	r0, 8023934 <_vfiprintf_r+0x12c>
 80238fc:	06d1      	lsls	r1, r2, #27
 80238fe:	bf44      	itt	mi
 8023900:	2320      	movmi	r3, #32
 8023902:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023906:	0713      	lsls	r3, r2, #28
 8023908:	bf44      	itt	mi
 802390a:	232b      	movmi	r3, #43	; 0x2b
 802390c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023910:	f89a 3000 	ldrb.w	r3, [sl]
 8023914:	2b2a      	cmp	r3, #42	; 0x2a
 8023916:	d015      	beq.n	8023944 <_vfiprintf_r+0x13c>
 8023918:	9a07      	ldr	r2, [sp, #28]
 802391a:	4654      	mov	r4, sl
 802391c:	2000      	movs	r0, #0
 802391e:	f04f 0c0a 	mov.w	ip, #10
 8023922:	4621      	mov	r1, r4
 8023924:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023928:	3b30      	subs	r3, #48	; 0x30
 802392a:	2b09      	cmp	r3, #9
 802392c:	d94e      	bls.n	80239cc <_vfiprintf_r+0x1c4>
 802392e:	b1b0      	cbz	r0, 802395e <_vfiprintf_r+0x156>
 8023930:	9207      	str	r2, [sp, #28]
 8023932:	e014      	b.n	802395e <_vfiprintf_r+0x156>
 8023934:	eba0 0308 	sub.w	r3, r0, r8
 8023938:	fa09 f303 	lsl.w	r3, r9, r3
 802393c:	4313      	orrs	r3, r2
 802393e:	9304      	str	r3, [sp, #16]
 8023940:	46a2      	mov	sl, r4
 8023942:	e7d2      	b.n	80238ea <_vfiprintf_r+0xe2>
 8023944:	9b03      	ldr	r3, [sp, #12]
 8023946:	1d19      	adds	r1, r3, #4
 8023948:	681b      	ldr	r3, [r3, #0]
 802394a:	9103      	str	r1, [sp, #12]
 802394c:	2b00      	cmp	r3, #0
 802394e:	bfbb      	ittet	lt
 8023950:	425b      	neglt	r3, r3
 8023952:	f042 0202 	orrlt.w	r2, r2, #2
 8023956:	9307      	strge	r3, [sp, #28]
 8023958:	9307      	strlt	r3, [sp, #28]
 802395a:	bfb8      	it	lt
 802395c:	9204      	strlt	r2, [sp, #16]
 802395e:	7823      	ldrb	r3, [r4, #0]
 8023960:	2b2e      	cmp	r3, #46	; 0x2e
 8023962:	d10c      	bne.n	802397e <_vfiprintf_r+0x176>
 8023964:	7863      	ldrb	r3, [r4, #1]
 8023966:	2b2a      	cmp	r3, #42	; 0x2a
 8023968:	d135      	bne.n	80239d6 <_vfiprintf_r+0x1ce>
 802396a:	9b03      	ldr	r3, [sp, #12]
 802396c:	1d1a      	adds	r2, r3, #4
 802396e:	681b      	ldr	r3, [r3, #0]
 8023970:	9203      	str	r2, [sp, #12]
 8023972:	2b00      	cmp	r3, #0
 8023974:	bfb8      	it	lt
 8023976:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 802397a:	3402      	adds	r4, #2
 802397c:	9305      	str	r3, [sp, #20]
 802397e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8023a64 <_vfiprintf_r+0x25c>
 8023982:	7821      	ldrb	r1, [r4, #0]
 8023984:	2203      	movs	r2, #3
 8023986:	4650      	mov	r0, sl
 8023988:	f7dc fc2a 	bl	80001e0 <memchr>
 802398c:	b140      	cbz	r0, 80239a0 <_vfiprintf_r+0x198>
 802398e:	2340      	movs	r3, #64	; 0x40
 8023990:	eba0 000a 	sub.w	r0, r0, sl
 8023994:	fa03 f000 	lsl.w	r0, r3, r0
 8023998:	9b04      	ldr	r3, [sp, #16]
 802399a:	4303      	orrs	r3, r0
 802399c:	3401      	adds	r4, #1
 802399e:	9304      	str	r3, [sp, #16]
 80239a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80239a4:	482c      	ldr	r0, [pc, #176]	; (8023a58 <_vfiprintf_r+0x250>)
 80239a6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80239aa:	2206      	movs	r2, #6
 80239ac:	f7dc fc18 	bl	80001e0 <memchr>
 80239b0:	2800      	cmp	r0, #0
 80239b2:	d03f      	beq.n	8023a34 <_vfiprintf_r+0x22c>
 80239b4:	4b29      	ldr	r3, [pc, #164]	; (8023a5c <_vfiprintf_r+0x254>)
 80239b6:	bb1b      	cbnz	r3, 8023a00 <_vfiprintf_r+0x1f8>
 80239b8:	9b03      	ldr	r3, [sp, #12]
 80239ba:	3307      	adds	r3, #7
 80239bc:	f023 0307 	bic.w	r3, r3, #7
 80239c0:	3308      	adds	r3, #8
 80239c2:	9303      	str	r3, [sp, #12]
 80239c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239c6:	443b      	add	r3, r7
 80239c8:	9309      	str	r3, [sp, #36]	; 0x24
 80239ca:	e767      	b.n	802389c <_vfiprintf_r+0x94>
 80239cc:	fb0c 3202 	mla	r2, ip, r2, r3
 80239d0:	460c      	mov	r4, r1
 80239d2:	2001      	movs	r0, #1
 80239d4:	e7a5      	b.n	8023922 <_vfiprintf_r+0x11a>
 80239d6:	2300      	movs	r3, #0
 80239d8:	3401      	adds	r4, #1
 80239da:	9305      	str	r3, [sp, #20]
 80239dc:	4619      	mov	r1, r3
 80239de:	f04f 0c0a 	mov.w	ip, #10
 80239e2:	4620      	mov	r0, r4
 80239e4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80239e8:	3a30      	subs	r2, #48	; 0x30
 80239ea:	2a09      	cmp	r2, #9
 80239ec:	d903      	bls.n	80239f6 <_vfiprintf_r+0x1ee>
 80239ee:	2b00      	cmp	r3, #0
 80239f0:	d0c5      	beq.n	802397e <_vfiprintf_r+0x176>
 80239f2:	9105      	str	r1, [sp, #20]
 80239f4:	e7c3      	b.n	802397e <_vfiprintf_r+0x176>
 80239f6:	fb0c 2101 	mla	r1, ip, r1, r2
 80239fa:	4604      	mov	r4, r0
 80239fc:	2301      	movs	r3, #1
 80239fe:	e7f0      	b.n	80239e2 <_vfiprintf_r+0x1da>
 8023a00:	ab03      	add	r3, sp, #12
 8023a02:	9300      	str	r3, [sp, #0]
 8023a04:	462a      	mov	r2, r5
 8023a06:	4b16      	ldr	r3, [pc, #88]	; (8023a60 <_vfiprintf_r+0x258>)
 8023a08:	a904      	add	r1, sp, #16
 8023a0a:	4630      	mov	r0, r6
 8023a0c:	f7fb feee 	bl	801f7ec <_printf_float>
 8023a10:	4607      	mov	r7, r0
 8023a12:	1c78      	adds	r0, r7, #1
 8023a14:	d1d6      	bne.n	80239c4 <_vfiprintf_r+0x1bc>
 8023a16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023a18:	07d9      	lsls	r1, r3, #31
 8023a1a:	d405      	bmi.n	8023a28 <_vfiprintf_r+0x220>
 8023a1c:	89ab      	ldrh	r3, [r5, #12]
 8023a1e:	059a      	lsls	r2, r3, #22
 8023a20:	d402      	bmi.n	8023a28 <_vfiprintf_r+0x220>
 8023a22:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023a24:	f7fb fd96 	bl	801f554 <__retarget_lock_release_recursive>
 8023a28:	89ab      	ldrh	r3, [r5, #12]
 8023a2a:	065b      	lsls	r3, r3, #25
 8023a2c:	f53f af12 	bmi.w	8023854 <_vfiprintf_r+0x4c>
 8023a30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023a32:	e711      	b.n	8023858 <_vfiprintf_r+0x50>
 8023a34:	ab03      	add	r3, sp, #12
 8023a36:	9300      	str	r3, [sp, #0]
 8023a38:	462a      	mov	r2, r5
 8023a3a:	4b09      	ldr	r3, [pc, #36]	; (8023a60 <_vfiprintf_r+0x258>)
 8023a3c:	a904      	add	r1, sp, #16
 8023a3e:	4630      	mov	r0, r6
 8023a40:	f7fc f978 	bl	801fd34 <_printf_i>
 8023a44:	e7e4      	b.n	8023a10 <_vfiprintf_r+0x208>
 8023a46:	bf00      	nop
 8023a48:	08026ee8 	.word	0x08026ee8
 8023a4c:	08026f08 	.word	0x08026f08
 8023a50:	08026ec8 	.word	0x08026ec8
 8023a54:	0802731c 	.word	0x0802731c
 8023a58:	08027326 	.word	0x08027326
 8023a5c:	0801f7ed 	.word	0x0801f7ed
 8023a60:	080237e5 	.word	0x080237e5
 8023a64:	08027322 	.word	0x08027322

08023a68 <__swbuf_r>:
 8023a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023a6a:	460e      	mov	r6, r1
 8023a6c:	4614      	mov	r4, r2
 8023a6e:	4605      	mov	r5, r0
 8023a70:	b118      	cbz	r0, 8023a7a <__swbuf_r+0x12>
 8023a72:	6983      	ldr	r3, [r0, #24]
 8023a74:	b90b      	cbnz	r3, 8023a7a <__swbuf_r+0x12>
 8023a76:	f7fb fca9 	bl	801f3cc <__sinit>
 8023a7a:	4b21      	ldr	r3, [pc, #132]	; (8023b00 <__swbuf_r+0x98>)
 8023a7c:	429c      	cmp	r4, r3
 8023a7e:	d12b      	bne.n	8023ad8 <__swbuf_r+0x70>
 8023a80:	686c      	ldr	r4, [r5, #4]
 8023a82:	69a3      	ldr	r3, [r4, #24]
 8023a84:	60a3      	str	r3, [r4, #8]
 8023a86:	89a3      	ldrh	r3, [r4, #12]
 8023a88:	071a      	lsls	r2, r3, #28
 8023a8a:	d52f      	bpl.n	8023aec <__swbuf_r+0x84>
 8023a8c:	6923      	ldr	r3, [r4, #16]
 8023a8e:	b36b      	cbz	r3, 8023aec <__swbuf_r+0x84>
 8023a90:	6923      	ldr	r3, [r4, #16]
 8023a92:	6820      	ldr	r0, [r4, #0]
 8023a94:	1ac0      	subs	r0, r0, r3
 8023a96:	6963      	ldr	r3, [r4, #20]
 8023a98:	b2f6      	uxtb	r6, r6
 8023a9a:	4283      	cmp	r3, r0
 8023a9c:	4637      	mov	r7, r6
 8023a9e:	dc04      	bgt.n	8023aaa <__swbuf_r+0x42>
 8023aa0:	4621      	mov	r1, r4
 8023aa2:	4628      	mov	r0, r5
 8023aa4:	f7fe fb6a 	bl	802217c <_fflush_r>
 8023aa8:	bb30      	cbnz	r0, 8023af8 <__swbuf_r+0x90>
 8023aaa:	68a3      	ldr	r3, [r4, #8]
 8023aac:	3b01      	subs	r3, #1
 8023aae:	60a3      	str	r3, [r4, #8]
 8023ab0:	6823      	ldr	r3, [r4, #0]
 8023ab2:	1c5a      	adds	r2, r3, #1
 8023ab4:	6022      	str	r2, [r4, #0]
 8023ab6:	701e      	strb	r6, [r3, #0]
 8023ab8:	6963      	ldr	r3, [r4, #20]
 8023aba:	3001      	adds	r0, #1
 8023abc:	4283      	cmp	r3, r0
 8023abe:	d004      	beq.n	8023aca <__swbuf_r+0x62>
 8023ac0:	89a3      	ldrh	r3, [r4, #12]
 8023ac2:	07db      	lsls	r3, r3, #31
 8023ac4:	d506      	bpl.n	8023ad4 <__swbuf_r+0x6c>
 8023ac6:	2e0a      	cmp	r6, #10
 8023ac8:	d104      	bne.n	8023ad4 <__swbuf_r+0x6c>
 8023aca:	4621      	mov	r1, r4
 8023acc:	4628      	mov	r0, r5
 8023ace:	f7fe fb55 	bl	802217c <_fflush_r>
 8023ad2:	b988      	cbnz	r0, 8023af8 <__swbuf_r+0x90>
 8023ad4:	4638      	mov	r0, r7
 8023ad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023ad8:	4b0a      	ldr	r3, [pc, #40]	; (8023b04 <__swbuf_r+0x9c>)
 8023ada:	429c      	cmp	r4, r3
 8023adc:	d101      	bne.n	8023ae2 <__swbuf_r+0x7a>
 8023ade:	68ac      	ldr	r4, [r5, #8]
 8023ae0:	e7cf      	b.n	8023a82 <__swbuf_r+0x1a>
 8023ae2:	4b09      	ldr	r3, [pc, #36]	; (8023b08 <__swbuf_r+0xa0>)
 8023ae4:	429c      	cmp	r4, r3
 8023ae6:	bf08      	it	eq
 8023ae8:	68ec      	ldreq	r4, [r5, #12]
 8023aea:	e7ca      	b.n	8023a82 <__swbuf_r+0x1a>
 8023aec:	4621      	mov	r1, r4
 8023aee:	4628      	mov	r0, r5
 8023af0:	f000 f80c 	bl	8023b0c <__swsetup_r>
 8023af4:	2800      	cmp	r0, #0
 8023af6:	d0cb      	beq.n	8023a90 <__swbuf_r+0x28>
 8023af8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8023afc:	e7ea      	b.n	8023ad4 <__swbuf_r+0x6c>
 8023afe:	bf00      	nop
 8023b00:	08026ee8 	.word	0x08026ee8
 8023b04:	08026f08 	.word	0x08026f08
 8023b08:	08026ec8 	.word	0x08026ec8

08023b0c <__swsetup_r>:
 8023b0c:	4b32      	ldr	r3, [pc, #200]	; (8023bd8 <__swsetup_r+0xcc>)
 8023b0e:	b570      	push	{r4, r5, r6, lr}
 8023b10:	681d      	ldr	r5, [r3, #0]
 8023b12:	4606      	mov	r6, r0
 8023b14:	460c      	mov	r4, r1
 8023b16:	b125      	cbz	r5, 8023b22 <__swsetup_r+0x16>
 8023b18:	69ab      	ldr	r3, [r5, #24]
 8023b1a:	b913      	cbnz	r3, 8023b22 <__swsetup_r+0x16>
 8023b1c:	4628      	mov	r0, r5
 8023b1e:	f7fb fc55 	bl	801f3cc <__sinit>
 8023b22:	4b2e      	ldr	r3, [pc, #184]	; (8023bdc <__swsetup_r+0xd0>)
 8023b24:	429c      	cmp	r4, r3
 8023b26:	d10f      	bne.n	8023b48 <__swsetup_r+0x3c>
 8023b28:	686c      	ldr	r4, [r5, #4]
 8023b2a:	89a3      	ldrh	r3, [r4, #12]
 8023b2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023b30:	0719      	lsls	r1, r3, #28
 8023b32:	d42c      	bmi.n	8023b8e <__swsetup_r+0x82>
 8023b34:	06dd      	lsls	r5, r3, #27
 8023b36:	d411      	bmi.n	8023b5c <__swsetup_r+0x50>
 8023b38:	2309      	movs	r3, #9
 8023b3a:	6033      	str	r3, [r6, #0]
 8023b3c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8023b40:	81a3      	strh	r3, [r4, #12]
 8023b42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023b46:	e03e      	b.n	8023bc6 <__swsetup_r+0xba>
 8023b48:	4b25      	ldr	r3, [pc, #148]	; (8023be0 <__swsetup_r+0xd4>)
 8023b4a:	429c      	cmp	r4, r3
 8023b4c:	d101      	bne.n	8023b52 <__swsetup_r+0x46>
 8023b4e:	68ac      	ldr	r4, [r5, #8]
 8023b50:	e7eb      	b.n	8023b2a <__swsetup_r+0x1e>
 8023b52:	4b24      	ldr	r3, [pc, #144]	; (8023be4 <__swsetup_r+0xd8>)
 8023b54:	429c      	cmp	r4, r3
 8023b56:	bf08      	it	eq
 8023b58:	68ec      	ldreq	r4, [r5, #12]
 8023b5a:	e7e6      	b.n	8023b2a <__swsetup_r+0x1e>
 8023b5c:	0758      	lsls	r0, r3, #29
 8023b5e:	d512      	bpl.n	8023b86 <__swsetup_r+0x7a>
 8023b60:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8023b62:	b141      	cbz	r1, 8023b76 <__swsetup_r+0x6a>
 8023b64:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8023b68:	4299      	cmp	r1, r3
 8023b6a:	d002      	beq.n	8023b72 <__swsetup_r+0x66>
 8023b6c:	4630      	mov	r0, r6
 8023b6e:	f7ff fbc5 	bl	80232fc <_free_r>
 8023b72:	2300      	movs	r3, #0
 8023b74:	6363      	str	r3, [r4, #52]	; 0x34
 8023b76:	89a3      	ldrh	r3, [r4, #12]
 8023b78:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8023b7c:	81a3      	strh	r3, [r4, #12]
 8023b7e:	2300      	movs	r3, #0
 8023b80:	6063      	str	r3, [r4, #4]
 8023b82:	6923      	ldr	r3, [r4, #16]
 8023b84:	6023      	str	r3, [r4, #0]
 8023b86:	89a3      	ldrh	r3, [r4, #12]
 8023b88:	f043 0308 	orr.w	r3, r3, #8
 8023b8c:	81a3      	strh	r3, [r4, #12]
 8023b8e:	6923      	ldr	r3, [r4, #16]
 8023b90:	b94b      	cbnz	r3, 8023ba6 <__swsetup_r+0x9a>
 8023b92:	89a3      	ldrh	r3, [r4, #12]
 8023b94:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8023b98:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8023b9c:	d003      	beq.n	8023ba6 <__swsetup_r+0x9a>
 8023b9e:	4621      	mov	r1, r4
 8023ba0:	4630      	mov	r0, r6
 8023ba2:	f000 f84d 	bl	8023c40 <__smakebuf_r>
 8023ba6:	89a0      	ldrh	r0, [r4, #12]
 8023ba8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023bac:	f010 0301 	ands.w	r3, r0, #1
 8023bb0:	d00a      	beq.n	8023bc8 <__swsetup_r+0xbc>
 8023bb2:	2300      	movs	r3, #0
 8023bb4:	60a3      	str	r3, [r4, #8]
 8023bb6:	6963      	ldr	r3, [r4, #20]
 8023bb8:	425b      	negs	r3, r3
 8023bba:	61a3      	str	r3, [r4, #24]
 8023bbc:	6923      	ldr	r3, [r4, #16]
 8023bbe:	b943      	cbnz	r3, 8023bd2 <__swsetup_r+0xc6>
 8023bc0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8023bc4:	d1ba      	bne.n	8023b3c <__swsetup_r+0x30>
 8023bc6:	bd70      	pop	{r4, r5, r6, pc}
 8023bc8:	0781      	lsls	r1, r0, #30
 8023bca:	bf58      	it	pl
 8023bcc:	6963      	ldrpl	r3, [r4, #20]
 8023bce:	60a3      	str	r3, [r4, #8]
 8023bd0:	e7f4      	b.n	8023bbc <__swsetup_r+0xb0>
 8023bd2:	2000      	movs	r0, #0
 8023bd4:	e7f7      	b.n	8023bc6 <__swsetup_r+0xba>
 8023bd6:	bf00      	nop
 8023bd8:	20000150 	.word	0x20000150
 8023bdc:	08026ee8 	.word	0x08026ee8
 8023be0:	08026f08 	.word	0x08026f08
 8023be4:	08026ec8 	.word	0x08026ec8

08023be8 <abort>:
 8023be8:	b508      	push	{r3, lr}
 8023bea:	2006      	movs	r0, #6
 8023bec:	f000 f898 	bl	8023d20 <raise>
 8023bf0:	2001      	movs	r0, #1
 8023bf2:	f002 fd59 	bl	80266a8 <_exit>

08023bf6 <__swhatbuf_r>:
 8023bf6:	b570      	push	{r4, r5, r6, lr}
 8023bf8:	460e      	mov	r6, r1
 8023bfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023bfe:	2900      	cmp	r1, #0
 8023c00:	b096      	sub	sp, #88	; 0x58
 8023c02:	4614      	mov	r4, r2
 8023c04:	461d      	mov	r5, r3
 8023c06:	da08      	bge.n	8023c1a <__swhatbuf_r+0x24>
 8023c08:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8023c0c:	2200      	movs	r2, #0
 8023c0e:	602a      	str	r2, [r5, #0]
 8023c10:	061a      	lsls	r2, r3, #24
 8023c12:	d410      	bmi.n	8023c36 <__swhatbuf_r+0x40>
 8023c14:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8023c18:	e00e      	b.n	8023c38 <__swhatbuf_r+0x42>
 8023c1a:	466a      	mov	r2, sp
 8023c1c:	f000 f89c 	bl	8023d58 <_fstat_r>
 8023c20:	2800      	cmp	r0, #0
 8023c22:	dbf1      	blt.n	8023c08 <__swhatbuf_r+0x12>
 8023c24:	9a01      	ldr	r2, [sp, #4]
 8023c26:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8023c2a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8023c2e:	425a      	negs	r2, r3
 8023c30:	415a      	adcs	r2, r3
 8023c32:	602a      	str	r2, [r5, #0]
 8023c34:	e7ee      	b.n	8023c14 <__swhatbuf_r+0x1e>
 8023c36:	2340      	movs	r3, #64	; 0x40
 8023c38:	2000      	movs	r0, #0
 8023c3a:	6023      	str	r3, [r4, #0]
 8023c3c:	b016      	add	sp, #88	; 0x58
 8023c3e:	bd70      	pop	{r4, r5, r6, pc}

08023c40 <__smakebuf_r>:
 8023c40:	898b      	ldrh	r3, [r1, #12]
 8023c42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023c44:	079d      	lsls	r5, r3, #30
 8023c46:	4606      	mov	r6, r0
 8023c48:	460c      	mov	r4, r1
 8023c4a:	d507      	bpl.n	8023c5c <__smakebuf_r+0x1c>
 8023c4c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8023c50:	6023      	str	r3, [r4, #0]
 8023c52:	6123      	str	r3, [r4, #16]
 8023c54:	2301      	movs	r3, #1
 8023c56:	6163      	str	r3, [r4, #20]
 8023c58:	b002      	add	sp, #8
 8023c5a:	bd70      	pop	{r4, r5, r6, pc}
 8023c5c:	ab01      	add	r3, sp, #4
 8023c5e:	466a      	mov	r2, sp
 8023c60:	f7ff ffc9 	bl	8023bf6 <__swhatbuf_r>
 8023c64:	9900      	ldr	r1, [sp, #0]
 8023c66:	4605      	mov	r5, r0
 8023c68:	4630      	mov	r0, r6
 8023c6a:	f7fb fcab 	bl	801f5c4 <_malloc_r>
 8023c6e:	b948      	cbnz	r0, 8023c84 <__smakebuf_r+0x44>
 8023c70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023c74:	059a      	lsls	r2, r3, #22
 8023c76:	d4ef      	bmi.n	8023c58 <__smakebuf_r+0x18>
 8023c78:	f023 0303 	bic.w	r3, r3, #3
 8023c7c:	f043 0302 	orr.w	r3, r3, #2
 8023c80:	81a3      	strh	r3, [r4, #12]
 8023c82:	e7e3      	b.n	8023c4c <__smakebuf_r+0xc>
 8023c84:	4b0d      	ldr	r3, [pc, #52]	; (8023cbc <__smakebuf_r+0x7c>)
 8023c86:	62b3      	str	r3, [r6, #40]	; 0x28
 8023c88:	89a3      	ldrh	r3, [r4, #12]
 8023c8a:	6020      	str	r0, [r4, #0]
 8023c8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023c90:	81a3      	strh	r3, [r4, #12]
 8023c92:	9b00      	ldr	r3, [sp, #0]
 8023c94:	6163      	str	r3, [r4, #20]
 8023c96:	9b01      	ldr	r3, [sp, #4]
 8023c98:	6120      	str	r0, [r4, #16]
 8023c9a:	b15b      	cbz	r3, 8023cb4 <__smakebuf_r+0x74>
 8023c9c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023ca0:	4630      	mov	r0, r6
 8023ca2:	f000 f86b 	bl	8023d7c <_isatty_r>
 8023ca6:	b128      	cbz	r0, 8023cb4 <__smakebuf_r+0x74>
 8023ca8:	89a3      	ldrh	r3, [r4, #12]
 8023caa:	f023 0303 	bic.w	r3, r3, #3
 8023cae:	f043 0301 	orr.w	r3, r3, #1
 8023cb2:	81a3      	strh	r3, [r4, #12]
 8023cb4:	89a0      	ldrh	r0, [r4, #12]
 8023cb6:	4305      	orrs	r5, r0
 8023cb8:	81a5      	strh	r5, [r4, #12]
 8023cba:	e7cd      	b.n	8023c58 <__smakebuf_r+0x18>
 8023cbc:	0801f365 	.word	0x0801f365

08023cc0 <_malloc_usable_size_r>:
 8023cc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023cc4:	1f18      	subs	r0, r3, #4
 8023cc6:	2b00      	cmp	r3, #0
 8023cc8:	bfbc      	itt	lt
 8023cca:	580b      	ldrlt	r3, [r1, r0]
 8023ccc:	18c0      	addlt	r0, r0, r3
 8023cce:	4770      	bx	lr

08023cd0 <_raise_r>:
 8023cd0:	291f      	cmp	r1, #31
 8023cd2:	b538      	push	{r3, r4, r5, lr}
 8023cd4:	4604      	mov	r4, r0
 8023cd6:	460d      	mov	r5, r1
 8023cd8:	d904      	bls.n	8023ce4 <_raise_r+0x14>
 8023cda:	2316      	movs	r3, #22
 8023cdc:	6003      	str	r3, [r0, #0]
 8023cde:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023ce2:	bd38      	pop	{r3, r4, r5, pc}
 8023ce4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8023ce6:	b112      	cbz	r2, 8023cee <_raise_r+0x1e>
 8023ce8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023cec:	b94b      	cbnz	r3, 8023d02 <_raise_r+0x32>
 8023cee:	4620      	mov	r0, r4
 8023cf0:	f000 f830 	bl	8023d54 <_getpid_r>
 8023cf4:	462a      	mov	r2, r5
 8023cf6:	4601      	mov	r1, r0
 8023cf8:	4620      	mov	r0, r4
 8023cfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023cfe:	f000 b817 	b.w	8023d30 <_kill_r>
 8023d02:	2b01      	cmp	r3, #1
 8023d04:	d00a      	beq.n	8023d1c <_raise_r+0x4c>
 8023d06:	1c59      	adds	r1, r3, #1
 8023d08:	d103      	bne.n	8023d12 <_raise_r+0x42>
 8023d0a:	2316      	movs	r3, #22
 8023d0c:	6003      	str	r3, [r0, #0]
 8023d0e:	2001      	movs	r0, #1
 8023d10:	e7e7      	b.n	8023ce2 <_raise_r+0x12>
 8023d12:	2400      	movs	r4, #0
 8023d14:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8023d18:	4628      	mov	r0, r5
 8023d1a:	4798      	blx	r3
 8023d1c:	2000      	movs	r0, #0
 8023d1e:	e7e0      	b.n	8023ce2 <_raise_r+0x12>

08023d20 <raise>:
 8023d20:	4b02      	ldr	r3, [pc, #8]	; (8023d2c <raise+0xc>)
 8023d22:	4601      	mov	r1, r0
 8023d24:	6818      	ldr	r0, [r3, #0]
 8023d26:	f7ff bfd3 	b.w	8023cd0 <_raise_r>
 8023d2a:	bf00      	nop
 8023d2c:	20000150 	.word	0x20000150

08023d30 <_kill_r>:
 8023d30:	b538      	push	{r3, r4, r5, lr}
 8023d32:	4d07      	ldr	r5, [pc, #28]	; (8023d50 <_kill_r+0x20>)
 8023d34:	2300      	movs	r3, #0
 8023d36:	4604      	mov	r4, r0
 8023d38:	4608      	mov	r0, r1
 8023d3a:	4611      	mov	r1, r2
 8023d3c:	602b      	str	r3, [r5, #0]
 8023d3e:	f002 fc85 	bl	802664c <_kill>
 8023d42:	1c43      	adds	r3, r0, #1
 8023d44:	d102      	bne.n	8023d4c <_kill_r+0x1c>
 8023d46:	682b      	ldr	r3, [r5, #0]
 8023d48:	b103      	cbz	r3, 8023d4c <_kill_r+0x1c>
 8023d4a:	6023      	str	r3, [r4, #0]
 8023d4c:	bd38      	pop	{r3, r4, r5, pc}
 8023d4e:	bf00      	nop
 8023d50:	2000f584 	.word	0x2000f584

08023d54 <_getpid_r>:
 8023d54:	f002 bc6a 	b.w	802662c <_getpid>

08023d58 <_fstat_r>:
 8023d58:	b538      	push	{r3, r4, r5, lr}
 8023d5a:	4d07      	ldr	r5, [pc, #28]	; (8023d78 <_fstat_r+0x20>)
 8023d5c:	2300      	movs	r3, #0
 8023d5e:	4604      	mov	r4, r0
 8023d60:	4608      	mov	r0, r1
 8023d62:	4611      	mov	r1, r2
 8023d64:	602b      	str	r3, [r5, #0]
 8023d66:	f002 fc59 	bl	802661c <_fstat>
 8023d6a:	1c43      	adds	r3, r0, #1
 8023d6c:	d102      	bne.n	8023d74 <_fstat_r+0x1c>
 8023d6e:	682b      	ldr	r3, [r5, #0]
 8023d70:	b103      	cbz	r3, 8023d74 <_fstat_r+0x1c>
 8023d72:	6023      	str	r3, [r4, #0]
 8023d74:	bd38      	pop	{r3, r4, r5, pc}
 8023d76:	bf00      	nop
 8023d78:	2000f584 	.word	0x2000f584

08023d7c <_isatty_r>:
 8023d7c:	b538      	push	{r3, r4, r5, lr}
 8023d7e:	4d06      	ldr	r5, [pc, #24]	; (8023d98 <_isatty_r+0x1c>)
 8023d80:	2300      	movs	r3, #0
 8023d82:	4604      	mov	r4, r0
 8023d84:	4608      	mov	r0, r1
 8023d86:	602b      	str	r3, [r5, #0]
 8023d88:	f002 fc58 	bl	802663c <_isatty>
 8023d8c:	1c43      	adds	r3, r0, #1
 8023d8e:	d102      	bne.n	8023d96 <_isatty_r+0x1a>
 8023d90:	682b      	ldr	r3, [r5, #0]
 8023d92:	b103      	cbz	r3, 8023d96 <_isatty_r+0x1a>
 8023d94:	6023      	str	r3, [r4, #0]
 8023d96:	bd38      	pop	{r3, r4, r5, pc}
 8023d98:	2000f584 	.word	0x2000f584
 8023d9c:	00000000 	.word	0x00000000

08023da0 <atan>:
 8023da0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023da4:	ec55 4b10 	vmov	r4, r5, d0
 8023da8:	4bc3      	ldr	r3, [pc, #780]	; (80240b8 <atan+0x318>)
 8023daa:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8023dae:	429e      	cmp	r6, r3
 8023db0:	46ab      	mov	fp, r5
 8023db2:	dd18      	ble.n	8023de6 <atan+0x46>
 8023db4:	4bc1      	ldr	r3, [pc, #772]	; (80240bc <atan+0x31c>)
 8023db6:	429e      	cmp	r6, r3
 8023db8:	dc01      	bgt.n	8023dbe <atan+0x1e>
 8023dba:	d109      	bne.n	8023dd0 <atan+0x30>
 8023dbc:	b144      	cbz	r4, 8023dd0 <atan+0x30>
 8023dbe:	4622      	mov	r2, r4
 8023dc0:	462b      	mov	r3, r5
 8023dc2:	4620      	mov	r0, r4
 8023dc4:	4629      	mov	r1, r5
 8023dc6:	f7dc fa61 	bl	800028c <__adddf3>
 8023dca:	4604      	mov	r4, r0
 8023dcc:	460d      	mov	r5, r1
 8023dce:	e006      	b.n	8023dde <atan+0x3e>
 8023dd0:	f1bb 0f00 	cmp.w	fp, #0
 8023dd4:	f300 8131 	bgt.w	802403a <atan+0x29a>
 8023dd8:	a59b      	add	r5, pc, #620	; (adr r5, 8024048 <atan+0x2a8>)
 8023dda:	e9d5 4500 	ldrd	r4, r5, [r5]
 8023dde:	ec45 4b10 	vmov	d0, r4, r5
 8023de2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023de6:	4bb6      	ldr	r3, [pc, #728]	; (80240c0 <atan+0x320>)
 8023de8:	429e      	cmp	r6, r3
 8023dea:	dc14      	bgt.n	8023e16 <atan+0x76>
 8023dec:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8023df0:	429e      	cmp	r6, r3
 8023df2:	dc0d      	bgt.n	8023e10 <atan+0x70>
 8023df4:	a396      	add	r3, pc, #600	; (adr r3, 8024050 <atan+0x2b0>)
 8023df6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023dfa:	ee10 0a10 	vmov	r0, s0
 8023dfe:	4629      	mov	r1, r5
 8023e00:	f7dc fa44 	bl	800028c <__adddf3>
 8023e04:	4baf      	ldr	r3, [pc, #700]	; (80240c4 <atan+0x324>)
 8023e06:	2200      	movs	r2, #0
 8023e08:	f7dc fe86 	bl	8000b18 <__aeabi_dcmpgt>
 8023e0c:	2800      	cmp	r0, #0
 8023e0e:	d1e6      	bne.n	8023dde <atan+0x3e>
 8023e10:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8023e14:	e02b      	b.n	8023e6e <atan+0xce>
 8023e16:	f000 f9b7 	bl	8024188 <fabs>
 8023e1a:	4bab      	ldr	r3, [pc, #684]	; (80240c8 <atan+0x328>)
 8023e1c:	429e      	cmp	r6, r3
 8023e1e:	ec55 4b10 	vmov	r4, r5, d0
 8023e22:	f300 80bf 	bgt.w	8023fa4 <atan+0x204>
 8023e26:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8023e2a:	429e      	cmp	r6, r3
 8023e2c:	f300 80a0 	bgt.w	8023f70 <atan+0x1d0>
 8023e30:	ee10 2a10 	vmov	r2, s0
 8023e34:	ee10 0a10 	vmov	r0, s0
 8023e38:	462b      	mov	r3, r5
 8023e3a:	4629      	mov	r1, r5
 8023e3c:	f7dc fa26 	bl	800028c <__adddf3>
 8023e40:	4ba0      	ldr	r3, [pc, #640]	; (80240c4 <atan+0x324>)
 8023e42:	2200      	movs	r2, #0
 8023e44:	f7dc fa20 	bl	8000288 <__aeabi_dsub>
 8023e48:	2200      	movs	r2, #0
 8023e4a:	4606      	mov	r6, r0
 8023e4c:	460f      	mov	r7, r1
 8023e4e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8023e52:	4620      	mov	r0, r4
 8023e54:	4629      	mov	r1, r5
 8023e56:	f7dc fa19 	bl	800028c <__adddf3>
 8023e5a:	4602      	mov	r2, r0
 8023e5c:	460b      	mov	r3, r1
 8023e5e:	4630      	mov	r0, r6
 8023e60:	4639      	mov	r1, r7
 8023e62:	f7dc fcf3 	bl	800084c <__aeabi_ddiv>
 8023e66:	f04f 0a00 	mov.w	sl, #0
 8023e6a:	4604      	mov	r4, r0
 8023e6c:	460d      	mov	r5, r1
 8023e6e:	4622      	mov	r2, r4
 8023e70:	462b      	mov	r3, r5
 8023e72:	4620      	mov	r0, r4
 8023e74:	4629      	mov	r1, r5
 8023e76:	f7dc fbbf 	bl	80005f8 <__aeabi_dmul>
 8023e7a:	4602      	mov	r2, r0
 8023e7c:	460b      	mov	r3, r1
 8023e7e:	4680      	mov	r8, r0
 8023e80:	4689      	mov	r9, r1
 8023e82:	f7dc fbb9 	bl	80005f8 <__aeabi_dmul>
 8023e86:	a374      	add	r3, pc, #464	; (adr r3, 8024058 <atan+0x2b8>)
 8023e88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023e8c:	4606      	mov	r6, r0
 8023e8e:	460f      	mov	r7, r1
 8023e90:	f7dc fbb2 	bl	80005f8 <__aeabi_dmul>
 8023e94:	a372      	add	r3, pc, #456	; (adr r3, 8024060 <atan+0x2c0>)
 8023e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023e9a:	f7dc f9f7 	bl	800028c <__adddf3>
 8023e9e:	4632      	mov	r2, r6
 8023ea0:	463b      	mov	r3, r7
 8023ea2:	f7dc fba9 	bl	80005f8 <__aeabi_dmul>
 8023ea6:	a370      	add	r3, pc, #448	; (adr r3, 8024068 <atan+0x2c8>)
 8023ea8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023eac:	f7dc f9ee 	bl	800028c <__adddf3>
 8023eb0:	4632      	mov	r2, r6
 8023eb2:	463b      	mov	r3, r7
 8023eb4:	f7dc fba0 	bl	80005f8 <__aeabi_dmul>
 8023eb8:	a36d      	add	r3, pc, #436	; (adr r3, 8024070 <atan+0x2d0>)
 8023eba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ebe:	f7dc f9e5 	bl	800028c <__adddf3>
 8023ec2:	4632      	mov	r2, r6
 8023ec4:	463b      	mov	r3, r7
 8023ec6:	f7dc fb97 	bl	80005f8 <__aeabi_dmul>
 8023eca:	a36b      	add	r3, pc, #428	; (adr r3, 8024078 <atan+0x2d8>)
 8023ecc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ed0:	f7dc f9dc 	bl	800028c <__adddf3>
 8023ed4:	4632      	mov	r2, r6
 8023ed6:	463b      	mov	r3, r7
 8023ed8:	f7dc fb8e 	bl	80005f8 <__aeabi_dmul>
 8023edc:	a368      	add	r3, pc, #416	; (adr r3, 8024080 <atan+0x2e0>)
 8023ede:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ee2:	f7dc f9d3 	bl	800028c <__adddf3>
 8023ee6:	4642      	mov	r2, r8
 8023ee8:	464b      	mov	r3, r9
 8023eea:	f7dc fb85 	bl	80005f8 <__aeabi_dmul>
 8023eee:	a366      	add	r3, pc, #408	; (adr r3, 8024088 <atan+0x2e8>)
 8023ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ef4:	4680      	mov	r8, r0
 8023ef6:	4689      	mov	r9, r1
 8023ef8:	4630      	mov	r0, r6
 8023efa:	4639      	mov	r1, r7
 8023efc:	f7dc fb7c 	bl	80005f8 <__aeabi_dmul>
 8023f00:	a363      	add	r3, pc, #396	; (adr r3, 8024090 <atan+0x2f0>)
 8023f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f06:	f7dc f9bf 	bl	8000288 <__aeabi_dsub>
 8023f0a:	4632      	mov	r2, r6
 8023f0c:	463b      	mov	r3, r7
 8023f0e:	f7dc fb73 	bl	80005f8 <__aeabi_dmul>
 8023f12:	a361      	add	r3, pc, #388	; (adr r3, 8024098 <atan+0x2f8>)
 8023f14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f18:	f7dc f9b6 	bl	8000288 <__aeabi_dsub>
 8023f1c:	4632      	mov	r2, r6
 8023f1e:	463b      	mov	r3, r7
 8023f20:	f7dc fb6a 	bl	80005f8 <__aeabi_dmul>
 8023f24:	a35e      	add	r3, pc, #376	; (adr r3, 80240a0 <atan+0x300>)
 8023f26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f2a:	f7dc f9ad 	bl	8000288 <__aeabi_dsub>
 8023f2e:	4632      	mov	r2, r6
 8023f30:	463b      	mov	r3, r7
 8023f32:	f7dc fb61 	bl	80005f8 <__aeabi_dmul>
 8023f36:	a35c      	add	r3, pc, #368	; (adr r3, 80240a8 <atan+0x308>)
 8023f38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f3c:	f7dc f9a4 	bl	8000288 <__aeabi_dsub>
 8023f40:	4632      	mov	r2, r6
 8023f42:	463b      	mov	r3, r7
 8023f44:	f7dc fb58 	bl	80005f8 <__aeabi_dmul>
 8023f48:	4602      	mov	r2, r0
 8023f4a:	460b      	mov	r3, r1
 8023f4c:	4640      	mov	r0, r8
 8023f4e:	4649      	mov	r1, r9
 8023f50:	f7dc f99c 	bl	800028c <__adddf3>
 8023f54:	4622      	mov	r2, r4
 8023f56:	462b      	mov	r3, r5
 8023f58:	f7dc fb4e 	bl	80005f8 <__aeabi_dmul>
 8023f5c:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8023f60:	4602      	mov	r2, r0
 8023f62:	460b      	mov	r3, r1
 8023f64:	d14b      	bne.n	8023ffe <atan+0x25e>
 8023f66:	4620      	mov	r0, r4
 8023f68:	4629      	mov	r1, r5
 8023f6a:	f7dc f98d 	bl	8000288 <__aeabi_dsub>
 8023f6e:	e72c      	b.n	8023dca <atan+0x2a>
 8023f70:	ee10 0a10 	vmov	r0, s0
 8023f74:	4b53      	ldr	r3, [pc, #332]	; (80240c4 <atan+0x324>)
 8023f76:	2200      	movs	r2, #0
 8023f78:	4629      	mov	r1, r5
 8023f7a:	f7dc f985 	bl	8000288 <__aeabi_dsub>
 8023f7e:	4b51      	ldr	r3, [pc, #324]	; (80240c4 <atan+0x324>)
 8023f80:	4606      	mov	r6, r0
 8023f82:	460f      	mov	r7, r1
 8023f84:	2200      	movs	r2, #0
 8023f86:	4620      	mov	r0, r4
 8023f88:	4629      	mov	r1, r5
 8023f8a:	f7dc f97f 	bl	800028c <__adddf3>
 8023f8e:	4602      	mov	r2, r0
 8023f90:	460b      	mov	r3, r1
 8023f92:	4630      	mov	r0, r6
 8023f94:	4639      	mov	r1, r7
 8023f96:	f7dc fc59 	bl	800084c <__aeabi_ddiv>
 8023f9a:	f04f 0a01 	mov.w	sl, #1
 8023f9e:	4604      	mov	r4, r0
 8023fa0:	460d      	mov	r5, r1
 8023fa2:	e764      	b.n	8023e6e <atan+0xce>
 8023fa4:	4b49      	ldr	r3, [pc, #292]	; (80240cc <atan+0x32c>)
 8023fa6:	429e      	cmp	r6, r3
 8023fa8:	da1d      	bge.n	8023fe6 <atan+0x246>
 8023faa:	ee10 0a10 	vmov	r0, s0
 8023fae:	4b48      	ldr	r3, [pc, #288]	; (80240d0 <atan+0x330>)
 8023fb0:	2200      	movs	r2, #0
 8023fb2:	4629      	mov	r1, r5
 8023fb4:	f7dc f968 	bl	8000288 <__aeabi_dsub>
 8023fb8:	4b45      	ldr	r3, [pc, #276]	; (80240d0 <atan+0x330>)
 8023fba:	4606      	mov	r6, r0
 8023fbc:	460f      	mov	r7, r1
 8023fbe:	2200      	movs	r2, #0
 8023fc0:	4620      	mov	r0, r4
 8023fc2:	4629      	mov	r1, r5
 8023fc4:	f7dc fb18 	bl	80005f8 <__aeabi_dmul>
 8023fc8:	4b3e      	ldr	r3, [pc, #248]	; (80240c4 <atan+0x324>)
 8023fca:	2200      	movs	r2, #0
 8023fcc:	f7dc f95e 	bl	800028c <__adddf3>
 8023fd0:	4602      	mov	r2, r0
 8023fd2:	460b      	mov	r3, r1
 8023fd4:	4630      	mov	r0, r6
 8023fd6:	4639      	mov	r1, r7
 8023fd8:	f7dc fc38 	bl	800084c <__aeabi_ddiv>
 8023fdc:	f04f 0a02 	mov.w	sl, #2
 8023fe0:	4604      	mov	r4, r0
 8023fe2:	460d      	mov	r5, r1
 8023fe4:	e743      	b.n	8023e6e <atan+0xce>
 8023fe6:	462b      	mov	r3, r5
 8023fe8:	ee10 2a10 	vmov	r2, s0
 8023fec:	4939      	ldr	r1, [pc, #228]	; (80240d4 <atan+0x334>)
 8023fee:	2000      	movs	r0, #0
 8023ff0:	f7dc fc2c 	bl	800084c <__aeabi_ddiv>
 8023ff4:	f04f 0a03 	mov.w	sl, #3
 8023ff8:	4604      	mov	r4, r0
 8023ffa:	460d      	mov	r5, r1
 8023ffc:	e737      	b.n	8023e6e <atan+0xce>
 8023ffe:	4b36      	ldr	r3, [pc, #216]	; (80240d8 <atan+0x338>)
 8024000:	4e36      	ldr	r6, [pc, #216]	; (80240dc <atan+0x33c>)
 8024002:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 8024006:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 802400a:	e9da 2300 	ldrd	r2, r3, [sl]
 802400e:	f7dc f93b 	bl	8000288 <__aeabi_dsub>
 8024012:	4622      	mov	r2, r4
 8024014:	462b      	mov	r3, r5
 8024016:	f7dc f937 	bl	8000288 <__aeabi_dsub>
 802401a:	4602      	mov	r2, r0
 802401c:	460b      	mov	r3, r1
 802401e:	e9d6 0100 	ldrd	r0, r1, [r6]
 8024022:	f7dc f931 	bl	8000288 <__aeabi_dsub>
 8024026:	f1bb 0f00 	cmp.w	fp, #0
 802402a:	4604      	mov	r4, r0
 802402c:	460d      	mov	r5, r1
 802402e:	f6bf aed6 	bge.w	8023dde <atan+0x3e>
 8024032:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024036:	461d      	mov	r5, r3
 8024038:	e6d1      	b.n	8023dde <atan+0x3e>
 802403a:	a51d      	add	r5, pc, #116	; (adr r5, 80240b0 <atan+0x310>)
 802403c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8024040:	e6cd      	b.n	8023dde <atan+0x3e>
 8024042:	bf00      	nop
 8024044:	f3af 8000 	nop.w
 8024048:	54442d18 	.word	0x54442d18
 802404c:	bff921fb 	.word	0xbff921fb
 8024050:	8800759c 	.word	0x8800759c
 8024054:	7e37e43c 	.word	0x7e37e43c
 8024058:	e322da11 	.word	0xe322da11
 802405c:	3f90ad3a 	.word	0x3f90ad3a
 8024060:	24760deb 	.word	0x24760deb
 8024064:	3fa97b4b 	.word	0x3fa97b4b
 8024068:	a0d03d51 	.word	0xa0d03d51
 802406c:	3fb10d66 	.word	0x3fb10d66
 8024070:	c54c206e 	.word	0xc54c206e
 8024074:	3fb745cd 	.word	0x3fb745cd
 8024078:	920083ff 	.word	0x920083ff
 802407c:	3fc24924 	.word	0x3fc24924
 8024080:	5555550d 	.word	0x5555550d
 8024084:	3fd55555 	.word	0x3fd55555
 8024088:	2c6a6c2f 	.word	0x2c6a6c2f
 802408c:	bfa2b444 	.word	0xbfa2b444
 8024090:	52defd9a 	.word	0x52defd9a
 8024094:	3fadde2d 	.word	0x3fadde2d
 8024098:	af749a6d 	.word	0xaf749a6d
 802409c:	3fb3b0f2 	.word	0x3fb3b0f2
 80240a0:	fe231671 	.word	0xfe231671
 80240a4:	3fbc71c6 	.word	0x3fbc71c6
 80240a8:	9998ebc4 	.word	0x9998ebc4
 80240ac:	3fc99999 	.word	0x3fc99999
 80240b0:	54442d18 	.word	0x54442d18
 80240b4:	3ff921fb 	.word	0x3ff921fb
 80240b8:	440fffff 	.word	0x440fffff
 80240bc:	7ff00000 	.word	0x7ff00000
 80240c0:	3fdbffff 	.word	0x3fdbffff
 80240c4:	3ff00000 	.word	0x3ff00000
 80240c8:	3ff2ffff 	.word	0x3ff2ffff
 80240cc:	40038000 	.word	0x40038000
 80240d0:	3ff80000 	.word	0x3ff80000
 80240d4:	bff00000 	.word	0xbff00000
 80240d8:	08027390 	.word	0x08027390
 80240dc:	08027370 	.word	0x08027370

080240e0 <cos>:
 80240e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80240e2:	ec53 2b10 	vmov	r2, r3, d0
 80240e6:	4826      	ldr	r0, [pc, #152]	; (8024180 <cos+0xa0>)
 80240e8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80240ec:	4281      	cmp	r1, r0
 80240ee:	dc06      	bgt.n	80240fe <cos+0x1e>
 80240f0:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8024178 <cos+0x98>
 80240f4:	b005      	add	sp, #20
 80240f6:	f85d eb04 	ldr.w	lr, [sp], #4
 80240fa:	f001 bced 	b.w	8025ad8 <__kernel_cos>
 80240fe:	4821      	ldr	r0, [pc, #132]	; (8024184 <cos+0xa4>)
 8024100:	4281      	cmp	r1, r0
 8024102:	dd09      	ble.n	8024118 <cos+0x38>
 8024104:	ee10 0a10 	vmov	r0, s0
 8024108:	4619      	mov	r1, r3
 802410a:	f7dc f8bd 	bl	8000288 <__aeabi_dsub>
 802410e:	ec41 0b10 	vmov	d0, r0, r1
 8024112:	b005      	add	sp, #20
 8024114:	f85d fb04 	ldr.w	pc, [sp], #4
 8024118:	4668      	mov	r0, sp
 802411a:	f001 fa19 	bl	8025550 <__ieee754_rem_pio2>
 802411e:	f000 0003 	and.w	r0, r0, #3
 8024122:	2801      	cmp	r0, #1
 8024124:	d00b      	beq.n	802413e <cos+0x5e>
 8024126:	2802      	cmp	r0, #2
 8024128:	d016      	beq.n	8024158 <cos+0x78>
 802412a:	b9e0      	cbnz	r0, 8024166 <cos+0x86>
 802412c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024130:	ed9d 0b00 	vldr	d0, [sp]
 8024134:	f001 fcd0 	bl	8025ad8 <__kernel_cos>
 8024138:	ec51 0b10 	vmov	r0, r1, d0
 802413c:	e7e7      	b.n	802410e <cos+0x2e>
 802413e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024142:	ed9d 0b00 	vldr	d0, [sp]
 8024146:	f002 f8df 	bl	8026308 <__kernel_sin>
 802414a:	ec53 2b10 	vmov	r2, r3, d0
 802414e:	ee10 0a10 	vmov	r0, s0
 8024152:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8024156:	e7da      	b.n	802410e <cos+0x2e>
 8024158:	ed9d 1b02 	vldr	d1, [sp, #8]
 802415c:	ed9d 0b00 	vldr	d0, [sp]
 8024160:	f001 fcba 	bl	8025ad8 <__kernel_cos>
 8024164:	e7f1      	b.n	802414a <cos+0x6a>
 8024166:	ed9d 1b02 	vldr	d1, [sp, #8]
 802416a:	ed9d 0b00 	vldr	d0, [sp]
 802416e:	2001      	movs	r0, #1
 8024170:	f002 f8ca 	bl	8026308 <__kernel_sin>
 8024174:	e7e0      	b.n	8024138 <cos+0x58>
 8024176:	bf00      	nop
	...
 8024180:	3fe921fb 	.word	0x3fe921fb
 8024184:	7fefffff 	.word	0x7fefffff

08024188 <fabs>:
 8024188:	ec51 0b10 	vmov	r0, r1, d0
 802418c:	ee10 2a10 	vmov	r2, s0
 8024190:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024194:	ec43 2b10 	vmov	d0, r2, r3
 8024198:	4770      	bx	lr
 802419a:	0000      	movs	r0, r0
 802419c:	0000      	movs	r0, r0
	...

080241a0 <floor>:
 80241a0:	ec51 0b10 	vmov	r0, r1, d0
 80241a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80241a8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80241ac:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80241b0:	2e13      	cmp	r6, #19
 80241b2:	ee10 5a10 	vmov	r5, s0
 80241b6:	ee10 8a10 	vmov	r8, s0
 80241ba:	460c      	mov	r4, r1
 80241bc:	dc32      	bgt.n	8024224 <floor+0x84>
 80241be:	2e00      	cmp	r6, #0
 80241c0:	da14      	bge.n	80241ec <floor+0x4c>
 80241c2:	a333      	add	r3, pc, #204	; (adr r3, 8024290 <floor+0xf0>)
 80241c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241c8:	f7dc f860 	bl	800028c <__adddf3>
 80241cc:	2200      	movs	r2, #0
 80241ce:	2300      	movs	r3, #0
 80241d0:	f7dc fca2 	bl	8000b18 <__aeabi_dcmpgt>
 80241d4:	b138      	cbz	r0, 80241e6 <floor+0x46>
 80241d6:	2c00      	cmp	r4, #0
 80241d8:	da57      	bge.n	802428a <floor+0xea>
 80241da:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80241de:	431d      	orrs	r5, r3
 80241e0:	d001      	beq.n	80241e6 <floor+0x46>
 80241e2:	4c2d      	ldr	r4, [pc, #180]	; (8024298 <floor+0xf8>)
 80241e4:	2500      	movs	r5, #0
 80241e6:	4621      	mov	r1, r4
 80241e8:	4628      	mov	r0, r5
 80241ea:	e025      	b.n	8024238 <floor+0x98>
 80241ec:	4f2b      	ldr	r7, [pc, #172]	; (802429c <floor+0xfc>)
 80241ee:	4137      	asrs	r7, r6
 80241f0:	ea01 0307 	and.w	r3, r1, r7
 80241f4:	4303      	orrs	r3, r0
 80241f6:	d01f      	beq.n	8024238 <floor+0x98>
 80241f8:	a325      	add	r3, pc, #148	; (adr r3, 8024290 <floor+0xf0>)
 80241fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80241fe:	f7dc f845 	bl	800028c <__adddf3>
 8024202:	2200      	movs	r2, #0
 8024204:	2300      	movs	r3, #0
 8024206:	f7dc fc87 	bl	8000b18 <__aeabi_dcmpgt>
 802420a:	2800      	cmp	r0, #0
 802420c:	d0eb      	beq.n	80241e6 <floor+0x46>
 802420e:	2c00      	cmp	r4, #0
 8024210:	bfbe      	ittt	lt
 8024212:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8024216:	fa43 f606 	asrlt.w	r6, r3, r6
 802421a:	19a4      	addlt	r4, r4, r6
 802421c:	ea24 0407 	bic.w	r4, r4, r7
 8024220:	2500      	movs	r5, #0
 8024222:	e7e0      	b.n	80241e6 <floor+0x46>
 8024224:	2e33      	cmp	r6, #51	; 0x33
 8024226:	dd0b      	ble.n	8024240 <floor+0xa0>
 8024228:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 802422c:	d104      	bne.n	8024238 <floor+0x98>
 802422e:	ee10 2a10 	vmov	r2, s0
 8024232:	460b      	mov	r3, r1
 8024234:	f7dc f82a 	bl	800028c <__adddf3>
 8024238:	ec41 0b10 	vmov	d0, r0, r1
 802423c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024240:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8024244:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8024248:	fa23 f707 	lsr.w	r7, r3, r7
 802424c:	4207      	tst	r7, r0
 802424e:	d0f3      	beq.n	8024238 <floor+0x98>
 8024250:	a30f      	add	r3, pc, #60	; (adr r3, 8024290 <floor+0xf0>)
 8024252:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024256:	f7dc f819 	bl	800028c <__adddf3>
 802425a:	2200      	movs	r2, #0
 802425c:	2300      	movs	r3, #0
 802425e:	f7dc fc5b 	bl	8000b18 <__aeabi_dcmpgt>
 8024262:	2800      	cmp	r0, #0
 8024264:	d0bf      	beq.n	80241e6 <floor+0x46>
 8024266:	2c00      	cmp	r4, #0
 8024268:	da02      	bge.n	8024270 <floor+0xd0>
 802426a:	2e14      	cmp	r6, #20
 802426c:	d103      	bne.n	8024276 <floor+0xd6>
 802426e:	3401      	adds	r4, #1
 8024270:	ea25 0507 	bic.w	r5, r5, r7
 8024274:	e7b7      	b.n	80241e6 <floor+0x46>
 8024276:	2301      	movs	r3, #1
 8024278:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 802427c:	fa03 f606 	lsl.w	r6, r3, r6
 8024280:	4435      	add	r5, r6
 8024282:	4545      	cmp	r5, r8
 8024284:	bf38      	it	cc
 8024286:	18e4      	addcc	r4, r4, r3
 8024288:	e7f2      	b.n	8024270 <floor+0xd0>
 802428a:	2500      	movs	r5, #0
 802428c:	462c      	mov	r4, r5
 802428e:	e7aa      	b.n	80241e6 <floor+0x46>
 8024290:	8800759c 	.word	0x8800759c
 8024294:	7e37e43c 	.word	0x7e37e43c
 8024298:	bff00000 	.word	0xbff00000
 802429c:	000fffff 	.word	0x000fffff

080242a0 <sin>:
 80242a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80242a2:	ec53 2b10 	vmov	r2, r3, d0
 80242a6:	4828      	ldr	r0, [pc, #160]	; (8024348 <sin+0xa8>)
 80242a8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80242ac:	4281      	cmp	r1, r0
 80242ae:	dc07      	bgt.n	80242c0 <sin+0x20>
 80242b0:	ed9f 1b23 	vldr	d1, [pc, #140]	; 8024340 <sin+0xa0>
 80242b4:	2000      	movs	r0, #0
 80242b6:	b005      	add	sp, #20
 80242b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80242bc:	f002 b824 	b.w	8026308 <__kernel_sin>
 80242c0:	4822      	ldr	r0, [pc, #136]	; (802434c <sin+0xac>)
 80242c2:	4281      	cmp	r1, r0
 80242c4:	dd09      	ble.n	80242da <sin+0x3a>
 80242c6:	ee10 0a10 	vmov	r0, s0
 80242ca:	4619      	mov	r1, r3
 80242cc:	f7db ffdc 	bl	8000288 <__aeabi_dsub>
 80242d0:	ec41 0b10 	vmov	d0, r0, r1
 80242d4:	b005      	add	sp, #20
 80242d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80242da:	4668      	mov	r0, sp
 80242dc:	f001 f938 	bl	8025550 <__ieee754_rem_pio2>
 80242e0:	f000 0003 	and.w	r0, r0, #3
 80242e4:	2801      	cmp	r0, #1
 80242e6:	d00c      	beq.n	8024302 <sin+0x62>
 80242e8:	2802      	cmp	r0, #2
 80242ea:	d011      	beq.n	8024310 <sin+0x70>
 80242ec:	b9f0      	cbnz	r0, 802432c <sin+0x8c>
 80242ee:	ed9d 1b02 	vldr	d1, [sp, #8]
 80242f2:	ed9d 0b00 	vldr	d0, [sp]
 80242f6:	2001      	movs	r0, #1
 80242f8:	f002 f806 	bl	8026308 <__kernel_sin>
 80242fc:	ec51 0b10 	vmov	r0, r1, d0
 8024300:	e7e6      	b.n	80242d0 <sin+0x30>
 8024302:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024306:	ed9d 0b00 	vldr	d0, [sp]
 802430a:	f001 fbe5 	bl	8025ad8 <__kernel_cos>
 802430e:	e7f5      	b.n	80242fc <sin+0x5c>
 8024310:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024314:	ed9d 0b00 	vldr	d0, [sp]
 8024318:	2001      	movs	r0, #1
 802431a:	f001 fff5 	bl	8026308 <__kernel_sin>
 802431e:	ec53 2b10 	vmov	r2, r3, d0
 8024322:	ee10 0a10 	vmov	r0, s0
 8024326:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802432a:	e7d1      	b.n	80242d0 <sin+0x30>
 802432c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024330:	ed9d 0b00 	vldr	d0, [sp]
 8024334:	f001 fbd0 	bl	8025ad8 <__kernel_cos>
 8024338:	e7f1      	b.n	802431e <sin+0x7e>
 802433a:	bf00      	nop
 802433c:	f3af 8000 	nop.w
	...
 8024348:	3fe921fb 	.word	0x3fe921fb
 802434c:	7fefffff 	.word	0x7fefffff

08024350 <asin>:
 8024350:	b538      	push	{r3, r4, r5, lr}
 8024352:	ed2d 8b02 	vpush	{d8}
 8024356:	ec55 4b10 	vmov	r4, r5, d0
 802435a:	f000 f8e9 	bl	8024530 <__ieee754_asin>
 802435e:	4622      	mov	r2, r4
 8024360:	462b      	mov	r3, r5
 8024362:	4620      	mov	r0, r4
 8024364:	4629      	mov	r1, r5
 8024366:	eeb0 8a40 	vmov.f32	s16, s0
 802436a:	eef0 8a60 	vmov.f32	s17, s1
 802436e:	f7dc fbdd 	bl	8000b2c <__aeabi_dcmpun>
 8024372:	b9a8      	cbnz	r0, 80243a0 <asin+0x50>
 8024374:	ec45 4b10 	vmov	d0, r4, r5
 8024378:	f7ff ff06 	bl	8024188 <fabs>
 802437c:	4b0c      	ldr	r3, [pc, #48]	; (80243b0 <asin+0x60>)
 802437e:	ec51 0b10 	vmov	r0, r1, d0
 8024382:	2200      	movs	r2, #0
 8024384:	f7dc fbc8 	bl	8000b18 <__aeabi_dcmpgt>
 8024388:	b150      	cbz	r0, 80243a0 <asin+0x50>
 802438a:	f7fd fe6b 	bl	8022064 <__errno>
 802438e:	ecbd 8b02 	vpop	{d8}
 8024392:	2321      	movs	r3, #33	; 0x21
 8024394:	6003      	str	r3, [r0, #0]
 8024396:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802439a:	4806      	ldr	r0, [pc, #24]	; (80243b4 <asin+0x64>)
 802439c:	f7ff b968 	b.w	8023670 <nan>
 80243a0:	eeb0 0a48 	vmov.f32	s0, s16
 80243a4:	eef0 0a68 	vmov.f32	s1, s17
 80243a8:	ecbd 8b02 	vpop	{d8}
 80243ac:	bd38      	pop	{r3, r4, r5, pc}
 80243ae:	bf00      	nop
 80243b0:	3ff00000 	.word	0x3ff00000
 80243b4:	08027368 	.word	0x08027368

080243b8 <atan2>:
 80243b8:	f000 bace 	b.w	8024958 <__ieee754_atan2>

080243bc <pow>:
 80243bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80243be:	ed2d 8b02 	vpush	{d8}
 80243c2:	eeb0 8a40 	vmov.f32	s16, s0
 80243c6:	eef0 8a60 	vmov.f32	s17, s1
 80243ca:	ec55 4b11 	vmov	r4, r5, d1
 80243ce:	f000 fb8f 	bl	8024af0 <__ieee754_pow>
 80243d2:	4622      	mov	r2, r4
 80243d4:	462b      	mov	r3, r5
 80243d6:	4620      	mov	r0, r4
 80243d8:	4629      	mov	r1, r5
 80243da:	ec57 6b10 	vmov	r6, r7, d0
 80243de:	f7dc fba5 	bl	8000b2c <__aeabi_dcmpun>
 80243e2:	2800      	cmp	r0, #0
 80243e4:	d13b      	bne.n	802445e <pow+0xa2>
 80243e6:	ec51 0b18 	vmov	r0, r1, d8
 80243ea:	2200      	movs	r2, #0
 80243ec:	2300      	movs	r3, #0
 80243ee:	f7dc fb6b 	bl	8000ac8 <__aeabi_dcmpeq>
 80243f2:	b1b8      	cbz	r0, 8024424 <pow+0x68>
 80243f4:	2200      	movs	r2, #0
 80243f6:	2300      	movs	r3, #0
 80243f8:	4620      	mov	r0, r4
 80243fa:	4629      	mov	r1, r5
 80243fc:	f7dc fb64 	bl	8000ac8 <__aeabi_dcmpeq>
 8024400:	2800      	cmp	r0, #0
 8024402:	d146      	bne.n	8024492 <pow+0xd6>
 8024404:	ec45 4b10 	vmov	d0, r4, r5
 8024408:	f002 f86c 	bl	80264e4 <finite>
 802440c:	b338      	cbz	r0, 802445e <pow+0xa2>
 802440e:	2200      	movs	r2, #0
 8024410:	2300      	movs	r3, #0
 8024412:	4620      	mov	r0, r4
 8024414:	4629      	mov	r1, r5
 8024416:	f7dc fb61 	bl	8000adc <__aeabi_dcmplt>
 802441a:	b300      	cbz	r0, 802445e <pow+0xa2>
 802441c:	f7fd fe22 	bl	8022064 <__errno>
 8024420:	2322      	movs	r3, #34	; 0x22
 8024422:	e01b      	b.n	802445c <pow+0xa0>
 8024424:	ec47 6b10 	vmov	d0, r6, r7
 8024428:	f002 f85c 	bl	80264e4 <finite>
 802442c:	b9e0      	cbnz	r0, 8024468 <pow+0xac>
 802442e:	eeb0 0a48 	vmov.f32	s0, s16
 8024432:	eef0 0a68 	vmov.f32	s1, s17
 8024436:	f002 f855 	bl	80264e4 <finite>
 802443a:	b1a8      	cbz	r0, 8024468 <pow+0xac>
 802443c:	ec45 4b10 	vmov	d0, r4, r5
 8024440:	f002 f850 	bl	80264e4 <finite>
 8024444:	b180      	cbz	r0, 8024468 <pow+0xac>
 8024446:	4632      	mov	r2, r6
 8024448:	463b      	mov	r3, r7
 802444a:	4630      	mov	r0, r6
 802444c:	4639      	mov	r1, r7
 802444e:	f7dc fb6d 	bl	8000b2c <__aeabi_dcmpun>
 8024452:	2800      	cmp	r0, #0
 8024454:	d0e2      	beq.n	802441c <pow+0x60>
 8024456:	f7fd fe05 	bl	8022064 <__errno>
 802445a:	2321      	movs	r3, #33	; 0x21
 802445c:	6003      	str	r3, [r0, #0]
 802445e:	ecbd 8b02 	vpop	{d8}
 8024462:	ec47 6b10 	vmov	d0, r6, r7
 8024466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024468:	2200      	movs	r2, #0
 802446a:	2300      	movs	r3, #0
 802446c:	4630      	mov	r0, r6
 802446e:	4639      	mov	r1, r7
 8024470:	f7dc fb2a 	bl	8000ac8 <__aeabi_dcmpeq>
 8024474:	2800      	cmp	r0, #0
 8024476:	d0f2      	beq.n	802445e <pow+0xa2>
 8024478:	eeb0 0a48 	vmov.f32	s0, s16
 802447c:	eef0 0a68 	vmov.f32	s1, s17
 8024480:	f002 f830 	bl	80264e4 <finite>
 8024484:	2800      	cmp	r0, #0
 8024486:	d0ea      	beq.n	802445e <pow+0xa2>
 8024488:	ec45 4b10 	vmov	d0, r4, r5
 802448c:	f002 f82a 	bl	80264e4 <finite>
 8024490:	e7c3      	b.n	802441a <pow+0x5e>
 8024492:	4f01      	ldr	r7, [pc, #4]	; (8024498 <pow+0xdc>)
 8024494:	2600      	movs	r6, #0
 8024496:	e7e2      	b.n	802445e <pow+0xa2>
 8024498:	3ff00000 	.word	0x3ff00000

0802449c <sqrt>:
 802449c:	b538      	push	{r3, r4, r5, lr}
 802449e:	ed2d 8b02 	vpush	{d8}
 80244a2:	ec55 4b10 	vmov	r4, r5, d0
 80244a6:	f001 fa5f 	bl	8025968 <__ieee754_sqrt>
 80244aa:	4622      	mov	r2, r4
 80244ac:	462b      	mov	r3, r5
 80244ae:	4620      	mov	r0, r4
 80244b0:	4629      	mov	r1, r5
 80244b2:	eeb0 8a40 	vmov.f32	s16, s0
 80244b6:	eef0 8a60 	vmov.f32	s17, s1
 80244ba:	f7dc fb37 	bl	8000b2c <__aeabi_dcmpun>
 80244be:	b990      	cbnz	r0, 80244e6 <sqrt+0x4a>
 80244c0:	2200      	movs	r2, #0
 80244c2:	2300      	movs	r3, #0
 80244c4:	4620      	mov	r0, r4
 80244c6:	4629      	mov	r1, r5
 80244c8:	f7dc fb08 	bl	8000adc <__aeabi_dcmplt>
 80244cc:	b158      	cbz	r0, 80244e6 <sqrt+0x4a>
 80244ce:	f7fd fdc9 	bl	8022064 <__errno>
 80244d2:	2321      	movs	r3, #33	; 0x21
 80244d4:	6003      	str	r3, [r0, #0]
 80244d6:	2200      	movs	r2, #0
 80244d8:	2300      	movs	r3, #0
 80244da:	4610      	mov	r0, r2
 80244dc:	4619      	mov	r1, r3
 80244de:	f7dc f9b5 	bl	800084c <__aeabi_ddiv>
 80244e2:	ec41 0b18 	vmov	d8, r0, r1
 80244e6:	eeb0 0a48 	vmov.f32	s0, s16
 80244ea:	eef0 0a68 	vmov.f32	s1, s17
 80244ee:	ecbd 8b02 	vpop	{d8}
 80244f2:	bd38      	pop	{r3, r4, r5, pc}

080244f4 <sqrtf>:
 80244f4:	b508      	push	{r3, lr}
 80244f6:	ed2d 8b02 	vpush	{d8}
 80244fa:	eeb0 8a40 	vmov.f32	s16, s0
 80244fe:	f001 fae5 	bl	8025acc <__ieee754_sqrtf>
 8024502:	eeb4 8a48 	vcmp.f32	s16, s16
 8024506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802450a:	d60c      	bvs.n	8024526 <sqrtf+0x32>
 802450c:	eddf 8a07 	vldr	s17, [pc, #28]	; 802452c <sqrtf+0x38>
 8024510:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8024514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024518:	d505      	bpl.n	8024526 <sqrtf+0x32>
 802451a:	f7fd fda3 	bl	8022064 <__errno>
 802451e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8024522:	2321      	movs	r3, #33	; 0x21
 8024524:	6003      	str	r3, [r0, #0]
 8024526:	ecbd 8b02 	vpop	{d8}
 802452a:	bd08      	pop	{r3, pc}
 802452c:	00000000 	.word	0x00000000

08024530 <__ieee754_asin>:
 8024530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024534:	ed2d 8b04 	vpush	{d8-d9}
 8024538:	ec55 4b10 	vmov	r4, r5, d0
 802453c:	4bcc      	ldr	r3, [pc, #816]	; (8024870 <__ieee754_asin+0x340>)
 802453e:	b083      	sub	sp, #12
 8024540:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8024544:	4598      	cmp	r8, r3
 8024546:	9501      	str	r5, [sp, #4]
 8024548:	dd35      	ble.n	80245b6 <__ieee754_asin+0x86>
 802454a:	ee10 3a10 	vmov	r3, s0
 802454e:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 8024552:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 8024556:	ea58 0303 	orrs.w	r3, r8, r3
 802455a:	d117      	bne.n	802458c <__ieee754_asin+0x5c>
 802455c:	a3aa      	add	r3, pc, #680	; (adr r3, 8024808 <__ieee754_asin+0x2d8>)
 802455e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024562:	ee10 0a10 	vmov	r0, s0
 8024566:	4629      	mov	r1, r5
 8024568:	f7dc f846 	bl	80005f8 <__aeabi_dmul>
 802456c:	a3a8      	add	r3, pc, #672	; (adr r3, 8024810 <__ieee754_asin+0x2e0>)
 802456e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024572:	4606      	mov	r6, r0
 8024574:	460f      	mov	r7, r1
 8024576:	4620      	mov	r0, r4
 8024578:	4629      	mov	r1, r5
 802457a:	f7dc f83d 	bl	80005f8 <__aeabi_dmul>
 802457e:	4602      	mov	r2, r0
 8024580:	460b      	mov	r3, r1
 8024582:	4630      	mov	r0, r6
 8024584:	4639      	mov	r1, r7
 8024586:	f7db fe81 	bl	800028c <__adddf3>
 802458a:	e00b      	b.n	80245a4 <__ieee754_asin+0x74>
 802458c:	ee10 2a10 	vmov	r2, s0
 8024590:	462b      	mov	r3, r5
 8024592:	ee10 0a10 	vmov	r0, s0
 8024596:	4629      	mov	r1, r5
 8024598:	f7db fe76 	bl	8000288 <__aeabi_dsub>
 802459c:	4602      	mov	r2, r0
 802459e:	460b      	mov	r3, r1
 80245a0:	f7dc f954 	bl	800084c <__aeabi_ddiv>
 80245a4:	4604      	mov	r4, r0
 80245a6:	460d      	mov	r5, r1
 80245a8:	ec45 4b10 	vmov	d0, r4, r5
 80245ac:	b003      	add	sp, #12
 80245ae:	ecbd 8b04 	vpop	{d8-d9}
 80245b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80245b6:	4baf      	ldr	r3, [pc, #700]	; (8024874 <__ieee754_asin+0x344>)
 80245b8:	4598      	cmp	r8, r3
 80245ba:	dc11      	bgt.n	80245e0 <__ieee754_asin+0xb0>
 80245bc:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 80245c0:	f280 80ae 	bge.w	8024720 <__ieee754_asin+0x1f0>
 80245c4:	a394      	add	r3, pc, #592	; (adr r3, 8024818 <__ieee754_asin+0x2e8>)
 80245c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245ca:	ee10 0a10 	vmov	r0, s0
 80245ce:	4629      	mov	r1, r5
 80245d0:	f7db fe5c 	bl	800028c <__adddf3>
 80245d4:	4ba8      	ldr	r3, [pc, #672]	; (8024878 <__ieee754_asin+0x348>)
 80245d6:	2200      	movs	r2, #0
 80245d8:	f7dc fa9e 	bl	8000b18 <__aeabi_dcmpgt>
 80245dc:	2800      	cmp	r0, #0
 80245de:	d1e3      	bne.n	80245a8 <__ieee754_asin+0x78>
 80245e0:	ec45 4b10 	vmov	d0, r4, r5
 80245e4:	f7ff fdd0 	bl	8024188 <fabs>
 80245e8:	49a3      	ldr	r1, [pc, #652]	; (8024878 <__ieee754_asin+0x348>)
 80245ea:	ec53 2b10 	vmov	r2, r3, d0
 80245ee:	2000      	movs	r0, #0
 80245f0:	f7db fe4a 	bl	8000288 <__aeabi_dsub>
 80245f4:	4ba1      	ldr	r3, [pc, #644]	; (802487c <__ieee754_asin+0x34c>)
 80245f6:	2200      	movs	r2, #0
 80245f8:	f7db fffe 	bl	80005f8 <__aeabi_dmul>
 80245fc:	a388      	add	r3, pc, #544	; (adr r3, 8024820 <__ieee754_asin+0x2f0>)
 80245fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024602:	4604      	mov	r4, r0
 8024604:	460d      	mov	r5, r1
 8024606:	f7db fff7 	bl	80005f8 <__aeabi_dmul>
 802460a:	a387      	add	r3, pc, #540	; (adr r3, 8024828 <__ieee754_asin+0x2f8>)
 802460c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024610:	f7db fe3c 	bl	800028c <__adddf3>
 8024614:	4622      	mov	r2, r4
 8024616:	462b      	mov	r3, r5
 8024618:	f7db ffee 	bl	80005f8 <__aeabi_dmul>
 802461c:	a384      	add	r3, pc, #528	; (adr r3, 8024830 <__ieee754_asin+0x300>)
 802461e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024622:	f7db fe31 	bl	8000288 <__aeabi_dsub>
 8024626:	4622      	mov	r2, r4
 8024628:	462b      	mov	r3, r5
 802462a:	f7db ffe5 	bl	80005f8 <__aeabi_dmul>
 802462e:	a382      	add	r3, pc, #520	; (adr r3, 8024838 <__ieee754_asin+0x308>)
 8024630:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024634:	f7db fe2a 	bl	800028c <__adddf3>
 8024638:	4622      	mov	r2, r4
 802463a:	462b      	mov	r3, r5
 802463c:	f7db ffdc 	bl	80005f8 <__aeabi_dmul>
 8024640:	a37f      	add	r3, pc, #508	; (adr r3, 8024840 <__ieee754_asin+0x310>)
 8024642:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024646:	f7db fe1f 	bl	8000288 <__aeabi_dsub>
 802464a:	4622      	mov	r2, r4
 802464c:	462b      	mov	r3, r5
 802464e:	f7db ffd3 	bl	80005f8 <__aeabi_dmul>
 8024652:	a37d      	add	r3, pc, #500	; (adr r3, 8024848 <__ieee754_asin+0x318>)
 8024654:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024658:	f7db fe18 	bl	800028c <__adddf3>
 802465c:	4622      	mov	r2, r4
 802465e:	462b      	mov	r3, r5
 8024660:	f7db ffca 	bl	80005f8 <__aeabi_dmul>
 8024664:	a37a      	add	r3, pc, #488	; (adr r3, 8024850 <__ieee754_asin+0x320>)
 8024666:	e9d3 2300 	ldrd	r2, r3, [r3]
 802466a:	ec41 0b18 	vmov	d8, r0, r1
 802466e:	4620      	mov	r0, r4
 8024670:	4629      	mov	r1, r5
 8024672:	f7db ffc1 	bl	80005f8 <__aeabi_dmul>
 8024676:	a378      	add	r3, pc, #480	; (adr r3, 8024858 <__ieee754_asin+0x328>)
 8024678:	e9d3 2300 	ldrd	r2, r3, [r3]
 802467c:	f7db fe04 	bl	8000288 <__aeabi_dsub>
 8024680:	4622      	mov	r2, r4
 8024682:	462b      	mov	r3, r5
 8024684:	f7db ffb8 	bl	80005f8 <__aeabi_dmul>
 8024688:	a375      	add	r3, pc, #468	; (adr r3, 8024860 <__ieee754_asin+0x330>)
 802468a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802468e:	f7db fdfd 	bl	800028c <__adddf3>
 8024692:	4622      	mov	r2, r4
 8024694:	462b      	mov	r3, r5
 8024696:	f7db ffaf 	bl	80005f8 <__aeabi_dmul>
 802469a:	a373      	add	r3, pc, #460	; (adr r3, 8024868 <__ieee754_asin+0x338>)
 802469c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246a0:	f7db fdf2 	bl	8000288 <__aeabi_dsub>
 80246a4:	4622      	mov	r2, r4
 80246a6:	462b      	mov	r3, r5
 80246a8:	f7db ffa6 	bl	80005f8 <__aeabi_dmul>
 80246ac:	4b72      	ldr	r3, [pc, #456]	; (8024878 <__ieee754_asin+0x348>)
 80246ae:	2200      	movs	r2, #0
 80246b0:	f7db fdec 	bl	800028c <__adddf3>
 80246b4:	ec45 4b10 	vmov	d0, r4, r5
 80246b8:	4606      	mov	r6, r0
 80246ba:	460f      	mov	r7, r1
 80246bc:	f001 f954 	bl	8025968 <__ieee754_sqrt>
 80246c0:	4b6f      	ldr	r3, [pc, #444]	; (8024880 <__ieee754_asin+0x350>)
 80246c2:	4598      	cmp	r8, r3
 80246c4:	ec5b ab10 	vmov	sl, fp, d0
 80246c8:	f340 80dc 	ble.w	8024884 <__ieee754_asin+0x354>
 80246cc:	4632      	mov	r2, r6
 80246ce:	463b      	mov	r3, r7
 80246d0:	ec51 0b18 	vmov	r0, r1, d8
 80246d4:	f7dc f8ba 	bl	800084c <__aeabi_ddiv>
 80246d8:	4652      	mov	r2, sl
 80246da:	465b      	mov	r3, fp
 80246dc:	f7db ff8c 	bl	80005f8 <__aeabi_dmul>
 80246e0:	4652      	mov	r2, sl
 80246e2:	465b      	mov	r3, fp
 80246e4:	f7db fdd2 	bl	800028c <__adddf3>
 80246e8:	4602      	mov	r2, r0
 80246ea:	460b      	mov	r3, r1
 80246ec:	f7db fdce 	bl	800028c <__adddf3>
 80246f0:	a347      	add	r3, pc, #284	; (adr r3, 8024810 <__ieee754_asin+0x2e0>)
 80246f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246f6:	f7db fdc7 	bl	8000288 <__aeabi_dsub>
 80246fa:	4602      	mov	r2, r0
 80246fc:	460b      	mov	r3, r1
 80246fe:	a142      	add	r1, pc, #264	; (adr r1, 8024808 <__ieee754_asin+0x2d8>)
 8024700:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024704:	f7db fdc0 	bl	8000288 <__aeabi_dsub>
 8024708:	9b01      	ldr	r3, [sp, #4]
 802470a:	2b00      	cmp	r3, #0
 802470c:	bfdc      	itt	le
 802470e:	4602      	movle	r2, r0
 8024710:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 8024714:	4604      	mov	r4, r0
 8024716:	460d      	mov	r5, r1
 8024718:	bfdc      	itt	le
 802471a:	4614      	movle	r4, r2
 802471c:	461d      	movle	r5, r3
 802471e:	e743      	b.n	80245a8 <__ieee754_asin+0x78>
 8024720:	ee10 2a10 	vmov	r2, s0
 8024724:	ee10 0a10 	vmov	r0, s0
 8024728:	462b      	mov	r3, r5
 802472a:	4629      	mov	r1, r5
 802472c:	f7db ff64 	bl	80005f8 <__aeabi_dmul>
 8024730:	a33b      	add	r3, pc, #236	; (adr r3, 8024820 <__ieee754_asin+0x2f0>)
 8024732:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024736:	4606      	mov	r6, r0
 8024738:	460f      	mov	r7, r1
 802473a:	f7db ff5d 	bl	80005f8 <__aeabi_dmul>
 802473e:	a33a      	add	r3, pc, #232	; (adr r3, 8024828 <__ieee754_asin+0x2f8>)
 8024740:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024744:	f7db fda2 	bl	800028c <__adddf3>
 8024748:	4632      	mov	r2, r6
 802474a:	463b      	mov	r3, r7
 802474c:	f7db ff54 	bl	80005f8 <__aeabi_dmul>
 8024750:	a337      	add	r3, pc, #220	; (adr r3, 8024830 <__ieee754_asin+0x300>)
 8024752:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024756:	f7db fd97 	bl	8000288 <__aeabi_dsub>
 802475a:	4632      	mov	r2, r6
 802475c:	463b      	mov	r3, r7
 802475e:	f7db ff4b 	bl	80005f8 <__aeabi_dmul>
 8024762:	a335      	add	r3, pc, #212	; (adr r3, 8024838 <__ieee754_asin+0x308>)
 8024764:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024768:	f7db fd90 	bl	800028c <__adddf3>
 802476c:	4632      	mov	r2, r6
 802476e:	463b      	mov	r3, r7
 8024770:	f7db ff42 	bl	80005f8 <__aeabi_dmul>
 8024774:	a332      	add	r3, pc, #200	; (adr r3, 8024840 <__ieee754_asin+0x310>)
 8024776:	e9d3 2300 	ldrd	r2, r3, [r3]
 802477a:	f7db fd85 	bl	8000288 <__aeabi_dsub>
 802477e:	4632      	mov	r2, r6
 8024780:	463b      	mov	r3, r7
 8024782:	f7db ff39 	bl	80005f8 <__aeabi_dmul>
 8024786:	a330      	add	r3, pc, #192	; (adr r3, 8024848 <__ieee754_asin+0x318>)
 8024788:	e9d3 2300 	ldrd	r2, r3, [r3]
 802478c:	f7db fd7e 	bl	800028c <__adddf3>
 8024790:	4632      	mov	r2, r6
 8024792:	463b      	mov	r3, r7
 8024794:	f7db ff30 	bl	80005f8 <__aeabi_dmul>
 8024798:	a32d      	add	r3, pc, #180	; (adr r3, 8024850 <__ieee754_asin+0x320>)
 802479a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802479e:	4680      	mov	r8, r0
 80247a0:	4689      	mov	r9, r1
 80247a2:	4630      	mov	r0, r6
 80247a4:	4639      	mov	r1, r7
 80247a6:	f7db ff27 	bl	80005f8 <__aeabi_dmul>
 80247aa:	a32b      	add	r3, pc, #172	; (adr r3, 8024858 <__ieee754_asin+0x328>)
 80247ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247b0:	f7db fd6a 	bl	8000288 <__aeabi_dsub>
 80247b4:	4632      	mov	r2, r6
 80247b6:	463b      	mov	r3, r7
 80247b8:	f7db ff1e 	bl	80005f8 <__aeabi_dmul>
 80247bc:	a328      	add	r3, pc, #160	; (adr r3, 8024860 <__ieee754_asin+0x330>)
 80247be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247c2:	f7db fd63 	bl	800028c <__adddf3>
 80247c6:	4632      	mov	r2, r6
 80247c8:	463b      	mov	r3, r7
 80247ca:	f7db ff15 	bl	80005f8 <__aeabi_dmul>
 80247ce:	a326      	add	r3, pc, #152	; (adr r3, 8024868 <__ieee754_asin+0x338>)
 80247d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247d4:	f7db fd58 	bl	8000288 <__aeabi_dsub>
 80247d8:	4632      	mov	r2, r6
 80247da:	463b      	mov	r3, r7
 80247dc:	f7db ff0c 	bl	80005f8 <__aeabi_dmul>
 80247e0:	4b25      	ldr	r3, [pc, #148]	; (8024878 <__ieee754_asin+0x348>)
 80247e2:	2200      	movs	r2, #0
 80247e4:	f7db fd52 	bl	800028c <__adddf3>
 80247e8:	4602      	mov	r2, r0
 80247ea:	460b      	mov	r3, r1
 80247ec:	4640      	mov	r0, r8
 80247ee:	4649      	mov	r1, r9
 80247f0:	f7dc f82c 	bl	800084c <__aeabi_ddiv>
 80247f4:	4622      	mov	r2, r4
 80247f6:	462b      	mov	r3, r5
 80247f8:	f7db fefe 	bl	80005f8 <__aeabi_dmul>
 80247fc:	4602      	mov	r2, r0
 80247fe:	460b      	mov	r3, r1
 8024800:	4620      	mov	r0, r4
 8024802:	4629      	mov	r1, r5
 8024804:	e6bf      	b.n	8024586 <__ieee754_asin+0x56>
 8024806:	bf00      	nop
 8024808:	54442d18 	.word	0x54442d18
 802480c:	3ff921fb 	.word	0x3ff921fb
 8024810:	33145c07 	.word	0x33145c07
 8024814:	3c91a626 	.word	0x3c91a626
 8024818:	8800759c 	.word	0x8800759c
 802481c:	7e37e43c 	.word	0x7e37e43c
 8024820:	0dfdf709 	.word	0x0dfdf709
 8024824:	3f023de1 	.word	0x3f023de1
 8024828:	7501b288 	.word	0x7501b288
 802482c:	3f49efe0 	.word	0x3f49efe0
 8024830:	b5688f3b 	.word	0xb5688f3b
 8024834:	3fa48228 	.word	0x3fa48228
 8024838:	0e884455 	.word	0x0e884455
 802483c:	3fc9c155 	.word	0x3fc9c155
 8024840:	03eb6f7d 	.word	0x03eb6f7d
 8024844:	3fd4d612 	.word	0x3fd4d612
 8024848:	55555555 	.word	0x55555555
 802484c:	3fc55555 	.word	0x3fc55555
 8024850:	b12e9282 	.word	0xb12e9282
 8024854:	3fb3b8c5 	.word	0x3fb3b8c5
 8024858:	1b8d0159 	.word	0x1b8d0159
 802485c:	3fe6066c 	.word	0x3fe6066c
 8024860:	9c598ac8 	.word	0x9c598ac8
 8024864:	40002ae5 	.word	0x40002ae5
 8024868:	1c8a2d4b 	.word	0x1c8a2d4b
 802486c:	40033a27 	.word	0x40033a27
 8024870:	3fefffff 	.word	0x3fefffff
 8024874:	3fdfffff 	.word	0x3fdfffff
 8024878:	3ff00000 	.word	0x3ff00000
 802487c:	3fe00000 	.word	0x3fe00000
 8024880:	3fef3332 	.word	0x3fef3332
 8024884:	ee10 2a10 	vmov	r2, s0
 8024888:	ee10 0a10 	vmov	r0, s0
 802488c:	465b      	mov	r3, fp
 802488e:	4659      	mov	r1, fp
 8024890:	f7db fcfc 	bl	800028c <__adddf3>
 8024894:	4632      	mov	r2, r6
 8024896:	463b      	mov	r3, r7
 8024898:	ec41 0b19 	vmov	d9, r0, r1
 802489c:	ec51 0b18 	vmov	r0, r1, d8
 80248a0:	f7db ffd4 	bl	800084c <__aeabi_ddiv>
 80248a4:	4602      	mov	r2, r0
 80248a6:	460b      	mov	r3, r1
 80248a8:	ec51 0b19 	vmov	r0, r1, d9
 80248ac:	f7db fea4 	bl	80005f8 <__aeabi_dmul>
 80248b0:	f04f 0800 	mov.w	r8, #0
 80248b4:	4606      	mov	r6, r0
 80248b6:	460f      	mov	r7, r1
 80248b8:	4642      	mov	r2, r8
 80248ba:	465b      	mov	r3, fp
 80248bc:	4640      	mov	r0, r8
 80248be:	4659      	mov	r1, fp
 80248c0:	f7db fe9a 	bl	80005f8 <__aeabi_dmul>
 80248c4:	4602      	mov	r2, r0
 80248c6:	460b      	mov	r3, r1
 80248c8:	4620      	mov	r0, r4
 80248ca:	4629      	mov	r1, r5
 80248cc:	f7db fcdc 	bl	8000288 <__aeabi_dsub>
 80248d0:	4642      	mov	r2, r8
 80248d2:	4604      	mov	r4, r0
 80248d4:	460d      	mov	r5, r1
 80248d6:	465b      	mov	r3, fp
 80248d8:	4650      	mov	r0, sl
 80248da:	4659      	mov	r1, fp
 80248dc:	f7db fcd6 	bl	800028c <__adddf3>
 80248e0:	4602      	mov	r2, r0
 80248e2:	460b      	mov	r3, r1
 80248e4:	4620      	mov	r0, r4
 80248e6:	4629      	mov	r1, r5
 80248e8:	f7db ffb0 	bl	800084c <__aeabi_ddiv>
 80248ec:	4602      	mov	r2, r0
 80248ee:	460b      	mov	r3, r1
 80248f0:	f7db fccc 	bl	800028c <__adddf3>
 80248f4:	4602      	mov	r2, r0
 80248f6:	460b      	mov	r3, r1
 80248f8:	a113      	add	r1, pc, #76	; (adr r1, 8024948 <__ieee754_asin+0x418>)
 80248fa:	e9d1 0100 	ldrd	r0, r1, [r1]
 80248fe:	f7db fcc3 	bl	8000288 <__aeabi_dsub>
 8024902:	4602      	mov	r2, r0
 8024904:	460b      	mov	r3, r1
 8024906:	4630      	mov	r0, r6
 8024908:	4639      	mov	r1, r7
 802490a:	f7db fcbd 	bl	8000288 <__aeabi_dsub>
 802490e:	4642      	mov	r2, r8
 8024910:	4604      	mov	r4, r0
 8024912:	460d      	mov	r5, r1
 8024914:	465b      	mov	r3, fp
 8024916:	4640      	mov	r0, r8
 8024918:	4659      	mov	r1, fp
 802491a:	f7db fcb7 	bl	800028c <__adddf3>
 802491e:	4602      	mov	r2, r0
 8024920:	460b      	mov	r3, r1
 8024922:	a10b      	add	r1, pc, #44	; (adr r1, 8024950 <__ieee754_asin+0x420>)
 8024924:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024928:	f7db fcae 	bl	8000288 <__aeabi_dsub>
 802492c:	4602      	mov	r2, r0
 802492e:	460b      	mov	r3, r1
 8024930:	4620      	mov	r0, r4
 8024932:	4629      	mov	r1, r5
 8024934:	f7db fca8 	bl	8000288 <__aeabi_dsub>
 8024938:	4602      	mov	r2, r0
 802493a:	460b      	mov	r3, r1
 802493c:	a104      	add	r1, pc, #16	; (adr r1, 8024950 <__ieee754_asin+0x420>)
 802493e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024942:	e6df      	b.n	8024704 <__ieee754_asin+0x1d4>
 8024944:	f3af 8000 	nop.w
 8024948:	33145c07 	.word	0x33145c07
 802494c:	3c91a626 	.word	0x3c91a626
 8024950:	54442d18 	.word	0x54442d18
 8024954:	3fe921fb 	.word	0x3fe921fb

08024958 <__ieee754_atan2>:
 8024958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802495c:	ec57 6b11 	vmov	r6, r7, d1
 8024960:	4273      	negs	r3, r6
 8024962:	f8df e184 	ldr.w	lr, [pc, #388]	; 8024ae8 <__ieee754_atan2+0x190>
 8024966:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 802496a:	4333      	orrs	r3, r6
 802496c:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8024970:	4573      	cmp	r3, lr
 8024972:	ec51 0b10 	vmov	r0, r1, d0
 8024976:	ee11 8a10 	vmov	r8, s2
 802497a:	d80a      	bhi.n	8024992 <__ieee754_atan2+0x3a>
 802497c:	4244      	negs	r4, r0
 802497e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024982:	4304      	orrs	r4, r0
 8024984:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 8024988:	4574      	cmp	r4, lr
 802498a:	ee10 9a10 	vmov	r9, s0
 802498e:	468c      	mov	ip, r1
 8024990:	d907      	bls.n	80249a2 <__ieee754_atan2+0x4a>
 8024992:	4632      	mov	r2, r6
 8024994:	463b      	mov	r3, r7
 8024996:	f7db fc79 	bl	800028c <__adddf3>
 802499a:	ec41 0b10 	vmov	d0, r0, r1
 802499e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80249a2:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 80249a6:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80249aa:	4334      	orrs	r4, r6
 80249ac:	d103      	bne.n	80249b6 <__ieee754_atan2+0x5e>
 80249ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80249b2:	f7ff b9f5 	b.w	8023da0 <atan>
 80249b6:	17bc      	asrs	r4, r7, #30
 80249b8:	f004 0402 	and.w	r4, r4, #2
 80249bc:	ea53 0909 	orrs.w	r9, r3, r9
 80249c0:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80249c4:	d107      	bne.n	80249d6 <__ieee754_atan2+0x7e>
 80249c6:	2c02      	cmp	r4, #2
 80249c8:	d060      	beq.n	8024a8c <__ieee754_atan2+0x134>
 80249ca:	2c03      	cmp	r4, #3
 80249cc:	d1e5      	bne.n	802499a <__ieee754_atan2+0x42>
 80249ce:	a142      	add	r1, pc, #264	; (adr r1, 8024ad8 <__ieee754_atan2+0x180>)
 80249d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80249d4:	e7e1      	b.n	802499a <__ieee754_atan2+0x42>
 80249d6:	ea52 0808 	orrs.w	r8, r2, r8
 80249da:	d106      	bne.n	80249ea <__ieee754_atan2+0x92>
 80249dc:	f1bc 0f00 	cmp.w	ip, #0
 80249e0:	da5f      	bge.n	8024aa2 <__ieee754_atan2+0x14a>
 80249e2:	a13f      	add	r1, pc, #252	; (adr r1, 8024ae0 <__ieee754_atan2+0x188>)
 80249e4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80249e8:	e7d7      	b.n	802499a <__ieee754_atan2+0x42>
 80249ea:	4572      	cmp	r2, lr
 80249ec:	d10f      	bne.n	8024a0e <__ieee754_atan2+0xb6>
 80249ee:	4293      	cmp	r3, r2
 80249f0:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 80249f4:	d107      	bne.n	8024a06 <__ieee754_atan2+0xae>
 80249f6:	2c02      	cmp	r4, #2
 80249f8:	d84c      	bhi.n	8024a94 <__ieee754_atan2+0x13c>
 80249fa:	4b35      	ldr	r3, [pc, #212]	; (8024ad0 <__ieee754_atan2+0x178>)
 80249fc:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8024a00:	e9d4 0100 	ldrd	r0, r1, [r4]
 8024a04:	e7c9      	b.n	802499a <__ieee754_atan2+0x42>
 8024a06:	2c02      	cmp	r4, #2
 8024a08:	d848      	bhi.n	8024a9c <__ieee754_atan2+0x144>
 8024a0a:	4b32      	ldr	r3, [pc, #200]	; (8024ad4 <__ieee754_atan2+0x17c>)
 8024a0c:	e7f6      	b.n	80249fc <__ieee754_atan2+0xa4>
 8024a0e:	4573      	cmp	r3, lr
 8024a10:	d0e4      	beq.n	80249dc <__ieee754_atan2+0x84>
 8024a12:	1a9b      	subs	r3, r3, r2
 8024a14:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8024a18:	ea4f 5223 	mov.w	r2, r3, asr #20
 8024a1c:	da1e      	bge.n	8024a5c <__ieee754_atan2+0x104>
 8024a1e:	2f00      	cmp	r7, #0
 8024a20:	da01      	bge.n	8024a26 <__ieee754_atan2+0xce>
 8024a22:	323c      	adds	r2, #60	; 0x3c
 8024a24:	db1e      	blt.n	8024a64 <__ieee754_atan2+0x10c>
 8024a26:	4632      	mov	r2, r6
 8024a28:	463b      	mov	r3, r7
 8024a2a:	f7db ff0f 	bl	800084c <__aeabi_ddiv>
 8024a2e:	ec41 0b10 	vmov	d0, r0, r1
 8024a32:	f7ff fba9 	bl	8024188 <fabs>
 8024a36:	f7ff f9b3 	bl	8023da0 <atan>
 8024a3a:	ec51 0b10 	vmov	r0, r1, d0
 8024a3e:	2c01      	cmp	r4, #1
 8024a40:	d013      	beq.n	8024a6a <__ieee754_atan2+0x112>
 8024a42:	2c02      	cmp	r4, #2
 8024a44:	d015      	beq.n	8024a72 <__ieee754_atan2+0x11a>
 8024a46:	2c00      	cmp	r4, #0
 8024a48:	d0a7      	beq.n	802499a <__ieee754_atan2+0x42>
 8024a4a:	a319      	add	r3, pc, #100	; (adr r3, 8024ab0 <__ieee754_atan2+0x158>)
 8024a4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024a50:	f7db fc1a 	bl	8000288 <__aeabi_dsub>
 8024a54:	a318      	add	r3, pc, #96	; (adr r3, 8024ab8 <__ieee754_atan2+0x160>)
 8024a56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024a5a:	e014      	b.n	8024a86 <__ieee754_atan2+0x12e>
 8024a5c:	a118      	add	r1, pc, #96	; (adr r1, 8024ac0 <__ieee754_atan2+0x168>)
 8024a5e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a62:	e7ec      	b.n	8024a3e <__ieee754_atan2+0xe6>
 8024a64:	2000      	movs	r0, #0
 8024a66:	2100      	movs	r1, #0
 8024a68:	e7e9      	b.n	8024a3e <__ieee754_atan2+0xe6>
 8024a6a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024a6e:	4619      	mov	r1, r3
 8024a70:	e793      	b.n	802499a <__ieee754_atan2+0x42>
 8024a72:	a30f      	add	r3, pc, #60	; (adr r3, 8024ab0 <__ieee754_atan2+0x158>)
 8024a74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024a78:	f7db fc06 	bl	8000288 <__aeabi_dsub>
 8024a7c:	4602      	mov	r2, r0
 8024a7e:	460b      	mov	r3, r1
 8024a80:	a10d      	add	r1, pc, #52	; (adr r1, 8024ab8 <__ieee754_atan2+0x160>)
 8024a82:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a86:	f7db fbff 	bl	8000288 <__aeabi_dsub>
 8024a8a:	e786      	b.n	802499a <__ieee754_atan2+0x42>
 8024a8c:	a10a      	add	r1, pc, #40	; (adr r1, 8024ab8 <__ieee754_atan2+0x160>)
 8024a8e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a92:	e782      	b.n	802499a <__ieee754_atan2+0x42>
 8024a94:	a10c      	add	r1, pc, #48	; (adr r1, 8024ac8 <__ieee754_atan2+0x170>)
 8024a96:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a9a:	e77e      	b.n	802499a <__ieee754_atan2+0x42>
 8024a9c:	2000      	movs	r0, #0
 8024a9e:	2100      	movs	r1, #0
 8024aa0:	e77b      	b.n	802499a <__ieee754_atan2+0x42>
 8024aa2:	a107      	add	r1, pc, #28	; (adr r1, 8024ac0 <__ieee754_atan2+0x168>)
 8024aa4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024aa8:	e777      	b.n	802499a <__ieee754_atan2+0x42>
 8024aaa:	bf00      	nop
 8024aac:	f3af 8000 	nop.w
 8024ab0:	33145c07 	.word	0x33145c07
 8024ab4:	3ca1a626 	.word	0x3ca1a626
 8024ab8:	54442d18 	.word	0x54442d18
 8024abc:	400921fb 	.word	0x400921fb
 8024ac0:	54442d18 	.word	0x54442d18
 8024ac4:	3ff921fb 	.word	0x3ff921fb
 8024ac8:	54442d18 	.word	0x54442d18
 8024acc:	3fe921fb 	.word	0x3fe921fb
 8024ad0:	080273b0 	.word	0x080273b0
 8024ad4:	080273c8 	.word	0x080273c8
 8024ad8:	54442d18 	.word	0x54442d18
 8024adc:	c00921fb 	.word	0xc00921fb
 8024ae0:	54442d18 	.word	0x54442d18
 8024ae4:	bff921fb 	.word	0xbff921fb
 8024ae8:	7ff00000 	.word	0x7ff00000
 8024aec:	00000000 	.word	0x00000000

08024af0 <__ieee754_pow>:
 8024af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024af4:	ed2d 8b06 	vpush	{d8-d10}
 8024af8:	b089      	sub	sp, #36	; 0x24
 8024afa:	ed8d 1b00 	vstr	d1, [sp]
 8024afe:	e9dd 2900 	ldrd	r2, r9, [sp]
 8024b02:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8024b06:	ea58 0102 	orrs.w	r1, r8, r2
 8024b0a:	ec57 6b10 	vmov	r6, r7, d0
 8024b0e:	d115      	bne.n	8024b3c <__ieee754_pow+0x4c>
 8024b10:	19b3      	adds	r3, r6, r6
 8024b12:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8024b16:	4152      	adcs	r2, r2
 8024b18:	4299      	cmp	r1, r3
 8024b1a:	4b89      	ldr	r3, [pc, #548]	; (8024d40 <__ieee754_pow+0x250>)
 8024b1c:	4193      	sbcs	r3, r2
 8024b1e:	f080 84d2 	bcs.w	80254c6 <__ieee754_pow+0x9d6>
 8024b22:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024b26:	4630      	mov	r0, r6
 8024b28:	4639      	mov	r1, r7
 8024b2a:	f7db fbaf 	bl	800028c <__adddf3>
 8024b2e:	ec41 0b10 	vmov	d0, r0, r1
 8024b32:	b009      	add	sp, #36	; 0x24
 8024b34:	ecbd 8b06 	vpop	{d8-d10}
 8024b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b3c:	4b81      	ldr	r3, [pc, #516]	; (8024d44 <__ieee754_pow+0x254>)
 8024b3e:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8024b42:	429c      	cmp	r4, r3
 8024b44:	ee10 aa10 	vmov	sl, s0
 8024b48:	463d      	mov	r5, r7
 8024b4a:	dc06      	bgt.n	8024b5a <__ieee754_pow+0x6a>
 8024b4c:	d101      	bne.n	8024b52 <__ieee754_pow+0x62>
 8024b4e:	2e00      	cmp	r6, #0
 8024b50:	d1e7      	bne.n	8024b22 <__ieee754_pow+0x32>
 8024b52:	4598      	cmp	r8, r3
 8024b54:	dc01      	bgt.n	8024b5a <__ieee754_pow+0x6a>
 8024b56:	d10f      	bne.n	8024b78 <__ieee754_pow+0x88>
 8024b58:	b172      	cbz	r2, 8024b78 <__ieee754_pow+0x88>
 8024b5a:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8024b5e:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8024b62:	ea55 050a 	orrs.w	r5, r5, sl
 8024b66:	d1dc      	bne.n	8024b22 <__ieee754_pow+0x32>
 8024b68:	e9dd 3200 	ldrd	r3, r2, [sp]
 8024b6c:	18db      	adds	r3, r3, r3
 8024b6e:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8024b72:	4152      	adcs	r2, r2
 8024b74:	429d      	cmp	r5, r3
 8024b76:	e7d0      	b.n	8024b1a <__ieee754_pow+0x2a>
 8024b78:	2d00      	cmp	r5, #0
 8024b7a:	da3b      	bge.n	8024bf4 <__ieee754_pow+0x104>
 8024b7c:	4b72      	ldr	r3, [pc, #456]	; (8024d48 <__ieee754_pow+0x258>)
 8024b7e:	4598      	cmp	r8, r3
 8024b80:	dc51      	bgt.n	8024c26 <__ieee754_pow+0x136>
 8024b82:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8024b86:	4598      	cmp	r8, r3
 8024b88:	f340 84ac 	ble.w	80254e4 <__ieee754_pow+0x9f4>
 8024b8c:	ea4f 5328 	mov.w	r3, r8, asr #20
 8024b90:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8024b94:	2b14      	cmp	r3, #20
 8024b96:	dd0f      	ble.n	8024bb8 <__ieee754_pow+0xc8>
 8024b98:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8024b9c:	fa22 f103 	lsr.w	r1, r2, r3
 8024ba0:	fa01 f303 	lsl.w	r3, r1, r3
 8024ba4:	4293      	cmp	r3, r2
 8024ba6:	f040 849d 	bne.w	80254e4 <__ieee754_pow+0x9f4>
 8024baa:	f001 0101 	and.w	r1, r1, #1
 8024bae:	f1c1 0302 	rsb	r3, r1, #2
 8024bb2:	9304      	str	r3, [sp, #16]
 8024bb4:	b182      	cbz	r2, 8024bd8 <__ieee754_pow+0xe8>
 8024bb6:	e05f      	b.n	8024c78 <__ieee754_pow+0x188>
 8024bb8:	2a00      	cmp	r2, #0
 8024bba:	d15b      	bne.n	8024c74 <__ieee754_pow+0x184>
 8024bbc:	f1c3 0314 	rsb	r3, r3, #20
 8024bc0:	fa48 f103 	asr.w	r1, r8, r3
 8024bc4:	fa01 f303 	lsl.w	r3, r1, r3
 8024bc8:	4543      	cmp	r3, r8
 8024bca:	f040 8488 	bne.w	80254de <__ieee754_pow+0x9ee>
 8024bce:	f001 0101 	and.w	r1, r1, #1
 8024bd2:	f1c1 0302 	rsb	r3, r1, #2
 8024bd6:	9304      	str	r3, [sp, #16]
 8024bd8:	4b5c      	ldr	r3, [pc, #368]	; (8024d4c <__ieee754_pow+0x25c>)
 8024bda:	4598      	cmp	r8, r3
 8024bdc:	d132      	bne.n	8024c44 <__ieee754_pow+0x154>
 8024bde:	f1b9 0f00 	cmp.w	r9, #0
 8024be2:	f280 8478 	bge.w	80254d6 <__ieee754_pow+0x9e6>
 8024be6:	4959      	ldr	r1, [pc, #356]	; (8024d4c <__ieee754_pow+0x25c>)
 8024be8:	4632      	mov	r2, r6
 8024bea:	463b      	mov	r3, r7
 8024bec:	2000      	movs	r0, #0
 8024bee:	f7db fe2d 	bl	800084c <__aeabi_ddiv>
 8024bf2:	e79c      	b.n	8024b2e <__ieee754_pow+0x3e>
 8024bf4:	2300      	movs	r3, #0
 8024bf6:	9304      	str	r3, [sp, #16]
 8024bf8:	2a00      	cmp	r2, #0
 8024bfa:	d13d      	bne.n	8024c78 <__ieee754_pow+0x188>
 8024bfc:	4b51      	ldr	r3, [pc, #324]	; (8024d44 <__ieee754_pow+0x254>)
 8024bfe:	4598      	cmp	r8, r3
 8024c00:	d1ea      	bne.n	8024bd8 <__ieee754_pow+0xe8>
 8024c02:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8024c06:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8024c0a:	ea53 030a 	orrs.w	r3, r3, sl
 8024c0e:	f000 845a 	beq.w	80254c6 <__ieee754_pow+0x9d6>
 8024c12:	4b4f      	ldr	r3, [pc, #316]	; (8024d50 <__ieee754_pow+0x260>)
 8024c14:	429c      	cmp	r4, r3
 8024c16:	dd08      	ble.n	8024c2a <__ieee754_pow+0x13a>
 8024c18:	f1b9 0f00 	cmp.w	r9, #0
 8024c1c:	f2c0 8457 	blt.w	80254ce <__ieee754_pow+0x9de>
 8024c20:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024c24:	e783      	b.n	8024b2e <__ieee754_pow+0x3e>
 8024c26:	2302      	movs	r3, #2
 8024c28:	e7e5      	b.n	8024bf6 <__ieee754_pow+0x106>
 8024c2a:	f1b9 0f00 	cmp.w	r9, #0
 8024c2e:	f04f 0000 	mov.w	r0, #0
 8024c32:	f04f 0100 	mov.w	r1, #0
 8024c36:	f6bf af7a 	bge.w	8024b2e <__ieee754_pow+0x3e>
 8024c3a:	e9dd 0300 	ldrd	r0, r3, [sp]
 8024c3e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8024c42:	e774      	b.n	8024b2e <__ieee754_pow+0x3e>
 8024c44:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8024c48:	d106      	bne.n	8024c58 <__ieee754_pow+0x168>
 8024c4a:	4632      	mov	r2, r6
 8024c4c:	463b      	mov	r3, r7
 8024c4e:	4630      	mov	r0, r6
 8024c50:	4639      	mov	r1, r7
 8024c52:	f7db fcd1 	bl	80005f8 <__aeabi_dmul>
 8024c56:	e76a      	b.n	8024b2e <__ieee754_pow+0x3e>
 8024c58:	4b3e      	ldr	r3, [pc, #248]	; (8024d54 <__ieee754_pow+0x264>)
 8024c5a:	4599      	cmp	r9, r3
 8024c5c:	d10c      	bne.n	8024c78 <__ieee754_pow+0x188>
 8024c5e:	2d00      	cmp	r5, #0
 8024c60:	db0a      	blt.n	8024c78 <__ieee754_pow+0x188>
 8024c62:	ec47 6b10 	vmov	d0, r6, r7
 8024c66:	b009      	add	sp, #36	; 0x24
 8024c68:	ecbd 8b06 	vpop	{d8-d10}
 8024c6c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c70:	f000 be7a 	b.w	8025968 <__ieee754_sqrt>
 8024c74:	2300      	movs	r3, #0
 8024c76:	9304      	str	r3, [sp, #16]
 8024c78:	ec47 6b10 	vmov	d0, r6, r7
 8024c7c:	f7ff fa84 	bl	8024188 <fabs>
 8024c80:	ec51 0b10 	vmov	r0, r1, d0
 8024c84:	f1ba 0f00 	cmp.w	sl, #0
 8024c88:	d129      	bne.n	8024cde <__ieee754_pow+0x1ee>
 8024c8a:	b124      	cbz	r4, 8024c96 <__ieee754_pow+0x1a6>
 8024c8c:	4b2f      	ldr	r3, [pc, #188]	; (8024d4c <__ieee754_pow+0x25c>)
 8024c8e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8024c92:	429a      	cmp	r2, r3
 8024c94:	d123      	bne.n	8024cde <__ieee754_pow+0x1ee>
 8024c96:	f1b9 0f00 	cmp.w	r9, #0
 8024c9a:	da05      	bge.n	8024ca8 <__ieee754_pow+0x1b8>
 8024c9c:	4602      	mov	r2, r0
 8024c9e:	460b      	mov	r3, r1
 8024ca0:	2000      	movs	r0, #0
 8024ca2:	492a      	ldr	r1, [pc, #168]	; (8024d4c <__ieee754_pow+0x25c>)
 8024ca4:	f7db fdd2 	bl	800084c <__aeabi_ddiv>
 8024ca8:	2d00      	cmp	r5, #0
 8024caa:	f6bf af40 	bge.w	8024b2e <__ieee754_pow+0x3e>
 8024cae:	9b04      	ldr	r3, [sp, #16]
 8024cb0:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8024cb4:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8024cb8:	4323      	orrs	r3, r4
 8024cba:	d108      	bne.n	8024cce <__ieee754_pow+0x1de>
 8024cbc:	4602      	mov	r2, r0
 8024cbe:	460b      	mov	r3, r1
 8024cc0:	4610      	mov	r0, r2
 8024cc2:	4619      	mov	r1, r3
 8024cc4:	f7db fae0 	bl	8000288 <__aeabi_dsub>
 8024cc8:	4602      	mov	r2, r0
 8024cca:	460b      	mov	r3, r1
 8024ccc:	e78f      	b.n	8024bee <__ieee754_pow+0xfe>
 8024cce:	9b04      	ldr	r3, [sp, #16]
 8024cd0:	2b01      	cmp	r3, #1
 8024cd2:	f47f af2c 	bne.w	8024b2e <__ieee754_pow+0x3e>
 8024cd6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024cda:	4619      	mov	r1, r3
 8024cdc:	e727      	b.n	8024b2e <__ieee754_pow+0x3e>
 8024cde:	0feb      	lsrs	r3, r5, #31
 8024ce0:	3b01      	subs	r3, #1
 8024ce2:	9306      	str	r3, [sp, #24]
 8024ce4:	9a06      	ldr	r2, [sp, #24]
 8024ce6:	9b04      	ldr	r3, [sp, #16]
 8024ce8:	4313      	orrs	r3, r2
 8024cea:	d102      	bne.n	8024cf2 <__ieee754_pow+0x202>
 8024cec:	4632      	mov	r2, r6
 8024cee:	463b      	mov	r3, r7
 8024cf0:	e7e6      	b.n	8024cc0 <__ieee754_pow+0x1d0>
 8024cf2:	4b19      	ldr	r3, [pc, #100]	; (8024d58 <__ieee754_pow+0x268>)
 8024cf4:	4598      	cmp	r8, r3
 8024cf6:	f340 80fb 	ble.w	8024ef0 <__ieee754_pow+0x400>
 8024cfa:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8024cfe:	4598      	cmp	r8, r3
 8024d00:	4b13      	ldr	r3, [pc, #76]	; (8024d50 <__ieee754_pow+0x260>)
 8024d02:	dd0c      	ble.n	8024d1e <__ieee754_pow+0x22e>
 8024d04:	429c      	cmp	r4, r3
 8024d06:	dc0f      	bgt.n	8024d28 <__ieee754_pow+0x238>
 8024d08:	f1b9 0f00 	cmp.w	r9, #0
 8024d0c:	da0f      	bge.n	8024d2e <__ieee754_pow+0x23e>
 8024d0e:	2000      	movs	r0, #0
 8024d10:	b009      	add	sp, #36	; 0x24
 8024d12:	ecbd 8b06 	vpop	{d8-d10}
 8024d16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d1a:	f001 bbda 	b.w	80264d2 <__math_oflow>
 8024d1e:	429c      	cmp	r4, r3
 8024d20:	dbf2      	blt.n	8024d08 <__ieee754_pow+0x218>
 8024d22:	4b0a      	ldr	r3, [pc, #40]	; (8024d4c <__ieee754_pow+0x25c>)
 8024d24:	429c      	cmp	r4, r3
 8024d26:	dd19      	ble.n	8024d5c <__ieee754_pow+0x26c>
 8024d28:	f1b9 0f00 	cmp.w	r9, #0
 8024d2c:	dcef      	bgt.n	8024d0e <__ieee754_pow+0x21e>
 8024d2e:	2000      	movs	r0, #0
 8024d30:	b009      	add	sp, #36	; 0x24
 8024d32:	ecbd 8b06 	vpop	{d8-d10}
 8024d36:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d3a:	f001 bbc1 	b.w	80264c0 <__math_uflow>
 8024d3e:	bf00      	nop
 8024d40:	fff00000 	.word	0xfff00000
 8024d44:	7ff00000 	.word	0x7ff00000
 8024d48:	433fffff 	.word	0x433fffff
 8024d4c:	3ff00000 	.word	0x3ff00000
 8024d50:	3fefffff 	.word	0x3fefffff
 8024d54:	3fe00000 	.word	0x3fe00000
 8024d58:	41e00000 	.word	0x41e00000
 8024d5c:	4b60      	ldr	r3, [pc, #384]	; (8024ee0 <__ieee754_pow+0x3f0>)
 8024d5e:	2200      	movs	r2, #0
 8024d60:	f7db fa92 	bl	8000288 <__aeabi_dsub>
 8024d64:	a354      	add	r3, pc, #336	; (adr r3, 8024eb8 <__ieee754_pow+0x3c8>)
 8024d66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024d6a:	4604      	mov	r4, r0
 8024d6c:	460d      	mov	r5, r1
 8024d6e:	f7db fc43 	bl	80005f8 <__aeabi_dmul>
 8024d72:	a353      	add	r3, pc, #332	; (adr r3, 8024ec0 <__ieee754_pow+0x3d0>)
 8024d74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024d78:	4606      	mov	r6, r0
 8024d7a:	460f      	mov	r7, r1
 8024d7c:	4620      	mov	r0, r4
 8024d7e:	4629      	mov	r1, r5
 8024d80:	f7db fc3a 	bl	80005f8 <__aeabi_dmul>
 8024d84:	4b57      	ldr	r3, [pc, #348]	; (8024ee4 <__ieee754_pow+0x3f4>)
 8024d86:	4682      	mov	sl, r0
 8024d88:	468b      	mov	fp, r1
 8024d8a:	2200      	movs	r2, #0
 8024d8c:	4620      	mov	r0, r4
 8024d8e:	4629      	mov	r1, r5
 8024d90:	f7db fc32 	bl	80005f8 <__aeabi_dmul>
 8024d94:	4602      	mov	r2, r0
 8024d96:	460b      	mov	r3, r1
 8024d98:	a14b      	add	r1, pc, #300	; (adr r1, 8024ec8 <__ieee754_pow+0x3d8>)
 8024d9a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024d9e:	f7db fa73 	bl	8000288 <__aeabi_dsub>
 8024da2:	4622      	mov	r2, r4
 8024da4:	462b      	mov	r3, r5
 8024da6:	f7db fc27 	bl	80005f8 <__aeabi_dmul>
 8024daa:	4602      	mov	r2, r0
 8024dac:	460b      	mov	r3, r1
 8024dae:	2000      	movs	r0, #0
 8024db0:	494d      	ldr	r1, [pc, #308]	; (8024ee8 <__ieee754_pow+0x3f8>)
 8024db2:	f7db fa69 	bl	8000288 <__aeabi_dsub>
 8024db6:	4622      	mov	r2, r4
 8024db8:	4680      	mov	r8, r0
 8024dba:	4689      	mov	r9, r1
 8024dbc:	462b      	mov	r3, r5
 8024dbe:	4620      	mov	r0, r4
 8024dc0:	4629      	mov	r1, r5
 8024dc2:	f7db fc19 	bl	80005f8 <__aeabi_dmul>
 8024dc6:	4602      	mov	r2, r0
 8024dc8:	460b      	mov	r3, r1
 8024dca:	4640      	mov	r0, r8
 8024dcc:	4649      	mov	r1, r9
 8024dce:	f7db fc13 	bl	80005f8 <__aeabi_dmul>
 8024dd2:	a33f      	add	r3, pc, #252	; (adr r3, 8024ed0 <__ieee754_pow+0x3e0>)
 8024dd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024dd8:	f7db fc0e 	bl	80005f8 <__aeabi_dmul>
 8024ddc:	4602      	mov	r2, r0
 8024dde:	460b      	mov	r3, r1
 8024de0:	4650      	mov	r0, sl
 8024de2:	4659      	mov	r1, fp
 8024de4:	f7db fa50 	bl	8000288 <__aeabi_dsub>
 8024de8:	4602      	mov	r2, r0
 8024dea:	460b      	mov	r3, r1
 8024dec:	4680      	mov	r8, r0
 8024dee:	4689      	mov	r9, r1
 8024df0:	4630      	mov	r0, r6
 8024df2:	4639      	mov	r1, r7
 8024df4:	f7db fa4a 	bl	800028c <__adddf3>
 8024df8:	2000      	movs	r0, #0
 8024dfa:	4632      	mov	r2, r6
 8024dfc:	463b      	mov	r3, r7
 8024dfe:	4604      	mov	r4, r0
 8024e00:	460d      	mov	r5, r1
 8024e02:	f7db fa41 	bl	8000288 <__aeabi_dsub>
 8024e06:	4602      	mov	r2, r0
 8024e08:	460b      	mov	r3, r1
 8024e0a:	4640      	mov	r0, r8
 8024e0c:	4649      	mov	r1, r9
 8024e0e:	f7db fa3b 	bl	8000288 <__aeabi_dsub>
 8024e12:	9b04      	ldr	r3, [sp, #16]
 8024e14:	9a06      	ldr	r2, [sp, #24]
 8024e16:	3b01      	subs	r3, #1
 8024e18:	4313      	orrs	r3, r2
 8024e1a:	4682      	mov	sl, r0
 8024e1c:	468b      	mov	fp, r1
 8024e1e:	f040 81e7 	bne.w	80251f0 <__ieee754_pow+0x700>
 8024e22:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8024ed8 <__ieee754_pow+0x3e8>
 8024e26:	eeb0 8a47 	vmov.f32	s16, s14
 8024e2a:	eef0 8a67 	vmov.f32	s17, s15
 8024e2e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8024e32:	2600      	movs	r6, #0
 8024e34:	4632      	mov	r2, r6
 8024e36:	463b      	mov	r3, r7
 8024e38:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024e3c:	f7db fa24 	bl	8000288 <__aeabi_dsub>
 8024e40:	4622      	mov	r2, r4
 8024e42:	462b      	mov	r3, r5
 8024e44:	f7db fbd8 	bl	80005f8 <__aeabi_dmul>
 8024e48:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024e4c:	4680      	mov	r8, r0
 8024e4e:	4689      	mov	r9, r1
 8024e50:	4650      	mov	r0, sl
 8024e52:	4659      	mov	r1, fp
 8024e54:	f7db fbd0 	bl	80005f8 <__aeabi_dmul>
 8024e58:	4602      	mov	r2, r0
 8024e5a:	460b      	mov	r3, r1
 8024e5c:	4640      	mov	r0, r8
 8024e5e:	4649      	mov	r1, r9
 8024e60:	f7db fa14 	bl	800028c <__adddf3>
 8024e64:	4632      	mov	r2, r6
 8024e66:	463b      	mov	r3, r7
 8024e68:	4680      	mov	r8, r0
 8024e6a:	4689      	mov	r9, r1
 8024e6c:	4620      	mov	r0, r4
 8024e6e:	4629      	mov	r1, r5
 8024e70:	f7db fbc2 	bl	80005f8 <__aeabi_dmul>
 8024e74:	460b      	mov	r3, r1
 8024e76:	4604      	mov	r4, r0
 8024e78:	460d      	mov	r5, r1
 8024e7a:	4602      	mov	r2, r0
 8024e7c:	4649      	mov	r1, r9
 8024e7e:	4640      	mov	r0, r8
 8024e80:	f7db fa04 	bl	800028c <__adddf3>
 8024e84:	4b19      	ldr	r3, [pc, #100]	; (8024eec <__ieee754_pow+0x3fc>)
 8024e86:	4299      	cmp	r1, r3
 8024e88:	ec45 4b19 	vmov	d9, r4, r5
 8024e8c:	4606      	mov	r6, r0
 8024e8e:	460f      	mov	r7, r1
 8024e90:	468b      	mov	fp, r1
 8024e92:	f340 82f1 	ble.w	8025478 <__ieee754_pow+0x988>
 8024e96:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8024e9a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8024e9e:	4303      	orrs	r3, r0
 8024ea0:	f000 81e4 	beq.w	802526c <__ieee754_pow+0x77c>
 8024ea4:	ec51 0b18 	vmov	r0, r1, d8
 8024ea8:	2200      	movs	r2, #0
 8024eaa:	2300      	movs	r3, #0
 8024eac:	f7db fe16 	bl	8000adc <__aeabi_dcmplt>
 8024eb0:	3800      	subs	r0, #0
 8024eb2:	bf18      	it	ne
 8024eb4:	2001      	movne	r0, #1
 8024eb6:	e72b      	b.n	8024d10 <__ieee754_pow+0x220>
 8024eb8:	60000000 	.word	0x60000000
 8024ebc:	3ff71547 	.word	0x3ff71547
 8024ec0:	f85ddf44 	.word	0xf85ddf44
 8024ec4:	3e54ae0b 	.word	0x3e54ae0b
 8024ec8:	55555555 	.word	0x55555555
 8024ecc:	3fd55555 	.word	0x3fd55555
 8024ed0:	652b82fe 	.word	0x652b82fe
 8024ed4:	3ff71547 	.word	0x3ff71547
 8024ed8:	00000000 	.word	0x00000000
 8024edc:	bff00000 	.word	0xbff00000
 8024ee0:	3ff00000 	.word	0x3ff00000
 8024ee4:	3fd00000 	.word	0x3fd00000
 8024ee8:	3fe00000 	.word	0x3fe00000
 8024eec:	408fffff 	.word	0x408fffff
 8024ef0:	4bd5      	ldr	r3, [pc, #852]	; (8025248 <__ieee754_pow+0x758>)
 8024ef2:	402b      	ands	r3, r5
 8024ef4:	2200      	movs	r2, #0
 8024ef6:	b92b      	cbnz	r3, 8024f04 <__ieee754_pow+0x414>
 8024ef8:	4bd4      	ldr	r3, [pc, #848]	; (802524c <__ieee754_pow+0x75c>)
 8024efa:	f7db fb7d 	bl	80005f8 <__aeabi_dmul>
 8024efe:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8024f02:	460c      	mov	r4, r1
 8024f04:	1523      	asrs	r3, r4, #20
 8024f06:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8024f0a:	4413      	add	r3, r2
 8024f0c:	9305      	str	r3, [sp, #20]
 8024f0e:	4bd0      	ldr	r3, [pc, #832]	; (8025250 <__ieee754_pow+0x760>)
 8024f10:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8024f14:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8024f18:	429c      	cmp	r4, r3
 8024f1a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8024f1e:	dd08      	ble.n	8024f32 <__ieee754_pow+0x442>
 8024f20:	4bcc      	ldr	r3, [pc, #816]	; (8025254 <__ieee754_pow+0x764>)
 8024f22:	429c      	cmp	r4, r3
 8024f24:	f340 8162 	ble.w	80251ec <__ieee754_pow+0x6fc>
 8024f28:	9b05      	ldr	r3, [sp, #20]
 8024f2a:	3301      	adds	r3, #1
 8024f2c:	9305      	str	r3, [sp, #20]
 8024f2e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8024f32:	2400      	movs	r4, #0
 8024f34:	00e3      	lsls	r3, r4, #3
 8024f36:	9307      	str	r3, [sp, #28]
 8024f38:	4bc7      	ldr	r3, [pc, #796]	; (8025258 <__ieee754_pow+0x768>)
 8024f3a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8024f3e:	ed93 7b00 	vldr	d7, [r3]
 8024f42:	4629      	mov	r1, r5
 8024f44:	ec53 2b17 	vmov	r2, r3, d7
 8024f48:	eeb0 9a47 	vmov.f32	s18, s14
 8024f4c:	eef0 9a67 	vmov.f32	s19, s15
 8024f50:	4682      	mov	sl, r0
 8024f52:	f7db f999 	bl	8000288 <__aeabi_dsub>
 8024f56:	4652      	mov	r2, sl
 8024f58:	4606      	mov	r6, r0
 8024f5a:	460f      	mov	r7, r1
 8024f5c:	462b      	mov	r3, r5
 8024f5e:	ec51 0b19 	vmov	r0, r1, d9
 8024f62:	f7db f993 	bl	800028c <__adddf3>
 8024f66:	4602      	mov	r2, r0
 8024f68:	460b      	mov	r3, r1
 8024f6a:	2000      	movs	r0, #0
 8024f6c:	49bb      	ldr	r1, [pc, #748]	; (802525c <__ieee754_pow+0x76c>)
 8024f6e:	f7db fc6d 	bl	800084c <__aeabi_ddiv>
 8024f72:	ec41 0b1a 	vmov	d10, r0, r1
 8024f76:	4602      	mov	r2, r0
 8024f78:	460b      	mov	r3, r1
 8024f7a:	4630      	mov	r0, r6
 8024f7c:	4639      	mov	r1, r7
 8024f7e:	f7db fb3b 	bl	80005f8 <__aeabi_dmul>
 8024f82:	2300      	movs	r3, #0
 8024f84:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8024f88:	9302      	str	r3, [sp, #8]
 8024f8a:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8024f8e:	46ab      	mov	fp, r5
 8024f90:	106d      	asrs	r5, r5, #1
 8024f92:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8024f96:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8024f9a:	ec41 0b18 	vmov	d8, r0, r1
 8024f9e:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8024fa2:	2200      	movs	r2, #0
 8024fa4:	4640      	mov	r0, r8
 8024fa6:	4649      	mov	r1, r9
 8024fa8:	4614      	mov	r4, r2
 8024faa:	461d      	mov	r5, r3
 8024fac:	f7db fb24 	bl	80005f8 <__aeabi_dmul>
 8024fb0:	4602      	mov	r2, r0
 8024fb2:	460b      	mov	r3, r1
 8024fb4:	4630      	mov	r0, r6
 8024fb6:	4639      	mov	r1, r7
 8024fb8:	f7db f966 	bl	8000288 <__aeabi_dsub>
 8024fbc:	ec53 2b19 	vmov	r2, r3, d9
 8024fc0:	4606      	mov	r6, r0
 8024fc2:	460f      	mov	r7, r1
 8024fc4:	4620      	mov	r0, r4
 8024fc6:	4629      	mov	r1, r5
 8024fc8:	f7db f95e 	bl	8000288 <__aeabi_dsub>
 8024fcc:	4602      	mov	r2, r0
 8024fce:	460b      	mov	r3, r1
 8024fd0:	4650      	mov	r0, sl
 8024fd2:	4659      	mov	r1, fp
 8024fd4:	f7db f958 	bl	8000288 <__aeabi_dsub>
 8024fd8:	4642      	mov	r2, r8
 8024fda:	464b      	mov	r3, r9
 8024fdc:	f7db fb0c 	bl	80005f8 <__aeabi_dmul>
 8024fe0:	4602      	mov	r2, r0
 8024fe2:	460b      	mov	r3, r1
 8024fe4:	4630      	mov	r0, r6
 8024fe6:	4639      	mov	r1, r7
 8024fe8:	f7db f94e 	bl	8000288 <__aeabi_dsub>
 8024fec:	ec53 2b1a 	vmov	r2, r3, d10
 8024ff0:	f7db fb02 	bl	80005f8 <__aeabi_dmul>
 8024ff4:	ec53 2b18 	vmov	r2, r3, d8
 8024ff8:	ec41 0b19 	vmov	d9, r0, r1
 8024ffc:	ec51 0b18 	vmov	r0, r1, d8
 8025000:	f7db fafa 	bl	80005f8 <__aeabi_dmul>
 8025004:	a37c      	add	r3, pc, #496	; (adr r3, 80251f8 <__ieee754_pow+0x708>)
 8025006:	e9d3 2300 	ldrd	r2, r3, [r3]
 802500a:	4604      	mov	r4, r0
 802500c:	460d      	mov	r5, r1
 802500e:	f7db faf3 	bl	80005f8 <__aeabi_dmul>
 8025012:	a37b      	add	r3, pc, #492	; (adr r3, 8025200 <__ieee754_pow+0x710>)
 8025014:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025018:	f7db f938 	bl	800028c <__adddf3>
 802501c:	4622      	mov	r2, r4
 802501e:	462b      	mov	r3, r5
 8025020:	f7db faea 	bl	80005f8 <__aeabi_dmul>
 8025024:	a378      	add	r3, pc, #480	; (adr r3, 8025208 <__ieee754_pow+0x718>)
 8025026:	e9d3 2300 	ldrd	r2, r3, [r3]
 802502a:	f7db f92f 	bl	800028c <__adddf3>
 802502e:	4622      	mov	r2, r4
 8025030:	462b      	mov	r3, r5
 8025032:	f7db fae1 	bl	80005f8 <__aeabi_dmul>
 8025036:	a376      	add	r3, pc, #472	; (adr r3, 8025210 <__ieee754_pow+0x720>)
 8025038:	e9d3 2300 	ldrd	r2, r3, [r3]
 802503c:	f7db f926 	bl	800028c <__adddf3>
 8025040:	4622      	mov	r2, r4
 8025042:	462b      	mov	r3, r5
 8025044:	f7db fad8 	bl	80005f8 <__aeabi_dmul>
 8025048:	a373      	add	r3, pc, #460	; (adr r3, 8025218 <__ieee754_pow+0x728>)
 802504a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802504e:	f7db f91d 	bl	800028c <__adddf3>
 8025052:	4622      	mov	r2, r4
 8025054:	462b      	mov	r3, r5
 8025056:	f7db facf 	bl	80005f8 <__aeabi_dmul>
 802505a:	a371      	add	r3, pc, #452	; (adr r3, 8025220 <__ieee754_pow+0x730>)
 802505c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025060:	f7db f914 	bl	800028c <__adddf3>
 8025064:	4622      	mov	r2, r4
 8025066:	4606      	mov	r6, r0
 8025068:	460f      	mov	r7, r1
 802506a:	462b      	mov	r3, r5
 802506c:	4620      	mov	r0, r4
 802506e:	4629      	mov	r1, r5
 8025070:	f7db fac2 	bl	80005f8 <__aeabi_dmul>
 8025074:	4602      	mov	r2, r0
 8025076:	460b      	mov	r3, r1
 8025078:	4630      	mov	r0, r6
 802507a:	4639      	mov	r1, r7
 802507c:	f7db fabc 	bl	80005f8 <__aeabi_dmul>
 8025080:	4642      	mov	r2, r8
 8025082:	4604      	mov	r4, r0
 8025084:	460d      	mov	r5, r1
 8025086:	464b      	mov	r3, r9
 8025088:	ec51 0b18 	vmov	r0, r1, d8
 802508c:	f7db f8fe 	bl	800028c <__adddf3>
 8025090:	ec53 2b19 	vmov	r2, r3, d9
 8025094:	f7db fab0 	bl	80005f8 <__aeabi_dmul>
 8025098:	4622      	mov	r2, r4
 802509a:	462b      	mov	r3, r5
 802509c:	f7db f8f6 	bl	800028c <__adddf3>
 80250a0:	4642      	mov	r2, r8
 80250a2:	4682      	mov	sl, r0
 80250a4:	468b      	mov	fp, r1
 80250a6:	464b      	mov	r3, r9
 80250a8:	4640      	mov	r0, r8
 80250aa:	4649      	mov	r1, r9
 80250ac:	f7db faa4 	bl	80005f8 <__aeabi_dmul>
 80250b0:	4b6b      	ldr	r3, [pc, #428]	; (8025260 <__ieee754_pow+0x770>)
 80250b2:	2200      	movs	r2, #0
 80250b4:	4606      	mov	r6, r0
 80250b6:	460f      	mov	r7, r1
 80250b8:	f7db f8e8 	bl	800028c <__adddf3>
 80250bc:	4652      	mov	r2, sl
 80250be:	465b      	mov	r3, fp
 80250c0:	f7db f8e4 	bl	800028c <__adddf3>
 80250c4:	2000      	movs	r0, #0
 80250c6:	4604      	mov	r4, r0
 80250c8:	460d      	mov	r5, r1
 80250ca:	4602      	mov	r2, r0
 80250cc:	460b      	mov	r3, r1
 80250ce:	4640      	mov	r0, r8
 80250d0:	4649      	mov	r1, r9
 80250d2:	f7db fa91 	bl	80005f8 <__aeabi_dmul>
 80250d6:	4b62      	ldr	r3, [pc, #392]	; (8025260 <__ieee754_pow+0x770>)
 80250d8:	4680      	mov	r8, r0
 80250da:	4689      	mov	r9, r1
 80250dc:	2200      	movs	r2, #0
 80250de:	4620      	mov	r0, r4
 80250e0:	4629      	mov	r1, r5
 80250e2:	f7db f8d1 	bl	8000288 <__aeabi_dsub>
 80250e6:	4632      	mov	r2, r6
 80250e8:	463b      	mov	r3, r7
 80250ea:	f7db f8cd 	bl	8000288 <__aeabi_dsub>
 80250ee:	4602      	mov	r2, r0
 80250f0:	460b      	mov	r3, r1
 80250f2:	4650      	mov	r0, sl
 80250f4:	4659      	mov	r1, fp
 80250f6:	f7db f8c7 	bl	8000288 <__aeabi_dsub>
 80250fa:	ec53 2b18 	vmov	r2, r3, d8
 80250fe:	f7db fa7b 	bl	80005f8 <__aeabi_dmul>
 8025102:	4622      	mov	r2, r4
 8025104:	4606      	mov	r6, r0
 8025106:	460f      	mov	r7, r1
 8025108:	462b      	mov	r3, r5
 802510a:	ec51 0b19 	vmov	r0, r1, d9
 802510e:	f7db fa73 	bl	80005f8 <__aeabi_dmul>
 8025112:	4602      	mov	r2, r0
 8025114:	460b      	mov	r3, r1
 8025116:	4630      	mov	r0, r6
 8025118:	4639      	mov	r1, r7
 802511a:	f7db f8b7 	bl	800028c <__adddf3>
 802511e:	4606      	mov	r6, r0
 8025120:	460f      	mov	r7, r1
 8025122:	4602      	mov	r2, r0
 8025124:	460b      	mov	r3, r1
 8025126:	4640      	mov	r0, r8
 8025128:	4649      	mov	r1, r9
 802512a:	f7db f8af 	bl	800028c <__adddf3>
 802512e:	a33e      	add	r3, pc, #248	; (adr r3, 8025228 <__ieee754_pow+0x738>)
 8025130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025134:	2000      	movs	r0, #0
 8025136:	4604      	mov	r4, r0
 8025138:	460d      	mov	r5, r1
 802513a:	f7db fa5d 	bl	80005f8 <__aeabi_dmul>
 802513e:	4642      	mov	r2, r8
 8025140:	ec41 0b18 	vmov	d8, r0, r1
 8025144:	464b      	mov	r3, r9
 8025146:	4620      	mov	r0, r4
 8025148:	4629      	mov	r1, r5
 802514a:	f7db f89d 	bl	8000288 <__aeabi_dsub>
 802514e:	4602      	mov	r2, r0
 8025150:	460b      	mov	r3, r1
 8025152:	4630      	mov	r0, r6
 8025154:	4639      	mov	r1, r7
 8025156:	f7db f897 	bl	8000288 <__aeabi_dsub>
 802515a:	a335      	add	r3, pc, #212	; (adr r3, 8025230 <__ieee754_pow+0x740>)
 802515c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025160:	f7db fa4a 	bl	80005f8 <__aeabi_dmul>
 8025164:	a334      	add	r3, pc, #208	; (adr r3, 8025238 <__ieee754_pow+0x748>)
 8025166:	e9d3 2300 	ldrd	r2, r3, [r3]
 802516a:	4606      	mov	r6, r0
 802516c:	460f      	mov	r7, r1
 802516e:	4620      	mov	r0, r4
 8025170:	4629      	mov	r1, r5
 8025172:	f7db fa41 	bl	80005f8 <__aeabi_dmul>
 8025176:	4602      	mov	r2, r0
 8025178:	460b      	mov	r3, r1
 802517a:	4630      	mov	r0, r6
 802517c:	4639      	mov	r1, r7
 802517e:	f7db f885 	bl	800028c <__adddf3>
 8025182:	9a07      	ldr	r2, [sp, #28]
 8025184:	4b37      	ldr	r3, [pc, #220]	; (8025264 <__ieee754_pow+0x774>)
 8025186:	4413      	add	r3, r2
 8025188:	e9d3 2300 	ldrd	r2, r3, [r3]
 802518c:	f7db f87e 	bl	800028c <__adddf3>
 8025190:	4682      	mov	sl, r0
 8025192:	9805      	ldr	r0, [sp, #20]
 8025194:	468b      	mov	fp, r1
 8025196:	f7db f9c5 	bl	8000524 <__aeabi_i2d>
 802519a:	9a07      	ldr	r2, [sp, #28]
 802519c:	4b32      	ldr	r3, [pc, #200]	; (8025268 <__ieee754_pow+0x778>)
 802519e:	4413      	add	r3, r2
 80251a0:	e9d3 8900 	ldrd	r8, r9, [r3]
 80251a4:	4606      	mov	r6, r0
 80251a6:	460f      	mov	r7, r1
 80251a8:	4652      	mov	r2, sl
 80251aa:	465b      	mov	r3, fp
 80251ac:	ec51 0b18 	vmov	r0, r1, d8
 80251b0:	f7db f86c 	bl	800028c <__adddf3>
 80251b4:	4642      	mov	r2, r8
 80251b6:	464b      	mov	r3, r9
 80251b8:	f7db f868 	bl	800028c <__adddf3>
 80251bc:	4632      	mov	r2, r6
 80251be:	463b      	mov	r3, r7
 80251c0:	f7db f864 	bl	800028c <__adddf3>
 80251c4:	2000      	movs	r0, #0
 80251c6:	4632      	mov	r2, r6
 80251c8:	463b      	mov	r3, r7
 80251ca:	4604      	mov	r4, r0
 80251cc:	460d      	mov	r5, r1
 80251ce:	f7db f85b 	bl	8000288 <__aeabi_dsub>
 80251d2:	4642      	mov	r2, r8
 80251d4:	464b      	mov	r3, r9
 80251d6:	f7db f857 	bl	8000288 <__aeabi_dsub>
 80251da:	ec53 2b18 	vmov	r2, r3, d8
 80251de:	f7db f853 	bl	8000288 <__aeabi_dsub>
 80251e2:	4602      	mov	r2, r0
 80251e4:	460b      	mov	r3, r1
 80251e6:	4650      	mov	r0, sl
 80251e8:	4659      	mov	r1, fp
 80251ea:	e610      	b.n	8024e0e <__ieee754_pow+0x31e>
 80251ec:	2401      	movs	r4, #1
 80251ee:	e6a1      	b.n	8024f34 <__ieee754_pow+0x444>
 80251f0:	ed9f 7b13 	vldr	d7, [pc, #76]	; 8025240 <__ieee754_pow+0x750>
 80251f4:	e617      	b.n	8024e26 <__ieee754_pow+0x336>
 80251f6:	bf00      	nop
 80251f8:	4a454eef 	.word	0x4a454eef
 80251fc:	3fca7e28 	.word	0x3fca7e28
 8025200:	93c9db65 	.word	0x93c9db65
 8025204:	3fcd864a 	.word	0x3fcd864a
 8025208:	a91d4101 	.word	0xa91d4101
 802520c:	3fd17460 	.word	0x3fd17460
 8025210:	518f264d 	.word	0x518f264d
 8025214:	3fd55555 	.word	0x3fd55555
 8025218:	db6fabff 	.word	0xdb6fabff
 802521c:	3fdb6db6 	.word	0x3fdb6db6
 8025220:	33333303 	.word	0x33333303
 8025224:	3fe33333 	.word	0x3fe33333
 8025228:	e0000000 	.word	0xe0000000
 802522c:	3feec709 	.word	0x3feec709
 8025230:	dc3a03fd 	.word	0xdc3a03fd
 8025234:	3feec709 	.word	0x3feec709
 8025238:	145b01f5 	.word	0x145b01f5
 802523c:	be3e2fe0 	.word	0xbe3e2fe0
 8025240:	00000000 	.word	0x00000000
 8025244:	3ff00000 	.word	0x3ff00000
 8025248:	7ff00000 	.word	0x7ff00000
 802524c:	43400000 	.word	0x43400000
 8025250:	0003988e 	.word	0x0003988e
 8025254:	000bb679 	.word	0x000bb679
 8025258:	080273e0 	.word	0x080273e0
 802525c:	3ff00000 	.word	0x3ff00000
 8025260:	40080000 	.word	0x40080000
 8025264:	08027400 	.word	0x08027400
 8025268:	080273f0 	.word	0x080273f0
 802526c:	a3b5      	add	r3, pc, #724	; (adr r3, 8025544 <__ieee754_pow+0xa54>)
 802526e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025272:	4640      	mov	r0, r8
 8025274:	4649      	mov	r1, r9
 8025276:	f7db f809 	bl	800028c <__adddf3>
 802527a:	4622      	mov	r2, r4
 802527c:	ec41 0b1a 	vmov	d10, r0, r1
 8025280:	462b      	mov	r3, r5
 8025282:	4630      	mov	r0, r6
 8025284:	4639      	mov	r1, r7
 8025286:	f7da ffff 	bl	8000288 <__aeabi_dsub>
 802528a:	4602      	mov	r2, r0
 802528c:	460b      	mov	r3, r1
 802528e:	ec51 0b1a 	vmov	r0, r1, d10
 8025292:	f7db fc41 	bl	8000b18 <__aeabi_dcmpgt>
 8025296:	2800      	cmp	r0, #0
 8025298:	f47f ae04 	bne.w	8024ea4 <__ieee754_pow+0x3b4>
 802529c:	4aa4      	ldr	r2, [pc, #656]	; (8025530 <__ieee754_pow+0xa40>)
 802529e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80252a2:	4293      	cmp	r3, r2
 80252a4:	f340 8108 	ble.w	80254b8 <__ieee754_pow+0x9c8>
 80252a8:	151b      	asrs	r3, r3, #20
 80252aa:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 80252ae:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 80252b2:	fa4a f303 	asr.w	r3, sl, r3
 80252b6:	445b      	add	r3, fp
 80252b8:	f3c3 520a 	ubfx	r2, r3, #20, #11
 80252bc:	4e9d      	ldr	r6, [pc, #628]	; (8025534 <__ieee754_pow+0xa44>)
 80252be:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 80252c2:	4116      	asrs	r6, r2
 80252c4:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 80252c8:	2000      	movs	r0, #0
 80252ca:	ea23 0106 	bic.w	r1, r3, r6
 80252ce:	f1c2 0214 	rsb	r2, r2, #20
 80252d2:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80252d6:	fa4a fa02 	asr.w	sl, sl, r2
 80252da:	f1bb 0f00 	cmp.w	fp, #0
 80252de:	4602      	mov	r2, r0
 80252e0:	460b      	mov	r3, r1
 80252e2:	4620      	mov	r0, r4
 80252e4:	4629      	mov	r1, r5
 80252e6:	bfb8      	it	lt
 80252e8:	f1ca 0a00 	rsblt	sl, sl, #0
 80252ec:	f7da ffcc 	bl	8000288 <__aeabi_dsub>
 80252f0:	ec41 0b19 	vmov	d9, r0, r1
 80252f4:	4642      	mov	r2, r8
 80252f6:	464b      	mov	r3, r9
 80252f8:	ec51 0b19 	vmov	r0, r1, d9
 80252fc:	f7da ffc6 	bl	800028c <__adddf3>
 8025300:	a37b      	add	r3, pc, #492	; (adr r3, 80254f0 <__ieee754_pow+0xa00>)
 8025302:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025306:	2000      	movs	r0, #0
 8025308:	4604      	mov	r4, r0
 802530a:	460d      	mov	r5, r1
 802530c:	f7db f974 	bl	80005f8 <__aeabi_dmul>
 8025310:	ec53 2b19 	vmov	r2, r3, d9
 8025314:	4606      	mov	r6, r0
 8025316:	460f      	mov	r7, r1
 8025318:	4620      	mov	r0, r4
 802531a:	4629      	mov	r1, r5
 802531c:	f7da ffb4 	bl	8000288 <__aeabi_dsub>
 8025320:	4602      	mov	r2, r0
 8025322:	460b      	mov	r3, r1
 8025324:	4640      	mov	r0, r8
 8025326:	4649      	mov	r1, r9
 8025328:	f7da ffae 	bl	8000288 <__aeabi_dsub>
 802532c:	a372      	add	r3, pc, #456	; (adr r3, 80254f8 <__ieee754_pow+0xa08>)
 802532e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025332:	f7db f961 	bl	80005f8 <__aeabi_dmul>
 8025336:	a372      	add	r3, pc, #456	; (adr r3, 8025500 <__ieee754_pow+0xa10>)
 8025338:	e9d3 2300 	ldrd	r2, r3, [r3]
 802533c:	4680      	mov	r8, r0
 802533e:	4689      	mov	r9, r1
 8025340:	4620      	mov	r0, r4
 8025342:	4629      	mov	r1, r5
 8025344:	f7db f958 	bl	80005f8 <__aeabi_dmul>
 8025348:	4602      	mov	r2, r0
 802534a:	460b      	mov	r3, r1
 802534c:	4640      	mov	r0, r8
 802534e:	4649      	mov	r1, r9
 8025350:	f7da ff9c 	bl	800028c <__adddf3>
 8025354:	4604      	mov	r4, r0
 8025356:	460d      	mov	r5, r1
 8025358:	4602      	mov	r2, r0
 802535a:	460b      	mov	r3, r1
 802535c:	4630      	mov	r0, r6
 802535e:	4639      	mov	r1, r7
 8025360:	f7da ff94 	bl	800028c <__adddf3>
 8025364:	4632      	mov	r2, r6
 8025366:	463b      	mov	r3, r7
 8025368:	4680      	mov	r8, r0
 802536a:	4689      	mov	r9, r1
 802536c:	f7da ff8c 	bl	8000288 <__aeabi_dsub>
 8025370:	4602      	mov	r2, r0
 8025372:	460b      	mov	r3, r1
 8025374:	4620      	mov	r0, r4
 8025376:	4629      	mov	r1, r5
 8025378:	f7da ff86 	bl	8000288 <__aeabi_dsub>
 802537c:	4642      	mov	r2, r8
 802537e:	4606      	mov	r6, r0
 8025380:	460f      	mov	r7, r1
 8025382:	464b      	mov	r3, r9
 8025384:	4640      	mov	r0, r8
 8025386:	4649      	mov	r1, r9
 8025388:	f7db f936 	bl	80005f8 <__aeabi_dmul>
 802538c:	a35e      	add	r3, pc, #376	; (adr r3, 8025508 <__ieee754_pow+0xa18>)
 802538e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025392:	4604      	mov	r4, r0
 8025394:	460d      	mov	r5, r1
 8025396:	f7db f92f 	bl	80005f8 <__aeabi_dmul>
 802539a:	a35d      	add	r3, pc, #372	; (adr r3, 8025510 <__ieee754_pow+0xa20>)
 802539c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80253a0:	f7da ff72 	bl	8000288 <__aeabi_dsub>
 80253a4:	4622      	mov	r2, r4
 80253a6:	462b      	mov	r3, r5
 80253a8:	f7db f926 	bl	80005f8 <__aeabi_dmul>
 80253ac:	a35a      	add	r3, pc, #360	; (adr r3, 8025518 <__ieee754_pow+0xa28>)
 80253ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80253b2:	f7da ff6b 	bl	800028c <__adddf3>
 80253b6:	4622      	mov	r2, r4
 80253b8:	462b      	mov	r3, r5
 80253ba:	f7db f91d 	bl	80005f8 <__aeabi_dmul>
 80253be:	a358      	add	r3, pc, #352	; (adr r3, 8025520 <__ieee754_pow+0xa30>)
 80253c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80253c4:	f7da ff60 	bl	8000288 <__aeabi_dsub>
 80253c8:	4622      	mov	r2, r4
 80253ca:	462b      	mov	r3, r5
 80253cc:	f7db f914 	bl	80005f8 <__aeabi_dmul>
 80253d0:	a355      	add	r3, pc, #340	; (adr r3, 8025528 <__ieee754_pow+0xa38>)
 80253d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80253d6:	f7da ff59 	bl	800028c <__adddf3>
 80253da:	4622      	mov	r2, r4
 80253dc:	462b      	mov	r3, r5
 80253de:	f7db f90b 	bl	80005f8 <__aeabi_dmul>
 80253e2:	4602      	mov	r2, r0
 80253e4:	460b      	mov	r3, r1
 80253e6:	4640      	mov	r0, r8
 80253e8:	4649      	mov	r1, r9
 80253ea:	f7da ff4d 	bl	8000288 <__aeabi_dsub>
 80253ee:	4604      	mov	r4, r0
 80253f0:	460d      	mov	r5, r1
 80253f2:	4602      	mov	r2, r0
 80253f4:	460b      	mov	r3, r1
 80253f6:	4640      	mov	r0, r8
 80253f8:	4649      	mov	r1, r9
 80253fa:	f7db f8fd 	bl	80005f8 <__aeabi_dmul>
 80253fe:	2200      	movs	r2, #0
 8025400:	ec41 0b19 	vmov	d9, r0, r1
 8025404:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8025408:	4620      	mov	r0, r4
 802540a:	4629      	mov	r1, r5
 802540c:	f7da ff3c 	bl	8000288 <__aeabi_dsub>
 8025410:	4602      	mov	r2, r0
 8025412:	460b      	mov	r3, r1
 8025414:	ec51 0b19 	vmov	r0, r1, d9
 8025418:	f7db fa18 	bl	800084c <__aeabi_ddiv>
 802541c:	4632      	mov	r2, r6
 802541e:	4604      	mov	r4, r0
 8025420:	460d      	mov	r5, r1
 8025422:	463b      	mov	r3, r7
 8025424:	4640      	mov	r0, r8
 8025426:	4649      	mov	r1, r9
 8025428:	f7db f8e6 	bl	80005f8 <__aeabi_dmul>
 802542c:	4632      	mov	r2, r6
 802542e:	463b      	mov	r3, r7
 8025430:	f7da ff2c 	bl	800028c <__adddf3>
 8025434:	4602      	mov	r2, r0
 8025436:	460b      	mov	r3, r1
 8025438:	4620      	mov	r0, r4
 802543a:	4629      	mov	r1, r5
 802543c:	f7da ff24 	bl	8000288 <__aeabi_dsub>
 8025440:	4642      	mov	r2, r8
 8025442:	464b      	mov	r3, r9
 8025444:	f7da ff20 	bl	8000288 <__aeabi_dsub>
 8025448:	460b      	mov	r3, r1
 802544a:	4602      	mov	r2, r0
 802544c:	493a      	ldr	r1, [pc, #232]	; (8025538 <__ieee754_pow+0xa48>)
 802544e:	2000      	movs	r0, #0
 8025450:	f7da ff1a 	bl	8000288 <__aeabi_dsub>
 8025454:	ec41 0b10 	vmov	d0, r0, r1
 8025458:	ee10 3a90 	vmov	r3, s1
 802545c:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8025460:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8025464:	da2b      	bge.n	80254be <__ieee754_pow+0x9ce>
 8025466:	4650      	mov	r0, sl
 8025468:	f001 f84a 	bl	8026500 <scalbn>
 802546c:	ec51 0b10 	vmov	r0, r1, d0
 8025470:	ec53 2b18 	vmov	r2, r3, d8
 8025474:	f7ff bbed 	b.w	8024c52 <__ieee754_pow+0x162>
 8025478:	4b30      	ldr	r3, [pc, #192]	; (802553c <__ieee754_pow+0xa4c>)
 802547a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 802547e:	429e      	cmp	r6, r3
 8025480:	f77f af0c 	ble.w	802529c <__ieee754_pow+0x7ac>
 8025484:	4b2e      	ldr	r3, [pc, #184]	; (8025540 <__ieee754_pow+0xa50>)
 8025486:	440b      	add	r3, r1
 8025488:	4303      	orrs	r3, r0
 802548a:	d009      	beq.n	80254a0 <__ieee754_pow+0x9b0>
 802548c:	ec51 0b18 	vmov	r0, r1, d8
 8025490:	2200      	movs	r2, #0
 8025492:	2300      	movs	r3, #0
 8025494:	f7db fb22 	bl	8000adc <__aeabi_dcmplt>
 8025498:	3800      	subs	r0, #0
 802549a:	bf18      	it	ne
 802549c:	2001      	movne	r0, #1
 802549e:	e447      	b.n	8024d30 <__ieee754_pow+0x240>
 80254a0:	4622      	mov	r2, r4
 80254a2:	462b      	mov	r3, r5
 80254a4:	f7da fef0 	bl	8000288 <__aeabi_dsub>
 80254a8:	4642      	mov	r2, r8
 80254aa:	464b      	mov	r3, r9
 80254ac:	f7db fb2a 	bl	8000b04 <__aeabi_dcmpge>
 80254b0:	2800      	cmp	r0, #0
 80254b2:	f43f aef3 	beq.w	802529c <__ieee754_pow+0x7ac>
 80254b6:	e7e9      	b.n	802548c <__ieee754_pow+0x99c>
 80254b8:	f04f 0a00 	mov.w	sl, #0
 80254bc:	e71a      	b.n	80252f4 <__ieee754_pow+0x804>
 80254be:	ec51 0b10 	vmov	r0, r1, d0
 80254c2:	4619      	mov	r1, r3
 80254c4:	e7d4      	b.n	8025470 <__ieee754_pow+0x980>
 80254c6:	491c      	ldr	r1, [pc, #112]	; (8025538 <__ieee754_pow+0xa48>)
 80254c8:	2000      	movs	r0, #0
 80254ca:	f7ff bb30 	b.w	8024b2e <__ieee754_pow+0x3e>
 80254ce:	2000      	movs	r0, #0
 80254d0:	2100      	movs	r1, #0
 80254d2:	f7ff bb2c 	b.w	8024b2e <__ieee754_pow+0x3e>
 80254d6:	4630      	mov	r0, r6
 80254d8:	4639      	mov	r1, r7
 80254da:	f7ff bb28 	b.w	8024b2e <__ieee754_pow+0x3e>
 80254de:	9204      	str	r2, [sp, #16]
 80254e0:	f7ff bb7a 	b.w	8024bd8 <__ieee754_pow+0xe8>
 80254e4:	2300      	movs	r3, #0
 80254e6:	f7ff bb64 	b.w	8024bb2 <__ieee754_pow+0xc2>
 80254ea:	bf00      	nop
 80254ec:	f3af 8000 	nop.w
 80254f0:	00000000 	.word	0x00000000
 80254f4:	3fe62e43 	.word	0x3fe62e43
 80254f8:	fefa39ef 	.word	0xfefa39ef
 80254fc:	3fe62e42 	.word	0x3fe62e42
 8025500:	0ca86c39 	.word	0x0ca86c39
 8025504:	be205c61 	.word	0xbe205c61
 8025508:	72bea4d0 	.word	0x72bea4d0
 802550c:	3e663769 	.word	0x3e663769
 8025510:	c5d26bf1 	.word	0xc5d26bf1
 8025514:	3ebbbd41 	.word	0x3ebbbd41
 8025518:	af25de2c 	.word	0xaf25de2c
 802551c:	3f11566a 	.word	0x3f11566a
 8025520:	16bebd93 	.word	0x16bebd93
 8025524:	3f66c16c 	.word	0x3f66c16c
 8025528:	5555553e 	.word	0x5555553e
 802552c:	3fc55555 	.word	0x3fc55555
 8025530:	3fe00000 	.word	0x3fe00000
 8025534:	000fffff 	.word	0x000fffff
 8025538:	3ff00000 	.word	0x3ff00000
 802553c:	4090cbff 	.word	0x4090cbff
 8025540:	3f6f3400 	.word	0x3f6f3400
 8025544:	652b82fe 	.word	0x652b82fe
 8025548:	3c971547 	.word	0x3c971547
 802554c:	00000000 	.word	0x00000000

08025550 <__ieee754_rem_pio2>:
 8025550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025554:	ed2d 8b02 	vpush	{d8}
 8025558:	ec55 4b10 	vmov	r4, r5, d0
 802555c:	4bca      	ldr	r3, [pc, #808]	; (8025888 <__ieee754_rem_pio2+0x338>)
 802555e:	b08b      	sub	sp, #44	; 0x2c
 8025560:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8025564:	4598      	cmp	r8, r3
 8025566:	4682      	mov	sl, r0
 8025568:	9502      	str	r5, [sp, #8]
 802556a:	dc08      	bgt.n	802557e <__ieee754_rem_pio2+0x2e>
 802556c:	2200      	movs	r2, #0
 802556e:	2300      	movs	r3, #0
 8025570:	ed80 0b00 	vstr	d0, [r0]
 8025574:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8025578:	f04f 0b00 	mov.w	fp, #0
 802557c:	e028      	b.n	80255d0 <__ieee754_rem_pio2+0x80>
 802557e:	4bc3      	ldr	r3, [pc, #780]	; (802588c <__ieee754_rem_pio2+0x33c>)
 8025580:	4598      	cmp	r8, r3
 8025582:	dc78      	bgt.n	8025676 <__ieee754_rem_pio2+0x126>
 8025584:	9b02      	ldr	r3, [sp, #8]
 8025586:	4ec2      	ldr	r6, [pc, #776]	; (8025890 <__ieee754_rem_pio2+0x340>)
 8025588:	2b00      	cmp	r3, #0
 802558a:	ee10 0a10 	vmov	r0, s0
 802558e:	a3b0      	add	r3, pc, #704	; (adr r3, 8025850 <__ieee754_rem_pio2+0x300>)
 8025590:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025594:	4629      	mov	r1, r5
 8025596:	dd39      	ble.n	802560c <__ieee754_rem_pio2+0xbc>
 8025598:	f7da fe76 	bl	8000288 <__aeabi_dsub>
 802559c:	45b0      	cmp	r8, r6
 802559e:	4604      	mov	r4, r0
 80255a0:	460d      	mov	r5, r1
 80255a2:	d01b      	beq.n	80255dc <__ieee754_rem_pio2+0x8c>
 80255a4:	a3ac      	add	r3, pc, #688	; (adr r3, 8025858 <__ieee754_rem_pio2+0x308>)
 80255a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80255aa:	f7da fe6d 	bl	8000288 <__aeabi_dsub>
 80255ae:	4602      	mov	r2, r0
 80255b0:	460b      	mov	r3, r1
 80255b2:	e9ca 2300 	strd	r2, r3, [sl]
 80255b6:	4620      	mov	r0, r4
 80255b8:	4629      	mov	r1, r5
 80255ba:	f7da fe65 	bl	8000288 <__aeabi_dsub>
 80255be:	a3a6      	add	r3, pc, #664	; (adr r3, 8025858 <__ieee754_rem_pio2+0x308>)
 80255c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80255c4:	f7da fe60 	bl	8000288 <__aeabi_dsub>
 80255c8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80255cc:	f04f 0b01 	mov.w	fp, #1
 80255d0:	4658      	mov	r0, fp
 80255d2:	b00b      	add	sp, #44	; 0x2c
 80255d4:	ecbd 8b02 	vpop	{d8}
 80255d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255dc:	a3a0      	add	r3, pc, #640	; (adr r3, 8025860 <__ieee754_rem_pio2+0x310>)
 80255de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80255e2:	f7da fe51 	bl	8000288 <__aeabi_dsub>
 80255e6:	a3a0      	add	r3, pc, #640	; (adr r3, 8025868 <__ieee754_rem_pio2+0x318>)
 80255e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80255ec:	4604      	mov	r4, r0
 80255ee:	460d      	mov	r5, r1
 80255f0:	f7da fe4a 	bl	8000288 <__aeabi_dsub>
 80255f4:	4602      	mov	r2, r0
 80255f6:	460b      	mov	r3, r1
 80255f8:	e9ca 2300 	strd	r2, r3, [sl]
 80255fc:	4620      	mov	r0, r4
 80255fe:	4629      	mov	r1, r5
 8025600:	f7da fe42 	bl	8000288 <__aeabi_dsub>
 8025604:	a398      	add	r3, pc, #608	; (adr r3, 8025868 <__ieee754_rem_pio2+0x318>)
 8025606:	e9d3 2300 	ldrd	r2, r3, [r3]
 802560a:	e7db      	b.n	80255c4 <__ieee754_rem_pio2+0x74>
 802560c:	f7da fe3e 	bl	800028c <__adddf3>
 8025610:	45b0      	cmp	r8, r6
 8025612:	4604      	mov	r4, r0
 8025614:	460d      	mov	r5, r1
 8025616:	d016      	beq.n	8025646 <__ieee754_rem_pio2+0xf6>
 8025618:	a38f      	add	r3, pc, #572	; (adr r3, 8025858 <__ieee754_rem_pio2+0x308>)
 802561a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802561e:	f7da fe35 	bl	800028c <__adddf3>
 8025622:	4602      	mov	r2, r0
 8025624:	460b      	mov	r3, r1
 8025626:	e9ca 2300 	strd	r2, r3, [sl]
 802562a:	4620      	mov	r0, r4
 802562c:	4629      	mov	r1, r5
 802562e:	f7da fe2b 	bl	8000288 <__aeabi_dsub>
 8025632:	a389      	add	r3, pc, #548	; (adr r3, 8025858 <__ieee754_rem_pio2+0x308>)
 8025634:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025638:	f7da fe28 	bl	800028c <__adddf3>
 802563c:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8025640:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8025644:	e7c4      	b.n	80255d0 <__ieee754_rem_pio2+0x80>
 8025646:	a386      	add	r3, pc, #536	; (adr r3, 8025860 <__ieee754_rem_pio2+0x310>)
 8025648:	e9d3 2300 	ldrd	r2, r3, [r3]
 802564c:	f7da fe1e 	bl	800028c <__adddf3>
 8025650:	a385      	add	r3, pc, #532	; (adr r3, 8025868 <__ieee754_rem_pio2+0x318>)
 8025652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025656:	4604      	mov	r4, r0
 8025658:	460d      	mov	r5, r1
 802565a:	f7da fe17 	bl	800028c <__adddf3>
 802565e:	4602      	mov	r2, r0
 8025660:	460b      	mov	r3, r1
 8025662:	e9ca 2300 	strd	r2, r3, [sl]
 8025666:	4620      	mov	r0, r4
 8025668:	4629      	mov	r1, r5
 802566a:	f7da fe0d 	bl	8000288 <__aeabi_dsub>
 802566e:	a37e      	add	r3, pc, #504	; (adr r3, 8025868 <__ieee754_rem_pio2+0x318>)
 8025670:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025674:	e7e0      	b.n	8025638 <__ieee754_rem_pio2+0xe8>
 8025676:	4b87      	ldr	r3, [pc, #540]	; (8025894 <__ieee754_rem_pio2+0x344>)
 8025678:	4598      	cmp	r8, r3
 802567a:	f300 80d9 	bgt.w	8025830 <__ieee754_rem_pio2+0x2e0>
 802567e:	f7fe fd83 	bl	8024188 <fabs>
 8025682:	ec55 4b10 	vmov	r4, r5, d0
 8025686:	ee10 0a10 	vmov	r0, s0
 802568a:	a379      	add	r3, pc, #484	; (adr r3, 8025870 <__ieee754_rem_pio2+0x320>)
 802568c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025690:	4629      	mov	r1, r5
 8025692:	f7da ffb1 	bl	80005f8 <__aeabi_dmul>
 8025696:	4b80      	ldr	r3, [pc, #512]	; (8025898 <__ieee754_rem_pio2+0x348>)
 8025698:	2200      	movs	r2, #0
 802569a:	f7da fdf7 	bl	800028c <__adddf3>
 802569e:	f7db fa5b 	bl	8000b58 <__aeabi_d2iz>
 80256a2:	4683      	mov	fp, r0
 80256a4:	f7da ff3e 	bl	8000524 <__aeabi_i2d>
 80256a8:	4602      	mov	r2, r0
 80256aa:	460b      	mov	r3, r1
 80256ac:	ec43 2b18 	vmov	d8, r2, r3
 80256b0:	a367      	add	r3, pc, #412	; (adr r3, 8025850 <__ieee754_rem_pio2+0x300>)
 80256b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80256b6:	f7da ff9f 	bl	80005f8 <__aeabi_dmul>
 80256ba:	4602      	mov	r2, r0
 80256bc:	460b      	mov	r3, r1
 80256be:	4620      	mov	r0, r4
 80256c0:	4629      	mov	r1, r5
 80256c2:	f7da fde1 	bl	8000288 <__aeabi_dsub>
 80256c6:	a364      	add	r3, pc, #400	; (adr r3, 8025858 <__ieee754_rem_pio2+0x308>)
 80256c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80256cc:	4606      	mov	r6, r0
 80256ce:	460f      	mov	r7, r1
 80256d0:	ec51 0b18 	vmov	r0, r1, d8
 80256d4:	f7da ff90 	bl	80005f8 <__aeabi_dmul>
 80256d8:	f1bb 0f1f 	cmp.w	fp, #31
 80256dc:	4604      	mov	r4, r0
 80256de:	460d      	mov	r5, r1
 80256e0:	dc0d      	bgt.n	80256fe <__ieee754_rem_pio2+0x1ae>
 80256e2:	4b6e      	ldr	r3, [pc, #440]	; (802589c <__ieee754_rem_pio2+0x34c>)
 80256e4:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
 80256e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80256ec:	4543      	cmp	r3, r8
 80256ee:	d006      	beq.n	80256fe <__ieee754_rem_pio2+0x1ae>
 80256f0:	4622      	mov	r2, r4
 80256f2:	462b      	mov	r3, r5
 80256f4:	4630      	mov	r0, r6
 80256f6:	4639      	mov	r1, r7
 80256f8:	f7da fdc6 	bl	8000288 <__aeabi_dsub>
 80256fc:	e00f      	b.n	802571e <__ieee754_rem_pio2+0x1ce>
 80256fe:	462b      	mov	r3, r5
 8025700:	4622      	mov	r2, r4
 8025702:	4630      	mov	r0, r6
 8025704:	4639      	mov	r1, r7
 8025706:	f7da fdbf 	bl	8000288 <__aeabi_dsub>
 802570a:	ea4f 5328 	mov.w	r3, r8, asr #20
 802570e:	9303      	str	r3, [sp, #12]
 8025710:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8025714:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8025718:	f1b8 0f10 	cmp.w	r8, #16
 802571c:	dc02      	bgt.n	8025724 <__ieee754_rem_pio2+0x1d4>
 802571e:	e9ca 0100 	strd	r0, r1, [sl]
 8025722:	e039      	b.n	8025798 <__ieee754_rem_pio2+0x248>
 8025724:	a34e      	add	r3, pc, #312	; (adr r3, 8025860 <__ieee754_rem_pio2+0x310>)
 8025726:	e9d3 2300 	ldrd	r2, r3, [r3]
 802572a:	ec51 0b18 	vmov	r0, r1, d8
 802572e:	f7da ff63 	bl	80005f8 <__aeabi_dmul>
 8025732:	4604      	mov	r4, r0
 8025734:	460d      	mov	r5, r1
 8025736:	4602      	mov	r2, r0
 8025738:	460b      	mov	r3, r1
 802573a:	4630      	mov	r0, r6
 802573c:	4639      	mov	r1, r7
 802573e:	f7da fda3 	bl	8000288 <__aeabi_dsub>
 8025742:	4602      	mov	r2, r0
 8025744:	460b      	mov	r3, r1
 8025746:	4680      	mov	r8, r0
 8025748:	4689      	mov	r9, r1
 802574a:	4630      	mov	r0, r6
 802574c:	4639      	mov	r1, r7
 802574e:	f7da fd9b 	bl	8000288 <__aeabi_dsub>
 8025752:	4622      	mov	r2, r4
 8025754:	462b      	mov	r3, r5
 8025756:	f7da fd97 	bl	8000288 <__aeabi_dsub>
 802575a:	a343      	add	r3, pc, #268	; (adr r3, 8025868 <__ieee754_rem_pio2+0x318>)
 802575c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025760:	4604      	mov	r4, r0
 8025762:	460d      	mov	r5, r1
 8025764:	ec51 0b18 	vmov	r0, r1, d8
 8025768:	f7da ff46 	bl	80005f8 <__aeabi_dmul>
 802576c:	4622      	mov	r2, r4
 802576e:	462b      	mov	r3, r5
 8025770:	f7da fd8a 	bl	8000288 <__aeabi_dsub>
 8025774:	4602      	mov	r2, r0
 8025776:	460b      	mov	r3, r1
 8025778:	4604      	mov	r4, r0
 802577a:	460d      	mov	r5, r1
 802577c:	4640      	mov	r0, r8
 802577e:	4649      	mov	r1, r9
 8025780:	f7da fd82 	bl	8000288 <__aeabi_dsub>
 8025784:	9a03      	ldr	r2, [sp, #12]
 8025786:	f3c1 530a 	ubfx	r3, r1, #20, #11
 802578a:	1ad3      	subs	r3, r2, r3
 802578c:	2b31      	cmp	r3, #49	; 0x31
 802578e:	dc24      	bgt.n	80257da <__ieee754_rem_pio2+0x28a>
 8025790:	e9ca 0100 	strd	r0, r1, [sl]
 8025794:	4646      	mov	r6, r8
 8025796:	464f      	mov	r7, r9
 8025798:	e9da 8900 	ldrd	r8, r9, [sl]
 802579c:	4630      	mov	r0, r6
 802579e:	4642      	mov	r2, r8
 80257a0:	464b      	mov	r3, r9
 80257a2:	4639      	mov	r1, r7
 80257a4:	f7da fd70 	bl	8000288 <__aeabi_dsub>
 80257a8:	462b      	mov	r3, r5
 80257aa:	4622      	mov	r2, r4
 80257ac:	f7da fd6c 	bl	8000288 <__aeabi_dsub>
 80257b0:	9b02      	ldr	r3, [sp, #8]
 80257b2:	2b00      	cmp	r3, #0
 80257b4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80257b8:	f6bf af0a 	bge.w	80255d0 <__ieee754_rem_pio2+0x80>
 80257bc:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80257c0:	f8ca 3004 	str.w	r3, [sl, #4]
 80257c4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80257c8:	f8ca 8000 	str.w	r8, [sl]
 80257cc:	f8ca 0008 	str.w	r0, [sl, #8]
 80257d0:	f8ca 300c 	str.w	r3, [sl, #12]
 80257d4:	f1cb 0b00 	rsb	fp, fp, #0
 80257d8:	e6fa      	b.n	80255d0 <__ieee754_rem_pio2+0x80>
 80257da:	a327      	add	r3, pc, #156	; (adr r3, 8025878 <__ieee754_rem_pio2+0x328>)
 80257dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80257e0:	ec51 0b18 	vmov	r0, r1, d8
 80257e4:	f7da ff08 	bl	80005f8 <__aeabi_dmul>
 80257e8:	4604      	mov	r4, r0
 80257ea:	460d      	mov	r5, r1
 80257ec:	4602      	mov	r2, r0
 80257ee:	460b      	mov	r3, r1
 80257f0:	4640      	mov	r0, r8
 80257f2:	4649      	mov	r1, r9
 80257f4:	f7da fd48 	bl	8000288 <__aeabi_dsub>
 80257f8:	4602      	mov	r2, r0
 80257fa:	460b      	mov	r3, r1
 80257fc:	4606      	mov	r6, r0
 80257fe:	460f      	mov	r7, r1
 8025800:	4640      	mov	r0, r8
 8025802:	4649      	mov	r1, r9
 8025804:	f7da fd40 	bl	8000288 <__aeabi_dsub>
 8025808:	4622      	mov	r2, r4
 802580a:	462b      	mov	r3, r5
 802580c:	f7da fd3c 	bl	8000288 <__aeabi_dsub>
 8025810:	a31b      	add	r3, pc, #108	; (adr r3, 8025880 <__ieee754_rem_pio2+0x330>)
 8025812:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025816:	4604      	mov	r4, r0
 8025818:	460d      	mov	r5, r1
 802581a:	ec51 0b18 	vmov	r0, r1, d8
 802581e:	f7da feeb 	bl	80005f8 <__aeabi_dmul>
 8025822:	4622      	mov	r2, r4
 8025824:	462b      	mov	r3, r5
 8025826:	f7da fd2f 	bl	8000288 <__aeabi_dsub>
 802582a:	4604      	mov	r4, r0
 802582c:	460d      	mov	r5, r1
 802582e:	e75f      	b.n	80256f0 <__ieee754_rem_pio2+0x1a0>
 8025830:	4b1b      	ldr	r3, [pc, #108]	; (80258a0 <__ieee754_rem_pio2+0x350>)
 8025832:	4598      	cmp	r8, r3
 8025834:	dd36      	ble.n	80258a4 <__ieee754_rem_pio2+0x354>
 8025836:	ee10 2a10 	vmov	r2, s0
 802583a:	462b      	mov	r3, r5
 802583c:	4620      	mov	r0, r4
 802583e:	4629      	mov	r1, r5
 8025840:	f7da fd22 	bl	8000288 <__aeabi_dsub>
 8025844:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8025848:	e9ca 0100 	strd	r0, r1, [sl]
 802584c:	e694      	b.n	8025578 <__ieee754_rem_pio2+0x28>
 802584e:	bf00      	nop
 8025850:	54400000 	.word	0x54400000
 8025854:	3ff921fb 	.word	0x3ff921fb
 8025858:	1a626331 	.word	0x1a626331
 802585c:	3dd0b461 	.word	0x3dd0b461
 8025860:	1a600000 	.word	0x1a600000
 8025864:	3dd0b461 	.word	0x3dd0b461
 8025868:	2e037073 	.word	0x2e037073
 802586c:	3ba3198a 	.word	0x3ba3198a
 8025870:	6dc9c883 	.word	0x6dc9c883
 8025874:	3fe45f30 	.word	0x3fe45f30
 8025878:	2e000000 	.word	0x2e000000
 802587c:	3ba3198a 	.word	0x3ba3198a
 8025880:	252049c1 	.word	0x252049c1
 8025884:	397b839a 	.word	0x397b839a
 8025888:	3fe921fb 	.word	0x3fe921fb
 802588c:	4002d97b 	.word	0x4002d97b
 8025890:	3ff921fb 	.word	0x3ff921fb
 8025894:	413921fb 	.word	0x413921fb
 8025898:	3fe00000 	.word	0x3fe00000
 802589c:	08027410 	.word	0x08027410
 80258a0:	7fefffff 	.word	0x7fefffff
 80258a4:	ea4f 5428 	mov.w	r4, r8, asr #20
 80258a8:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 80258ac:	ee10 0a10 	vmov	r0, s0
 80258b0:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 80258b4:	ee10 6a10 	vmov	r6, s0
 80258b8:	460f      	mov	r7, r1
 80258ba:	f7db f94d 	bl	8000b58 <__aeabi_d2iz>
 80258be:	f7da fe31 	bl	8000524 <__aeabi_i2d>
 80258c2:	4602      	mov	r2, r0
 80258c4:	460b      	mov	r3, r1
 80258c6:	4630      	mov	r0, r6
 80258c8:	4639      	mov	r1, r7
 80258ca:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80258ce:	f7da fcdb 	bl	8000288 <__aeabi_dsub>
 80258d2:	4b23      	ldr	r3, [pc, #140]	; (8025960 <__ieee754_rem_pio2+0x410>)
 80258d4:	2200      	movs	r2, #0
 80258d6:	f7da fe8f 	bl	80005f8 <__aeabi_dmul>
 80258da:	460f      	mov	r7, r1
 80258dc:	4606      	mov	r6, r0
 80258de:	f7db f93b 	bl	8000b58 <__aeabi_d2iz>
 80258e2:	f7da fe1f 	bl	8000524 <__aeabi_i2d>
 80258e6:	4602      	mov	r2, r0
 80258e8:	460b      	mov	r3, r1
 80258ea:	4630      	mov	r0, r6
 80258ec:	4639      	mov	r1, r7
 80258ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80258f2:	f7da fcc9 	bl	8000288 <__aeabi_dsub>
 80258f6:	4b1a      	ldr	r3, [pc, #104]	; (8025960 <__ieee754_rem_pio2+0x410>)
 80258f8:	2200      	movs	r2, #0
 80258fa:	f7da fe7d 	bl	80005f8 <__aeabi_dmul>
 80258fe:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8025902:	ad04      	add	r5, sp, #16
 8025904:	f04f 0803 	mov.w	r8, #3
 8025908:	46a9      	mov	r9, r5
 802590a:	2600      	movs	r6, #0
 802590c:	2700      	movs	r7, #0
 802590e:	4632      	mov	r2, r6
 8025910:	463b      	mov	r3, r7
 8025912:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8025916:	46c3      	mov	fp, r8
 8025918:	3d08      	subs	r5, #8
 802591a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 802591e:	f7db f8d3 	bl	8000ac8 <__aeabi_dcmpeq>
 8025922:	2800      	cmp	r0, #0
 8025924:	d1f3      	bne.n	802590e <__ieee754_rem_pio2+0x3be>
 8025926:	4b0f      	ldr	r3, [pc, #60]	; (8025964 <__ieee754_rem_pio2+0x414>)
 8025928:	9301      	str	r3, [sp, #4]
 802592a:	2302      	movs	r3, #2
 802592c:	9300      	str	r3, [sp, #0]
 802592e:	4622      	mov	r2, r4
 8025930:	465b      	mov	r3, fp
 8025932:	4651      	mov	r1, sl
 8025934:	4648      	mov	r0, r9
 8025936:	f000 f997 	bl	8025c68 <__kernel_rem_pio2>
 802593a:	9b02      	ldr	r3, [sp, #8]
 802593c:	2b00      	cmp	r3, #0
 802593e:	4683      	mov	fp, r0
 8025940:	f6bf ae46 	bge.w	80255d0 <__ieee754_rem_pio2+0x80>
 8025944:	e9da 2100 	ldrd	r2, r1, [sl]
 8025948:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802594c:	e9ca 2300 	strd	r2, r3, [sl]
 8025950:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8025954:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8025958:	e9ca 2302 	strd	r2, r3, [sl, #8]
 802595c:	e73a      	b.n	80257d4 <__ieee754_rem_pio2+0x284>
 802595e:	bf00      	nop
 8025960:	41700000 	.word	0x41700000
 8025964:	08027490 	.word	0x08027490

08025968 <__ieee754_sqrt>:
 8025968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802596c:	ec55 4b10 	vmov	r4, r5, d0
 8025970:	4e55      	ldr	r6, [pc, #340]	; (8025ac8 <__ieee754_sqrt+0x160>)
 8025972:	43ae      	bics	r6, r5
 8025974:	ee10 0a10 	vmov	r0, s0
 8025978:	ee10 3a10 	vmov	r3, s0
 802597c:	462a      	mov	r2, r5
 802597e:	4629      	mov	r1, r5
 8025980:	d110      	bne.n	80259a4 <__ieee754_sqrt+0x3c>
 8025982:	ee10 2a10 	vmov	r2, s0
 8025986:	462b      	mov	r3, r5
 8025988:	f7da fe36 	bl	80005f8 <__aeabi_dmul>
 802598c:	4602      	mov	r2, r0
 802598e:	460b      	mov	r3, r1
 8025990:	4620      	mov	r0, r4
 8025992:	4629      	mov	r1, r5
 8025994:	f7da fc7a 	bl	800028c <__adddf3>
 8025998:	4604      	mov	r4, r0
 802599a:	460d      	mov	r5, r1
 802599c:	ec45 4b10 	vmov	d0, r4, r5
 80259a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80259a4:	2d00      	cmp	r5, #0
 80259a6:	dc10      	bgt.n	80259ca <__ieee754_sqrt+0x62>
 80259a8:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80259ac:	4330      	orrs	r0, r6
 80259ae:	d0f5      	beq.n	802599c <__ieee754_sqrt+0x34>
 80259b0:	b15d      	cbz	r5, 80259ca <__ieee754_sqrt+0x62>
 80259b2:	ee10 2a10 	vmov	r2, s0
 80259b6:	462b      	mov	r3, r5
 80259b8:	ee10 0a10 	vmov	r0, s0
 80259bc:	f7da fc64 	bl	8000288 <__aeabi_dsub>
 80259c0:	4602      	mov	r2, r0
 80259c2:	460b      	mov	r3, r1
 80259c4:	f7da ff42 	bl	800084c <__aeabi_ddiv>
 80259c8:	e7e6      	b.n	8025998 <__ieee754_sqrt+0x30>
 80259ca:	1512      	asrs	r2, r2, #20
 80259cc:	d074      	beq.n	8025ab8 <__ieee754_sqrt+0x150>
 80259ce:	07d4      	lsls	r4, r2, #31
 80259d0:	f3c1 0113 	ubfx	r1, r1, #0, #20
 80259d4:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 80259d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80259dc:	bf5e      	ittt	pl
 80259de:	0fda      	lsrpl	r2, r3, #31
 80259e0:	005b      	lslpl	r3, r3, #1
 80259e2:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 80259e6:	2400      	movs	r4, #0
 80259e8:	0fda      	lsrs	r2, r3, #31
 80259ea:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80259ee:	107f      	asrs	r7, r7, #1
 80259f0:	005b      	lsls	r3, r3, #1
 80259f2:	2516      	movs	r5, #22
 80259f4:	4620      	mov	r0, r4
 80259f6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 80259fa:	1886      	adds	r6, r0, r2
 80259fc:	428e      	cmp	r6, r1
 80259fe:	bfde      	ittt	le
 8025a00:	1b89      	suble	r1, r1, r6
 8025a02:	18b0      	addle	r0, r6, r2
 8025a04:	18a4      	addle	r4, r4, r2
 8025a06:	0049      	lsls	r1, r1, #1
 8025a08:	3d01      	subs	r5, #1
 8025a0a:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8025a0e:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8025a12:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8025a16:	d1f0      	bne.n	80259fa <__ieee754_sqrt+0x92>
 8025a18:	462a      	mov	r2, r5
 8025a1a:	f04f 0e20 	mov.w	lr, #32
 8025a1e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8025a22:	4281      	cmp	r1, r0
 8025a24:	eb06 0c05 	add.w	ip, r6, r5
 8025a28:	dc02      	bgt.n	8025a30 <__ieee754_sqrt+0xc8>
 8025a2a:	d113      	bne.n	8025a54 <__ieee754_sqrt+0xec>
 8025a2c:	459c      	cmp	ip, r3
 8025a2e:	d811      	bhi.n	8025a54 <__ieee754_sqrt+0xec>
 8025a30:	f1bc 0f00 	cmp.w	ip, #0
 8025a34:	eb0c 0506 	add.w	r5, ip, r6
 8025a38:	da43      	bge.n	8025ac2 <__ieee754_sqrt+0x15a>
 8025a3a:	2d00      	cmp	r5, #0
 8025a3c:	db41      	blt.n	8025ac2 <__ieee754_sqrt+0x15a>
 8025a3e:	f100 0801 	add.w	r8, r0, #1
 8025a42:	1a09      	subs	r1, r1, r0
 8025a44:	459c      	cmp	ip, r3
 8025a46:	bf88      	it	hi
 8025a48:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 8025a4c:	eba3 030c 	sub.w	r3, r3, ip
 8025a50:	4432      	add	r2, r6
 8025a52:	4640      	mov	r0, r8
 8025a54:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8025a58:	f1be 0e01 	subs.w	lr, lr, #1
 8025a5c:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8025a60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8025a64:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8025a68:	d1db      	bne.n	8025a22 <__ieee754_sqrt+0xba>
 8025a6a:	430b      	orrs	r3, r1
 8025a6c:	d006      	beq.n	8025a7c <__ieee754_sqrt+0x114>
 8025a6e:	1c50      	adds	r0, r2, #1
 8025a70:	bf13      	iteet	ne
 8025a72:	3201      	addne	r2, #1
 8025a74:	3401      	addeq	r4, #1
 8025a76:	4672      	moveq	r2, lr
 8025a78:	f022 0201 	bicne.w	r2, r2, #1
 8025a7c:	1063      	asrs	r3, r4, #1
 8025a7e:	0852      	lsrs	r2, r2, #1
 8025a80:	07e1      	lsls	r1, r4, #31
 8025a82:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8025a86:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8025a8a:	bf48      	it	mi
 8025a8c:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8025a90:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8025a94:	4614      	mov	r4, r2
 8025a96:	e781      	b.n	802599c <__ieee754_sqrt+0x34>
 8025a98:	0ad9      	lsrs	r1, r3, #11
 8025a9a:	3815      	subs	r0, #21
 8025a9c:	055b      	lsls	r3, r3, #21
 8025a9e:	2900      	cmp	r1, #0
 8025aa0:	d0fa      	beq.n	8025a98 <__ieee754_sqrt+0x130>
 8025aa2:	02cd      	lsls	r5, r1, #11
 8025aa4:	d50a      	bpl.n	8025abc <__ieee754_sqrt+0x154>
 8025aa6:	f1c2 0420 	rsb	r4, r2, #32
 8025aaa:	fa23 f404 	lsr.w	r4, r3, r4
 8025aae:	1e55      	subs	r5, r2, #1
 8025ab0:	4093      	lsls	r3, r2
 8025ab2:	4321      	orrs	r1, r4
 8025ab4:	1b42      	subs	r2, r0, r5
 8025ab6:	e78a      	b.n	80259ce <__ieee754_sqrt+0x66>
 8025ab8:	4610      	mov	r0, r2
 8025aba:	e7f0      	b.n	8025a9e <__ieee754_sqrt+0x136>
 8025abc:	0049      	lsls	r1, r1, #1
 8025abe:	3201      	adds	r2, #1
 8025ac0:	e7ef      	b.n	8025aa2 <__ieee754_sqrt+0x13a>
 8025ac2:	4680      	mov	r8, r0
 8025ac4:	e7bd      	b.n	8025a42 <__ieee754_sqrt+0xda>
 8025ac6:	bf00      	nop
 8025ac8:	7ff00000 	.word	0x7ff00000

08025acc <__ieee754_sqrtf>:
 8025acc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8025ad0:	4770      	bx	lr
 8025ad2:	0000      	movs	r0, r0
 8025ad4:	0000      	movs	r0, r0
	...

08025ad8 <__kernel_cos>:
 8025ad8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025adc:	ec57 6b10 	vmov	r6, r7, d0
 8025ae0:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8025ae4:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8025ae8:	ed8d 1b00 	vstr	d1, [sp]
 8025aec:	da07      	bge.n	8025afe <__kernel_cos+0x26>
 8025aee:	ee10 0a10 	vmov	r0, s0
 8025af2:	4639      	mov	r1, r7
 8025af4:	f7db f830 	bl	8000b58 <__aeabi_d2iz>
 8025af8:	2800      	cmp	r0, #0
 8025afa:	f000 8088 	beq.w	8025c0e <__kernel_cos+0x136>
 8025afe:	4632      	mov	r2, r6
 8025b00:	463b      	mov	r3, r7
 8025b02:	4630      	mov	r0, r6
 8025b04:	4639      	mov	r1, r7
 8025b06:	f7da fd77 	bl	80005f8 <__aeabi_dmul>
 8025b0a:	4b51      	ldr	r3, [pc, #324]	; (8025c50 <__kernel_cos+0x178>)
 8025b0c:	2200      	movs	r2, #0
 8025b0e:	4604      	mov	r4, r0
 8025b10:	460d      	mov	r5, r1
 8025b12:	f7da fd71 	bl	80005f8 <__aeabi_dmul>
 8025b16:	a340      	add	r3, pc, #256	; (adr r3, 8025c18 <__kernel_cos+0x140>)
 8025b18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b1c:	4682      	mov	sl, r0
 8025b1e:	468b      	mov	fp, r1
 8025b20:	4620      	mov	r0, r4
 8025b22:	4629      	mov	r1, r5
 8025b24:	f7da fd68 	bl	80005f8 <__aeabi_dmul>
 8025b28:	a33d      	add	r3, pc, #244	; (adr r3, 8025c20 <__kernel_cos+0x148>)
 8025b2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b2e:	f7da fbad 	bl	800028c <__adddf3>
 8025b32:	4622      	mov	r2, r4
 8025b34:	462b      	mov	r3, r5
 8025b36:	f7da fd5f 	bl	80005f8 <__aeabi_dmul>
 8025b3a:	a33b      	add	r3, pc, #236	; (adr r3, 8025c28 <__kernel_cos+0x150>)
 8025b3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b40:	f7da fba2 	bl	8000288 <__aeabi_dsub>
 8025b44:	4622      	mov	r2, r4
 8025b46:	462b      	mov	r3, r5
 8025b48:	f7da fd56 	bl	80005f8 <__aeabi_dmul>
 8025b4c:	a338      	add	r3, pc, #224	; (adr r3, 8025c30 <__kernel_cos+0x158>)
 8025b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b52:	f7da fb9b 	bl	800028c <__adddf3>
 8025b56:	4622      	mov	r2, r4
 8025b58:	462b      	mov	r3, r5
 8025b5a:	f7da fd4d 	bl	80005f8 <__aeabi_dmul>
 8025b5e:	a336      	add	r3, pc, #216	; (adr r3, 8025c38 <__kernel_cos+0x160>)
 8025b60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b64:	f7da fb90 	bl	8000288 <__aeabi_dsub>
 8025b68:	4622      	mov	r2, r4
 8025b6a:	462b      	mov	r3, r5
 8025b6c:	f7da fd44 	bl	80005f8 <__aeabi_dmul>
 8025b70:	a333      	add	r3, pc, #204	; (adr r3, 8025c40 <__kernel_cos+0x168>)
 8025b72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b76:	f7da fb89 	bl	800028c <__adddf3>
 8025b7a:	4622      	mov	r2, r4
 8025b7c:	462b      	mov	r3, r5
 8025b7e:	f7da fd3b 	bl	80005f8 <__aeabi_dmul>
 8025b82:	4622      	mov	r2, r4
 8025b84:	462b      	mov	r3, r5
 8025b86:	f7da fd37 	bl	80005f8 <__aeabi_dmul>
 8025b8a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8025b8e:	4604      	mov	r4, r0
 8025b90:	460d      	mov	r5, r1
 8025b92:	4630      	mov	r0, r6
 8025b94:	4639      	mov	r1, r7
 8025b96:	f7da fd2f 	bl	80005f8 <__aeabi_dmul>
 8025b9a:	460b      	mov	r3, r1
 8025b9c:	4602      	mov	r2, r0
 8025b9e:	4629      	mov	r1, r5
 8025ba0:	4620      	mov	r0, r4
 8025ba2:	f7da fb71 	bl	8000288 <__aeabi_dsub>
 8025ba6:	4b2b      	ldr	r3, [pc, #172]	; (8025c54 <__kernel_cos+0x17c>)
 8025ba8:	4598      	cmp	r8, r3
 8025baa:	4606      	mov	r6, r0
 8025bac:	460f      	mov	r7, r1
 8025bae:	dc10      	bgt.n	8025bd2 <__kernel_cos+0xfa>
 8025bb0:	4602      	mov	r2, r0
 8025bb2:	460b      	mov	r3, r1
 8025bb4:	4650      	mov	r0, sl
 8025bb6:	4659      	mov	r1, fp
 8025bb8:	f7da fb66 	bl	8000288 <__aeabi_dsub>
 8025bbc:	460b      	mov	r3, r1
 8025bbe:	4926      	ldr	r1, [pc, #152]	; (8025c58 <__kernel_cos+0x180>)
 8025bc0:	4602      	mov	r2, r0
 8025bc2:	2000      	movs	r0, #0
 8025bc4:	f7da fb60 	bl	8000288 <__aeabi_dsub>
 8025bc8:	ec41 0b10 	vmov	d0, r0, r1
 8025bcc:	b003      	add	sp, #12
 8025bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025bd2:	4b22      	ldr	r3, [pc, #136]	; (8025c5c <__kernel_cos+0x184>)
 8025bd4:	4920      	ldr	r1, [pc, #128]	; (8025c58 <__kernel_cos+0x180>)
 8025bd6:	4598      	cmp	r8, r3
 8025bd8:	bfcc      	ite	gt
 8025bda:	4d21      	ldrgt	r5, [pc, #132]	; (8025c60 <__kernel_cos+0x188>)
 8025bdc:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8025be0:	2400      	movs	r4, #0
 8025be2:	4622      	mov	r2, r4
 8025be4:	462b      	mov	r3, r5
 8025be6:	2000      	movs	r0, #0
 8025be8:	f7da fb4e 	bl	8000288 <__aeabi_dsub>
 8025bec:	4622      	mov	r2, r4
 8025bee:	4680      	mov	r8, r0
 8025bf0:	4689      	mov	r9, r1
 8025bf2:	462b      	mov	r3, r5
 8025bf4:	4650      	mov	r0, sl
 8025bf6:	4659      	mov	r1, fp
 8025bf8:	f7da fb46 	bl	8000288 <__aeabi_dsub>
 8025bfc:	4632      	mov	r2, r6
 8025bfe:	463b      	mov	r3, r7
 8025c00:	f7da fb42 	bl	8000288 <__aeabi_dsub>
 8025c04:	4602      	mov	r2, r0
 8025c06:	460b      	mov	r3, r1
 8025c08:	4640      	mov	r0, r8
 8025c0a:	4649      	mov	r1, r9
 8025c0c:	e7da      	b.n	8025bc4 <__kernel_cos+0xec>
 8025c0e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8025c48 <__kernel_cos+0x170>
 8025c12:	e7db      	b.n	8025bcc <__kernel_cos+0xf4>
 8025c14:	f3af 8000 	nop.w
 8025c18:	be8838d4 	.word	0xbe8838d4
 8025c1c:	bda8fae9 	.word	0xbda8fae9
 8025c20:	bdb4b1c4 	.word	0xbdb4b1c4
 8025c24:	3e21ee9e 	.word	0x3e21ee9e
 8025c28:	809c52ad 	.word	0x809c52ad
 8025c2c:	3e927e4f 	.word	0x3e927e4f
 8025c30:	19cb1590 	.word	0x19cb1590
 8025c34:	3efa01a0 	.word	0x3efa01a0
 8025c38:	16c15177 	.word	0x16c15177
 8025c3c:	3f56c16c 	.word	0x3f56c16c
 8025c40:	5555554c 	.word	0x5555554c
 8025c44:	3fa55555 	.word	0x3fa55555
 8025c48:	00000000 	.word	0x00000000
 8025c4c:	3ff00000 	.word	0x3ff00000
 8025c50:	3fe00000 	.word	0x3fe00000
 8025c54:	3fd33332 	.word	0x3fd33332
 8025c58:	3ff00000 	.word	0x3ff00000
 8025c5c:	3fe90000 	.word	0x3fe90000
 8025c60:	3fd20000 	.word	0x3fd20000
 8025c64:	00000000 	.word	0x00000000

08025c68 <__kernel_rem_pio2>:
 8025c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c6c:	ed2d 8b02 	vpush	{d8}
 8025c70:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8025c74:	f112 0f14 	cmn.w	r2, #20
 8025c78:	9308      	str	r3, [sp, #32]
 8025c7a:	9101      	str	r1, [sp, #4]
 8025c7c:	4bc4      	ldr	r3, [pc, #784]	; (8025f90 <__kernel_rem_pio2+0x328>)
 8025c7e:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8025c80:	900b      	str	r0, [sp, #44]	; 0x2c
 8025c82:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8025c86:	9302      	str	r3, [sp, #8]
 8025c88:	9b08      	ldr	r3, [sp, #32]
 8025c8a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8025c8e:	bfa8      	it	ge
 8025c90:	1ed4      	subge	r4, r2, #3
 8025c92:	9306      	str	r3, [sp, #24]
 8025c94:	bfb2      	itee	lt
 8025c96:	2400      	movlt	r4, #0
 8025c98:	2318      	movge	r3, #24
 8025c9a:	fb94 f4f3 	sdivge	r4, r4, r3
 8025c9e:	f06f 0317 	mvn.w	r3, #23
 8025ca2:	fb04 3303 	mla	r3, r4, r3, r3
 8025ca6:	eb03 0a02 	add.w	sl, r3, r2
 8025caa:	9b02      	ldr	r3, [sp, #8]
 8025cac:	9a06      	ldr	r2, [sp, #24]
 8025cae:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8025f80 <__kernel_rem_pio2+0x318>
 8025cb2:	eb03 0802 	add.w	r8, r3, r2
 8025cb6:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8025cb8:	1aa7      	subs	r7, r4, r2
 8025cba:	ae22      	add	r6, sp, #136	; 0x88
 8025cbc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8025cc0:	2500      	movs	r5, #0
 8025cc2:	4545      	cmp	r5, r8
 8025cc4:	dd13      	ble.n	8025cee <__kernel_rem_pio2+0x86>
 8025cc6:	9b08      	ldr	r3, [sp, #32]
 8025cc8:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8025f80 <__kernel_rem_pio2+0x318>
 8025ccc:	aa22      	add	r2, sp, #136	; 0x88
 8025cce:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8025cd2:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8025cd6:	f04f 0800 	mov.w	r8, #0
 8025cda:	9b02      	ldr	r3, [sp, #8]
 8025cdc:	4598      	cmp	r8, r3
 8025cde:	dc2f      	bgt.n	8025d40 <__kernel_rem_pio2+0xd8>
 8025ce0:	ed8d 8b04 	vstr	d8, [sp, #16]
 8025ce4:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8025ce8:	462f      	mov	r7, r5
 8025cea:	2600      	movs	r6, #0
 8025cec:	e01b      	b.n	8025d26 <__kernel_rem_pio2+0xbe>
 8025cee:	42ef      	cmn	r7, r5
 8025cf0:	d407      	bmi.n	8025d02 <__kernel_rem_pio2+0x9a>
 8025cf2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8025cf6:	f7da fc15 	bl	8000524 <__aeabi_i2d>
 8025cfa:	e8e6 0102 	strd	r0, r1, [r6], #8
 8025cfe:	3501      	adds	r5, #1
 8025d00:	e7df      	b.n	8025cc2 <__kernel_rem_pio2+0x5a>
 8025d02:	ec51 0b18 	vmov	r0, r1, d8
 8025d06:	e7f8      	b.n	8025cfa <__kernel_rem_pio2+0x92>
 8025d08:	e9d7 2300 	ldrd	r2, r3, [r7]
 8025d0c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8025d10:	f7da fc72 	bl	80005f8 <__aeabi_dmul>
 8025d14:	4602      	mov	r2, r0
 8025d16:	460b      	mov	r3, r1
 8025d18:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8025d1c:	f7da fab6 	bl	800028c <__adddf3>
 8025d20:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8025d24:	3601      	adds	r6, #1
 8025d26:	9b06      	ldr	r3, [sp, #24]
 8025d28:	429e      	cmp	r6, r3
 8025d2a:	f1a7 0708 	sub.w	r7, r7, #8
 8025d2e:	ddeb      	ble.n	8025d08 <__kernel_rem_pio2+0xa0>
 8025d30:	ed9d 7b04 	vldr	d7, [sp, #16]
 8025d34:	f108 0801 	add.w	r8, r8, #1
 8025d38:	ecab 7b02 	vstmia	fp!, {d7}
 8025d3c:	3508      	adds	r5, #8
 8025d3e:	e7cc      	b.n	8025cda <__kernel_rem_pio2+0x72>
 8025d40:	9b02      	ldr	r3, [sp, #8]
 8025d42:	aa0e      	add	r2, sp, #56	; 0x38
 8025d44:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8025d48:	930d      	str	r3, [sp, #52]	; 0x34
 8025d4a:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8025d4c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8025d50:	9c02      	ldr	r4, [sp, #8]
 8025d52:	930c      	str	r3, [sp, #48]	; 0x30
 8025d54:	00e3      	lsls	r3, r4, #3
 8025d56:	930a      	str	r3, [sp, #40]	; 0x28
 8025d58:	ab9a      	add	r3, sp, #616	; 0x268
 8025d5a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8025d5e:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8025d62:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8025d66:	ab72      	add	r3, sp, #456	; 0x1c8
 8025d68:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8025d6c:	46c3      	mov	fp, r8
 8025d6e:	46a1      	mov	r9, r4
 8025d70:	f1b9 0f00 	cmp.w	r9, #0
 8025d74:	f1a5 0508 	sub.w	r5, r5, #8
 8025d78:	dc77      	bgt.n	8025e6a <__kernel_rem_pio2+0x202>
 8025d7a:	ec47 6b10 	vmov	d0, r6, r7
 8025d7e:	4650      	mov	r0, sl
 8025d80:	f000 fbbe 	bl	8026500 <scalbn>
 8025d84:	ec57 6b10 	vmov	r6, r7, d0
 8025d88:	2200      	movs	r2, #0
 8025d8a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8025d8e:	ee10 0a10 	vmov	r0, s0
 8025d92:	4639      	mov	r1, r7
 8025d94:	f7da fc30 	bl	80005f8 <__aeabi_dmul>
 8025d98:	ec41 0b10 	vmov	d0, r0, r1
 8025d9c:	f7fe fa00 	bl	80241a0 <floor>
 8025da0:	4b7c      	ldr	r3, [pc, #496]	; (8025f94 <__kernel_rem_pio2+0x32c>)
 8025da2:	ec51 0b10 	vmov	r0, r1, d0
 8025da6:	2200      	movs	r2, #0
 8025da8:	f7da fc26 	bl	80005f8 <__aeabi_dmul>
 8025dac:	4602      	mov	r2, r0
 8025dae:	460b      	mov	r3, r1
 8025db0:	4630      	mov	r0, r6
 8025db2:	4639      	mov	r1, r7
 8025db4:	f7da fa68 	bl	8000288 <__aeabi_dsub>
 8025db8:	460f      	mov	r7, r1
 8025dba:	4606      	mov	r6, r0
 8025dbc:	f7da fecc 	bl	8000b58 <__aeabi_d2iz>
 8025dc0:	9004      	str	r0, [sp, #16]
 8025dc2:	f7da fbaf 	bl	8000524 <__aeabi_i2d>
 8025dc6:	4602      	mov	r2, r0
 8025dc8:	460b      	mov	r3, r1
 8025dca:	4630      	mov	r0, r6
 8025dcc:	4639      	mov	r1, r7
 8025dce:	f7da fa5b 	bl	8000288 <__aeabi_dsub>
 8025dd2:	f1ba 0f00 	cmp.w	sl, #0
 8025dd6:	4606      	mov	r6, r0
 8025dd8:	460f      	mov	r7, r1
 8025dda:	dd6d      	ble.n	8025eb8 <__kernel_rem_pio2+0x250>
 8025ddc:	1e62      	subs	r2, r4, #1
 8025dde:	ab0e      	add	r3, sp, #56	; 0x38
 8025de0:	9d04      	ldr	r5, [sp, #16]
 8025de2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8025de6:	f1ca 0118 	rsb	r1, sl, #24
 8025dea:	fa40 f301 	asr.w	r3, r0, r1
 8025dee:	441d      	add	r5, r3
 8025df0:	408b      	lsls	r3, r1
 8025df2:	1ac0      	subs	r0, r0, r3
 8025df4:	ab0e      	add	r3, sp, #56	; 0x38
 8025df6:	9504      	str	r5, [sp, #16]
 8025df8:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8025dfc:	f1ca 0317 	rsb	r3, sl, #23
 8025e00:	fa40 fb03 	asr.w	fp, r0, r3
 8025e04:	f1bb 0f00 	cmp.w	fp, #0
 8025e08:	dd65      	ble.n	8025ed6 <__kernel_rem_pio2+0x26e>
 8025e0a:	9b04      	ldr	r3, [sp, #16]
 8025e0c:	2200      	movs	r2, #0
 8025e0e:	3301      	adds	r3, #1
 8025e10:	9304      	str	r3, [sp, #16]
 8025e12:	4615      	mov	r5, r2
 8025e14:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8025e18:	4294      	cmp	r4, r2
 8025e1a:	f300 809c 	bgt.w	8025f56 <__kernel_rem_pio2+0x2ee>
 8025e1e:	f1ba 0f00 	cmp.w	sl, #0
 8025e22:	dd07      	ble.n	8025e34 <__kernel_rem_pio2+0x1cc>
 8025e24:	f1ba 0f01 	cmp.w	sl, #1
 8025e28:	f000 80c0 	beq.w	8025fac <__kernel_rem_pio2+0x344>
 8025e2c:	f1ba 0f02 	cmp.w	sl, #2
 8025e30:	f000 80c6 	beq.w	8025fc0 <__kernel_rem_pio2+0x358>
 8025e34:	f1bb 0f02 	cmp.w	fp, #2
 8025e38:	d14d      	bne.n	8025ed6 <__kernel_rem_pio2+0x26e>
 8025e3a:	4632      	mov	r2, r6
 8025e3c:	463b      	mov	r3, r7
 8025e3e:	4956      	ldr	r1, [pc, #344]	; (8025f98 <__kernel_rem_pio2+0x330>)
 8025e40:	2000      	movs	r0, #0
 8025e42:	f7da fa21 	bl	8000288 <__aeabi_dsub>
 8025e46:	4606      	mov	r6, r0
 8025e48:	460f      	mov	r7, r1
 8025e4a:	2d00      	cmp	r5, #0
 8025e4c:	d043      	beq.n	8025ed6 <__kernel_rem_pio2+0x26e>
 8025e4e:	4650      	mov	r0, sl
 8025e50:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8025f88 <__kernel_rem_pio2+0x320>
 8025e54:	f000 fb54 	bl	8026500 <scalbn>
 8025e58:	4630      	mov	r0, r6
 8025e5a:	4639      	mov	r1, r7
 8025e5c:	ec53 2b10 	vmov	r2, r3, d0
 8025e60:	f7da fa12 	bl	8000288 <__aeabi_dsub>
 8025e64:	4606      	mov	r6, r0
 8025e66:	460f      	mov	r7, r1
 8025e68:	e035      	b.n	8025ed6 <__kernel_rem_pio2+0x26e>
 8025e6a:	4b4c      	ldr	r3, [pc, #304]	; (8025f9c <__kernel_rem_pio2+0x334>)
 8025e6c:	2200      	movs	r2, #0
 8025e6e:	4630      	mov	r0, r6
 8025e70:	4639      	mov	r1, r7
 8025e72:	f7da fbc1 	bl	80005f8 <__aeabi_dmul>
 8025e76:	f7da fe6f 	bl	8000b58 <__aeabi_d2iz>
 8025e7a:	f7da fb53 	bl	8000524 <__aeabi_i2d>
 8025e7e:	4602      	mov	r2, r0
 8025e80:	460b      	mov	r3, r1
 8025e82:	ec43 2b18 	vmov	d8, r2, r3
 8025e86:	4b46      	ldr	r3, [pc, #280]	; (8025fa0 <__kernel_rem_pio2+0x338>)
 8025e88:	2200      	movs	r2, #0
 8025e8a:	f7da fbb5 	bl	80005f8 <__aeabi_dmul>
 8025e8e:	4602      	mov	r2, r0
 8025e90:	460b      	mov	r3, r1
 8025e92:	4630      	mov	r0, r6
 8025e94:	4639      	mov	r1, r7
 8025e96:	f7da f9f7 	bl	8000288 <__aeabi_dsub>
 8025e9a:	f7da fe5d 	bl	8000b58 <__aeabi_d2iz>
 8025e9e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8025ea2:	f84b 0b04 	str.w	r0, [fp], #4
 8025ea6:	ec51 0b18 	vmov	r0, r1, d8
 8025eaa:	f7da f9ef 	bl	800028c <__adddf3>
 8025eae:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8025eb2:	4606      	mov	r6, r0
 8025eb4:	460f      	mov	r7, r1
 8025eb6:	e75b      	b.n	8025d70 <__kernel_rem_pio2+0x108>
 8025eb8:	d106      	bne.n	8025ec8 <__kernel_rem_pio2+0x260>
 8025eba:	1e63      	subs	r3, r4, #1
 8025ebc:	aa0e      	add	r2, sp, #56	; 0x38
 8025ebe:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8025ec2:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8025ec6:	e79d      	b.n	8025e04 <__kernel_rem_pio2+0x19c>
 8025ec8:	4b36      	ldr	r3, [pc, #216]	; (8025fa4 <__kernel_rem_pio2+0x33c>)
 8025eca:	2200      	movs	r2, #0
 8025ecc:	f7da fe1a 	bl	8000b04 <__aeabi_dcmpge>
 8025ed0:	2800      	cmp	r0, #0
 8025ed2:	d13d      	bne.n	8025f50 <__kernel_rem_pio2+0x2e8>
 8025ed4:	4683      	mov	fp, r0
 8025ed6:	2200      	movs	r2, #0
 8025ed8:	2300      	movs	r3, #0
 8025eda:	4630      	mov	r0, r6
 8025edc:	4639      	mov	r1, r7
 8025ede:	f7da fdf3 	bl	8000ac8 <__aeabi_dcmpeq>
 8025ee2:	2800      	cmp	r0, #0
 8025ee4:	f000 80c0 	beq.w	8026068 <__kernel_rem_pio2+0x400>
 8025ee8:	1e65      	subs	r5, r4, #1
 8025eea:	462b      	mov	r3, r5
 8025eec:	2200      	movs	r2, #0
 8025eee:	9902      	ldr	r1, [sp, #8]
 8025ef0:	428b      	cmp	r3, r1
 8025ef2:	da6c      	bge.n	8025fce <__kernel_rem_pio2+0x366>
 8025ef4:	2a00      	cmp	r2, #0
 8025ef6:	f000 8089 	beq.w	802600c <__kernel_rem_pio2+0x3a4>
 8025efa:	ab0e      	add	r3, sp, #56	; 0x38
 8025efc:	f1aa 0a18 	sub.w	sl, sl, #24
 8025f00:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8025f04:	2b00      	cmp	r3, #0
 8025f06:	f000 80ad 	beq.w	8026064 <__kernel_rem_pio2+0x3fc>
 8025f0a:	4650      	mov	r0, sl
 8025f0c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8025f88 <__kernel_rem_pio2+0x320>
 8025f10:	f000 faf6 	bl	8026500 <scalbn>
 8025f14:	ab9a      	add	r3, sp, #616	; 0x268
 8025f16:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8025f1a:	ec57 6b10 	vmov	r6, r7, d0
 8025f1e:	00ec      	lsls	r4, r5, #3
 8025f20:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 8025f24:	46aa      	mov	sl, r5
 8025f26:	f1ba 0f00 	cmp.w	sl, #0
 8025f2a:	f280 80d6 	bge.w	80260da <__kernel_rem_pio2+0x472>
 8025f2e:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8025f80 <__kernel_rem_pio2+0x318>
 8025f32:	462e      	mov	r6, r5
 8025f34:	2e00      	cmp	r6, #0
 8025f36:	f2c0 8104 	blt.w	8026142 <__kernel_rem_pio2+0x4da>
 8025f3a:	ab72      	add	r3, sp, #456	; 0x1c8
 8025f3c:	ed8d 8b06 	vstr	d8, [sp, #24]
 8025f40:	f8df a064 	ldr.w	sl, [pc, #100]	; 8025fa8 <__kernel_rem_pio2+0x340>
 8025f44:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8025f48:	f04f 0800 	mov.w	r8, #0
 8025f4c:	1baf      	subs	r7, r5, r6
 8025f4e:	e0ea      	b.n	8026126 <__kernel_rem_pio2+0x4be>
 8025f50:	f04f 0b02 	mov.w	fp, #2
 8025f54:	e759      	b.n	8025e0a <__kernel_rem_pio2+0x1a2>
 8025f56:	f8d8 3000 	ldr.w	r3, [r8]
 8025f5a:	b955      	cbnz	r5, 8025f72 <__kernel_rem_pio2+0x30a>
 8025f5c:	b123      	cbz	r3, 8025f68 <__kernel_rem_pio2+0x300>
 8025f5e:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8025f62:	f8c8 3000 	str.w	r3, [r8]
 8025f66:	2301      	movs	r3, #1
 8025f68:	3201      	adds	r2, #1
 8025f6a:	f108 0804 	add.w	r8, r8, #4
 8025f6e:	461d      	mov	r5, r3
 8025f70:	e752      	b.n	8025e18 <__kernel_rem_pio2+0x1b0>
 8025f72:	1acb      	subs	r3, r1, r3
 8025f74:	f8c8 3000 	str.w	r3, [r8]
 8025f78:	462b      	mov	r3, r5
 8025f7a:	e7f5      	b.n	8025f68 <__kernel_rem_pio2+0x300>
 8025f7c:	f3af 8000 	nop.w
	...
 8025f8c:	3ff00000 	.word	0x3ff00000
 8025f90:	080275d8 	.word	0x080275d8
 8025f94:	40200000 	.word	0x40200000
 8025f98:	3ff00000 	.word	0x3ff00000
 8025f9c:	3e700000 	.word	0x3e700000
 8025fa0:	41700000 	.word	0x41700000
 8025fa4:	3fe00000 	.word	0x3fe00000
 8025fa8:	08027598 	.word	0x08027598
 8025fac:	1e62      	subs	r2, r4, #1
 8025fae:	ab0e      	add	r3, sp, #56	; 0x38
 8025fb0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8025fb4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8025fb8:	a90e      	add	r1, sp, #56	; 0x38
 8025fba:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8025fbe:	e739      	b.n	8025e34 <__kernel_rem_pio2+0x1cc>
 8025fc0:	1e62      	subs	r2, r4, #1
 8025fc2:	ab0e      	add	r3, sp, #56	; 0x38
 8025fc4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8025fc8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8025fcc:	e7f4      	b.n	8025fb8 <__kernel_rem_pio2+0x350>
 8025fce:	a90e      	add	r1, sp, #56	; 0x38
 8025fd0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8025fd4:	3b01      	subs	r3, #1
 8025fd6:	430a      	orrs	r2, r1
 8025fd8:	e789      	b.n	8025eee <__kernel_rem_pio2+0x286>
 8025fda:	3301      	adds	r3, #1
 8025fdc:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8025fe0:	2900      	cmp	r1, #0
 8025fe2:	d0fa      	beq.n	8025fda <__kernel_rem_pio2+0x372>
 8025fe4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025fe6:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8025fea:	446a      	add	r2, sp
 8025fec:	3a98      	subs	r2, #152	; 0x98
 8025fee:	920a      	str	r2, [sp, #40]	; 0x28
 8025ff0:	9a08      	ldr	r2, [sp, #32]
 8025ff2:	18e3      	adds	r3, r4, r3
 8025ff4:	18a5      	adds	r5, r4, r2
 8025ff6:	aa22      	add	r2, sp, #136	; 0x88
 8025ff8:	f104 0801 	add.w	r8, r4, #1
 8025ffc:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8026000:	9304      	str	r3, [sp, #16]
 8026002:	9b04      	ldr	r3, [sp, #16]
 8026004:	4543      	cmp	r3, r8
 8026006:	da04      	bge.n	8026012 <__kernel_rem_pio2+0x3aa>
 8026008:	461c      	mov	r4, r3
 802600a:	e6a3      	b.n	8025d54 <__kernel_rem_pio2+0xec>
 802600c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802600e:	2301      	movs	r3, #1
 8026010:	e7e4      	b.n	8025fdc <__kernel_rem_pio2+0x374>
 8026012:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026014:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8026018:	f7da fa84 	bl	8000524 <__aeabi_i2d>
 802601c:	e8e5 0102 	strd	r0, r1, [r5], #8
 8026020:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026022:	46ab      	mov	fp, r5
 8026024:	461c      	mov	r4, r3
 8026026:	f04f 0900 	mov.w	r9, #0
 802602a:	2600      	movs	r6, #0
 802602c:	2700      	movs	r7, #0
 802602e:	9b06      	ldr	r3, [sp, #24]
 8026030:	4599      	cmp	r9, r3
 8026032:	dd06      	ble.n	8026042 <__kernel_rem_pio2+0x3da>
 8026034:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026036:	e8e3 6702 	strd	r6, r7, [r3], #8
 802603a:	f108 0801 	add.w	r8, r8, #1
 802603e:	930a      	str	r3, [sp, #40]	; 0x28
 8026040:	e7df      	b.n	8026002 <__kernel_rem_pio2+0x39a>
 8026042:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8026046:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 802604a:	f7da fad5 	bl	80005f8 <__aeabi_dmul>
 802604e:	4602      	mov	r2, r0
 8026050:	460b      	mov	r3, r1
 8026052:	4630      	mov	r0, r6
 8026054:	4639      	mov	r1, r7
 8026056:	f7da f919 	bl	800028c <__adddf3>
 802605a:	f109 0901 	add.w	r9, r9, #1
 802605e:	4606      	mov	r6, r0
 8026060:	460f      	mov	r7, r1
 8026062:	e7e4      	b.n	802602e <__kernel_rem_pio2+0x3c6>
 8026064:	3d01      	subs	r5, #1
 8026066:	e748      	b.n	8025efa <__kernel_rem_pio2+0x292>
 8026068:	ec47 6b10 	vmov	d0, r6, r7
 802606c:	f1ca 0000 	rsb	r0, sl, #0
 8026070:	f000 fa46 	bl	8026500 <scalbn>
 8026074:	ec57 6b10 	vmov	r6, r7, d0
 8026078:	4ba0      	ldr	r3, [pc, #640]	; (80262fc <__kernel_rem_pio2+0x694>)
 802607a:	ee10 0a10 	vmov	r0, s0
 802607e:	2200      	movs	r2, #0
 8026080:	4639      	mov	r1, r7
 8026082:	f7da fd3f 	bl	8000b04 <__aeabi_dcmpge>
 8026086:	b1f8      	cbz	r0, 80260c8 <__kernel_rem_pio2+0x460>
 8026088:	4b9d      	ldr	r3, [pc, #628]	; (8026300 <__kernel_rem_pio2+0x698>)
 802608a:	2200      	movs	r2, #0
 802608c:	4630      	mov	r0, r6
 802608e:	4639      	mov	r1, r7
 8026090:	f7da fab2 	bl	80005f8 <__aeabi_dmul>
 8026094:	f7da fd60 	bl	8000b58 <__aeabi_d2iz>
 8026098:	4680      	mov	r8, r0
 802609a:	f7da fa43 	bl	8000524 <__aeabi_i2d>
 802609e:	4b97      	ldr	r3, [pc, #604]	; (80262fc <__kernel_rem_pio2+0x694>)
 80260a0:	2200      	movs	r2, #0
 80260a2:	f7da faa9 	bl	80005f8 <__aeabi_dmul>
 80260a6:	460b      	mov	r3, r1
 80260a8:	4602      	mov	r2, r0
 80260aa:	4639      	mov	r1, r7
 80260ac:	4630      	mov	r0, r6
 80260ae:	f7da f8eb 	bl	8000288 <__aeabi_dsub>
 80260b2:	f7da fd51 	bl	8000b58 <__aeabi_d2iz>
 80260b6:	1c65      	adds	r5, r4, #1
 80260b8:	ab0e      	add	r3, sp, #56	; 0x38
 80260ba:	f10a 0a18 	add.w	sl, sl, #24
 80260be:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80260c2:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 80260c6:	e720      	b.n	8025f0a <__kernel_rem_pio2+0x2a2>
 80260c8:	4630      	mov	r0, r6
 80260ca:	4639      	mov	r1, r7
 80260cc:	f7da fd44 	bl	8000b58 <__aeabi_d2iz>
 80260d0:	ab0e      	add	r3, sp, #56	; 0x38
 80260d2:	4625      	mov	r5, r4
 80260d4:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80260d8:	e717      	b.n	8025f0a <__kernel_rem_pio2+0x2a2>
 80260da:	ab0e      	add	r3, sp, #56	; 0x38
 80260dc:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 80260e0:	f7da fa20 	bl	8000524 <__aeabi_i2d>
 80260e4:	4632      	mov	r2, r6
 80260e6:	463b      	mov	r3, r7
 80260e8:	f7da fa86 	bl	80005f8 <__aeabi_dmul>
 80260ec:	4b84      	ldr	r3, [pc, #528]	; (8026300 <__kernel_rem_pio2+0x698>)
 80260ee:	e968 0102 	strd	r0, r1, [r8, #-8]!
 80260f2:	2200      	movs	r2, #0
 80260f4:	4630      	mov	r0, r6
 80260f6:	4639      	mov	r1, r7
 80260f8:	f7da fa7e 	bl	80005f8 <__aeabi_dmul>
 80260fc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8026100:	4606      	mov	r6, r0
 8026102:	460f      	mov	r7, r1
 8026104:	e70f      	b.n	8025f26 <__kernel_rem_pio2+0x2be>
 8026106:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 802610a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 802610e:	f7da fa73 	bl	80005f8 <__aeabi_dmul>
 8026112:	4602      	mov	r2, r0
 8026114:	460b      	mov	r3, r1
 8026116:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802611a:	f7da f8b7 	bl	800028c <__adddf3>
 802611e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8026122:	f108 0801 	add.w	r8, r8, #1
 8026126:	9b02      	ldr	r3, [sp, #8]
 8026128:	4598      	cmp	r8, r3
 802612a:	dc01      	bgt.n	8026130 <__kernel_rem_pio2+0x4c8>
 802612c:	45b8      	cmp	r8, r7
 802612e:	ddea      	ble.n	8026106 <__kernel_rem_pio2+0x49e>
 8026130:	ed9d 7b06 	vldr	d7, [sp, #24]
 8026134:	ab4a      	add	r3, sp, #296	; 0x128
 8026136:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 802613a:	ed87 7b00 	vstr	d7, [r7]
 802613e:	3e01      	subs	r6, #1
 8026140:	e6f8      	b.n	8025f34 <__kernel_rem_pio2+0x2cc>
 8026142:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8026144:	2b02      	cmp	r3, #2
 8026146:	dc0b      	bgt.n	8026160 <__kernel_rem_pio2+0x4f8>
 8026148:	2b00      	cmp	r3, #0
 802614a:	dc35      	bgt.n	80261b8 <__kernel_rem_pio2+0x550>
 802614c:	d059      	beq.n	8026202 <__kernel_rem_pio2+0x59a>
 802614e:	9b04      	ldr	r3, [sp, #16]
 8026150:	f003 0007 	and.w	r0, r3, #7
 8026154:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8026158:	ecbd 8b02 	vpop	{d8}
 802615c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026160:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8026162:	2b03      	cmp	r3, #3
 8026164:	d1f3      	bne.n	802614e <__kernel_rem_pio2+0x4e6>
 8026166:	ab4a      	add	r3, sp, #296	; 0x128
 8026168:	4423      	add	r3, r4
 802616a:	9306      	str	r3, [sp, #24]
 802616c:	461c      	mov	r4, r3
 802616e:	469a      	mov	sl, r3
 8026170:	9502      	str	r5, [sp, #8]
 8026172:	9b02      	ldr	r3, [sp, #8]
 8026174:	2b00      	cmp	r3, #0
 8026176:	f1aa 0a08 	sub.w	sl, sl, #8
 802617a:	dc6b      	bgt.n	8026254 <__kernel_rem_pio2+0x5ec>
 802617c:	46aa      	mov	sl, r5
 802617e:	f1ba 0f01 	cmp.w	sl, #1
 8026182:	f1a4 0408 	sub.w	r4, r4, #8
 8026186:	f300 8085 	bgt.w	8026294 <__kernel_rem_pio2+0x62c>
 802618a:	9c06      	ldr	r4, [sp, #24]
 802618c:	2000      	movs	r0, #0
 802618e:	3408      	adds	r4, #8
 8026190:	2100      	movs	r1, #0
 8026192:	2d01      	cmp	r5, #1
 8026194:	f300 809d 	bgt.w	80262d2 <__kernel_rem_pio2+0x66a>
 8026198:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 802619c:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 80261a0:	f1bb 0f00 	cmp.w	fp, #0
 80261a4:	f040 809b 	bne.w	80262de <__kernel_rem_pio2+0x676>
 80261a8:	9b01      	ldr	r3, [sp, #4]
 80261aa:	e9c3 5600 	strd	r5, r6, [r3]
 80261ae:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80261b2:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80261b6:	e7ca      	b.n	802614e <__kernel_rem_pio2+0x4e6>
 80261b8:	3408      	adds	r4, #8
 80261ba:	ab4a      	add	r3, sp, #296	; 0x128
 80261bc:	441c      	add	r4, r3
 80261be:	462e      	mov	r6, r5
 80261c0:	2000      	movs	r0, #0
 80261c2:	2100      	movs	r1, #0
 80261c4:	2e00      	cmp	r6, #0
 80261c6:	da36      	bge.n	8026236 <__kernel_rem_pio2+0x5ce>
 80261c8:	f1bb 0f00 	cmp.w	fp, #0
 80261cc:	d039      	beq.n	8026242 <__kernel_rem_pio2+0x5da>
 80261ce:	4602      	mov	r2, r0
 80261d0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80261d4:	9c01      	ldr	r4, [sp, #4]
 80261d6:	e9c4 2300 	strd	r2, r3, [r4]
 80261da:	4602      	mov	r2, r0
 80261dc:	460b      	mov	r3, r1
 80261de:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 80261e2:	f7da f851 	bl	8000288 <__aeabi_dsub>
 80261e6:	ae4c      	add	r6, sp, #304	; 0x130
 80261e8:	2401      	movs	r4, #1
 80261ea:	42a5      	cmp	r5, r4
 80261ec:	da2c      	bge.n	8026248 <__kernel_rem_pio2+0x5e0>
 80261ee:	f1bb 0f00 	cmp.w	fp, #0
 80261f2:	d002      	beq.n	80261fa <__kernel_rem_pio2+0x592>
 80261f4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80261f8:	4619      	mov	r1, r3
 80261fa:	9b01      	ldr	r3, [sp, #4]
 80261fc:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8026200:	e7a5      	b.n	802614e <__kernel_rem_pio2+0x4e6>
 8026202:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8026206:	eb0d 0403 	add.w	r4, sp, r3
 802620a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 802620e:	2000      	movs	r0, #0
 8026210:	2100      	movs	r1, #0
 8026212:	2d00      	cmp	r5, #0
 8026214:	da09      	bge.n	802622a <__kernel_rem_pio2+0x5c2>
 8026216:	f1bb 0f00 	cmp.w	fp, #0
 802621a:	d002      	beq.n	8026222 <__kernel_rem_pio2+0x5ba>
 802621c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026220:	4619      	mov	r1, r3
 8026222:	9b01      	ldr	r3, [sp, #4]
 8026224:	e9c3 0100 	strd	r0, r1, [r3]
 8026228:	e791      	b.n	802614e <__kernel_rem_pio2+0x4e6>
 802622a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 802622e:	f7da f82d 	bl	800028c <__adddf3>
 8026232:	3d01      	subs	r5, #1
 8026234:	e7ed      	b.n	8026212 <__kernel_rem_pio2+0x5aa>
 8026236:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 802623a:	f7da f827 	bl	800028c <__adddf3>
 802623e:	3e01      	subs	r6, #1
 8026240:	e7c0      	b.n	80261c4 <__kernel_rem_pio2+0x55c>
 8026242:	4602      	mov	r2, r0
 8026244:	460b      	mov	r3, r1
 8026246:	e7c5      	b.n	80261d4 <__kernel_rem_pio2+0x56c>
 8026248:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 802624c:	f7da f81e 	bl	800028c <__adddf3>
 8026250:	3401      	adds	r4, #1
 8026252:	e7ca      	b.n	80261ea <__kernel_rem_pio2+0x582>
 8026254:	e9da 8900 	ldrd	r8, r9, [sl]
 8026258:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 802625c:	9b02      	ldr	r3, [sp, #8]
 802625e:	3b01      	subs	r3, #1
 8026260:	9302      	str	r3, [sp, #8]
 8026262:	4632      	mov	r2, r6
 8026264:	463b      	mov	r3, r7
 8026266:	4640      	mov	r0, r8
 8026268:	4649      	mov	r1, r9
 802626a:	f7da f80f 	bl	800028c <__adddf3>
 802626e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8026272:	4602      	mov	r2, r0
 8026274:	460b      	mov	r3, r1
 8026276:	4640      	mov	r0, r8
 8026278:	4649      	mov	r1, r9
 802627a:	f7da f805 	bl	8000288 <__aeabi_dsub>
 802627e:	4632      	mov	r2, r6
 8026280:	463b      	mov	r3, r7
 8026282:	f7da f803 	bl	800028c <__adddf3>
 8026286:	ed9d 7b08 	vldr	d7, [sp, #32]
 802628a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 802628e:	ed8a 7b00 	vstr	d7, [sl]
 8026292:	e76e      	b.n	8026172 <__kernel_rem_pio2+0x50a>
 8026294:	e9d4 8900 	ldrd	r8, r9, [r4]
 8026298:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 802629c:	4640      	mov	r0, r8
 802629e:	4632      	mov	r2, r6
 80262a0:	463b      	mov	r3, r7
 80262a2:	4649      	mov	r1, r9
 80262a4:	f7d9 fff2 	bl	800028c <__adddf3>
 80262a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80262ac:	4602      	mov	r2, r0
 80262ae:	460b      	mov	r3, r1
 80262b0:	4640      	mov	r0, r8
 80262b2:	4649      	mov	r1, r9
 80262b4:	f7d9 ffe8 	bl	8000288 <__aeabi_dsub>
 80262b8:	4632      	mov	r2, r6
 80262ba:	463b      	mov	r3, r7
 80262bc:	f7d9 ffe6 	bl	800028c <__adddf3>
 80262c0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80262c4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80262c8:	ed84 7b00 	vstr	d7, [r4]
 80262cc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80262d0:	e755      	b.n	802617e <__kernel_rem_pio2+0x516>
 80262d2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80262d6:	f7d9 ffd9 	bl	800028c <__adddf3>
 80262da:	3d01      	subs	r5, #1
 80262dc:	e759      	b.n	8026192 <__kernel_rem_pio2+0x52a>
 80262de:	9b01      	ldr	r3, [sp, #4]
 80262e0:	9a01      	ldr	r2, [sp, #4]
 80262e2:	601d      	str	r5, [r3, #0]
 80262e4:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 80262e8:	605c      	str	r4, [r3, #4]
 80262ea:	609f      	str	r7, [r3, #8]
 80262ec:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 80262f0:	60d3      	str	r3, [r2, #12]
 80262f2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80262f6:	6110      	str	r0, [r2, #16]
 80262f8:	6153      	str	r3, [r2, #20]
 80262fa:	e728      	b.n	802614e <__kernel_rem_pio2+0x4e6>
 80262fc:	41700000 	.word	0x41700000
 8026300:	3e700000 	.word	0x3e700000
 8026304:	00000000 	.word	0x00000000

08026308 <__kernel_sin>:
 8026308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802630c:	ed2d 8b04 	vpush	{d8-d9}
 8026310:	eeb0 8a41 	vmov.f32	s16, s2
 8026314:	eef0 8a61 	vmov.f32	s17, s3
 8026318:	ec55 4b10 	vmov	r4, r5, d0
 802631c:	b083      	sub	sp, #12
 802631e:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8026322:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8026326:	9001      	str	r0, [sp, #4]
 8026328:	da06      	bge.n	8026338 <__kernel_sin+0x30>
 802632a:	ee10 0a10 	vmov	r0, s0
 802632e:	4629      	mov	r1, r5
 8026330:	f7da fc12 	bl	8000b58 <__aeabi_d2iz>
 8026334:	2800      	cmp	r0, #0
 8026336:	d051      	beq.n	80263dc <__kernel_sin+0xd4>
 8026338:	4622      	mov	r2, r4
 802633a:	462b      	mov	r3, r5
 802633c:	4620      	mov	r0, r4
 802633e:	4629      	mov	r1, r5
 8026340:	f7da f95a 	bl	80005f8 <__aeabi_dmul>
 8026344:	4682      	mov	sl, r0
 8026346:	468b      	mov	fp, r1
 8026348:	4602      	mov	r2, r0
 802634a:	460b      	mov	r3, r1
 802634c:	4620      	mov	r0, r4
 802634e:	4629      	mov	r1, r5
 8026350:	f7da f952 	bl	80005f8 <__aeabi_dmul>
 8026354:	a341      	add	r3, pc, #260	; (adr r3, 802645c <__kernel_sin+0x154>)
 8026356:	e9d3 2300 	ldrd	r2, r3, [r3]
 802635a:	4680      	mov	r8, r0
 802635c:	4689      	mov	r9, r1
 802635e:	4650      	mov	r0, sl
 8026360:	4659      	mov	r1, fp
 8026362:	f7da f949 	bl	80005f8 <__aeabi_dmul>
 8026366:	a33f      	add	r3, pc, #252	; (adr r3, 8026464 <__kernel_sin+0x15c>)
 8026368:	e9d3 2300 	ldrd	r2, r3, [r3]
 802636c:	f7d9 ff8c 	bl	8000288 <__aeabi_dsub>
 8026370:	4652      	mov	r2, sl
 8026372:	465b      	mov	r3, fp
 8026374:	f7da f940 	bl	80005f8 <__aeabi_dmul>
 8026378:	a33c      	add	r3, pc, #240	; (adr r3, 802646c <__kernel_sin+0x164>)
 802637a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802637e:	f7d9 ff85 	bl	800028c <__adddf3>
 8026382:	4652      	mov	r2, sl
 8026384:	465b      	mov	r3, fp
 8026386:	f7da f937 	bl	80005f8 <__aeabi_dmul>
 802638a:	a33a      	add	r3, pc, #232	; (adr r3, 8026474 <__kernel_sin+0x16c>)
 802638c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026390:	f7d9 ff7a 	bl	8000288 <__aeabi_dsub>
 8026394:	4652      	mov	r2, sl
 8026396:	465b      	mov	r3, fp
 8026398:	f7da f92e 	bl	80005f8 <__aeabi_dmul>
 802639c:	a337      	add	r3, pc, #220	; (adr r3, 802647c <__kernel_sin+0x174>)
 802639e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80263a2:	f7d9 ff73 	bl	800028c <__adddf3>
 80263a6:	9b01      	ldr	r3, [sp, #4]
 80263a8:	4606      	mov	r6, r0
 80263aa:	460f      	mov	r7, r1
 80263ac:	b9eb      	cbnz	r3, 80263ea <__kernel_sin+0xe2>
 80263ae:	4602      	mov	r2, r0
 80263b0:	460b      	mov	r3, r1
 80263b2:	4650      	mov	r0, sl
 80263b4:	4659      	mov	r1, fp
 80263b6:	f7da f91f 	bl	80005f8 <__aeabi_dmul>
 80263ba:	a325      	add	r3, pc, #148	; (adr r3, 8026450 <__kernel_sin+0x148>)
 80263bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80263c0:	f7d9 ff62 	bl	8000288 <__aeabi_dsub>
 80263c4:	4642      	mov	r2, r8
 80263c6:	464b      	mov	r3, r9
 80263c8:	f7da f916 	bl	80005f8 <__aeabi_dmul>
 80263cc:	4602      	mov	r2, r0
 80263ce:	460b      	mov	r3, r1
 80263d0:	4620      	mov	r0, r4
 80263d2:	4629      	mov	r1, r5
 80263d4:	f7d9 ff5a 	bl	800028c <__adddf3>
 80263d8:	4604      	mov	r4, r0
 80263da:	460d      	mov	r5, r1
 80263dc:	ec45 4b10 	vmov	d0, r4, r5
 80263e0:	b003      	add	sp, #12
 80263e2:	ecbd 8b04 	vpop	{d8-d9}
 80263e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263ea:	4b1b      	ldr	r3, [pc, #108]	; (8026458 <__kernel_sin+0x150>)
 80263ec:	ec51 0b18 	vmov	r0, r1, d8
 80263f0:	2200      	movs	r2, #0
 80263f2:	f7da f901 	bl	80005f8 <__aeabi_dmul>
 80263f6:	4632      	mov	r2, r6
 80263f8:	ec41 0b19 	vmov	d9, r0, r1
 80263fc:	463b      	mov	r3, r7
 80263fe:	4640      	mov	r0, r8
 8026400:	4649      	mov	r1, r9
 8026402:	f7da f8f9 	bl	80005f8 <__aeabi_dmul>
 8026406:	4602      	mov	r2, r0
 8026408:	460b      	mov	r3, r1
 802640a:	ec51 0b19 	vmov	r0, r1, d9
 802640e:	f7d9 ff3b 	bl	8000288 <__aeabi_dsub>
 8026412:	4652      	mov	r2, sl
 8026414:	465b      	mov	r3, fp
 8026416:	f7da f8ef 	bl	80005f8 <__aeabi_dmul>
 802641a:	ec53 2b18 	vmov	r2, r3, d8
 802641e:	f7d9 ff33 	bl	8000288 <__aeabi_dsub>
 8026422:	a30b      	add	r3, pc, #44	; (adr r3, 8026450 <__kernel_sin+0x148>)
 8026424:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026428:	4606      	mov	r6, r0
 802642a:	460f      	mov	r7, r1
 802642c:	4640      	mov	r0, r8
 802642e:	4649      	mov	r1, r9
 8026430:	f7da f8e2 	bl	80005f8 <__aeabi_dmul>
 8026434:	4602      	mov	r2, r0
 8026436:	460b      	mov	r3, r1
 8026438:	4630      	mov	r0, r6
 802643a:	4639      	mov	r1, r7
 802643c:	f7d9 ff26 	bl	800028c <__adddf3>
 8026440:	4602      	mov	r2, r0
 8026442:	460b      	mov	r3, r1
 8026444:	4620      	mov	r0, r4
 8026446:	4629      	mov	r1, r5
 8026448:	f7d9 ff1e 	bl	8000288 <__aeabi_dsub>
 802644c:	e7c4      	b.n	80263d8 <__kernel_sin+0xd0>
 802644e:	bf00      	nop
 8026450:	55555549 	.word	0x55555549
 8026454:	3fc55555 	.word	0x3fc55555
 8026458:	3fe00000 	.word	0x3fe00000
 802645c:	5acfd57c 	.word	0x5acfd57c
 8026460:	3de5d93a 	.word	0x3de5d93a
 8026464:	8a2b9ceb 	.word	0x8a2b9ceb
 8026468:	3e5ae5e6 	.word	0x3e5ae5e6
 802646c:	57b1fe7d 	.word	0x57b1fe7d
 8026470:	3ec71de3 	.word	0x3ec71de3
 8026474:	19c161d5 	.word	0x19c161d5
 8026478:	3f2a01a0 	.word	0x3f2a01a0
 802647c:	1110f8a6 	.word	0x1110f8a6
 8026480:	3f811111 	.word	0x3f811111

08026484 <with_errno>:
 8026484:	b570      	push	{r4, r5, r6, lr}
 8026486:	4604      	mov	r4, r0
 8026488:	460d      	mov	r5, r1
 802648a:	4616      	mov	r6, r2
 802648c:	f7fb fdea 	bl	8022064 <__errno>
 8026490:	4629      	mov	r1, r5
 8026492:	6006      	str	r6, [r0, #0]
 8026494:	4620      	mov	r0, r4
 8026496:	bd70      	pop	{r4, r5, r6, pc}

08026498 <xflow>:
 8026498:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802649a:	4614      	mov	r4, r2
 802649c:	461d      	mov	r5, r3
 802649e:	b108      	cbz	r0, 80264a4 <xflow+0xc>
 80264a0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80264a4:	e9cd 2300 	strd	r2, r3, [sp]
 80264a8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80264ac:	4620      	mov	r0, r4
 80264ae:	4629      	mov	r1, r5
 80264b0:	f7da f8a2 	bl	80005f8 <__aeabi_dmul>
 80264b4:	2222      	movs	r2, #34	; 0x22
 80264b6:	b003      	add	sp, #12
 80264b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80264bc:	f7ff bfe2 	b.w	8026484 <with_errno>

080264c0 <__math_uflow>:
 80264c0:	b508      	push	{r3, lr}
 80264c2:	2200      	movs	r2, #0
 80264c4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80264c8:	f7ff ffe6 	bl	8026498 <xflow>
 80264cc:	ec41 0b10 	vmov	d0, r0, r1
 80264d0:	bd08      	pop	{r3, pc}

080264d2 <__math_oflow>:
 80264d2:	b508      	push	{r3, lr}
 80264d4:	2200      	movs	r2, #0
 80264d6:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 80264da:	f7ff ffdd 	bl	8026498 <xflow>
 80264de:	ec41 0b10 	vmov	d0, r0, r1
 80264e2:	bd08      	pop	{r3, pc}

080264e4 <finite>:
 80264e4:	b082      	sub	sp, #8
 80264e6:	ed8d 0b00 	vstr	d0, [sp]
 80264ea:	9801      	ldr	r0, [sp, #4]
 80264ec:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 80264f0:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 80264f4:	0fc0      	lsrs	r0, r0, #31
 80264f6:	b002      	add	sp, #8
 80264f8:	4770      	bx	lr
 80264fa:	0000      	movs	r0, r0
 80264fc:	0000      	movs	r0, r0
	...

08026500 <scalbn>:
 8026500:	b570      	push	{r4, r5, r6, lr}
 8026502:	ec55 4b10 	vmov	r4, r5, d0
 8026506:	f3c5 520a 	ubfx	r2, r5, #20, #11
 802650a:	4606      	mov	r6, r0
 802650c:	462b      	mov	r3, r5
 802650e:	b99a      	cbnz	r2, 8026538 <scalbn+0x38>
 8026510:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8026514:	4323      	orrs	r3, r4
 8026516:	d036      	beq.n	8026586 <scalbn+0x86>
 8026518:	4b39      	ldr	r3, [pc, #228]	; (8026600 <scalbn+0x100>)
 802651a:	4629      	mov	r1, r5
 802651c:	ee10 0a10 	vmov	r0, s0
 8026520:	2200      	movs	r2, #0
 8026522:	f7da f869 	bl	80005f8 <__aeabi_dmul>
 8026526:	4b37      	ldr	r3, [pc, #220]	; (8026604 <scalbn+0x104>)
 8026528:	429e      	cmp	r6, r3
 802652a:	4604      	mov	r4, r0
 802652c:	460d      	mov	r5, r1
 802652e:	da10      	bge.n	8026552 <scalbn+0x52>
 8026530:	a32b      	add	r3, pc, #172	; (adr r3, 80265e0 <scalbn+0xe0>)
 8026532:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026536:	e03a      	b.n	80265ae <scalbn+0xae>
 8026538:	f240 71ff 	movw	r1, #2047	; 0x7ff
 802653c:	428a      	cmp	r2, r1
 802653e:	d10c      	bne.n	802655a <scalbn+0x5a>
 8026540:	ee10 2a10 	vmov	r2, s0
 8026544:	4620      	mov	r0, r4
 8026546:	4629      	mov	r1, r5
 8026548:	f7d9 fea0 	bl	800028c <__adddf3>
 802654c:	4604      	mov	r4, r0
 802654e:	460d      	mov	r5, r1
 8026550:	e019      	b.n	8026586 <scalbn+0x86>
 8026552:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8026556:	460b      	mov	r3, r1
 8026558:	3a36      	subs	r2, #54	; 0x36
 802655a:	4432      	add	r2, r6
 802655c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8026560:	428a      	cmp	r2, r1
 8026562:	dd08      	ble.n	8026576 <scalbn+0x76>
 8026564:	2d00      	cmp	r5, #0
 8026566:	a120      	add	r1, pc, #128	; (adr r1, 80265e8 <scalbn+0xe8>)
 8026568:	e9d1 0100 	ldrd	r0, r1, [r1]
 802656c:	da1c      	bge.n	80265a8 <scalbn+0xa8>
 802656e:	a120      	add	r1, pc, #128	; (adr r1, 80265f0 <scalbn+0xf0>)
 8026570:	e9d1 0100 	ldrd	r0, r1, [r1]
 8026574:	e018      	b.n	80265a8 <scalbn+0xa8>
 8026576:	2a00      	cmp	r2, #0
 8026578:	dd08      	ble.n	802658c <scalbn+0x8c>
 802657a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802657e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8026582:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8026586:	ec45 4b10 	vmov	d0, r4, r5
 802658a:	bd70      	pop	{r4, r5, r6, pc}
 802658c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8026590:	da19      	bge.n	80265c6 <scalbn+0xc6>
 8026592:	f24c 3350 	movw	r3, #50000	; 0xc350
 8026596:	429e      	cmp	r6, r3
 8026598:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 802659c:	dd0a      	ble.n	80265b4 <scalbn+0xb4>
 802659e:	a112      	add	r1, pc, #72	; (adr r1, 80265e8 <scalbn+0xe8>)
 80265a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80265a4:	2b00      	cmp	r3, #0
 80265a6:	d1e2      	bne.n	802656e <scalbn+0x6e>
 80265a8:	a30f      	add	r3, pc, #60	; (adr r3, 80265e8 <scalbn+0xe8>)
 80265aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80265ae:	f7da f823 	bl	80005f8 <__aeabi_dmul>
 80265b2:	e7cb      	b.n	802654c <scalbn+0x4c>
 80265b4:	a10a      	add	r1, pc, #40	; (adr r1, 80265e0 <scalbn+0xe0>)
 80265b6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80265ba:	2b00      	cmp	r3, #0
 80265bc:	d0b8      	beq.n	8026530 <scalbn+0x30>
 80265be:	a10e      	add	r1, pc, #56	; (adr r1, 80265f8 <scalbn+0xf8>)
 80265c0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80265c4:	e7b4      	b.n	8026530 <scalbn+0x30>
 80265c6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80265ca:	3236      	adds	r2, #54	; 0x36
 80265cc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80265d0:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80265d4:	4620      	mov	r0, r4
 80265d6:	4b0c      	ldr	r3, [pc, #48]	; (8026608 <scalbn+0x108>)
 80265d8:	2200      	movs	r2, #0
 80265da:	e7e8      	b.n	80265ae <scalbn+0xae>
 80265dc:	f3af 8000 	nop.w
 80265e0:	c2f8f359 	.word	0xc2f8f359
 80265e4:	01a56e1f 	.word	0x01a56e1f
 80265e8:	8800759c 	.word	0x8800759c
 80265ec:	7e37e43c 	.word	0x7e37e43c
 80265f0:	8800759c 	.word	0x8800759c
 80265f4:	fe37e43c 	.word	0xfe37e43c
 80265f8:	c2f8f359 	.word	0xc2f8f359
 80265fc:	81a56e1f 	.word	0x81a56e1f
 8026600:	43500000 	.word	0x43500000
 8026604:	ffff3cb0 	.word	0xffff3cb0
 8026608:	3c900000 	.word	0x3c900000

0802660c <_close>:
 802660c:	4b02      	ldr	r3, [pc, #8]	; (8026618 <_close+0xc>)
 802660e:	2258      	movs	r2, #88	; 0x58
 8026610:	601a      	str	r2, [r3, #0]
 8026612:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026616:	4770      	bx	lr
 8026618:	2000f584 	.word	0x2000f584

0802661c <_fstat>:
 802661c:	4b02      	ldr	r3, [pc, #8]	; (8026628 <_fstat+0xc>)
 802661e:	2258      	movs	r2, #88	; 0x58
 8026620:	601a      	str	r2, [r3, #0]
 8026622:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026626:	4770      	bx	lr
 8026628:	2000f584 	.word	0x2000f584

0802662c <_getpid>:
 802662c:	4b02      	ldr	r3, [pc, #8]	; (8026638 <_getpid+0xc>)
 802662e:	2258      	movs	r2, #88	; 0x58
 8026630:	601a      	str	r2, [r3, #0]
 8026632:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026636:	4770      	bx	lr
 8026638:	2000f584 	.word	0x2000f584

0802663c <_isatty>:
 802663c:	4b02      	ldr	r3, [pc, #8]	; (8026648 <_isatty+0xc>)
 802663e:	2258      	movs	r2, #88	; 0x58
 8026640:	601a      	str	r2, [r3, #0]
 8026642:	2000      	movs	r0, #0
 8026644:	4770      	bx	lr
 8026646:	bf00      	nop
 8026648:	2000f584 	.word	0x2000f584

0802664c <_kill>:
 802664c:	4b02      	ldr	r3, [pc, #8]	; (8026658 <_kill+0xc>)
 802664e:	2258      	movs	r2, #88	; 0x58
 8026650:	601a      	str	r2, [r3, #0]
 8026652:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026656:	4770      	bx	lr
 8026658:	2000f584 	.word	0x2000f584

0802665c <_lseek>:
 802665c:	4b02      	ldr	r3, [pc, #8]	; (8026668 <_lseek+0xc>)
 802665e:	2258      	movs	r2, #88	; 0x58
 8026660:	601a      	str	r2, [r3, #0]
 8026662:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026666:	4770      	bx	lr
 8026668:	2000f584 	.word	0x2000f584

0802666c <_read>:
 802666c:	4b02      	ldr	r3, [pc, #8]	; (8026678 <_read+0xc>)
 802666e:	2258      	movs	r2, #88	; 0x58
 8026670:	601a      	str	r2, [r3, #0]
 8026672:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026676:	4770      	bx	lr
 8026678:	2000f584 	.word	0x2000f584

0802667c <_sbrk>:
 802667c:	4a04      	ldr	r2, [pc, #16]	; (8026690 <_sbrk+0x14>)
 802667e:	6811      	ldr	r1, [r2, #0]
 8026680:	4603      	mov	r3, r0
 8026682:	b909      	cbnz	r1, 8026688 <_sbrk+0xc>
 8026684:	4903      	ldr	r1, [pc, #12]	; (8026694 <_sbrk+0x18>)
 8026686:	6011      	str	r1, [r2, #0]
 8026688:	6810      	ldr	r0, [r2, #0]
 802668a:	4403      	add	r3, r0
 802668c:	6013      	str	r3, [r2, #0]
 802668e:	4770      	bx	lr
 8026690:	2000f588 	.word	0x2000f588
 8026694:	2000f590 	.word	0x2000f590

08026698 <_write>:
 8026698:	4b02      	ldr	r3, [pc, #8]	; (80266a4 <_write+0xc>)
 802669a:	2258      	movs	r2, #88	; 0x58
 802669c:	601a      	str	r2, [r3, #0]
 802669e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80266a2:	4770      	bx	lr
 80266a4:	2000f584 	.word	0x2000f584

080266a8 <_exit>:
 80266a8:	e7fe      	b.n	80266a8 <_exit>
	...

080266ac <_init>:
 80266ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80266ae:	bf00      	nop
 80266b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80266b2:	bc08      	pop	{r3}
 80266b4:	469e      	mov	lr, r3
 80266b6:	4770      	bx	lr

080266b8 <_fini>:
 80266b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80266ba:	bf00      	nop
 80266bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80266be:	bc08      	pop	{r3}
 80266c0:	469e      	mov	lr, r3
 80266c2:	4770      	bx	lr
