
standard_bot_v5C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026694  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000f20  08026828  08026828  00036828  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08027748  08027748  00040324  2**0
                  CONTENTS
  4 .ARM          00000008  08027748  08027748  00037748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08027750  08027750  00040324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08027750  08027750  00037750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08027754  08027754  00037754  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000324  20000000  08027758  00040000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000f264  20000328  08027a7c  00040328  2**3
                  ALLOC
 10 ._user_heap_stack 00006004  2000f58c  08027a7c  0004f58c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00040324  2**0
                  CONTENTS, READONLY
 12 .debug_info   00041a79  00000000  00000000  00040354  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000abee  00000000  00000000  00081dcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002db8  00000000  00000000  0008c9c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000028f8  00000000  00000000  0008f778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00038208  00000000  00000000  00092070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0004fd55  00000000  00000000  000ca278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f5809  00000000  00000000  00119fcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0020f7d6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d3d4  00000000  00000000  0020f828  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  0021cbfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  0021ccc8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000328 	.word	0x20000328
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0802680c 	.word	0x0802680c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000032c 	.word	0x2000032c
 80001cc:	0802680c 	.word	0x0802680c

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000c9c:	f000 b9aa 	b.w	8000ff4 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	; (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	; (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9d08      	ldr	r5, [sp, #32]
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	468e      	mov	lr, r1
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d14d      	bne.n	8000dce <__udivmoddi4+0xaa>
 8000d32:	428a      	cmp	r2, r1
 8000d34:	4694      	mov	ip, r2
 8000d36:	d969      	bls.n	8000e0c <__udivmoddi4+0xe8>
 8000d38:	fab2 f282 	clz	r2, r2
 8000d3c:	b152      	cbz	r2, 8000d54 <__udivmoddi4+0x30>
 8000d3e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d42:	f1c2 0120 	rsb	r1, r2, #32
 8000d46:	fa20 f101 	lsr.w	r1, r0, r1
 8000d4a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d4e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d52:	4094      	lsls	r4, r2
 8000d54:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d58:	0c21      	lsrs	r1, r4, #16
 8000d5a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d5e:	fa1f f78c 	uxth.w	r7, ip
 8000d62:	fb08 e316 	mls	r3, r8, r6, lr
 8000d66:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d6a:	fb06 f107 	mul.w	r1, r6, r7
 8000d6e:	4299      	cmp	r1, r3
 8000d70:	d90a      	bls.n	8000d88 <__udivmoddi4+0x64>
 8000d72:	eb1c 0303 	adds.w	r3, ip, r3
 8000d76:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000d7a:	f080 811f 	bcs.w	8000fbc <__udivmoddi4+0x298>
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	f240 811c 	bls.w	8000fbc <__udivmoddi4+0x298>
 8000d84:	3e02      	subs	r6, #2
 8000d86:	4463      	add	r3, ip
 8000d88:	1a5b      	subs	r3, r3, r1
 8000d8a:	b2a4      	uxth	r4, r4
 8000d8c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d90:	fb08 3310 	mls	r3, r8, r0, r3
 8000d94:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d98:	fb00 f707 	mul.w	r7, r0, r7
 8000d9c:	42a7      	cmp	r7, r4
 8000d9e:	d90a      	bls.n	8000db6 <__udivmoddi4+0x92>
 8000da0:	eb1c 0404 	adds.w	r4, ip, r4
 8000da4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000da8:	f080 810a 	bcs.w	8000fc0 <__udivmoddi4+0x29c>
 8000dac:	42a7      	cmp	r7, r4
 8000dae:	f240 8107 	bls.w	8000fc0 <__udivmoddi4+0x29c>
 8000db2:	4464      	add	r4, ip
 8000db4:	3802      	subs	r0, #2
 8000db6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dba:	1be4      	subs	r4, r4, r7
 8000dbc:	2600      	movs	r6, #0
 8000dbe:	b11d      	cbz	r5, 8000dc8 <__udivmoddi4+0xa4>
 8000dc0:	40d4      	lsrs	r4, r2
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	e9c5 4300 	strd	r4, r3, [r5]
 8000dc8:	4631      	mov	r1, r6
 8000dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dce:	428b      	cmp	r3, r1
 8000dd0:	d909      	bls.n	8000de6 <__udivmoddi4+0xc2>
 8000dd2:	2d00      	cmp	r5, #0
 8000dd4:	f000 80ef 	beq.w	8000fb6 <__udivmoddi4+0x292>
 8000dd8:	2600      	movs	r6, #0
 8000dda:	e9c5 0100 	strd	r0, r1, [r5]
 8000dde:	4630      	mov	r0, r6
 8000de0:	4631      	mov	r1, r6
 8000de2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de6:	fab3 f683 	clz	r6, r3
 8000dea:	2e00      	cmp	r6, #0
 8000dec:	d14a      	bne.n	8000e84 <__udivmoddi4+0x160>
 8000dee:	428b      	cmp	r3, r1
 8000df0:	d302      	bcc.n	8000df8 <__udivmoddi4+0xd4>
 8000df2:	4282      	cmp	r2, r0
 8000df4:	f200 80f9 	bhi.w	8000fea <__udivmoddi4+0x2c6>
 8000df8:	1a84      	subs	r4, r0, r2
 8000dfa:	eb61 0303 	sbc.w	r3, r1, r3
 8000dfe:	2001      	movs	r0, #1
 8000e00:	469e      	mov	lr, r3
 8000e02:	2d00      	cmp	r5, #0
 8000e04:	d0e0      	beq.n	8000dc8 <__udivmoddi4+0xa4>
 8000e06:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e0a:	e7dd      	b.n	8000dc8 <__udivmoddi4+0xa4>
 8000e0c:	b902      	cbnz	r2, 8000e10 <__udivmoddi4+0xec>
 8000e0e:	deff      	udf	#255	; 0xff
 8000e10:	fab2 f282 	clz	r2, r2
 8000e14:	2a00      	cmp	r2, #0
 8000e16:	f040 8092 	bne.w	8000f3e <__udivmoddi4+0x21a>
 8000e1a:	eba1 010c 	sub.w	r1, r1, ip
 8000e1e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e22:	fa1f fe8c 	uxth.w	lr, ip
 8000e26:	2601      	movs	r6, #1
 8000e28:	0c20      	lsrs	r0, r4, #16
 8000e2a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e2e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e32:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e36:	fb0e f003 	mul.w	r0, lr, r3
 8000e3a:	4288      	cmp	r0, r1
 8000e3c:	d908      	bls.n	8000e50 <__udivmoddi4+0x12c>
 8000e3e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e42:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000e46:	d202      	bcs.n	8000e4e <__udivmoddi4+0x12a>
 8000e48:	4288      	cmp	r0, r1
 8000e4a:	f200 80cb 	bhi.w	8000fe4 <__udivmoddi4+0x2c0>
 8000e4e:	4643      	mov	r3, r8
 8000e50:	1a09      	subs	r1, r1, r0
 8000e52:	b2a4      	uxth	r4, r4
 8000e54:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e58:	fb07 1110 	mls	r1, r7, r0, r1
 8000e5c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e60:	fb0e fe00 	mul.w	lr, lr, r0
 8000e64:	45a6      	cmp	lr, r4
 8000e66:	d908      	bls.n	8000e7a <__udivmoddi4+0x156>
 8000e68:	eb1c 0404 	adds.w	r4, ip, r4
 8000e6c:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000e70:	d202      	bcs.n	8000e78 <__udivmoddi4+0x154>
 8000e72:	45a6      	cmp	lr, r4
 8000e74:	f200 80bb 	bhi.w	8000fee <__udivmoddi4+0x2ca>
 8000e78:	4608      	mov	r0, r1
 8000e7a:	eba4 040e 	sub.w	r4, r4, lr
 8000e7e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e82:	e79c      	b.n	8000dbe <__udivmoddi4+0x9a>
 8000e84:	f1c6 0720 	rsb	r7, r6, #32
 8000e88:	40b3      	lsls	r3, r6
 8000e8a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e8e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e92:	fa20 f407 	lsr.w	r4, r0, r7
 8000e96:	fa01 f306 	lsl.w	r3, r1, r6
 8000e9a:	431c      	orrs	r4, r3
 8000e9c:	40f9      	lsrs	r1, r7
 8000e9e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000ea2:	fa00 f306 	lsl.w	r3, r0, r6
 8000ea6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eaa:	0c20      	lsrs	r0, r4, #16
 8000eac:	fa1f fe8c 	uxth.w	lr, ip
 8000eb0:	fb09 1118 	mls	r1, r9, r8, r1
 8000eb4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eb8:	fb08 f00e 	mul.w	r0, r8, lr
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	fa02 f206 	lsl.w	r2, r2, r6
 8000ec2:	d90b      	bls.n	8000edc <__udivmoddi4+0x1b8>
 8000ec4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ec8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000ecc:	f080 8088 	bcs.w	8000fe0 <__udivmoddi4+0x2bc>
 8000ed0:	4288      	cmp	r0, r1
 8000ed2:	f240 8085 	bls.w	8000fe0 <__udivmoddi4+0x2bc>
 8000ed6:	f1a8 0802 	sub.w	r8, r8, #2
 8000eda:	4461      	add	r1, ip
 8000edc:	1a09      	subs	r1, r1, r0
 8000ede:	b2a4      	uxth	r4, r4
 8000ee0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ee4:	fb09 1110 	mls	r1, r9, r0, r1
 8000ee8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000eec:	fb00 fe0e 	mul.w	lr, r0, lr
 8000ef0:	458e      	cmp	lr, r1
 8000ef2:	d908      	bls.n	8000f06 <__udivmoddi4+0x1e2>
 8000ef4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ef8:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000efc:	d26c      	bcs.n	8000fd8 <__udivmoddi4+0x2b4>
 8000efe:	458e      	cmp	lr, r1
 8000f00:	d96a      	bls.n	8000fd8 <__udivmoddi4+0x2b4>
 8000f02:	3802      	subs	r0, #2
 8000f04:	4461      	add	r1, ip
 8000f06:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f0a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f0e:	eba1 010e 	sub.w	r1, r1, lr
 8000f12:	42a1      	cmp	r1, r4
 8000f14:	46c8      	mov	r8, r9
 8000f16:	46a6      	mov	lr, r4
 8000f18:	d356      	bcc.n	8000fc8 <__udivmoddi4+0x2a4>
 8000f1a:	d053      	beq.n	8000fc4 <__udivmoddi4+0x2a0>
 8000f1c:	b15d      	cbz	r5, 8000f36 <__udivmoddi4+0x212>
 8000f1e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f22:	eb61 010e 	sbc.w	r1, r1, lr
 8000f26:	fa01 f707 	lsl.w	r7, r1, r7
 8000f2a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f2e:	40f1      	lsrs	r1, r6
 8000f30:	431f      	orrs	r7, r3
 8000f32:	e9c5 7100 	strd	r7, r1, [r5]
 8000f36:	2600      	movs	r6, #0
 8000f38:	4631      	mov	r1, r6
 8000f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f3e:	f1c2 0320 	rsb	r3, r2, #32
 8000f42:	40d8      	lsrs	r0, r3
 8000f44:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f48:	fa21 f303 	lsr.w	r3, r1, r3
 8000f4c:	4091      	lsls	r1, r2
 8000f4e:	4301      	orrs	r1, r0
 8000f50:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f54:	fa1f fe8c 	uxth.w	lr, ip
 8000f58:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f5c:	fb07 3610 	mls	r6, r7, r0, r3
 8000f60:	0c0b      	lsrs	r3, r1, #16
 8000f62:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f66:	fb00 f60e 	mul.w	r6, r0, lr
 8000f6a:	429e      	cmp	r6, r3
 8000f6c:	fa04 f402 	lsl.w	r4, r4, r2
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x260>
 8000f72:	eb1c 0303 	adds.w	r3, ip, r3
 8000f76:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000f7a:	d22f      	bcs.n	8000fdc <__udivmoddi4+0x2b8>
 8000f7c:	429e      	cmp	r6, r3
 8000f7e:	d92d      	bls.n	8000fdc <__udivmoddi4+0x2b8>
 8000f80:	3802      	subs	r0, #2
 8000f82:	4463      	add	r3, ip
 8000f84:	1b9b      	subs	r3, r3, r6
 8000f86:	b289      	uxth	r1, r1
 8000f88:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f8c:	fb07 3316 	mls	r3, r7, r6, r3
 8000f90:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f94:	fb06 f30e 	mul.w	r3, r6, lr
 8000f98:	428b      	cmp	r3, r1
 8000f9a:	d908      	bls.n	8000fae <__udivmoddi4+0x28a>
 8000f9c:	eb1c 0101 	adds.w	r1, ip, r1
 8000fa0:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000fa4:	d216      	bcs.n	8000fd4 <__udivmoddi4+0x2b0>
 8000fa6:	428b      	cmp	r3, r1
 8000fa8:	d914      	bls.n	8000fd4 <__udivmoddi4+0x2b0>
 8000faa:	3e02      	subs	r6, #2
 8000fac:	4461      	add	r1, ip
 8000fae:	1ac9      	subs	r1, r1, r3
 8000fb0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fb4:	e738      	b.n	8000e28 <__udivmoddi4+0x104>
 8000fb6:	462e      	mov	r6, r5
 8000fb8:	4628      	mov	r0, r5
 8000fba:	e705      	b.n	8000dc8 <__udivmoddi4+0xa4>
 8000fbc:	4606      	mov	r6, r0
 8000fbe:	e6e3      	b.n	8000d88 <__udivmoddi4+0x64>
 8000fc0:	4618      	mov	r0, r3
 8000fc2:	e6f8      	b.n	8000db6 <__udivmoddi4+0x92>
 8000fc4:	454b      	cmp	r3, r9
 8000fc6:	d2a9      	bcs.n	8000f1c <__udivmoddi4+0x1f8>
 8000fc8:	ebb9 0802 	subs.w	r8, r9, r2
 8000fcc:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fd0:	3801      	subs	r0, #1
 8000fd2:	e7a3      	b.n	8000f1c <__udivmoddi4+0x1f8>
 8000fd4:	4646      	mov	r6, r8
 8000fd6:	e7ea      	b.n	8000fae <__udivmoddi4+0x28a>
 8000fd8:	4620      	mov	r0, r4
 8000fda:	e794      	b.n	8000f06 <__udivmoddi4+0x1e2>
 8000fdc:	4640      	mov	r0, r8
 8000fde:	e7d1      	b.n	8000f84 <__udivmoddi4+0x260>
 8000fe0:	46d0      	mov	r8, sl
 8000fe2:	e77b      	b.n	8000edc <__udivmoddi4+0x1b8>
 8000fe4:	3b02      	subs	r3, #2
 8000fe6:	4461      	add	r1, ip
 8000fe8:	e732      	b.n	8000e50 <__udivmoddi4+0x12c>
 8000fea:	4630      	mov	r0, r6
 8000fec:	e709      	b.n	8000e02 <__udivmoddi4+0xde>
 8000fee:	4464      	add	r4, ip
 8000ff0:	3802      	subs	r0, #2
 8000ff2:	e742      	b.n	8000e7a <__udivmoddi4+0x156>

08000ff4 <__aeabi_idiv0>:
 8000ff4:	4770      	bx	lr
 8000ff6:	bf00      	nop

08000ff8 <get_CRC8_check_sum>:
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @param[in]      ucCRC8:��ʼCRC8
  * @retval         �������CRC8
  */
uint8_t get_CRC8_check_sum(unsigned char *pch_message,unsigned int dw_length,unsigned char ucCRC8)
{
 8000ff8:	b480      	push	{r7}
 8000ffa:	b087      	sub	sp, #28
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	60f8      	str	r0, [r7, #12]
 8001000:	60b9      	str	r1, [r7, #8]
 8001002:	4613      	mov	r3, r2
 8001004:	71fb      	strb	r3, [r7, #7]
    unsigned char uc_index;
    while (dw_length--)
 8001006:	e00a      	b.n	800101e <get_CRC8_check_sum+0x26>
    {
        uc_index = ucCRC8^(*pch_message++);
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	1c5a      	adds	r2, r3, #1
 800100c:	60fa      	str	r2, [r7, #12]
 800100e:	781a      	ldrb	r2, [r3, #0]
 8001010:	79fb      	ldrb	r3, [r7, #7]
 8001012:	4053      	eors	r3, r2
 8001014:	75fb      	strb	r3, [r7, #23]
        ucCRC8 = CRC8_table[uc_index];
 8001016:	7dfb      	ldrb	r3, [r7, #23]
 8001018:	4a07      	ldr	r2, [pc, #28]	; (8001038 <get_CRC8_check_sum+0x40>)
 800101a:	5cd3      	ldrb	r3, [r2, r3]
 800101c:	71fb      	strb	r3, [r7, #7]
    while (dw_length--)
 800101e:	68bb      	ldr	r3, [r7, #8]
 8001020:	1e5a      	subs	r2, r3, #1
 8001022:	60ba      	str	r2, [r7, #8]
 8001024:	2b00      	cmp	r3, #0
 8001026:	d1ef      	bne.n	8001008 <get_CRC8_check_sum+0x10>
    }
    return(ucCRC8);
 8001028:	79fb      	ldrb	r3, [r7, #7]
}
 800102a:	4618      	mov	r0, r3
 800102c:	371c      	adds	r7, #28
 800102e:	46bd      	mov	sp, r7
 8001030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001034:	4770      	bx	lr
 8001036:	bf00      	nop
 8001038:	08026a18 	.word	0x08026a18

0800103c <verify_CRC8_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         ����߼�
  */
uint32_t verify_CRC8_check_sum(unsigned char *pch_message, unsigned int dw_length)
{
 800103c:	b580      	push	{r7, lr}
 800103e:	b084      	sub	sp, #16
 8001040:	af00      	add	r7, sp, #0
 8001042:	6078      	str	r0, [r7, #4]
 8001044:	6039      	str	r1, [r7, #0]
    unsigned char ucExpected = 0;
 8001046:	2300      	movs	r3, #0
 8001048:	73fb      	strb	r3, [r7, #15]
    if ((pch_message == 0) || (dw_length <= 2))
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	2b00      	cmp	r3, #0
 800104e:	d002      	beq.n	8001056 <verify_CRC8_check_sum+0x1a>
 8001050:	683b      	ldr	r3, [r7, #0]
 8001052:	2b02      	cmp	r3, #2
 8001054:	d801      	bhi.n	800105a <verify_CRC8_check_sum+0x1e>
    {
        return 0;
 8001056:	2300      	movs	r3, #0
 8001058:	e013      	b.n	8001082 <verify_CRC8_check_sum+0x46>
    }
    ucExpected = get_CRC8_check_sum (pch_message, dw_length - 1, CRC8_INIT);
 800105a:	683b      	ldr	r3, [r7, #0]
 800105c:	3b01      	subs	r3, #1
 800105e:	22ff      	movs	r2, #255	; 0xff
 8001060:	4619      	mov	r1, r3
 8001062:	6878      	ldr	r0, [r7, #4]
 8001064:	f7ff ffc8 	bl	8000ff8 <get_CRC8_check_sum>
 8001068:	4603      	mov	r3, r0
 800106a:	73fb      	strb	r3, [r7, #15]
    return ( ucExpected == pch_message[dw_length - 1] );
 800106c:	683b      	ldr	r3, [r7, #0]
 800106e:	3b01      	subs	r3, #1
 8001070:	687a      	ldr	r2, [r7, #4]
 8001072:	4413      	add	r3, r2
 8001074:	781b      	ldrb	r3, [r3, #0]
 8001076:	7bfa      	ldrb	r2, [r7, #15]
 8001078:	429a      	cmp	r2, r3
 800107a:	bf0c      	ite	eq
 800107c:	2301      	moveq	r3, #1
 800107e:	2300      	movne	r3, #0
 8001080:	b2db      	uxtb	r3, r3
}
 8001082:	4618      	mov	r0, r3
 8001084:	3710      	adds	r7, #16
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}

0800108a <append_CRC8_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         none
  */
void append_CRC8_check_sum(unsigned char *pch_message, unsigned int dw_length)
{
 800108a:	b580      	push	{r7, lr}
 800108c:	b084      	sub	sp, #16
 800108e:	af00      	add	r7, sp, #0
 8001090:	6078      	str	r0, [r7, #4]
 8001092:	6039      	str	r1, [r7, #0]
    unsigned char ucCRC = 0;
 8001094:	2300      	movs	r3, #0
 8001096:	73fb      	strb	r3, [r7, #15]
    if ((pch_message == 0) || (dw_length <= 2))
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	2b00      	cmp	r3, #0
 800109c:	d012      	beq.n	80010c4 <append_CRC8_check_sum+0x3a>
 800109e:	683b      	ldr	r3, [r7, #0]
 80010a0:	2b02      	cmp	r3, #2
 80010a2:	d90f      	bls.n	80010c4 <append_CRC8_check_sum+0x3a>
    {
        return;
    }
    ucCRC = get_CRC8_check_sum((unsigned char *)pch_message, dw_length - 1, CRC8_INIT);
 80010a4:	683b      	ldr	r3, [r7, #0]
 80010a6:	3b01      	subs	r3, #1
 80010a8:	22ff      	movs	r2, #255	; 0xff
 80010aa:	4619      	mov	r1, r3
 80010ac:	6878      	ldr	r0, [r7, #4]
 80010ae:	f7ff ffa3 	bl	8000ff8 <get_CRC8_check_sum>
 80010b2:	4603      	mov	r3, r0
 80010b4:	73fb      	strb	r3, [r7, #15]
    pch_message[dw_length - 1] = ucCRC;
 80010b6:	683b      	ldr	r3, [r7, #0]
 80010b8:	3b01      	subs	r3, #1
 80010ba:	687a      	ldr	r2, [r7, #4]
 80010bc:	4413      	add	r3, r2
 80010be:	7bfa      	ldrb	r2, [r7, #15]
 80010c0:	701a      	strb	r2, [r3, #0]
 80010c2:	e000      	b.n	80010c6 <append_CRC8_check_sum+0x3c>
        return;
 80010c4:	bf00      	nop
}
 80010c6:	3710      	adds	r7, #16
 80010c8:	46bd      	mov	sp, r7
 80010ca:	bd80      	pop	{r7, pc}

080010cc <get_CRC16_check_sum>:
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @param[in]      wCRC:��ʼCRC16
  * @retval         �������CRC16
  */
uint16_t get_CRC16_check_sum(uint8_t *pch_message,uint32_t dw_length,uint16_t wCRC)
{
 80010cc:	b480      	push	{r7}
 80010ce:	b087      	sub	sp, #28
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	60f8      	str	r0, [r7, #12]
 80010d4:	60b9      	str	r1, [r7, #8]
 80010d6:	4613      	mov	r3, r2
 80010d8:	80fb      	strh	r3, [r7, #6]
    uint8_t chData;
    if (pch_message == NULL)
 80010da:	68fb      	ldr	r3, [r7, #12]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d113      	bne.n	8001108 <get_CRC16_check_sum+0x3c>
    {
        return 0xFFFF;
 80010e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80010e4:	e016      	b.n	8001114 <get_CRC16_check_sum+0x48>
    }
    while(dw_length--)
    {
        chData = *pch_message++;
 80010e6:	68fb      	ldr	r3, [r7, #12]
 80010e8:	1c5a      	adds	r2, r3, #1
 80010ea:	60fa      	str	r2, [r7, #12]
 80010ec:	781b      	ldrb	r3, [r3, #0]
 80010ee:	75fb      	strb	r3, [r7, #23]
        (wCRC) = ((uint16_t)(wCRC) >> 8) ^ wCRC_table[((uint16_t)(wCRC) ^ (uint16_t)(chData)) & 0x00ff];
 80010f0:	88fb      	ldrh	r3, [r7, #6]
 80010f2:	0a1b      	lsrs	r3, r3, #8
 80010f4:	b29a      	uxth	r2, r3
 80010f6:	88f9      	ldrh	r1, [r7, #6]
 80010f8:	7dfb      	ldrb	r3, [r7, #23]
 80010fa:	404b      	eors	r3, r1
 80010fc:	b2db      	uxtb	r3, r3
 80010fe:	4908      	ldr	r1, [pc, #32]	; (8001120 <get_CRC16_check_sum+0x54>)
 8001100:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001104:	4053      	eors	r3, r2
 8001106:	80fb      	strh	r3, [r7, #6]
    while(dw_length--)
 8001108:	68bb      	ldr	r3, [r7, #8]
 800110a:	1e5a      	subs	r2, r3, #1
 800110c:	60ba      	str	r2, [r7, #8]
 800110e:	2b00      	cmp	r3, #0
 8001110:	d1e9      	bne.n	80010e6 <get_CRC16_check_sum+0x1a>
    }
    return wCRC;
 8001112:	88fb      	ldrh	r3, [r7, #6]
}
 8001114:	4618      	mov	r0, r3
 8001116:	371c      	adds	r7, #28
 8001118:	46bd      	mov	sp, r7
 800111a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111e:	4770      	bx	lr
 8001120:	08026b18 	.word	0x08026b18

08001124 <verify_CRC16_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         ����߼�
  */
uint32_t verify_CRC16_check_sum(uint8_t *pchMessage, uint32_t dwLength)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b084      	sub	sp, #16
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	6039      	str	r1, [r7, #0]
    uint16_t wExpected = 0;
 800112e:	2300      	movs	r3, #0
 8001130:	81fb      	strh	r3, [r7, #14]
    if ((pchMessage == NULL) || (dwLength <= 2))
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	2b00      	cmp	r3, #0
 8001136:	d002      	beq.n	800113e <verify_CRC16_check_sum+0x1a>
 8001138:	683b      	ldr	r3, [r7, #0]
 800113a:	2b02      	cmp	r3, #2
 800113c:	d801      	bhi.n	8001142 <verify_CRC16_check_sum+0x1e>
    {
        return 0;
 800113e:	2300      	movs	r3, #0
 8001140:	e020      	b.n	8001184 <verify_CRC16_check_sum+0x60>
    }
    wExpected = get_CRC16_check_sum(pchMessage, dwLength - 2, CRC16_INIT);
 8001142:	683b      	ldr	r3, [r7, #0]
 8001144:	3b02      	subs	r3, #2
 8001146:	4a11      	ldr	r2, [pc, #68]	; (800118c <verify_CRC16_check_sum+0x68>)
 8001148:	8812      	ldrh	r2, [r2, #0]
 800114a:	4619      	mov	r1, r3
 800114c:	6878      	ldr	r0, [r7, #4]
 800114e:	f7ff ffbd 	bl	80010cc <get_CRC16_check_sum>
 8001152:	4603      	mov	r3, r0
 8001154:	81fb      	strh	r3, [r7, #14]
    return ((wExpected & 0xff) == pchMessage[dwLength - 2] && ((wExpected >> 8) & 0xff) == pchMessage[dwLength - 1]);
 8001156:	89fb      	ldrh	r3, [r7, #14]
 8001158:	b2db      	uxtb	r3, r3
 800115a:	683a      	ldr	r2, [r7, #0]
 800115c:	3a02      	subs	r2, #2
 800115e:	6879      	ldr	r1, [r7, #4]
 8001160:	440a      	add	r2, r1
 8001162:	7812      	ldrb	r2, [r2, #0]
 8001164:	4293      	cmp	r3, r2
 8001166:	d10c      	bne.n	8001182 <verify_CRC16_check_sum+0x5e>
 8001168:	89fb      	ldrh	r3, [r7, #14]
 800116a:	0a1b      	lsrs	r3, r3, #8
 800116c:	b29b      	uxth	r3, r3
 800116e:	b2db      	uxtb	r3, r3
 8001170:	683a      	ldr	r2, [r7, #0]
 8001172:	3a01      	subs	r2, #1
 8001174:	6879      	ldr	r1, [r7, #4]
 8001176:	440a      	add	r2, r1
 8001178:	7812      	ldrb	r2, [r2, #0]
 800117a:	4293      	cmp	r3, r2
 800117c:	d101      	bne.n	8001182 <verify_CRC16_check_sum+0x5e>
 800117e:	2301      	movs	r3, #1
 8001180:	e000      	b.n	8001184 <verify_CRC16_check_sum+0x60>
 8001182:	2300      	movs	r3, #0
}
 8001184:	4618      	mov	r0, r3
 8001186:	3710      	adds	r7, #16
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}
 800118c:	20000000 	.word	0x20000000

08001190 <append_CRC16_check_sum>:
  * @param[in]      pch_message: ����
  * @param[in]      dw_length: ���ݺ�У��ĳ���
  * @retval         none
  */
void append_CRC16_check_sum(uint8_t * pchMessage,uint32_t dwLength)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	b084      	sub	sp, #16
 8001194:	af00      	add	r7, sp, #0
 8001196:	6078      	str	r0, [r7, #4]
 8001198:	6039      	str	r1, [r7, #0]
    uint16_t wCRC = 0;
 800119a:	2300      	movs	r3, #0
 800119c:	81fb      	strh	r3, [r7, #14]
    if ((pchMessage == NULL) || (dwLength <= 2))
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d01d      	beq.n	80011e0 <append_CRC16_check_sum+0x50>
 80011a4:	683b      	ldr	r3, [r7, #0]
 80011a6:	2b02      	cmp	r3, #2
 80011a8:	d91a      	bls.n	80011e0 <append_CRC16_check_sum+0x50>
    {
        return;
    }
    wCRC = get_CRC16_check_sum ( (uint8_t *)pchMessage, dwLength-2, CRC16_INIT );
 80011aa:	683b      	ldr	r3, [r7, #0]
 80011ac:	3b02      	subs	r3, #2
 80011ae:	4a0e      	ldr	r2, [pc, #56]	; (80011e8 <append_CRC16_check_sum+0x58>)
 80011b0:	8812      	ldrh	r2, [r2, #0]
 80011b2:	4619      	mov	r1, r3
 80011b4:	6878      	ldr	r0, [r7, #4]
 80011b6:	f7ff ff89 	bl	80010cc <get_CRC16_check_sum>
 80011ba:	4603      	mov	r3, r0
 80011bc:	81fb      	strh	r3, [r7, #14]
    pchMessage[dwLength-2] = (uint8_t)(wCRC & 0x00ff);
 80011be:	683b      	ldr	r3, [r7, #0]
 80011c0:	3b02      	subs	r3, #2
 80011c2:	687a      	ldr	r2, [r7, #4]
 80011c4:	4413      	add	r3, r2
 80011c6:	89fa      	ldrh	r2, [r7, #14]
 80011c8:	b2d2      	uxtb	r2, r2
 80011ca:	701a      	strb	r2, [r3, #0]
    pchMessage[dwLength-1] = (uint8_t)((wCRC >> 8)& 0x00ff);
 80011cc:	89fb      	ldrh	r3, [r7, #14]
 80011ce:	0a1b      	lsrs	r3, r3, #8
 80011d0:	b299      	uxth	r1, r3
 80011d2:	683b      	ldr	r3, [r7, #0]
 80011d4:	3b01      	subs	r3, #1
 80011d6:	687a      	ldr	r2, [r7, #4]
 80011d8:	4413      	add	r3, r2
 80011da:	b2ca      	uxtb	r2, r1
 80011dc:	701a      	strb	r2, [r3, #0]
 80011de:	e000      	b.n	80011e2 <append_CRC16_check_sum+0x52>
        return;
 80011e0:	bf00      	nop
}
 80011e2:	3710      	adds	r7, #16
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	20000000 	.word	0x20000000

080011ec <buzzer>:

#include "board_lib.h"
#include "bsp_buzzer.h"

void buzzer(uint16_t freq)
{
 80011ec:	b480      	push	{r7}
 80011ee:	b083      	sub	sp, #12
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	4603      	mov	r3, r0
 80011f4:	80fb      	strh	r3, [r7, #6]
	if (freq == 0)
 80011f6:	88fb      	ldrh	r3, [r7, #6]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d104      	bne.n	8001206 <buzzer+0x1a>
	{
		htim4.Instance->CCR3 = 0;
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <buzzer+0x40>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	2200      	movs	r2, #0
 8001202:	63da      	str	r2, [r3, #60]	; 0x3c
	else
	{
		__HAL_TIM_SET_PRESCALER(&htim4, (84 * 500/freq));
		htim4.Instance->CCR3 = 500;
	}
}
 8001204:	e00c      	b.n	8001220 <buzzer+0x34>
		__HAL_TIM_SET_PRESCALER(&htim4, (84 * 500/freq));
 8001206:	88fb      	ldrh	r3, [r7, #6]
 8001208:	f24a 4210 	movw	r2, #42000	; 0xa410
 800120c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001210:	4b06      	ldr	r3, [pc, #24]	; (800122c <buzzer+0x40>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	629a      	str	r2, [r3, #40]	; 0x28
		htim4.Instance->CCR3 = 500;
 8001216:	4b05      	ldr	r3, [pc, #20]	; (800122c <buzzer+0x40>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800121e:	63da      	str	r2, [r3, #60]	; 0x3c
}
 8001220:	bf00      	nop
 8001222:	370c      	adds	r7, #12
 8001224:	46bd      	mov	sp, r7
 8001226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122a:	4770      	bx	lr
 800122c:	20001584 	.word	0x20001584

08001230 <HAL_CAN_RxFifo0MsgPendingCallback>:
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0
 8001236:	6078      	str	r0, [r7, #4]
 8001238:	6878      	ldr	r0, [r7, #4]
 800123a:	f003 ff6d 	bl	8005118 <can_ISR>
 800123e:	bf00      	nop
 8001240:	3708      	adds	r7, #8
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}

08001246 <HAL_CAN_RxFifo1MsgPendingCallback>:
 8001246:	b580      	push	{r7, lr}
 8001248:	b082      	sub	sp, #8
 800124a:	af00      	add	r7, sp, #0
 800124c:	6078      	str	r0, [r7, #4]
 800124e:	6878      	ldr	r0, [r7, #4]
 8001250:	f003 ff62 	bl	8005118 <can_ISR>
 8001254:	bf00      	nop
 8001256:	3708      	adds	r7, #8
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}

0800125c <can1_get_msg>:
 800125c:	b580      	push	{r7, lr}
 800125e:	b084      	sub	sp, #16
 8001260:	af00      	add	r7, sp, #0
 8001262:	60f8      	str	r0, [r7, #12]
 8001264:	60b9      	str	r1, [r7, #8]
 8001266:	607a      	str	r2, [r7, #4]
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	68ba      	ldr	r2, [r7, #8]
 800126c:	2100      	movs	r1, #0
 800126e:	68f8      	ldr	r0, [r7, #12]
 8001270:	f00e ffa5 	bl	80101be <HAL_CAN_GetRxMessage>
 8001274:	2300      	movs	r3, #0
 8001276:	4618      	mov	r0, r3
 8001278:	3710      	adds	r7, #16
 800127a:	46bd      	mov	sp, r7
 800127c:	bd80      	pop	{r7, pc}

0800127e <can2_get_msg>:
 800127e:	b580      	push	{r7, lr}
 8001280:	b084      	sub	sp, #16
 8001282:	af00      	add	r7, sp, #0
 8001284:	60f8      	str	r0, [r7, #12]
 8001286:	60b9      	str	r1, [r7, #8]
 8001288:	607a      	str	r2, [r7, #4]
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	68ba      	ldr	r2, [r7, #8]
 800128e:	2101      	movs	r1, #1
 8001290:	68f8      	ldr	r0, [r7, #12]
 8001292:	f00e ff94 	bl	80101be <HAL_CAN_GetRxMessage>
 8001296:	2300      	movs	r3, #0
 8001298:	4618      	mov	r0, r3
 800129a:	3710      	adds	r7, #16
 800129c:	46bd      	mov	sp, r7
 800129e:	bd80      	pop	{r7, pc}

080012a0 <can_start>:
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b08e      	sub	sp, #56	; 0x38
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	60f8      	str	r0, [r7, #12]
 80012a8:	60b9      	str	r1, [r7, #8]
 80012aa:	607a      	str	r2, [r7, #4]
 80012ac:	f107 0310 	add.w	r3, r7, #16
 80012b0:	2228      	movs	r2, #40	; 0x28
 80012b2:	2100      	movs	r1, #0
 80012b4:	4618      	mov	r0, r3
 80012b6:	f01e fa0c 	bl	801f6d2 <memset>
 80012ba:	2301      	movs	r3, #1
 80012bc:	633b      	str	r3, [r7, #48]	; 0x30
 80012be:	2300      	movs	r3, #0
 80012c0:	62bb      	str	r3, [r7, #40]	; 0x28
 80012c2:	2301      	movs	r3, #1
 80012c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80012c6:	68bb      	ldr	r3, [r7, #8]
 80012c8:	0c1b      	lsrs	r3, r3, #16
 80012ca:	613b      	str	r3, [r7, #16]
 80012cc:	68bb      	ldr	r3, [r7, #8]
 80012ce:	b29b      	uxth	r3, r3
 80012d0:	617b      	str	r3, [r7, #20]
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	0c1b      	lsrs	r3, r3, #16
 80012d6:	61bb      	str	r3, [r7, #24]
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	b29b      	uxth	r3, r3
 80012dc:	61fb      	str	r3, [r7, #28]
 80012de:	68fb      	ldr	r3, [r7, #12]
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4a18      	ldr	r2, [pc, #96]	; (8001344 <can_start+0xa4>)
 80012e4:	4293      	cmp	r3, r2
 80012e6:	d111      	bne.n	800130c <can_start+0x6c>
 80012e8:	2300      	movs	r3, #0
 80012ea:	627b      	str	r3, [r7, #36]	; 0x24
 80012ec:	2300      	movs	r3, #0
 80012ee:	623b      	str	r3, [r7, #32]
 80012f0:	f107 0310 	add.w	r3, r7, #16
 80012f4:	4619      	mov	r1, r3
 80012f6:	68f8      	ldr	r0, [r7, #12]
 80012f8:	f00e fd62 	bl	800fdc0 <HAL_CAN_ConfigFilter>
 80012fc:	68f8      	ldr	r0, [r7, #12]
 80012fe:	f00e fe3f 	bl	800ff80 <HAL_CAN_Start>
 8001302:	2102      	movs	r1, #2
 8001304:	68f8      	ldr	r0, [r7, #12]
 8001306:	f00f f86c 	bl	80103e2 <HAL_CAN_ActivateNotification>
 800130a:	e017      	b.n	800133c <can_start+0x9c>
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a0d      	ldr	r2, [pc, #52]	; (8001348 <can_start+0xa8>)
 8001312:	4293      	cmp	r3, r2
 8001314:	d112      	bne.n	800133c <can_start+0x9c>
 8001316:	2301      	movs	r3, #1
 8001318:	623b      	str	r3, [r7, #32]
 800131a:	230e      	movs	r3, #14
 800131c:	637b      	str	r3, [r7, #52]	; 0x34
 800131e:	230e      	movs	r3, #14
 8001320:	627b      	str	r3, [r7, #36]	; 0x24
 8001322:	f107 0310 	add.w	r3, r7, #16
 8001326:	4619      	mov	r1, r3
 8001328:	68f8      	ldr	r0, [r7, #12]
 800132a:	f00e fd49 	bl	800fdc0 <HAL_CAN_ConfigFilter>
 800132e:	68f8      	ldr	r0, [r7, #12]
 8001330:	f00e fe26 	bl	800ff80 <HAL_CAN_Start>
 8001334:	2110      	movs	r1, #16
 8001336:	68f8      	ldr	r0, [r7, #12]
 8001338:	f00f f853 	bl	80103e2 <HAL_CAN_ActivateNotification>
 800133c:	bf00      	nop
 800133e:	3738      	adds	r7, #56	; 0x38
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	40006400 	.word	0x40006400
 8001348:	40006800 	.word	0x40006800

0800134c <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 800134c:	b580      	push	{r7, lr}
 800134e:	b084      	sub	sp, #16
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
	remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 8001354:	4b71      	ldr	r3, [pc, #452]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001356:	781b      	ldrb	r3, [r3, #0]
 8001358:	b21a      	sxth	r2, r3
 800135a:	4b70      	ldr	r3, [pc, #448]	; (800151c <dbus_remote_ISR+0x1d0>)
 800135c:	785b      	ldrb	r3, [r3, #1]
 800135e:	021b      	lsls	r3, r3, #8
 8001360:	b21b      	sxth	r3, r3
 8001362:	4313      	orrs	r3, r2
 8001364:	b21b      	sxth	r3, r3
 8001366:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800136a:	b21a      	sxth	r2, r3
 800136c:	4b6c      	ldr	r3, [pc, #432]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800136e:	801a      	strh	r2, [r3, #0]
	remote_cmd.right_x -= JOYSTICK_OFFSET;
 8001370:	4b6b      	ldr	r3, [pc, #428]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001372:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001376:	b29b      	uxth	r3, r3
 8001378:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800137c:	b29b      	uxth	r3, r3
 800137e:	b21a      	sxth	r2, r3
 8001380:	4b67      	ldr	r3, [pc, #412]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001382:	801a      	strh	r2, [r3, #0]
	remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001384:	4b65      	ldr	r3, [pc, #404]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001386:	785b      	ldrb	r3, [r3, #1]
 8001388:	08db      	lsrs	r3, r3, #3
 800138a:	b2db      	uxtb	r3, r3
 800138c:	b21a      	sxth	r2, r3
 800138e:	4b63      	ldr	r3, [pc, #396]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001390:	789b      	ldrb	r3, [r3, #2]
 8001392:	015b      	lsls	r3, r3, #5
 8001394:	b21b      	sxth	r3, r3
 8001396:	4313      	orrs	r3, r2
 8001398:	b21b      	sxth	r3, r3
 800139a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800139e:	b21a      	sxth	r2, r3
 80013a0:	4b5f      	ldr	r3, [pc, #380]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013a2:	805a      	strh	r2, [r3, #2]
	remote_cmd.right_y -= JOYSTICK_OFFSET;
 80013a4:	4b5e      	ldr	r3, [pc, #376]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80013aa:	b29b      	uxth	r3, r3
 80013ac:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80013b0:	b29b      	uxth	r3, r3
 80013b2:	b21a      	sxth	r2, r3
 80013b4:	4b5a      	ldr	r3, [pc, #360]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013b6:	805a      	strh	r2, [r3, #2]
	remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 80013b8:	4b58      	ldr	r3, [pc, #352]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013ba:	789b      	ldrb	r3, [r3, #2]
 80013bc:	099b      	lsrs	r3, r3, #6
 80013be:	b2db      	uxtb	r3, r3
 80013c0:	b21a      	sxth	r2, r3
 80013c2:	4b56      	ldr	r3, [pc, #344]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013c4:	78db      	ldrb	r3, [r3, #3]
 80013c6:	009b      	lsls	r3, r3, #2
 80013c8:	b21b      	sxth	r3, r3
 80013ca:	4313      	orrs	r3, r2
 80013cc:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 80013ce:	4b53      	ldr	r3, [pc, #332]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013d0:	791b      	ldrb	r3, [r3, #4]
 80013d2:	029b      	lsls	r3, r3, #10
 80013d4:	b21b      	sxth	r3, r3
 80013d6:	4313      	orrs	r3, r2
 80013d8:	b21b      	sxth	r3, r3
 80013da:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013de:	b21a      	sxth	r2, r3
	remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 80013e0:	4b4f      	ldr	r3, [pc, #316]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013e2:	809a      	strh	r2, [r3, #4]
	remote_cmd.left_x -= JOYSTICK_OFFSET;
 80013e4:	4b4e      	ldr	r3, [pc, #312]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013e6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80013ea:	b29b      	uxth	r3, r3
 80013ec:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	b21a      	sxth	r2, r3
 80013f4:	4b4a      	ldr	r3, [pc, #296]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80013f6:	809a      	strh	r2, [r3, #4]
	remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 80013f8:	4b48      	ldr	r3, [pc, #288]	; (800151c <dbus_remote_ISR+0x1d0>)
 80013fa:	791b      	ldrb	r3, [r3, #4]
 80013fc:	085b      	lsrs	r3, r3, #1
 80013fe:	b2db      	uxtb	r3, r3
 8001400:	b21a      	sxth	r2, r3
 8001402:	4b46      	ldr	r3, [pc, #280]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001404:	795b      	ldrb	r3, [r3, #5]
 8001406:	01db      	lsls	r3, r3, #7
 8001408:	b21b      	sxth	r3, r3
 800140a:	4313      	orrs	r3, r2
 800140c:	b21b      	sxth	r3, r3
 800140e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001412:	b21a      	sxth	r2, r3
 8001414:	4b42      	ldr	r3, [pc, #264]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001416:	80da      	strh	r2, [r3, #6]
	remote_cmd.left_y -= JOYSTICK_OFFSET;
 8001418:	4b41      	ldr	r3, [pc, #260]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800141a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800141e:	b29b      	uxth	r3, r3
 8001420:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001424:	b29b      	uxth	r3, r3
 8001426:	b21a      	sxth	r2, r3
 8001428:	4b3d      	ldr	r3, [pc, #244]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800142a:	80da      	strh	r2, [r3, #6]
	//Left switch position
	remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 800142c:	4b3b      	ldr	r3, [pc, #236]	; (800151c <dbus_remote_ISR+0x1d0>)
 800142e:	795b      	ldrb	r3, [r3, #5]
 8001430:	091b      	lsrs	r3, r3, #4
 8001432:	b2db      	uxtb	r3, r3
 8001434:	109b      	asrs	r3, r3, #2
 8001436:	b25b      	sxtb	r3, r3
 8001438:	f003 0303 	and.w	r3, r3, #3
 800143c:	b25a      	sxtb	r2, r3
 800143e:	4b38      	ldr	r3, [pc, #224]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001440:	721a      	strb	r2, [r3, #8]
	remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 8001442:	4b36      	ldr	r3, [pc, #216]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001444:	795b      	ldrb	r3, [r3, #5]
 8001446:	091b      	lsrs	r3, r3, #4
 8001448:	b2db      	uxtb	r3, r3
 800144a:	b25b      	sxtb	r3, r3
 800144c:	f003 0303 	and.w	r3, r3, #3
 8001450:	b25a      	sxtb	r2, r3
 8001452:	4b33      	ldr	r3, [pc, #204]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001454:	725a      	strb	r2, [r3, #9]
	remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 8001456:	4b31      	ldr	r3, [pc, #196]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001458:	799b      	ldrb	r3, [r3, #6]
 800145a:	b21a      	sxth	r2, r3
 800145c:	4b2f      	ldr	r3, [pc, #188]	; (800151c <dbus_remote_ISR+0x1d0>)
 800145e:	79db      	ldrb	r3, [r3, #7]
 8001460:	021b      	lsls	r3, r3, #8
 8001462:	b21b      	sxth	r3, r3
 8001464:	4313      	orrs	r3, r2
 8001466:	b21a      	sxth	r2, r3
 8001468:	4b2d      	ldr	r3, [pc, #180]	; (8001520 <dbus_remote_ISR+0x1d4>)
 800146a:	815a      	strh	r2, [r3, #10]
	remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 800146c:	4b2b      	ldr	r3, [pc, #172]	; (800151c <dbus_remote_ISR+0x1d0>)
 800146e:	7a1b      	ldrb	r3, [r3, #8]
 8001470:	b21a      	sxth	r2, r3
 8001472:	4b2a      	ldr	r3, [pc, #168]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001474:	7a5b      	ldrb	r3, [r3, #9]
 8001476:	021b      	lsls	r3, r3, #8
 8001478:	b21b      	sxth	r3, r3
 800147a:	4313      	orrs	r3, r2
 800147c:	b21a      	sxth	r2, r3
 800147e:	4b28      	ldr	r3, [pc, #160]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001480:	819a      	strh	r2, [r3, #12]
	remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 8001482:	4b26      	ldr	r3, [pc, #152]	; (800151c <dbus_remote_ISR+0x1d0>)
 8001484:	7a9b      	ldrb	r3, [r3, #10]
 8001486:	b21a      	sxth	r2, r3
 8001488:	4b24      	ldr	r3, [pc, #144]	; (800151c <dbus_remote_ISR+0x1d0>)
 800148a:	7adb      	ldrb	r3, [r3, #11]
 800148c:	021b      	lsls	r3, r3, #8
 800148e:	b21b      	sxth	r3, r3
 8001490:	4313      	orrs	r3, r2
 8001492:	b21a      	sxth	r2, r3
 8001494:	4b22      	ldr	r3, [pc, #136]	; (8001520 <dbus_remote_ISR+0x1d4>)
 8001496:	81da      	strh	r2, [r3, #14]
	remote_cmd.mouse_left = (remote_raw_data[12]);
 8001498:	4b20      	ldr	r3, [pc, #128]	; (800151c <dbus_remote_ISR+0x1d0>)
 800149a:	7b1b      	ldrb	r3, [r3, #12]
 800149c:	b25a      	sxtb	r2, r3
 800149e:	4b20      	ldr	r3, [pc, #128]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014a0:	761a      	strb	r2, [r3, #24]
	remote_cmd.mouse_right = (remote_raw_data[13]);
 80014a2:	4b1e      	ldr	r3, [pc, #120]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014a4:	7b5b      	ldrb	r3, [r3, #13]
 80014a6:	b25a      	sxtb	r2, r3
 80014a8:	4b1d      	ldr	r3, [pc, #116]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014aa:	765a      	strb	r2, [r3, #25]
	remote_cmd.keyboard_keys = (remote_raw_data[14]);
 80014ac:	4b1b      	ldr	r3, [pc, #108]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014ae:	7b9b      	ldrb	r3, [r3, #14]
 80014b0:	b29a      	uxth	r2, r3
 80014b2:	4b1b      	ldr	r3, [pc, #108]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014b4:	835a      	strh	r2, [r3, #26]
	remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 80014b6:	4b19      	ldr	r3, [pc, #100]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014b8:	7c1b      	ldrb	r3, [r3, #16]
 80014ba:	b21a      	sxth	r2, r3
 80014bc:	4b17      	ldr	r3, [pc, #92]	; (800151c <dbus_remote_ISR+0x1d0>)
 80014be:	7c5b      	ldrb	r3, [r3, #17]
 80014c0:	021b      	lsls	r3, r3, #8
 80014c2:	b21b      	sxth	r3, r3
 80014c4:	4313      	orrs	r3, r2
 80014c6:	b21a      	sxth	r2, r3
 80014c8:	4b15      	ldr	r3, [pc, #84]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014ca:	839a      	strh	r2, [r3, #28]
	remote_cmd.side_dial -= JOYSTICK_OFFSET;
 80014cc:	4b14      	ldr	r3, [pc, #80]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014ce:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80014d2:	b29b      	uxth	r3, r3
 80014d4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80014d8:	b29b      	uxth	r3, r3
 80014da:	b21a      	sxth	r2, r3
 80014dc:	4b10      	ldr	r3, [pc, #64]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014de:	839a      	strh	r2, [r3, #28]
	remote_cmd.last_time = HAL_GetTick();
 80014e0:	f00e f8e0 	bl	800f6a4 <HAL_GetTick>
 80014e4:	4603      	mov	r3, r0
 80014e6:	4a0e      	ldr	r2, [pc, #56]	; (8001520 <dbus_remote_ISR+0x1d4>)
 80014e8:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014ea:	2300      	movs	r3, #0
 80014ec:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014ee:	4b0d      	ldr	r3, [pc, #52]	; (8001524 <dbus_remote_ISR+0x1d8>)
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	f107 020c 	add.w	r2, r7, #12
 80014f6:	4611      	mov	r1, r2
 80014f8:	4618      	mov	r0, r3
 80014fa:	f01c f9d9 	bl	801d8b0 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014fe:	68fb      	ldr	r3, [r7, #12]
 8001500:	2b00      	cmp	r3, #0
 8001502:	d007      	beq.n	8001514 <dbus_remote_ISR+0x1c8>
 8001504:	4b08      	ldr	r3, [pc, #32]	; (8001528 <dbus_remote_ISR+0x1dc>)
 8001506:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	f3bf 8f4f 	dsb	sy
 8001510:	f3bf 8f6f 	isb	sy
}
 8001514:	bf00      	nop
 8001516:	3710      	adds	r7, #16
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}
 800151c:	20000344 	.word	0x20000344
 8001520:	20000358 	.word	0x20000358
 8001524:	20000490 	.word	0x20000490
 8001528:	e000ed04 	.word	0xe000ed04

0800152c <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 800152c:	b580      	push	{r7, lr}
 800152e:	b08c      	sub	sp, #48	; 0x30
 8001530:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 8001532:	4b4d      	ldr	r3, [pc, #308]	; (8001668 <dbus_remote_start+0x13c>)
 8001534:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 8001536:	4b4d      	ldr	r3, [pc, #308]	; (800166c <dbus_remote_start+0x140>)
 8001538:	62fb      	str	r3, [r7, #44]	; 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 800153a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800153c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8001540:	b2db      	uxtb	r3, r3
 8001542:	2b20      	cmp	r3, #32
 8001544:	f040 808b 	bne.w	800165e <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	2b00      	cmp	r3, #0
 800154c:	d101      	bne.n	8001552 <dbus_remote_start+0x26>
			return HAL_ERROR;
 800154e:	2301      	movs	r3, #1
 8001550:	e086      	b.n	8001660 <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 8001552:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001554:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001558:	2b01      	cmp	r3, #1
 800155a:	d101      	bne.n	8001560 <dbus_remote_start+0x34>
 800155c:	2302      	movs	r3, #2
 800155e:	e07f      	b.n	8001660 <dbus_remote_start+0x134>
 8001560:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001562:	2201      	movs	r2, #1
 8001564:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001568:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800156a:	2201      	movs	r2, #1
 800156c:	631a      	str	r2, [r3, #48]	; 0x30
		huart->pRxBuffPtr = pData;
 800156e:	68fa      	ldr	r2, [r7, #12]
 8001570:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001572:	629a      	str	r2, [r3, #40]	; 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001574:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001576:	2212      	movs	r2, #18
 8001578:	859a      	strh	r2, [r3, #44]	; 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 800157a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800157c:	2200      	movs	r2, #0
 800157e:	641a      	str	r2, [r3, #64]	; 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 8001580:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001582:	2222      	movs	r2, #34	; 0x22
 8001584:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001588:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800158a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800158c:	4a38      	ldr	r2, [pc, #224]	; (8001670 <dbus_remote_start+0x144>)
 800158e:	63da      	str	r2, [r3, #60]	; 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 8001590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001594:	2200      	movs	r2, #0
 8001596:	651a      	str	r2, [r3, #80]	; 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001598:	f107 030c 	add.w	r3, r7, #12
 800159c:	62bb      	str	r3, [r7, #40]	; 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800159e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015a0:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80015a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	3304      	adds	r3, #4
 80015a8:	4619      	mov	r1, r3
 80015aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80015ac:	681a      	ldr	r2, [r3, #0]
 80015ae:	2312      	movs	r3, #18
 80015b0:	f00f fb1a 	bl	8010be8 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 80015b4:	2300      	movs	r3, #0
 80015b6:	60bb      	str	r3, [r7, #8]
 80015b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	60bb      	str	r3, [r7, #8]
 80015c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	685b      	ldr	r3, [r3, #4]
 80015c6:	60bb      	str	r3, [r7, #8]
 80015c8:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 80015ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015cc:	2200      	movs	r2, #0
 80015ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80015d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	68da      	ldr	r2, [r3, #12]
 80015d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80015e0:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80015e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	695a      	ldr	r2, [r3, #20]
 80015e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	f042 0201 	orr.w	r2, r2, #1
 80015f0:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	695a      	ldr	r2, [r3, #20]
 80015f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001600:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8001602:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001604:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001606:	2b01      	cmp	r3, #1
 8001608:	d125      	bne.n	8001656 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 800160a:	2300      	movs	r3, #0
 800160c:	607b      	str	r3, [r7, #4]
 800160e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	607b      	str	r3, [r7, #4]
 8001616:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	685b      	ldr	r3, [r3, #4]
 800161c:	607b      	str	r3, [r7, #4]
 800161e:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001620:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	330c      	adds	r3, #12
 8001626:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001628:	697b      	ldr	r3, [r7, #20]
 800162a:	e853 3f00 	ldrex	r3, [r3]
 800162e:	613b      	str	r3, [r7, #16]
   return(result);
 8001630:	693b      	ldr	r3, [r7, #16]
 8001632:	f043 0310 	orr.w	r3, r3, #16
 8001636:	627b      	str	r3, [r7, #36]	; 0x24
 8001638:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	330c      	adds	r3, #12
 800163e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001640:	623a      	str	r2, [r7, #32]
 8001642:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001644:	69f9      	ldr	r1, [r7, #28]
 8001646:	6a3a      	ldr	r2, [r7, #32]
 8001648:	e841 2300 	strex	r3, r2, [r1]
 800164c:	61bb      	str	r3, [r7, #24]
   return(result);
 800164e:	69bb      	ldr	r3, [r7, #24]
 8001650:	2b00      	cmp	r3, #0
 8001652:	d1e5      	bne.n	8001620 <dbus_remote_start+0xf4>
 8001654:	e001      	b.n	800165a <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001656:	2301      	movs	r3, #1
 8001658:	e002      	b.n	8001660 <dbus_remote_start+0x134>
		}
		return HAL_OK;
 800165a:	2300      	movs	r3, #0
 800165c:	e000      	b.n	8001660 <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800165e:	2302      	movs	r3, #2
	}
}
 8001660:	4618      	mov	r0, r3
 8001662:	3730      	adds	r7, #48	; 0x30
 8001664:	46bd      	mov	sp, r7
 8001666:	bd80      	pop	{r7, pc}
 8001668:	20000344 	.word	0x20000344
 800166c:	200016a0 	.word	0x200016a0
 8001670:	0800134d 	.word	0x0800134d

08001674 <laser_on>:
 */
#include "board_lib.h"
#include "bsp_gpio.h"

void laser_on()
{ //set to reset for open day
 8001674:	b580      	push	{r7, lr}
 8001676:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LASER_GPIO_GPIO_Port, LASER_GPIO_Pin, GPIO_PIN_RESET);
 8001678:	2200      	movs	r2, #0
 800167a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800167e:	4802      	ldr	r0, [pc, #8]	; (8001688 <laser_on+0x14>)
 8001680:	f00f ffae 	bl	80115e0 <HAL_GPIO_WritePin>
}
 8001684:	bf00      	nop
 8001686:	bd80      	pop	{r7, pc}
 8001688:	40020800 	.word	0x40020800

0800168c <laser_off>:

void laser_off()
{
 800168c:	b580      	push	{r7, lr}
 800168e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LASER_GPIO_GPIO_Port, LASER_GPIO_Pin, GPIO_PIN_RESET);
 8001690:	2200      	movs	r2, #0
 8001692:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001696:	4802      	ldr	r0, [pc, #8]	; (80016a0 <laser_off+0x14>)
 8001698:	f00f ffa2 	bl	80115e0 <HAL_GPIO_WritePin>
}
 800169c:	bf00      	nop
 800169e:	bd80      	pop	{r7, pc}
 80016a0:	40020800 	.word	0x40020800

080016a4 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 80016a4:	b480      	push	{r7}
 80016a6:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 80016a8:	f3bf 8f4f 	dsb	sy
}
 80016ac:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 80016ae:	4b06      	ldr	r3, [pc, #24]	; (80016c8 <__NVIC_SystemReset+0x24>)
 80016b0:	68db      	ldr	r3, [r3, #12]
 80016b2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 80016b6:	4904      	ldr	r1, [pc, #16]	; (80016c8 <__NVIC_SystemReset+0x24>)
 80016b8:	4b04      	ldr	r3, [pc, #16]	; (80016cc <__NVIC_SystemReset+0x28>)
 80016ba:	4313      	orrs	r3, r2
 80016bc:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80016be:	f3bf 8f4f 	dsb	sy
}
 80016c2:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 80016c4:	bf00      	nop
 80016c6:	e7fd      	b.n	80016c4 <__NVIC_SystemReset+0x20>
 80016c8:	e000ed00 	.word	0xe000ed00
 80016cc:	05fa0004 	.word	0x05fa0004

080016d0 <inv_sqrt>:
 * @brief  fast inverse square-root, to calculate 1/Sqrt(x)
 * @param  x: the number need to be calculated
 * @retval 1/Sqrt(x)
 * @usage  call in imu_ahrs_update() function
 */
float inv_sqrt(float x) {
 80016d0:	b480      	push	{r7}
 80016d2:	b087      	sub	sp, #28
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	ed87 0a01 	vstr	s0, [r7, #4]
	float halfx = 0.5f * x;
 80016da:	edd7 7a01 	vldr	s15, [r7, #4]
 80016de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80016e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016e6:	edc7 7a05 	vstr	s15, [r7, #20]
	float y = x;
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	613b      	str	r3, [r7, #16]
	long i = *(long*) &y;
 80016ee:	f107 0310 	add.w	r3, r7, #16
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	60fb      	str	r3, [r7, #12]

	i = 0x5f3759df - (i >> 1);
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	105a      	asrs	r2, r3, #1
 80016fa:	4b12      	ldr	r3, [pc, #72]	; (8001744 <inv_sqrt+0x74>)
 80016fc:	1a9b      	subs	r3, r3, r2
 80016fe:	60fb      	str	r3, [r7, #12]
	y = *(float*) &i;
 8001700:	f107 030c 	add.w	r3, r7, #12
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	613b      	str	r3, [r7, #16]
	y = y * (1.5f - (halfx * y * y));
 8001708:	ed97 7a04 	vldr	s14, [r7, #16]
 800170c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001710:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001714:	edd7 7a04 	vldr	s15, [r7, #16]
 8001718:	ee67 7a27 	vmul.f32	s15, s14, s15
 800171c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8001720:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001724:	edd7 7a04 	vldr	s15, [r7, #16]
 8001728:	ee67 7a27 	vmul.f32	s15, s14, s15
 800172c:	edc7 7a04 	vstr	s15, [r7, #16]

	return y;
 8001730:	693b      	ldr	r3, [r7, #16]
 8001732:	ee07 3a90 	vmov	s15, r3
}
 8001736:	eeb0 0a67 	vmov.f32	s0, s15
 800173a:	371c      	adds	r7, #28
 800173c:	46bd      	mov	sp, r7
 800173e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001742:	4770      	bx	lr
 8001744:	5f3759df 	.word	0x5f3759df

08001748 <gyro_write_byte>:

void gyro_write_byte(uint8_t const reg, uint8_t const data) {
 8001748:	b580      	push	{r7, lr}
 800174a:	b086      	sub	sp, #24
 800174c:	af02      	add	r7, sp, #8
 800174e:	4603      	mov	r3, r0
 8001750:	460a      	mov	r2, r1
 8001752:	71fb      	strb	r3, [r7, #7]
 8001754:	4613      	mov	r3, r2
 8001756:	71bb      	strb	r3, [r7, #6]
	BMI_GYRO_NSS_LOW;
 8001758:	2200      	movs	r2, #0
 800175a:	2101      	movs	r1, #1
 800175c:	4811      	ldr	r0, [pc, #68]	; (80017a4 <gyro_write_byte+0x5c>)
 800175e:	f00f ff3f 	bl	80115e0 <HAL_GPIO_WritePin>
	uint8_t tx, rx;
	tx = reg;
 8001762:	79fb      	ldrb	r3, [r7, #7]
 8001764:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 8001766:	f107 020e 	add.w	r2, r7, #14
 800176a:	f107 010f 	add.w	r1, r7, #15
 800176e:	2364      	movs	r3, #100	; 0x64
 8001770:	9300      	str	r3, [sp, #0]
 8001772:	2301      	movs	r3, #1
 8001774:	480c      	ldr	r0, [pc, #48]	; (80017a8 <gyro_write_byte+0x60>)
 8001776:	f013 fdc3 	bl	8015300 <HAL_SPI_TransmitReceive>
	tx = data;
 800177a:	79bb      	ldrb	r3, [r7, #6]
 800177c:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800177e:	f107 020e 	add.w	r2, r7, #14
 8001782:	f107 010f 	add.w	r1, r7, #15
 8001786:	2364      	movs	r3, #100	; 0x64
 8001788:	9300      	str	r3, [sp, #0]
 800178a:	2301      	movs	r3, #1
 800178c:	4806      	ldr	r0, [pc, #24]	; (80017a8 <gyro_write_byte+0x60>)
 800178e:	f013 fdb7 	bl	8015300 <HAL_SPI_TransmitReceive>
	BMI_GYRO_NSS_HIGH;
 8001792:	2201      	movs	r2, #1
 8001794:	2101      	movs	r1, #1
 8001796:	4803      	ldr	r0, [pc, #12]	; (80017a4 <gyro_write_byte+0x5c>)
 8001798:	f00f ff22 	bl	80115e0 <HAL_GPIO_WritePin>
	return;
 800179c:	bf00      	nop
}
 800179e:	3710      	adds	r7, #16
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd80      	pop	{r7, pc}
 80017a4:	40020400 	.word	0x40020400
 80017a8:	20001394 	.word	0x20001394

080017ac <gyro_read_byte>:

uint8_t gyro_read_byte(uint8_t const reg) {
 80017ac:	b580      	push	{r7, lr}
 80017ae:	b086      	sub	sp, #24
 80017b0:	af02      	add	r7, sp, #8
 80017b2:	4603      	mov	r3, r0
 80017b4:	71fb      	strb	r3, [r7, #7]
	BMI_GYRO_NSS_LOW;
 80017b6:	2200      	movs	r2, #0
 80017b8:	2101      	movs	r1, #1
 80017ba:	4811      	ldr	r0, [pc, #68]	; (8001800 <gyro_read_byte+0x54>)
 80017bc:	f00f ff10 	bl	80115e0 <HAL_GPIO_WritePin>
	uint8_t rx, tx;
	tx = reg | 0x80;
 80017c0:	79fb      	ldrb	r3, [r7, #7]
 80017c2:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80017c6:	b2db      	uxtb	r3, r3
 80017c8:	73bb      	strb	r3, [r7, #14]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80017ca:	f107 020f 	add.w	r2, r7, #15
 80017ce:	f107 010e 	add.w	r1, r7, #14
 80017d2:	2364      	movs	r3, #100	; 0x64
 80017d4:	9300      	str	r3, [sp, #0]
 80017d6:	2301      	movs	r3, #1
 80017d8:	480a      	ldr	r0, [pc, #40]	; (8001804 <gyro_read_byte+0x58>)
 80017da:	f013 fd91 	bl	8015300 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 80017de:	f107 010f 	add.w	r1, r7, #15
 80017e2:	2364      	movs	r3, #100	; 0x64
 80017e4:	2201      	movs	r2, #1
 80017e6:	4807      	ldr	r0, [pc, #28]	; (8001804 <gyro_read_byte+0x58>)
 80017e8:	f013 fc79 	bl	80150de <HAL_SPI_Receive>
	BMI_GYRO_NSS_HIGH;
 80017ec:	2201      	movs	r2, #1
 80017ee:	2101      	movs	r1, #1
 80017f0:	4803      	ldr	r0, [pc, #12]	; (8001800 <gyro_read_byte+0x54>)
 80017f2:	f00f fef5 	bl	80115e0 <HAL_GPIO_WritePin>
	return rx;
 80017f6:	7bfb      	ldrb	r3, [r7, #15]
}
 80017f8:	4618      	mov	r0, r3
 80017fa:	3710      	adds	r7, #16
 80017fc:	46bd      	mov	sp, r7
 80017fe:	bd80      	pop	{r7, pc}
 8001800:	40020400 	.word	0x40020400
 8001804:	20001394 	.word	0x20001394

08001808 <gyro_read_bytes>:

uint8_t gyro_read_bytes(uint8_t const reg, uint8_t *pData, uint8_t len) {
 8001808:	b580      	push	{r7, lr}
 800180a:	b086      	sub	sp, #24
 800180c:	af02      	add	r7, sp, #8
 800180e:	4603      	mov	r3, r0
 8001810:	6039      	str	r1, [r7, #0]
 8001812:	71fb      	strb	r3, [r7, #7]
 8001814:	4613      	mov	r3, r2
 8001816:	71bb      	strb	r3, [r7, #6]
	uint8_t tx, rx;
	BMI_GYRO_NSS_LOW;
 8001818:	2200      	movs	r2, #0
 800181a:	2101      	movs	r1, #1
 800181c:	4811      	ldr	r0, [pc, #68]	; (8001864 <gyro_read_bytes+0x5c>)
 800181e:	f00f fedf 	bl	80115e0 <HAL_GPIO_WritePin>
	tx = reg | 0x80;
 8001822:	79fb      	ldrb	r3, [r7, #7]
 8001824:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001828:	b2db      	uxtb	r3, r3
 800182a:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800182c:	f107 020e 	add.w	r2, r7, #14
 8001830:	f107 010f 	add.w	r1, r7, #15
 8001834:	2364      	movs	r3, #100	; 0x64
 8001836:	9300      	str	r3, [sp, #0]
 8001838:	2301      	movs	r3, #1
 800183a:	480b      	ldr	r0, [pc, #44]	; (8001868 <gyro_read_bytes+0x60>)
 800183c:	f013 fd60 	bl	8015300 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, pData, len, 100);
 8001840:	79bb      	ldrb	r3, [r7, #6]
 8001842:	b29a      	uxth	r2, r3
 8001844:	2364      	movs	r3, #100	; 0x64
 8001846:	6839      	ldr	r1, [r7, #0]
 8001848:	4807      	ldr	r0, [pc, #28]	; (8001868 <gyro_read_bytes+0x60>)
 800184a:	f013 fc48 	bl	80150de <HAL_SPI_Receive>
	BMI_GYRO_NSS_HIGH;
 800184e:	2201      	movs	r2, #1
 8001850:	2101      	movs	r1, #1
 8001852:	4804      	ldr	r0, [pc, #16]	; (8001864 <gyro_read_bytes+0x5c>)
 8001854:	f00f fec4 	bl	80115e0 <HAL_GPIO_WritePin>
	return 0;
 8001858:	2300      	movs	r3, #0
}
 800185a:	4618      	mov	r0, r3
 800185c:	3710      	adds	r7, #16
 800185e:	46bd      	mov	sp, r7
 8001860:	bd80      	pop	{r7, pc}
 8001862:	bf00      	nop
 8001864:	40020400 	.word	0x40020400
 8001868:	20001394 	.word	0x20001394

0800186c <accel_write_byte>:
		return 1;
	}
	return 0;
}

void accel_write_byte(uint8_t const reg, uint8_t const data) {
 800186c:	b580      	push	{r7, lr}
 800186e:	b086      	sub	sp, #24
 8001870:	af02      	add	r7, sp, #8
 8001872:	4603      	mov	r3, r0
 8001874:	460a      	mov	r2, r1
 8001876:	71fb      	strb	r3, [r7, #7]
 8001878:	4613      	mov	r3, r2
 800187a:	71bb      	strb	r3, [r7, #6]
	uint8_t tx, rx;
	BMI_ACCEL_NSS_LOW;
 800187c:	2200      	movs	r2, #0
 800187e:	2110      	movs	r1, #16
 8001880:	4811      	ldr	r0, [pc, #68]	; (80018c8 <accel_write_byte+0x5c>)
 8001882:	f00f fead 	bl	80115e0 <HAL_GPIO_WritePin>
	tx = reg;
 8001886:	79fb      	ldrb	r3, [r7, #7]
 8001888:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 800188a:	f107 020e 	add.w	r2, r7, #14
 800188e:	f107 010f 	add.w	r1, r7, #15
 8001892:	2364      	movs	r3, #100	; 0x64
 8001894:	9300      	str	r3, [sp, #0]
 8001896:	2301      	movs	r3, #1
 8001898:	480c      	ldr	r0, [pc, #48]	; (80018cc <accel_write_byte+0x60>)
 800189a:	f013 fd31 	bl	8015300 <HAL_SPI_TransmitReceive>
	tx = data;
 800189e:	79bb      	ldrb	r3, [r7, #6]
 80018a0:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80018a2:	f107 020e 	add.w	r2, r7, #14
 80018a6:	f107 010f 	add.w	r1, r7, #15
 80018aa:	2364      	movs	r3, #100	; 0x64
 80018ac:	9300      	str	r3, [sp, #0]
 80018ae:	2301      	movs	r3, #1
 80018b0:	4806      	ldr	r0, [pc, #24]	; (80018cc <accel_write_byte+0x60>)
 80018b2:	f013 fd25 	bl	8015300 <HAL_SPI_TransmitReceive>
	BMI_ACCEL_NSS_HIGH;
 80018b6:	2201      	movs	r2, #1
 80018b8:	2110      	movs	r1, #16
 80018ba:	4803      	ldr	r0, [pc, #12]	; (80018c8 <accel_write_byte+0x5c>)
 80018bc:	f00f fe90 	bl	80115e0 <HAL_GPIO_WritePin>
	return;
 80018c0:	bf00      	nop
}
 80018c2:	3710      	adds	r7, #16
 80018c4:	46bd      	mov	sp, r7
 80018c6:	bd80      	pop	{r7, pc}
 80018c8:	40020000 	.word	0x40020000
 80018cc:	20001394 	.word	0x20001394

080018d0 <accel_read_byte>:

uint8_t accel_read_byte(uint8_t const reg) {
 80018d0:	b580      	push	{r7, lr}
 80018d2:	b086      	sub	sp, #24
 80018d4:	af02      	add	r7, sp, #8
 80018d6:	4603      	mov	r3, r0
 80018d8:	71fb      	strb	r3, [r7, #7]
	uint8_t tx, rx;
	BMI_ACCEL_NSS_LOW;
 80018da:	2200      	movs	r2, #0
 80018dc:	2110      	movs	r1, #16
 80018de:	4816      	ldr	r0, [pc, #88]	; (8001938 <accel_read_byte+0x68>)
 80018e0:	f00f fe7e 	bl	80115e0 <HAL_GPIO_WritePin>
	tx = reg | 0x80;
 80018e4:	79fb      	ldrb	r3, [r7, #7]
 80018e6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80018ea:	b2db      	uxtb	r3, r3
 80018ec:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 80018ee:	f107 020e 	add.w	r2, r7, #14
 80018f2:	f107 010f 	add.w	r1, r7, #15
 80018f6:	2364      	movs	r3, #100	; 0x64
 80018f8:	9300      	str	r3, [sp, #0]
 80018fa:	2301      	movs	r3, #1
 80018fc:	480f      	ldr	r0, [pc, #60]	; (800193c <accel_read_byte+0x6c>)
 80018fe:	f013 fcff 	bl	8015300 <HAL_SPI_TransmitReceive>
	tx = 0x55;
 8001902:	2355      	movs	r3, #85	; 0x55
 8001904:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001906:	f107 010e 	add.w	r1, r7, #14
 800190a:	2364      	movs	r3, #100	; 0x64
 800190c:	2201      	movs	r2, #1
 800190e:	480b      	ldr	r0, [pc, #44]	; (800193c <accel_read_byte+0x6c>)
 8001910:	f013 fbe5 	bl	80150de <HAL_SPI_Receive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001914:	f107 010e 	add.w	r1, r7, #14
 8001918:	2364      	movs	r3, #100	; 0x64
 800191a:	2201      	movs	r2, #1
 800191c:	4807      	ldr	r0, [pc, #28]	; (800193c <accel_read_byte+0x6c>)
 800191e:	f013 fbde 	bl	80150de <HAL_SPI_Receive>
	BMI_ACCEL_NSS_HIGH;
 8001922:	2201      	movs	r2, #1
 8001924:	2110      	movs	r1, #16
 8001926:	4804      	ldr	r0, [pc, #16]	; (8001938 <accel_read_byte+0x68>)
 8001928:	f00f fe5a 	bl	80115e0 <HAL_GPIO_WritePin>
	return rx;
 800192c:	7bbb      	ldrb	r3, [r7, #14]
}
 800192e:	4618      	mov	r0, r3
 8001930:	3710      	adds	r7, #16
 8001932:	46bd      	mov	sp, r7
 8001934:	bd80      	pop	{r7, pc}
 8001936:	bf00      	nop
 8001938:	40020000 	.word	0x40020000
 800193c:	20001394 	.word	0x20001394

08001940 <accel_read_bytes>:

uint8_t accel_read_bytes(uint8_t reg, uint8_t pData[], uint8_t len) {
 8001940:	b580      	push	{r7, lr}
 8001942:	b086      	sub	sp, #24
 8001944:	af02      	add	r7, sp, #8
 8001946:	4603      	mov	r3, r0
 8001948:	6039      	str	r1, [r7, #0]
 800194a:	71fb      	strb	r3, [r7, #7]
 800194c:	4613      	mov	r3, r2
 800194e:	71bb      	strb	r3, [r7, #6]
	BMI_ACCEL_NSS_LOW;
 8001950:	2200      	movs	r2, #0
 8001952:	2110      	movs	r1, #16
 8001954:	4814      	ldr	r0, [pc, #80]	; (80019a8 <accel_read_bytes+0x68>)
 8001956:	f00f fe43 	bl	80115e0 <HAL_GPIO_WritePin>
	uint8_t tx, rx;
	tx = reg | 0x80;
 800195a:	79fb      	ldrb	r3, [r7, #7]
 800195c:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001960:	b2db      	uxtb	r3, r3
 8001962:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_TransmitReceive(&IMU_HSPI, &tx, &rx, 1, 100);
 8001964:	f107 020e 	add.w	r2, r7, #14
 8001968:	f107 010f 	add.w	r1, r7, #15
 800196c:	2364      	movs	r3, #100	; 0x64
 800196e:	9300      	str	r3, [sp, #0]
 8001970:	2301      	movs	r3, #1
 8001972:	480e      	ldr	r0, [pc, #56]	; (80019ac <accel_read_bytes+0x6c>)
 8001974:	f013 fcc4 	bl	8015300 <HAL_SPI_TransmitReceive>
	HAL_SPI_Receive(&IMU_HSPI, &rx, 1, 100);
 8001978:	f107 010e 	add.w	r1, r7, #14
 800197c:	2364      	movs	r3, #100	; 0x64
 800197e:	2201      	movs	r2, #1
 8001980:	480a      	ldr	r0, [pc, #40]	; (80019ac <accel_read_bytes+0x6c>)
 8001982:	f013 fbac 	bl	80150de <HAL_SPI_Receive>
	HAL_SPI_Receive(&IMU_HSPI, pData, len, 100);
 8001986:	79bb      	ldrb	r3, [r7, #6]
 8001988:	b29a      	uxth	r2, r3
 800198a:	2364      	movs	r3, #100	; 0x64
 800198c:	6839      	ldr	r1, [r7, #0]
 800198e:	4807      	ldr	r0, [pc, #28]	; (80019ac <accel_read_bytes+0x6c>)
 8001990:	f013 fba5 	bl	80150de <HAL_SPI_Receive>
	BMI_ACCEL_NSS_HIGH;
 8001994:	2201      	movs	r2, #1
 8001996:	2110      	movs	r1, #16
 8001998:	4803      	ldr	r0, [pc, #12]	; (80019a8 <accel_read_bytes+0x68>)
 800199a:	f00f fe21 	bl	80115e0 <HAL_GPIO_WritePin>
	return 0;
 800199e:	2300      	movs	r3, #0
}
 80019a0:	4618      	mov	r0, r3
 80019a2:	3710      	adds	r7, #16
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bd80      	pop	{r7, pc}
 80019a8:	40020000 	.word	0x40020000
 80019ac:	20001394 	.word	0x20001394

080019b0 <gyro_init>:
		return 1;
	}
	return 0;
}

uint8_t gyro_init() {
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b082      	sub	sp, #8
 80019b4:	af00      	add	r7, sp, #0
	gyro_write_byte(BMI088_GYRO_SOFTRESET, BMI088_GYRO_SOFTRESET_VALUE);
 80019b6:	21b6      	movs	r1, #182	; 0xb6
 80019b8:	2014      	movs	r0, #20
 80019ba:	f7ff fec5 	bl	8001748 <gyro_write_byte>
	HAL_Delay(10);
 80019be:	200a      	movs	r0, #10
 80019c0:	f00d fe7c 	bl	800f6bc <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_LPM1, BMI088_GYRO_NORMAL_MODE);
 80019c4:	2100      	movs	r1, #0
 80019c6:	2011      	movs	r0, #17
 80019c8:	f7ff febe 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 80019cc:	2002      	movs	r0, #2
 80019ce:	f00d fe75 	bl	800f6bc <HAL_Delay>
	int16_t gyro_id = gyro_read_byte(BMI088_GYRO_CHIP_ID);
 80019d2:	2000      	movs	r0, #0
 80019d4:	f7ff feea 	bl	80017ac <gyro_read_byte>
 80019d8:	4603      	mov	r3, r0
 80019da:	80fb      	strh	r3, [r7, #6]
	if (gyro_id != BMI088_GYRO_CHIP_ID_VALUE) {
 80019dc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019e0:	2b0f      	cmp	r3, #15
 80019e2:	d001      	beq.n	80019e8 <gyro_init+0x38>
		NVIC_SystemReset();
 80019e4:	f7ff fe5e 	bl	80016a4 <__NVIC_SystemReset>
		return 1;
	}
	HAL_Delay(2);
 80019e8:	2002      	movs	r0, #2
 80019ea:	f00d fe67 	bl	800f6bc <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_RANGE, BMI088_GYRO_500);
 80019ee:	2102      	movs	r1, #2
 80019f0:	200f      	movs	r0, #15
 80019f2:	f7ff fea9 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 80019f6:	2002      	movs	r0, #2
 80019f8:	f00d fe60 	bl	800f6bc <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_BANDWIDTH,
 80019fc:	2182      	movs	r1, #130	; 0x82
 80019fe:	2010      	movs	r0, #16
 8001a00:	f7ff fea2 	bl	8001748 <gyro_write_byte>
			(BMI088_GYRO_BANDWIDTH_MUST_Set | BMI088_GYRO_1000_116_HZ));
	HAL_Delay(2);
 8001a04:	2002      	movs	r0, #2
 8001a06:	f00d fe59 	bl	800f6bc <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_INT3_INT4_IO_CONF,
 8001a0a:	2101      	movs	r1, #1
 8001a0c:	2016      	movs	r0, #22
 8001a0e:	f7ff fe9b 	bl	8001748 <gyro_write_byte>
			(BMI088_GYRO_INT3_GPIO_HIGH | BMI088_GYRO_INT3_GPIO_PP));
	HAL_Delay(2);
 8001a12:	2002      	movs	r0, #2
 8001a14:	f00d fe52 	bl	800f6bc <HAL_Delay>
	gyro_write_byte(BMI088_GYRO_INT3_INT4_IO_MAP, BMI088_GYRO_DRDY_IO_INT3);
 8001a18:	2101      	movs	r1, #1
 8001a1a:	2018      	movs	r0, #24
 8001a1c:	f7ff fe94 	bl	8001748 <gyro_write_byte>
	HAL_Delay(2);
 8001a20:	2002      	movs	r0, #2
 8001a22:	f00d fe4b 	bl	800f6bc <HAL_Delay>

	return 0;
 8001a26:	2300      	movs	r3, #0
	//blah
}
 8001a28:	4618      	mov	r0, r3
 8001a2a:	3708      	adds	r7, #8
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bd80      	pop	{r7, pc}

08001a30 <accel_init>:

uint8_t accel_init() {
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b082      	sub	sp, #8
 8001a34:	af00      	add	r7, sp, #0
	uint8_t accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a36:	2000      	movs	r0, #0
 8001a38:	f7ff ff4a 	bl	80018d0 <accel_read_byte>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a40:	2002      	movs	r0, #2
 8001a42:	f00d fe3b 	bl	800f6bc <HAL_Delay>
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a46:	2000      	movs	r0, #0
 8001a48:	f7ff ff42 	bl	80018d0 <accel_read_byte>
 8001a4c:	4603      	mov	r3, r0
 8001a4e:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a50:	2002      	movs	r0, #2
 8001a52:	f00d fe33 	bl	800f6bc <HAL_Delay>
	accel_write_byte(BMI088_ACC_SOFTRESET, BMI088_ACC_SOFTRESET_VALUE);
 8001a56:	21b6      	movs	r1, #182	; 0xb6
 8001a58:	207e      	movs	r0, #126	; 0x7e
 8001a5a:	f7ff ff07 	bl	800186c <accel_write_byte>
	HAL_Delay(10);
 8001a5e:	200a      	movs	r0, #10
 8001a60:	f00d fe2c 	bl	800f6bc <HAL_Delay>

	//Attempt to read...twice because once doesn't cause it to initiate
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a64:	2000      	movs	r0, #0
 8001a66:	f7ff ff33 	bl	80018d0 <accel_read_byte>
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a6e:	2002      	movs	r0, #2
 8001a70:	f00d fe24 	bl	800f6bc <HAL_Delay>
	accel_id = accel_read_byte(BMI088_ACC_CHIP_ID);
 8001a74:	2000      	movs	r0, #0
 8001a76:	f7ff ff2b 	bl	80018d0 <accel_read_byte>
 8001a7a:	4603      	mov	r3, r0
 8001a7c:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(2);
 8001a7e:	2002      	movs	r0, #2
 8001a80:	f00d fe1c 	bl	800f6bc <HAL_Delay>
	if (accel_id != BMI088_ACC_CHIP_ID_VALUE) {
 8001a84:	79fb      	ldrb	r3, [r7, #7]
 8001a86:	2b1e      	cmp	r3, #30
 8001a88:	d001      	beq.n	8001a8e <accel_init+0x5e>
		//add in an error code for this someday
		return 1;
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	e023      	b.n	8001ad6 <accel_init+0xa6>
	}

	accel_write_byte(BMI088_ACC_PWR_CTRL, BMI088_ACC_ENABLE_ACC_ON);
 8001a8e:	2104      	movs	r1, #4
 8001a90:	207d      	movs	r0, #125	; 0x7d
 8001a92:	f7ff feeb 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001a96:	2002      	movs	r0, #2
 8001a98:	f00d fe10 	bl	800f6bc <HAL_Delay>
	accel_write_byte(BMI088_ACC_PWR_CONF, BMI088_ACC_PWR_ACTIVE_MODE);
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	207c      	movs	r0, #124	; 0x7c
 8001aa0:	f7ff fee4 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001aa4:	2002      	movs	r0, #2
 8001aa6:	f00d fe09 	bl	800f6bc <HAL_Delay>

	//set accelerometer to normal from suspend
	accel_write_byte(BMI088_ACC_CONF,
 8001aaa:	21a8      	movs	r1, #168	; 0xa8
 8001aac:	2040      	movs	r0, #64	; 0x40
 8001aae:	f7ff fedd 	bl	800186c <accel_write_byte>
			(BMI088_ACC_NORMAL | BMI088_ACC_100_HZ | BMI088_ACC_CONF_MUST_Set));
	HAL_Delay(2);
 8001ab2:	2002      	movs	r0, #2
 8001ab4:	f00d fe02 	bl	800f6bc <HAL_Delay>

	accel_write_byte(BMI088_ACC_RANGE, BMI088_ACC_RANGE_6G);
 8001ab8:	2101      	movs	r1, #1
 8001aba:	2041      	movs	r0, #65	; 0x41
 8001abc:	f7ff fed6 	bl	800186c <accel_write_byte>
	HAL_Delay(2);
 8001ac0:	2002      	movs	r0, #2
 8001ac2:	f00d fdfb 	bl	800f6bc <HAL_Delay>

	accel_write_byte(BMI088_INT1_IO_CTRL,
 8001ac6:	2108      	movs	r1, #8
 8001ac8:	2053      	movs	r0, #83	; 0x53
 8001aca:	f7ff fecf 	bl	800186c <accel_write_byte>
			(BMI088_ACC_INT1_IO_ENABLE | BMI088_ACC_INT1_GPIO_PP | BMI088_ACC_INT1_GPIO_LOW));
	HAL_Delay(2);
 8001ace:	2002      	movs	r0, #2
 8001ad0:	f00d fdf4 	bl	800f6bc <HAL_Delay>
	return 0;
 8001ad4:	2300      	movs	r3, #0
}
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	3708      	adds	r7, #8
 8001ada:	46bd      	mov	sp, r7
 8001adc:	bd80      	pop	{r7, pc}
	...

08001ae0 <mag_read_single_reg>:
	}
	float temperature = temp_int11 * 0.125 / temp_buff[1] + 23;
	return temperature;
}

uint8_t mag_read_single_reg(uint8_t reg) {
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b088      	sub	sp, #32
 8001ae4:	af04      	add	r7, sp, #16
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	71fb      	strb	r3, [r7, #7]
	uint8_t data = 0;
 8001aea:	2300      	movs	r3, #0
 8001aec:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Read(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 5);
 8001aee:	79fb      	ldrb	r3, [r7, #7]
 8001af0:	b29a      	uxth	r2, r3
 8001af2:	2305      	movs	r3, #5
 8001af4:	9302      	str	r3, [sp, #8]
 8001af6:	2301      	movs	r3, #1
 8001af8:	9301      	str	r3, [sp, #4]
 8001afa:	f107 030f 	add.w	r3, r7, #15
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	2301      	movs	r3, #1
 8001b02:	211c      	movs	r1, #28
 8001b04:	4803      	ldr	r0, [pc, #12]	; (8001b14 <mag_read_single_reg+0x34>)
 8001b06:	f00f ffdb 	bl	8011ac0 <HAL_I2C_Mem_Read>
	return data;
 8001b0a:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b0c:	4618      	mov	r0, r3
 8001b0e:	3710      	adds	r7, #16
 8001b10:	46bd      	mov	sp, r7
 8001b12:	bd80      	pop	{r7, pc}
 8001b14:	20001270 	.word	0x20001270

08001b18 <mag_write_single_reg>:

void mag_write_single_reg(uint8_t reg, uint8_t data) {
 8001b18:	b580      	push	{r7, lr}
 8001b1a:	b086      	sub	sp, #24
 8001b1c:	af04      	add	r7, sp, #16
 8001b1e:	4603      	mov	r3, r0
 8001b20:	460a      	mov	r2, r1
 8001b22:	71fb      	strb	r3, [r7, #7]
 8001b24:	4613      	mov	r3, r2
 8001b26:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Mem_Write(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 5);
 8001b28:	79fb      	ldrb	r3, [r7, #7]
 8001b2a:	b29a      	uxth	r2, r3
 8001b2c:	2305      	movs	r3, #5
 8001b2e:	9302      	str	r3, [sp, #8]
 8001b30:	2301      	movs	r3, #1
 8001b32:	9301      	str	r3, [sp, #4]
 8001b34:	1dbb      	adds	r3, r7, #6
 8001b36:	9300      	str	r3, [sp, #0]
 8001b38:	2301      	movs	r3, #1
 8001b3a:	211c      	movs	r1, #28
 8001b3c:	4803      	ldr	r0, [pc, #12]	; (8001b4c <mag_write_single_reg+0x34>)
 8001b3e:	f00f fec5 	bl	80118cc <HAL_I2C_Mem_Write>
}
 8001b42:	bf00      	nop
 8001b44:	3708      	adds	r7, #8
 8001b46:	46bd      	mov	sp, r7
 8001b48:	bd80      	pop	{r7, pc}
 8001b4a:	bf00      	nop
 8001b4c:	20001270 	.word	0x20001270

08001b50 <mag_read_multi_reg_dma>:

void mag_read_multi_reg(uint8_t reg, uint16_t len, uint8_t *data) {
	HAL_I2C_Mem_Read(&hi2c3, IST8310_ADDRESS << 1, reg, I2C_MEMADD_SIZE_8BIT, data, len, 10);
}

void mag_read_multi_reg_dma(uint8_t reg, uint16_t len, uint8_t *data) {
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b084      	sub	sp, #16
 8001b54:	af02      	add	r7, sp, #8
 8001b56:	4603      	mov	r3, r0
 8001b58:	603a      	str	r2, [r7, #0]
 8001b5a:	71fb      	strb	r3, [r7, #7]
 8001b5c:	460b      	mov	r3, r1
 8001b5e:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Mem_Read_DMA(&hi2c3, IST8310_ADDRESS << 1, reg,
 8001b60:	79fb      	ldrb	r3, [r7, #7]
 8001b62:	b29a      	uxth	r2, r3
 8001b64:	88bb      	ldrh	r3, [r7, #4]
 8001b66:	9301      	str	r3, [sp, #4]
 8001b68:	683b      	ldr	r3, [r7, #0]
 8001b6a:	9300      	str	r3, [sp, #0]
 8001b6c:	2301      	movs	r3, #1
 8001b6e:	211c      	movs	r1, #28
 8001b70:	4803      	ldr	r0, [pc, #12]	; (8001b80 <mag_read_multi_reg_dma+0x30>)
 8001b72:	f010 f9cb 	bl	8011f0c <HAL_I2C_Mem_Read_DMA>
	I2C_MEMADD_SIZE_8BIT, data, len);
}
 8001b76:	bf00      	nop
 8001b78:	3708      	adds	r7, #8
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}
 8001b7e:	bf00      	nop
 8001b80:	20001270 	.word	0x20001270
 8001b84:	00000000 	.word	0x00000000

08001b88 <gyro_offset_cali>:
void reset_imu_data() {

}

//find the offset of the gyro
void gyro_offset_cali() {
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
	int32_t gyro_x_total = 0;
 8001b8e:	2300      	movs	r3, #0
 8001b90:	60fb      	str	r3, [r7, #12]
	int32_t gyro_y_total = 0;
 8001b92:	2300      	movs	r3, #0
 8001b94:	60bb      	str	r3, [r7, #8]
	int32_t gyro_z_total = 0;
 8001b96:	2300      	movs	r3, #0
 8001b98:	607b      	str	r3, [r7, #4]
	for (uint16_t i = 0; i < 100; i++) {
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	807b      	strh	r3, [r7, #2]
 8001b9e:	e031      	b.n	8001c04 <gyro_offset_cali+0x7c>
		gyro_read_bytes(BMI088_GYRO_X_L, gyro_buff, 6);
 8001ba0:	2206      	movs	r2, #6
 8001ba2:	4935      	ldr	r1, [pc, #212]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001ba4:	2002      	movs	r0, #2
 8001ba6:	f7ff fe2f 	bl	8001808 <gyro_read_bytes>
		gyro_x_total += (int16_t)(gyro_buff[1] << 8 | gyro_buff[0]);
 8001baa:	4b33      	ldr	r3, [pc, #204]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bac:	785b      	ldrb	r3, [r3, #1]
 8001bae:	021b      	lsls	r3, r3, #8
 8001bb0:	b21a      	sxth	r2, r3
 8001bb2:	4b31      	ldr	r3, [pc, #196]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bb4:	781b      	ldrb	r3, [r3, #0]
 8001bb6:	b21b      	sxth	r3, r3
 8001bb8:	4313      	orrs	r3, r2
 8001bba:	b21b      	sxth	r3, r3
 8001bbc:	461a      	mov	r2, r3
 8001bbe:	68fb      	ldr	r3, [r7, #12]
 8001bc0:	4413      	add	r3, r2
 8001bc2:	60fb      	str	r3, [r7, #12]
		gyro_y_total += (int16_t)(gyro_buff[3] << 8 | gyro_buff[2]);
 8001bc4:	4b2c      	ldr	r3, [pc, #176]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bc6:	78db      	ldrb	r3, [r3, #3]
 8001bc8:	021b      	lsls	r3, r3, #8
 8001bca:	b21a      	sxth	r2, r3
 8001bcc:	4b2a      	ldr	r3, [pc, #168]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001bce:	789b      	ldrb	r3, [r3, #2]
 8001bd0:	b21b      	sxth	r3, r3
 8001bd2:	4313      	orrs	r3, r2
 8001bd4:	b21b      	sxth	r3, r3
 8001bd6:	461a      	mov	r2, r3
 8001bd8:	68bb      	ldr	r3, [r7, #8]
 8001bda:	4413      	add	r3, r2
 8001bdc:	60bb      	str	r3, [r7, #8]
		gyro_z_total += (int16_t)(gyro_buff[5] << 8 | gyro_buff[4]);
 8001bde:	4b26      	ldr	r3, [pc, #152]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001be0:	795b      	ldrb	r3, [r3, #5]
 8001be2:	021b      	lsls	r3, r3, #8
 8001be4:	b21a      	sxth	r2, r3
 8001be6:	4b24      	ldr	r3, [pc, #144]	; (8001c78 <gyro_offset_cali+0xf0>)
 8001be8:	791b      	ldrb	r3, [r3, #4]
 8001bea:	b21b      	sxth	r3, r3
 8001bec:	4313      	orrs	r3, r2
 8001bee:	b21b      	sxth	r3, r3
 8001bf0:	461a      	mov	r2, r3
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	4413      	add	r3, r2
 8001bf6:	607b      	str	r3, [r7, #4]
		HAL_Delay(2);
 8001bf8:	2002      	movs	r0, #2
 8001bfa:	f00d fd5f 	bl	800f6bc <HAL_Delay>
	for (uint16_t i = 0; i < 100; i++) {
 8001bfe:	887b      	ldrh	r3, [r7, #2]
 8001c00:	3301      	adds	r3, #1
 8001c02:	807b      	strh	r3, [r7, #2]
 8001c04:	887b      	ldrh	r3, [r7, #2]
 8001c06:	2b63      	cmp	r3, #99	; 0x63
 8001c08:	d9ca      	bls.n	8001ba0 <gyro_offset_cali+0x18>
	}
	imu_data.gx_offset = gyro_x_total / 100 + 0.06; //added offset
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	4a1b      	ldr	r2, [pc, #108]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c0e:	fb82 1203 	smull	r1, r2, r2, r3
 8001c12:	1152      	asrs	r2, r2, #5
 8001c14:	17db      	asrs	r3, r3, #31
 8001c16:	1ad3      	subs	r3, r2, r3
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f7fe fc83 	bl	8000524 <__aeabi_i2d>
 8001c1e:	a314      	add	r3, pc, #80	; (adr r3, 8001c70 <gyro_offset_cali+0xe8>)
 8001c20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c24:	f7fe fb32 	bl	800028c <__adddf3>
 8001c28:	4602      	mov	r2, r0
 8001c2a:	460b      	mov	r3, r1
 8001c2c:	4610      	mov	r0, r2
 8001c2e:	4619      	mov	r1, r3
 8001c30:	f7fe ff92 	bl	8000b58 <__aeabi_d2iz>
 8001c34:	4603      	mov	r3, r0
 8001c36:	b21a      	sxth	r2, r3
 8001c38:	4b11      	ldr	r3, [pc, #68]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c3a:	865a      	strh	r2, [r3, #50]	; 0x32
	imu_data.gy_offset = gyro_y_total / 100;
 8001c3c:	68bb      	ldr	r3, [r7, #8]
 8001c3e:	4a0f      	ldr	r2, [pc, #60]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c40:	fb82 1203 	smull	r1, r2, r2, r3
 8001c44:	1152      	asrs	r2, r2, #5
 8001c46:	17db      	asrs	r3, r3, #31
 8001c48:	1ad3      	subs	r3, r2, r3
 8001c4a:	b21a      	sxth	r2, r3
 8001c4c:	4b0c      	ldr	r3, [pc, #48]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c4e:	869a      	strh	r2, [r3, #52]	; 0x34
	imu_data.gz_offset = gyro_z_total / 100;
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	4a0a      	ldr	r2, [pc, #40]	; (8001c7c <gyro_offset_cali+0xf4>)
 8001c54:	fb82 1203 	smull	r1, r2, r2, r3
 8001c58:	1152      	asrs	r2, r2, #5
 8001c5a:	17db      	asrs	r3, r3, #31
 8001c5c:	1ad3      	subs	r3, r2, r3
 8001c5e:	b21a      	sxth	r2, r3
 8001c60:	4b07      	ldr	r3, [pc, #28]	; (8001c80 <gyro_offset_cali+0xf8>)
 8001c62:	86da      	strh	r2, [r3, #54]	; 0x36

}
 8001c64:	bf00      	nop
 8001c66:	3710      	adds	r7, #16
 8001c68:	46bd      	mov	sp, r7
 8001c6a:	bd80      	pop	{r7, pc}
 8001c6c:	f3af 8000 	nop.w
 8001c70:	eb851eb8 	.word	0xeb851eb8
 8001c74:	3faeb851 	.word	0x3faeb851
 8001c78:	20000384 	.word	0x20000384
 8001c7c:	51eb851f 	.word	0x51eb851f
 8001c80:	20000394 	.word	0x20000394

08001c84 <imu_init>:

void imu_init() {
 8001c84:	b580      	push	{r7, lr}
 8001c86:	af00      	add	r7, sp, #0
	//trigger NSS low and high for both to initialise both gyro and accel into SPI mode
	BMI_ACCEL_NSS_LOW;
 8001c88:	2200      	movs	r2, #0
 8001c8a:	2110      	movs	r1, #16
 8001c8c:	480f      	ldr	r0, [pc, #60]	; (8001ccc <imu_init+0x48>)
 8001c8e:	f00f fca7 	bl	80115e0 <HAL_GPIO_WritePin>
	BMI_GYRO_NSS_LOW;
 8001c92:	2200      	movs	r2, #0
 8001c94:	2101      	movs	r1, #1
 8001c96:	480e      	ldr	r0, [pc, #56]	; (8001cd0 <imu_init+0x4c>)
 8001c98:	f00f fca2 	bl	80115e0 <HAL_GPIO_WritePin>
	HAL_Delay(100);
 8001c9c:	2064      	movs	r0, #100	; 0x64
 8001c9e:	f00d fd0d 	bl	800f6bc <HAL_Delay>
	BMI_ACCEL_NSS_HIGH;
 8001ca2:	2201      	movs	r2, #1
 8001ca4:	2110      	movs	r1, #16
 8001ca6:	4809      	ldr	r0, [pc, #36]	; (8001ccc <imu_init+0x48>)
 8001ca8:	f00f fc9a 	bl	80115e0 <HAL_GPIO_WritePin>
	BMI_GYRO_NSS_HIGH;
 8001cac:	2201      	movs	r2, #1
 8001cae:	2101      	movs	r1, #1
 8001cb0:	4807      	ldr	r0, [pc, #28]	; (8001cd0 <imu_init+0x4c>)
 8001cb2:	f00f fc95 	bl	80115e0 <HAL_GPIO_WritePin>
	gyro_init();
 8001cb6:	f7ff fe7b 	bl	80019b0 <gyro_init>
	accel_init();
 8001cba:	f7ff feb9 	bl	8001a30 <accel_init>
	ist8310_init();
 8001cbe:	f000 f907 	bl	8001ed0 <ist8310_init>
	gyro_offset_cali();
 8001cc2:	f7ff ff61 	bl	8001b88 <gyro_offset_cali>

}
 8001cc6:	bf00      	nop
 8001cc8:	bd80      	pop	{r7, pc}
 8001cca:	bf00      	nop
 8001ccc:	40020000 	.word	0x40020000
 8001cd0:	40020400 	.word	0x40020400

08001cd4 <imu_start_ints>:

void imu_start_ints() {
 8001cd4:	b580      	push	{r7, lr}
 8001cd6:	af00      	add	r7, sp, #0
	gyro_write_byte(BMI088_GYRO_CTRL, BMI088_DRDY_ON);
 8001cd8:	2180      	movs	r1, #128	; 0x80
 8001cda:	2015      	movs	r0, #21
 8001cdc:	f7ff fd34 	bl	8001748 <gyro_write_byte>
	vTaskDelay(10);
 8001ce0:	200a      	movs	r0, #10
 8001ce2:	f01a ff89 	bl	801cbf8 <vTaskDelay>
	accel_write_byte(BMI088_INT_MAP_DATA, BMI088_ACC_INT1_DRDY_INTERRUPT);
 8001ce6:	2104      	movs	r1, #4
 8001ce8:	2058      	movs	r0, #88	; 0x58
 8001cea:	f7ff fdbf 	bl	800186c <accel_write_byte>
	vTaskDelay(10);
 8001cee:	200a      	movs	r0, #10
 8001cf0:	f01a ff82 	bl	801cbf8 <vTaskDelay>
	mag_write_single_reg(0x0B, 0x08); //enable drdy pin, pull to low on drdy
 8001cf4:	2108      	movs	r1, #8
 8001cf6:	200b      	movs	r0, #11
 8001cf8:	f7ff ff0e 	bl	8001b18 <mag_write_single_reg>
	imu_init_status = 1;
 8001cfc:	4b02      	ldr	r3, [pc, #8]	; (8001d08 <imu_start_ints+0x34>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	701a      	strb	r2, [r3, #0]
}
 8001d02:	bf00      	nop
 8001d04:	bd80      	pop	{r7, pc}
 8001d06:	bf00      	nop
 8001d08:	200003cc 	.word	0x200003cc

08001d0c <accel_get_data>:

void accel_get_data() {
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	af00      	add	r7, sp, #0
	accel_read_bytes(BMI088_ACCEL_XOUT_L, accel_buff, 6);
 8001d10:	2206      	movs	r2, #6
 8001d12:	4903      	ldr	r1, [pc, #12]	; (8001d20 <accel_get_data+0x14>)
 8001d14:	2012      	movs	r0, #18
 8001d16:	f7ff fe13 	bl	8001940 <accel_read_bytes>
//	if (rx_status == HAL_OK) {
//		spi_rdy = 0;
//		accel_rx = 1;
//	}
	//imu_data.temp = get_bmi_temp();
}
 8001d1a:	bf00      	nop
 8001d1c:	bd80      	pop	{r7, pc}
 8001d1e:	bf00      	nop
 8001d20:	2000037c 	.word	0x2000037c

08001d24 <accel_process_data>:

void accel_process_data() {
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b082      	sub	sp, #8
 8001d28:	af00      	add	r7, sp, #0
	int16_t accel_data;
	accel_data = (accel_buff[1] << 8 | accel_buff[0]);
 8001d2a:	4b28      	ldr	r3, [pc, #160]	; (8001dcc <accel_process_data+0xa8>)
 8001d2c:	785b      	ldrb	r3, [r3, #1]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b26      	ldr	r3, [pc, #152]	; (8001dcc <accel_process_data+0xa8>)
 8001d34:	781b      	ldrb	r3, [r3, #0]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.ax = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d3c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d40:	ee07 3a90 	vmov	s15, r3
 8001d44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d48:	ed9f 7a21 	vldr	s14, [pc, #132]	; 8001dd0 <accel_process_data+0xac>
 8001d4c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d50:	4b20      	ldr	r3, [pc, #128]	; (8001dd4 <accel_process_data+0xb0>)
 8001d52:	edc3 7a04 	vstr	s15, [r3, #16]
	accel_data = (accel_buff[3] << 8 | accel_buff[2]);
 8001d56:	4b1d      	ldr	r3, [pc, #116]	; (8001dcc <accel_process_data+0xa8>)
 8001d58:	78db      	ldrb	r3, [r3, #3]
 8001d5a:	021b      	lsls	r3, r3, #8
 8001d5c:	b21a      	sxth	r2, r3
 8001d5e:	4b1b      	ldr	r3, [pc, #108]	; (8001dcc <accel_process_data+0xa8>)
 8001d60:	789b      	ldrb	r3, [r3, #2]
 8001d62:	b21b      	sxth	r3, r3
 8001d64:	4313      	orrs	r3, r2
 8001d66:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.ay = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d68:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d6c:	ee07 3a90 	vmov	s15, r3
 8001d70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d74:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001dd0 <accel_process_data+0xac>
 8001d78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d7c:	4b15      	ldr	r3, [pc, #84]	; (8001dd4 <accel_process_data+0xb0>)
 8001d7e:	edc3 7a05 	vstr	s15, [r3, #20]
	accel_data = (accel_buff[5] << 8 | accel_buff[4]);
 8001d82:	4b12      	ldr	r3, [pc, #72]	; (8001dcc <accel_process_data+0xa8>)
 8001d84:	795b      	ldrb	r3, [r3, #5]
 8001d86:	021b      	lsls	r3, r3, #8
 8001d88:	b21a      	sxth	r2, r3
 8001d8a:	4b10      	ldr	r3, [pc, #64]	; (8001dcc <accel_process_data+0xa8>)
 8001d8c:	791b      	ldrb	r3, [r3, #4]
 8001d8e:	b21b      	sxth	r3, r3
 8001d90:	4313      	orrs	r3, r2
 8001d92:	80fb      	strh	r3, [r7, #6]

	//convert raw data into m/s^2
	imu_data.accel_data.az = (float)accel_data * BMI088_ACCEL_6G_SEN;
 8001d94:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d98:	ee07 3a90 	vmov	s15, r3
 8001d9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001da0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8001dd0 <accel_process_data+0xac>
 8001da4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001da8:	4b0a      	ldr	r3, [pc, #40]	; (8001dd4 <accel_process_data+0xb0>)
 8001daa:	edc3 7a06 	vstr	s15, [r3, #24]
	imu_data.accel_data.last_accel_update = HAL_GetTick();
 8001dae:	f00d fc79 	bl	800f6a4 <HAL_GetTick>
 8001db2:	4603      	mov	r3, r0
 8001db4:	4a07      	ldr	r2, [pc, #28]	; (8001dd4 <accel_process_data+0xb0>)
 8001db6:	61d3      	str	r3, [r2, #28]

	//send data into the imu processing task
	accel_data_ready(imu_data.accel_data);
 8001db8:	4b06      	ldr	r3, [pc, #24]	; (8001dd4 <accel_process_data+0xb0>)
 8001dba:	3310      	adds	r3, #16
 8001dbc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001dbe:	f006 f96f 	bl	80080a0 <accel_data_ready>
}
 8001dc2:	bf00      	nop
 8001dc4:	3708      	adds	r7, #8
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	bd80      	pop	{r7, pc}
 8001dca:	bf00      	nop
 8001dcc:	2000037c 	.word	0x2000037c
 8001dd0:	3aeb3333 	.word	0x3aeb3333
 8001dd4:	20000394 	.word	0x20000394

08001dd8 <gyro_get_data>:

void gyro_get_data() {
 8001dd8:	b580      	push	{r7, lr}
 8001dda:	af00      	add	r7, sp, #0
	gyro_read_bytes(BMI088_GYRO_X_L, gyro_buff, 6);
 8001ddc:	2206      	movs	r2, #6
 8001dde:	4903      	ldr	r1, [pc, #12]	; (8001dec <gyro_get_data+0x14>)
 8001de0:	2002      	movs	r0, #2
 8001de2:	f7ff fd11 	bl	8001808 <gyro_read_bytes>
//	if (rx_status == HAL_OK) {
//		spi_rdy = 0;
//		gyro_rx = 1;
//	}
}
 8001de6:	bf00      	nop
 8001de8:	bd80      	pop	{r7, pc}
 8001dea:	bf00      	nop
 8001dec:	20000384 	.word	0x20000384

08001df0 <gyro_process_data>:

void gyro_process_data() {
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b082      	sub	sp, #8
 8001df4:	af00      	add	r7, sp, #0
	int16_t gyro_data;
	gyro_data = (gyro_buff[1] << 8 | gyro_buff[0]);
 8001df6:	4b33      	ldr	r3, [pc, #204]	; (8001ec4 <gyro_process_data+0xd4>)
 8001df8:	785b      	ldrb	r3, [r3, #1]
 8001dfa:	021b      	lsls	r3, r3, #8
 8001dfc:	b21a      	sxth	r2, r3
 8001dfe:	4b31      	ldr	r3, [pc, #196]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e00:	781b      	ldrb	r3, [r3, #0]
 8001e02:	b21b      	sxth	r3, r3
 8001e04:	4313      	orrs	r3, r2
 8001e06:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gx_offset;
 8001e08:	88fa      	ldrh	r2, [r7, #6]
 8001e0a:	4b2f      	ldr	r3, [pc, #188]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e0c:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	; 0x32
 8001e10:	b29b      	uxth	r3, r3
 8001e12:	1ad3      	subs	r3, r2, r3
 8001e14:	b29b      	uxth	r3, r3
 8001e16:	80fb      	strh	r3, [r7, #6]
	//convert raw data into radians/s
	imu_data.gyro_data.gx = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e18:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e1c:	ee07 3a90 	vmov	s15, r3
 8001e20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e24:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8001ecc <gyro_process_data+0xdc>
 8001e28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e2c:	4b26      	ldr	r3, [pc, #152]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e2e:	edc3 7a00 	vstr	s15, [r3]
	gyro_data = (gyro_buff[3] << 8 | gyro_buff[2]);
 8001e32:	4b24      	ldr	r3, [pc, #144]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e34:	78db      	ldrb	r3, [r3, #3]
 8001e36:	021b      	lsls	r3, r3, #8
 8001e38:	b21a      	sxth	r2, r3
 8001e3a:	4b22      	ldr	r3, [pc, #136]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e3c:	789b      	ldrb	r3, [r3, #2]
 8001e3e:	b21b      	sxth	r3, r3
 8001e40:	4313      	orrs	r3, r2
 8001e42:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gy_offset;
 8001e44:	88fa      	ldrh	r2, [r7, #6]
 8001e46:	4b20      	ldr	r3, [pc, #128]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e48:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	; 0x34
 8001e4c:	b29b      	uxth	r3, r3
 8001e4e:	1ad3      	subs	r3, r2, r3
 8001e50:	b29b      	uxth	r3, r3
 8001e52:	80fb      	strh	r3, [r7, #6]

	//convert raw data into radians/s
	imu_data.gyro_data.gy = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e54:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e58:	ee07 3a90 	vmov	s15, r3
 8001e5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e60:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001ecc <gyro_process_data+0xdc>
 8001e64:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e68:	4b17      	ldr	r3, [pc, #92]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e6a:	edc3 7a01 	vstr	s15, [r3, #4]
	gyro_data = (gyro_buff[5] << 8 | gyro_buff[4]);
 8001e6e:	4b15      	ldr	r3, [pc, #84]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e70:	795b      	ldrb	r3, [r3, #5]
 8001e72:	021b      	lsls	r3, r3, #8
 8001e74:	b21a      	sxth	r2, r3
 8001e76:	4b13      	ldr	r3, [pc, #76]	; (8001ec4 <gyro_process_data+0xd4>)
 8001e78:	791b      	ldrb	r3, [r3, #4]
 8001e7a:	b21b      	sxth	r3, r3
 8001e7c:	4313      	orrs	r3, r2
 8001e7e:	80fb      	strh	r3, [r7, #6]
	gyro_data -= imu_data.gz_offset;
 8001e80:	88fa      	ldrh	r2, [r7, #6]
 8001e82:	4b11      	ldr	r3, [pc, #68]	; (8001ec8 <gyro_process_data+0xd8>)
 8001e84:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	; 0x36
 8001e88:	b29b      	uxth	r3, r3
 8001e8a:	1ad3      	subs	r3, r2, r3
 8001e8c:	b29b      	uxth	r3, r3
 8001e8e:	80fb      	strh	r3, [r7, #6]

	//convert raw data into radians/s
	imu_data.gyro_data.gz = (float)gyro_data * BMI088_GYRO_500_SEN;
 8001e90:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e94:	ee07 3a90 	vmov	s15, r3
 8001e98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e9c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8001ecc <gyro_process_data+0xdc>
 8001ea0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ea4:	4b08      	ldr	r3, [pc, #32]	; (8001ec8 <gyro_process_data+0xd8>)
 8001ea6:	edc3 7a02 	vstr	s15, [r3, #8]
	imu_data.gyro_data.last_gyro_update = HAL_GetTick();
 8001eaa:	f00d fbfb 	bl	800f6a4 <HAL_GetTick>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	4a05      	ldr	r2, [pc, #20]	; (8001ec8 <gyro_process_data+0xd8>)
 8001eb2:	60d3      	str	r3, [r2, #12]
	//send data into the imu processing task
	gyro_data_ready(imu_data.gyro_data);
 8001eb4:	4b04      	ldr	r3, [pc, #16]	; (8001ec8 <gyro_process_data+0xd8>)
 8001eb6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001eb8:	f006 f8c6 	bl	8008048 <gyro_data_ready>
}
 8001ebc:	bf00      	nop
 8001ebe:	3708      	adds	r7, #8
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	bd80      	pop	{r7, pc}
 8001ec4:	20000384 	.word	0x20000384
 8001ec8:	20000394 	.word	0x20000394
 8001ecc:	398ba058 	.word	0x398ba058

08001ed0 <ist8310_init>:

uint8_t ist8310_init() {
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	b082      	sub	sp, #8
 8001ed4:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(IST_RST_GPIO_Port, IST_RST_Pin, GPIO_PIN_RESET);
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	2140      	movs	r1, #64	; 0x40
 8001eda:	481d      	ldr	r0, [pc, #116]	; (8001f50 <ist8310_init+0x80>)
 8001edc:	f00f fb80 	bl	80115e0 <HAL_GPIO_WritePin>
	HAL_Delay(2);
 8001ee0:	2002      	movs	r0, #2
 8001ee2:	f00d fbeb 	bl	800f6bc <HAL_Delay>
	HAL_GPIO_WritePin(IST_RST_GPIO_Port, IST_RST_Pin, GPIO_PIN_SET);
 8001ee6:	2201      	movs	r2, #1
 8001ee8:	2140      	movs	r1, #64	; 0x40
 8001eea:	4819      	ldr	r0, [pc, #100]	; (8001f50 <ist8310_init+0x80>)
 8001eec:	f00f fb78 	bl	80115e0 <HAL_GPIO_WritePin>
	HAL_Delay(2);
 8001ef0:	2002      	movs	r0, #2
 8001ef2:	f00d fbe3 	bl	800f6bc <HAL_Delay>

	uint8_t ist_id = mag_read_single_reg(IST8310_WHO_AM_I);
 8001ef6:	2000      	movs	r0, #0
 8001ef8:	f7ff fdf2 	bl	8001ae0 <mag_read_single_reg>
 8001efc:	4603      	mov	r3, r0
 8001efe:	71fb      	strb	r3, [r7, #7]
	if (ist_id != IST8310_DEVICE_ID_A) {
 8001f00:	79fb      	ldrb	r3, [r7, #7]
 8001f02:	2b10      	cmp	r3, #16
 8001f04:	d00a      	beq.n	8001f1c <ist8310_init+0x4c>
		//reset mag values
		imu_data.mag_data.mx = 0;
 8001f06:	4b13      	ldr	r3, [pc, #76]	; (8001f54 <ist8310_init+0x84>)
 8001f08:	2200      	movs	r2, #0
 8001f0a:	841a      	strh	r2, [r3, #32]
		imu_data.mag_data.my = 0;
 8001f0c:	4b11      	ldr	r3, [pc, #68]	; (8001f54 <ist8310_init+0x84>)
 8001f0e:	2200      	movs	r2, #0
 8001f10:	845a      	strh	r2, [r3, #34]	; 0x22
		imu_data.mag_data.mz = 0;
 8001f12:	4b10      	ldr	r3, [pc, #64]	; (8001f54 <ist8310_init+0x84>)
 8001f14:	2200      	movs	r2, #0
 8001f16:	849a      	strh	r2, [r3, #36]	; 0x24
		return 0;
 8001f18:	2300      	movs	r3, #0
 8001f1a:	e015      	b.n	8001f48 <ist8310_init+0x78>
	}
	HAL_Delay(2);
 8001f1c:	2002      	movs	r0, #2
 8001f1e:	f00d fbcd 	bl	800f6bc <HAL_Delay>
	mag_write_single_reg(0x41, 0x09); //average over 2 data
 8001f22:	2109      	movs	r1, #9
 8001f24:	2041      	movs	r0, #65	; 0x41
 8001f26:	f7ff fdf7 	bl	8001b18 <mag_write_single_reg>
	HAL_Delay(2);
 8001f2a:	2002      	movs	r0, #2
 8001f2c:	f00d fbc6 	bl	800f6bc <HAL_Delay>
	mag_write_single_reg(0x42, 0xC0); //set to C0
 8001f30:	21c0      	movs	r1, #192	; 0xc0
 8001f32:	2042      	movs	r0, #66	; 0x42
 8001f34:	f7ff fdf0 	bl	8001b18 <mag_write_single_reg>
	HAL_Delay(2);
 8001f38:	2002      	movs	r0, #2
 8001f3a:	f00d fbbf 	bl	800f6bc <HAL_Delay>
	mag_write_single_reg(0x0A, 0x0B); //100Hz
 8001f3e:	210b      	movs	r1, #11
 8001f40:	200a      	movs	r0, #10
 8001f42:	f7ff fde9 	bl	8001b18 <mag_write_single_reg>
	//mag_en_flag = 1;

	return 0;
 8001f46:	2300      	movs	r3, #0
}
 8001f48:	4618      	mov	r0, r3
 8001f4a:	3708      	adds	r7, #8
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	bd80      	pop	{r7, pc}
 8001f50:	40021800 	.word	0x40021800
 8001f54:	20000394 	.word	0x20000394

08001f58 <ist8310_get_data>:

void ist8310_get_data() {
 8001f58:	b580      	push	{r7, lr}
 8001f5a:	af00      	add	r7, sp, #0
	//fun
	mag_read_multi_reg_dma(IST8310_R_XL, 5, ist_read_buffer);
 8001f5c:	4a05      	ldr	r2, [pc, #20]	; (8001f74 <ist8310_get_data+0x1c>)
 8001f5e:	2105      	movs	r1, #5
 8001f60:	2003      	movs	r0, #3
 8001f62:	f7ff fdf5 	bl	8001b50 <mag_read_multi_reg_dma>
	imu_data.mag_data.last_mag_update = HAL_GetTick();
 8001f66:	f00d fb9d 	bl	800f6a4 <HAL_GetTick>
 8001f6a:	4603      	mov	r3, r0
 8001f6c:	4a02      	ldr	r2, [pc, #8]	; (8001f78 <ist8310_get_data+0x20>)
 8001f6e:	6293      	str	r3, [r2, #40]	; 0x28

}
 8001f70:	bf00      	nop
 8001f72:	bd80      	pop	{r7, pc}
 8001f74:	2000038c 	.word	0x2000038c
 8001f78:	20000394 	.word	0x20000394

08001f7c <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	b082      	sub	sp, #8
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	4603      	mov	r3, r0
 8001f84:	80fb      	strh	r3, [r7, #6]
	if (imu_init_status == 1) {
 8001f86:	4b13      	ldr	r3, [pc, #76]	; (8001fd4 <HAL_GPIO_EXTI_Callback+0x58>)
 8001f88:	781b      	ldrb	r3, [r3, #0]
 8001f8a:	2b01      	cmp	r3, #1
 8001f8c:	d11e      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
		if (hspi1.State == HAL_SPI_STATE_READY) {
 8001f8e:	4b12      	ldr	r3, [pc, #72]	; (8001fd8 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001f90:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8001f94:	b2db      	uxtb	r3, r3
 8001f96:	2b01      	cmp	r3, #1
 8001f98:	d10d      	bne.n	8001fb6 <HAL_GPIO_EXTI_Callback+0x3a>
			if (GPIO_Pin == GYRO_INT_Pin) {
 8001f9a:	88fb      	ldrh	r3, [r7, #6]
 8001f9c:	2b20      	cmp	r3, #32
 8001f9e:	d103      	bne.n	8001fa8 <HAL_GPIO_EXTI_Callback+0x2c>
				gyro_get_data();
 8001fa0:	f7ff ff1a 	bl	8001dd8 <gyro_get_data>
				gyro_process_data();
 8001fa4:	f7ff ff24 	bl	8001df0 <gyro_process_data>
				//ist8310_get_data();
			}
			if (GPIO_Pin == ACC_INT_Pin) {
 8001fa8:	88fb      	ldrh	r3, [r7, #6]
 8001faa:	2b10      	cmp	r3, #16
 8001fac:	d103      	bne.n	8001fb6 <HAL_GPIO_EXTI_Callback+0x3a>
				accel_get_data();
 8001fae:	f7ff fead 	bl	8001d0c <accel_get_data>
				accel_process_data();
 8001fb2:	f7ff feb7 	bl	8001d24 <accel_process_data>
			}
		}
		if (GPIO_Pin == IST_INT_Pin) {
 8001fb6:	88fb      	ldrh	r3, [r7, #6]
 8001fb8:	2b08      	cmp	r3, #8
 8001fba:	d107      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
			if (hi2c3.State == HAL_I2C_STATE_READY) {
 8001fbc:	4b07      	ldr	r3, [pc, #28]	; (8001fdc <HAL_GPIO_EXTI_Callback+0x60>)
 8001fbe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001fc2:	b2db      	uxtb	r3, r3
 8001fc4:	2b20      	cmp	r3, #32
 8001fc6:	d101      	bne.n	8001fcc <HAL_GPIO_EXTI_Callback+0x50>
				ist8310_get_data();
 8001fc8:	f7ff ffc6 	bl	8001f58 <ist8310_get_data>
			}
		}
	}
}
 8001fcc:	bf00      	nop
 8001fce:	3708      	adds	r7, #8
 8001fd0:	46bd      	mov	sp, r7
 8001fd2:	bd80      	pop	{r7, pc}
 8001fd4:	200003cc 	.word	0x200003cc
 8001fd8:	20001394 	.word	0x20001394
 8001fdc:	20001270 	.word	0x20001270

08001fe0 <HAL_I2C_MemRxCpltCallback>:
	spi_rdy = 1;
	spi_timeout = HAL_GetTick();
}
*/

void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b084      	sub	sp, #16
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	6078      	str	r0, [r7, #4]
	int16_t mag_buffer[3];
	mag_buffer[0] = ist_read_buffer[1] << 8 | ist_read_buffer[0];
 8001fe8:	4b19      	ldr	r3, [pc, #100]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001fea:	785b      	ldrb	r3, [r3, #1]
 8001fec:	021b      	lsls	r3, r3, #8
 8001fee:	b21a      	sxth	r2, r3
 8001ff0:	4b17      	ldr	r3, [pc, #92]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ff2:	781b      	ldrb	r3, [r3, #0]
 8001ff4:	b21b      	sxth	r3, r3
 8001ff6:	4313      	orrs	r3, r2
 8001ff8:	b21b      	sxth	r3, r3
 8001ffa:	813b      	strh	r3, [r7, #8]
	mag_buffer[1] = ist_read_buffer[3] << 8 | ist_read_buffer[2];
 8001ffc:	4b14      	ldr	r3, [pc, #80]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ffe:	78db      	ldrb	r3, [r3, #3]
 8002000:	021b      	lsls	r3, r3, #8
 8002002:	b21a      	sxth	r2, r3
 8002004:	4b12      	ldr	r3, [pc, #72]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8002006:	789b      	ldrb	r3, [r3, #2]
 8002008:	b21b      	sxth	r3, r3
 800200a:	4313      	orrs	r3, r2
 800200c:	b21b      	sxth	r3, r3
 800200e:	817b      	strh	r3, [r7, #10]
	mag_buffer[2] = ist_read_buffer[5] << 8 | ist_read_buffer[4];
 8002010:	4b0f      	ldr	r3, [pc, #60]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 8002012:	795b      	ldrb	r3, [r3, #5]
 8002014:	021b      	lsls	r3, r3, #8
 8002016:	b21a      	sxth	r2, r3
 8002018:	4b0d      	ldr	r3, [pc, #52]	; (8002050 <HAL_I2C_MemRxCpltCallback+0x70>)
 800201a:	791b      	ldrb	r3, [r3, #4]
 800201c:	b21b      	sxth	r3, r3
 800201e:	4313      	orrs	r3, r2
 8002020:	b21b      	sxth	r3, r3
 8002022:	81bb      	strh	r3, [r7, #12]

	imu_data.mag_data.mx = mag_buffer[0];
 8002024:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002028:	4b0a      	ldr	r3, [pc, #40]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800202a:	841a      	strh	r2, [r3, #32]
	imu_data.mag_data.my = mag_buffer[1];
 800202c:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8002030:	4b08      	ldr	r3, [pc, #32]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 8002032:	845a      	strh	r2, [r3, #34]	; 0x22
	imu_data.mag_data.mz = mag_buffer[2];
 8002034:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002038:	4b06      	ldr	r3, [pc, #24]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800203a:	849a      	strh	r2, [r3, #36]	; 0x24
	mag_data_ready(imu_data.mag_data);
 800203c:	4b05      	ldr	r3, [pc, #20]	; (8002054 <HAL_I2C_MemRxCpltCallback+0x74>)
 800203e:	3320      	adds	r3, #32
 8002040:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002044:	f006 f858 	bl	80080f8 <mag_data_ready>
}
 8002048:	bf00      	nop
 800204a:	3710      	adds	r7, #16
 800204c:	46bd      	mov	sp, r7
 800204e:	bd80      	pop	{r7, pc}
 8002050:	2000038c 	.word	0x2000038c
 8002054:	20000394 	.word	0x20000394

08002058 <led_green_off>:
 8002058:	b480      	push	{r7}
 800205a:	af00      	add	r7, sp, #0
 800205c:	4b04      	ldr	r3, [pc, #16]	; (8002070 <led_green_off+0x18>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	2200      	movs	r2, #0
 8002062:	639a      	str	r2, [r3, #56]	; 0x38
 8002064:	bf00      	nop
 8002066:	46bd      	mov	sp, r7
 8002068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206c:	4770      	bx	lr
 800206e:	bf00      	nop
 8002070:	200015cc 	.word	0x200015cc

08002074 <led_on>:
 8002074:	b580      	push	{r7, lr}
 8002076:	af00      	add	r7, sp, #0
 8002078:	2100      	movs	r1, #0
 800207a:	480c      	ldr	r0, [pc, #48]	; (80020ac <led_on+0x38>)
 800207c:	f013 fde2 	bl	8015c44 <HAL_TIM_PWM_Start>
 8002080:	2104      	movs	r1, #4
 8002082:	480a      	ldr	r0, [pc, #40]	; (80020ac <led_on+0x38>)
 8002084:	f013 fdde 	bl	8015c44 <HAL_TIM_PWM_Start>
 8002088:	2108      	movs	r1, #8
 800208a:	4808      	ldr	r0, [pc, #32]	; (80020ac <led_on+0x38>)
 800208c:	f013 fdda 	bl	8015c44 <HAL_TIM_PWM_Start>
 8002090:	4b06      	ldr	r3, [pc, #24]	; (80020ac <led_on+0x38>)
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	22ff      	movs	r2, #255	; 0xff
 8002096:	63da      	str	r2, [r3, #60]	; 0x3c
 8002098:	4b04      	ldr	r3, [pc, #16]	; (80020ac <led_on+0x38>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	22ff      	movs	r2, #255	; 0xff
 800209e:	639a      	str	r2, [r3, #56]	; 0x38
 80020a0:	4b02      	ldr	r3, [pc, #8]	; (80020ac <led_on+0x38>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	22ff      	movs	r2, #255	; 0xff
 80020a6:	635a      	str	r2, [r3, #52]	; 0x34
 80020a8:	bf00      	nop
 80020aa:	bd80      	pop	{r7, pc}
 80020ac:	200015cc 	.word	0x200015cc

080020b0 <led_toggle>:
 80020b0:	b480      	push	{r7}
 80020b2:	af00      	add	r7, sp, #0
 80020b4:	bf00      	nop
 80020b6:	46bd      	mov	sp, r7
 80020b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020bc:	4770      	bx	lr
	...

080020c0 <status_led>:
 80020c0:	b480      	push	{r7}
 80020c2:	b083      	sub	sp, #12
 80020c4:	af00      	add	r7, sp, #0
 80020c6:	4603      	mov	r3, r0
 80020c8:	460a      	mov	r2, r1
 80020ca:	80fb      	strh	r3, [r7, #6]
 80020cc:	4613      	mov	r3, r2
 80020ce:	717b      	strb	r3, [r7, #5]
 80020d0:	797b      	ldrb	r3, [r7, #5]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	f040 808f 	bne.w	80021f6 <status_led+0x136>
 80020d8:	88fb      	ldrh	r3, [r7, #6]
 80020da:	3b01      	subs	r3, #1
 80020dc:	2b08      	cmp	r3, #8
 80020de:	f200 808c 	bhi.w	80021fa <status_led+0x13a>
 80020e2:	a201      	add	r2, pc, #4	; (adr r2, 80020e8 <status_led+0x28>)
 80020e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80020e8:	0800210d 	.word	0x0800210d
 80020ec:	08002127 	.word	0x08002127
 80020f0:	08002141 	.word	0x08002141
 80020f4:	0800215b 	.word	0x0800215b
 80020f8:	08002175 	.word	0x08002175
 80020fc:	0800218f 	.word	0x0800218f
 8002100:	080021a9 	.word	0x080021a9
 8002104:	080021c3 	.word	0x080021c3
 8002108:	080021dd 	.word	0x080021dd
 800210c:	4b3e      	ldr	r3, [pc, #248]	; (8002208 <status_led+0x148>)
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	22ff      	movs	r2, #255	; 0xff
 8002112:	63da      	str	r2, [r3, #60]	; 0x3c
 8002114:	4b3c      	ldr	r3, [pc, #240]	; (8002208 <status_led+0x148>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	2200      	movs	r2, #0
 800211a:	639a      	str	r2, [r3, #56]	; 0x38
 800211c:	4b3a      	ldr	r3, [pc, #232]	; (8002208 <status_led+0x148>)
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	2200      	movs	r2, #0
 8002122:	635a      	str	r2, [r3, #52]	; 0x34
 8002124:	e06a      	b.n	80021fc <status_led+0x13c>
 8002126:	4b38      	ldr	r3, [pc, #224]	; (8002208 <status_led+0x148>)
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	2200      	movs	r2, #0
 800212c:	63da      	str	r2, [r3, #60]	; 0x3c
 800212e:	4b36      	ldr	r3, [pc, #216]	; (8002208 <status_led+0x148>)
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	22ff      	movs	r2, #255	; 0xff
 8002134:	639a      	str	r2, [r3, #56]	; 0x38
 8002136:	4b34      	ldr	r3, [pc, #208]	; (8002208 <status_led+0x148>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	2200      	movs	r2, #0
 800213c:	635a      	str	r2, [r3, #52]	; 0x34
 800213e:	e05d      	b.n	80021fc <status_led+0x13c>
 8002140:	4b31      	ldr	r3, [pc, #196]	; (8002208 <status_led+0x148>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	2200      	movs	r2, #0
 8002146:	63da      	str	r2, [r3, #60]	; 0x3c
 8002148:	4b2f      	ldr	r3, [pc, #188]	; (8002208 <status_led+0x148>)
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	2200      	movs	r2, #0
 800214e:	639a      	str	r2, [r3, #56]	; 0x38
 8002150:	4b2d      	ldr	r3, [pc, #180]	; (8002208 <status_led+0x148>)
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	22ff      	movs	r2, #255	; 0xff
 8002156:	635a      	str	r2, [r3, #52]	; 0x34
 8002158:	e050      	b.n	80021fc <status_led+0x13c>
 800215a:	4b2b      	ldr	r3, [pc, #172]	; (8002208 <status_led+0x148>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	22ff      	movs	r2, #255	; 0xff
 8002160:	63da      	str	r2, [r3, #60]	; 0x3c
 8002162:	4b29      	ldr	r3, [pc, #164]	; (8002208 <status_led+0x148>)
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	2200      	movs	r2, #0
 8002168:	639a      	str	r2, [r3, #56]	; 0x38
 800216a:	4b27      	ldr	r3, [pc, #156]	; (8002208 <status_led+0x148>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	22ff      	movs	r2, #255	; 0xff
 8002170:	635a      	str	r2, [r3, #52]	; 0x34
 8002172:	e043      	b.n	80021fc <status_led+0x13c>
 8002174:	4b24      	ldr	r3, [pc, #144]	; (8002208 <status_led+0x148>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	2200      	movs	r2, #0
 800217a:	63da      	str	r2, [r3, #60]	; 0x3c
 800217c:	4b22      	ldr	r3, [pc, #136]	; (8002208 <status_led+0x148>)
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	2200      	movs	r2, #0
 8002182:	639a      	str	r2, [r3, #56]	; 0x38
 8002184:	4b20      	ldr	r3, [pc, #128]	; (8002208 <status_led+0x148>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	2200      	movs	r2, #0
 800218a:	635a      	str	r2, [r3, #52]	; 0x34
 800218c:	e036      	b.n	80021fc <status_led+0x13c>
 800218e:	4b1e      	ldr	r3, [pc, #120]	; (8002208 <status_led+0x148>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	2200      	movs	r2, #0
 8002194:	63da      	str	r2, [r3, #60]	; 0x3c
 8002196:	4b1c      	ldr	r3, [pc, #112]	; (8002208 <status_led+0x148>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	2200      	movs	r2, #0
 800219c:	639a      	str	r2, [r3, #56]	; 0x38
 800219e:	4b1a      	ldr	r3, [pc, #104]	; (8002208 <status_led+0x148>)
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	2200      	movs	r2, #0
 80021a4:	635a      	str	r2, [r3, #52]	; 0x34
 80021a6:	e029      	b.n	80021fc <status_led+0x13c>
 80021a8:	4b17      	ldr	r3, [pc, #92]	; (8002208 <status_led+0x148>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	2200      	movs	r2, #0
 80021ae:	63da      	str	r2, [r3, #60]	; 0x3c
 80021b0:	4b15      	ldr	r3, [pc, #84]	; (8002208 <status_led+0x148>)
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	2200      	movs	r2, #0
 80021b6:	639a      	str	r2, [r3, #56]	; 0x38
 80021b8:	4b13      	ldr	r3, [pc, #76]	; (8002208 <status_led+0x148>)
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	2200      	movs	r2, #0
 80021be:	635a      	str	r2, [r3, #52]	; 0x34
 80021c0:	e01c      	b.n	80021fc <status_led+0x13c>
 80021c2:	4b11      	ldr	r3, [pc, #68]	; (8002208 <status_led+0x148>)
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	2200      	movs	r2, #0
 80021c8:	63da      	str	r2, [r3, #60]	; 0x3c
 80021ca:	4b0f      	ldr	r3, [pc, #60]	; (8002208 <status_led+0x148>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	2200      	movs	r2, #0
 80021d0:	639a      	str	r2, [r3, #56]	; 0x38
 80021d2:	4b0d      	ldr	r3, [pc, #52]	; (8002208 <status_led+0x148>)
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	2200      	movs	r2, #0
 80021d8:	635a      	str	r2, [r3, #52]	; 0x34
 80021da:	e00f      	b.n	80021fc <status_led+0x13c>
 80021dc:	4b0a      	ldr	r3, [pc, #40]	; (8002208 <status_led+0x148>)
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	2200      	movs	r2, #0
 80021e2:	63da      	str	r2, [r3, #60]	; 0x3c
 80021e4:	4b08      	ldr	r3, [pc, #32]	; (8002208 <status_led+0x148>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	2200      	movs	r2, #0
 80021ea:	639a      	str	r2, [r3, #56]	; 0x38
 80021ec:	4b06      	ldr	r3, [pc, #24]	; (8002208 <status_led+0x148>)
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	2200      	movs	r2, #0
 80021f2:	635a      	str	r2, [r3, #52]	; 0x34
 80021f4:	e002      	b.n	80021fc <status_led+0x13c>
 80021f6:	bf00      	nop
 80021f8:	e000      	b.n	80021fc <status_led+0x13c>
 80021fa:	bf00      	nop
 80021fc:	bf00      	nop
 80021fe:	370c      	adds	r7, #12
 8002200:	46bd      	mov	sp, r7
 8002202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002206:	4770      	bx	lr
 8002208:	200015cc 	.word	0x200015cc

0800220c <micros_tick>:
#include "robot_config.h"

uint32_t gv_curr_micros = 0;
uint32_t gv_overflow_times = 0;

void micros_tick(){
 800220c:	b480      	push	{r7}
 800220e:	af00      	add	r7, sp, #0
	if (gv_curr_micros == 4294967295) //2^32 - 1
 8002210:	4b09      	ldr	r3, [pc, #36]	; (8002238 <micros_tick+0x2c>)
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002218:	d104      	bne.n	8002224 <micros_tick+0x18>
		gv_overflow_times ++;
 800221a:	4b08      	ldr	r3, [pc, #32]	; (800223c <micros_tick+0x30>)
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	3301      	adds	r3, #1
 8002220:	4a06      	ldr	r2, [pc, #24]	; (800223c <micros_tick+0x30>)
 8002222:	6013      	str	r3, [r2, #0]
	gv_curr_micros ++;
 8002224:	4b04      	ldr	r3, [pc, #16]	; (8002238 <micros_tick+0x2c>)
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	3301      	adds	r3, #1
 800222a:	4a03      	ldr	r2, [pc, #12]	; (8002238 <micros_tick+0x2c>)
 800222c:	6013      	str	r3, [r2, #0]
}
 800222e:	bf00      	nop
 8002230:	46bd      	mov	sp, r7
 8002232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002236:	4770      	bx	lr
 8002238:	200003d0 	.word	0x200003d0
 800223c:	200003d4 	.word	0x200003d4

08002240 <start_micros_timer>:

void start_micros_timer()
{
 8002240:	b580      	push	{r7, lr}
 8002242:	af00      	add	r7, sp, #0
	configASSERT(TIMER_FREQ <= 1000000);
	__HAL_TIM_SET_AUTORELOAD(&htim3, (999999/TIMER_FREQ) + 1);
 8002244:	4b09      	ldr	r3, [pc, #36]	; (800226c <start_micros_timer+0x2c>)
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	2264      	movs	r2, #100	; 0x64
 800224a:	62da      	str	r2, [r3, #44]	; 0x2c
 800224c:	4b07      	ldr	r3, [pc, #28]	; (800226c <start_micros_timer+0x2c>)
 800224e:	2264      	movs	r2, #100	; 0x64
 8002250:	60da      	str	r2, [r3, #12]
	htim3.Instance->DIER |= TIM_DIER_UIE; //enable update interrupt
 8002252:	4b06      	ldr	r3, [pc, #24]	; (800226c <start_micros_timer+0x2c>)
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	68da      	ldr	r2, [r3, #12]
 8002258:	4b04      	ldr	r3, [pc, #16]	; (800226c <start_micros_timer+0x2c>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f042 0201 	orr.w	r2, r2, #1
 8002260:	60da      	str	r2, [r3, #12]
	HAL_TIM_Base_Start(&htim3);
 8002262:	4802      	ldr	r0, [pc, #8]	; (800226c <start_micros_timer+0x2c>)
 8002264:	f013 fb6e 	bl	8015944 <HAL_TIM_Base_Start>
}
 8002268:	bf00      	nop
 800226a:	bd80      	pop	{r7, pc}
 800226c:	2000153c 	.word	0x2000153c

08002270 <get_microseconds>:



uint32_t get_microseconds()
{
 8002270:	b480      	push	{r7}
 8002272:	af00      	add	r7, sp, #0
	return gv_curr_micros;
 8002274:	4b03      	ldr	r3, [pc, #12]	; (8002284 <get_microseconds+0x14>)
 8002276:	681b      	ldr	r3, [r3, #0]
}
 8002278:	4618      	mov	r0, r3
 800227a:	46bd      	mov	sp, r7
 800227c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	200003d0 	.word	0x200003d0

08002288 <queue_init>:
 8002288:	b480      	push	{r7}
 800228a:	b085      	sub	sp, #20
 800228c:	af00      	add	r7, sp, #0
 800228e:	6078      	str	r0, [r7, #4]
 8002290:	2300      	movs	r3, #0
 8002292:	723b      	strb	r3, [r7, #8]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d104      	bne.n	80022a4 <queue_init+0x1c>
 800229a:	2304      	movs	r3, #4
 800229c:	723b      	strb	r3, [r7, #8]
 800229e:	68bb      	ldr	r3, [r7, #8]
 80022a0:	60fb      	str	r3, [r7, #12]
 80022a2:	e015      	b.n	80022d0 <queue_init+0x48>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	2200      	movs	r2, #0
 80022a8:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2200      	movs	r2, #0
 80022b0:	f8a3 2100 	strh.w	r2, [r3, #256]	; 0x100
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	2200      	movs	r2, #0
 80022b8:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	2200      	movs	r2, #0
 80022c0:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2200      	movs	r2, #0
 80022c8:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 80022cc:	68bb      	ldr	r3, [r7, #8]
 80022ce:	60fb      	str	r3, [r7, #12]
 80022d0:	2300      	movs	r3, #0
 80022d2:	89ba      	ldrh	r2, [r7, #12]
 80022d4:	f362 030f 	bfi	r3, r2, #0, #16
 80022d8:	89fa      	ldrh	r2, [r7, #14]
 80022da:	f362 431f 	bfi	r3, r2, #16, #16
 80022de:	4618      	mov	r0, r3
 80022e0:	3714      	adds	r7, #20
 80022e2:	46bd      	mov	sp, r7
 80022e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e8:	4770      	bx	lr

080022ea <queue_append_byte>:
 80022ea:	b580      	push	{r7, lr}
 80022ec:	b084      	sub	sp, #16
 80022ee:	af00      	add	r7, sp, #0
 80022f0:	6078      	str	r0, [r7, #4]
 80022f2:	460b      	mov	r3, r1
 80022f4:	70fb      	strb	r3, [r7, #3]
 80022f6:	2300      	movs	r3, #0
 80022f8:	723b      	strb	r3, [r7, #8]
 80022fa:	f00d f9d3 	bl	800f6a4 <HAL_GetTick>
 80022fe:	4603      	mov	r3, r0
 8002300:	461a      	mov	r2, r3
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 800230e:	4619      	mov	r1, r3
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	78fa      	ldrb	r2, [r7, #3]
 8002314:	545a      	strb	r2, [r3, r1]
 8002316:	2301      	movs	r3, #1
 8002318:	817b      	strh	r3, [r7, #10]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 8002320:	2bfe      	cmp	r3, #254	; 0xfe
 8002322:	d805      	bhi.n	8002330 <queue_append_byte+0x46>
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	f8b3 3100 	ldrh.w	r3, [r3, #256]	; 0x100
 800232a:	3301      	adds	r3, #1
 800232c:	b29a      	uxth	r2, r3
 800232e:	e000      	b.n	8002332 <queue_append_byte+0x48>
 8002330:	2200      	movs	r2, #0
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	f8a3 2100 	strh.w	r2, [r3, #256]	; 0x100
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 800233e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002342:	d918      	bls.n	8002376 <queue_append_byte+0x8c>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	f44f 7280 	mov.w	r2, #256	; 0x100
 800234a:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002354:	2bff      	cmp	r3, #255	; 0xff
 8002356:	d005      	beq.n	8002364 <queue_append_byte+0x7a>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800235e:	3301      	adds	r3, #1
 8002360:	b29a      	uxth	r2, r3
 8002362:	e000      	b.n	8002366 <queue_append_byte+0x7c>
 8002364:	2200      	movs	r2, #0
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 800236c:	2301      	movs	r3, #1
 800236e:	723b      	strb	r3, [r7, #8]
 8002370:	68bb      	ldr	r3, [r7, #8]
 8002372:	60fb      	str	r3, [r7, #12]
 8002374:	e009      	b.n	800238a <queue_append_byte+0xa0>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 800237c:	3301      	adds	r3, #1
 800237e:	b29a      	uxth	r2, r3
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 8002386:	68bb      	ldr	r3, [r7, #8]
 8002388:	60fb      	str	r3, [r7, #12]
 800238a:	2300      	movs	r3, #0
 800238c:	89ba      	ldrh	r2, [r7, #12]
 800238e:	f362 030f 	bfi	r3, r2, #0, #16
 8002392:	89fa      	ldrh	r2, [r7, #14]
 8002394:	f362 431f 	bfi	r3, r2, #16, #16
 8002398:	4618      	mov	r0, r3
 800239a:	3710      	adds	r7, #16
 800239c:	46bd      	mov	sp, r7
 800239e:	bd80      	pop	{r7, pc}

080023a0 <queue_pop_element>:
 80023a0:	b480      	push	{r7}
 80023a2:	b085      	sub	sp, #20
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	d101      	bne.n	80023b6 <queue_pop_element+0x16>
 80023b2:	2300      	movs	r3, #0
 80023b4:	e024      	b.n	8002400 <queue_pop_element+0x60>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023bc:	461a      	mov	r2, r3
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	5c9b      	ldrb	r3, [r3, r2]
 80023c2:	73fb      	strb	r3, [r7, #15]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023ca:	3301      	adds	r3, #1
 80023cc:	b29a      	uxth	r2, r3
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80023da:	2bff      	cmp	r3, #255	; 0xff
 80023dc:	d803      	bhi.n	80023e6 <queue_pop_element+0x46>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	f8b3 2102 	ldrh.w	r2, [r3, #258]	; 0x102
 80023e4:	e000      	b.n	80023e8 <queue_pop_element+0x48>
 80023e6:	2200      	movs	r2, #0
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80023f4:	3b01      	subs	r3, #1
 80023f6:	b29a      	uxth	r2, r3
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 80023fe:	7bfb      	ldrb	r3, [r7, #15]
 8002400:	4618      	mov	r0, r3
 8002402:	3714      	adds	r7, #20
 8002404:	46bd      	mov	sp, r7
 8002406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240a:	4770      	bx	lr

0800240c <queue_pop_elements>:
 800240c:	b580      	push	{r7, lr}
 800240e:	b088      	sub	sp, #32
 8002410:	af00      	add	r7, sp, #0
 8002412:	60f8      	str	r0, [r7, #12]
 8002414:	60b9      	str	r1, [r7, #8]
 8002416:	4613      	mov	r3, r2
 8002418:	80fb      	strh	r3, [r7, #6]
 800241a:	88fb      	ldrh	r3, [r7, #6]
 800241c:	461a      	mov	r2, r3
 800241e:	68b9      	ldr	r1, [r7, #8]
 8002420:	68f8      	ldr	r0, [r7, #12]
 8002422:	f000 f82d 	bl	8002480 <queue_peek_number>
 8002426:	4603      	mov	r3, r0
 8002428:	61bb      	str	r3, [r7, #24]
 800242a:	8b7b      	ldrh	r3, [r7, #26]
 800242c:	4619      	mov	r1, r3
 800242e:	68f8      	ldr	r0, [r7, #12]
 8002430:	f000 f87c 	bl	800252c <queue_remove_number>
 8002434:	4603      	mov	r3, r0
 8002436:	617b      	str	r3, [r7, #20]
 8002438:	69bb      	ldr	r3, [r7, #24]
 800243a:	61fb      	str	r3, [r7, #28]
 800243c:	2300      	movs	r3, #0
 800243e:	8bba      	ldrh	r2, [r7, #28]
 8002440:	f362 030f 	bfi	r3, r2, #0, #16
 8002444:	8bfa      	ldrh	r2, [r7, #30]
 8002446:	f362 431f 	bfi	r3, r2, #16, #16
 800244a:	4618      	mov	r0, r3
 800244c:	3720      	adds	r7, #32
 800244e:	46bd      	mov	sp, r7
 8002450:	bd80      	pop	{r7, pc}

08002452 <queue_peek>:
 8002452:	b480      	push	{r7}
 8002454:	b083      	sub	sp, #12
 8002456:	af00      	add	r7, sp, #0
 8002458:	6078      	str	r0, [r7, #4]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002460:	2b00      	cmp	r3, #0
 8002462:	d006      	beq.n	8002472 <queue_peek+0x20>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800246a:	461a      	mov	r2, r3
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	5c9b      	ldrb	r3, [r3, r2]
 8002470:	e000      	b.n	8002474 <queue_peek+0x22>
 8002472:	2300      	movs	r3, #0
 8002474:	4618      	mov	r0, r3
 8002476:	370c      	adds	r7, #12
 8002478:	46bd      	mov	sp, r7
 800247a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247e:	4770      	bx	lr

08002480 <queue_peek_number>:
 8002480:	b580      	push	{r7, lr}
 8002482:	b088      	sub	sp, #32
 8002484:	af00      	add	r7, sp, #0
 8002486:	60f8      	str	r0, [r7, #12]
 8002488:	60b9      	str	r1, [r7, #8]
 800248a:	4613      	mov	r3, r2
 800248c:	80fb      	strh	r3, [r7, #6]
 800248e:	f00d f909 	bl	800f6a4 <HAL_GetTick>
 8002492:	4603      	mov	r3, r0
 8002494:	461a      	mov	r2, r3
 8002496:	68fb      	ldr	r3, [r7, #12]
 8002498:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800249c:	2300      	movs	r3, #0
 800249e:	753b      	strb	r3, [r7, #20]
 80024a0:	68fb      	ldr	r3, [r7, #12]
 80024a2:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024a6:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 80024aa:	83fb      	strh	r3, [r7, #30]
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80024b2:	88fa      	ldrh	r2, [r7, #6]
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d905      	bls.n	80024c4 <queue_peek_number+0x44>
 80024b8:	2303      	movs	r3, #3
 80024ba:	753b      	strb	r3, [r7, #20]
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80024c2:	80fb      	strh	r3, [r7, #6]
 80024c4:	8bfa      	ldrh	r2, [r7, #30]
 80024c6:	88fb      	ldrh	r3, [r7, #6]
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d30b      	bcc.n	80024e4 <queue_peek_number+0x64>
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024d2:	461a      	mov	r2, r3
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	4413      	add	r3, r2
 80024d8:	88fa      	ldrh	r2, [r7, #6]
 80024da:	4619      	mov	r1, r3
 80024dc:	68b8      	ldr	r0, [r7, #8]
 80024de:	f01d f8ea 	bl	801f6b6 <memcpy>
 80024e2:	e014      	b.n	800250e <queue_peek_number+0x8e>
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 80024ea:	461a      	mov	r2, r3
 80024ec:	68fb      	ldr	r3, [r7, #12]
 80024ee:	4413      	add	r3, r2
 80024f0:	8bfa      	ldrh	r2, [r7, #30]
 80024f2:	4619      	mov	r1, r3
 80024f4:	68b8      	ldr	r0, [r7, #8]
 80024f6:	f01d f8de 	bl	801f6b6 <memcpy>
 80024fa:	8bfb      	ldrh	r3, [r7, #30]
 80024fc:	68ba      	ldr	r2, [r7, #8]
 80024fe:	18d0      	adds	r0, r2, r3
 8002500:	68f9      	ldr	r1, [r7, #12]
 8002502:	88fa      	ldrh	r2, [r7, #6]
 8002504:	8bfb      	ldrh	r3, [r7, #30]
 8002506:	1ad3      	subs	r3, r2, r3
 8002508:	461a      	mov	r2, r3
 800250a:	f01d f8d4 	bl	801f6b6 <memcpy>
 800250e:	88fb      	ldrh	r3, [r7, #6]
 8002510:	82fb      	strh	r3, [r7, #22]
 8002512:	697b      	ldr	r3, [r7, #20]
 8002514:	61bb      	str	r3, [r7, #24]
 8002516:	2300      	movs	r3, #0
 8002518:	8b3a      	ldrh	r2, [r7, #24]
 800251a:	f362 030f 	bfi	r3, r2, #0, #16
 800251e:	8b7a      	ldrh	r2, [r7, #26]
 8002520:	f362 431f 	bfi	r3, r2, #16, #16
 8002524:	4618      	mov	r0, r3
 8002526:	3720      	adds	r7, #32
 8002528:	46bd      	mov	sp, r7
 800252a:	bd80      	pop	{r7, pc}

0800252c <queue_remove_number>:
 800252c:	b480      	push	{r7}
 800252e:	b085      	sub	sp, #20
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	460b      	mov	r3, r1
 8002536:	807b      	strh	r3, [r7, #2]
 8002538:	2300      	movs	r3, #0
 800253a:	723b      	strb	r3, [r7, #8]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002542:	887a      	ldrh	r2, [r7, #2]
 8002544:	429a      	cmp	r2, r3
 8002546:	d905      	bls.n	8002554 <queue_remove_number+0x28>
 8002548:	2303      	movs	r3, #3
 800254a:	723b      	strb	r3, [r7, #8]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 8002552:	807b      	strh	r3, [r7, #2]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	f8b3 2102 	ldrh.w	r2, [r3, #258]	; 0x102
 800255a:	887b      	ldrh	r3, [r7, #2]
 800255c:	4413      	add	r3, r2
 800255e:	b29a      	uxth	r2, r3
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	f8b3 2104 	ldrh.w	r2, [r3, #260]	; 0x104
 800256c:	887b      	ldrh	r3, [r7, #2]
 800256e:	1ad3      	subs	r3, r2, r3
 8002570:	b29a      	uxth	r2, r3
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	f8a3 2104 	strh.w	r2, [r3, #260]	; 0x104
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 800257e:	2bff      	cmp	r3, #255	; 0xff
 8002580:	d906      	bls.n	8002590 <queue_remove_number+0x64>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002588:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800258c:	b29b      	uxth	r3, r3
 800258e:	e002      	b.n	8002596 <queue_remove_number+0x6a>
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	f8b3 3102 	ldrh.w	r3, [r3, #258]	; 0x102
 8002596:	687a      	ldr	r2, [r7, #4]
 8002598:	f8a2 3102 	strh.w	r3, [r2, #258]	; 0x102
 800259c:	887b      	ldrh	r3, [r7, #2]
 800259e:	817b      	strh	r3, [r7, #10]
 80025a0:	68bb      	ldr	r3, [r7, #8]
 80025a2:	60fb      	str	r3, [r7, #12]
 80025a4:	2300      	movs	r3, #0
 80025a6:	89ba      	ldrh	r2, [r7, #12]
 80025a8:	f362 030f 	bfi	r3, r2, #0, #16
 80025ac:	89fa      	ldrh	r2, [r7, #14]
 80025ae:	f362 431f 	bfi	r3, r2, #16, #16
 80025b2:	4618      	mov	r0, r3
 80025b4:	3714      	adds	r7, #20
 80025b6:	46bd      	mov	sp, r7
 80025b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025bc:	4770      	bx	lr

080025be <queue_get_size>:
 80025be:	b480      	push	{r7}
 80025c0:	b083      	sub	sp, #12
 80025c2:	af00      	add	r7, sp, #0
 80025c4:	6078      	str	r0, [r7, #4]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
 80025cc:	4618      	mov	r0, r3
 80025ce:	370c      	adds	r7, #12
 80025d0:	46bd      	mov	sp, r7
 80025d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d6:	4770      	bx	lr

080025d8 <ref_process_data>:
	HEADER,
	DATA
};


ref_processing_status_t ref_process_data(queue_t *uart_queue, ref_msg_t *proc_msg){
 80025d8:	b590      	push	{r4, r7, lr}
 80025da:	b097      	sub	sp, #92	; 0x5c
 80025dc:	af00      	add	r7, sp, #0
 80025de:	6578      	str	r0, [r7, #84]	; 0x54
 80025e0:	6539      	str	r1, [r7, #80]	; 0x50
	static uint8_t state = 0;
	static ref_frame_header_t header;
	while(queue_get_size(uart_queue) > REF_HEADER_SIZE){
 80025e2:	e064      	b.n	80026ae <ref_process_data+0xd6>
		switch(state){
 80025e4:	4b37      	ldr	r3, [pc, #220]	; (80026c4 <ref_process_data+0xec>)
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d002      	beq.n	80025f2 <ref_process_data+0x1a>
 80025ec:	2b01      	cmp	r3, #1
 80025ee:	d037      	beq.n	8002660 <ref_process_data+0x88>
 80025f0:	e05d      	b.n	80026ae <ref_process_data+0xd6>
			case HEADER:
				if (queue_get_size(uart_queue)< REF_HEADER_SIZE+2 ){
 80025f2:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80025f4:	f7ff ffe3 	bl	80025be <queue_get_size>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b06      	cmp	r3, #6
 80025fc:	d801      	bhi.n	8002602 <ref_process_data+0x2a>
					return INSUFFICIENT_DATA;
 80025fe:	2302      	movs	r3, #2
 8002600:	e05c      	b.n	80026bc <ref_process_data+0xe4>
				}
				if (queue_peek(uart_queue) != 0xA5){
 8002602:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002604:	f7ff ff25 	bl	8002452 <queue_peek>
 8002608:	4603      	mov	r3, r0
 800260a:	2ba5      	cmp	r3, #165	; 0xa5
 800260c:	d003      	beq.n	8002616 <ref_process_data+0x3e>
					queue_pop_element(uart_queue);
 800260e:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002610:	f7ff fec6 	bl	80023a0 <queue_pop_element>
 8002614:	e04b      	b.n	80026ae <ref_process_data+0xd6>
				}else {
					if (queue_get_size(uart_queue) > REF_HEADER_SIZE+2){
 8002616:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002618:	f7ff ffd1 	bl	80025be <queue_get_size>
 800261c:	4603      	mov	r3, r0
 800261e:	2b07      	cmp	r3, #7
 8002620:	d91c      	bls.n	800265c <ref_process_data+0x84>
						header = ref_get_header(uart_queue);
 8002622:	4c29      	ldr	r4, [pc, #164]	; (80026c8 <ref_process_data+0xf0>)
 8002624:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002628:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800262a:	4618      	mov	r0, r3
 800262c:	f000 f84e 	bl	80026cc <ref_get_header>
 8002630:	4622      	mov	r2, r4
 8002632:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002636:	6818      	ldr	r0, [r3, #0]
 8002638:	6010      	str	r0, [r2, #0]
 800263a:	8899      	ldrh	r1, [r3, #4]
 800263c:	799b      	ldrb	r3, [r3, #6]
 800263e:	8091      	strh	r1, [r2, #4]
 8002640:	7193      	strb	r3, [r2, #6]
						if (header.cmd_id == 0xFFFF){
 8002642:	4b21      	ldr	r3, [pc, #132]	; (80026c8 <ref_process_data+0xf0>)
 8002644:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 8002648:	b29b      	uxth	r3, r3
 800264a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800264e:	4293      	cmp	r3, r2
 8002650:	d100      	bne.n	8002654 <ref_process_data+0x7c>
							//invalid data, continue checking
							break;
 8002652:	e02c      	b.n	80026ae <ref_process_data+0xd6>
						}
						//header is valid, remove header bytes and start finding data
						state = DATA;
 8002654:	4b1b      	ldr	r3, [pc, #108]	; (80026c4 <ref_process_data+0xec>)
 8002656:	2201      	movs	r2, #1
 8002658:	701a      	strb	r2, [r3, #0]
 800265a:	e028      	b.n	80026ae <ref_process_data+0xd6>
					} else {
						return INSUFFICIENT_DATA;
 800265c:	2302      	movs	r3, #2
 800265e:	e02d      	b.n	80026bc <ref_process_data+0xe4>
					}
				}
				break;
			case DATA:
				//wait until enough data to fill data
				if (queue_get_size(uart_queue) > header.data_length+4+REF_HEADER_SIZE){
 8002660:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8002662:	f7ff ffac 	bl	80025be <queue_get_size>
 8002666:	4603      	mov	r3, r0
 8002668:	461a      	mov	r2, r3
 800266a:	4b17      	ldr	r3, [pc, #92]	; (80026c8 <ref_process_data+0xf0>)
 800266c:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002670:	b29b      	uxth	r3, r3
 8002672:	3309      	adds	r3, #9
 8002674:	429a      	cmp	r2, r3
 8002676:	dd18      	ble.n	80026aa <ref_process_data+0xd2>
					state = HEADER;
 8002678:	4b12      	ldr	r3, [pc, #72]	; (80026c4 <ref_process_data+0xec>)
 800267a:	2200      	movs	r2, #0
 800267c:	701a      	strb	r2, [r3, #0]
					*proc_msg = ref_get_msg(header,uart_queue);
 800267e:	6d3c      	ldr	r4, [r7, #80]	; 0x50
 8002680:	4638      	mov	r0, r7
 8002682:	4a11      	ldr	r2, [pc, #68]	; (80026c8 <ref_process_data+0xf0>)
 8002684:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002686:	ca06      	ldmia	r2, {r1, r2}
 8002688:	f000 f898 	bl	80027bc <ref_get_msg>
 800268c:	4620      	mov	r0, r4
 800268e:	463b      	mov	r3, r7
 8002690:	2242      	movs	r2, #66	; 0x42
 8002692:	4619      	mov	r1, r3
 8002694:	f01d f80f 	bl	801f6b6 <memcpy>
					if (proc_msg->cmd_id!= 0xFFFF){
 8002698:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800269a:	881b      	ldrh	r3, [r3, #0]
 800269c:	b29b      	uxth	r3, r3
 800269e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80026a2:	4293      	cmp	r3, r2
 80026a4:	d003      	beq.n	80026ae <ref_process_data+0xd6>
						return PROCESS_SUCCESS;
 80026a6:	2300      	movs	r3, #0
 80026a8:	e008      	b.n	80026bc <ref_process_data+0xe4>
					} else {
						break;
					}
				} else{
					return INSUFFICIENT_DATA;
 80026aa:	2302      	movs	r3, #2
 80026ac:	e006      	b.n	80026bc <ref_process_data+0xe4>
	while(queue_get_size(uart_queue) > REF_HEADER_SIZE){
 80026ae:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80026b0:	f7ff ff85 	bl	80025be <queue_get_size>
 80026b4:	4603      	mov	r3, r0
 80026b6:	2b05      	cmp	r3, #5
 80026b8:	d894      	bhi.n	80025e4 <ref_process_data+0xc>
				}
				break;
			}
	}
	return INSUFFICIENT_DATA;
 80026ba:	2302      	movs	r3, #2
}
 80026bc:	4618      	mov	r0, r3
 80026be:	375c      	adds	r7, #92	; 0x5c
 80026c0:	46bd      	mov	sp, r7
 80026c2:	bd90      	pop	{r4, r7, pc}
 80026c4:	200003d8 	.word	0x200003d8
 80026c8:	200003dc 	.word	0x200003dc

080026cc <ref_get_header>:

ref_frame_header_t ref_get_header(queue_t *data_buffer){
 80026cc:	b580      	push	{r7, lr}
 80026ce:	b088      	sub	sp, #32
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	6078      	str	r0, [r7, #4]
 80026d4:	6039      	str	r1, [r7, #0]
	ref_frame_header_t ret_header;
	//+2 for cmd ID
	uint8_t temp_data[REF_HEADER_SIZE+2];
	queue_peek_number(data_buffer, temp_data, 7);
 80026d6:	f107 030c 	add.w	r3, r7, #12
 80026da:	2207      	movs	r2, #7
 80026dc:	4619      	mov	r1, r3
 80026de:	6838      	ldr	r0, [r7, #0]
 80026e0:	f7ff fece 	bl	8002480 <queue_peek_number>
	ret_header.start_frame = temp_data[0];
 80026e4:	7b3b      	ldrb	r3, [r7, #12]
 80026e6:	753b      	strb	r3, [r7, #20]
	if (ret_header.start_frame!= 0xA5){
 80026e8:	7d3b      	ldrb	r3, [r7, #20]
 80026ea:	2ba5      	cmp	r3, #165	; 0xa5
 80026ec:	d013      	beq.n	8002716 <ref_get_header+0x4a>
		queue_pop_element(data_buffer);
 80026ee:	6838      	ldr	r0, [r7, #0]
 80026f0:	f7ff fe56 	bl	80023a0 <queue_pop_element>
		ret_header.cmd_id=0xFFFF;
 80026f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026f8:	767b      	strb	r3, [r7, #25]
 80026fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80026fe:	76bb      	strb	r3, [r7, #26]
		return ret_header;
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	461a      	mov	r2, r3
 8002704:	f107 0314 	add.w	r3, r7, #20
 8002708:	6818      	ldr	r0, [r3, #0]
 800270a:	6010      	str	r0, [r2, #0]
 800270c:	8899      	ldrh	r1, [r3, #4]
 800270e:	799b      	ldrb	r3, [r3, #6]
 8002710:	8091      	strh	r1, [r2, #4]
 8002712:	7193      	strb	r3, [r2, #6]
 8002714:	e04d      	b.n	80027b2 <ref_get_header+0xe6>
	}

	ret_header.data_length = ((uint16_t) temp_data[2] << 8 | temp_data[1]);
 8002716:	7bbb      	ldrb	r3, [r7, #14]
 8002718:	021b      	lsls	r3, r3, #8
 800271a:	b21a      	sxth	r2, r3
 800271c:	7b7b      	ldrb	r3, [r7, #13]
 800271e:	b21b      	sxth	r3, r3
 8002720:	4313      	orrs	r3, r2
 8002722:	b21b      	sxth	r3, r3
 8002724:	b29b      	uxth	r3, r3
 8002726:	f8a7 3015 	strh.w	r3, [r7, #21]
	ret_header.seq = temp_data[3];
 800272a:	7bfb      	ldrb	r3, [r7, #15]
 800272c:	75fb      	strb	r3, [r7, #23]
	ret_header.crc = temp_data[4];
 800272e:	7c3b      	ldrb	r3, [r7, #16]
 8002730:	763b      	strb	r3, [r7, #24]
	int crc_check = verify_CRC8_check_sum(temp_data, 5);
 8002732:	f107 030c 	add.w	r3, r7, #12
 8002736:	2105      	movs	r1, #5
 8002738:	4618      	mov	r0, r3
 800273a:	f7fe fc7f 	bl	800103c <verify_CRC8_check_sum>
 800273e:	4603      	mov	r3, r0
 8002740:	61fb      	str	r3, [r7, #28]
	ret_header.cmd_id = (temp_data[6]) << 8 | temp_data[5];
 8002742:	7cbb      	ldrb	r3, [r7, #18]
 8002744:	021b      	lsls	r3, r3, #8
 8002746:	b21a      	sxth	r2, r3
 8002748:	7c7b      	ldrb	r3, [r7, #17]
 800274a:	b21b      	sxth	r3, r3
 800274c:	4313      	orrs	r3, r2
 800274e:	b21b      	sxth	r3, r3
 8002750:	b29b      	uxth	r3, r3
 8002752:	f8a7 3019 	strh.w	r3, [r7, #25]
	if (!crc_check || ret_header.data_length > TQUEUE_SIZE || ret_header.cmd_id > 0x305) {
 8002756:	69fb      	ldr	r3, [r7, #28]
 8002758:	2b00      	cmp	r3, #0
 800275a:	d00c      	beq.n	8002776 <ref_get_header+0xaa>
 800275c:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 8002760:	b29b      	uxth	r3, r3
 8002762:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002766:	d806      	bhi.n	8002776 <ref_get_header+0xaa>
 8002768:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 800276c:	b29b      	uxth	r3, r3
 800276e:	f240 3205 	movw	r2, #773	; 0x305
 8002772:	4293      	cmp	r3, r2
 8002774:	d913      	bls.n	800279e <ref_get_header+0xd2>
		ret_header.cmd_id=0xFFFF;
 8002776:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800277a:	767b      	strb	r3, [r7, #25]
 800277c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002780:	76bb      	strb	r3, [r7, #26]
		queue_pop_element(data_buffer);
 8002782:	6838      	ldr	r0, [r7, #0]
 8002784:	f7ff fe0c 	bl	80023a0 <queue_pop_element>
		return ret_header;
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	461a      	mov	r2, r3
 800278c:	f107 0314 	add.w	r3, r7, #20
 8002790:	6818      	ldr	r0, [r3, #0]
 8002792:	6010      	str	r0, [r2, #0]
 8002794:	8899      	ldrh	r1, [r3, #4]
 8002796:	799b      	ldrb	r3, [r3, #6]
 8002798:	8091      	strh	r1, [r2, #4]
 800279a:	7193      	strb	r3, [r2, #6]
 800279c:	e009      	b.n	80027b2 <ref_get_header+0xe6>
	}
//	queue_remove_number(data_buffer, REF_HEADER_SIZE);
	return ret_header;
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	461a      	mov	r2, r3
 80027a2:	f107 0314 	add.w	r3, r7, #20
 80027a6:	6818      	ldr	r0, [r3, #0]
 80027a8:	6010      	str	r0, [r2, #0]
 80027aa:	8899      	ldrh	r1, [r3, #4]
 80027ac:	799b      	ldrb	r3, [r3, #6]
 80027ae:	8091      	strh	r1, [r2, #4]
 80027b0:	7193      	strb	r3, [r2, #6]
}
 80027b2:	6878      	ldr	r0, [r7, #4]
 80027b4:	3720      	adds	r7, #32
 80027b6:	46bd      	mov	sp, r7
 80027b8:	bd80      	pop	{r7, pc}
	...

080027bc <ref_get_msg>:



ref_msg_t ref_get_msg(ref_frame_header_t header,queue_t *uart_queue) {
 80027bc:	b5b0      	push	{r4, r5, r7, lr}
 80027be:	b0d8      	sub	sp, #352	; 0x160
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	f507 74b0 	add.w	r4, r7, #352	; 0x160
 80027c6:	f5a4 74aa 	sub.w	r4, r4, #340	; 0x154
 80027ca:	6020      	str	r0, [r4, #0]
 80027cc:	f507 70b0 	add.w	r0, r7, #352	; 0x160
 80027d0:	f5a0 70ae 	sub.w	r0, r0, #348	; 0x15c
 80027d4:	e880 0006 	stmia.w	r0, {r1, r2}
 80027d8:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 80027dc:	f5a2 72b0 	sub.w	r2, r2, #352	; 0x160
 80027e0:	6013      	str	r3, [r2, #0]
	uint8_t temp_buffer[TQUEUE_SIZE];
	ref_msg_t buffer_msg;
	//+ 2 for CRC16
	queue_pop_elements(uart_queue, temp_buffer, header.data_length+REF_HEADER_SIZE+4);
 80027e2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80027e6:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 80027ea:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80027ee:	b29b      	uxth	r3, r3
 80027f0:	3309      	adds	r3, #9
 80027f2:	b29a      	uxth	r2, r3
 80027f4:	f107 0158 	add.w	r1, r7, #88	; 0x58
 80027f8:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80027fc:	f5a3 73b0 	sub.w	r3, r3, #352	; 0x160
 8002800:	6818      	ldr	r0, [r3, #0]
 8002802:	f7ff fe03 	bl	800240c <queue_pop_elements>

	uint32_t crc_test = verify_CRC16_check_sum(temp_buffer, header.data_length+REF_HEADER_SIZE+4);
 8002806:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800280a:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 800280e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002812:	b29b      	uxth	r3, r3
 8002814:	3309      	adds	r3, #9
 8002816:	461a      	mov	r2, r3
 8002818:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800281c:	4611      	mov	r1, r2
 800281e:	4618      	mov	r0, r3
 8002820:	f7fe fc80 	bl	8001124 <verify_CRC16_check_sum>
 8002824:	f8c7 015c 	str.w	r0, [r7, #348]	; 0x15c
	if (!crc_test){
 8002828:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 800282c:	2b00      	cmp	r3, #0
 800282e:	d116      	bne.n	800285e <ref_get_msg+0xa2>
		buffer_msg.cmd_id = 0xFFFF;
 8002830:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002834:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002838:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800283c:	801a      	strh	r2, [r3, #0]
		return buffer_msg;
 800283e:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002842:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002846:	681a      	ldr	r2, [r3, #0]
 8002848:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800284c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002850:	4610      	mov	r0, r2
 8002852:	4619      	mov	r1, r3
 8002854:	2342      	movs	r3, #66	; 0x42
 8002856:	461a      	mov	r2, r3
 8002858:	f01c ff2d 	bl	801f6b6 <memcpy>
 800285c:	e19f      	b.n	8002b9e <ref_get_msg+0x3e2>
	}
	//shift 2 bytes to the right to get pointer to the actual start of data
	uint8_t* data_buffer = temp_buffer+2+REF_HEADER_SIZE;
 800285e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8002862:	3307      	adds	r3, #7
 8002864:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
	buffer_msg.cmd_id = header.cmd_id;
 8002868:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800286c:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002870:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 8002874:	b29a      	uxth	r2, r3
 8002876:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800287a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 800287e:	801a      	strh	r2, [r3, #0]
	switch (header.cmd_id) {
 8002880:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002884:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8002888:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800288c:	b29b      	uxth	r3, r3
 800288e:	f240 3202 	movw	r2, #770	; 0x302
 8002892:	4293      	cmp	r3, r2
 8002894:	f000 815c 	beq.w	8002b50 <ref_get_msg+0x394>
 8002898:	f240 3202 	movw	r2, #770	; 0x302
 800289c:	4293      	cmp	r3, r2
 800289e:	f300 8167 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028a2:	f240 3201 	movw	r2, #769	; 0x301
 80028a6:	4293      	cmp	r3, r2
 80028a8:	f000 8146 	beq.w	8002b38 <ref_get_msg+0x37c>
 80028ac:	f240 3201 	movw	r2, #769	; 0x301
 80028b0:	4293      	cmp	r3, r2
 80028b2:	f300 815d 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028b6:	f240 220a 	movw	r2, #522	; 0x20a
 80028ba:	4293      	cmp	r3, r2
 80028bc:	f300 8158 	bgt.w	8002b70 <ref_get_msg+0x3b4>
 80028c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80028c4:	dc04      	bgt.n	80028d0 <ref_get_msg+0x114>
 80028c6:	2b04      	cmp	r3, #4
 80028c8:	dc40      	bgt.n	800294c <ref_get_msg+0x190>
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	dc2e      	bgt.n	800292c <ref_get_msg+0x170>
 80028ce:	e14f      	b.n	8002b70 <ref_get_msg+0x3b4>
 80028d0:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 80028d4:	2b09      	cmp	r3, #9
 80028d6:	f200 814b 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 80028da:	a201      	add	r2, pc, #4	; (adr r2, 80028e0 <ref_get_msg+0x124>)
 80028dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028e0:	08002a35 	.word	0x08002a35
 80028e4:	08002a65 	.word	0x08002a65
 80028e8:	08002a85 	.word	0x08002a85
 80028ec:	08002aa5 	.word	0x08002aa5
 80028f0:	08002ab7 	.word	0x08002ab7
 80028f4:	08002ac9 	.word	0x08002ac9
 80028f8:	08002adb 	.word	0x08002adb
 80028fc:	08002af7 	.word	0x08002af7
 8002900:	08002b0f 	.word	0x08002b0f
 8002904:	08002b25 	.word	0x08002b25
 8002908:	f2a3 1301 	subw	r3, r3, #257	; 0x101
 800290c:	2b04      	cmp	r3, #4
 800290e:	f200 812f 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 8002912:	a201      	add	r2, pc, #4	; (adr r2, 8002918 <ref_get_msg+0x15c>)
 8002914:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002918:	080029cb 	.word	0x080029cb
 800291c:	080029e1 	.word	0x080029e1
 8002920:	080029f7 	.word	0x080029f7
 8002924:	08002a0f 	.word	0x08002a0f
 8002928:	08002a23 	.word	0x08002a23
 800292c:	3b01      	subs	r3, #1
 800292e:	2b03      	cmp	r3, #3
 8002930:	f200 811e 	bhi.w	8002b70 <ref_get_msg+0x3b4>
 8002934:	a201      	add	r2, pc, #4	; (adr r2, 800293c <ref_get_msg+0x180>)
 8002936:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800293a:	bf00      	nop
 800293c:	0800295d 	.word	0x0800295d
 8002940:	08002975 	.word	0x08002975
 8002944:	08002987 	.word	0x08002987
 8002948:	080029b3 	.word	0x080029b3
 800294c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
 8002950:	f280 810e 	bge.w	8002b70 <ref_get_msg+0x3b4>
 8002954:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002958:	dcd6      	bgt.n	8002908 <ref_get_msg+0x14c>
 800295a:	e109      	b.n	8002b70 <ref_get_msg+0x3b4>
	case REF_GAME_STATE_CMD_ID:
		memcpy(&buffer_msg.data.game_state, 	(data_buffer), sizeof(ref_game_state_t));
 800295c:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002960:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002964:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002968:	3302      	adds	r3, #2
 800296a:	8811      	ldrh	r1, [r2, #0]
 800296c:	7892      	ldrb	r2, [r2, #2]
 800296e:	8019      	strh	r1, [r3, #0]
 8002970:	709a      	strb	r2, [r3, #2]
		break;
 8002972:	e105      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002974:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002978:	781a      	ldrb	r2, [r3, #0]
	case REF_GAME_RESULT_ID:
		memcpy(&buffer_msg.data.game_result, 	(data_buffer), sizeof(ref_game_result_t));
 800297a:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800297e:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002982:	709a      	strb	r2, [r3, #2]
		break;
 8002984:	e0fc      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_HP_CMD_ID:
		memcpy(&buffer_msg.data.robot_hp, 		(data_buffer), sizeof(ref_game_robot_HP_t));
 8002986:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 800298a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 800298e:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002992:	3302      	adds	r3, #2
 8002994:	6814      	ldr	r4, [r2, #0]
 8002996:	6850      	ldr	r0, [r2, #4]
 8002998:	6891      	ldr	r1, [r2, #8]
 800299a:	68d5      	ldr	r5, [r2, #12]
 800299c:	601c      	str	r4, [r3, #0]
 800299e:	6058      	str	r0, [r3, #4]
 80029a0:	6099      	str	r1, [r3, #8]
 80029a2:	60dd      	str	r5, [r3, #12]
 80029a4:	6914      	ldr	r4, [r2, #16]
 80029a6:	6950      	ldr	r0, [r2, #20]
 80029a8:	6991      	ldr	r1, [r2, #24]
 80029aa:	611c      	str	r4, [r3, #16]
 80029ac:	6158      	str	r0, [r3, #20]
 80029ae:	6199      	str	r1, [r3, #24]
		break;
 80029b0:	e0e6      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_DART_LAUNCH_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.dart_status, 	(data_buffer), sizeof(ref_dart_status_t));
 80029b2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029b6:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029ba:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 80029be:	3302      	adds	r3, #2
 80029c0:	8811      	ldrh	r1, [r2, #0]
 80029c2:	7892      	ldrb	r2, [r2, #2]
 80029c4:	8019      	strh	r1, [r3, #0]
 80029c6:	709a      	strb	r2, [r3, #2]
		break;
 80029c8:	e0da      	b.n	8002b80 <ref_get_msg+0x3c4>
 80029ca:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	461a      	mov	r2, r3
	case REF_GAME_EVENT_CMD_ID:
		memcpy(&buffer_msg.data.game_event, 	(data_buffer), sizeof(ref_game_event_data_t));
 80029d2:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029d6:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029da:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 80029de:	e0cf      	b.n	8002b80 <ref_get_msg+0x3c4>
 80029e0:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	461a      	mov	r2, r3
	case REF_SUPPLIER_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.projectile_supply_state, (data_buffer),sizeof(ref_supply_projectile_data_t));
 80029e8:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029ec:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029f0:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 80029f4:	e0c4      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_SUPPLIER_BOOKING_CMD_ID:
		memcpy(&buffer_msg.data.projectile_supply_queue, (data_buffer),sizeof(ref_supply_projectile_booking_t));
 80029f6:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 80029fa:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 80029fe:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a02:	3302      	adds	r3, #2
 8002a04:	8811      	ldrh	r1, [r2, #0]
 8002a06:	7892      	ldrb	r2, [r2, #2]
 8002a08:	8019      	strh	r1, [r3, #0]
 8002a0a:	709a      	strb	r2, [r3, #2]
		break;
 8002a0c:	e0b8      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002a0e:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002a12:	881b      	ldrh	r3, [r3, #0]
 8002a14:	b29a      	uxth	r2, r3
	case REF_FOUL_CMD_ID:
		memcpy(&buffer_msg.data.referee_warning,(data_buffer), sizeof(ref_referee_warning_t));
 8002a16:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a1a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a1e:	805a      	strh	r2, [r3, #2]
		break;
 8002a20:	e0ae      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002a22:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002a26:	781a      	ldrb	r2, [r3, #0]
	case REF_DART_COOLDOWN_CMD_ID:
		memcpy(&buffer_msg.data.dart_cooldown, 	(data_buffer), sizeof(ref_dart_cooldown_t));
 8002a28:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a2c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a30:	709a      	strb	r2, [r3, #2]
		break;
 8002a32:	e0a5      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_state, 	(data_buffer), sizeof(ref_game_robot_data_t));
 8002a34:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a38:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a3c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a40:	3302      	adds	r3, #2
 8002a42:	6810      	ldr	r0, [r2, #0]
 8002a44:	6851      	ldr	r1, [r2, #4]
 8002a46:	6895      	ldr	r5, [r2, #8]
 8002a48:	68d4      	ldr	r4, [r2, #12]
 8002a4a:	6018      	str	r0, [r3, #0]
 8002a4c:	6059      	str	r1, [r3, #4]
 8002a4e:	609d      	str	r5, [r3, #8]
 8002a50:	60dc      	str	r4, [r3, #12]
 8002a52:	6910      	ldr	r0, [r2, #16]
 8002a54:	6951      	ldr	r1, [r2, #20]
 8002a56:	6118      	str	r0, [r3, #16]
 8002a58:	6159      	str	r1, [r3, #20]
 8002a5a:	8b11      	ldrh	r1, [r2, #24]
 8002a5c:	7e92      	ldrb	r2, [r2, #26]
 8002a5e:	8319      	strh	r1, [r3, #24]
 8002a60:	769a      	strb	r2, [r3, #26]
		break;
 8002a62:	e08d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_POWER_DATA_CMD_ID:
		memcpy(&buffer_msg.data.power_data, 	(data_buffer), sizeof(ref_robot_power_data_t));
 8002a64:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a68:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a6c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a70:	3302      	adds	r3, #2
 8002a72:	6814      	ldr	r4, [r2, #0]
 8002a74:	6850      	ldr	r0, [r2, #4]
 8002a76:	6891      	ldr	r1, [r2, #8]
 8002a78:	601c      	str	r4, [r3, #0]
 8002a7a:	6058      	str	r0, [r3, #4]
 8002a7c:	6099      	str	r1, [r3, #8]
 8002a7e:	8992      	ldrh	r2, [r2, #12]
 8002a80:	819a      	strh	r2, [r3, #12]
		break;
 8002a82:	e07d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_POS_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_pos, 		(data_buffer), sizeof(ref_game_robot_pos_t));
 8002a84:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002a88:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002a8c:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002a90:	3302      	adds	r3, #2
 8002a92:	6814      	ldr	r4, [r2, #0]
 8002a94:	6850      	ldr	r0, [r2, #4]
 8002a96:	6891      	ldr	r1, [r2, #8]
 8002a98:	68d2      	ldr	r2, [r2, #12]
 8002a9a:	601c      	str	r4, [r3, #0]
 8002a9c:	6058      	str	r0, [r3, #4]
 8002a9e:	6099      	str	r1, [r3, #8]
 8002aa0:	60da      	str	r2, [r3, #12]
		break;
 8002aa2:	e06d      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002aa4:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002aa8:	781a      	ldrb	r2, [r3, #0]
	case REF_ROBOT_BUFF_DATA_CMD_ID:
		memcpy(&buffer_msg.data.robot_buff, 	(data_buffer), sizeof(ref_buff_data_t));
 8002aaa:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002aae:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ab2:	709a      	strb	r2, [r3, #2]
		break;
 8002ab4:	e064      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002ab6:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002aba:	781a      	ldrb	r2, [r3, #0]
	case REF_AERIAL_ENERGY_DATA_CMD_ID:
		memcpy(&buffer_msg.data.aerial_energy, 	(data_buffer), sizeof(ref_aerial_robot_energy_t));
 8002abc:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ac4:	709a      	strb	r2, [r3, #2]
		break;
 8002ac6:	e05b      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002ac8:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002acc:	781a      	ldrb	r2, [r3, #0]
	case REF_ROBOT_DMG_DATA_CMD_ID:
		memcpy(&buffer_msg.data.damage_data, 	(data_buffer), sizeof(ref_robot_dmg_t));
 8002ace:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ad2:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ad6:	709a      	strb	r2, [r3, #2]
		break;
 8002ad8:	e052      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_SHOOT_DATA_CMD_ID:
		memcpy(&buffer_msg.data.shooting_data, 	(data_buffer), sizeof(ref_shoot_data_t));
 8002ada:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ade:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002ae2:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002ae6:	3302      	adds	r3, #2
 8002ae8:	6811      	ldr	r1, [r2, #0]
 8002aea:	6019      	str	r1, [r3, #0]
 8002aec:	8891      	ldrh	r1, [r2, #4]
 8002aee:	7992      	ldrb	r2, [r2, #6]
 8002af0:	8099      	strh	r1, [r3, #4]
 8002af2:	719a      	strb	r2, [r3, #6]
		break;
 8002af4:	e044      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_MAGAZINE_DATA_CMD_ID:
		memcpy(&buffer_msg.data.magazine_data, 	(data_buffer), sizeof(ref_magazine_data_t));
 8002af6:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002afa:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002afe:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b02:	3302      	adds	r3, #2
 8002b04:	6811      	ldr	r1, [r2, #0]
 8002b06:	6019      	str	r1, [r3, #0]
 8002b08:	8892      	ldrh	r2, [r2, #4]
 8002b0a:	809a      	strh	r2, [r3, #4]
		break;
 8002b0c:	e038      	b.n	8002b80 <ref_get_msg+0x3c4>
 8002b0e:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	461a      	mov	r2, r3
	case REF_ROBOT_RFID_BUFF_DATA_CMD_ID:
		memcpy(&buffer_msg.data.rfid_buff, 		(data_buffer), sizeof(ref_rfid_status_t));
 8002b16:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b1a:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b1e:	f8c3 2002 	str.w	r2, [r3, #2]
		break;
 8002b22:	e02d      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_DART_STATUS_CMD_ID:
		memcpy(&buffer_msg.data.dart_cmd, 		(data_buffer), sizeof(ref_dart_status_t));
 8002b24:	f107 0314 	add.w	r3, r7, #20
 8002b28:	3302      	adds	r3, #2
 8002b2a:	2203      	movs	r2, #3
 8002b2c:	f8d7 1158 	ldr.w	r1, [r7, #344]	; 0x158
 8002b30:	4618      	mov	r0, r3
 8002b32:	f01c fdc0 	bl	801f6b6 <memcpy>
		break;
 8002b36:	e023      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_ROBOT_COMMS_CMD_ID:
		memcpy(&buffer_msg.data.robot_comms, 	(data_buffer), sizeof(ref_inter_robot_data_t));
 8002b38:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b3c:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b40:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b44:	3302      	adds	r3, #2
 8002b46:	6811      	ldr	r1, [r2, #0]
 8002b48:	6019      	str	r1, [r3, #0]
 8002b4a:	8892      	ldrh	r2, [r2, #4]
 8002b4c:	809a      	strh	r2, [r3, #4]
		break;
 8002b4e:	e017      	b.n	8002b80 <ref_get_msg+0x3c4>
	case REF_CUSTOM_DATA_CMD_ID:
		memcpy(&buffer_msg.data.custom_data, 	(data_buffer), sizeof(ref_custom_data_t));
 8002b50:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b54:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b58:	f8d7 2158 	ldr.w	r2, [r7, #344]	; 0x158
 8002b5c:	3302      	adds	r3, #2
 8002b5e:	6814      	ldr	r4, [r2, #0]
 8002b60:	6850      	ldr	r0, [r2, #4]
 8002b62:	6891      	ldr	r1, [r2, #8]
 8002b64:	601c      	str	r4, [r3, #0]
 8002b66:	6058      	str	r0, [r3, #4]
 8002b68:	6099      	str	r1, [r3, #8]
 8002b6a:	7b12      	ldrb	r2, [r2, #12]
 8002b6c:	731a      	strb	r2, [r3, #12]
		break;
 8002b6e:	e007      	b.n	8002b80 <ref_get_msg+0x3c4>
	default:
		buffer_msg.cmd_id = 0xFFFF;
 8002b70:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b74:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b78:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002b7c:	801a      	strh	r2, [r3, #0]
		break;
 8002b7e:	bf00      	nop
	}
	//remove cmd id + data
	return buffer_msg;
 8002b80:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b84:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002b88:	681a      	ldr	r2, [r3, #0]
 8002b8a:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002b8e:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8002b92:	4610      	mov	r0, r2
 8002b94:	4619      	mov	r1, r3
 8002b96:	2342      	movs	r3, #66	; 0x42
 8002b98:	461a      	mov	r2, r3
 8002b9a:	f01c fd8c 	bl	801f6b6 <memcpy>
}
 8002b9e:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 8002ba2:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 8002ba6:	6818      	ldr	r0, [r3, #0]
 8002ba8:	f507 77b0 	add.w	r7, r7, #352	; 0x160
 8002bac:	46bd      	mov	sp, r7
 8002bae:	bdb0      	pop	{r4, r5, r7, pc}

08002bb0 <init_xvr_usart>:
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b082      	sub	sp, #8
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	6078      	str	r0, [r7, #4]
 8002bb8:	2300      	movs	r3, #0
 8002bba:	220f      	movs	r2, #15
 8002bbc:	6879      	ldr	r1, [r7, #4]
 8002bbe:	4803      	ldr	r0, [pc, #12]	; (8002bcc <init_xvr_usart+0x1c>)
 8002bc0:	f000 f810 	bl	8002be4 <xvr_usart_start>
 8002bc4:	bf00      	nop
 8002bc6:	3708      	adds	r7, #8
 8002bc8:	46bd      	mov	sp, r7
 8002bca:	bd80      	pop	{r7, pc}
 8002bcc:	2000165c 	.word	0x2000165c

08002bd0 <xvr_full_cplt_isr>:
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	b082      	sub	sp, #8
 8002bd4:	af00      	add	r7, sp, #0
 8002bd6:	6078      	str	r0, [r7, #4]
 8002bd8:	f00b f950 	bl	800de7c <sbc_process_data>
 8002bdc:	bf00      	nop
 8002bde:	3708      	adds	r7, #8
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}

08002be4 <xvr_usart_start>:
 8002be4:	b580      	push	{r7, lr}
 8002be6:	b086      	sub	sp, #24
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	60f8      	str	r0, [r7, #12]
 8002bec:	60b9      	str	r1, [r7, #8]
 8002bee:	603b      	str	r3, [r7, #0]
 8002bf0:	4613      	mov	r3, r2
 8002bf2:	80fb      	strh	r3, [r7, #6]
 8002bf4:	4a3a      	ldr	r2, [pc, #232]	; (8002ce0 <xvr_usart_start+0xfc>)
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	6013      	str	r3, [r2, #0]
 8002bfa:	4b39      	ldr	r3, [pc, #228]	; (8002ce0 <xvr_usart_start+0xfc>)
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f7ff fb42 	bl	8002288 <queue_init>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002c0a:	b2db      	uxtb	r3, r3
 8002c0c:	2b20      	cmp	r3, #32
 8002c0e:	d161      	bne.n	8002cd4 <xvr_usart_start+0xf0>
 8002c10:	68bb      	ldr	r3, [r7, #8]
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d002      	beq.n	8002c1c <xvr_usart_start+0x38>
 8002c16:	88fb      	ldrh	r3, [r7, #6]
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d101      	bne.n	8002c20 <xvr_usart_start+0x3c>
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	e05a      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002c20:	68fb      	ldr	r3, [r7, #12]
 8002c22:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c26:	2b01      	cmp	r3, #1
 8002c28:	d101      	bne.n	8002c2e <xvr_usart_start+0x4a>
 8002c2a:	2302      	movs	r3, #2
 8002c2c:	e053      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	2201      	movs	r2, #1
 8002c32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c36:	68ba      	ldr	r2, [r7, #8]
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	629a      	str	r2, [r3, #40]	; 0x28
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	88fa      	ldrh	r2, [r7, #6]
 8002c40:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002c42:	68fb      	ldr	r3, [r7, #12]
 8002c44:	2200      	movs	r2, #0
 8002c46:	641a      	str	r2, [r3, #64]	; 0x40
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	2222      	movs	r2, #34	; 0x22
 8002c4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	2201      	movs	r2, #1
 8002c54:	631a      	str	r2, [r3, #48]	; 0x30
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c5a:	4a22      	ldr	r2, [pc, #136]	; (8002ce4 <xvr_usart_start+0x100>)
 8002c5c:	63da      	str	r2, [r3, #60]	; 0x3c
 8002c5e:	68fb      	ldr	r3, [r7, #12]
 8002c60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c62:	2200      	movs	r2, #0
 8002c64:	651a      	str	r2, [r3, #80]	; 0x50
 8002c66:	f107 0308 	add.w	r3, r7, #8
 8002c6a:	617b      	str	r3, [r7, #20]
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	3304      	adds	r3, #4
 8002c76:	4619      	mov	r1, r3
 8002c78:	697b      	ldr	r3, [r7, #20]
 8002c7a:	681a      	ldr	r2, [r3, #0]
 8002c7c:	88fb      	ldrh	r3, [r7, #6]
 8002c7e:	f00d ffb3 	bl	8010be8 <HAL_DMA_Start_IT>
 8002c82:	2300      	movs	r3, #0
 8002c84:	613b      	str	r3, [r7, #16]
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	613b      	str	r3, [r7, #16]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	685b      	ldr	r3, [r3, #4]
 8002c94:	613b      	str	r3, [r7, #16]
 8002c96:	693b      	ldr	r3, [r7, #16]
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	68da      	ldr	r2, [r3, #12]
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002cae:	60da      	str	r2, [r3, #12]
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	695a      	ldr	r2, [r3, #20]
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f042 0201 	orr.w	r2, r2, #1
 8002cbe:	615a      	str	r2, [r3, #20]
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	695a      	ldr	r2, [r3, #20]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002cce:	615a      	str	r2, [r3, #20]
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	e000      	b.n	8002cd6 <xvr_usart_start+0xf2>
 8002cd4:	2302      	movs	r3, #2
 8002cd6:	4618      	mov	r0, r3
 8002cd8:	3718      	adds	r7, #24
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	bd80      	pop	{r7, pc}
 8002cde:	bf00      	nop
 8002ce0:	200003e4 	.word	0x200003e4
 8002ce4:	08002bd1 	.word	0x08002bd1

08002ce8 <ref_usart_start>:
 8002ce8:	b580      	push	{r7, lr}
 8002cea:	b086      	sub	sp, #24
 8002cec:	af00      	add	r7, sp, #0
 8002cee:	60f8      	str	r0, [r7, #12]
 8002cf0:	60b9      	str	r1, [r7, #8]
 8002cf2:	603b      	str	r3, [r7, #0]
 8002cf4:	4613      	mov	r3, r2
 8002cf6:	80fb      	strh	r3, [r7, #6]
 8002cf8:	4a3a      	ldr	r2, [pc, #232]	; (8002de4 <ref_usart_start+0xfc>)
 8002cfa:	683b      	ldr	r3, [r7, #0]
 8002cfc:	6013      	str	r3, [r2, #0]
 8002cfe:	4b39      	ldr	r3, [pc, #228]	; (8002de4 <ref_usart_start+0xfc>)
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	4618      	mov	r0, r3
 8002d04:	f7ff fac0 	bl	8002288 <queue_init>
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002d0e:	b2db      	uxtb	r3, r3
 8002d10:	2b20      	cmp	r3, #32
 8002d12:	d162      	bne.n	8002dda <ref_usart_start+0xf2>
 8002d14:	68bb      	ldr	r3, [r7, #8]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d002      	beq.n	8002d20 <ref_usart_start+0x38>
 8002d1a:	88fb      	ldrh	r3, [r7, #6]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d101      	bne.n	8002d24 <ref_usart_start+0x3c>
 8002d20:	2301      	movs	r3, #1
 8002d22:	e05b      	b.n	8002ddc <ref_usart_start+0xf4>
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d2a:	2b01      	cmp	r3, #1
 8002d2c:	d101      	bne.n	8002d32 <ref_usart_start+0x4a>
 8002d2e:	2302      	movs	r3, #2
 8002d30:	e054      	b.n	8002ddc <ref_usart_start+0xf4>
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	2201      	movs	r2, #1
 8002d36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d3a:	68ba      	ldr	r2, [r7, #8]
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	629a      	str	r2, [r3, #40]	; 0x28
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	88fa      	ldrh	r2, [r7, #6]
 8002d44:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	2200      	movs	r2, #0
 8002d4a:	641a      	str	r2, [r3, #64]	; 0x40
 8002d4c:	68fb      	ldr	r3, [r7, #12]
 8002d4e:	2222      	movs	r2, #34	; 0x22
 8002d50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d58:	4a23      	ldr	r2, [pc, #140]	; (8002de8 <ref_usart_start+0x100>)
 8002d5a:	63da      	str	r2, [r3, #60]	; 0x3c
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d60:	4a22      	ldr	r2, [pc, #136]	; (8002dec <ref_usart_start+0x104>)
 8002d62:	641a      	str	r2, [r3, #64]	; 0x40
 8002d64:	68fb      	ldr	r3, [r7, #12]
 8002d66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d68:	2200      	movs	r2, #0
 8002d6a:	651a      	str	r2, [r3, #80]	; 0x50
 8002d6c:	f107 0308 	add.w	r3, r7, #8
 8002d70:	617b      	str	r3, [r7, #20]
 8002d72:	68fb      	ldr	r3, [r7, #12]
 8002d74:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	3304      	adds	r3, #4
 8002d7c:	4619      	mov	r1, r3
 8002d7e:	697b      	ldr	r3, [r7, #20]
 8002d80:	681a      	ldr	r2, [r3, #0]
 8002d82:	88fb      	ldrh	r3, [r7, #6]
 8002d84:	f00d ff30 	bl	8010be8 <HAL_DMA_Start_IT>
 8002d88:	2300      	movs	r3, #0
 8002d8a:	613b      	str	r3, [r7, #16]
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	613b      	str	r3, [r7, #16]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	685b      	ldr	r3, [r3, #4]
 8002d9a:	613b      	str	r3, [r7, #16]
 8002d9c:	693b      	ldr	r3, [r7, #16]
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	2200      	movs	r2, #0
 8002da2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	68da      	ldr	r2, [r3, #12]
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002db4:	60da      	str	r2, [r3, #12]
 8002db6:	68fb      	ldr	r3, [r7, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	695a      	ldr	r2, [r3, #20]
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f042 0201 	orr.w	r2, r2, #1
 8002dc4:	615a      	str	r2, [r3, #20]
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	695a      	ldr	r2, [r3, #20]
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002dd4:	615a      	str	r2, [r3, #20]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	e000      	b.n	8002ddc <ref_usart_start+0xf4>
 8002dda:	2302      	movs	r3, #2
 8002ddc:	4618      	mov	r0, r3
 8002dde:	3718      	adds	r7, #24
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bd80      	pop	{r7, pc}
 8002de4:	200003e8 	.word	0x200003e8
 8002de8:	08002e19 	.word	0x08002e19
 8002dec:	08002df1 	.word	0x08002df1

08002df0 <ref_half_cplt_isr>:
 8002df0:	b580      	push	{r7, lr}
 8002df2:	b082      	sub	sp, #8
 8002df4:	af00      	add	r7, sp, #0
 8002df6:	6078      	str	r0, [r7, #4]
 8002df8:	4b06      	ldr	r3, [pc, #24]	; (8002e14 <ref_half_cplt_isr+0x24>)
 8002dfa:	681a      	ldr	r2, [r3, #0]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	68db      	ldr	r3, [r3, #12]
 8002e02:	781b      	ldrb	r3, [r3, #0]
 8002e04:	4619      	mov	r1, r3
 8002e06:	4610      	mov	r0, r2
 8002e08:	f7ff fa6f 	bl	80022ea <queue_append_byte>
 8002e0c:	bf00      	nop
 8002e0e:	3708      	adds	r7, #8
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	200003e8 	.word	0x200003e8

08002e18 <ref_full_cplt_isr>:
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b082      	sub	sp, #8
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
 8002e20:	4b07      	ldr	r3, [pc, #28]	; (8002e40 <ref_full_cplt_isr+0x28>)
 8002e22:	681a      	ldr	r2, [r3, #0]
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	68db      	ldr	r3, [r3, #12]
 8002e2a:	3301      	adds	r3, #1
 8002e2c:	781b      	ldrb	r3, [r3, #0]
 8002e2e:	4619      	mov	r1, r3
 8002e30:	4610      	mov	r0, r2
 8002e32:	f7ff fa5a 	bl	80022ea <queue_append_byte>
 8002e36:	bf00      	nop
 8002e38:	3708      	adds	r7, #8
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	bd80      	pop	{r7, pc}
 8002e3e:	bf00      	nop
 8002e40:	200003e8 	.word	0x200003e8

08002e44 <MX_ADC3_Init>:
 8002e44:	b580      	push	{r7, lr}
 8002e46:	b084      	sub	sp, #16
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	463b      	mov	r3, r7
 8002e4c:	2200      	movs	r2, #0
 8002e4e:	601a      	str	r2, [r3, #0]
 8002e50:	605a      	str	r2, [r3, #4]
 8002e52:	609a      	str	r2, [r3, #8]
 8002e54:	60da      	str	r2, [r3, #12]
 8002e56:	4b21      	ldr	r3, [pc, #132]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e58:	4a21      	ldr	r2, [pc, #132]	; (8002ee0 <MX_ADC3_Init+0x9c>)
 8002e5a:	601a      	str	r2, [r3, #0]
 8002e5c:	4b1f      	ldr	r3, [pc, #124]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e5e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8002e62:	605a      	str	r2, [r3, #4]
 8002e64:	4b1d      	ldr	r3, [pc, #116]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	609a      	str	r2, [r3, #8]
 8002e6a:	4b1c      	ldr	r3, [pc, #112]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	611a      	str	r2, [r3, #16]
 8002e70:	4b1a      	ldr	r3, [pc, #104]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e72:	2200      	movs	r2, #0
 8002e74:	761a      	strb	r2, [r3, #24]
 8002e76:	4b19      	ldr	r3, [pc, #100]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e78:	2200      	movs	r2, #0
 8002e7a:	f883 2020 	strb.w	r2, [r3, #32]
 8002e7e:	4b17      	ldr	r3, [pc, #92]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e80:	2200      	movs	r2, #0
 8002e82:	62da      	str	r2, [r3, #44]	; 0x2c
 8002e84:	4b15      	ldr	r3, [pc, #84]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e86:	4a17      	ldr	r2, [pc, #92]	; (8002ee4 <MX_ADC3_Init+0xa0>)
 8002e88:	629a      	str	r2, [r3, #40]	; 0x28
 8002e8a:	4b14      	ldr	r3, [pc, #80]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	60da      	str	r2, [r3, #12]
 8002e90:	4b12      	ldr	r3, [pc, #72]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e92:	2201      	movs	r2, #1
 8002e94:	61da      	str	r2, [r3, #28]
 8002e96:	4b11      	ldr	r3, [pc, #68]	; (8002edc <MX_ADC3_Init+0x98>)
 8002e98:	2200      	movs	r2, #0
 8002e9a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 8002e9e:	4b0f      	ldr	r3, [pc, #60]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ea0:	2201      	movs	r2, #1
 8002ea2:	615a      	str	r2, [r3, #20]
 8002ea4:	480d      	ldr	r0, [pc, #52]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ea6:	f00c fc2d 	bl	800f704 <HAL_ADC_Init>
 8002eaa:	4603      	mov	r3, r0
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d001      	beq.n	8002eb4 <MX_ADC3_Init+0x70>
 8002eb0:	f000 fe87 	bl	8003bc2 <Error_Handler>
 8002eb4:	2308      	movs	r3, #8
 8002eb6:	603b      	str	r3, [r7, #0]
 8002eb8:	2301      	movs	r3, #1
 8002eba:	607b      	str	r3, [r7, #4]
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	60bb      	str	r3, [r7, #8]
 8002ec0:	463b      	mov	r3, r7
 8002ec2:	4619      	mov	r1, r3
 8002ec4:	4805      	ldr	r0, [pc, #20]	; (8002edc <MX_ADC3_Init+0x98>)
 8002ec6:	f00c fc61 	bl	800f78c <HAL_ADC_ConfigChannel>
 8002eca:	4603      	mov	r3, r0
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d001      	beq.n	8002ed4 <MX_ADC3_Init+0x90>
 8002ed0:	f000 fe77 	bl	8003bc2 <Error_Handler>
 8002ed4:	bf00      	nop
 8002ed6:	3710      	adds	r7, #16
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	bd80      	pop	{r7, pc}
 8002edc:	200003ec 	.word	0x200003ec
 8002ee0:	40012200 	.word	0x40012200
 8002ee4:	0f000001 	.word	0x0f000001

08002ee8 <HAL_ADC_MspInit>:
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	b08a      	sub	sp, #40	; 0x28
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
 8002ef0:	f107 0314 	add.w	r3, r7, #20
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	605a      	str	r2, [r3, #4]
 8002efa:	609a      	str	r2, [r3, #8]
 8002efc:	60da      	str	r2, [r3, #12]
 8002efe:	611a      	str	r2, [r3, #16]
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	4a17      	ldr	r2, [pc, #92]	; (8002f64 <HAL_ADC_MspInit+0x7c>)
 8002f06:	4293      	cmp	r3, r2
 8002f08:	d128      	bne.n	8002f5c <HAL_ADC_MspInit+0x74>
 8002f0a:	2300      	movs	r3, #0
 8002f0c:	613b      	str	r3, [r7, #16]
 8002f0e:	4b16      	ldr	r3, [pc, #88]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f12:	4a15      	ldr	r2, [pc, #84]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f14:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002f18:	6453      	str	r3, [r2, #68]	; 0x44
 8002f1a:	4b13      	ldr	r3, [pc, #76]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f1e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002f22:	613b      	str	r3, [r7, #16]
 8002f24:	693b      	ldr	r3, [r7, #16]
 8002f26:	2300      	movs	r3, #0
 8002f28:	60fb      	str	r3, [r7, #12]
 8002f2a:	4b0f      	ldr	r3, [pc, #60]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f2e:	4a0e      	ldr	r2, [pc, #56]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f30:	f043 0320 	orr.w	r3, r3, #32
 8002f34:	6313      	str	r3, [r2, #48]	; 0x30
 8002f36:	4b0c      	ldr	r3, [pc, #48]	; (8002f68 <HAL_ADC_MspInit+0x80>)
 8002f38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f3a:	f003 0320 	and.w	r3, r3, #32
 8002f3e:	60fb      	str	r3, [r7, #12]
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002f46:	617b      	str	r3, [r7, #20]
 8002f48:	2303      	movs	r3, #3
 8002f4a:	61bb      	str	r3, [r7, #24]
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	61fb      	str	r3, [r7, #28]
 8002f50:	f107 0314 	add.w	r3, r7, #20
 8002f54:	4619      	mov	r1, r3
 8002f56:	4805      	ldr	r0, [pc, #20]	; (8002f6c <HAL_ADC_MspInit+0x84>)
 8002f58:	f00e f9a6 	bl	80112a8 <HAL_GPIO_Init>
 8002f5c:	bf00      	nop
 8002f5e:	3728      	adds	r7, #40	; 0x28
 8002f60:	46bd      	mov	sp, r7
 8002f62:	bd80      	pop	{r7, pc}
 8002f64:	40012200 	.word	0x40012200
 8002f68:	40023800 	.word	0x40023800
 8002f6c:	40021400 	.word	0x40021400

08002f70 <MX_CAN1_Init>:
 8002f70:	b580      	push	{r7, lr}
 8002f72:	af00      	add	r7, sp, #0
 8002f74:	4b17      	ldr	r3, [pc, #92]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f76:	4a18      	ldr	r2, [pc, #96]	; (8002fd8 <MX_CAN1_Init+0x68>)
 8002f78:	601a      	str	r2, [r3, #0]
 8002f7a:	4b16      	ldr	r3, [pc, #88]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f7c:	2203      	movs	r2, #3
 8002f7e:	605a      	str	r2, [r3, #4]
 8002f80:	4b14      	ldr	r3, [pc, #80]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f82:	2200      	movs	r2, #0
 8002f84:	609a      	str	r2, [r3, #8]
 8002f86:	4b13      	ldr	r3, [pc, #76]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f88:	2200      	movs	r2, #0
 8002f8a:	60da      	str	r2, [r3, #12]
 8002f8c:	4b11      	ldr	r3, [pc, #68]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f8e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8002f92:	611a      	str	r2, [r3, #16]
 8002f94:	4b0f      	ldr	r3, [pc, #60]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f96:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
 8002f9a:	615a      	str	r2, [r3, #20]
 8002f9c:	4b0d      	ldr	r3, [pc, #52]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002f9e:	2200      	movs	r2, #0
 8002fa0:	761a      	strb	r2, [r3, #24]
 8002fa2:	4b0c      	ldr	r3, [pc, #48]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	765a      	strb	r2, [r3, #25]
 8002fa8:	4b0a      	ldr	r3, [pc, #40]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	769a      	strb	r2, [r3, #26]
 8002fae:	4b09      	ldr	r3, [pc, #36]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	76da      	strb	r2, [r3, #27]
 8002fb4:	4b07      	ldr	r3, [pc, #28]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fb6:	2200      	movs	r2, #0
 8002fb8:	771a      	strb	r2, [r3, #28]
 8002fba:	4b06      	ldr	r3, [pc, #24]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	775a      	strb	r2, [r3, #29]
 8002fc0:	4804      	ldr	r0, [pc, #16]	; (8002fd4 <MX_CAN1_Init+0x64>)
 8002fc2:	f00c fe01 	bl	800fbc8 <HAL_CAN_Init>
 8002fc6:	4603      	mov	r3, r0
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	d001      	beq.n	8002fd0 <MX_CAN1_Init+0x60>
 8002fcc:	f000 fdf9 	bl	8003bc2 <Error_Handler>
 8002fd0:	bf00      	nop
 8002fd2:	bd80      	pop	{r7, pc}
 8002fd4:	20000434 	.word	0x20000434
 8002fd8:	40006400 	.word	0x40006400

08002fdc <MX_CAN2_Init>:
 8002fdc:	b580      	push	{r7, lr}
 8002fde:	af00      	add	r7, sp, #0
 8002fe0:	4b17      	ldr	r3, [pc, #92]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fe2:	4a18      	ldr	r2, [pc, #96]	; (8003044 <MX_CAN2_Init+0x68>)
 8002fe4:	601a      	str	r2, [r3, #0]
 8002fe6:	4b16      	ldr	r3, [pc, #88]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fe8:	2203      	movs	r2, #3
 8002fea:	605a      	str	r2, [r3, #4]
 8002fec:	4b14      	ldr	r3, [pc, #80]	; (8003040 <MX_CAN2_Init+0x64>)
 8002fee:	2200      	movs	r2, #0
 8002ff0:	609a      	str	r2, [r3, #8]
 8002ff2:	4b13      	ldr	r3, [pc, #76]	; (8003040 <MX_CAN2_Init+0x64>)
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	60da      	str	r2, [r3, #12]
 8002ff8:	4b11      	ldr	r3, [pc, #68]	; (8003040 <MX_CAN2_Init+0x64>)
 8002ffa:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8002ffe:	611a      	str	r2, [r3, #16]
 8003000:	4b0f      	ldr	r3, [pc, #60]	; (8003040 <MX_CAN2_Init+0x64>)
 8003002:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
 8003006:	615a      	str	r2, [r3, #20]
 8003008:	4b0d      	ldr	r3, [pc, #52]	; (8003040 <MX_CAN2_Init+0x64>)
 800300a:	2200      	movs	r2, #0
 800300c:	761a      	strb	r2, [r3, #24]
 800300e:	4b0c      	ldr	r3, [pc, #48]	; (8003040 <MX_CAN2_Init+0x64>)
 8003010:	2200      	movs	r2, #0
 8003012:	765a      	strb	r2, [r3, #25]
 8003014:	4b0a      	ldr	r3, [pc, #40]	; (8003040 <MX_CAN2_Init+0x64>)
 8003016:	2200      	movs	r2, #0
 8003018:	769a      	strb	r2, [r3, #26]
 800301a:	4b09      	ldr	r3, [pc, #36]	; (8003040 <MX_CAN2_Init+0x64>)
 800301c:	2200      	movs	r2, #0
 800301e:	76da      	strb	r2, [r3, #27]
 8003020:	4b07      	ldr	r3, [pc, #28]	; (8003040 <MX_CAN2_Init+0x64>)
 8003022:	2200      	movs	r2, #0
 8003024:	771a      	strb	r2, [r3, #28]
 8003026:	4b06      	ldr	r3, [pc, #24]	; (8003040 <MX_CAN2_Init+0x64>)
 8003028:	2200      	movs	r2, #0
 800302a:	775a      	strb	r2, [r3, #29]
 800302c:	4804      	ldr	r0, [pc, #16]	; (8003040 <MX_CAN2_Init+0x64>)
 800302e:	f00c fdcb 	bl	800fbc8 <HAL_CAN_Init>
 8003032:	4603      	mov	r3, r0
 8003034:	2b00      	cmp	r3, #0
 8003036:	d001      	beq.n	800303c <MX_CAN2_Init+0x60>
 8003038:	f000 fdc3 	bl	8003bc2 <Error_Handler>
 800303c:	bf00      	nop
 800303e:	bd80      	pop	{r7, pc}
 8003040:	2000045c 	.word	0x2000045c
 8003044:	40006800 	.word	0x40006800

08003048 <HAL_CAN_MspInit>:
 8003048:	b580      	push	{r7, lr}
 800304a:	b08c      	sub	sp, #48	; 0x30
 800304c:	af00      	add	r7, sp, #0
 800304e:	6078      	str	r0, [r7, #4]
 8003050:	f107 031c 	add.w	r3, r7, #28
 8003054:	2200      	movs	r2, #0
 8003056:	601a      	str	r2, [r3, #0]
 8003058:	605a      	str	r2, [r3, #4]
 800305a:	609a      	str	r2, [r3, #8]
 800305c:	60da      	str	r2, [r3, #12]
 800305e:	611a      	str	r2, [r3, #16]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	4a52      	ldr	r2, [pc, #328]	; (80031b0 <HAL_CAN_MspInit+0x168>)
 8003066:	4293      	cmp	r3, r2
 8003068:	d145      	bne.n	80030f6 <HAL_CAN_MspInit+0xae>
 800306a:	4b52      	ldr	r3, [pc, #328]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	3301      	adds	r3, #1
 8003070:	4a50      	ldr	r2, [pc, #320]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003072:	6013      	str	r3, [r2, #0]
 8003074:	4b4f      	ldr	r3, [pc, #316]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	2b01      	cmp	r3, #1
 800307a:	d10d      	bne.n	8003098 <HAL_CAN_MspInit+0x50>
 800307c:	2300      	movs	r3, #0
 800307e:	61bb      	str	r3, [r7, #24]
 8003080:	4b4d      	ldr	r3, [pc, #308]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003084:	4a4c      	ldr	r2, [pc, #304]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003086:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800308a:	6413      	str	r3, [r2, #64]	; 0x40
 800308c:	4b4a      	ldr	r3, [pc, #296]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800308e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003090:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003094:	61bb      	str	r3, [r7, #24]
 8003096:	69bb      	ldr	r3, [r7, #24]
 8003098:	2300      	movs	r3, #0
 800309a:	617b      	str	r3, [r7, #20]
 800309c:	4b46      	ldr	r3, [pc, #280]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800309e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030a0:	4a45      	ldr	r2, [pc, #276]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 80030a2:	f043 0308 	orr.w	r3, r3, #8
 80030a6:	6313      	str	r3, [r2, #48]	; 0x30
 80030a8:	4b43      	ldr	r3, [pc, #268]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 80030aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030ac:	f003 0308 	and.w	r3, r3, #8
 80030b0:	617b      	str	r3, [r7, #20]
 80030b2:	697b      	ldr	r3, [r7, #20]
 80030b4:	2303      	movs	r3, #3
 80030b6:	61fb      	str	r3, [r7, #28]
 80030b8:	2302      	movs	r3, #2
 80030ba:	623b      	str	r3, [r7, #32]
 80030bc:	2300      	movs	r3, #0
 80030be:	627b      	str	r3, [r7, #36]	; 0x24
 80030c0:	2303      	movs	r3, #3
 80030c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80030c4:	2309      	movs	r3, #9
 80030c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80030c8:	f107 031c 	add.w	r3, r7, #28
 80030cc:	4619      	mov	r1, r3
 80030ce:	483b      	ldr	r0, [pc, #236]	; (80031bc <HAL_CAN_MspInit+0x174>)
 80030d0:	f00e f8ea 	bl	80112a8 <HAL_GPIO_Init>
 80030d4:	2200      	movs	r2, #0
 80030d6:	2105      	movs	r1, #5
 80030d8:	2014      	movs	r0, #20
 80030da:	f00d fcad 	bl	8010a38 <HAL_NVIC_SetPriority>
 80030de:	2014      	movs	r0, #20
 80030e0:	f00d fcc6 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 80030e4:	2200      	movs	r2, #0
 80030e6:	2105      	movs	r1, #5
 80030e8:	2015      	movs	r0, #21
 80030ea:	f00d fca5 	bl	8010a38 <HAL_NVIC_SetPriority>
 80030ee:	2015      	movs	r0, #21
 80030f0:	f00d fcbe 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 80030f4:	e057      	b.n	80031a6 <HAL_CAN_MspInit+0x15e>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	4a31      	ldr	r2, [pc, #196]	; (80031c0 <HAL_CAN_MspInit+0x178>)
 80030fc:	4293      	cmp	r3, r2
 80030fe:	d152      	bne.n	80031a6 <HAL_CAN_MspInit+0x15e>
 8003100:	2300      	movs	r3, #0
 8003102:	613b      	str	r3, [r7, #16]
 8003104:	4b2c      	ldr	r3, [pc, #176]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003106:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003108:	4a2b      	ldr	r2, [pc, #172]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800310a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800310e:	6413      	str	r3, [r2, #64]	; 0x40
 8003110:	4b29      	ldr	r3, [pc, #164]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003112:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003114:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003118:	613b      	str	r3, [r7, #16]
 800311a:	693b      	ldr	r3, [r7, #16]
 800311c:	4b25      	ldr	r3, [pc, #148]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	3301      	adds	r3, #1
 8003122:	4a24      	ldr	r2, [pc, #144]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003124:	6013      	str	r3, [r2, #0]
 8003126:	4b23      	ldr	r3, [pc, #140]	; (80031b4 <HAL_CAN_MspInit+0x16c>)
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	2b01      	cmp	r3, #1
 800312c:	d10d      	bne.n	800314a <HAL_CAN_MspInit+0x102>
 800312e:	2300      	movs	r3, #0
 8003130:	60fb      	str	r3, [r7, #12]
 8003132:	4b21      	ldr	r3, [pc, #132]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003134:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003136:	4a20      	ldr	r2, [pc, #128]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003138:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800313c:	6413      	str	r3, [r2, #64]	; 0x40
 800313e:	4b1e      	ldr	r3, [pc, #120]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003140:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003142:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003146:	60fb      	str	r3, [r7, #12]
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	2300      	movs	r3, #0
 800314c:	60bb      	str	r3, [r7, #8]
 800314e:	4b1a      	ldr	r3, [pc, #104]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003152:	4a19      	ldr	r2, [pc, #100]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 8003154:	f043 0302 	orr.w	r3, r3, #2
 8003158:	6313      	str	r3, [r2, #48]	; 0x30
 800315a:	4b17      	ldr	r3, [pc, #92]	; (80031b8 <HAL_CAN_MspInit+0x170>)
 800315c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800315e:	f003 0302 	and.w	r3, r3, #2
 8003162:	60bb      	str	r3, [r7, #8]
 8003164:	68bb      	ldr	r3, [r7, #8]
 8003166:	2360      	movs	r3, #96	; 0x60
 8003168:	61fb      	str	r3, [r7, #28]
 800316a:	2302      	movs	r3, #2
 800316c:	623b      	str	r3, [r7, #32]
 800316e:	2300      	movs	r3, #0
 8003170:	627b      	str	r3, [r7, #36]	; 0x24
 8003172:	2303      	movs	r3, #3
 8003174:	62bb      	str	r3, [r7, #40]	; 0x28
 8003176:	2309      	movs	r3, #9
 8003178:	62fb      	str	r3, [r7, #44]	; 0x2c
 800317a:	f107 031c 	add.w	r3, r7, #28
 800317e:	4619      	mov	r1, r3
 8003180:	4810      	ldr	r0, [pc, #64]	; (80031c4 <HAL_CAN_MspInit+0x17c>)
 8003182:	f00e f891 	bl	80112a8 <HAL_GPIO_Init>
 8003186:	2200      	movs	r2, #0
 8003188:	2105      	movs	r1, #5
 800318a:	2040      	movs	r0, #64	; 0x40
 800318c:	f00d fc54 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003190:	2040      	movs	r0, #64	; 0x40
 8003192:	f00d fc6d 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003196:	2200      	movs	r2, #0
 8003198:	2105      	movs	r1, #5
 800319a:	2041      	movs	r0, #65	; 0x41
 800319c:	f00d fc4c 	bl	8010a38 <HAL_NVIC_SetPriority>
 80031a0:	2041      	movs	r0, #65	; 0x41
 80031a2:	f00d fc65 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 80031a6:	bf00      	nop
 80031a8:	3730      	adds	r7, #48	; 0x30
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bd80      	pop	{r7, pc}
 80031ae:	bf00      	nop
 80031b0:	40006400 	.word	0x40006400
 80031b4:	20000484 	.word	0x20000484
 80031b8:	40023800 	.word	0x40023800
 80031bc:	40020c00 	.word	0x40020c00
 80031c0:	40006800 	.word	0x40006800
 80031c4:	40020400 	.word	0x40020400

080031c8 <MX_DMA_Init>:
 80031c8:	b580      	push	{r7, lr}
 80031ca:	b082      	sub	sp, #8
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	2300      	movs	r3, #0
 80031d0:	607b      	str	r3, [r7, #4]
 80031d2:	4b2f      	ldr	r3, [pc, #188]	; (8003290 <MX_DMA_Init+0xc8>)
 80031d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031d6:	4a2e      	ldr	r2, [pc, #184]	; (8003290 <MX_DMA_Init+0xc8>)
 80031d8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80031dc:	6313      	str	r3, [r2, #48]	; 0x30
 80031de:	4b2c      	ldr	r3, [pc, #176]	; (8003290 <MX_DMA_Init+0xc8>)
 80031e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031e2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80031e6:	607b      	str	r3, [r7, #4]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2300      	movs	r3, #0
 80031ec:	603b      	str	r3, [r7, #0]
 80031ee:	4b28      	ldr	r3, [pc, #160]	; (8003290 <MX_DMA_Init+0xc8>)
 80031f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031f2:	4a27      	ldr	r2, [pc, #156]	; (8003290 <MX_DMA_Init+0xc8>)
 80031f4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80031f8:	6313      	str	r3, [r2, #48]	; 0x30
 80031fa:	4b25      	ldr	r3, [pc, #148]	; (8003290 <MX_DMA_Init+0xc8>)
 80031fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031fe:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003202:	603b      	str	r3, [r7, #0]
 8003204:	683b      	ldr	r3, [r7, #0]
 8003206:	2200      	movs	r2, #0
 8003208:	2105      	movs	r1, #5
 800320a:	200c      	movs	r0, #12
 800320c:	f00d fc14 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003210:	200c      	movs	r0, #12
 8003212:	f00d fc2d 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003216:	2200      	movs	r2, #0
 8003218:	2105      	movs	r1, #5
 800321a:	200d      	movs	r0, #13
 800321c:	f00d fc0c 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003220:	200d      	movs	r0, #13
 8003222:	f00d fc25 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003226:	2200      	movs	r2, #0
 8003228:	2105      	movs	r1, #5
 800322a:	200f      	movs	r0, #15
 800322c:	f00d fc04 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003230:	200f      	movs	r0, #15
 8003232:	f00d fc1d 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003236:	2200      	movs	r2, #0
 8003238:	2105      	movs	r1, #5
 800323a:	2038      	movs	r0, #56	; 0x38
 800323c:	f00d fbfc 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003240:	2038      	movs	r0, #56	; 0x38
 8003242:	f00d fc15 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003246:	2200      	movs	r2, #0
 8003248:	2105      	movs	r1, #5
 800324a:	2039      	movs	r0, #57	; 0x39
 800324c:	f00d fbf4 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003250:	2039      	movs	r0, #57	; 0x39
 8003252:	f00d fc0d 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003256:	2200      	movs	r2, #0
 8003258:	2105      	movs	r1, #5
 800325a:	203b      	movs	r0, #59	; 0x3b
 800325c:	f00d fbec 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003260:	203b      	movs	r0, #59	; 0x3b
 8003262:	f00d fc05 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003266:	2200      	movs	r2, #0
 8003268:	2105      	movs	r1, #5
 800326a:	2044      	movs	r0, #68	; 0x44
 800326c:	f00d fbe4 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003270:	2044      	movs	r0, #68	; 0x44
 8003272:	f00d fbfd 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003276:	2200      	movs	r2, #0
 8003278:	2105      	movs	r1, #5
 800327a:	2045      	movs	r0, #69	; 0x45
 800327c:	f00d fbdc 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003280:	2045      	movs	r0, #69	; 0x45
 8003282:	f00d fbf5 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003286:	bf00      	nop
 8003288:	3708      	adds	r7, #8
 800328a:	46bd      	mov	sp, r7
 800328c:	bd80      	pop	{r7, pc}
 800328e:	bf00      	nop
 8003290:	40023800 	.word	0x40023800

08003294 <configureTimerForRunTimeStats>:
unsigned long getRunTimeCounterValue(void);
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);

/* USER CODE BEGIN 1 */
/* Functions needed when configGENERATE_RUN_TIME_STATS is on */
__weak void configureTimerForRunTimeStats(void) {
 8003294:	b480      	push	{r7}
 8003296:	af00      	add	r7, sp, #0

}
 8003298:	bf00      	nop
 800329a:	46bd      	mov	sp, r7
 800329c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032a0:	4770      	bx	lr

080032a2 <getRunTimeCounterValue>:

__weak unsigned long getRunTimeCounterValue(void) {
 80032a2:	b480      	push	{r7}
 80032a4:	af00      	add	r7, sp, #0
	return 0;
 80032a6:	2300      	movs	r3, #0
}
 80032a8:	4618      	mov	r0, r3
 80032aa:	46bd      	mov	sp, r7
 80032ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b0:	4770      	bx	lr

080032b2 <vApplicationStackOverflowHook>:
/* USER CODE END 1 */

/* USER CODE BEGIN 4 */
__weak void vApplicationStackOverflowHook(xTaskHandle xTask,
		signed char *pcTaskName) {
 80032b2:	b480      	push	{r7}
 80032b4:	b083      	sub	sp, #12
 80032b6:	af00      	add	r7, sp, #0
 80032b8:	6078      	str	r0, [r7, #4]
 80032ba:	6039      	str	r1, [r7, #0]
	/* Run time stack overflow checking is performed if
	 configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
	 called if a stack overflow is detected. */
}
 80032bc:	bf00      	nop
 80032be:	370c      	adds	r7, #12
 80032c0:	46bd      	mov	sp, r7
 80032c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c6:	4770      	bx	lr

080032c8 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer,
		StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 80032c8:	b480      	push	{r7}
 80032ca:	b085      	sub	sp, #20
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	60f8      	str	r0, [r7, #12]
 80032d0:	60b9      	str	r1, [r7, #8]
 80032d2:	607a      	str	r2, [r7, #4]
	*ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	4a07      	ldr	r2, [pc, #28]	; (80032f4 <vApplicationGetIdleTaskMemory+0x2c>)
 80032d8:	601a      	str	r2, [r3, #0]
	*ppxIdleTaskStackBuffer = &xIdleStack[0];
 80032da:	68bb      	ldr	r3, [r7, #8]
 80032dc:	4a06      	ldr	r2, [pc, #24]	; (80032f8 <vApplicationGetIdleTaskMemory+0x30>)
 80032de:	601a      	str	r2, [r3, #0]
	*pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80032e6:	601a      	str	r2, [r3, #0]
	/* place for user code */
}
 80032e8:	bf00      	nop
 80032ea:	3714      	adds	r7, #20
 80032ec:	46bd      	mov	sp, r7
 80032ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f2:	4770      	bx	lr
 80032f4:	200004f0 	.word	0x200004f0
 80032f8:	200005b0 	.word	0x200005b0

080032fc <vApplicationGetTimerTaskMemory>:
/* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
static StaticTask_t xTimerTaskTCBBuffer;
static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];

void vApplicationGetTimerTaskMemory(StaticTask_t **ppxTimerTaskTCBBuffer,
		StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 80032fc:	b480      	push	{r7}
 80032fe:	b085      	sub	sp, #20
 8003300:	af00      	add	r7, sp, #0
 8003302:	60f8      	str	r0, [r7, #12]
 8003304:	60b9      	str	r1, [r7, #8]
 8003306:	607a      	str	r2, [r7, #4]
	*ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 8003308:	68fb      	ldr	r3, [r7, #12]
 800330a:	4a07      	ldr	r2, [pc, #28]	; (8003328 <vApplicationGetTimerTaskMemory+0x2c>)
 800330c:	601a      	str	r2, [r3, #0]
	*ppxTimerTaskStackBuffer = &xTimerStack[0];
 800330e:	68bb      	ldr	r3, [r7, #8]
 8003310:	4a06      	ldr	r2, [pc, #24]	; (800332c <vApplicationGetTimerTaskMemory+0x30>)
 8003312:	601a      	str	r2, [r3, #0]
	*pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	f44f 7200 	mov.w	r2, #512	; 0x200
 800331a:	601a      	str	r2, [r3, #0]
	/* place for user code */
}
 800331c:	bf00      	nop
 800331e:	3714      	adds	r7, #20
 8003320:	46bd      	mov	sp, r7
 8003322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003326:	4770      	bx	lr
 8003328:	200009b0 	.word	0x200009b0
 800332c:	20000a70 	.word	0x20000a70

08003330 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 8003330:	b5b0      	push	{r4, r5, r7, lr}
 8003332:	b08a      	sub	sp, #40	; 0x28
 8003334:	af02      	add	r7, sp, #8
	/* add mutexes, ... */
  /* USER CODE END RTOS_MUTEX */

  /* USER CODE BEGIN RTOS_SEMAPHORES */
	/* add semaphores, ... */
	gimbal_event_group = xEventGroupCreate();
 8003336:	f018 f9d2 	bl	801b6de <xEventGroupCreate>
 800333a:	4603      	mov	r3, r0
 800333c:	4a84      	ldr	r2, [pc, #528]	; (8003550 <MX_FREERTOS_Init+0x220>)
 800333e:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 8003340:	f018 f9cd 	bl	801b6de <xEventGroupCreate>
 8003344:	4603      	mov	r3, r0
 8003346:	4a83      	ldr	r2, [pc, #524]	; (8003554 <MX_FREERTOS_Init+0x224>)
 8003348:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 800334a:	f018 f9c8 	bl	801b6de <xEventGroupCreate>
 800334e:	4603      	mov	r3, r0
 8003350:	4a81      	ldr	r2, [pc, #516]	; (8003558 <MX_FREERTOS_Init+0x228>)
 8003352:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 8003354:	2203      	movs	r2, #3
 8003356:	2100      	movs	r1, #0
 8003358:	2001      	movs	r0, #1
 800335a:	f018 fd43 	bl	801bde4 <xQueueGenericCreate>
 800335e:	4603      	mov	r3, r0
 8003360:	4a7e      	ldr	r2, [pc, #504]	; (800355c <MX_FREERTOS_Init+0x22c>)
 8003362:	6013      	str	r3, [r2, #0]
	/* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
	/* add queues, ... */
	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 8003364:	2200      	movs	r2, #0
 8003366:	2110      	movs	r1, #16
 8003368:	2005      	movs	r0, #5
 800336a:	f018 fd3b 	bl	801bde4 <xQueueGenericCreate>
 800336e:	4603      	mov	r3, r0
 8003370:	4a7b      	ldr	r2, [pc, #492]	; (8003560 <MX_FREERTOS_Init+0x230>)
 8003372:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 8003374:	2200      	movs	r2, #0
 8003376:	2110      	movs	r1, #16
 8003378:	2005      	movs	r0, #5
 800337a:	f018 fd33 	bl	801bde4 <xQueueGenericCreate>
 800337e:	4603      	mov	r3, r0
 8003380:	4a78      	ldr	r2, [pc, #480]	; (8003564 <MX_FREERTOS_Init+0x234>)
 8003382:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 8003384:	2200      	movs	r2, #0
 8003386:	210c      	movs	r1, #12
 8003388:	2005      	movs	r0, #5
 800338a:	f018 fd2b 	bl	801bde4 <xQueueGenericCreate>
 800338e:	4603      	mov	r3, r0
 8003390:	4a75      	ldr	r2, [pc, #468]	; (8003568 <MX_FREERTOS_Init+0x238>)
 8003392:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 8003394:	2200      	movs	r2, #0
 8003396:	2101      	movs	r1, #1
 8003398:	2030      	movs	r0, #48	; 0x30
 800339a:	f018 fd23 	bl	801bde4 <xQueueGenericCreate>
 800339e:	4603      	mov	r3, r0
 80033a0:	4a72      	ldr	r2, [pc, #456]	; (800356c <MX_FREERTOS_Init+0x23c>)
 80033a2:	6013      	str	r3, [r2, #0]
	uart_data_queue = xQueueCreate(5, sizeof(ref_msg_t));
 80033a4:	2200      	movs	r2, #0
 80033a6:	2142      	movs	r1, #66	; 0x42
 80033a8:	2005      	movs	r0, #5
 80033aa:	f018 fd1b 	bl	801bde4 <xQueueGenericCreate>
 80033ae:	4603      	mov	r3, r0
 80033b0:	4a6f      	ldr	r2, [pc, #444]	; (8003570 <MX_FREERTOS_Init+0x240>)
 80033b2:	6013      	str	r3, [r2, #0]

  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 80033b4:	4b6f      	ldr	r3, [pc, #444]	; (8003574 <MX_FREERTOS_Init+0x244>)
 80033b6:	1d3c      	adds	r4, r7, #4
 80033b8:	461d      	mov	r5, r3
 80033ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80033bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80033be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 80033c6:	1d3b      	adds	r3, r7, #4
 80033c8:	2100      	movs	r1, #0
 80033ca:	4618      	mov	r0, r3
 80033cc:	f018 f927 	bl	801b61e <osThreadCreate>
 80033d0:	4603      	mov	r3, r0
 80033d2:	4a69      	ldr	r2, [pc, #420]	; (8003578 <MX_FREERTOS_Init+0x248>)
 80033d4:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_THREADS */
	/* add threads, ... */
	//todo: adjust priorities
	//Threads creation
	xTaskCreate(imu_processing_task, "IMU_task",
 80033d6:	4b69      	ldr	r3, [pc, #420]	; (800357c <MX_FREERTOS_Init+0x24c>)
 80033d8:	9301      	str	r3, [sp, #4]
 80033da:	230f      	movs	r3, #15
 80033dc:	9300      	str	r3, [sp, #0]
 80033de:	2301      	movs	r3, #1
 80033e0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80033e4:	4966      	ldr	r1, [pc, #408]	; (8003580 <MX_FREERTOS_Init+0x250>)
 80033e6:	4867      	ldr	r0, [pc, #412]	; (8003584 <MX_FREERTOS_Init+0x254>)
 80033e8:	f019 fa2b 	bl	801c842 <xTaskCreate>
	1024, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 80033ec:	4b66      	ldr	r3, [pc, #408]	; (8003588 <MX_FREERTOS_Init+0x258>)
 80033ee:	9301      	str	r3, [sp, #4]
 80033f0:	2309      	movs	r3, #9
 80033f2:	9300      	str	r3, [sp, #0]
 80033f4:	2301      	movs	r3, #1
 80033f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80033fa:	4964      	ldr	r1, [pc, #400]	; (800358c <MX_FREERTOS_Init+0x25c>)
 80033fc:	4864      	ldr	r0, [pc, #400]	; (8003590 <MX_FREERTOS_Init+0x260>)
 80033fe:	f019 fa20 	bl	801c842 <xTaskCreate>
			&motor_calib_task_handle);

//	if (gimbal_event_group == NULL) {
//		//error handler implement next time!
//	} else {
		xTaskCreate(gimbal_control_task, "gimbal_task",
 8003402:	4b64      	ldr	r3, [pc, #400]	; (8003594 <MX_FREERTOS_Init+0x264>)
 8003404:	9301      	str	r3, [sp, #4]
 8003406:	2307      	movs	r3, #7
 8003408:	9300      	str	r3, [sp, #0]
 800340a:	2301      	movs	r3, #1
 800340c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003410:	4961      	ldr	r1, [pc, #388]	; (8003598 <MX_FREERTOS_Init+0x268>)
 8003412:	4862      	ldr	r0, [pc, #392]	; (800359c <MX_FREERTOS_Init+0x26c>)
 8003414:	f019 fa15 	bl	801c842 <xTaskCreate>
				&gimbal_control_task_handle);
//	}
//new implementation
	//todo: adjust priorities
	//Threads creation
	xTaskCreate(Ctrl_Task, "Ctrl_Task_task",
 8003418:	4b61      	ldr	r3, [pc, #388]	; (80035a0 <MX_FREERTOS_Init+0x270>)
 800341a:	9301      	str	r3, [sp, #4]
 800341c:	2308      	movs	r3, #8
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	2301      	movs	r3, #1
 8003422:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003426:	495f      	ldr	r1, [pc, #380]	; (80035a4 <MX_FREERTOS_Init+0x274>)
 8003428:	485f      	ldr	r0, [pc, #380]	; (80035a8 <MX_FREERTOS_Init+0x278>)
 800342a:	f019 fa0a 	bl	801c842 <xTaskCreate>
					configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
							&Ctrl_Task_handle);

	xTaskCreate(LegPos_UpdateTask, "LegPos_UpdateTask",
 800342e:	4b5f      	ldr	r3, [pc, #380]	; (80035ac <MX_FREERTOS_Init+0x27c>)
 8003430:	9301      	str	r3, [sp, #4]
 8003432:	2308      	movs	r3, #8
 8003434:	9300      	str	r3, [sp, #0]
 8003436:	2301      	movs	r3, #1
 8003438:	f44f 7280 	mov.w	r2, #256	; 0x100
 800343c:	495c      	ldr	r1, [pc, #368]	; (80035b0 <MX_FREERTOS_Init+0x280>)
 800343e:	485d      	ldr	r0, [pc, #372]	; (80035b4 <MX_FREERTOS_Init+0x284>)
 8003440:	f019 f9ff 	bl	801c842 <xTaskCreate>
				configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
						&LegPos_UpdateTask_handle);

	xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
 8003444:	4b5c      	ldr	r3, [pc, #368]	; (80035b8 <MX_FREERTOS_Init+0x288>)
 8003446:	9301      	str	r3, [sp, #4]
 8003448:	2308      	movs	r3, #8
 800344a:	9300      	str	r3, [sp, #0]
 800344c:	2301      	movs	r3, #1
 800344e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003452:	495a      	ldr	r1, [pc, #360]	; (80035bc <MX_FREERTOS_Init+0x28c>)
 8003454:	485a      	ldr	r0, [pc, #360]	; (80035c0 <MX_FREERTOS_Init+0x290>)
 8003456:	f019 f9f4 	bl	801c842 <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
					&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 800345a:	4b5a      	ldr	r3, [pc, #360]	; (80035c4 <MX_FREERTOS_Init+0x294>)
 800345c:	9301      	str	r3, [sp, #4]
 800345e:	2308      	movs	r3, #8
 8003460:	9300      	str	r3, [sp, #0]
 8003462:	2301      	movs	r3, #1
 8003464:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003468:	4957      	ldr	r1, [pc, #348]	; (80035c8 <MX_FREERTOS_Init+0x298>)
 800346a:	4858      	ldr	r0, [pc, #352]	; (80035cc <MX_FREERTOS_Init+0x29c>)
 800346c:	f019 f9e9 	bl	801c842 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
				&motors_process_handle);

	xTaskCreate(balancing_task, "balancing_task",
 8003470:	4b57      	ldr	r3, [pc, #348]	; (80035d0 <MX_FREERTOS_Init+0x2a0>)
 8003472:	9301      	str	r3, [sp, #4]
 8003474:	2308      	movs	r3, #8
 8003476:	9300      	str	r3, [sp, #0]
 8003478:	2301      	movs	r3, #1
 800347a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800347e:	4955      	ldr	r1, [pc, #340]	; (80035d4 <MX_FREERTOS_Init+0x2a4>)
 8003480:	4855      	ldr	r0, [pc, #340]	; (80035d8 <MX_FREERTOS_Init+0x2a8>)
 8003482:	f019 f9de 	bl	801c842 <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 8,
					&balancing_task_handle);

	xTaskCreate(motor_send_RTOS, "motor_send_RTOS",
 8003486:	4b55      	ldr	r3, [pc, #340]	; (80035dc <MX_FREERTOS_Init+0x2ac>)
 8003488:	9301      	str	r3, [sp, #4]
 800348a:	2309      	movs	r3, #9
 800348c:	9300      	str	r3, [sp, #0]
 800348e:	2303      	movs	r3, #3
 8003490:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003494:	4952      	ldr	r1, [pc, #328]	; (80035e0 <MX_FREERTOS_Init+0x2b0>)
 8003496:	4853      	ldr	r0, [pc, #332]	; (80035e4 <MX_FREERTOS_Init+0x2b4>)
 8003498:	f019 f9d3 	bl	801c842 <xTaskCreate>
	// 	xTaskCreate(movement_control_task, "chassis_task",
	// 	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 			&movement_control_task_handle);
	// }

	if (launcher_event_group == NULL) {
 800349c:	4b2e      	ldr	r3, [pc, #184]	; (8003558 <MX_FREERTOS_Init+0x228>)
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d00a      	beq.n	80034ba <MX_FREERTOS_Init+0x18a>
		//error handler
	} else {
		xTaskCreate(launcher_control_task, "launcher_task",
 80034a4:	4b50      	ldr	r3, [pc, #320]	; (80035e8 <MX_FREERTOS_Init+0x2b8>)
 80034a6:	9301      	str	r3, [sp, #4]
 80034a8:	2304      	movs	r3, #4
 80034aa:	9300      	str	r3, [sp, #0]
 80034ac:	2301      	movs	r3, #1
 80034ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80034b2:	494e      	ldr	r1, [pc, #312]	; (80035ec <MX_FREERTOS_Init+0x2bc>)
 80034b4:	484e      	ldr	r0, [pc, #312]	; (80035f0 <MX_FREERTOS_Init+0x2c0>)
 80034b6:	f019 f9c4 	bl	801c842 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
				&launcher_control_task_handle);
	}

	xTaskCreate(control_input_task, "RC_task",
 80034ba:	4b4e      	ldr	r3, [pc, #312]	; (80035f4 <MX_FREERTOS_Init+0x2c4>)
 80034bc:	9301      	str	r3, [sp, #4]
 80034be:	2304      	movs	r3, #4
 80034c0:	9300      	str	r3, [sp, #0]
 80034c2:	2301      	movs	r3, #1
 80034c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80034c8:	494b      	ldr	r1, [pc, #300]	; (80035f8 <MX_FREERTOS_Init+0x2c8>)
 80034ca:	484c      	ldr	r0, [pc, #304]	; (80035fc <MX_FREERTOS_Init+0x2cc>)
 80034cc:	f019 f9b9 	bl	801c842 <xTaskCreate>
	1024, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 2048, (void*) 1,
 80034d0:	4b4b      	ldr	r3, [pc, #300]	; (8003600 <MX_FREERTOS_Init+0x2d0>)
 80034d2:	9301      	str	r3, [sp, #4]
 80034d4:	2302      	movs	r3, #2
 80034d6:	9300      	str	r3, [sp, #0]
 80034d8:	2301      	movs	r3, #1
 80034da:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80034de:	4949      	ldr	r1, [pc, #292]	; (8003604 <MX_FREERTOS_Init+0x2d4>)
 80034e0:	4849      	ldr	r0, [pc, #292]	; (8003608 <MX_FREERTOS_Init+0x2d8>)
 80034e2:	f019 f9ae 	bl	801c842 <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);
	xTaskCreate(buzzing_task, "buzzer_task",
 80034e6:	4b49      	ldr	r3, [pc, #292]	; (800360c <MX_FREERTOS_Init+0x2dc>)
 80034e8:	9301      	str	r3, [sp, #4]
 80034ea:	2301      	movs	r3, #1
 80034ec:	9300      	str	r3, [sp, #0]
 80034ee:	2301      	movs	r3, #1
 80034f0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80034f4:	4946      	ldr	r1, [pc, #280]	; (8003610 <MX_FREERTOS_Init+0x2e0>)
 80034f6:	4847      	ldr	r0, [pc, #284]	; (8003614 <MX_FREERTOS_Init+0x2e4>)
 80034f8:	f019 f9a3 	bl	801c842 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 80034fc:	4b17      	ldr	r3, [pc, #92]	; (800355c <MX_FREERTOS_Init+0x22c>)
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	2b00      	cmp	r3, #0
 8003502:	d00a      	beq.n	800351a <MX_FREERTOS_Init+0x1ea>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 8003504:	4b44      	ldr	r3, [pc, #272]	; (8003618 <MX_FREERTOS_Init+0x2e8>)
 8003506:	9301      	str	r3, [sp, #4]
 8003508:	2301      	movs	r3, #1
 800350a:	9300      	str	r3, [sp, #0]
 800350c:	2301      	movs	r3, #1
 800350e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003512:	4942      	ldr	r1, [pc, #264]	; (800361c <MX_FREERTOS_Init+0x2ec>)
 8003514:	4842      	ldr	r0, [pc, #264]	; (8003620 <MX_FREERTOS_Init+0x2f0>)
 8003516:	f019 f994 	bl	801c842 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
 800351a:	4b42      	ldr	r3, [pc, #264]	; (8003624 <MX_FREERTOS_Init+0x2f4>)
 800351c:	9301      	str	r3, [sp, #4]
 800351e:	2305      	movs	r3, #5
 8003520:	9300      	str	r3, [sp, #0]
 8003522:	2301      	movs	r3, #1
 8003524:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8003528:	493f      	ldr	r1, [pc, #252]	; (8003628 <MX_FREERTOS_Init+0x2f8>)
 800352a:	4840      	ldr	r0, [pc, #256]	; (800362c <MX_FREERTOS_Init+0x2fc>)
 800352c:	f019 f989 	bl	801c842 <xTaskCreate>
			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 500, (void*) 3,
 8003530:	4b3f      	ldr	r3, [pc, #252]	; (8003630 <MX_FREERTOS_Init+0x300>)
 8003532:	9301      	str	r3, [sp, #4]
 8003534:	2305      	movs	r3, #5
 8003536:	9300      	str	r3, [sp, #0]
 8003538:	2303      	movs	r3, #3
 800353a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800353e:	493d      	ldr	r1, [pc, #244]	; (8003634 <MX_FREERTOS_Init+0x304>)
 8003540:	483d      	ldr	r0, [pc, #244]	; (8003638 <MX_FREERTOS_Init+0x308>)
 8003542:	f019 f97e 	bl	801c842 <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);

  /* USER CODE END RTOS_THREADS */

}
 8003546:	bf00      	nop
 8003548:	3720      	adds	r7, #32
 800354a:	46bd      	mov	sp, r7
 800354c:	bdb0      	pop	{r4, r5, r7, pc}
 800354e:	bf00      	nop
 8003550:	200004c8 	.word	0x200004c8
 8003554:	200004cc 	.word	0x200004cc
 8003558:	200004d0 	.word	0x200004d0
 800355c:	200004d4 	.word	0x200004d4
 8003560:	200004d8 	.word	0x200004d8
 8003564:	200004dc 	.word	0x200004dc
 8003568:	200004e0 	.word	0x200004e0
 800356c:	200004e4 	.word	0x200004e4
 8003570:	200004e8 	.word	0x200004e8
 8003574:	08026928 	.word	0x08026928
 8003578:	200004ec 	.word	0x200004ec
 800357c:	200004a4 	.word	0x200004a4
 8003580:	08026834 	.word	0x08026834
 8003584:	08008145 	.word	0x08008145
 8003588:	2000049c 	.word	0x2000049c
 800358c:	08026840 	.word	0x08026840
 8003590:	0800cb15 	.word	0x0800cb15
 8003594:	20000488 	.word	0x20000488
 8003598:	08026854 	.word	0x08026854
 800359c:	0800669d 	.word	0x0800669d
 80035a0:	200004bc 	.word	0x200004bc
 80035a4:	08026860 	.word	0x08026860
 80035a8:	0800e809 	.word	0x0800e809
 80035ac:	200004b8 	.word	0x200004b8
 80035b0:	08026870 	.word	0x08026870
 80035b4:	0800e5cd 	.word	0x0800e5cd
 80035b8:	200004b4 	.word	0x200004b4
 80035bc:	08026884 	.word	0x08026884
 80035c0:	0800e439 	.word	0x0800e439
 80035c4:	200004c0 	.word	0x200004c0
 80035c8:	0802689c 	.word	0x0802689c
 80035cc:	0800d279 	.word	0x0800d279
 80035d0:	200004b0 	.word	0x200004b0
 80035d4:	080268ac 	.word	0x080268ac
 80035d8:	0800e231 	.word	0x0800e231
 80035dc:	200004c4 	.word	0x200004c4
 80035e0:	080268bc 	.word	0x080268bc
 80035e4:	0800cd2d 	.word	0x0800cd2d
 80035e8:	20000494 	.word	0x20000494
 80035ec:	080268cc 	.word	0x080268cc
 80035f0:	08008e31 	.word	0x08008e31
 80035f4:	20000490 	.word	0x20000490
 80035f8:	080268dc 	.word	0x080268dc
 80035fc:	08005801 	.word	0x08005801
 8003600:	2000048c 	.word	0x2000048c
 8003604:	080268e4 	.word	0x080268e4
 8003608:	0800d9c9 	.word	0x0800d9c9
 800360c:	20000498 	.word	0x20000498
 8003610:	080268f4 	.word	0x080268f4
 8003614:	08004ef9 	.word	0x08004ef9
 8003618:	200004a0 	.word	0x200004a0
 800361c:	08026900 	.word	0x08026900
 8003620:	0800e21d 	.word	0x0800e21d
 8003624:	200004a8 	.word	0x200004a8
 8003628:	0802690c 	.word	0x0802690c
 800362c:	0800dee9 	.word	0x0800dee9
 8003630:	200004ac 	.word	0x200004ac
 8003634:	0802691c 	.word	0x0802691c
 8003638:	08007879 	.word	0x08007879

0800363c <StartDefaultTask>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 800363c:	b580      	push	{r7, lr}
 800363e:	b082      	sub	sp, #8
 8003640:	af00      	add	r7, sp, #0
 8003642:	6078      	str	r0, [r7, #4]
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8003644:	f01b f9d2 	bl	801e9ec <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN StartDefaultTask */
	/* Infinite loop */
	for (;;) {
		osDelay(1);
 8003648:	2001      	movs	r0, #1
 800364a:	f018 f834 	bl	801b6b6 <osDelay>
 800364e:	e7fb      	b.n	8003648 <StartDefaultTask+0xc>

08003650 <MX_GPIO_Init>:
 8003650:	b580      	push	{r7, lr}
 8003652:	b08e      	sub	sp, #56	; 0x38
 8003654:	af00      	add	r7, sp, #0
 8003656:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800365a:	2200      	movs	r2, #0
 800365c:	601a      	str	r2, [r3, #0]
 800365e:	605a      	str	r2, [r3, #4]
 8003660:	609a      	str	r2, [r3, #8]
 8003662:	60da      	str	r2, [r3, #12]
 8003664:	611a      	str	r2, [r3, #16]
 8003666:	2300      	movs	r3, #0
 8003668:	623b      	str	r3, [r7, #32]
 800366a:	4b79      	ldr	r3, [pc, #484]	; (8003850 <MX_GPIO_Init+0x200>)
 800366c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800366e:	4a78      	ldr	r2, [pc, #480]	; (8003850 <MX_GPIO_Init+0x200>)
 8003670:	f043 0302 	orr.w	r3, r3, #2
 8003674:	6313      	str	r3, [r2, #48]	; 0x30
 8003676:	4b76      	ldr	r3, [pc, #472]	; (8003850 <MX_GPIO_Init+0x200>)
 8003678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800367a:	f003 0302 	and.w	r3, r3, #2
 800367e:	623b      	str	r3, [r7, #32]
 8003680:	6a3b      	ldr	r3, [r7, #32]
 8003682:	2300      	movs	r3, #0
 8003684:	61fb      	str	r3, [r7, #28]
 8003686:	4b72      	ldr	r3, [pc, #456]	; (8003850 <MX_GPIO_Init+0x200>)
 8003688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800368a:	4a71      	ldr	r2, [pc, #452]	; (8003850 <MX_GPIO_Init+0x200>)
 800368c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003690:	6313      	str	r3, [r2, #48]	; 0x30
 8003692:	4b6f      	ldr	r3, [pc, #444]	; (8003850 <MX_GPIO_Init+0x200>)
 8003694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003696:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800369a:	61fb      	str	r3, [r7, #28]
 800369c:	69fb      	ldr	r3, [r7, #28]
 800369e:	2300      	movs	r3, #0
 80036a0:	61bb      	str	r3, [r7, #24]
 80036a2:	4b6b      	ldr	r3, [pc, #428]	; (8003850 <MX_GPIO_Init+0x200>)
 80036a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036a6:	4a6a      	ldr	r2, [pc, #424]	; (8003850 <MX_GPIO_Init+0x200>)
 80036a8:	f043 0301 	orr.w	r3, r3, #1
 80036ac:	6313      	str	r3, [r2, #48]	; 0x30
 80036ae:	4b68      	ldr	r3, [pc, #416]	; (8003850 <MX_GPIO_Init+0x200>)
 80036b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036b2:	f003 0301 	and.w	r3, r3, #1
 80036b6:	61bb      	str	r3, [r7, #24]
 80036b8:	69bb      	ldr	r3, [r7, #24]
 80036ba:	2300      	movs	r3, #0
 80036bc:	617b      	str	r3, [r7, #20]
 80036be:	4b64      	ldr	r3, [pc, #400]	; (8003850 <MX_GPIO_Init+0x200>)
 80036c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036c2:	4a63      	ldr	r2, [pc, #396]	; (8003850 <MX_GPIO_Init+0x200>)
 80036c4:	f043 0308 	orr.w	r3, r3, #8
 80036c8:	6313      	str	r3, [r2, #48]	; 0x30
 80036ca:	4b61      	ldr	r3, [pc, #388]	; (8003850 <MX_GPIO_Init+0x200>)
 80036cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036ce:	f003 0308 	and.w	r3, r3, #8
 80036d2:	617b      	str	r3, [r7, #20]
 80036d4:	697b      	ldr	r3, [r7, #20]
 80036d6:	2300      	movs	r3, #0
 80036d8:	613b      	str	r3, [r7, #16]
 80036da:	4b5d      	ldr	r3, [pc, #372]	; (8003850 <MX_GPIO_Init+0x200>)
 80036dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036de:	4a5c      	ldr	r2, [pc, #368]	; (8003850 <MX_GPIO_Init+0x200>)
 80036e0:	f043 0304 	orr.w	r3, r3, #4
 80036e4:	6313      	str	r3, [r2, #48]	; 0x30
 80036e6:	4b5a      	ldr	r3, [pc, #360]	; (8003850 <MX_GPIO_Init+0x200>)
 80036e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036ea:	f003 0304 	and.w	r3, r3, #4
 80036ee:	613b      	str	r3, [r7, #16]
 80036f0:	693b      	ldr	r3, [r7, #16]
 80036f2:	2300      	movs	r3, #0
 80036f4:	60fb      	str	r3, [r7, #12]
 80036f6:	4b56      	ldr	r3, [pc, #344]	; (8003850 <MX_GPIO_Init+0x200>)
 80036f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036fa:	4a55      	ldr	r2, [pc, #340]	; (8003850 <MX_GPIO_Init+0x200>)
 80036fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003700:	6313      	str	r3, [r2, #48]	; 0x30
 8003702:	4b53      	ldr	r3, [pc, #332]	; (8003850 <MX_GPIO_Init+0x200>)
 8003704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003706:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800370a:	60fb      	str	r3, [r7, #12]
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	2300      	movs	r3, #0
 8003710:	60bb      	str	r3, [r7, #8]
 8003712:	4b4f      	ldr	r3, [pc, #316]	; (8003850 <MX_GPIO_Init+0x200>)
 8003714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003716:	4a4e      	ldr	r2, [pc, #312]	; (8003850 <MX_GPIO_Init+0x200>)
 8003718:	f043 0320 	orr.w	r3, r3, #32
 800371c:	6313      	str	r3, [r2, #48]	; 0x30
 800371e:	4b4c      	ldr	r3, [pc, #304]	; (8003850 <MX_GPIO_Init+0x200>)
 8003720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003722:	f003 0320 	and.w	r3, r3, #32
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	68bb      	ldr	r3, [r7, #8]
 800372a:	2300      	movs	r3, #0
 800372c:	607b      	str	r3, [r7, #4]
 800372e:	4b48      	ldr	r3, [pc, #288]	; (8003850 <MX_GPIO_Init+0x200>)
 8003730:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003732:	4a47      	ldr	r2, [pc, #284]	; (8003850 <MX_GPIO_Init+0x200>)
 8003734:	f043 0310 	orr.w	r3, r3, #16
 8003738:	6313      	str	r3, [r2, #48]	; 0x30
 800373a:	4b45      	ldr	r3, [pc, #276]	; (8003850 <MX_GPIO_Init+0x200>)
 800373c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800373e:	f003 0310 	and.w	r3, r3, #16
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	2200      	movs	r2, #0
 8003748:	f44f 7180 	mov.w	r1, #256	; 0x100
 800374c:	4841      	ldr	r0, [pc, #260]	; (8003854 <MX_GPIO_Init+0x204>)
 800374e:	f00d ff47 	bl	80115e0 <HAL_GPIO_WritePin>
 8003752:	2200      	movs	r2, #0
 8003754:	2140      	movs	r1, #64	; 0x40
 8003756:	4840      	ldr	r0, [pc, #256]	; (8003858 <MX_GPIO_Init+0x208>)
 8003758:	f00d ff42 	bl	80115e0 <HAL_GPIO_WritePin>
 800375c:	2201      	movs	r2, #1
 800375e:	2110      	movs	r1, #16
 8003760:	483e      	ldr	r0, [pc, #248]	; (800385c <MX_GPIO_Init+0x20c>)
 8003762:	f00d ff3d 	bl	80115e0 <HAL_GPIO_WritePin>
 8003766:	2201      	movs	r2, #1
 8003768:	2101      	movs	r1, #1
 800376a:	483d      	ldr	r0, [pc, #244]	; (8003860 <MX_GPIO_Init+0x210>)
 800376c:	f00d ff38 	bl	80115e0 <HAL_GPIO_WritePin>
 8003770:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003774:	627b      	str	r3, [r7, #36]	; 0x24
 8003776:	2301      	movs	r3, #1
 8003778:	62bb      	str	r3, [r7, #40]	; 0x28
 800377a:	2300      	movs	r3, #0
 800377c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800377e:	2300      	movs	r3, #0
 8003780:	633b      	str	r3, [r7, #48]	; 0x30
 8003782:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003786:	4619      	mov	r1, r3
 8003788:	4832      	ldr	r0, [pc, #200]	; (8003854 <MX_GPIO_Init+0x204>)
 800378a:	f00d fd8d 	bl	80112a8 <HAL_GPIO_Init>
 800378e:	2340      	movs	r3, #64	; 0x40
 8003790:	627b      	str	r3, [r7, #36]	; 0x24
 8003792:	2301      	movs	r3, #1
 8003794:	62bb      	str	r3, [r7, #40]	; 0x28
 8003796:	2300      	movs	r3, #0
 8003798:	62fb      	str	r3, [r7, #44]	; 0x2c
 800379a:	2300      	movs	r3, #0
 800379c:	633b      	str	r3, [r7, #48]	; 0x30
 800379e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037a2:	4619      	mov	r1, r3
 80037a4:	482c      	ldr	r0, [pc, #176]	; (8003858 <MX_GPIO_Init+0x208>)
 80037a6:	f00d fd7f 	bl	80112a8 <HAL_GPIO_Init>
 80037aa:	2308      	movs	r3, #8
 80037ac:	627b      	str	r3, [r7, #36]	; 0x24
 80037ae:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80037b2:	62bb      	str	r3, [r7, #40]	; 0x28
 80037b4:	2301      	movs	r3, #1
 80037b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037b8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037bc:	4619      	mov	r1, r3
 80037be:	4826      	ldr	r0, [pc, #152]	; (8003858 <MX_GPIO_Init+0x208>)
 80037c0:	f00d fd72 	bl	80112a8 <HAL_GPIO_Init>
 80037c4:	2310      	movs	r3, #16
 80037c6:	627b      	str	r3, [r7, #36]	; 0x24
 80037c8:	2301      	movs	r3, #1
 80037ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80037cc:	2300      	movs	r3, #0
 80037ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037d0:	2300      	movs	r3, #0
 80037d2:	633b      	str	r3, [r7, #48]	; 0x30
 80037d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037d8:	4619      	mov	r1, r3
 80037da:	4820      	ldr	r0, [pc, #128]	; (800385c <MX_GPIO_Init+0x20c>)
 80037dc:	f00d fd64 	bl	80112a8 <HAL_GPIO_Init>
 80037e0:	2330      	movs	r3, #48	; 0x30
 80037e2:	627b      	str	r3, [r7, #36]	; 0x24
 80037e4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80037e8:	62bb      	str	r3, [r7, #40]	; 0x28
 80037ea:	2301      	movs	r3, #1
 80037ec:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80037f2:	4619      	mov	r1, r3
 80037f4:	4817      	ldr	r0, [pc, #92]	; (8003854 <MX_GPIO_Init+0x204>)
 80037f6:	f00d fd57 	bl	80112a8 <HAL_GPIO_Init>
 80037fa:	2301      	movs	r3, #1
 80037fc:	627b      	str	r3, [r7, #36]	; 0x24
 80037fe:	2301      	movs	r3, #1
 8003800:	62bb      	str	r3, [r7, #40]	; 0x28
 8003802:	2300      	movs	r3, #0
 8003804:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003806:	2300      	movs	r3, #0
 8003808:	633b      	str	r3, [r7, #48]	; 0x30
 800380a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800380e:	4619      	mov	r1, r3
 8003810:	4813      	ldr	r0, [pc, #76]	; (8003860 <MX_GPIO_Init+0x210>)
 8003812:	f00d fd49 	bl	80112a8 <HAL_GPIO_Init>
 8003816:	2200      	movs	r2, #0
 8003818:	2105      	movs	r1, #5
 800381a:	2009      	movs	r0, #9
 800381c:	f00d f90c 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003820:	2009      	movs	r0, #9
 8003822:	f00d f925 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003826:	2200      	movs	r2, #0
 8003828:	2105      	movs	r1, #5
 800382a:	200a      	movs	r0, #10
 800382c:	f00d f904 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003830:	200a      	movs	r0, #10
 8003832:	f00d f91d 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003836:	2200      	movs	r2, #0
 8003838:	2105      	movs	r1, #5
 800383a:	2017      	movs	r0, #23
 800383c:	f00d f8fc 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003840:	2017      	movs	r0, #23
 8003842:	f00d f915 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003846:	bf00      	nop
 8003848:	3738      	adds	r7, #56	; 0x38
 800384a:	46bd      	mov	sp, r7
 800384c:	bd80      	pop	{r7, pc}
 800384e:	bf00      	nop
 8003850:	40023800 	.word	0x40023800
 8003854:	40020800 	.word	0x40020800
 8003858:	40021800 	.word	0x40021800
 800385c:	40020000 	.word	0x40020000
 8003860:	40020400 	.word	0x40020400

08003864 <MX_I2C3_Init>:
 8003864:	b580      	push	{r7, lr}
 8003866:	af00      	add	r7, sp, #0
 8003868:	4b12      	ldr	r3, [pc, #72]	; (80038b4 <MX_I2C3_Init+0x50>)
 800386a:	4a13      	ldr	r2, [pc, #76]	; (80038b8 <MX_I2C3_Init+0x54>)
 800386c:	601a      	str	r2, [r3, #0]
 800386e:	4b11      	ldr	r3, [pc, #68]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003870:	4a12      	ldr	r2, [pc, #72]	; (80038bc <MX_I2C3_Init+0x58>)
 8003872:	605a      	str	r2, [r3, #4]
 8003874:	4b0f      	ldr	r3, [pc, #60]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003876:	2200      	movs	r2, #0
 8003878:	609a      	str	r2, [r3, #8]
 800387a:	4b0e      	ldr	r3, [pc, #56]	; (80038b4 <MX_I2C3_Init+0x50>)
 800387c:	2200      	movs	r2, #0
 800387e:	60da      	str	r2, [r3, #12]
 8003880:	4b0c      	ldr	r3, [pc, #48]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003882:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003886:	611a      	str	r2, [r3, #16]
 8003888:	4b0a      	ldr	r3, [pc, #40]	; (80038b4 <MX_I2C3_Init+0x50>)
 800388a:	2200      	movs	r2, #0
 800388c:	615a      	str	r2, [r3, #20]
 800388e:	4b09      	ldr	r3, [pc, #36]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003890:	2200      	movs	r2, #0
 8003892:	619a      	str	r2, [r3, #24]
 8003894:	4b07      	ldr	r3, [pc, #28]	; (80038b4 <MX_I2C3_Init+0x50>)
 8003896:	2200      	movs	r2, #0
 8003898:	61da      	str	r2, [r3, #28]
 800389a:	4b06      	ldr	r3, [pc, #24]	; (80038b4 <MX_I2C3_Init+0x50>)
 800389c:	2200      	movs	r2, #0
 800389e:	621a      	str	r2, [r3, #32]
 80038a0:	4804      	ldr	r0, [pc, #16]	; (80038b4 <MX_I2C3_Init+0x50>)
 80038a2:	f00d fecf 	bl	8011644 <HAL_I2C_Init>
 80038a6:	4603      	mov	r3, r0
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d001      	beq.n	80038b0 <MX_I2C3_Init+0x4c>
 80038ac:	f000 f989 	bl	8003bc2 <Error_Handler>
 80038b0:	bf00      	nop
 80038b2:	bd80      	pop	{r7, pc}
 80038b4:	20001270 	.word	0x20001270
 80038b8:	40005c00 	.word	0x40005c00
 80038bc:	00061a80 	.word	0x00061a80

080038c0 <HAL_I2C_MspInit>:
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b08a      	sub	sp, #40	; 0x28
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	f107 0314 	add.w	r3, r7, #20
 80038cc:	2200      	movs	r2, #0
 80038ce:	601a      	str	r2, [r3, #0]
 80038d0:	605a      	str	r2, [r3, #4]
 80038d2:	609a      	str	r2, [r3, #8]
 80038d4:	60da      	str	r2, [r3, #12]
 80038d6:	611a      	str	r2, [r3, #16]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	4a5b      	ldr	r2, [pc, #364]	; (8003a4c <HAL_I2C_MspInit+0x18c>)
 80038de:	4293      	cmp	r3, r2
 80038e0:	f040 80b0 	bne.w	8003a44 <HAL_I2C_MspInit+0x184>
 80038e4:	2300      	movs	r3, #0
 80038e6:	613b      	str	r3, [r7, #16]
 80038e8:	4b59      	ldr	r3, [pc, #356]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ec:	4a58      	ldr	r2, [pc, #352]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038ee:	f043 0304 	orr.w	r3, r3, #4
 80038f2:	6313      	str	r3, [r2, #48]	; 0x30
 80038f4:	4b56      	ldr	r3, [pc, #344]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 80038f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038f8:	f003 0304 	and.w	r3, r3, #4
 80038fc:	613b      	str	r3, [r7, #16]
 80038fe:	693b      	ldr	r3, [r7, #16]
 8003900:	2300      	movs	r3, #0
 8003902:	60fb      	str	r3, [r7, #12]
 8003904:	4b52      	ldr	r3, [pc, #328]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003906:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003908:	4a51      	ldr	r2, [pc, #324]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 800390a:	f043 0301 	orr.w	r3, r3, #1
 800390e:	6313      	str	r3, [r2, #48]	; 0x30
 8003910:	4b4f      	ldr	r3, [pc, #316]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003914:	f003 0301 	and.w	r3, r3, #1
 8003918:	60fb      	str	r3, [r7, #12]
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003920:	617b      	str	r3, [r7, #20]
 8003922:	2312      	movs	r3, #18
 8003924:	61bb      	str	r3, [r7, #24]
 8003926:	2301      	movs	r3, #1
 8003928:	61fb      	str	r3, [r7, #28]
 800392a:	2303      	movs	r3, #3
 800392c:	623b      	str	r3, [r7, #32]
 800392e:	2304      	movs	r3, #4
 8003930:	627b      	str	r3, [r7, #36]	; 0x24
 8003932:	f107 0314 	add.w	r3, r7, #20
 8003936:	4619      	mov	r1, r3
 8003938:	4846      	ldr	r0, [pc, #280]	; (8003a54 <HAL_I2C_MspInit+0x194>)
 800393a:	f00d fcb5 	bl	80112a8 <HAL_GPIO_Init>
 800393e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003942:	617b      	str	r3, [r7, #20]
 8003944:	2312      	movs	r3, #18
 8003946:	61bb      	str	r3, [r7, #24]
 8003948:	2301      	movs	r3, #1
 800394a:	61fb      	str	r3, [r7, #28]
 800394c:	2303      	movs	r3, #3
 800394e:	623b      	str	r3, [r7, #32]
 8003950:	2304      	movs	r3, #4
 8003952:	627b      	str	r3, [r7, #36]	; 0x24
 8003954:	f107 0314 	add.w	r3, r7, #20
 8003958:	4619      	mov	r1, r3
 800395a:	483f      	ldr	r0, [pc, #252]	; (8003a58 <HAL_I2C_MspInit+0x198>)
 800395c:	f00d fca4 	bl	80112a8 <HAL_GPIO_Init>
 8003960:	2300      	movs	r3, #0
 8003962:	60bb      	str	r3, [r7, #8]
 8003964:	4b3a      	ldr	r3, [pc, #232]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003966:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003968:	4a39      	ldr	r2, [pc, #228]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 800396a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800396e:	6413      	str	r3, [r2, #64]	; 0x40
 8003970:	4b37      	ldr	r3, [pc, #220]	; (8003a50 <HAL_I2C_MspInit+0x190>)
 8003972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003974:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003978:	60bb      	str	r3, [r7, #8]
 800397a:	68bb      	ldr	r3, [r7, #8]
 800397c:	4b37      	ldr	r3, [pc, #220]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 800397e:	4a38      	ldr	r2, [pc, #224]	; (8003a60 <HAL_I2C_MspInit+0x1a0>)
 8003980:	601a      	str	r2, [r3, #0]
 8003982:	4b36      	ldr	r3, [pc, #216]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003984:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003988:	605a      	str	r2, [r3, #4]
 800398a:	4b34      	ldr	r3, [pc, #208]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 800398c:	2200      	movs	r2, #0
 800398e:	609a      	str	r2, [r3, #8]
 8003990:	4b32      	ldr	r3, [pc, #200]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003992:	2200      	movs	r2, #0
 8003994:	60da      	str	r2, [r3, #12]
 8003996:	4b31      	ldr	r3, [pc, #196]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 8003998:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800399c:	611a      	str	r2, [r3, #16]
 800399e:	4b2f      	ldr	r3, [pc, #188]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039a0:	2200      	movs	r2, #0
 80039a2:	615a      	str	r2, [r3, #20]
 80039a4:	4b2d      	ldr	r3, [pc, #180]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039a6:	2200      	movs	r2, #0
 80039a8:	619a      	str	r2, [r3, #24]
 80039aa:	4b2c      	ldr	r3, [pc, #176]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039ac:	2200      	movs	r2, #0
 80039ae:	61da      	str	r2, [r3, #28]
 80039b0:	4b2a      	ldr	r3, [pc, #168]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039b2:	2200      	movs	r2, #0
 80039b4:	621a      	str	r2, [r3, #32]
 80039b6:	4b29      	ldr	r3, [pc, #164]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	625a      	str	r2, [r3, #36]	; 0x24
 80039bc:	4827      	ldr	r0, [pc, #156]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039be:	f00d f865 	bl	8010a8c <HAL_DMA_Init>
 80039c2:	4603      	mov	r3, r0
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d001      	beq.n	80039cc <HAL_I2C_MspInit+0x10c>
 80039c8:	f000 f8fb 	bl	8003bc2 <Error_Handler>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	4a23      	ldr	r2, [pc, #140]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039d0:	639a      	str	r2, [r3, #56]	; 0x38
 80039d2:	4a22      	ldr	r2, [pc, #136]	; (8003a5c <HAL_I2C_MspInit+0x19c>)
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	6393      	str	r3, [r2, #56]	; 0x38
 80039d8:	4b22      	ldr	r3, [pc, #136]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039da:	4a23      	ldr	r2, [pc, #140]	; (8003a68 <HAL_I2C_MspInit+0x1a8>)
 80039dc:	601a      	str	r2, [r3, #0]
 80039de:	4b21      	ldr	r3, [pc, #132]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039e0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80039e4:	605a      	str	r2, [r3, #4]
 80039e6:	4b1f      	ldr	r3, [pc, #124]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039e8:	2240      	movs	r2, #64	; 0x40
 80039ea:	609a      	str	r2, [r3, #8]
 80039ec:	4b1d      	ldr	r3, [pc, #116]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039ee:	2200      	movs	r2, #0
 80039f0:	60da      	str	r2, [r3, #12]
 80039f2:	4b1c      	ldr	r3, [pc, #112]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80039f8:	611a      	str	r2, [r3, #16]
 80039fa:	4b1a      	ldr	r3, [pc, #104]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 80039fc:	2200      	movs	r2, #0
 80039fe:	615a      	str	r2, [r3, #20]
 8003a00:	4b18      	ldr	r3, [pc, #96]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a02:	2200      	movs	r2, #0
 8003a04:	619a      	str	r2, [r3, #24]
 8003a06:	4b17      	ldr	r3, [pc, #92]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a08:	2200      	movs	r2, #0
 8003a0a:	61da      	str	r2, [r3, #28]
 8003a0c:	4b15      	ldr	r3, [pc, #84]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a0e:	2200      	movs	r2, #0
 8003a10:	621a      	str	r2, [r3, #32]
 8003a12:	4b14      	ldr	r3, [pc, #80]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	625a      	str	r2, [r3, #36]	; 0x24
 8003a18:	4812      	ldr	r0, [pc, #72]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a1a:	f00d f837 	bl	8010a8c <HAL_DMA_Init>
 8003a1e:	4603      	mov	r3, r0
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d001      	beq.n	8003a28 <HAL_I2C_MspInit+0x168>
 8003a24:	f000 f8cd 	bl	8003bc2 <Error_Handler>
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	4a0e      	ldr	r2, [pc, #56]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a2c:	635a      	str	r2, [r3, #52]	; 0x34
 8003a2e:	4a0d      	ldr	r2, [pc, #52]	; (8003a64 <HAL_I2C_MspInit+0x1a4>)
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6393      	str	r3, [r2, #56]	; 0x38
 8003a34:	2200      	movs	r2, #0
 8003a36:	2105      	movs	r1, #5
 8003a38:	2049      	movs	r0, #73	; 0x49
 8003a3a:	f00c fffd 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003a3e:	2049      	movs	r0, #73	; 0x49
 8003a40:	f00d f816 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003a44:	bf00      	nop
 8003a46:	3728      	adds	r7, #40	; 0x28
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	bd80      	pop	{r7, pc}
 8003a4c:	40005c00 	.word	0x40005c00
 8003a50:	40023800 	.word	0x40023800
 8003a54:	40020800 	.word	0x40020800
 8003a58:	40020000 	.word	0x40020000
 8003a5c:	200012c4 	.word	0x200012c4
 8003a60:	40026040 	.word	0x40026040
 8003a64:	20001324 	.word	0x20001324
 8003a68:	40026070 	.word	0x40026070

08003a6c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003a6c:	b580      	push	{r7, lr}
 8003a6e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003a70:	f00b fde2 	bl	800f638 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003a74:	f000 f82c 	bl	8003ad0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003a78:	f7ff fdea 	bl	8003650 <MX_GPIO_Init>
  MX_DMA_Init();
 8003a7c:	f7ff fba4 	bl	80031c8 <MX_DMA_Init>
  MX_CAN1_Init();
 8003a80:	f7ff fa76 	bl	8002f70 <MX_CAN1_Init>
  MX_CAN2_Init();
 8003a84:	f7ff faaa 	bl	8002fdc <MX_CAN2_Init>
  MX_TIM5_Init();
 8003a88:	f000 fcde 	bl	8004448 <MX_TIM5_Init>
  MX_TIM10_Init();
 8003a8c:	f000 fd4c 	bl	8004528 <MX_TIM10_Init>
  MX_USART1_UART_Init();
 8003a90:	f000 fed8 	bl	8004844 <MX_USART1_UART_Init>
  MX_USART3_UART_Init();
 8003a94:	f000 ff00 	bl	8004898 <MX_USART3_UART_Init>
  MX_USART6_UART_Init();
 8003a98:	f000 ff2a 	bl	80048f0 <MX_USART6_UART_Init>
  MX_SPI1_Init();
 8003a9c:	f000 f8cc 	bl	8003c38 <MX_SPI1_Init>
  MX_I2C3_Init();
 8003aa0:	f7ff fee0 	bl	8003864 <MX_I2C3_Init>
  MX_ADC3_Init();
 8003aa4:	f7ff f9ce 	bl	8002e44 <MX_ADC3_Init>
  MX_TIM3_Init();
 8003aa8:	f000 fc02 	bl	80042b0 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003aac:	f000 fc72 	bl	8004394 <MX_TIM4_Init>
  MX_TIM1_Init();
 8003ab0:	f000 fb6e 	bl	8004190 <MX_TIM1_Init>
  MX_RNG_Init();
 8003ab4:	f000 f88a 	bl	8003bcc <MX_RNG_Init>
  /* USER CODE BEGIN 2 */
  startup_task();
 8003ab8:	f00a f9d1 	bl	800de5e <startup_task>
  HAL_TIM_Base_Start(&htim3); //start micros clock
 8003abc:	4803      	ldr	r0, [pc, #12]	; (8003acc <main+0x60>)
 8003abe:	f011 ff41 	bl	8015944 <HAL_TIM_Base_Start>
//  HAL_RNG_GenerateRandomNumber(hrng, random32bit)
  /* USER CODE END 2 */

  /* Call init function for freertos objects (in freertos.c) */
  MX_FREERTOS_Init();
 8003ac2:	f7ff fc35 	bl	8003330 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 8003ac6:	f017 fda3 	bl	801b610 <osKernelStart>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8003aca:	e7fe      	b.n	8003aca <main+0x5e>
 8003acc:	2000153c 	.word	0x2000153c

08003ad0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003ad0:	b580      	push	{r7, lr}
 8003ad2:	b094      	sub	sp, #80	; 0x50
 8003ad4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003ad6:	f107 0320 	add.w	r3, r7, #32
 8003ada:	2230      	movs	r2, #48	; 0x30
 8003adc:	2100      	movs	r1, #0
 8003ade:	4618      	mov	r0, r3
 8003ae0:	f01b fdf7 	bl	801f6d2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003ae4:	f107 030c 	add.w	r3, r7, #12
 8003ae8:	2200      	movs	r2, #0
 8003aea:	601a      	str	r2, [r3, #0]
 8003aec:	605a      	str	r2, [r3, #4]
 8003aee:	609a      	str	r2, [r3, #8]
 8003af0:	60da      	str	r2, [r3, #12]
 8003af2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003af4:	2300      	movs	r3, #0
 8003af6:	60bb      	str	r3, [r7, #8]
 8003af8:	4b28      	ldr	r3, [pc, #160]	; (8003b9c <SystemClock_Config+0xcc>)
 8003afa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003afc:	4a27      	ldr	r2, [pc, #156]	; (8003b9c <SystemClock_Config+0xcc>)
 8003afe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003b02:	6413      	str	r3, [r2, #64]	; 0x40
 8003b04:	4b25      	ldr	r3, [pc, #148]	; (8003b9c <SystemClock_Config+0xcc>)
 8003b06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b08:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b0c:	60bb      	str	r3, [r7, #8]
 8003b0e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003b10:	2300      	movs	r3, #0
 8003b12:	607b      	str	r3, [r7, #4]
 8003b14:	4b22      	ldr	r3, [pc, #136]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4a21      	ldr	r2, [pc, #132]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b1a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003b1e:	6013      	str	r3, [r2, #0]
 8003b20:	4b1f      	ldr	r3, [pc, #124]	; (8003ba0 <SystemClock_Config+0xd0>)
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003b28:	607b      	str	r3, [r7, #4]
 8003b2a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003b2c:	2301      	movs	r3, #1
 8003b2e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003b30:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003b34:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003b36:	2302      	movs	r3, #2
 8003b38:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003b3a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003b3e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 6;
 8003b40:	2306      	movs	r3, #6
 8003b42:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8003b44:	23a8      	movs	r3, #168	; 0xa8
 8003b46:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8003b48:	2302      	movs	r3, #2
 8003b4a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8003b4c:	2307      	movs	r3, #7
 8003b4e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003b50:	f107 0320 	add.w	r3, r7, #32
 8003b54:	4618      	mov	r0, r3
 8003b56:	f010 fd85 	bl	8014664 <HAL_RCC_OscConfig>
 8003b5a:	4603      	mov	r3, r0
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d001      	beq.n	8003b64 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8003b60:	f000 f82f 	bl	8003bc2 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003b64:	230f      	movs	r3, #15
 8003b66:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003b68:	2302      	movs	r3, #2
 8003b6a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8003b70:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8003b74:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8003b76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003b7a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8003b7c:	f107 030c 	add.w	r3, r7, #12
 8003b80:	2105      	movs	r1, #5
 8003b82:	4618      	mov	r0, r3
 8003b84:	f010 ffe6 	bl	8014b54 <HAL_RCC_ClockConfig>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d001      	beq.n	8003b92 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8003b8e:	f000 f818 	bl	8003bc2 <Error_Handler>
  }
}
 8003b92:	bf00      	nop
 8003b94:	3750      	adds	r7, #80	; 0x50
 8003b96:	46bd      	mov	sp, r7
 8003b98:	bd80      	pop	{r7, pc}
 8003b9a:	bf00      	nop
 8003b9c:	40023800 	.word	0x40023800
 8003ba0:	40007000 	.word	0x40007000

08003ba4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003ba4:	b580      	push	{r7, lr}
 8003ba6:	b082      	sub	sp, #8
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM2) {
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003bb4:	d101      	bne.n	8003bba <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003bb6:	f00b fd61 	bl	800f67c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003bba:	bf00      	nop
 8003bbc:	3708      	adds	r7, #8
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bd80      	pop	{r7, pc}

08003bc2 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003bc2:	b480      	push	{r7}
 8003bc4:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8003bc6:	b672      	cpsid	i
}
 8003bc8:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003bca:	e7fe      	b.n	8003bca <Error_Handler+0x8>

08003bcc <MX_RNG_Init>:
 8003bcc:	b580      	push	{r7, lr}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	4b06      	ldr	r3, [pc, #24]	; (8003bec <MX_RNG_Init+0x20>)
 8003bd2:	4a07      	ldr	r2, [pc, #28]	; (8003bf0 <MX_RNG_Init+0x24>)
 8003bd4:	601a      	str	r2, [r3, #0]
 8003bd6:	4805      	ldr	r0, [pc, #20]	; (8003bec <MX_RNG_Init+0x20>)
 8003bd8:	f011 f9ce 	bl	8014f78 <HAL_RNG_Init>
 8003bdc:	4603      	mov	r3, r0
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d001      	beq.n	8003be6 <MX_RNG_Init+0x1a>
 8003be2:	f7ff ffee 	bl	8003bc2 <Error_Handler>
 8003be6:	bf00      	nop
 8003be8:	bd80      	pop	{r7, pc}
 8003bea:	bf00      	nop
 8003bec:	20001384 	.word	0x20001384
 8003bf0:	50060800 	.word	0x50060800

08003bf4 <HAL_RNG_MspInit>:
 8003bf4:	b480      	push	{r7}
 8003bf6:	b085      	sub	sp, #20
 8003bf8:	af00      	add	r7, sp, #0
 8003bfa:	6078      	str	r0, [r7, #4]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	4a0b      	ldr	r2, [pc, #44]	; (8003c30 <HAL_RNG_MspInit+0x3c>)
 8003c02:	4293      	cmp	r3, r2
 8003c04:	d10d      	bne.n	8003c22 <HAL_RNG_MspInit+0x2e>
 8003c06:	2300      	movs	r3, #0
 8003c08:	60fb      	str	r3, [r7, #12]
 8003c0a:	4b0a      	ldr	r3, [pc, #40]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c0e:	4a09      	ldr	r2, [pc, #36]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c10:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003c14:	6353      	str	r3, [r2, #52]	; 0x34
 8003c16:	4b07      	ldr	r3, [pc, #28]	; (8003c34 <HAL_RNG_MspInit+0x40>)
 8003c18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003c1e:	60fb      	str	r3, [r7, #12]
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	bf00      	nop
 8003c24:	3714      	adds	r7, #20
 8003c26:	46bd      	mov	sp, r7
 8003c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2c:	4770      	bx	lr
 8003c2e:	bf00      	nop
 8003c30:	50060800 	.word	0x50060800
 8003c34:	40023800 	.word	0x40023800

08003c38 <MX_SPI1_Init>:
 8003c38:	b580      	push	{r7, lr}
 8003c3a:	af00      	add	r7, sp, #0
 8003c3c:	4b17      	ldr	r3, [pc, #92]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c3e:	4a18      	ldr	r2, [pc, #96]	; (8003ca0 <MX_SPI1_Init+0x68>)
 8003c40:	601a      	str	r2, [r3, #0]
 8003c42:	4b16      	ldr	r3, [pc, #88]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c44:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003c48:	605a      	str	r2, [r3, #4]
 8003c4a:	4b14      	ldr	r3, [pc, #80]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	609a      	str	r2, [r3, #8]
 8003c50:	4b12      	ldr	r3, [pc, #72]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c52:	2200      	movs	r2, #0
 8003c54:	60da      	str	r2, [r3, #12]
 8003c56:	4b11      	ldr	r3, [pc, #68]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c58:	2200      	movs	r2, #0
 8003c5a:	611a      	str	r2, [r3, #16]
 8003c5c:	4b0f      	ldr	r3, [pc, #60]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c5e:	2200      	movs	r2, #0
 8003c60:	615a      	str	r2, [r3, #20]
 8003c62:	4b0e      	ldr	r3, [pc, #56]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c64:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003c68:	619a      	str	r2, [r3, #24]
 8003c6a:	4b0c      	ldr	r3, [pc, #48]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c6c:	2228      	movs	r2, #40	; 0x28
 8003c6e:	61da      	str	r2, [r3, #28]
 8003c70:	4b0a      	ldr	r3, [pc, #40]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c72:	2200      	movs	r2, #0
 8003c74:	621a      	str	r2, [r3, #32]
 8003c76:	4b09      	ldr	r3, [pc, #36]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c78:	2200      	movs	r2, #0
 8003c7a:	625a      	str	r2, [r3, #36]	; 0x24
 8003c7c:	4b07      	ldr	r3, [pc, #28]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c7e:	2200      	movs	r2, #0
 8003c80:	629a      	str	r2, [r3, #40]	; 0x28
 8003c82:	4b06      	ldr	r3, [pc, #24]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c84:	220a      	movs	r2, #10
 8003c86:	62da      	str	r2, [r3, #44]	; 0x2c
 8003c88:	4804      	ldr	r0, [pc, #16]	; (8003c9c <MX_SPI1_Init+0x64>)
 8003c8a:	f011 f99f 	bl	8014fcc <HAL_SPI_Init>
 8003c8e:	4603      	mov	r3, r0
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d001      	beq.n	8003c98 <MX_SPI1_Init+0x60>
 8003c94:	f7ff ff95 	bl	8003bc2 <Error_Handler>
 8003c98:	bf00      	nop
 8003c9a:	bd80      	pop	{r7, pc}
 8003c9c:	20001394 	.word	0x20001394
 8003ca0:	40013000 	.word	0x40013000

08003ca4 <HAL_SPI_MspInit>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	b08a      	sub	sp, #40	; 0x28
 8003ca8:	af00      	add	r7, sp, #0
 8003caa:	6078      	str	r0, [r7, #4]
 8003cac:	f107 0314 	add.w	r3, r7, #20
 8003cb0:	2200      	movs	r2, #0
 8003cb2:	601a      	str	r2, [r3, #0]
 8003cb4:	605a      	str	r2, [r3, #4]
 8003cb6:	609a      	str	r2, [r3, #8]
 8003cb8:	60da      	str	r2, [r3, #12]
 8003cba:	611a      	str	r2, [r3, #16]
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	4a56      	ldr	r2, [pc, #344]	; (8003e1c <HAL_SPI_MspInit+0x178>)
 8003cc2:	4293      	cmp	r3, r2
 8003cc4:	f040 80a6 	bne.w	8003e14 <HAL_SPI_MspInit+0x170>
 8003cc8:	2300      	movs	r3, #0
 8003cca:	613b      	str	r3, [r7, #16]
 8003ccc:	4b54      	ldr	r3, [pc, #336]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cd0:	4a53      	ldr	r2, [pc, #332]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cd2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003cd6:	6453      	str	r3, [r2, #68]	; 0x44
 8003cd8:	4b51      	ldr	r3, [pc, #324]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cdc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003ce0:	613b      	str	r3, [r7, #16]
 8003ce2:	693b      	ldr	r3, [r7, #16]
 8003ce4:	2300      	movs	r3, #0
 8003ce6:	60fb      	str	r3, [r7, #12]
 8003ce8:	4b4d      	ldr	r3, [pc, #308]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cec:	4a4c      	ldr	r2, [pc, #304]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cee:	f043 0302 	orr.w	r3, r3, #2
 8003cf2:	6313      	str	r3, [r2, #48]	; 0x30
 8003cf4:	4b4a      	ldr	r3, [pc, #296]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003cf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cf8:	f003 0302 	and.w	r3, r3, #2
 8003cfc:	60fb      	str	r3, [r7, #12]
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	2300      	movs	r3, #0
 8003d02:	60bb      	str	r3, [r7, #8]
 8003d04:	4b46      	ldr	r3, [pc, #280]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d08:	4a45      	ldr	r2, [pc, #276]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d0a:	f043 0301 	orr.w	r3, r3, #1
 8003d0e:	6313      	str	r3, [r2, #48]	; 0x30
 8003d10:	4b43      	ldr	r3, [pc, #268]	; (8003e20 <HAL_SPI_MspInit+0x17c>)
 8003d12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d14:	f003 0301 	and.w	r3, r3, #1
 8003d18:	60bb      	str	r3, [r7, #8]
 8003d1a:	68bb      	ldr	r3, [r7, #8]
 8003d1c:	2318      	movs	r3, #24
 8003d1e:	617b      	str	r3, [r7, #20]
 8003d20:	2302      	movs	r3, #2
 8003d22:	61bb      	str	r3, [r7, #24]
 8003d24:	2300      	movs	r3, #0
 8003d26:	61fb      	str	r3, [r7, #28]
 8003d28:	2303      	movs	r3, #3
 8003d2a:	623b      	str	r3, [r7, #32]
 8003d2c:	2305      	movs	r3, #5
 8003d2e:	627b      	str	r3, [r7, #36]	; 0x24
 8003d30:	f107 0314 	add.w	r3, r7, #20
 8003d34:	4619      	mov	r1, r3
 8003d36:	483b      	ldr	r0, [pc, #236]	; (8003e24 <HAL_SPI_MspInit+0x180>)
 8003d38:	f00d fab6 	bl	80112a8 <HAL_GPIO_Init>
 8003d3c:	2380      	movs	r3, #128	; 0x80
 8003d3e:	617b      	str	r3, [r7, #20]
 8003d40:	2302      	movs	r3, #2
 8003d42:	61bb      	str	r3, [r7, #24]
 8003d44:	2300      	movs	r3, #0
 8003d46:	61fb      	str	r3, [r7, #28]
 8003d48:	2303      	movs	r3, #3
 8003d4a:	623b      	str	r3, [r7, #32]
 8003d4c:	2305      	movs	r3, #5
 8003d4e:	627b      	str	r3, [r7, #36]	; 0x24
 8003d50:	f107 0314 	add.w	r3, r7, #20
 8003d54:	4619      	mov	r1, r3
 8003d56:	4834      	ldr	r0, [pc, #208]	; (8003e28 <HAL_SPI_MspInit+0x184>)
 8003d58:	f00d faa6 	bl	80112a8 <HAL_GPIO_Init>
 8003d5c:	4b33      	ldr	r3, [pc, #204]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d5e:	4a34      	ldr	r2, [pc, #208]	; (8003e30 <HAL_SPI_MspInit+0x18c>)
 8003d60:	601a      	str	r2, [r3, #0]
 8003d62:	4b32      	ldr	r3, [pc, #200]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d64:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003d68:	605a      	str	r2, [r3, #4]
 8003d6a:	4b30      	ldr	r3, [pc, #192]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d6c:	2200      	movs	r2, #0
 8003d6e:	609a      	str	r2, [r3, #8]
 8003d70:	4b2e      	ldr	r3, [pc, #184]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d72:	2200      	movs	r2, #0
 8003d74:	60da      	str	r2, [r3, #12]
 8003d76:	4b2d      	ldr	r3, [pc, #180]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d78:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003d7c:	611a      	str	r2, [r3, #16]
 8003d7e:	4b2b      	ldr	r3, [pc, #172]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d80:	2200      	movs	r2, #0
 8003d82:	615a      	str	r2, [r3, #20]
 8003d84:	4b29      	ldr	r3, [pc, #164]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d86:	2200      	movs	r2, #0
 8003d88:	619a      	str	r2, [r3, #24]
 8003d8a:	4b28      	ldr	r3, [pc, #160]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	61da      	str	r2, [r3, #28]
 8003d90:	4b26      	ldr	r3, [pc, #152]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d92:	2200      	movs	r2, #0
 8003d94:	621a      	str	r2, [r3, #32]
 8003d96:	4b25      	ldr	r3, [pc, #148]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d98:	2200      	movs	r2, #0
 8003d9a:	625a      	str	r2, [r3, #36]	; 0x24
 8003d9c:	4823      	ldr	r0, [pc, #140]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003d9e:	f00c fe75 	bl	8010a8c <HAL_DMA_Init>
 8003da2:	4603      	mov	r3, r0
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d001      	beq.n	8003dac <HAL_SPI_MspInit+0x108>
 8003da8:	f7ff ff0b 	bl	8003bc2 <Error_Handler>
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	4a1f      	ldr	r2, [pc, #124]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003db0:	64da      	str	r2, [r3, #76]	; 0x4c
 8003db2:	4a1e      	ldr	r2, [pc, #120]	; (8003e2c <HAL_SPI_MspInit+0x188>)
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	6393      	str	r3, [r2, #56]	; 0x38
 8003db8:	4b1e      	ldr	r3, [pc, #120]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dba:	4a1f      	ldr	r2, [pc, #124]	; (8003e38 <HAL_SPI_MspInit+0x194>)
 8003dbc:	601a      	str	r2, [r3, #0]
 8003dbe:	4b1d      	ldr	r3, [pc, #116]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dc0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003dc4:	605a      	str	r2, [r3, #4]
 8003dc6:	4b1b      	ldr	r3, [pc, #108]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dc8:	2240      	movs	r2, #64	; 0x40
 8003dca:	609a      	str	r2, [r3, #8]
 8003dcc:	4b19      	ldr	r3, [pc, #100]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dce:	2200      	movs	r2, #0
 8003dd0:	60da      	str	r2, [r3, #12]
 8003dd2:	4b18      	ldr	r3, [pc, #96]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003dd8:	611a      	str	r2, [r3, #16]
 8003dda:	4b16      	ldr	r3, [pc, #88]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003ddc:	2200      	movs	r2, #0
 8003dde:	615a      	str	r2, [r3, #20]
 8003de0:	4b14      	ldr	r3, [pc, #80]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003de2:	2200      	movs	r2, #0
 8003de4:	619a      	str	r2, [r3, #24]
 8003de6:	4b13      	ldr	r3, [pc, #76]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003de8:	2200      	movs	r2, #0
 8003dea:	61da      	str	r2, [r3, #28]
 8003dec:	4b11      	ldr	r3, [pc, #68]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dee:	2200      	movs	r2, #0
 8003df0:	621a      	str	r2, [r3, #32]
 8003df2:	4b10      	ldr	r3, [pc, #64]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003df4:	2200      	movs	r2, #0
 8003df6:	625a      	str	r2, [r3, #36]	; 0x24
 8003df8:	480e      	ldr	r0, [pc, #56]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003dfa:	f00c fe47 	bl	8010a8c <HAL_DMA_Init>
 8003dfe:	4603      	mov	r3, r0
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	d001      	beq.n	8003e08 <HAL_SPI_MspInit+0x164>
 8003e04:	f7ff fedd 	bl	8003bc2 <Error_Handler>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	4a0a      	ldr	r2, [pc, #40]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003e0c:	649a      	str	r2, [r3, #72]	; 0x48
 8003e0e:	4a09      	ldr	r2, [pc, #36]	; (8003e34 <HAL_SPI_MspInit+0x190>)
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	6393      	str	r3, [r2, #56]	; 0x38
 8003e14:	bf00      	nop
 8003e16:	3728      	adds	r7, #40	; 0x28
 8003e18:	46bd      	mov	sp, r7
 8003e1a:	bd80      	pop	{r7, pc}
 8003e1c:	40013000 	.word	0x40013000
 8003e20:	40023800 	.word	0x40023800
 8003e24:	40020400 	.word	0x40020400
 8003e28:	40020000 	.word	0x40020000
 8003e2c:	200013ec 	.word	0x200013ec
 8003e30:	40026410 	.word	0x40026410
 8003e34:	2000144c 	.word	0x2000144c
 8003e38:	40026458 	.word	0x40026458

08003e3c <HAL_MspInit>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b082      	sub	sp, #8
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	2300      	movs	r3, #0
 8003e44:	607b      	str	r3, [r7, #4]
 8003e46:	4b12      	ldr	r3, [pc, #72]	; (8003e90 <HAL_MspInit+0x54>)
 8003e48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003e4a:	4a11      	ldr	r2, [pc, #68]	; (8003e90 <HAL_MspInit+0x54>)
 8003e4c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003e50:	6453      	str	r3, [r2, #68]	; 0x44
 8003e52:	4b0f      	ldr	r3, [pc, #60]	; (8003e90 <HAL_MspInit+0x54>)
 8003e54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003e56:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003e5a:	607b      	str	r3, [r7, #4]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	2300      	movs	r3, #0
 8003e60:	603b      	str	r3, [r7, #0]
 8003e62:	4b0b      	ldr	r3, [pc, #44]	; (8003e90 <HAL_MspInit+0x54>)
 8003e64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e66:	4a0a      	ldr	r2, [pc, #40]	; (8003e90 <HAL_MspInit+0x54>)
 8003e68:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003e6c:	6413      	str	r3, [r2, #64]	; 0x40
 8003e6e:	4b08      	ldr	r3, [pc, #32]	; (8003e90 <HAL_MspInit+0x54>)
 8003e70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e72:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e76:	603b      	str	r3, [r7, #0]
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	210f      	movs	r1, #15
 8003e7e:	f06f 0001 	mvn.w	r0, #1
 8003e82:	f00c fdd9 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003e86:	bf00      	nop
 8003e88:	3708      	adds	r7, #8
 8003e8a:	46bd      	mov	sp, r7
 8003e8c:	bd80      	pop	{r7, pc}
 8003e8e:	bf00      	nop
 8003e90:	40023800 	.word	0x40023800

08003e94 <HAL_InitTick>:
 8003e94:	b580      	push	{r7, lr}
 8003e96:	b08e      	sub	sp, #56	; 0x38
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
 8003e9c:	2300      	movs	r3, #0
 8003e9e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ea0:	2300      	movs	r3, #0
 8003ea2:	62bb      	str	r3, [r7, #40]	; 0x28
 8003ea4:	2300      	movs	r3, #0
 8003ea6:	60fb      	str	r3, [r7, #12]
 8003ea8:	4b34      	ldr	r3, [pc, #208]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003eac:	4a33      	ldr	r2, [pc, #204]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eae:	f043 0301 	orr.w	r3, r3, #1
 8003eb2:	6413      	str	r3, [r2, #64]	; 0x40
 8003eb4:	4b31      	ldr	r3, [pc, #196]	; (8003f7c <HAL_InitTick+0xe8>)
 8003eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003eb8:	f003 0301 	and.w	r3, r3, #1
 8003ebc:	60fb      	str	r3, [r7, #12]
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	f107 0210 	add.w	r2, r7, #16
 8003ec4:	f107 0314 	add.w	r3, r7, #20
 8003ec8:	4611      	mov	r1, r2
 8003eca:	4618      	mov	r0, r3
 8003ecc:	f011 f822 	bl	8014f14 <HAL_RCC_GetClockConfig>
 8003ed0:	6a3b      	ldr	r3, [r7, #32]
 8003ed2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ed4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d103      	bne.n	8003ee2 <HAL_InitTick+0x4e>
 8003eda:	f010 fff3 	bl	8014ec4 <HAL_RCC_GetPCLK1Freq>
 8003ede:	6378      	str	r0, [r7, #52]	; 0x34
 8003ee0:	e004      	b.n	8003eec <HAL_InitTick+0x58>
 8003ee2:	f010 ffef 	bl	8014ec4 <HAL_RCC_GetPCLK1Freq>
 8003ee6:	4603      	mov	r3, r0
 8003ee8:	005b      	lsls	r3, r3, #1
 8003eea:	637b      	str	r3, [r7, #52]	; 0x34
 8003eec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003eee:	4a24      	ldr	r2, [pc, #144]	; (8003f80 <HAL_InitTick+0xec>)
 8003ef0:	fba2 2303 	umull	r2, r3, r2, r3
 8003ef4:	0c9b      	lsrs	r3, r3, #18
 8003ef6:	3b01      	subs	r3, #1
 8003ef8:	62bb      	str	r3, [r7, #40]	; 0x28
 8003efa:	4b22      	ldr	r3, [pc, #136]	; (8003f84 <HAL_InitTick+0xf0>)
 8003efc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003f00:	601a      	str	r2, [r3, #0]
 8003f02:	4b20      	ldr	r3, [pc, #128]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f04:	f240 32e7 	movw	r2, #999	; 0x3e7
 8003f08:	60da      	str	r2, [r3, #12]
 8003f0a:	4a1e      	ldr	r2, [pc, #120]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003f0e:	6053      	str	r3, [r2, #4]
 8003f10:	4b1c      	ldr	r3, [pc, #112]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f12:	2200      	movs	r2, #0
 8003f14:	611a      	str	r2, [r3, #16]
 8003f16:	4b1b      	ldr	r3, [pc, #108]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f18:	2200      	movs	r2, #0
 8003f1a:	609a      	str	r2, [r3, #8]
 8003f1c:	4b19      	ldr	r3, [pc, #100]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f1e:	2200      	movs	r2, #0
 8003f20:	619a      	str	r2, [r3, #24]
 8003f22:	4818      	ldr	r0, [pc, #96]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f24:	f011 fcbe 	bl	80158a4 <HAL_TIM_Base_Init>
 8003f28:	4603      	mov	r3, r0
 8003f2a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f2e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d11b      	bne.n	8003f6e <HAL_InitTick+0xda>
 8003f36:	4813      	ldr	r0, [pc, #76]	; (8003f84 <HAL_InitTick+0xf0>)
 8003f38:	f011 fd6c 	bl	8015a14 <HAL_TIM_Base_Start_IT>
 8003f3c:	4603      	mov	r3, r0
 8003f3e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f42:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d111      	bne.n	8003f6e <HAL_InitTick+0xda>
 8003f4a:	201c      	movs	r0, #28
 8003f4c:	f00c fd90 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	2b0f      	cmp	r3, #15
 8003f54:	d808      	bhi.n	8003f68 <HAL_InitTick+0xd4>
 8003f56:	2200      	movs	r2, #0
 8003f58:	6879      	ldr	r1, [r7, #4]
 8003f5a:	201c      	movs	r0, #28
 8003f5c:	f00c fd6c 	bl	8010a38 <HAL_NVIC_SetPriority>
 8003f60:	4a09      	ldr	r2, [pc, #36]	; (8003f88 <HAL_InitTick+0xf4>)
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	6013      	str	r3, [r2, #0]
 8003f66:	e002      	b.n	8003f6e <HAL_InitTick+0xda>
 8003f68:	2301      	movs	r3, #1
 8003f6a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003f6e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003f72:	4618      	mov	r0, r3
 8003f74:	3738      	adds	r7, #56	; 0x38
 8003f76:	46bd      	mov	sp, r7
 8003f78:	bd80      	pop	{r7, pc}
 8003f7a:	bf00      	nop
 8003f7c:	40023800 	.word	0x40023800
 8003f80:	431bde83 	.word	0x431bde83
 8003f84:	200014ac 	.word	0x200014ac
 8003f88:	20000054 	.word	0x20000054

08003f8c <NMI_Handler>:
 8003f8c:	b480      	push	{r7}
 8003f8e:	af00      	add	r7, sp, #0
 8003f90:	e7fe      	b.n	8003f90 <NMI_Handler+0x4>

08003f92 <HardFault_Handler>:
 8003f92:	b480      	push	{r7}
 8003f94:	af00      	add	r7, sp, #0
 8003f96:	e7fe      	b.n	8003f96 <HardFault_Handler+0x4>

08003f98 <MemManage_Handler>:
 8003f98:	b480      	push	{r7}
 8003f9a:	af00      	add	r7, sp, #0
 8003f9c:	e7fe      	b.n	8003f9c <MemManage_Handler+0x4>

08003f9e <BusFault_Handler>:
 8003f9e:	b480      	push	{r7}
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	e7fe      	b.n	8003fa2 <BusFault_Handler+0x4>

08003fa4 <UsageFault_Handler>:
 8003fa4:	b480      	push	{r7}
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	e7fe      	b.n	8003fa8 <UsageFault_Handler+0x4>

08003faa <DebugMon_Handler>:
 8003faa:	b480      	push	{r7}
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	bf00      	nop
 8003fb0:	46bd      	mov	sp, r7
 8003fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb6:	4770      	bx	lr

08003fb8 <EXTI3_IRQHandler>:
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	af00      	add	r7, sp, #0
 8003fbc:	2008      	movs	r0, #8
 8003fbe:	f00d fb29 	bl	8011614 <HAL_GPIO_EXTI_IRQHandler>
 8003fc2:	bf00      	nop
 8003fc4:	bd80      	pop	{r7, pc}

08003fc6 <EXTI4_IRQHandler>:
 8003fc6:	b580      	push	{r7, lr}
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	2010      	movs	r0, #16
 8003fcc:	f00d fb22 	bl	8011614 <HAL_GPIO_EXTI_IRQHandler>
 8003fd0:	bf00      	nop
 8003fd2:	bd80      	pop	{r7, pc}

08003fd4 <DMA1_Stream1_IRQHandler>:
 8003fd4:	b580      	push	{r7, lr}
 8003fd6:	af00      	add	r7, sp, #0
 8003fd8:	4802      	ldr	r0, [pc, #8]	; (8003fe4 <DMA1_Stream1_IRQHandler+0x10>)
 8003fda:	f00c feef 	bl	8010dbc <HAL_DMA_IRQHandler>
 8003fde:	bf00      	nop
 8003fe0:	bd80      	pop	{r7, pc}
 8003fe2:	bf00      	nop
 8003fe4:	20001788 	.word	0x20001788

08003fe8 <DMA1_Stream2_IRQHandler>:
 8003fe8:	b580      	push	{r7, lr}
 8003fea:	af00      	add	r7, sp, #0
 8003fec:	4802      	ldr	r0, [pc, #8]	; (8003ff8 <DMA1_Stream2_IRQHandler+0x10>)
 8003fee:	f00c fee5 	bl	8010dbc <HAL_DMA_IRQHandler>
 8003ff2:	bf00      	nop
 8003ff4:	bd80      	pop	{r7, pc}
 8003ff6:	bf00      	nop
 8003ff8:	200012c4 	.word	0x200012c4

08003ffc <DMA1_Stream4_IRQHandler>:
 8003ffc:	b580      	push	{r7, lr}
 8003ffe:	af00      	add	r7, sp, #0
 8004000:	4802      	ldr	r0, [pc, #8]	; (800400c <DMA1_Stream4_IRQHandler+0x10>)
 8004002:	f00c fedb 	bl	8010dbc <HAL_DMA_IRQHandler>
 8004006:	bf00      	nop
 8004008:	bd80      	pop	{r7, pc}
 800400a:	bf00      	nop
 800400c:	20001324 	.word	0x20001324

08004010 <CAN1_RX0_IRQHandler>:
 8004010:	b580      	push	{r7, lr}
 8004012:	af00      	add	r7, sp, #0
 8004014:	4802      	ldr	r0, [pc, #8]	; (8004020 <CAN1_RX0_IRQHandler+0x10>)
 8004016:	f00c fa31 	bl	801047c <HAL_CAN_IRQHandler>
 800401a:	bf00      	nop
 800401c:	bd80      	pop	{r7, pc}
 800401e:	bf00      	nop
 8004020:	20000434 	.word	0x20000434

08004024 <CAN1_RX1_IRQHandler>:
 8004024:	b580      	push	{r7, lr}
 8004026:	af00      	add	r7, sp, #0
 8004028:	4802      	ldr	r0, [pc, #8]	; (8004034 <CAN1_RX1_IRQHandler+0x10>)
 800402a:	f00c fa27 	bl	801047c <HAL_CAN_IRQHandler>
 800402e:	bf00      	nop
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	20000434 	.word	0x20000434

08004038 <EXTI9_5_IRQHandler>:
 8004038:	b580      	push	{r7, lr}
 800403a:	af00      	add	r7, sp, #0
 800403c:	2020      	movs	r0, #32
 800403e:	f00d fae9 	bl	8011614 <HAL_GPIO_EXTI_IRQHandler>
 8004042:	bf00      	nop
 8004044:	bd80      	pop	{r7, pc}
	...

08004048 <TIM2_IRQHandler>:
 8004048:	b580      	push	{r7, lr}
 800404a:	af00      	add	r7, sp, #0
 800404c:	4802      	ldr	r0, [pc, #8]	; (8004058 <TIM2_IRQHandler+0x10>)
 800404e:	f011 fec1 	bl	8015dd4 <HAL_TIM_IRQHandler>
 8004052:	bf00      	nop
 8004054:	bd80      	pop	{r7, pc}
 8004056:	bf00      	nop
 8004058:	200014ac 	.word	0x200014ac

0800405c <TIM3_IRQHandler>:
 800405c:	b580      	push	{r7, lr}
 800405e:	af00      	add	r7, sp, #0
 8004060:	4803      	ldr	r0, [pc, #12]	; (8004070 <TIM3_IRQHandler+0x14>)
 8004062:	f011 feb7 	bl	8015dd4 <HAL_TIM_IRQHandler>
 8004066:	f7fe f8d1 	bl	800220c <micros_tick>
 800406a:	bf00      	nop
 800406c:	bd80      	pop	{r7, pc}
 800406e:	bf00      	nop
 8004070:	2000153c 	.word	0x2000153c

08004074 <USART1_IRQHandler>:
 8004074:	b580      	push	{r7, lr}
 8004076:	af00      	add	r7, sp, #0
 8004078:	4802      	ldr	r0, [pc, #8]	; (8004084 <USART1_IRQHandler+0x10>)
 800407a:	f012 ff43 	bl	8016f04 <HAL_UART_IRQHandler>
 800407e:	bf00      	nop
 8004080:	bd80      	pop	{r7, pc}
 8004082:	bf00      	nop
 8004084:	2000165c 	.word	0x2000165c

08004088 <USART3_IRQHandler>:
 8004088:	b580      	push	{r7, lr}
 800408a:	af00      	add	r7, sp, #0
 800408c:	4802      	ldr	r0, [pc, #8]	; (8004098 <USART3_IRQHandler+0x10>)
 800408e:	f012 ff39 	bl	8016f04 <HAL_UART_IRQHandler>
 8004092:	bf00      	nop
 8004094:	bd80      	pop	{r7, pc}
 8004096:	bf00      	nop
 8004098:	200016a0 	.word	0x200016a0

0800409c <DMA2_Stream0_IRQHandler>:
 800409c:	b580      	push	{r7, lr}
 800409e:	af00      	add	r7, sp, #0
 80040a0:	4802      	ldr	r0, [pc, #8]	; (80040ac <DMA2_Stream0_IRQHandler+0x10>)
 80040a2:	f00c fe8b 	bl	8010dbc <HAL_DMA_IRQHandler>
 80040a6:	bf00      	nop
 80040a8:	bd80      	pop	{r7, pc}
 80040aa:	bf00      	nop
 80040ac:	200013ec 	.word	0x200013ec

080040b0 <DMA2_Stream1_IRQHandler>:
 80040b0:	b580      	push	{r7, lr}
 80040b2:	af00      	add	r7, sp, #0
 80040b4:	4802      	ldr	r0, [pc, #8]	; (80040c0 <DMA2_Stream1_IRQHandler+0x10>)
 80040b6:	f00c fe81 	bl	8010dbc <HAL_DMA_IRQHandler>
 80040ba:	bf00      	nop
 80040bc:	bd80      	pop	{r7, pc}
 80040be:	bf00      	nop
 80040c0:	200017e8 	.word	0x200017e8

080040c4 <DMA2_Stream3_IRQHandler>:
 80040c4:	b580      	push	{r7, lr}
 80040c6:	af00      	add	r7, sp, #0
 80040c8:	4802      	ldr	r0, [pc, #8]	; (80040d4 <DMA2_Stream3_IRQHandler+0x10>)
 80040ca:	f00c fe77 	bl	8010dbc <HAL_DMA_IRQHandler>
 80040ce:	bf00      	nop
 80040d0:	bd80      	pop	{r7, pc}
 80040d2:	bf00      	nop
 80040d4:	2000144c 	.word	0x2000144c

080040d8 <CAN2_RX0_IRQHandler>:
 80040d8:	b580      	push	{r7, lr}
 80040da:	af00      	add	r7, sp, #0
 80040dc:	4802      	ldr	r0, [pc, #8]	; (80040e8 <CAN2_RX0_IRQHandler+0x10>)
 80040de:	f00c f9cd 	bl	801047c <HAL_CAN_IRQHandler>
 80040e2:	bf00      	nop
 80040e4:	bd80      	pop	{r7, pc}
 80040e6:	bf00      	nop
 80040e8:	2000045c 	.word	0x2000045c

080040ec <CAN2_RX1_IRQHandler>:
 80040ec:	b580      	push	{r7, lr}
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	4802      	ldr	r0, [pc, #8]	; (80040fc <CAN2_RX1_IRQHandler+0x10>)
 80040f2:	f00c f9c3 	bl	801047c <HAL_CAN_IRQHandler>
 80040f6:	bf00      	nop
 80040f8:	bd80      	pop	{r7, pc}
 80040fa:	bf00      	nop
 80040fc:	2000045c 	.word	0x2000045c

08004100 <OTG_FS_IRQHandler>:
 8004100:	b580      	push	{r7, lr}
 8004102:	af00      	add	r7, sp, #0
 8004104:	4802      	ldr	r0, [pc, #8]	; (8004110 <OTG_FS_IRQHandler+0x10>)
 8004106:	f00f f980 	bl	801340a <HAL_PCD_IRQHandler>
 800410a:	bf00      	nop
 800410c:	bd80      	pop	{r7, pc}
 800410e:	bf00      	nop
 8004110:	2000ee4c 	.word	0x2000ee4c

08004114 <DMA2_Stream5_IRQHandler>:
 8004114:	b580      	push	{r7, lr}
 8004116:	af00      	add	r7, sp, #0
 8004118:	4802      	ldr	r0, [pc, #8]	; (8004124 <DMA2_Stream5_IRQHandler+0x10>)
 800411a:	f00c fe4f 	bl	8010dbc <HAL_DMA_IRQHandler>
 800411e:	bf00      	nop
 8004120:	bd80      	pop	{r7, pc}
 8004122:	bf00      	nop
 8004124:	20001728 	.word	0x20001728

08004128 <DMA2_Stream6_IRQHandler>:
 8004128:	b580      	push	{r7, lr}
 800412a:	af00      	add	r7, sp, #0
 800412c:	4802      	ldr	r0, [pc, #8]	; (8004138 <DMA2_Stream6_IRQHandler+0x10>)
 800412e:	f00c fe45 	bl	8010dbc <HAL_DMA_IRQHandler>
 8004132:	bf00      	nop
 8004134:	bd80      	pop	{r7, pc}
 8004136:	bf00      	nop
 8004138:	20001848 	.word	0x20001848

0800413c <USART6_IRQHandler>:
 800413c:	b580      	push	{r7, lr}
 800413e:	af00      	add	r7, sp, #0
 8004140:	4802      	ldr	r0, [pc, #8]	; (800414c <USART6_IRQHandler+0x10>)
 8004142:	f012 fedf 	bl	8016f04 <HAL_UART_IRQHandler>
 8004146:	bf00      	nop
 8004148:	bd80      	pop	{r7, pc}
 800414a:	bf00      	nop
 800414c:	200016e4 	.word	0x200016e4

08004150 <I2C3_ER_IRQHandler>:
 8004150:	b580      	push	{r7, lr}
 8004152:	af00      	add	r7, sp, #0
 8004154:	4802      	ldr	r0, [pc, #8]	; (8004160 <I2C3_ER_IRQHandler+0x10>)
 8004156:	f00e f86d 	bl	8012234 <HAL_I2C_ER_IRQHandler>
 800415a:	bf00      	nop
 800415c:	bd80      	pop	{r7, pc}
 800415e:	bf00      	nop
 8004160:	20001270 	.word	0x20001270

08004164 <SystemInit>:
 8004164:	b480      	push	{r7}
 8004166:	af00      	add	r7, sp, #0
 8004168:	4b08      	ldr	r3, [pc, #32]	; (800418c <SystemInit+0x28>)
 800416a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800416e:	4a07      	ldr	r2, [pc, #28]	; (800418c <SystemInit+0x28>)
 8004170:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004174:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004178:	4b04      	ldr	r3, [pc, #16]	; (800418c <SystemInit+0x28>)
 800417a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800417e:	609a      	str	r2, [r3, #8]
 8004180:	bf00      	nop
 8004182:	46bd      	mov	sp, r7
 8004184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004188:	4770      	bx	lr
 800418a:	bf00      	nop
 800418c:	e000ed00 	.word	0xe000ed00

08004190 <MX_TIM1_Init>:
 8004190:	b580      	push	{r7, lr}
 8004192:	b092      	sub	sp, #72	; 0x48
 8004194:	af00      	add	r7, sp, #0
 8004196:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800419a:	2200      	movs	r2, #0
 800419c:	601a      	str	r2, [r3, #0]
 800419e:	605a      	str	r2, [r3, #4]
 80041a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80041a4:	2200      	movs	r2, #0
 80041a6:	601a      	str	r2, [r3, #0]
 80041a8:	605a      	str	r2, [r3, #4]
 80041aa:	609a      	str	r2, [r3, #8]
 80041ac:	60da      	str	r2, [r3, #12]
 80041ae:	611a      	str	r2, [r3, #16]
 80041b0:	615a      	str	r2, [r3, #20]
 80041b2:	619a      	str	r2, [r3, #24]
 80041b4:	1d3b      	adds	r3, r7, #4
 80041b6:	2220      	movs	r2, #32
 80041b8:	2100      	movs	r1, #0
 80041ba:	4618      	mov	r0, r3
 80041bc:	f01b fa89 	bl	801f6d2 <memset>
 80041c0:	4b39      	ldr	r3, [pc, #228]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041c2:	4a3a      	ldr	r2, [pc, #232]	; (80042ac <MX_TIM1_Init+0x11c>)
 80041c4:	601a      	str	r2, [r3, #0]
 80041c6:	4b38      	ldr	r3, [pc, #224]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041c8:	22a7      	movs	r2, #167	; 0xa7
 80041ca:	605a      	str	r2, [r3, #4]
 80041cc:	4b36      	ldr	r3, [pc, #216]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041ce:	2200      	movs	r2, #0
 80041d0:	609a      	str	r2, [r3, #8]
 80041d2:	4b35      	ldr	r3, [pc, #212]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041d4:	f644 621f 	movw	r2, #19999	; 0x4e1f
 80041d8:	60da      	str	r2, [r3, #12]
 80041da:	4b33      	ldr	r3, [pc, #204]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041dc:	2200      	movs	r2, #0
 80041de:	611a      	str	r2, [r3, #16]
 80041e0:	4b31      	ldr	r3, [pc, #196]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041e2:	2200      	movs	r2, #0
 80041e4:	615a      	str	r2, [r3, #20]
 80041e6:	4b30      	ldr	r3, [pc, #192]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041e8:	2200      	movs	r2, #0
 80041ea:	619a      	str	r2, [r3, #24]
 80041ec:	482e      	ldr	r0, [pc, #184]	; (80042a8 <MX_TIM1_Init+0x118>)
 80041ee:	f011 fcda 	bl	8015ba6 <HAL_TIM_PWM_Init>
 80041f2:	4603      	mov	r3, r0
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d001      	beq.n	80041fc <MX_TIM1_Init+0x6c>
 80041f8:	f7ff fce3 	bl	8003bc2 <Error_Handler>
 80041fc:	2300      	movs	r3, #0
 80041fe:	643b      	str	r3, [r7, #64]	; 0x40
 8004200:	2300      	movs	r3, #0
 8004202:	647b      	str	r3, [r7, #68]	; 0x44
 8004204:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004208:	4619      	mov	r1, r3
 800420a:	4827      	ldr	r0, [pc, #156]	; (80042a8 <MX_TIM1_Init+0x118>)
 800420c:	f012 fc08 	bl	8016a20 <HAL_TIMEx_MasterConfigSynchronization>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM1_Init+0x8a>
 8004216:	f7ff fcd4 	bl	8003bc2 <Error_Handler>
 800421a:	2360      	movs	r3, #96	; 0x60
 800421c:	627b      	str	r3, [r7, #36]	; 0x24
 800421e:	2300      	movs	r3, #0
 8004220:	62bb      	str	r3, [r7, #40]	; 0x28
 8004222:	2300      	movs	r3, #0
 8004224:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004226:	2300      	movs	r3, #0
 8004228:	633b      	str	r3, [r7, #48]	; 0x30
 800422a:	2300      	movs	r3, #0
 800422c:	637b      	str	r3, [r7, #52]	; 0x34
 800422e:	2300      	movs	r3, #0
 8004230:	63bb      	str	r3, [r7, #56]	; 0x38
 8004232:	2300      	movs	r3, #0
 8004234:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004236:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800423a:	2200      	movs	r2, #0
 800423c:	4619      	mov	r1, r3
 800423e:	481a      	ldr	r0, [pc, #104]	; (80042a8 <MX_TIM1_Init+0x118>)
 8004240:	f011 ff2c 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 8004244:	4603      	mov	r3, r0
 8004246:	2b00      	cmp	r3, #0
 8004248:	d001      	beq.n	800424e <MX_TIM1_Init+0xbe>
 800424a:	f7ff fcba 	bl	8003bc2 <Error_Handler>
 800424e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004252:	2204      	movs	r2, #4
 8004254:	4619      	mov	r1, r3
 8004256:	4814      	ldr	r0, [pc, #80]	; (80042a8 <MX_TIM1_Init+0x118>)
 8004258:	f011 ff20 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 800425c:	4603      	mov	r3, r0
 800425e:	2b00      	cmp	r3, #0
 8004260:	d001      	beq.n	8004266 <MX_TIM1_Init+0xd6>
 8004262:	f7ff fcae 	bl	8003bc2 <Error_Handler>
 8004266:	2300      	movs	r3, #0
 8004268:	607b      	str	r3, [r7, #4]
 800426a:	2300      	movs	r3, #0
 800426c:	60bb      	str	r3, [r7, #8]
 800426e:	2300      	movs	r3, #0
 8004270:	60fb      	str	r3, [r7, #12]
 8004272:	2300      	movs	r3, #0
 8004274:	613b      	str	r3, [r7, #16]
 8004276:	2300      	movs	r3, #0
 8004278:	617b      	str	r3, [r7, #20]
 800427a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800427e:	61bb      	str	r3, [r7, #24]
 8004280:	2300      	movs	r3, #0
 8004282:	623b      	str	r3, [r7, #32]
 8004284:	1d3b      	adds	r3, r7, #4
 8004286:	4619      	mov	r1, r3
 8004288:	4807      	ldr	r0, [pc, #28]	; (80042a8 <MX_TIM1_Init+0x118>)
 800428a:	f012 fc45 	bl	8016b18 <HAL_TIMEx_ConfigBreakDeadTime>
 800428e:	4603      	mov	r3, r0
 8004290:	2b00      	cmp	r3, #0
 8004292:	d001      	beq.n	8004298 <MX_TIM1_Init+0x108>
 8004294:	f7ff fc95 	bl	8003bc2 <Error_Handler>
 8004298:	4803      	ldr	r0, [pc, #12]	; (80042a8 <MX_TIM1_Init+0x118>)
 800429a:	f000 fa1f 	bl	80046dc <HAL_TIM_MspPostInit>
 800429e:	bf00      	nop
 80042a0:	3748      	adds	r7, #72	; 0x48
 80042a2:	46bd      	mov	sp, r7
 80042a4:	bd80      	pop	{r7, pc}
 80042a6:	bf00      	nop
 80042a8:	200014f4 	.word	0x200014f4
 80042ac:	40010000 	.word	0x40010000

080042b0 <MX_TIM3_Init>:
 80042b0:	b580      	push	{r7, lr}
 80042b2:	b08e      	sub	sp, #56	; 0x38
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80042ba:	2200      	movs	r2, #0
 80042bc:	601a      	str	r2, [r3, #0]
 80042be:	605a      	str	r2, [r3, #4]
 80042c0:	609a      	str	r2, [r3, #8]
 80042c2:	60da      	str	r2, [r3, #12]
 80042c4:	f107 0320 	add.w	r3, r7, #32
 80042c8:	2200      	movs	r2, #0
 80042ca:	601a      	str	r2, [r3, #0]
 80042cc:	605a      	str	r2, [r3, #4]
 80042ce:	1d3b      	adds	r3, r7, #4
 80042d0:	2200      	movs	r2, #0
 80042d2:	601a      	str	r2, [r3, #0]
 80042d4:	605a      	str	r2, [r3, #4]
 80042d6:	609a      	str	r2, [r3, #8]
 80042d8:	60da      	str	r2, [r3, #12]
 80042da:	611a      	str	r2, [r3, #16]
 80042dc:	615a      	str	r2, [r3, #20]
 80042de:	619a      	str	r2, [r3, #24]
 80042e0:	4b2a      	ldr	r3, [pc, #168]	; (800438c <MX_TIM3_Init+0xdc>)
 80042e2:	4a2b      	ldr	r2, [pc, #172]	; (8004390 <MX_TIM3_Init+0xe0>)
 80042e4:	601a      	str	r2, [r3, #0]
 80042e6:	4b29      	ldr	r3, [pc, #164]	; (800438c <MX_TIM3_Init+0xdc>)
 80042e8:	22a7      	movs	r2, #167	; 0xa7
 80042ea:	605a      	str	r2, [r3, #4]
 80042ec:	4b27      	ldr	r3, [pc, #156]	; (800438c <MX_TIM3_Init+0xdc>)
 80042ee:	2200      	movs	r2, #0
 80042f0:	609a      	str	r2, [r3, #8]
 80042f2:	4b26      	ldr	r3, [pc, #152]	; (800438c <MX_TIM3_Init+0xdc>)
 80042f4:	2201      	movs	r2, #1
 80042f6:	60da      	str	r2, [r3, #12]
 80042f8:	4b24      	ldr	r3, [pc, #144]	; (800438c <MX_TIM3_Init+0xdc>)
 80042fa:	2200      	movs	r2, #0
 80042fc:	611a      	str	r2, [r3, #16]
 80042fe:	4b23      	ldr	r3, [pc, #140]	; (800438c <MX_TIM3_Init+0xdc>)
 8004300:	2200      	movs	r2, #0
 8004302:	619a      	str	r2, [r3, #24]
 8004304:	4821      	ldr	r0, [pc, #132]	; (800438c <MX_TIM3_Init+0xdc>)
 8004306:	f011 facd 	bl	80158a4 <HAL_TIM_Base_Init>
 800430a:	4603      	mov	r3, r0
 800430c:	2b00      	cmp	r3, #0
 800430e:	d001      	beq.n	8004314 <MX_TIM3_Init+0x64>
 8004310:	f7ff fc57 	bl	8003bc2 <Error_Handler>
 8004314:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004318:	62bb      	str	r3, [r7, #40]	; 0x28
 800431a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800431e:	4619      	mov	r1, r3
 8004320:	481a      	ldr	r0, [pc, #104]	; (800438c <MX_TIM3_Init+0xdc>)
 8004322:	f011 ff7d 	bl	8016220 <HAL_TIM_ConfigClockSource>
 8004326:	4603      	mov	r3, r0
 8004328:	2b00      	cmp	r3, #0
 800432a:	d001      	beq.n	8004330 <MX_TIM3_Init+0x80>
 800432c:	f7ff fc49 	bl	8003bc2 <Error_Handler>
 8004330:	4816      	ldr	r0, [pc, #88]	; (800438c <MX_TIM3_Init+0xdc>)
 8004332:	f011 fbdf 	bl	8015af4 <HAL_TIM_OC_Init>
 8004336:	4603      	mov	r3, r0
 8004338:	2b00      	cmp	r3, #0
 800433a:	d001      	beq.n	8004340 <MX_TIM3_Init+0x90>
 800433c:	f7ff fc41 	bl	8003bc2 <Error_Handler>
 8004340:	2300      	movs	r3, #0
 8004342:	623b      	str	r3, [r7, #32]
 8004344:	2300      	movs	r3, #0
 8004346:	627b      	str	r3, [r7, #36]	; 0x24
 8004348:	f107 0320 	add.w	r3, r7, #32
 800434c:	4619      	mov	r1, r3
 800434e:	480f      	ldr	r0, [pc, #60]	; (800438c <MX_TIM3_Init+0xdc>)
 8004350:	f012 fb66 	bl	8016a20 <HAL_TIMEx_MasterConfigSynchronization>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM3_Init+0xae>
 800435a:	f7ff fc32 	bl	8003bc2 <Error_Handler>
 800435e:	2300      	movs	r3, #0
 8004360:	607b      	str	r3, [r7, #4]
 8004362:	2300      	movs	r3, #0
 8004364:	60bb      	str	r3, [r7, #8]
 8004366:	2300      	movs	r3, #0
 8004368:	60fb      	str	r3, [r7, #12]
 800436a:	2300      	movs	r3, #0
 800436c:	617b      	str	r3, [r7, #20]
 800436e:	1d3b      	adds	r3, r7, #4
 8004370:	2200      	movs	r2, #0
 8004372:	4619      	mov	r1, r3
 8004374:	4805      	ldr	r0, [pc, #20]	; (800438c <MX_TIM3_Init+0xdc>)
 8004376:	f011 fe35 	bl	8015fe4 <HAL_TIM_OC_ConfigChannel>
 800437a:	4603      	mov	r3, r0
 800437c:	2b00      	cmp	r3, #0
 800437e:	d001      	beq.n	8004384 <MX_TIM3_Init+0xd4>
 8004380:	f7ff fc1f 	bl	8003bc2 <Error_Handler>
 8004384:	bf00      	nop
 8004386:	3738      	adds	r7, #56	; 0x38
 8004388:	46bd      	mov	sp, r7
 800438a:	bd80      	pop	{r7, pc}
 800438c:	2000153c 	.word	0x2000153c
 8004390:	40000400 	.word	0x40000400

08004394 <MX_TIM4_Init>:
 8004394:	b580      	push	{r7, lr}
 8004396:	b08a      	sub	sp, #40	; 0x28
 8004398:	af00      	add	r7, sp, #0
 800439a:	f107 0320 	add.w	r3, r7, #32
 800439e:	2200      	movs	r2, #0
 80043a0:	601a      	str	r2, [r3, #0]
 80043a2:	605a      	str	r2, [r3, #4]
 80043a4:	1d3b      	adds	r3, r7, #4
 80043a6:	2200      	movs	r2, #0
 80043a8:	601a      	str	r2, [r3, #0]
 80043aa:	605a      	str	r2, [r3, #4]
 80043ac:	609a      	str	r2, [r3, #8]
 80043ae:	60da      	str	r2, [r3, #12]
 80043b0:	611a      	str	r2, [r3, #16]
 80043b2:	615a      	str	r2, [r3, #20]
 80043b4:	619a      	str	r2, [r3, #24]
 80043b6:	4b22      	ldr	r3, [pc, #136]	; (8004440 <MX_TIM4_Init+0xac>)
 80043b8:	4a22      	ldr	r2, [pc, #136]	; (8004444 <MX_TIM4_Init+0xb0>)
 80043ba:	601a      	str	r2, [r3, #0]
 80043bc:	4b20      	ldr	r3, [pc, #128]	; (8004440 <MX_TIM4_Init+0xac>)
 80043be:	f240 32e7 	movw	r2, #999	; 0x3e7
 80043c2:	605a      	str	r2, [r3, #4]
 80043c4:	4b1e      	ldr	r3, [pc, #120]	; (8004440 <MX_TIM4_Init+0xac>)
 80043c6:	2200      	movs	r2, #0
 80043c8:	609a      	str	r2, [r3, #8]
 80043ca:	4b1d      	ldr	r3, [pc, #116]	; (8004440 <MX_TIM4_Init+0xac>)
 80043cc:	f240 32e7 	movw	r2, #999	; 0x3e7
 80043d0:	60da      	str	r2, [r3, #12]
 80043d2:	4b1b      	ldr	r3, [pc, #108]	; (8004440 <MX_TIM4_Init+0xac>)
 80043d4:	2200      	movs	r2, #0
 80043d6:	611a      	str	r2, [r3, #16]
 80043d8:	4b19      	ldr	r3, [pc, #100]	; (8004440 <MX_TIM4_Init+0xac>)
 80043da:	2200      	movs	r2, #0
 80043dc:	619a      	str	r2, [r3, #24]
 80043de:	4818      	ldr	r0, [pc, #96]	; (8004440 <MX_TIM4_Init+0xac>)
 80043e0:	f011 fbe1 	bl	8015ba6 <HAL_TIM_PWM_Init>
 80043e4:	4603      	mov	r3, r0
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d001      	beq.n	80043ee <MX_TIM4_Init+0x5a>
 80043ea:	f7ff fbea 	bl	8003bc2 <Error_Handler>
 80043ee:	2300      	movs	r3, #0
 80043f0:	623b      	str	r3, [r7, #32]
 80043f2:	2300      	movs	r3, #0
 80043f4:	627b      	str	r3, [r7, #36]	; 0x24
 80043f6:	f107 0320 	add.w	r3, r7, #32
 80043fa:	4619      	mov	r1, r3
 80043fc:	4810      	ldr	r0, [pc, #64]	; (8004440 <MX_TIM4_Init+0xac>)
 80043fe:	f012 fb0f 	bl	8016a20 <HAL_TIMEx_MasterConfigSynchronization>
 8004402:	4603      	mov	r3, r0
 8004404:	2b00      	cmp	r3, #0
 8004406:	d001      	beq.n	800440c <MX_TIM4_Init+0x78>
 8004408:	f7ff fbdb 	bl	8003bc2 <Error_Handler>
 800440c:	2360      	movs	r3, #96	; 0x60
 800440e:	607b      	str	r3, [r7, #4]
 8004410:	2300      	movs	r3, #0
 8004412:	60bb      	str	r3, [r7, #8]
 8004414:	2300      	movs	r3, #0
 8004416:	60fb      	str	r3, [r7, #12]
 8004418:	2300      	movs	r3, #0
 800441a:	617b      	str	r3, [r7, #20]
 800441c:	1d3b      	adds	r3, r7, #4
 800441e:	2208      	movs	r2, #8
 8004420:	4619      	mov	r1, r3
 8004422:	4807      	ldr	r0, [pc, #28]	; (8004440 <MX_TIM4_Init+0xac>)
 8004424:	f011 fe3a 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 8004428:	4603      	mov	r3, r0
 800442a:	2b00      	cmp	r3, #0
 800442c:	d001      	beq.n	8004432 <MX_TIM4_Init+0x9e>
 800442e:	f7ff fbc8 	bl	8003bc2 <Error_Handler>
 8004432:	4803      	ldr	r0, [pc, #12]	; (8004440 <MX_TIM4_Init+0xac>)
 8004434:	f000 f952 	bl	80046dc <HAL_TIM_MspPostInit>
 8004438:	bf00      	nop
 800443a:	3728      	adds	r7, #40	; 0x28
 800443c:	46bd      	mov	sp, r7
 800443e:	bd80      	pop	{r7, pc}
 8004440:	20001584 	.word	0x20001584
 8004444:	40000800 	.word	0x40000800

08004448 <MX_TIM5_Init>:
 8004448:	b580      	push	{r7, lr}
 800444a:	b08a      	sub	sp, #40	; 0x28
 800444c:	af00      	add	r7, sp, #0
 800444e:	f107 0320 	add.w	r3, r7, #32
 8004452:	2200      	movs	r2, #0
 8004454:	601a      	str	r2, [r3, #0]
 8004456:	605a      	str	r2, [r3, #4]
 8004458:	1d3b      	adds	r3, r7, #4
 800445a:	2200      	movs	r2, #0
 800445c:	601a      	str	r2, [r3, #0]
 800445e:	605a      	str	r2, [r3, #4]
 8004460:	609a      	str	r2, [r3, #8]
 8004462:	60da      	str	r2, [r3, #12]
 8004464:	611a      	str	r2, [r3, #16]
 8004466:	615a      	str	r2, [r3, #20]
 8004468:	619a      	str	r2, [r3, #24]
 800446a:	4b2d      	ldr	r3, [pc, #180]	; (8004520 <MX_TIM5_Init+0xd8>)
 800446c:	4a2d      	ldr	r2, [pc, #180]	; (8004524 <MX_TIM5_Init+0xdc>)
 800446e:	601a      	str	r2, [r3, #0]
 8004470:	4b2b      	ldr	r3, [pc, #172]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004472:	f240 5225 	movw	r2, #1317	; 0x525
 8004476:	605a      	str	r2, [r3, #4]
 8004478:	4b29      	ldr	r3, [pc, #164]	; (8004520 <MX_TIM5_Init+0xd8>)
 800447a:	2200      	movs	r2, #0
 800447c:	609a      	str	r2, [r3, #8]
 800447e:	4b28      	ldr	r3, [pc, #160]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004480:	22ff      	movs	r2, #255	; 0xff
 8004482:	60da      	str	r2, [r3, #12]
 8004484:	4b26      	ldr	r3, [pc, #152]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004486:	2200      	movs	r2, #0
 8004488:	611a      	str	r2, [r3, #16]
 800448a:	4b25      	ldr	r3, [pc, #148]	; (8004520 <MX_TIM5_Init+0xd8>)
 800448c:	2280      	movs	r2, #128	; 0x80
 800448e:	619a      	str	r2, [r3, #24]
 8004490:	4823      	ldr	r0, [pc, #140]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004492:	f011 fb88 	bl	8015ba6 <HAL_TIM_PWM_Init>
 8004496:	4603      	mov	r3, r0
 8004498:	2b00      	cmp	r3, #0
 800449a:	d001      	beq.n	80044a0 <MX_TIM5_Init+0x58>
 800449c:	f7ff fb91 	bl	8003bc2 <Error_Handler>
 80044a0:	2300      	movs	r3, #0
 80044a2:	623b      	str	r3, [r7, #32]
 80044a4:	2300      	movs	r3, #0
 80044a6:	627b      	str	r3, [r7, #36]	; 0x24
 80044a8:	f107 0320 	add.w	r3, r7, #32
 80044ac:	4619      	mov	r1, r3
 80044ae:	481c      	ldr	r0, [pc, #112]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044b0:	f012 fab6 	bl	8016a20 <HAL_TIMEx_MasterConfigSynchronization>
 80044b4:	4603      	mov	r3, r0
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d001      	beq.n	80044be <MX_TIM5_Init+0x76>
 80044ba:	f7ff fb82 	bl	8003bc2 <Error_Handler>
 80044be:	2360      	movs	r3, #96	; 0x60
 80044c0:	607b      	str	r3, [r7, #4]
 80044c2:	2300      	movs	r3, #0
 80044c4:	60bb      	str	r3, [r7, #8]
 80044c6:	2302      	movs	r3, #2
 80044c8:	60fb      	str	r3, [r7, #12]
 80044ca:	2304      	movs	r3, #4
 80044cc:	617b      	str	r3, [r7, #20]
 80044ce:	1d3b      	adds	r3, r7, #4
 80044d0:	2200      	movs	r2, #0
 80044d2:	4619      	mov	r1, r3
 80044d4:	4812      	ldr	r0, [pc, #72]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044d6:	f011 fde1 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 80044da:	4603      	mov	r3, r0
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d001      	beq.n	80044e4 <MX_TIM5_Init+0x9c>
 80044e0:	f7ff fb6f 	bl	8003bc2 <Error_Handler>
 80044e4:	1d3b      	adds	r3, r7, #4
 80044e6:	2204      	movs	r2, #4
 80044e8:	4619      	mov	r1, r3
 80044ea:	480d      	ldr	r0, [pc, #52]	; (8004520 <MX_TIM5_Init+0xd8>)
 80044ec:	f011 fdd6 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 80044f0:	4603      	mov	r3, r0
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d001      	beq.n	80044fa <MX_TIM5_Init+0xb2>
 80044f6:	f7ff fb64 	bl	8003bc2 <Error_Handler>
 80044fa:	1d3b      	adds	r3, r7, #4
 80044fc:	2208      	movs	r2, #8
 80044fe:	4619      	mov	r1, r3
 8004500:	4807      	ldr	r0, [pc, #28]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004502:	f011 fdcb 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 8004506:	4603      	mov	r3, r0
 8004508:	2b00      	cmp	r3, #0
 800450a:	d001      	beq.n	8004510 <MX_TIM5_Init+0xc8>
 800450c:	f7ff fb59 	bl	8003bc2 <Error_Handler>
 8004510:	4803      	ldr	r0, [pc, #12]	; (8004520 <MX_TIM5_Init+0xd8>)
 8004512:	f000 f8e3 	bl	80046dc <HAL_TIM_MspPostInit>
 8004516:	bf00      	nop
 8004518:	3728      	adds	r7, #40	; 0x28
 800451a:	46bd      	mov	sp, r7
 800451c:	bd80      	pop	{r7, pc}
 800451e:	bf00      	nop
 8004520:	200015cc 	.word	0x200015cc
 8004524:	40000c00 	.word	0x40000c00

08004528 <MX_TIM10_Init>:
 8004528:	b580      	push	{r7, lr}
 800452a:	b088      	sub	sp, #32
 800452c:	af00      	add	r7, sp, #0
 800452e:	1d3b      	adds	r3, r7, #4
 8004530:	2200      	movs	r2, #0
 8004532:	601a      	str	r2, [r3, #0]
 8004534:	605a      	str	r2, [r3, #4]
 8004536:	609a      	str	r2, [r3, #8]
 8004538:	60da      	str	r2, [r3, #12]
 800453a:	611a      	str	r2, [r3, #16]
 800453c:	615a      	str	r2, [r3, #20]
 800453e:	619a      	str	r2, [r3, #24]
 8004540:	4b1e      	ldr	r3, [pc, #120]	; (80045bc <MX_TIM10_Init+0x94>)
 8004542:	4a1f      	ldr	r2, [pc, #124]	; (80045c0 <MX_TIM10_Init+0x98>)
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	4b1d      	ldr	r3, [pc, #116]	; (80045bc <MX_TIM10_Init+0x94>)
 8004548:	2200      	movs	r2, #0
 800454a:	605a      	str	r2, [r3, #4]
 800454c:	4b1b      	ldr	r3, [pc, #108]	; (80045bc <MX_TIM10_Init+0x94>)
 800454e:	2200      	movs	r2, #0
 8004550:	609a      	str	r2, [r3, #8]
 8004552:	4b1a      	ldr	r3, [pc, #104]	; (80045bc <MX_TIM10_Init+0x94>)
 8004554:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004558:	60da      	str	r2, [r3, #12]
 800455a:	4b18      	ldr	r3, [pc, #96]	; (80045bc <MX_TIM10_Init+0x94>)
 800455c:	2200      	movs	r2, #0
 800455e:	611a      	str	r2, [r3, #16]
 8004560:	4b16      	ldr	r3, [pc, #88]	; (80045bc <MX_TIM10_Init+0x94>)
 8004562:	2200      	movs	r2, #0
 8004564:	619a      	str	r2, [r3, #24]
 8004566:	4815      	ldr	r0, [pc, #84]	; (80045bc <MX_TIM10_Init+0x94>)
 8004568:	f011 f99c 	bl	80158a4 <HAL_TIM_Base_Init>
 800456c:	4603      	mov	r3, r0
 800456e:	2b00      	cmp	r3, #0
 8004570:	d001      	beq.n	8004576 <MX_TIM10_Init+0x4e>
 8004572:	f7ff fb26 	bl	8003bc2 <Error_Handler>
 8004576:	4811      	ldr	r0, [pc, #68]	; (80045bc <MX_TIM10_Init+0x94>)
 8004578:	f011 fb15 	bl	8015ba6 <HAL_TIM_PWM_Init>
 800457c:	4603      	mov	r3, r0
 800457e:	2b00      	cmp	r3, #0
 8004580:	d001      	beq.n	8004586 <MX_TIM10_Init+0x5e>
 8004582:	f7ff fb1e 	bl	8003bc2 <Error_Handler>
 8004586:	2360      	movs	r3, #96	; 0x60
 8004588:	607b      	str	r3, [r7, #4]
 800458a:	2300      	movs	r3, #0
 800458c:	60bb      	str	r3, [r7, #8]
 800458e:	2300      	movs	r3, #0
 8004590:	60fb      	str	r3, [r7, #12]
 8004592:	2300      	movs	r3, #0
 8004594:	617b      	str	r3, [r7, #20]
 8004596:	1d3b      	adds	r3, r7, #4
 8004598:	2200      	movs	r2, #0
 800459a:	4619      	mov	r1, r3
 800459c:	4807      	ldr	r0, [pc, #28]	; (80045bc <MX_TIM10_Init+0x94>)
 800459e:	f011 fd7d 	bl	801609c <HAL_TIM_PWM_ConfigChannel>
 80045a2:	4603      	mov	r3, r0
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d001      	beq.n	80045ac <MX_TIM10_Init+0x84>
 80045a8:	f7ff fb0b 	bl	8003bc2 <Error_Handler>
 80045ac:	4803      	ldr	r0, [pc, #12]	; (80045bc <MX_TIM10_Init+0x94>)
 80045ae:	f000 f895 	bl	80046dc <HAL_TIM_MspPostInit>
 80045b2:	bf00      	nop
 80045b4:	3720      	adds	r7, #32
 80045b6:	46bd      	mov	sp, r7
 80045b8:	bd80      	pop	{r7, pc}
 80045ba:	bf00      	nop
 80045bc:	20001614 	.word	0x20001614
 80045c0:	40014400 	.word	0x40014400

080045c4 <HAL_TIM_PWM_MspInit>:
 80045c4:	b480      	push	{r7}
 80045c6:	b087      	sub	sp, #28
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	4a1f      	ldr	r2, [pc, #124]	; (8004650 <HAL_TIM_PWM_MspInit+0x8c>)
 80045d2:	4293      	cmp	r3, r2
 80045d4:	d10e      	bne.n	80045f4 <HAL_TIM_PWM_MspInit+0x30>
 80045d6:	2300      	movs	r3, #0
 80045d8:	617b      	str	r3, [r7, #20]
 80045da:	4b1e      	ldr	r3, [pc, #120]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045de:	4a1d      	ldr	r2, [pc, #116]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045e0:	f043 0301 	orr.w	r3, r3, #1
 80045e4:	6453      	str	r3, [r2, #68]	; 0x44
 80045e6:	4b1b      	ldr	r3, [pc, #108]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 80045e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045ea:	f003 0301 	and.w	r3, r3, #1
 80045ee:	617b      	str	r3, [r7, #20]
 80045f0:	697b      	ldr	r3, [r7, #20]
 80045f2:	e026      	b.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	4a17      	ldr	r2, [pc, #92]	; (8004658 <HAL_TIM_PWM_MspInit+0x94>)
 80045fa:	4293      	cmp	r3, r2
 80045fc:	d10e      	bne.n	800461c <HAL_TIM_PWM_MspInit+0x58>
 80045fe:	2300      	movs	r3, #0
 8004600:	613b      	str	r3, [r7, #16]
 8004602:	4b14      	ldr	r3, [pc, #80]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004606:	4a13      	ldr	r2, [pc, #76]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004608:	f043 0304 	orr.w	r3, r3, #4
 800460c:	6413      	str	r3, [r2, #64]	; 0x40
 800460e:	4b11      	ldr	r3, [pc, #68]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004612:	f003 0304 	and.w	r3, r3, #4
 8004616:	613b      	str	r3, [r7, #16]
 8004618:	693b      	ldr	r3, [r7, #16]
 800461a:	e012      	b.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	4a0e      	ldr	r2, [pc, #56]	; (800465c <HAL_TIM_PWM_MspInit+0x98>)
 8004622:	4293      	cmp	r3, r2
 8004624:	d10d      	bne.n	8004642 <HAL_TIM_PWM_MspInit+0x7e>
 8004626:	2300      	movs	r3, #0
 8004628:	60fb      	str	r3, [r7, #12]
 800462a:	4b0a      	ldr	r3, [pc, #40]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 800462c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800462e:	4a09      	ldr	r2, [pc, #36]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004630:	f043 0308 	orr.w	r3, r3, #8
 8004634:	6413      	str	r3, [r2, #64]	; 0x40
 8004636:	4b07      	ldr	r3, [pc, #28]	; (8004654 <HAL_TIM_PWM_MspInit+0x90>)
 8004638:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800463a:	f003 0308 	and.w	r3, r3, #8
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	bf00      	nop
 8004644:	371c      	adds	r7, #28
 8004646:	46bd      	mov	sp, r7
 8004648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800464c:	4770      	bx	lr
 800464e:	bf00      	nop
 8004650:	40010000 	.word	0x40010000
 8004654:	40023800 	.word	0x40023800
 8004658:	40000800 	.word	0x40000800
 800465c:	40000c00 	.word	0x40000c00

08004660 <HAL_TIM_Base_MspInit>:
 8004660:	b580      	push	{r7, lr}
 8004662:	b084      	sub	sp, #16
 8004664:	af00      	add	r7, sp, #0
 8004666:	6078      	str	r0, [r7, #4]
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a18      	ldr	r2, [pc, #96]	; (80046d0 <HAL_TIM_Base_MspInit+0x70>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d116      	bne.n	80046a0 <HAL_TIM_Base_MspInit+0x40>
 8004672:	2300      	movs	r3, #0
 8004674:	60fb      	str	r3, [r7, #12]
 8004676:	4b17      	ldr	r3, [pc, #92]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 8004678:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800467a:	4a16      	ldr	r2, [pc, #88]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 800467c:	f043 0302 	orr.w	r3, r3, #2
 8004680:	6413      	str	r3, [r2, #64]	; 0x40
 8004682:	4b14      	ldr	r3, [pc, #80]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 8004684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004686:	f003 0302 	and.w	r3, r3, #2
 800468a:	60fb      	str	r3, [r7, #12]
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	2200      	movs	r2, #0
 8004690:	2105      	movs	r1, #5
 8004692:	201d      	movs	r0, #29
 8004694:	f00c f9d0 	bl	8010a38 <HAL_NVIC_SetPriority>
 8004698:	201d      	movs	r0, #29
 800469a:	f00c f9e9 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 800469e:	e012      	b.n	80046c6 <HAL_TIM_Base_MspInit+0x66>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4a0c      	ldr	r2, [pc, #48]	; (80046d8 <HAL_TIM_Base_MspInit+0x78>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d10d      	bne.n	80046c6 <HAL_TIM_Base_MspInit+0x66>
 80046aa:	2300      	movs	r3, #0
 80046ac:	60bb      	str	r3, [r7, #8]
 80046ae:	4b09      	ldr	r3, [pc, #36]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046b2:	4a08      	ldr	r2, [pc, #32]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80046b8:	6453      	str	r3, [r2, #68]	; 0x44
 80046ba:	4b06      	ldr	r3, [pc, #24]	; (80046d4 <HAL_TIM_Base_MspInit+0x74>)
 80046bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046c2:	60bb      	str	r3, [r7, #8]
 80046c4:	68bb      	ldr	r3, [r7, #8]
 80046c6:	bf00      	nop
 80046c8:	3710      	adds	r7, #16
 80046ca:	46bd      	mov	sp, r7
 80046cc:	bd80      	pop	{r7, pc}
 80046ce:	bf00      	nop
 80046d0:	40000400 	.word	0x40000400
 80046d4:	40023800 	.word	0x40023800
 80046d8:	40014400 	.word	0x40014400

080046dc <HAL_TIM_MspPostInit>:
 80046dc:	b580      	push	{r7, lr}
 80046de:	b08c      	sub	sp, #48	; 0x30
 80046e0:	af00      	add	r7, sp, #0
 80046e2:	6078      	str	r0, [r7, #4]
 80046e4:	f107 031c 	add.w	r3, r7, #28
 80046e8:	2200      	movs	r2, #0
 80046ea:	601a      	str	r2, [r3, #0]
 80046ec:	605a      	str	r2, [r3, #4]
 80046ee:	609a      	str	r2, [r3, #8]
 80046f0:	60da      	str	r2, [r3, #12]
 80046f2:	611a      	str	r2, [r3, #16]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a49      	ldr	r2, [pc, #292]	; (8004820 <HAL_TIM_MspPostInit+0x144>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d11f      	bne.n	800473e <HAL_TIM_MspPostInit+0x62>
 80046fe:	2300      	movs	r3, #0
 8004700:	61bb      	str	r3, [r7, #24]
 8004702:	4b48      	ldr	r3, [pc, #288]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004706:	4a47      	ldr	r2, [pc, #284]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004708:	f043 0310 	orr.w	r3, r3, #16
 800470c:	6313      	str	r3, [r2, #48]	; 0x30
 800470e:	4b45      	ldr	r3, [pc, #276]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004712:	f003 0310 	and.w	r3, r3, #16
 8004716:	61bb      	str	r3, [r7, #24]
 8004718:	69bb      	ldr	r3, [r7, #24]
 800471a:	f44f 6320 	mov.w	r3, #2560	; 0xa00
 800471e:	61fb      	str	r3, [r7, #28]
 8004720:	2302      	movs	r3, #2
 8004722:	623b      	str	r3, [r7, #32]
 8004724:	2300      	movs	r3, #0
 8004726:	627b      	str	r3, [r7, #36]	; 0x24
 8004728:	2300      	movs	r3, #0
 800472a:	62bb      	str	r3, [r7, #40]	; 0x28
 800472c:	2301      	movs	r3, #1
 800472e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004730:	f107 031c 	add.w	r3, r7, #28
 8004734:	4619      	mov	r1, r3
 8004736:	483c      	ldr	r0, [pc, #240]	; (8004828 <HAL_TIM_MspPostInit+0x14c>)
 8004738:	f00c fdb6 	bl	80112a8 <HAL_GPIO_Init>
 800473c:	e06c      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4a3a      	ldr	r2, [pc, #232]	; (800482c <HAL_TIM_MspPostInit+0x150>)
 8004744:	4293      	cmp	r3, r2
 8004746:	d11f      	bne.n	8004788 <HAL_TIM_MspPostInit+0xac>
 8004748:	2300      	movs	r3, #0
 800474a:	617b      	str	r3, [r7, #20]
 800474c:	4b35      	ldr	r3, [pc, #212]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800474e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004750:	4a34      	ldr	r2, [pc, #208]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004752:	f043 0308 	orr.w	r3, r3, #8
 8004756:	6313      	str	r3, [r2, #48]	; 0x30
 8004758:	4b32      	ldr	r3, [pc, #200]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800475a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800475c:	f003 0308 	and.w	r3, r3, #8
 8004760:	617b      	str	r3, [r7, #20]
 8004762:	697b      	ldr	r3, [r7, #20]
 8004764:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004768:	61fb      	str	r3, [r7, #28]
 800476a:	2302      	movs	r3, #2
 800476c:	623b      	str	r3, [r7, #32]
 800476e:	2300      	movs	r3, #0
 8004770:	627b      	str	r3, [r7, #36]	; 0x24
 8004772:	2300      	movs	r3, #0
 8004774:	62bb      	str	r3, [r7, #40]	; 0x28
 8004776:	2302      	movs	r3, #2
 8004778:	62fb      	str	r3, [r7, #44]	; 0x2c
 800477a:	f107 031c 	add.w	r3, r7, #28
 800477e:	4619      	mov	r1, r3
 8004780:	482b      	ldr	r0, [pc, #172]	; (8004830 <HAL_TIM_MspPostInit+0x154>)
 8004782:	f00c fd91 	bl	80112a8 <HAL_GPIO_Init>
 8004786:	e047      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	4a29      	ldr	r2, [pc, #164]	; (8004834 <HAL_TIM_MspPostInit+0x158>)
 800478e:	4293      	cmp	r3, r2
 8004790:	d11f      	bne.n	80047d2 <HAL_TIM_MspPostInit+0xf6>
 8004792:	2300      	movs	r3, #0
 8004794:	613b      	str	r3, [r7, #16]
 8004796:	4b23      	ldr	r3, [pc, #140]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 8004798:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800479a:	4a22      	ldr	r2, [pc, #136]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 800479c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80047a0:	6313      	str	r3, [r2, #48]	; 0x30
 80047a2:	4b20      	ldr	r3, [pc, #128]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80047aa:	613b      	str	r3, [r7, #16]
 80047ac:	693b      	ldr	r3, [r7, #16]
 80047ae:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 80047b2:	61fb      	str	r3, [r7, #28]
 80047b4:	2302      	movs	r3, #2
 80047b6:	623b      	str	r3, [r7, #32]
 80047b8:	2300      	movs	r3, #0
 80047ba:	627b      	str	r3, [r7, #36]	; 0x24
 80047bc:	2300      	movs	r3, #0
 80047be:	62bb      	str	r3, [r7, #40]	; 0x28
 80047c0:	2302      	movs	r3, #2
 80047c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80047c4:	f107 031c 	add.w	r3, r7, #28
 80047c8:	4619      	mov	r1, r3
 80047ca:	481b      	ldr	r0, [pc, #108]	; (8004838 <HAL_TIM_MspPostInit+0x15c>)
 80047cc:	f00c fd6c 	bl	80112a8 <HAL_GPIO_Init>
 80047d0:	e022      	b.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	4a19      	ldr	r2, [pc, #100]	; (800483c <HAL_TIM_MspPostInit+0x160>)
 80047d8:	4293      	cmp	r3, r2
 80047da:	d11d      	bne.n	8004818 <HAL_TIM_MspPostInit+0x13c>
 80047dc:	2300      	movs	r3, #0
 80047de:	60fb      	str	r3, [r7, #12]
 80047e0:	4b10      	ldr	r3, [pc, #64]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047e4:	4a0f      	ldr	r2, [pc, #60]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047e6:	f043 0320 	orr.w	r3, r3, #32
 80047ea:	6313      	str	r3, [r2, #48]	; 0x30
 80047ec:	4b0d      	ldr	r3, [pc, #52]	; (8004824 <HAL_TIM_MspPostInit+0x148>)
 80047ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047f0:	f003 0320 	and.w	r3, r3, #32
 80047f4:	60fb      	str	r3, [r7, #12]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	2340      	movs	r3, #64	; 0x40
 80047fa:	61fb      	str	r3, [r7, #28]
 80047fc:	2302      	movs	r3, #2
 80047fe:	623b      	str	r3, [r7, #32]
 8004800:	2300      	movs	r3, #0
 8004802:	627b      	str	r3, [r7, #36]	; 0x24
 8004804:	2300      	movs	r3, #0
 8004806:	62bb      	str	r3, [r7, #40]	; 0x28
 8004808:	2303      	movs	r3, #3
 800480a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800480c:	f107 031c 	add.w	r3, r7, #28
 8004810:	4619      	mov	r1, r3
 8004812:	480b      	ldr	r0, [pc, #44]	; (8004840 <HAL_TIM_MspPostInit+0x164>)
 8004814:	f00c fd48 	bl	80112a8 <HAL_GPIO_Init>
 8004818:	bf00      	nop
 800481a:	3730      	adds	r7, #48	; 0x30
 800481c:	46bd      	mov	sp, r7
 800481e:	bd80      	pop	{r7, pc}
 8004820:	40010000 	.word	0x40010000
 8004824:	40023800 	.word	0x40023800
 8004828:	40021000 	.word	0x40021000
 800482c:	40000800 	.word	0x40000800
 8004830:	40020c00 	.word	0x40020c00
 8004834:	40000c00 	.word	0x40000c00
 8004838:	40021c00 	.word	0x40021c00
 800483c:	40014400 	.word	0x40014400
 8004840:	40021400 	.word	0x40021400

08004844 <MX_USART1_UART_Init>:
 8004844:	b580      	push	{r7, lr}
 8004846:	af00      	add	r7, sp, #0
 8004848:	4b11      	ldr	r3, [pc, #68]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800484a:	4a12      	ldr	r2, [pc, #72]	; (8004894 <MX_USART1_UART_Init+0x50>)
 800484c:	601a      	str	r2, [r3, #0]
 800484e:	4b10      	ldr	r3, [pc, #64]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004850:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004854:	605a      	str	r2, [r3, #4]
 8004856:	4b0e      	ldr	r3, [pc, #56]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004858:	2200      	movs	r2, #0
 800485a:	609a      	str	r2, [r3, #8]
 800485c:	4b0c      	ldr	r3, [pc, #48]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800485e:	2200      	movs	r2, #0
 8004860:	60da      	str	r2, [r3, #12]
 8004862:	4b0b      	ldr	r3, [pc, #44]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004864:	2200      	movs	r2, #0
 8004866:	611a      	str	r2, [r3, #16]
 8004868:	4b09      	ldr	r3, [pc, #36]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800486a:	220c      	movs	r2, #12
 800486c:	615a      	str	r2, [r3, #20]
 800486e:	4b08      	ldr	r3, [pc, #32]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004870:	2200      	movs	r2, #0
 8004872:	619a      	str	r2, [r3, #24]
 8004874:	4b06      	ldr	r3, [pc, #24]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 8004876:	2200      	movs	r2, #0
 8004878:	61da      	str	r2, [r3, #28]
 800487a:	4805      	ldr	r0, [pc, #20]	; (8004890 <MX_USART1_UART_Init+0x4c>)
 800487c:	f012 f9b2 	bl	8016be4 <HAL_UART_Init>
 8004880:	4603      	mov	r3, r0
 8004882:	2b00      	cmp	r3, #0
 8004884:	d001      	beq.n	800488a <MX_USART1_UART_Init+0x46>
 8004886:	f7ff f99c 	bl	8003bc2 <Error_Handler>
 800488a:	bf00      	nop
 800488c:	bd80      	pop	{r7, pc}
 800488e:	bf00      	nop
 8004890:	2000165c 	.word	0x2000165c
 8004894:	40011000 	.word	0x40011000

08004898 <MX_USART3_UART_Init>:
 8004898:	b580      	push	{r7, lr}
 800489a:	af00      	add	r7, sp, #0
 800489c:	4b11      	ldr	r3, [pc, #68]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 800489e:	4a12      	ldr	r2, [pc, #72]	; (80048e8 <MX_USART3_UART_Init+0x50>)
 80048a0:	601a      	str	r2, [r3, #0]
 80048a2:	4b10      	ldr	r3, [pc, #64]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048a4:	4a11      	ldr	r2, [pc, #68]	; (80048ec <MX_USART3_UART_Init+0x54>)
 80048a6:	605a      	str	r2, [r3, #4]
 80048a8:	4b0e      	ldr	r3, [pc, #56]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048aa:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80048ae:	609a      	str	r2, [r3, #8]
 80048b0:	4b0c      	ldr	r3, [pc, #48]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048b2:	2200      	movs	r2, #0
 80048b4:	60da      	str	r2, [r3, #12]
 80048b6:	4b0b      	ldr	r3, [pc, #44]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048b8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80048bc:	611a      	str	r2, [r3, #16]
 80048be:	4b09      	ldr	r3, [pc, #36]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048c0:	220c      	movs	r2, #12
 80048c2:	615a      	str	r2, [r3, #20]
 80048c4:	4b07      	ldr	r3, [pc, #28]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048c6:	2200      	movs	r2, #0
 80048c8:	619a      	str	r2, [r3, #24]
 80048ca:	4b06      	ldr	r3, [pc, #24]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048cc:	2200      	movs	r2, #0
 80048ce:	61da      	str	r2, [r3, #28]
 80048d0:	4804      	ldr	r0, [pc, #16]	; (80048e4 <MX_USART3_UART_Init+0x4c>)
 80048d2:	f012 f987 	bl	8016be4 <HAL_UART_Init>
 80048d6:	4603      	mov	r3, r0
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d001      	beq.n	80048e0 <MX_USART3_UART_Init+0x48>
 80048dc:	f7ff f971 	bl	8003bc2 <Error_Handler>
 80048e0:	bf00      	nop
 80048e2:	bd80      	pop	{r7, pc}
 80048e4:	200016a0 	.word	0x200016a0
 80048e8:	40004800 	.word	0x40004800
 80048ec:	000186a0 	.word	0x000186a0

080048f0 <MX_USART6_UART_Init>:
 80048f0:	b580      	push	{r7, lr}
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	4b11      	ldr	r3, [pc, #68]	; (800493c <MX_USART6_UART_Init+0x4c>)
 80048f6:	4a12      	ldr	r2, [pc, #72]	; (8004940 <MX_USART6_UART_Init+0x50>)
 80048f8:	601a      	str	r2, [r3, #0]
 80048fa:	4b10      	ldr	r3, [pc, #64]	; (800493c <MX_USART6_UART_Init+0x4c>)
 80048fc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004900:	605a      	str	r2, [r3, #4]
 8004902:	4b0e      	ldr	r3, [pc, #56]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004904:	2200      	movs	r2, #0
 8004906:	609a      	str	r2, [r3, #8]
 8004908:	4b0c      	ldr	r3, [pc, #48]	; (800493c <MX_USART6_UART_Init+0x4c>)
 800490a:	2200      	movs	r2, #0
 800490c:	60da      	str	r2, [r3, #12]
 800490e:	4b0b      	ldr	r3, [pc, #44]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004910:	2200      	movs	r2, #0
 8004912:	611a      	str	r2, [r3, #16]
 8004914:	4b09      	ldr	r3, [pc, #36]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004916:	220c      	movs	r2, #12
 8004918:	615a      	str	r2, [r3, #20]
 800491a:	4b08      	ldr	r3, [pc, #32]	; (800493c <MX_USART6_UART_Init+0x4c>)
 800491c:	2200      	movs	r2, #0
 800491e:	619a      	str	r2, [r3, #24]
 8004920:	4b06      	ldr	r3, [pc, #24]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004922:	2200      	movs	r2, #0
 8004924:	61da      	str	r2, [r3, #28]
 8004926:	4805      	ldr	r0, [pc, #20]	; (800493c <MX_USART6_UART_Init+0x4c>)
 8004928:	f012 f95c 	bl	8016be4 <HAL_UART_Init>
 800492c:	4603      	mov	r3, r0
 800492e:	2b00      	cmp	r3, #0
 8004930:	d001      	beq.n	8004936 <MX_USART6_UART_Init+0x46>
 8004932:	f7ff f946 	bl	8003bc2 <Error_Handler>
 8004936:	bf00      	nop
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	200016e4 	.word	0x200016e4
 8004940:	40011400 	.word	0x40011400

08004944 <HAL_UART_MspInit>:
 8004944:	b580      	push	{r7, lr}
 8004946:	b08e      	sub	sp, #56	; 0x38
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
 800494c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004950:	2200      	movs	r2, #0
 8004952:	601a      	str	r2, [r3, #0]
 8004954:	605a      	str	r2, [r3, #4]
 8004956:	609a      	str	r2, [r3, #8]
 8004958:	60da      	str	r2, [r3, #12]
 800495a:	611a      	str	r2, [r3, #16]
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	4a78      	ldr	r2, [pc, #480]	; (8004b44 <HAL_UART_MspInit+0x200>)
 8004962:	4293      	cmp	r3, r2
 8004964:	f040 8083 	bne.w	8004a6e <HAL_UART_MspInit+0x12a>
 8004968:	2300      	movs	r3, #0
 800496a:	623b      	str	r3, [r7, #32]
 800496c:	4b76      	ldr	r3, [pc, #472]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800496e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004970:	4a75      	ldr	r2, [pc, #468]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004972:	f043 0310 	orr.w	r3, r3, #16
 8004976:	6453      	str	r3, [r2, #68]	; 0x44
 8004978:	4b73      	ldr	r3, [pc, #460]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800497a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800497c:	f003 0310 	and.w	r3, r3, #16
 8004980:	623b      	str	r3, [r7, #32]
 8004982:	6a3b      	ldr	r3, [r7, #32]
 8004984:	2300      	movs	r3, #0
 8004986:	61fb      	str	r3, [r7, #28]
 8004988:	4b6f      	ldr	r3, [pc, #444]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800498a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800498c:	4a6e      	ldr	r2, [pc, #440]	; (8004b48 <HAL_UART_MspInit+0x204>)
 800498e:	f043 0302 	orr.w	r3, r3, #2
 8004992:	6313      	str	r3, [r2, #48]	; 0x30
 8004994:	4b6c      	ldr	r3, [pc, #432]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004998:	f003 0302 	and.w	r3, r3, #2
 800499c:	61fb      	str	r3, [r7, #28]
 800499e:	69fb      	ldr	r3, [r7, #28]
 80049a0:	2300      	movs	r3, #0
 80049a2:	61bb      	str	r3, [r7, #24]
 80049a4:	4b68      	ldr	r3, [pc, #416]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049a8:	4a67      	ldr	r2, [pc, #412]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049aa:	f043 0301 	orr.w	r3, r3, #1
 80049ae:	6313      	str	r3, [r2, #48]	; 0x30
 80049b0:	4b65      	ldr	r3, [pc, #404]	; (8004b48 <HAL_UART_MspInit+0x204>)
 80049b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049b4:	f003 0301 	and.w	r3, r3, #1
 80049b8:	61bb      	str	r3, [r7, #24]
 80049ba:	69bb      	ldr	r3, [r7, #24]
 80049bc:	2380      	movs	r3, #128	; 0x80
 80049be:	627b      	str	r3, [r7, #36]	; 0x24
 80049c0:	2302      	movs	r3, #2
 80049c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80049c4:	2300      	movs	r3, #0
 80049c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049c8:	2303      	movs	r3, #3
 80049ca:	633b      	str	r3, [r7, #48]	; 0x30
 80049cc:	2307      	movs	r3, #7
 80049ce:	637b      	str	r3, [r7, #52]	; 0x34
 80049d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80049d4:	4619      	mov	r1, r3
 80049d6:	485d      	ldr	r0, [pc, #372]	; (8004b4c <HAL_UART_MspInit+0x208>)
 80049d8:	f00c fc66 	bl	80112a8 <HAL_GPIO_Init>
 80049dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80049e0:	627b      	str	r3, [r7, #36]	; 0x24
 80049e2:	2302      	movs	r3, #2
 80049e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80049e6:	2300      	movs	r3, #0
 80049e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049ea:	2303      	movs	r3, #3
 80049ec:	633b      	str	r3, [r7, #48]	; 0x30
 80049ee:	2307      	movs	r3, #7
 80049f0:	637b      	str	r3, [r7, #52]	; 0x34
 80049f2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80049f6:	4619      	mov	r1, r3
 80049f8:	4855      	ldr	r0, [pc, #340]	; (8004b50 <HAL_UART_MspInit+0x20c>)
 80049fa:	f00c fc55 	bl	80112a8 <HAL_GPIO_Init>
 80049fe:	4b55      	ldr	r3, [pc, #340]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a00:	4a55      	ldr	r2, [pc, #340]	; (8004b58 <HAL_UART_MspInit+0x214>)
 8004a02:	601a      	str	r2, [r3, #0]
 8004a04:	4b53      	ldr	r3, [pc, #332]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a06:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004a0a:	605a      	str	r2, [r3, #4]
 8004a0c:	4b51      	ldr	r3, [pc, #324]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a0e:	2200      	movs	r2, #0
 8004a10:	609a      	str	r2, [r3, #8]
 8004a12:	4b50      	ldr	r3, [pc, #320]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a14:	2200      	movs	r2, #0
 8004a16:	60da      	str	r2, [r3, #12]
 8004a18:	4b4e      	ldr	r3, [pc, #312]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004a1e:	611a      	str	r2, [r3, #16]
 8004a20:	4b4c      	ldr	r3, [pc, #304]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a22:	2200      	movs	r2, #0
 8004a24:	615a      	str	r2, [r3, #20]
 8004a26:	4b4b      	ldr	r3, [pc, #300]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a28:	2200      	movs	r2, #0
 8004a2a:	619a      	str	r2, [r3, #24]
 8004a2c:	4b49      	ldr	r3, [pc, #292]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004a32:	61da      	str	r2, [r3, #28]
 8004a34:	4b47      	ldr	r3, [pc, #284]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a36:	2200      	movs	r2, #0
 8004a38:	621a      	str	r2, [r3, #32]
 8004a3a:	4b46      	ldr	r3, [pc, #280]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a3c:	2200      	movs	r2, #0
 8004a3e:	625a      	str	r2, [r3, #36]	; 0x24
 8004a40:	4844      	ldr	r0, [pc, #272]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a42:	f00c f823 	bl	8010a8c <HAL_DMA_Init>
 8004a46:	4603      	mov	r3, r0
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d001      	beq.n	8004a50 <HAL_UART_MspInit+0x10c>
 8004a4c:	f7ff f8b9 	bl	8003bc2 <Error_Handler>
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	4a40      	ldr	r2, [pc, #256]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a54:	639a      	str	r2, [r3, #56]	; 0x38
 8004a56:	4a3f      	ldr	r2, [pc, #252]	; (8004b54 <HAL_UART_MspInit+0x210>)
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	6393      	str	r3, [r2, #56]	; 0x38
 8004a5c:	2200      	movs	r2, #0
 8004a5e:	2105      	movs	r1, #5
 8004a60:	2025      	movs	r0, #37	; 0x25
 8004a62:	f00b ffe9 	bl	8010a38 <HAL_NVIC_SetPriority>
 8004a66:	2025      	movs	r0, #37	; 0x25
 8004a68:	f00c f802 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8004a6c:	e116      	b.n	8004c9c <HAL_UART_MspInit+0x358>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	4a3a      	ldr	r2, [pc, #232]	; (8004b5c <HAL_UART_MspInit+0x218>)
 8004a74:	4293      	cmp	r3, r2
 8004a76:	d179      	bne.n	8004b6c <HAL_UART_MspInit+0x228>
 8004a78:	2300      	movs	r3, #0
 8004a7a:	617b      	str	r3, [r7, #20]
 8004a7c:	4b32      	ldr	r3, [pc, #200]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a80:	4a31      	ldr	r2, [pc, #196]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a82:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004a86:	6413      	str	r3, [r2, #64]	; 0x40
 8004a88:	4b2f      	ldr	r3, [pc, #188]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a8c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004a90:	617b      	str	r3, [r7, #20]
 8004a92:	697b      	ldr	r3, [r7, #20]
 8004a94:	2300      	movs	r3, #0
 8004a96:	613b      	str	r3, [r7, #16]
 8004a98:	4b2b      	ldr	r3, [pc, #172]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a9c:	4a2a      	ldr	r2, [pc, #168]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004a9e:	f043 0304 	orr.w	r3, r3, #4
 8004aa2:	6313      	str	r3, [r2, #48]	; 0x30
 8004aa4:	4b28      	ldr	r3, [pc, #160]	; (8004b48 <HAL_UART_MspInit+0x204>)
 8004aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004aa8:	f003 0304 	and.w	r3, r3, #4
 8004aac:	613b      	str	r3, [r7, #16]
 8004aae:	693b      	ldr	r3, [r7, #16]
 8004ab0:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004ab4:	627b      	str	r3, [r7, #36]	; 0x24
 8004ab6:	2302      	movs	r3, #2
 8004ab8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004aba:	2300      	movs	r3, #0
 8004abc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004abe:	2303      	movs	r3, #3
 8004ac0:	633b      	str	r3, [r7, #48]	; 0x30
 8004ac2:	2307      	movs	r3, #7
 8004ac4:	637b      	str	r3, [r7, #52]	; 0x34
 8004ac6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004aca:	4619      	mov	r1, r3
 8004acc:	4824      	ldr	r0, [pc, #144]	; (8004b60 <HAL_UART_MspInit+0x21c>)
 8004ace:	f00c fbeb 	bl	80112a8 <HAL_GPIO_Init>
 8004ad2:	4b24      	ldr	r3, [pc, #144]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ad4:	4a24      	ldr	r2, [pc, #144]	; (8004b68 <HAL_UART_MspInit+0x224>)
 8004ad6:	601a      	str	r2, [r3, #0]
 8004ad8:	4b22      	ldr	r3, [pc, #136]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ada:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004ade:	605a      	str	r2, [r3, #4]
 8004ae0:	4b20      	ldr	r3, [pc, #128]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	609a      	str	r2, [r3, #8]
 8004ae6:	4b1f      	ldr	r3, [pc, #124]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004ae8:	2200      	movs	r2, #0
 8004aea:	60da      	str	r2, [r3, #12]
 8004aec:	4b1d      	ldr	r3, [pc, #116]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004aee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004af2:	611a      	str	r2, [r3, #16]
 8004af4:	4b1b      	ldr	r3, [pc, #108]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004af6:	2200      	movs	r2, #0
 8004af8:	615a      	str	r2, [r3, #20]
 8004afa:	4b1a      	ldr	r3, [pc, #104]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004afc:	2200      	movs	r2, #0
 8004afe:	619a      	str	r2, [r3, #24]
 8004b00:	4b18      	ldr	r3, [pc, #96]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004b06:	61da      	str	r2, [r3, #28]
 8004b08:	4b16      	ldr	r3, [pc, #88]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b0a:	2200      	movs	r2, #0
 8004b0c:	621a      	str	r2, [r3, #32]
 8004b0e:	4b15      	ldr	r3, [pc, #84]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b10:	2200      	movs	r2, #0
 8004b12:	625a      	str	r2, [r3, #36]	; 0x24
 8004b14:	4813      	ldr	r0, [pc, #76]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b16:	f00b ffb9 	bl	8010a8c <HAL_DMA_Init>
 8004b1a:	4603      	mov	r3, r0
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d001      	beq.n	8004b24 <HAL_UART_MspInit+0x1e0>
 8004b20:	f7ff f84f 	bl	8003bc2 <Error_Handler>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	4a0f      	ldr	r2, [pc, #60]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b28:	639a      	str	r2, [r3, #56]	; 0x38
 8004b2a:	4a0e      	ldr	r2, [pc, #56]	; (8004b64 <HAL_UART_MspInit+0x220>)
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	6393      	str	r3, [r2, #56]	; 0x38
 8004b30:	2200      	movs	r2, #0
 8004b32:	2105      	movs	r1, #5
 8004b34:	2027      	movs	r0, #39	; 0x27
 8004b36:	f00b ff7f 	bl	8010a38 <HAL_NVIC_SetPriority>
 8004b3a:	2027      	movs	r0, #39	; 0x27
 8004b3c:	f00b ff98 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8004b40:	e0ac      	b.n	8004c9c <HAL_UART_MspInit+0x358>
 8004b42:	bf00      	nop
 8004b44:	40011000 	.word	0x40011000
 8004b48:	40023800 	.word	0x40023800
 8004b4c:	40020400 	.word	0x40020400
 8004b50:	40020000 	.word	0x40020000
 8004b54:	20001728 	.word	0x20001728
 8004b58:	40026488 	.word	0x40026488
 8004b5c:	40004800 	.word	0x40004800
 8004b60:	40020800 	.word	0x40020800
 8004b64:	20001788 	.word	0x20001788
 8004b68:	40026028 	.word	0x40026028
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	4a4c      	ldr	r2, [pc, #304]	; (8004ca4 <HAL_UART_MspInit+0x360>)
 8004b72:	4293      	cmp	r3, r2
 8004b74:	f040 8092 	bne.w	8004c9c <HAL_UART_MspInit+0x358>
 8004b78:	2300      	movs	r3, #0
 8004b7a:	60fb      	str	r3, [r7, #12]
 8004b7c:	4b4a      	ldr	r3, [pc, #296]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b80:	4a49      	ldr	r2, [pc, #292]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b82:	f043 0320 	orr.w	r3, r3, #32
 8004b86:	6453      	str	r3, [r2, #68]	; 0x44
 8004b88:	4b47      	ldr	r3, [pc, #284]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b8c:	f003 0320 	and.w	r3, r3, #32
 8004b90:	60fb      	str	r3, [r7, #12]
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	2300      	movs	r3, #0
 8004b96:	60bb      	str	r3, [r7, #8]
 8004b98:	4b43      	ldr	r3, [pc, #268]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b9c:	4a42      	ldr	r2, [pc, #264]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004b9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ba2:	6313      	str	r3, [r2, #48]	; 0x30
 8004ba4:	4b40      	ldr	r3, [pc, #256]	; (8004ca8 <HAL_UART_MspInit+0x364>)
 8004ba6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ba8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004bac:	60bb      	str	r3, [r7, #8]
 8004bae:	68bb      	ldr	r3, [r7, #8]
 8004bb0:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 8004bb4:	627b      	str	r3, [r7, #36]	; 0x24
 8004bb6:	2302      	movs	r3, #2
 8004bb8:	62bb      	str	r3, [r7, #40]	; 0x28
 8004bba:	2300      	movs	r3, #0
 8004bbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bbe:	2303      	movs	r3, #3
 8004bc0:	633b      	str	r3, [r7, #48]	; 0x30
 8004bc2:	2308      	movs	r3, #8
 8004bc4:	637b      	str	r3, [r7, #52]	; 0x34
 8004bc6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004bca:	4619      	mov	r1, r3
 8004bcc:	4837      	ldr	r0, [pc, #220]	; (8004cac <HAL_UART_MspInit+0x368>)
 8004bce:	f00c fb6b 	bl	80112a8 <HAL_GPIO_Init>
 8004bd2:	4b37      	ldr	r3, [pc, #220]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bd4:	4a37      	ldr	r2, [pc, #220]	; (8004cb4 <HAL_UART_MspInit+0x370>)
 8004bd6:	601a      	str	r2, [r3, #0]
 8004bd8:	4b35      	ldr	r3, [pc, #212]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bda:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8004bde:	605a      	str	r2, [r3, #4]
 8004be0:	4b33      	ldr	r3, [pc, #204]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004be2:	2200      	movs	r2, #0
 8004be4:	609a      	str	r2, [r3, #8]
 8004be6:	4b32      	ldr	r3, [pc, #200]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004be8:	2200      	movs	r2, #0
 8004bea:	60da      	str	r2, [r3, #12]
 8004bec:	4b30      	ldr	r3, [pc, #192]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004bf2:	611a      	str	r2, [r3, #16]
 8004bf4:	4b2e      	ldr	r3, [pc, #184]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	615a      	str	r2, [r3, #20]
 8004bfa:	4b2d      	ldr	r3, [pc, #180]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	619a      	str	r2, [r3, #24]
 8004c00:	4b2b      	ldr	r3, [pc, #172]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004c06:	61da      	str	r2, [r3, #28]
 8004c08:	4b29      	ldr	r3, [pc, #164]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	621a      	str	r2, [r3, #32]
 8004c0e:	4b28      	ldr	r3, [pc, #160]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c10:	2200      	movs	r2, #0
 8004c12:	625a      	str	r2, [r3, #36]	; 0x24
 8004c14:	4826      	ldr	r0, [pc, #152]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c16:	f00b ff39 	bl	8010a8c <HAL_DMA_Init>
 8004c1a:	4603      	mov	r3, r0
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d001      	beq.n	8004c24 <HAL_UART_MspInit+0x2e0>
 8004c20:	f7fe ffcf 	bl	8003bc2 <Error_Handler>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	4a22      	ldr	r2, [pc, #136]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c28:	639a      	str	r2, [r3, #56]	; 0x38
 8004c2a:	4a21      	ldr	r2, [pc, #132]	; (8004cb0 <HAL_UART_MspInit+0x36c>)
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	6393      	str	r3, [r2, #56]	; 0x38
 8004c30:	4b21      	ldr	r3, [pc, #132]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c32:	4a22      	ldr	r2, [pc, #136]	; (8004cbc <HAL_UART_MspInit+0x378>)
 8004c34:	601a      	str	r2, [r3, #0]
 8004c36:	4b20      	ldr	r3, [pc, #128]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c38:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8004c3c:	605a      	str	r2, [r3, #4]
 8004c3e:	4b1e      	ldr	r3, [pc, #120]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c40:	2240      	movs	r2, #64	; 0x40
 8004c42:	609a      	str	r2, [r3, #8]
 8004c44:	4b1c      	ldr	r3, [pc, #112]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c46:	2200      	movs	r2, #0
 8004c48:	60da      	str	r2, [r3, #12]
 8004c4a:	4b1b      	ldr	r3, [pc, #108]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c4c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004c50:	611a      	str	r2, [r3, #16]
 8004c52:	4b19      	ldr	r3, [pc, #100]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c54:	2200      	movs	r2, #0
 8004c56:	615a      	str	r2, [r3, #20]
 8004c58:	4b17      	ldr	r3, [pc, #92]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c5a:	2200      	movs	r2, #0
 8004c5c:	619a      	str	r2, [r3, #24]
 8004c5e:	4b16      	ldr	r3, [pc, #88]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c60:	2200      	movs	r2, #0
 8004c62:	61da      	str	r2, [r3, #28]
 8004c64:	4b14      	ldr	r3, [pc, #80]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c66:	2200      	movs	r2, #0
 8004c68:	621a      	str	r2, [r3, #32]
 8004c6a:	4b13      	ldr	r3, [pc, #76]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c6c:	2200      	movs	r2, #0
 8004c6e:	625a      	str	r2, [r3, #36]	; 0x24
 8004c70:	4811      	ldr	r0, [pc, #68]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c72:	f00b ff0b 	bl	8010a8c <HAL_DMA_Init>
 8004c76:	4603      	mov	r3, r0
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d001      	beq.n	8004c80 <HAL_UART_MspInit+0x33c>
 8004c7c:	f7fe ffa1 	bl	8003bc2 <Error_Handler>
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	4a0d      	ldr	r2, [pc, #52]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c84:	635a      	str	r2, [r3, #52]	; 0x34
 8004c86:	4a0c      	ldr	r2, [pc, #48]	; (8004cb8 <HAL_UART_MspInit+0x374>)
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	6393      	str	r3, [r2, #56]	; 0x38
 8004c8c:	2200      	movs	r2, #0
 8004c8e:	2105      	movs	r1, #5
 8004c90:	2047      	movs	r0, #71	; 0x47
 8004c92:	f00b fed1 	bl	8010a38 <HAL_NVIC_SetPriority>
 8004c96:	2047      	movs	r0, #71	; 0x47
 8004c98:	f00b feea 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 8004c9c:	bf00      	nop
 8004c9e:	3738      	adds	r7, #56	; 0x38
 8004ca0:	46bd      	mov	sp, r7
 8004ca2:	bd80      	pop	{r7, pc}
 8004ca4:	40011400 	.word	0x40011400
 8004ca8:	40023800 	.word	0x40023800
 8004cac:	40021800 	.word	0x40021800
 8004cb0:	200017e8 	.word	0x200017e8
 8004cb4:	40026428 	.word	0x40026428
 8004cb8:	20001848 	.word	0x20001848
 8004cbc:	400264a0 	.word	0x400264a0

08004cc0 <Reset_Handler>:
 8004cc0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004cf8 <LoopFillZerobss+0x14>
 8004cc4:	2100      	movs	r1, #0
 8004cc6:	e003      	b.n	8004cd0 <LoopCopyDataInit>

08004cc8 <CopyDataInit>:
 8004cc8:	4b0c      	ldr	r3, [pc, #48]	; (8004cfc <LoopFillZerobss+0x18>)
 8004cca:	585b      	ldr	r3, [r3, r1]
 8004ccc:	5043      	str	r3, [r0, r1]
 8004cce:	3104      	adds	r1, #4

08004cd0 <LoopCopyDataInit>:
 8004cd0:	480b      	ldr	r0, [pc, #44]	; (8004d00 <LoopFillZerobss+0x1c>)
 8004cd2:	4b0c      	ldr	r3, [pc, #48]	; (8004d04 <LoopFillZerobss+0x20>)
 8004cd4:	1842      	adds	r2, r0, r1
 8004cd6:	429a      	cmp	r2, r3
 8004cd8:	d3f6      	bcc.n	8004cc8 <CopyDataInit>
 8004cda:	4a0b      	ldr	r2, [pc, #44]	; (8004d08 <LoopFillZerobss+0x24>)
 8004cdc:	e002      	b.n	8004ce4 <LoopFillZerobss>

08004cde <FillZerobss>:
 8004cde:	2300      	movs	r3, #0
 8004ce0:	f842 3b04 	str.w	r3, [r2], #4

08004ce4 <LoopFillZerobss>:
 8004ce4:	4b09      	ldr	r3, [pc, #36]	; (8004d0c <LoopFillZerobss+0x28>)
 8004ce6:	429a      	cmp	r2, r3
 8004ce8:	d3f9      	bcc.n	8004cde <FillZerobss>
 8004cea:	f7ff fa3b 	bl	8004164 <SystemInit>
 8004cee:	f01a fcbb 	bl	801f668 <__libc_init_array>
 8004cf2:	f7fe febb 	bl	8003a6c <main>
 8004cf6:	4770      	bx	lr
 8004cf8:	20020000 	.word	0x20020000
 8004cfc:	08027758 	.word	0x08027758
 8004d00:	20000000 	.word	0x20000000
 8004d04:	20000324 	.word	0x20000324
 8004d08:	20000328 	.word	0x20000328
 8004d0c:	2000f58c 	.word	0x2000f58c

08004d10 <ADC_IRQHandler>:
 8004d10:	e7fe      	b.n	8004d10 <ADC_IRQHandler>

08004d12 <PID_Init>:
#include "can_msg_processor.h"
//#include "motors_process.h"
//#include "leg_pos.h"
#include "typedefs.h"

void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004d12:	b480      	push	{r7}
 8004d14:	b08d      	sub	sp, #52	; 0x34
 8004d16:	af00      	add	r7, sp, #0
 8004d18:	62f8      	str	r0, [r7, #44]	; 0x2c
 8004d1a:	ed87 0b08 	vstr	d0, [r7, #32]
 8004d1e:	ed87 1b06 	vstr	d1, [r7, #24]
 8004d22:	ed87 2b04 	vstr	d2, [r7, #16]
 8004d26:	ed87 3b02 	vstr	d3, [r7, #8]
 8004d2a:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004d2e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d30:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004d34:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004d38:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d3a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004d3e:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004d42:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004d48:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004d4c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d4e:	f04f 0200 	mov.w	r2, #0
 8004d52:	f04f 0300 	mov.w	r3, #0
 8004d56:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004d5a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d5c:	f04f 0200 	mov.w	r2, #0
 8004d60:	f04f 0300 	mov.w	r3, #0
 8004d64:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004d68:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d6a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004d6e:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    pid->min_output = min_output;
 8004d72:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004d74:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004d78:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
}
 8004d7c:	bf00      	nop
 8004d7e:	3734      	adds	r7, #52	; 0x34
 8004d80:	46bd      	mov	sp, r7
 8004d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d86:	4770      	bx	lr

08004d88 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004d88:	b5b0      	push	{r4, r5, r7, lr}
 8004d8a:	b090      	sub	sp, #64	; 0x40
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6278      	str	r0, [r7, #36]	; 0x24
 8004d90:	ed87 0b06 	vstr	d0, [r7, #24]
 8004d94:	ed87 1b04 	vstr	d1, [r7, #16]
 8004d98:	ed87 2b02 	vstr	d2, [r7, #8]
 8004d9c:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004da0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004da4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004da8:	f7fb fa6e 	bl	8000288 <__aeabi_dsub>
 8004dac:	4602      	mov	r2, r0
 8004dae:	460b      	mov	r3, r1
 8004db0:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    if (error < deadzone && error > -deadzone ){
 8004db4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004db8:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dbc:	f7fb fe8e 	bl	8000adc <__aeabi_dcmplt>
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d012      	beq.n	8004dec <PID_Compute+0x64>
 8004dc6:	683c      	ldr	r4, [r7, #0]
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8004dce:	4622      	mov	r2, r4
 8004dd0:	462b      	mov	r3, r5
 8004dd2:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dd6:	f7fb fe9f 	bl	8000b18 <__aeabi_dcmpgt>
 8004dda:	4603      	mov	r3, r0
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d005      	beq.n	8004dec <PID_Compute+0x64>
        error = 0.0;
 8004de0:	f04f 0200 	mov.w	r2, #0
 8004de4:	f04f 0300 	mov.w	r3, #0
 8004de8:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    }
    pid->integral += error * dt;
 8004dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dee:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004df2:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004df6:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004dfa:	f7fb fbfd 	bl	80005f8 <__aeabi_dmul>
 8004dfe:	4602      	mov	r2, r0
 8004e00:	460b      	mov	r3, r1
 8004e02:	4620      	mov	r0, r4
 8004e04:	4629      	mov	r1, r5
 8004e06:	f7fb fa41 	bl	800028c <__adddf3>
 8004e0a:	4602      	mov	r2, r0
 8004e0c:	460b      	mov	r3, r1
 8004e0e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004e10:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004e14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e16:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004e1a:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8004e1e:	f7fb fa33 	bl	8000288 <__aeabi_dsub>
 8004e22:	4602      	mov	r2, r0
 8004e24:	460b      	mov	r3, r1
 8004e26:	4610      	mov	r0, r2
 8004e28:	4619      	mov	r1, r3
 8004e2a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004e2e:	f7fb fd0d 	bl	800084c <__aeabi_ddiv>
 8004e32:	4602      	mov	r2, r0
 8004e34:	460b      	mov	r3, r1
 8004e36:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004e3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e3c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004e40:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004e44:	f7fb fbd8 	bl	80005f8 <__aeabi_dmul>
 8004e48:	4602      	mov	r2, r0
 8004e4a:	460b      	mov	r3, r1
 8004e4c:	4614      	mov	r4, r2
 8004e4e:	461d      	mov	r5, r3
 8004e50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e52:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e58:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004e5c:	f7fb fbcc 	bl	80005f8 <__aeabi_dmul>
 8004e60:	4602      	mov	r2, r0
 8004e62:	460b      	mov	r3, r1
 8004e64:	4620      	mov	r0, r4
 8004e66:	4629      	mov	r1, r5
 8004e68:	f7fb fa10 	bl	800028c <__adddf3>
 8004e6c:	4602      	mov	r2, r0
 8004e6e:	460b      	mov	r3, r1
 8004e70:	4614      	mov	r4, r2
 8004e72:	461d      	mov	r5, r3
 8004e74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e76:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004e7a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8004e7e:	f7fb fbbb 	bl	80005f8 <__aeabi_dmul>
 8004e82:	4602      	mov	r2, r0
 8004e84:	460b      	mov	r3, r1
 8004e86:	4620      	mov	r0, r4
 8004e88:	4629      	mov	r1, r5
 8004e8a:	f7fb f9ff 	bl	800028c <__adddf3>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	460b      	mov	r3, r1
 8004e92:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004e96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e98:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8004e9c:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004ea0:	f7fb fe3a 	bl	8000b18 <__aeabi_dcmpgt>
 8004ea4:	4603      	mov	r3, r0
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d005      	beq.n	8004eb6 <PID_Compute+0x12e>
        output = pid->max_output;
 8004eaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eac:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8004eb0:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 8004eb4:	e00e      	b.n	8004ed4 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eb8:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8004ebc:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8004ec0:	f7fb fe0c 	bl	8000adc <__aeabi_dcmplt>
 8004ec4:	4603      	mov	r3, r0
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d004      	beq.n	8004ed4 <PID_Compute+0x14c>
        output = pid->min_output;
 8004eca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ecc:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8004ed0:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
    }

    pid->prev_error = error;
 8004ed4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004ed6:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004eda:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004ede:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004ee0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8004ee4:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
}
 8004ee8:	bf00      	nop
 8004eea:	eeb0 0a47 	vmov.f32	s0, s14
 8004eee:	eef0 0a67 	vmov.f32	s1, s15
 8004ef2:	3740      	adds	r7, #64	; 0x40
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bdb0      	pop	{r4, r5, r7, pc}

08004ef8 <buzzing_task>:
 4, 3, 1, 8
 };
 */

//fun
void buzzing_task(void *argument) {
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b086      	sub	sp, #24
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	6078      	str	r0, [r7, #4]
	uint8_t buzzing_type;
	TickType_t last_wake_time;
	uint16_t note_time;
	float semiquaver_time = 60000 / (4 * TEMPO);
 8004f00:	4b81      	ldr	r3, [pc, #516]	; (8005108 <buzzing_task+0x210>)
 8004f02:	613b      	str	r3, [r7, #16]
	while (1) {
		xQueueReceive(buzzing_task_msg, &buzzing_type, portMAX_DELAY);
 8004f04:	4b81      	ldr	r3, [pc, #516]	; (800510c <buzzing_task+0x214>)
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f107 010d 	add.w	r1, r7, #13
 8004f0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004f10:	4618      	mov	r0, r3
 8004f12:	f017 f9eb 	bl	801c2ec <xQueueReceive>
		switch (buzzing_type) {
 8004f16:	7b7b      	ldrb	r3, [r7, #13]
 8004f18:	2b0a      	cmp	r3, #10
 8004f1a:	f200 80e8 	bhi.w	80050ee <buzzing_task+0x1f6>
 8004f1e:	a201      	add	r2, pc, #4	; (adr r2, 8004f24 <buzzing_task+0x2c>)
 8004f20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f24:	08004f51 	.word	0x08004f51
 8004f28:	08004fd9 	.word	0x08004fd9
 8004f2c:	080050ef 	.word	0x080050ef
 8004f30:	0800503d 	.word	0x0800503d
 8004f34:	0800500b 	.word	0x0800500b
 8004f38:	08005075 	.word	0x08005075
 8004f3c:	080050cf 	.word	0x080050cf
 8004f40:	080050df 	.word	0x080050df
 8004f44:	080050a1 	.word	0x080050a1
 8004f48:	080050b1 	.word	0x080050b1
 8004f4c:	080050c1 	.word	0x080050c1
		case song:
			for (uint16_t i = 0; i < sizeof(melody) / sizeof(uint16_t); i++) {
 8004f50:	2300      	movs	r3, #0
 8004f52:	82fb      	strh	r3, [r7, #22]
 8004f54:	e03c      	b.n	8004fd0 <buzzing_task+0xd8>
				last_wake_time = xTaskGetTickCount();
 8004f56:	f017 ff9f 	bl	801ce98 <xTaskGetTickCount>
 8004f5a:	4603      	mov	r3, r0
 8004f5c:	60bb      	str	r3, [r7, #8]
				buzzer(melody[i]);
 8004f5e:	8afb      	ldrh	r3, [r7, #22]
 8004f60:	4a6b      	ldr	r2, [pc, #428]	; (8005110 <buzzing_task+0x218>)
 8004f62:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004f66:	4618      	mov	r0, r3
 8004f68:	f7fc f940 	bl	80011ec <buzzer>
				note_time = (semiquaver_time * note_length[i]);
 8004f6c:	8afb      	ldrh	r3, [r7, #22]
 8004f6e:	4a69      	ldr	r2, [pc, #420]	; (8005114 <buzzing_task+0x21c>)
 8004f70:	009b      	lsls	r3, r3, #2
 8004f72:	4413      	add	r3, r2
 8004f74:	ed93 7a00 	vldr	s14, [r3]
 8004f78:	edd7 7a04 	vldr	s15, [r7, #16]
 8004f7c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004f80:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004f84:	ee17 3a90 	vmov	r3, s15
 8004f88:	81fb      	strh	r3, [r7, #14]
				vTaskDelayUntil(&last_wake_time, note_time * 0.95);
 8004f8a:	89fb      	ldrh	r3, [r7, #14]
 8004f8c:	4618      	mov	r0, r3
 8004f8e:	f7fb fac9 	bl	8000524 <__aeabi_i2d>
 8004f92:	a35b      	add	r3, pc, #364	; (adr r3, 8005100 <buzzing_task+0x208>)
 8004f94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f98:	f7fb fb2e 	bl	80005f8 <__aeabi_dmul>
 8004f9c:	4602      	mov	r2, r0
 8004f9e:	460b      	mov	r3, r1
 8004fa0:	4610      	mov	r0, r2
 8004fa2:	4619      	mov	r1, r3
 8004fa4:	f7fb fe00 	bl	8000ba8 <__aeabi_d2uiz>
 8004fa8:	4602      	mov	r2, r0
 8004faa:	f107 0308 	add.w	r3, r7, #8
 8004fae:	4611      	mov	r1, r2
 8004fb0:	4618      	mov	r0, r3
 8004fb2:	f017 fda3 	bl	801cafc <vTaskDelayUntil>
				buzzer(0);
 8004fb6:	2000      	movs	r0, #0
 8004fb8:	f7fc f918 	bl	80011ec <buzzer>
				vTaskDelayUntil(&last_wake_time, note_time);
 8004fbc:	89fa      	ldrh	r2, [r7, #14]
 8004fbe:	f107 0308 	add.w	r3, r7, #8
 8004fc2:	4611      	mov	r1, r2
 8004fc4:	4618      	mov	r0, r3
 8004fc6:	f017 fd99 	bl	801cafc <vTaskDelayUntil>
			for (uint16_t i = 0; i < sizeof(melody) / sizeof(uint16_t); i++) {
 8004fca:	8afb      	ldrh	r3, [r7, #22]
 8004fcc:	3301      	adds	r3, #1
 8004fce:	82fb      	strh	r3, [r7, #22]
 8004fd0:	8afb      	ldrh	r3, [r7, #22]
 8004fd2:	2b7c      	cmp	r3, #124	; 0x7c
 8004fd4:	d9bf      	bls.n	8004f56 <buzzing_task+0x5e>
			}
			break;
 8004fd6:	e08a      	b.n	80050ee <buzzing_task+0x1f6>
		case ok:
			last_wake_time = xTaskGetTickCount();
 8004fd8:	f017 ff5e 	bl	801ce98 <xTaskGetTickCount>
 8004fdc:	4603      	mov	r3, r0
 8004fde:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_HIGH);
 8004fe0:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8004fe4:	f7fc f902 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8004fe8:	2064      	movs	r0, #100	; 0x64
 8004fea:	f017 fe05 	bl	801cbf8 <vTaskDelay>
			buzzer(0);
 8004fee:	2000      	movs	r0, #0
 8004ff0:	f7fc f8fc 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8004ff4:	2032      	movs	r0, #50	; 0x32
 8004ff6:	f017 fdff 	bl	801cbf8 <vTaskDelay>
			buzzer(BUZZER_LOW);
 8004ffa:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8004ffe:	f7fc f8f5 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005002:	2064      	movs	r0, #100	; 0x64
 8005004:	f017 fdf8 	bl	801cbf8 <vTaskDelay>
			break;
 8005008:	e071      	b.n	80050ee <buzzing_task+0x1f6>
//			buzzer(BUZZER_HIGH);
//			vTaskDelay(BUZZ_TIME);
//			buzzer(0);
//			break;
		case control_control:
			last_wake_time = xTaskGetTickCount();
 800500a:	f017 ff45 	bl	801ce98 <xTaskGetTickCount>
 800500e:	4603      	mov	r3, r0
 8005010:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_LOW);
 8005012:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005016:	f7fc f8e9 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800501a:	2064      	movs	r0, #100	; 0x64
 800501c:	f017 fdec 	bl	801cbf8 <vTaskDelay>
			buzzer(0);
 8005020:	2000      	movs	r0, #0
 8005022:	f7fc f8e3 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8005026:	2032      	movs	r0, #50	; 0x32
 8005028:	f017 fde6 	bl	801cbf8 <vTaskDelay>
			buzzer(BUZZER_LOW);
 800502c:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005030:	f7fc f8dc 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005034:	2064      	movs	r0, #100	; 0x64
 8005036:	f017 fddf 	bl	801cbf8 <vTaskDelay>
			break;
 800503a:	e058      	b.n	80050ee <buzzing_task+0x1f6>
		case control_keyboard:
			last_wake_time = xTaskGetTickCount();
 800503c:	f017 ff2c 	bl	801ce98 <xTaskGetTickCount>
 8005040:	4603      	mov	r3, r0
 8005042:	60bb      	str	r3, [r7, #8]
			buzzer(BUZZER_HIGH);
 8005044:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005048:	f7fc f8d0 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800504c:	2064      	movs	r0, #100	; 0x64
 800504e:	f017 fdd3 	bl	801cbf8 <vTaskDelay>
			buzzer(0);
 8005052:	2000      	movs	r0, #0
 8005054:	f7fc f8ca 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 8005058:	2032      	movs	r0, #50	; 0x32
 800505a:	f017 fdcd 	bl	801cbf8 <vTaskDelay>
			buzzer(BUZZER_HIGH);
 800505e:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005062:	f7fc f8c3 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005066:	2064      	movs	r0, #100	; 0x64
 8005068:	f017 fdc6 	bl	801cbf8 <vTaskDelay>
			buzzer(BUZZ_TIME);
 800506c:	2064      	movs	r0, #100	; 0x64
 800506e:	f7fc f8bd 	bl	80011ec <buzzer>
			break;
 8005072:	e03c      	b.n	80050ee <buzzing_task+0x1f6>

		case control_sbc:
			buzzer(BUZZER_LOW);
 8005074:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8005078:	f7fc f8b8 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800507c:	2064      	movs	r0, #100	; 0x64
 800507e:	f017 fdbb 	bl	801cbf8 <vTaskDelay>
			buzzer((BUZZER_HIGH+BUZZER_LOW)/2);
 8005082:	f240 404c 	movw	r0, #1100	; 0x44c
 8005086:	f7fc f8b1 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 800508a:	2064      	movs	r0, #100	; 0x64
 800508c:	f017 fdb4 	bl	801cbf8 <vTaskDelay>
			buzzer(BUZZER_HIGH);;
 8005090:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 8005094:	f7fc f8aa 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 8005098:	2064      	movs	r0, #100	; 0x64
 800509a:	f017 fdad 	bl	801cbf8 <vTaskDelay>
			break;
 800509e:	e026      	b.n	80050ee <buzzing_task+0x1f6>


		case bz_debug_low:
			buzzer(DEBUG_LOW_FREQ);
 80050a0:	f44f 70b9 	mov.w	r0, #370	; 0x172
 80050a4:	f7fc f8a2 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050a8:	2064      	movs	r0, #100	; 0x64
 80050aa:	f017 fda5 	bl	801cbf8 <vTaskDelay>
			break;
 80050ae:	e01e      	b.n	80050ee <buzzing_task+0x1f6>

		case bz_debug_high:
			buzzer(DEBUG_HIGH_FREQ);
 80050b0:	f640 1082 	movw	r0, #2434	; 0x982
 80050b4:	f7fc f89a 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050b8:	2064      	movs	r0, #100	; 0x64
 80050ba:	f017 fd9d 	bl	801cbf8 <vTaskDelay>
			break;
 80050be:	e016      	b.n	80050ee <buzzing_task+0x1f6>

		case bz_debug_rest:
			buzzer(0);
 80050c0:	2000      	movs	r0, #0
 80050c2:	f7fc f893 	bl	80011ec <buzzer>
			vTaskDelay(GAP_TIME);
 80050c6:	2032      	movs	r0, #50	; 0x32
 80050c8:	f017 fd96 	bl	801cbf8 <vTaskDelay>
			break;
 80050cc:	e00f      	b.n	80050ee <buzzing_task+0x1f6>
		case bz_high:
			buzzer(BUZZER_HIGH);
 80050ce:	f44f 60dc 	mov.w	r0, #1760	; 0x6e0
 80050d2:	f7fc f88b 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050d6:	2064      	movs	r0, #100	; 0x64
 80050d8:	f017 fd8e 	bl	801cbf8 <vTaskDelay>
			break;
 80050dc:	e007      	b.n	80050ee <buzzing_task+0x1f6>
		case bz_low:
			buzzer(BUZZER_LOW);
 80050de:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 80050e2:	f7fc f883 	bl	80011ec <buzzer>
			vTaskDelay(BUZZ_TIME);
 80050e6:	2064      	movs	r0, #100	; 0x64
 80050e8:	f017 fd86 	bl	801cbf8 <vTaskDelay>
			break;
 80050ec:	bf00      	nop
		}
		buzzer(0);
 80050ee:	2000      	movs	r0, #0
 80050f0:	f7fc f87c 	bl	80011ec <buzzer>
		vTaskDelay(GAP_TIME);
 80050f4:	2032      	movs	r0, #50	; 0x32
 80050f6:	f017 fd7f 	bl	801cbf8 <vTaskDelay>
		xQueueReceive(buzzing_task_msg, &buzzing_type, portMAX_DELAY);
 80050fa:	e703      	b.n	8004f04 <buzzing_task+0xc>
 80050fc:	f3af 8000 	nop.w
 8005100:	66666666 	.word	0x66666666
 8005104:	3fee6666 	.word	0x3fee6666
 8005108:	42fa0000 	.word	0x42fa0000
 800510c:	200004e4 	.word	0x200004e4
 8005110:	08026d30 	.word	0x08026d30
 8005114:	08026e2c 	.word	0x08026e2c

08005118 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 8005118:	b580      	push	{r7, lr}
 800511a:	b08c      	sub	sp, #48	; 0x30
 800511c:	af00      	add	r7, sp, #0
 800511e:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	4a1f      	ldr	r2, [pc, #124]	; (80051a4 <can_ISR+0x8c>)
 8005126:	4293      	cmp	r3, r2
 8005128:	d118      	bne.n	800515c <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 800512a:	210e      	movs	r1, #14
 800512c:	6878      	ldr	r0, [r7, #4]
 800512e:	f00b f97e 	bl	801042e <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL | CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8005132:	f107 020c 	add.w	r2, r7, #12
 8005136:	f107 0314 	add.w	r3, r7, #20
 800513a:	4619      	mov	r1, r3
 800513c:	481a      	ldr	r0, [pc, #104]	; (80051a8 <can_ISR+0x90>)
 800513e:	f7fc f88d 	bl	800125c <can1_get_msg>
		convert_raw_can_data(can_motors, rx_msg_header.StdId, rx_buffer);
 8005142:	697b      	ldr	r3, [r7, #20]
 8005144:	b29b      	uxth	r3, r3
 8005146:	f107 020c 	add.w	r2, r7, #12
 800514a:	4619      	mov	r1, r3
 800514c:	4817      	ldr	r0, [pc, #92]	; (80051ac <can_ISR+0x94>)
 800514e:	f000 f833 	bl	80051b8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8005152:	210e      	movs	r1, #14
 8005154:	6878      	ldr	r0, [r7, #4]
 8005156:	f00b f944 	bl	80103e2 <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 800515a:	e01e      	b.n	800519a <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	681b      	ldr	r3, [r3, #0]
 8005160:	4a13      	ldr	r2, [pc, #76]	; (80051b0 <can_ISR+0x98>)
 8005162:	4293      	cmp	r3, r2
 8005164:	d119      	bne.n	800519a <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8005166:	2170      	movs	r1, #112	; 0x70
 8005168:	6878      	ldr	r0, [r7, #4]
 800516a:	f00b f960 	bl	801042e <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 800516e:	f107 020c 	add.w	r2, r7, #12
 8005172:	f107 0314 	add.w	r3, r7, #20
 8005176:	4619      	mov	r1, r3
 8005178:	480e      	ldr	r0, [pc, #56]	; (80051b4 <can_ISR+0x9c>)
 800517a:	f7fc f880 	bl	800127e <can2_get_msg>
		convert_raw_can_data(can_motors, rx_msg_header.StdId + 12, rx_buffer);
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	b29b      	uxth	r3, r3
 8005182:	330c      	adds	r3, #12
 8005184:	b29b      	uxth	r3, r3
 8005186:	f107 020c 	add.w	r2, r7, #12
 800518a:	4619      	mov	r1, r3
 800518c:	4807      	ldr	r0, [pc, #28]	; (80051ac <can_ISR+0x94>)
 800518e:	f000 f813 	bl	80051b8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8005192:	2170      	movs	r1, #112	; 0x70
 8005194:	6878      	ldr	r0, [r7, #4]
 8005196:	f00b f924 	bl	80103e2 <HAL_CAN_ActivateNotification>
}
 800519a:	bf00      	nop
 800519c:	3730      	adds	r7, #48	; 0x30
 800519e:	46bd      	mov	sp, r7
 80051a0:	bd80      	pop	{r7, pc}
 80051a2:	bf00      	nop
 80051a4:	40006400 	.word	0x40006400
 80051a8:	20000434 	.word	0x20000434
 80051ac:	200018a8 	.word	0x200018a8
 80051b0:	40006800 	.word	0x40006800
 80051b4:	2000045c 	.word	0x2000045c

080051b8 <convert_raw_can_data>:
 * in the struct for the motor.
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id, uint8_t *rx_buffer) {
 80051b8:	b580      	push	{r7, lr}
 80051ba:	b08a      	sub	sp, #40	; 0x28
 80051bc:	af00      	add	r7, sp, #0
 80051be:	60f8      	str	r0, [r7, #12]
 80051c0:	460b      	mov	r3, r1
 80051c2:	607a      	str	r2, [r7, #4]
 80051c4:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 80051c6:	897b      	ldrh	r3, [r7, #10]
 80051c8:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 80051cc:	847b      	strh	r3, [r7, #34]	; 0x22

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24)
 80051ce:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80051d0:	2b18      	cmp	r3, #24
 80051d2:	f200 8160 	bhi.w	8005496 <convert_raw_can_data+0x2de>
	{
		return;
	}
	motor_data_t* curr_motor = &can_motor_data[idnum];
 80051d6:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80051d8:	4613      	mov	r3, r2
 80051da:	011b      	lsls	r3, r3, #4
 80051dc:	1a9b      	subs	r3, r3, r2
 80051de:	011b      	lsls	r3, r3, #4
 80051e0:	461a      	mov	r2, r3
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	4413      	add	r3, r2
 80051e6:	61fb      	str	r3, [r7, #28]
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 80051e8:	69fb      	ldr	r3, [r7, #28]
 80051ea:	789b      	ldrb	r3, [r3, #2]
 80051ec:	2b00      	cmp	r3, #0
 80051ee:	f000 814f 	beq.w	8005490 <convert_raw_can_data+0x2d8>
		//convert the raw data back into the respective values
		curr_motor->id 				= motor_id;
 80051f2:	69fb      	ldr	r3, [r7, #28]
 80051f4:	897a      	ldrh	r2, [r7, #10]
 80051f6:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	781b      	ldrb	r3, [r3, #0]
 80051fc:	021b      	lsls	r3, r3, #8
 80051fe:	b21a      	sxth	r2, r3
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	3301      	adds	r3, #1
 8005204:	781b      	ldrb	r3, [r3, #0]
 8005206:	b21b      	sxth	r3, r3
 8005208:	4313      	orrs	r3, r2
 800520a:	b21a      	sxth	r2, r3
 800520c:	69fb      	ldr	r3, [r7, #28]
 800520e:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm						=(rx_buffer[2] << 8) | rx_buffer[3];
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	3302      	adds	r3, #2
 8005214:	781b      	ldrb	r3, [r3, #0]
 8005216:	021b      	lsls	r3, r3, #8
 8005218:	b21a      	sxth	r2, r3
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	3303      	adds	r3, #3
 800521e:	781b      	ldrb	r3, [r3, #0]
 8005220:	b21b      	sxth	r3, r3
 8005222:	4313      	orrs	r3, r2
 8005224:	833b      	strh	r3, [r7, #24]
		curr_motor->raw_data.rpm 		= curr_motor->raw_data.rpm * SPEED_LPF + temp_rpm * (1-SPEED_LPF);
 8005226:	69fb      	ldr	r3, [r7, #28]
 8005228:	8b3a      	ldrh	r2, [r7, #24]
 800522a:	811a      	strh	r2, [r3, #8]
		curr_motor->raw_data.torque 	= (rx_buffer[4] << 8) | rx_buffer[5];
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	3304      	adds	r3, #4
 8005230:	781b      	ldrb	r3, [r3, #0]
 8005232:	021b      	lsls	r3, r3, #8
 8005234:	b21a      	sxth	r2, r3
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	3305      	adds	r3, #5
 800523a:	781b      	ldrb	r3, [r3, #0]
 800523c:	b21b      	sxth	r3, r3
 800523e:	4313      	orrs	r3, r2
 8005240:	b21a      	sxth	r2, r3
 8005242:	69fb      	ldr	r3, [r7, #28]
 8005244:	815a      	strh	r2, [r3, #10]
		curr_motor->raw_data.temp 	= (rx_buffer[6]);
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	799a      	ldrb	r2, [r3, #6]
 800524a:	69fb      	ldr	r3, [r7, #28]
 800524c:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] 		= curr_motor->last_time[0];
 800524e:	69fb      	ldr	r3, [r7, #28]
 8005250:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8005254:	69fb      	ldr	r3, [r7, #28]
 8005256:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
		curr_motor->last_time[0]	 	= get_microseconds();
 800525a:	f7fd f809 	bl	8002270 <get_microseconds>
 800525e:	4602      	mov	r2, r0
 8005260:	69fb      	ldr	r3, [r7, #28]
 8005262:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4

		float rds_passed = (float)(curr_motor->raw_data.angle[0] - curr_motor->raw_data.angle[1]) /8192;
 8005266:	69fb      	ldr	r3, [r7, #28]
 8005268:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800526c:	461a      	mov	r2, r3
 800526e:	69fb      	ldr	r3, [r7, #28]
 8005270:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8005274:	1ad3      	subs	r3, r2, r3
 8005276:	ee07 3a90 	vmov	s15, r3
 800527a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800527e:	eddf 6a88 	vldr	s13, [pc, #544]	; 80054a0 <convert_raw_can_data+0x2e8>
 8005282:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005286:	edc7 7a05 	vstr	s15, [r7, #20]
		curr_motor->angle_data.hires_rpm = (rds_passed * TIMER_FREQ
 800528a:	edd7 7a05 	vldr	s15, [r7, #20]
 800528e:	ed9f 7a85 	vldr	s14, [pc, #532]	; 80054a4 <convert_raw_can_data+0x2ec>
 8005292:	ee67 6a87 	vmul.f32	s13, s15, s14
				/ curr_motor->last_time[0] - curr_motor->last_time[1]) * 60;
 8005296:	69fb      	ldr	r3, [r7, #28]
 8005298:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800529c:	ee07 3a90 	vmov	s15, r3
 80052a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80052a4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80052a8:	69fb      	ldr	r3, [r7, #28]
 80052aa:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80052ae:	ee07 3a90 	vmov	s15, r3
 80052b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80052b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80052ba:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 80054a8 <convert_raw_can_data+0x2f0>
 80052be:	ee67 7a87 	vmul.f32	s15, s15, s14
		curr_motor->angle_data.hires_rpm = (rds_passed * TIMER_FREQ
 80052c2:	69fb      	ldr	r3, [r7, #28]
 80052c4:	edc3 7a36 	vstr	s15, [r3, #216]	; 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 80052c8:	69fb      	ldr	r3, [r7, #28]
 80052ca:	789b      	ldrb	r3, [r3, #2]
 80052cc:	3b01      	subs	r3, #1
 80052ce:	2b08      	cmp	r3, #8
 80052d0:	d84e      	bhi.n	8005370 <convert_raw_can_data+0x1b8>
 80052d2:	a201      	add	r2, pc, #4	; (adr r2, 80052d8 <convert_raw_can_data+0x120>)
 80052d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052d8:	080052fd 	.word	0x080052fd
 80052dc:	0800530f 	.word	0x0800530f
 80052e0:	0800530f 	.word	0x0800530f
 80052e4:	08005371 	.word	0x08005371
 80052e8:	08005335 	.word	0x08005335
 80052ec:	08005335 	.word	0x08005335
 80052f0:	0800534b 	.word	0x0800534b
 80052f4:	0800534b 	.word	0x0800534b
 80052f8:	0800534b 	.word	0x0800534b
		case TYPE_GM6020:
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80052fc:	69fb      	ldr	r3, [r7, #28]
 80052fe:	1d1a      	adds	r2, r3, #4
 8005300:	69fb      	ldr	r3, [r7, #28]
 8005302:	3398      	adds	r3, #152	; 0x98
 8005304:	4619      	mov	r1, r3
 8005306:	4610      	mov	r0, r2
 8005308:	f000 f8d8 	bl	80054bc <angle_offset>
			break;
 800530c:	e031      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800530e:	69fb      	ldr	r3, [r7, #28]
 8005310:	1d18      	adds	r0, r3, #4
 8005312:	69fb      	ldr	r3, [r7, #28]
 8005314:	f103 0198 	add.w	r1, r3, #152	; 0x98
								curr_motor->last_time);
 8005318:	69fb      	ldr	r3, [r7, #28]
 800531a:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800531c:	461a      	mov	r2, r3
 800531e:	f000 f989 	bl	8005634 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005322:	69fb      	ldr	r3, [r7, #28]
 8005324:	1d1a      	adds	r2, r3, #4
 8005326:	69fb      	ldr	r3, [r7, #28]
 8005328:	3398      	adds	r3, #152	; 0x98
 800532a:	4619      	mov	r1, r3
 800532c:	4610      	mov	r0, r2
 800532e:	f000 f8c5 	bl	80054bc <angle_offset>
			break;
 8005332:	e01e      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006_STEPS:
		case TYPE_M3508_STEPS:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005334:	69fb      	ldr	r3, [r7, #28]
 8005336:	1d18      	adds	r0, r3, #4
 8005338:	69fb      	ldr	r3, [r7, #28]
 800533a:	f103 0198 	add.w	r1, r3, #152	; 0x98
					curr_motor->last_time);
 800533e:	69fb      	ldr	r3, [r7, #28]
 8005340:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005342:	461a      	mov	r2, r3
 8005344:	f000 f976 	bl	8005634 <motor_calc_odometry>
			break;
 8005348:	e013      	b.n	8005372 <convert_raw_can_data+0x1ba>
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800534a:	69fb      	ldr	r3, [r7, #28]
 800534c:	1d18      	adds	r0, r3, #4
 800534e:	69fb      	ldr	r3, [r7, #28]
 8005350:	f103 0198 	add.w	r1, r3, #152	; 0x98
					curr_motor->last_time);
 8005354:	69fb      	ldr	r3, [r7, #28]
 8005356:	33e4      	adds	r3, #228	; 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005358:	461a      	mov	r2, r3
 800535a:	f000 f96b 	bl	8005634 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 800535e:	69fb      	ldr	r3, [r7, #28]
 8005360:	1d1a      	adds	r2, r3, #4
 8005362:	69fb      	ldr	r3, [r7, #28]
 8005364:	3398      	adds	r3, #152	; 0x98
 8005366:	4619      	mov	r1, r3
 8005368:	4610      	mov	r0, r2
 800536a:	f000 f8a7 	bl	80054bc <angle_offset>
			break;
 800536e:	e000      	b.n	8005372 <convert_raw_can_data+0x1ba>
		default:
			break;
 8005370:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 8005372:	2300      	movs	r3, #0
 8005374:	613b      	str	r3, [r7, #16]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8005376:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8005378:	3301      	adds	r3, #1
 800537a:	3b01      	subs	r3, #1
 800537c:	2b16      	cmp	r3, #22
 800537e:	d877      	bhi.n	8005470 <convert_raw_can_data+0x2b8>
 8005380:	a201      	add	r2, pc, #4	; (adr r2, 8005388 <convert_raw_can_data+0x1d0>)
 8005382:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005386:	bf00      	nop
 8005388:	080053e5 	.word	0x080053e5
 800538c:	080053f9 	.word	0x080053f9
 8005390:	08005471 	.word	0x08005471
 8005394:	08005471 	.word	0x08005471
 8005398:	0800545d 	.word	0x0800545d
 800539c:	08005471 	.word	0x08005471
 80053a0:	08005471 	.word	0x08005471
 80053a4:	08005449 	.word	0x08005449
 80053a8:	08005471 	.word	0x08005471
 80053ac:	08005471 	.word	0x08005471
 80053b0:	08005471 	.word	0x08005471
 80053b4:	08005471 	.word	0x08005471
 80053b8:	08005471 	.word	0x08005471
 80053bc:	08005471 	.word	0x08005471
 80053c0:	08005471 	.word	0x08005471
 80053c4:	08005471 	.word	0x08005471
 80053c8:	08005471 	.word	0x08005471
 80053cc:	08005435 	.word	0x08005435
 80053d0:	08005421 	.word	0x08005421
 80053d4:	08005471 	.word	0x08005471
 80053d8:	08005471 	.word	0x08005471
 80053dc:	08005471 	.word	0x08005471
 80053e0:	0800540d 	.word	0x0800540d
		#ifndef CHASSIS_MCU
				case Leftwheel_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 80053e4:	4b31      	ldr	r3, [pc, #196]	; (80054ac <convert_raw_can_data+0x2f4>)
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	f107 0210 	add.w	r2, r7, #16
 80053ec:	2108      	movs	r1, #8
 80053ee:	4618      	mov	r0, r3
 80053f0:	f016 fb50 	bl	801ba94 <xEventGroupSetBitsFromISR>
 80053f4:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 80053f6:	e03c      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case Rightwheel_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 80053f8:	4b2c      	ldr	r3, [pc, #176]	; (80054ac <convert_raw_can_data+0x2f4>)
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	f107 0210 	add.w	r2, r7, #16
 8005400:	2104      	movs	r1, #4
 8005402:	4618      	mov	r0, r3
 8005404:	f016 fb46 	bl	801ba94 <xEventGroupSetBitsFromISR>
 8005408:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800540a:	e032      	b.n	8005472 <convert_raw_can_data+0x2ba>
//					xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
//							&xHigherPriorityTaskWoken);
//					break;
		#endif
				case LFRICTION_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 800540c:	4b28      	ldr	r3, [pc, #160]	; (80054b0 <convert_raw_can_data+0x2f8>)
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f107 0210 	add.w	r2, r7, #16
 8005414:	2102      	movs	r1, #2
 8005416:	4618      	mov	r0, r3
 8005418:	f016 fb3c 	bl	801ba94 <xEventGroupSetBitsFromISR>
 800541c:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800541e:	e028      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case RFRICTION_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 8005420:	4b23      	ldr	r3, [pc, #140]	; (80054b0 <convert_raw_can_data+0x2f8>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	f107 0210 	add.w	r2, r7, #16
 8005428:	2101      	movs	r1, #1
 800542a:	4618      	mov	r0, r3
 800542c:	f016 fb32 	bl	801ba94 <xEventGroupSetBitsFromISR>
 8005430:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 8005432:	e01e      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case FEEDER_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8005434:	4b1e      	ldr	r3, [pc, #120]	; (80054b0 <convert_raw_can_data+0x2f8>)
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	f107 0210 	add.w	r2, r7, #16
 800543c:	2104      	movs	r1, #4
 800543e:	4618      	mov	r0, r3
 8005440:	f016 fb28 	bl	801ba94 <xEventGroupSetBitsFromISR>
 8005444:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 8005446:	e014      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case L1_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 8005448:	4b1a      	ldr	r3, [pc, #104]	; (80054b4 <convert_raw_can_data+0x2fc>)
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	f107 0210 	add.w	r2, r7, #16
 8005450:	2101      	movs	r1, #1
 8005452:	4618      	mov	r0, r3
 8005454:	f016 fb1e 	bl	801ba94 <xEventGroupSetBitsFromISR>
 8005458:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800545a:	e00a      	b.n	8005472 <convert_raw_can_data+0x2ba>
				case R1_MOTOR_ID:
					xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 800545c:	4b15      	ldr	r3, [pc, #84]	; (80054b4 <convert_raw_can_data+0x2fc>)
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	f107 0210 	add.w	r2, r7, #16
 8005464:	2102      	movs	r1, #2
 8005466:	4618      	mov	r0, r3
 8005468:	f016 fb14 	bl	801ba94 <xEventGroupSetBitsFromISR>
 800546c:	6278      	str	r0, [r7, #36]	; 0x24
							&xHigherPriorityTaskWoken);
					break;
 800546e:	e000      	b.n	8005472 <convert_raw_can_data+0x2ba>
				default:
					idnum = idnum;
					//error handler
					break;
 8005470:	bf00      	nop
				}

				//switches tasks if a higher priority task is ready.
				//required because the function is in an ISR
				if (xResult != pdFAIL) {
 8005472:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005474:	2b00      	cmp	r3, #0
 8005476:	d00f      	beq.n	8005498 <convert_raw_can_data+0x2e0>
					portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8005478:	693b      	ldr	r3, [r7, #16]
 800547a:	2b00      	cmp	r3, #0
 800547c:	d00c      	beq.n	8005498 <convert_raw_can_data+0x2e0>
 800547e:	4b0e      	ldr	r3, [pc, #56]	; (80054b8 <convert_raw_can_data+0x300>)
 8005480:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005484:	601a      	str	r2, [r3, #0]
 8005486:	f3bf 8f4f 	dsb	sy
 800548a:	f3bf 8f6f 	isb	sy
 800548e:	e003      	b.n	8005498 <convert_raw_can_data+0x2e0>
				}
			} else {
				//this is a useless statement so that it is possible to set a breakpoint here lol
				uint8_t stopper = 0;
 8005490:	2300      	movs	r3, #0
 8005492:	76fb      	strb	r3, [r7, #27]
 8005494:	e000      	b.n	8005498 <convert_raw_can_data+0x2e0>
		return;
 8005496:	bf00      	nop
				//error handler
		}
}
 8005498:	3728      	adds	r7, #40	; 0x28
 800549a:	46bd      	mov	sp, r7
 800549c:	bd80      	pop	{r7, pc}
 800549e:	bf00      	nop
 80054a0:	46000000 	.word	0x46000000
 80054a4:	461c4000 	.word	0x461c4000
 80054a8:	42700000 	.word	0x42700000
 80054ac:	200004cc 	.word	0x200004cc
 80054b0:	200004d0 	.word	0x200004d0
 80054b4:	200004c8 	.word	0x200004c8
 80054b8:	e000ed04 	.word	0xe000ed04

080054bc <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 80054bc:	b480      	push	{r7}
 80054be:	b085      	sub	sp, #20
 80054c0:	af00      	add	r7, sp, #0
 80054c2:	6078      	str	r0, [r7, #4]
 80054c4:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 80054c6:	2300      	movs	r3, #0
 80054c8:	60fb      	str	r3, [r7, #12]

	//if there's a gearbox, use the ticks after the gearbox.
	//make sure center angle is properly set with respect to the zero-ing angle
	//YOUR ROBOT MUST HAVE A WAY TO ZERO THIS ANGLE AND IMPLEMENT A ZEROING FUNCTION AT STARTUP
	//IF NOT IT WON'T WORK 							-wx
	if (angle_data->gearbox_ratio > 0) {
 80054ca:	683b      	ldr	r3, [r7, #0]
 80054cc:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80054d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054d8:	dd69      	ble.n	80055ae <angle_offset+0xf2>
		temp_ang = angle_data->ticks - angle_data->center_ang;
 80054da:	683b      	ldr	r3, [r7, #0]
 80054dc:	681a      	ldr	r2, [r3, #0]
 80054de:	683b      	ldr	r3, [r7, #0]
 80054e0:	685b      	ldr	r3, [r3, #4]
 80054e2:	1ad3      	subs	r3, r2, r3
 80054e4:	60fb      	str	r3, [r7, #12]
		if (temp_ang > (4096 * angle_data->gearbox_ratio)) {
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	ee07 3a90 	vmov	s15, r3
 80054ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80054f0:	683b      	ldr	r3, [r7, #0]
 80054f2:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80054f6:	eddf 6a4a 	vldr	s13, [pc, #296]	; 8005620 <angle_offset+0x164>
 80054fa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80054fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005506:	dd13      	ble.n	8005530 <angle_offset+0x74>
			temp_ang -= (8192 * angle_data->gearbox_ratio);
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	ee07 3a90 	vmov	s15, r3
 800550e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005512:	683b      	ldr	r3, [r7, #0]
 8005514:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005518:	eddf 6a42 	vldr	s13, [pc, #264]	; 8005624 <angle_offset+0x168>
 800551c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8005520:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005528:	ee17 3a90 	vmov	r3, s15
 800552c:	60fb      	str	r3, [r7, #12]
 800552e:	e023      	b.n	8005578 <angle_offset+0xbc>
		} else if (temp_ang < (-4096 * angle_data->gearbox_ratio)) {
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	ee07 3a90 	vmov	s15, r3
 8005536:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800553a:	683b      	ldr	r3, [r7, #0]
 800553c:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005540:	eddf 6a39 	vldr	s13, [pc, #228]	; 8005628 <angle_offset+0x16c>
 8005544:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8005548:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800554c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005550:	d512      	bpl.n	8005578 <angle_offset+0xbc>
			temp_ang += 8192 * angle_data->gearbox_ratio;
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	ee07 3a90 	vmov	s15, r3
 8005558:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800555c:	683b      	ldr	r3, [r7, #0]
 800555e:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8005562:	eddf 6a30 	vldr	s13, [pc, #192]	; 8005624 <angle_offset+0x168>
 8005566:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800556a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800556e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005572:	ee17 3a90 	vmov	r3, s15
 8005576:	60fb      	str	r3, [r7, #12]
		}
		angle_data->ticks = temp_ang;
 8005578:	683b      	ldr	r3, [r7, #0]
 800557a:	68fa      	ldr	r2, [r7, #12]
 800557c:	601a      	str	r2, [r3, #0]
		angle_data->adj_ang = (float) temp_ang * 2 *PI / (8192 * angle_data->gearbox_ratio);
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	ee07 3a90 	vmov	s15, r3
 8005584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005588:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800558c:	ed9f 7a27 	vldr	s14, [pc, #156]	; 800562c <angle_offset+0x170>
 8005590:	ee67 6a87 	vmul.f32	s13, s15, s14
 8005594:	683b      	ldr	r3, [r7, #0]
 8005596:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 800559a:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8005624 <angle_offset+0x168>
 800559e:	ee27 7a87 	vmul.f32	s14, s15, s14
 80055a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80055a6:	683b      	ldr	r3, [r7, #0]
 80055a8:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
		} else if (temp_ang < -4096) {
			temp_ang += 8192;
		}
		angle_data->adj_ang = (angle_data->adj_ang * ANGLE_LPF) + (float) (temp_ang * PI / 4096) * (1 - ANGLE_LPF); // convert to radians
	}
}
 80055ac:	e031      	b.n	8005612 <angle_offset+0x156>
		temp_ang = (int32_t) (motor_data->angle[0]) - angle_data->center_ang;
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80055b4:	461a      	mov	r2, r3
 80055b6:	683b      	ldr	r3, [r7, #0]
 80055b8:	685b      	ldr	r3, [r3, #4]
 80055ba:	1ad3      	subs	r3, r2, r3
 80055bc:	60fb      	str	r3, [r7, #12]
		if (temp_ang > 4096) {
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80055c4:	dd04      	ble.n	80055d0 <angle_offset+0x114>
			temp_ang -= 8192;
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80055cc:	60fb      	str	r3, [r7, #12]
 80055ce:	e007      	b.n	80055e0 <angle_offset+0x124>
		} else if (temp_ang < -4096) {
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	f513 5f80 	cmn.w	r3, #4096	; 0x1000
 80055d6:	da03      	bge.n	80055e0 <angle_offset+0x124>
			temp_ang += 8192;
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80055de:	60fb      	str	r3, [r7, #12]
		angle_data->adj_ang = (angle_data->adj_ang * ANGLE_LPF) + (float) (temp_ang * PI / 4096) * (1 - ANGLE_LPF); // convert to radians
 80055e0:	683b      	ldr	r3, [r7, #0]
 80055e2:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80055e6:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8005630 <angle_offset+0x174>
 80055ea:	ee27 7a87 	vmul.f32	s14, s15, s14
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	ee07 3a90 	vmov	s15, r3
 80055f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055f8:	eddf 6a0c 	vldr	s13, [pc, #48]	; 800562c <angle_offset+0x170>
 80055fc:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8005600:	ed9f 6a07 	vldr	s12, [pc, #28]	; 8005620 <angle_offset+0x164>
 8005604:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005608:	ee77 7a27 	vadd.f32	s15, s14, s15
 800560c:	683b      	ldr	r3, [r7, #0]
 800560e:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
}
 8005612:	bf00      	nop
 8005614:	3714      	adds	r7, #20
 8005616:	46bd      	mov	sp, r7
 8005618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800561c:	4770      	bx	lr
 800561e:	bf00      	nop
 8005620:	45800000 	.word	0x45800000
 8005624:	46000000 	.word	0x46000000
 8005628:	c5800000 	.word	0xc5800000
 800562c:	40490fdb 	.word	0x40490fdb
 8005630:	00000000 	.word	0x00000000

08005634 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data,
		angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8005634:	b480      	push	{r7}
 8005636:	b089      	sub	sp, #36	; 0x24
 8005638:	af00      	add	r7, sp, #0
 800563a:	60f8      	str	r0, [r7, #12]
 800563c:	60b9      	str	r1, [r7, #8]
 800563e:	607a      	str	r2, [r7, #4]
	int8_t int_round_passed = 0;
 8005640:	2300      	movs	r3, #0
 8005642:	77fb      	strb	r3, [r7, #31]
	//check to make sure it's not the same data point
	if (feedback_times[0] - feedback_times[1] >= 1) {
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	3304      	adds	r3, #4
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	429a      	cmp	r2, r3
 8005650:	d02e      	beq.n	80056b0 <motor_calc_odometry+0x7c>
		float rounds_passed = (((float)(feedback_times[0] - feedback_times[1]) * motor_data->rpm)/(60 * TIMER_FREQ));
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	681a      	ldr	r2, [r3, #0]
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	3304      	adds	r3, #4
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	ee07 3a90 	vmov	s15, r3
 8005662:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800566c:	ee07 3a90 	vmov	s15, r3
 8005670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005674:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005678:	eddf 6a5c 	vldr	s13, [pc, #368]	; 80057ec <motor_calc_odometry+0x1b8>
 800567c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005680:	edc7 7a06 	vstr	s15, [r7, #24]
		if (fabs(rounds_passed) >= 1) {
 8005684:	edd7 7a06 	vldr	s15, [r7, #24]
 8005688:	eef0 7ae7 	vabs.f32	s15, s15
 800568c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8005690:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005698:	db08      	blt.n	80056ac <motor_calc_odometry+0x78>
			int_round_passed = rounds_passed;
 800569a:	edd7 7a06 	vldr	s15, [r7, #24]
 800569e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056a2:	edc7 7a00 	vstr	s15, [r7]
 80056a6:	783b      	ldrb	r3, [r7, #0]
 80056a8:	77fb      	strb	r3, [r7, #31]
 80056aa:	e001      	b.n	80056b0 <motor_calc_odometry+0x7c>
		} else {
			int_round_passed = 0;
 80056ac:	2300      	movs	r3, #0
 80056ae:	77fb      	strb	r3, [r7, #31]
		}
	}
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80056b6:	b29a      	uxth	r2, r3
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80056be:	b29b      	uxth	r3, r3
 80056c0:	1ad3      	subs	r3, r2, r3
 80056c2:	b29b      	uxth	r3, r3
 80056c4:	83bb      	strh	r3, [r7, #28]
	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 80056c6:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 80056ca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80056ce:	dd05      	ble.n	80056dc <motor_calc_odometry+0xa8>
		abs_angle_diff -= 8192;
 80056d0:	8bbb      	ldrh	r3, [r7, #28]
 80056d2:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80056d6:	b29b      	uxth	r3, r3
 80056d8:	83bb      	strh	r3, [r7, #28]
 80056da:	e009      	b.n	80056f0 <motor_calc_odometry+0xbc>
	} else if (abs_angle_diff < -4096) {
 80056dc:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 80056e0:	f513 5f80 	cmn.w	r3, #4096	; 0x1000
 80056e4:	da04      	bge.n	80056f0 <motor_calc_odometry+0xbc>
		abs_angle_diff += 8192;
 80056e6:	8bbb      	ldrh	r3, [r7, #28]
 80056e8:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80056ec:	b29b      	uxth	r3, r3
 80056ee:	83bb      	strh	r3, [r7, #28]
	 } else {
	 abs_angle_diff = (8192-motor_data->angle[0]) - motor_data->angle[1];
	 }
	 }
	 */
	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 80056f0:	68bb      	ldr	r3, [r7, #8]
 80056f2:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 80056f6:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 80057f0 <motor_calc_odometry+0x1bc>
 80056fa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80056fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005702:	ee17 3a90 	vmov	r3, s15
 8005706:	82fb      	strh	r3, [r7, #22]
	angle_data->ticks += (int_round_passed * 8192) + abs_angle_diff;
 8005708:	68bb      	ldr	r3, [r7, #8]
 800570a:	681a      	ldr	r2, [r3, #0]
 800570c:	f997 301f 	ldrsb.w	r3, [r7, #31]
 8005710:	0359      	lsls	r1, r3, #13
 8005712:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 8005716:	440b      	add	r3, r1
 8005718:	441a      	add	r2, r3
 800571a:	68bb      	ldr	r3, [r7, #8]
 800571c:	601a      	str	r2, [r3, #0]
	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	ee07 3a90 	vmov	s15, r3
 8005726:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800572a:	68bb      	ldr	r3, [r7, #8]
 800572c:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8005730:	ee67 6a27 	vmul.f32	s13, s14, s15
 8005734:	8afb      	ldrh	r3, [r7, #22]
 8005736:	ee07 3a90 	vmov	s15, r3
 800573a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800573e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005742:	68bb      	ldr	r3, [r7, #8]
 8005744:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
	angle_data->adj_ang = (float) (angle_data->ticks % gear_ticks ) * 2*PI/gear_ticks;
 8005748:	68bb      	ldr	r3, [r7, #8]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	8afa      	ldrh	r2, [r7, #22]
 800574e:	fb93 f1f2 	sdiv	r1, r3, r2
 8005752:	fb01 f202 	mul.w	r2, r1, r2
 8005756:	1a9b      	subs	r3, r3, r2
 8005758:	ee07 3a90 	vmov	s15, r3
 800575c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005760:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005764:	ed9f 7a23 	vldr	s14, [pc, #140]	; 80057f4 <motor_calc_odometry+0x1c0>
 8005768:	ee67 6a87 	vmul.f32	s13, s15, s14
 800576c:	8afb      	ldrh	r3, [r7, #22]
 800576e:	ee07 3a90 	vmov	s15, r3
 8005772:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005776:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800577a:	68bb      	ldr	r3, [r7, #8]
 800577c:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	angle_data->adj_ang = (angle_data->adj_ang > PI) ? (angle_data->adj_ang - 2*PI) : (angle_data->adj_ang < -PI) ? angle_data->adj_ang+2*PI : angle_data->adj_ang;
 8005780:	68bb      	ldr	r3, [r7, #8]
 8005782:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8005786:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 80057f4 <motor_calc_odometry+0x1c0>
 800578a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800578e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005792:	dd07      	ble.n	80057a4 <motor_calc_odometry+0x170>
 8005794:	68bb      	ldr	r3, [r7, #8]
 8005796:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800579a:	ed9f 7a17 	vldr	s14, [pc, #92]	; 80057f8 <motor_calc_odometry+0x1c4>
 800579e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80057a2:	e014      	b.n	80057ce <motor_calc_odometry+0x19a>
 80057a4:	68bb      	ldr	r3, [r7, #8]
 80057a6:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057aa:	ed9f 7a14 	vldr	s14, [pc, #80]	; 80057fc <motor_calc_odometry+0x1c8>
 80057ae:	eef4 7ac7 	vcmpe.f32	s15, s14
 80057b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057b6:	d507      	bpl.n	80057c8 <motor_calc_odometry+0x194>
 80057b8:	68bb      	ldr	r3, [r7, #8]
 80057ba:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057be:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80057f8 <motor_calc_odometry+0x1c4>
 80057c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057c6:	e002      	b.n	80057ce <motor_calc_odometry+0x19a>
 80057c8:	68bb      	ldr	r3, [r7, #8]
 80057ca:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80057ce:	68bb      	ldr	r3, [r7, #8]
 80057d0:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	motor_data->angle[1] = motor_data->angle[0];
 80057d4:	68fb      	ldr	r3, [r7, #12]
 80057d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	805a      	strh	r2, [r3, #2]
}
 80057de:	bf00      	nop
 80057e0:	3724      	adds	r7, #36	; 0x24
 80057e2:	46bd      	mov	sp, r7
 80057e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e8:	4770      	bx	lr
 80057ea:	bf00      	nop
 80057ec:	49127c00 	.word	0x49127c00
 80057f0:	46000000 	.word	0x46000000
 80057f4:	40490fdb 	.word	0x40490fdb
 80057f8:	40c90fdb 	.word	0x40c90fdb
 80057fc:	c0490fdb 	.word	0xc0490fdb

08005800 <control_input_task>:
uint8_t safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8005800:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005804:	b088      	sub	sp, #32
 8005806:	af00      	add	r7, sp, #0
 8005808:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 800580a:	f000 f967 	bl	8005adc <control_reset>
	chassis_yaw_pid_init();
 800580e:	f000 fb61 	bl	8005ed4 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 8005812:	4b7b      	ldr	r3, [pc, #492]	; (8005a00 <control_input_task+0x200>)
 8005814:	2201      	movs	r2, #1
 8005816:	721a      	strb	r2, [r3, #8]
	aimbot_pid_init();
 8005818:	f000 fee0 	bl	80065dc <aimbot_pid_init>
	dbus_remote_start();
 800581c:	f7fb fe86 	bl	800152c <dbus_remote_start>
	gear_speed.curr_gear = 3;
 8005820:	4b78      	ldr	r3, [pc, #480]	; (8005a04 <control_input_task+0x204>)
 8005822:	2203      	movs	r2, #3
 8005824:	701a      	strb	r2, [r3, #0]
	gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005826:	4b77      	ldr	r3, [pc, #476]	; (8005a04 <control_input_task+0x204>)
 8005828:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800582c:	605a      	str	r2, [r3, #4]
	gear_speed.trans_mult = GEAR3_SPEED_MULT;
 800582e:	4b75      	ldr	r3, [pc, #468]	; (8005a04 <control_input_task+0x204>)
 8005830:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005834:	609a      	str	r2, [r3, #8]
	gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005836:	4b73      	ldr	r3, [pc, #460]	; (8005a04 <control_input_task+0x204>)
 8005838:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800583c:	60da      	str	r2, [r3, #12]
	safety_toggle = 1;
 800583e:	4b72      	ldr	r3, [pc, #456]	; (8005a08 <control_input_task+0x208>)
 8005840:	2201      	movs	r2, #1
 8005842:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 8005844:	2064      	movs	r0, #100	; 0x64
 8005846:	f017 f9d7 	bl	801cbf8 <vTaskDelay>
	uint8_t rc_check;
	while (fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50 || fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50){
 800584a:	e01a      	b.n	8005882 <control_input_task+0x82>
		uint8_t temp_msg;
		temp_msg = not_ok;
 800584c:	2302      	movs	r3, #2
 800584e:	75fb      	strb	r3, [r7, #23]
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005850:	4b6e      	ldr	r3, [pc, #440]	; (8005a0c <control_input_task+0x20c>)
 8005852:	6818      	ldr	r0, [r3, #0]
 8005854:	f107 0117 	add.w	r1, r7, #23
 8005858:	2300      	movs	r3, #0
 800585a:	2200      	movs	r2, #0
 800585c:	f016 fb20 	bl	801bea0 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8005860:	21c8      	movs	r1, #200	; 0xc8
 8005862:	2001      	movs	r0, #1
 8005864:	f017 ffd8 	bl	801d818 <ulTaskNotifyTake>
 8005868:	4603      	mov	r3, r0
 800586a:	77fb      	strb	r3, [r7, #31]
		HAL_UART_DMAStop(&DBUS_UART);
 800586c:	4868      	ldr	r0, [pc, #416]	; (8005a10 <control_input_task+0x210>)
 800586e:	f011 fac9 	bl	8016e04 <HAL_UART_DMAStop>
		dbus_remote_start();
 8005872:	f7fb fe5b 	bl	800152c <dbus_remote_start>
		if (rc_check){
 8005876:	7ffb      	ldrb	r3, [r7, #31]
 8005878:	2b00      	cmp	r3, #0
 800587a:	d002      	beq.n	8005882 <control_input_task+0x82>
			vTaskDelay(200);
 800587c:	20c8      	movs	r0, #200	; 0xc8
 800587e:	f017 f9bb 	bl	801cbf8 <vTaskDelay>
	while (fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50 || fabs(remote_cmd.left_x) > 50 || fabs(remote_cmd.right_x) > 50){
 8005882:	4b64      	ldr	r3, [pc, #400]	; (8005a14 <control_input_task+0x214>)
 8005884:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005888:	4618      	mov	r0, r3
 800588a:	f7fa fe4b 	bl	8000524 <__aeabi_i2d>
 800588e:	4602      	mov	r2, r0
 8005890:	460b      	mov	r3, r1
 8005892:	4690      	mov	r8, r2
 8005894:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 8005898:	f04f 0200 	mov.w	r2, #0
 800589c:	4b5e      	ldr	r3, [pc, #376]	; (8005a18 <control_input_task+0x218>)
 800589e:	4640      	mov	r0, r8
 80058a0:	4649      	mov	r1, r9
 80058a2:	f7fb f939 	bl	8000b18 <__aeabi_dcmpgt>
 80058a6:	4603      	mov	r3, r0
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d1cf      	bne.n	800584c <control_input_task+0x4c>
 80058ac:	4b59      	ldr	r3, [pc, #356]	; (8005a14 <control_input_task+0x214>)
 80058ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80058b2:	4618      	mov	r0, r3
 80058b4:	f7fa fe36 	bl	8000524 <__aeabi_i2d>
 80058b8:	4602      	mov	r2, r0
 80058ba:	460b      	mov	r3, r1
 80058bc:	4692      	mov	sl, r2
 80058be:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 80058c2:	f04f 0200 	mov.w	r2, #0
 80058c6:	4b54      	ldr	r3, [pc, #336]	; (8005a18 <control_input_task+0x218>)
 80058c8:	4650      	mov	r0, sl
 80058ca:	4659      	mov	r1, fp
 80058cc:	f7fb f924 	bl	8000b18 <__aeabi_dcmpgt>
 80058d0:	4603      	mov	r3, r0
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d1ba      	bne.n	800584c <control_input_task+0x4c>
 80058d6:	4b4f      	ldr	r3, [pc, #316]	; (8005a14 <control_input_task+0x214>)
 80058d8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80058dc:	4618      	mov	r0, r3
 80058de:	f7fa fe21 	bl	8000524 <__aeabi_i2d>
 80058e2:	4602      	mov	r2, r0
 80058e4:	460b      	mov	r3, r1
 80058e6:	603a      	str	r2, [r7, #0]
 80058e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80058ec:	607b      	str	r3, [r7, #4]
 80058ee:	f04f 0200 	mov.w	r2, #0
 80058f2:	4b49      	ldr	r3, [pc, #292]	; (8005a18 <control_input_task+0x218>)
 80058f4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80058f8:	f7fb f90e 	bl	8000b18 <__aeabi_dcmpgt>
 80058fc:	4603      	mov	r3, r0
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d1a4      	bne.n	800584c <control_input_task+0x4c>
 8005902:	4b44      	ldr	r3, [pc, #272]	; (8005a14 <control_input_task+0x214>)
 8005904:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005908:	4618      	mov	r0, r3
 800590a:	f7fa fe0b 	bl	8000524 <__aeabi_i2d>
 800590e:	4602      	mov	r2, r0
 8005910:	460b      	mov	r3, r1
 8005912:	4614      	mov	r4, r2
 8005914:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8005918:	f04f 0200 	mov.w	r2, #0
 800591c:	4b3e      	ldr	r3, [pc, #248]	; (8005a18 <control_input_task+0x218>)
 800591e:	4620      	mov	r0, r4
 8005920:	4629      	mov	r1, r5
 8005922:	f7fb f8f9 	bl	8000b18 <__aeabi_dcmpgt>
 8005926:	4603      	mov	r3, r0
 8005928:	2b00      	cmp	r3, #0
 800592a:	d18f      	bne.n	800584c <control_input_task+0x4c>
		}
	}
	safety_toggle = ARM_SWITCH;
 800592c:	4b36      	ldr	r3, [pc, #216]	; (8005a08 <control_input_task+0x208>)
 800592e:	2200      	movs	r2, #0
 8005930:	701a      	strb	r2, [r3, #0]


	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8005932:	21c8      	movs	r1, #200	; 0xc8
 8005934:	2001      	movs	r0, #1
 8005936:	f017 ff6f 	bl	801d818 <ulTaskNotifyTake>
 800593a:	4603      	mov	r3, r0
 800593c:	77fb      	strb	r3, [r7, #31]
		if (rc_check) {
 800593e:	7ffb      	ldrb	r3, [r7, #31]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d039      	beq.n	80059b8 <control_input_task+0x1b8>
			status_led(1, on_led);
 8005944:	2100      	movs	r1, #0
 8005946:	2001      	movs	r0, #1
 8005948:	f7fc fbba 	bl	80020c0 <status_led>
			start_time = xTaskGetTickCount();
 800594c:	f017 faa4 	bl	801ce98 <xTaskGetTickCount>
 8005950:	4603      	mov	r3, r0
 8005952:	61bb      	str	r3, [r7, #24]
			if (remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005954:	4b2f      	ldr	r3, [pc, #188]	; (8005a14 <control_input_task+0x214>)
 8005956:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800595a:	2b01      	cmp	r3, #1
 800595c:	d110      	bne.n	8005980 <control_input_task+0x180>
				laser_on();
 800595e:	f7fb fe89 	bl	8001674 <laser_on>
				control_mode_change(remote_cmd.side_dial);
 8005962:	4b2c      	ldr	r3, [pc, #176]	; (8005a14 <control_input_task+0x214>)
 8005964:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8005968:	4618      	mov	r0, r3
 800596a:	f000 f8ed 	bl	8005b48 <control_mode_change>
				safety_toggle = 0;
 800596e:	4b26      	ldr	r3, [pc, #152]	; (8005a08 <control_input_task+0x208>)
 8005970:	2200      	movs	r2, #0
 8005972:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 8005974:	4b29      	ldr	r3, [pc, #164]	; (8005a1c <control_input_task+0x21c>)
 8005976:	2200      	movs	r2, #0
 8005978:	701a      	strb	r2, [r3, #0]
				control_reset();
 800597a:	f000 f8af 	bl	8005adc <control_reset>
 800597e:	e037      	b.n	80059f0 <control_input_task+0x1f0>
			} else {

				switch (control_mode) {
 8005980:	4b27      	ldr	r3, [pc, #156]	; (8005a20 <control_input_task+0x220>)
 8005982:	781b      	ldrb	r3, [r3, #0]
 8005984:	2b01      	cmp	r3, #1
 8005986:	d002      	beq.n	800598e <control_input_task+0x18e>
 8005988:	2b02      	cmp	r3, #2
 800598a:	d008      	beq.n	800599e <control_input_task+0x19e>
					sbc_control_input();
					break;
#endif HAS_SBC

				default:
					break;
 800598c:	e00f      	b.n	80059ae <control_input_task+0x1ae>
					keyboard_gear_shifter(&gear_speed);
 800598e:	481d      	ldr	r0, [pc, #116]	; (8005a04 <control_input_task+0x204>)
 8005990:	f000 fac4 	bl	8005f1c <keyboard_gear_shifter>
					set_gear();
 8005994:	f000 fa20 	bl	8005dd8 <set_gear>
					keyboard_control_input();
 8005998:	f000 fab6 	bl	8005f08 <keyboard_control_input>
					break;
 800599c:	e007      	b.n	80059ae <control_input_task+0x1ae>
					remote_gear_shifter(&gear_speed);
 800599e:	4819      	ldr	r0, [pc, #100]	; (8005a04 <control_input_task+0x204>)
 80059a0:	f000 fca4 	bl	80062ec <remote_gear_shifter>
					set_gear();
 80059a4:	f000 fa18 	bl	8005dd8 <set_gear>
					remote_control_input();
 80059a8:	f000 fc96 	bl	80062d8 <remote_control_input>
					break;
 80059ac:	bf00      	nop

				}
				status_led(1, off_led);
 80059ae:	2101      	movs	r1, #1
 80059b0:	2001      	movs	r0, #1
 80059b2:	f7fc fb85 	bl	80020c0 <status_led>
 80059b6:	e01b      	b.n	80059f0 <control_input_task+0x1f0>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - remote_cmd.last_time > 100) {
 80059b8:	f009 fe74 	bl	800f6a4 <HAL_GetTick>
 80059bc:	4602      	mov	r2, r0
 80059be:	4b15      	ldr	r3, [pc, #84]	; (8005a14 <control_input_task+0x214>)
 80059c0:	6a1b      	ldr	r3, [r3, #32]
 80059c2:	1ad3      	subs	r3, r2, r3
 80059c4:	2b64      	cmp	r3, #100	; 0x64
 80059c6:	d909      	bls.n	80059dc <control_input_task+0x1dc>
				HAL_UART_DMAStop(&DBUS_UART);
 80059c8:	4811      	ldr	r0, [pc, #68]	; (8005a10 <control_input_task+0x210>)
 80059ca:	f011 fa1b 	bl	8016e04 <HAL_UART_DMAStop>
				dbus_remote_start();
 80059ce:	f7fb fdad 	bl	800152c <dbus_remote_start>
				remote_cmd.last_time = HAL_GetTick();
 80059d2:	f009 fe67 	bl	800f6a4 <HAL_GetTick>
 80059d6:	4603      	mov	r3, r0
 80059d8:	4a0e      	ldr	r2, [pc, #56]	; (8005a14 <control_input_task+0x214>)
 80059da:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 80059dc:	f007 fbf8 	bl	800d1d0 <kill_can>
			control_reset();
 80059e0:	f000 f87c 	bl	8005adc <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 80059e4:	4b0d      	ldr	r3, [pc, #52]	; (8005a1c <control_input_task+0x21c>)
 80059e6:	2200      	movs	r2, #0
 80059e8:	701a      	strb	r2, [r3, #0]
			safety_toggle = ARM_SWITCH;
 80059ea:	4b07      	ldr	r3, [pc, #28]	; (8005a08 <control_input_task+0x208>)
 80059ec:	2200      	movs	r2, #0
 80059ee:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 80059f0:	f107 0318 	add.w	r3, r7, #24
 80059f4:	2102      	movs	r1, #2
 80059f6:	4618      	mov	r0, r3
 80059f8:	f017 f880 	bl	801cafc <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80059fc:	e799      	b.n	8005932 <control_input_task+0x132>
 80059fe:	bf00      	nop
 8005a00:	20002f48 	.word	0x20002f48
 8005a04:	20002f84 	.word	0x20002f84
 8005a08:	20002f98 	.word	0x20002f98
 8005a0c:	200004e4 	.word	0x200004e4
 8005a10:	200016a0 	.word	0x200016a0
 8005a14:	20000358 	.word	0x20000358
 8005a18:	40490000 	.word	0x40490000
 8005a1c:	20002f99 	.word	0x20002f99
 8005a20:	20000008 	.word	0x20000008
 8005a24:	00000000 	.word	0x00000000

08005a28 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 8005a28:	b580      	push	{r7, lr}
 8005a2a:	af00      	add	r7, sp, #0
	speed_pid(0, can_motors[YAW_MOTOR_ID - 1].angle_data.adj_ang,
 8005a2c:	4b0e      	ldr	r3, [pc, #56]	; (8005a68 <chassis_center_yaw+0x40>)
 8005a2e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005a32:	f8d3 338c 	ldr.w	r3, [r3, #908]	; 0x38c
 8005a36:	4618      	mov	r0, r3
 8005a38:	f7fa fd86 	bl	8000548 <__aeabi_f2d>
 8005a3c:	4602      	mov	r2, r0
 8005a3e:	460b      	mov	r3, r1
 8005a40:	480a      	ldr	r0, [pc, #40]	; (8005a6c <chassis_center_yaw+0x44>)
 8005a42:	ec43 2b11 	vmov	d1, r2, r3
 8005a46:	ed9f 0b06 	vldr	d0, [pc, #24]	; 8005a60 <chassis_center_yaw+0x38>
 8005a4a:	f007 f8ad 	bl	800cba8 <speed_pid>
			&yaw_pid_data);
	return yaw_pid_data.output;
 8005a4e:	4b07      	ldr	r3, [pc, #28]	; (8005a6c <chassis_center_yaw+0x44>)
 8005a50:	6a1b      	ldr	r3, [r3, #32]
 8005a52:	ee07 3a90 	vmov	s15, r3
}
 8005a56:	eeb0 0a67 	vmov.f32	s0, s15
 8005a5a:	bd80      	pop	{r7, pc}
 8005a5c:	f3af 8000 	nop.w
	...
 8005a68:	200018a8 	.word	0x200018a8
 8005a6c:	20002f54 	.word	0x20002f54

08005a70 <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 8005a70:	b480      	push	{r7}
 8005a72:	b085      	sub	sp, #20
 8005a74:	af00      	add	r7, sp, #0
 8005a76:	ed87 0a03 	vstr	s0, [r7, #12]
 8005a7a:	edc7 0a02 	vstr	s1, [r7, #8]
 8005a7e:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 8005a82:	4b09      	ldr	r3, [pc, #36]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a84:	2201      	movs	r2, #1
 8005a86:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 8005a88:	4a07      	ldr	r2, [pc, #28]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a8a:	68bb      	ldr	r3, [r7, #8]
 8005a8c:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 8005a8e:	4a06      	ldr	r2, [pc, #24]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = yaw;
 8005a94:	4a04      	ldr	r2, [pc, #16]	; (8005aa8 <chassis_set_ctrl+0x38>)
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	6093      	str	r3, [r2, #8]
}
 8005a9a:	bf00      	nop
 8005a9c:	3714      	adds	r7, #20
 8005a9e:	46bd      	mov	sp, r7
 8005aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aa4:	4770      	bx	lr
 8005aa6:	bf00      	nop
 8005aa8:	20002f28 	.word	0x20002f28

08005aac <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 8005aac:	b480      	push	{r7}
 8005aae:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 8005ab0:	4b09      	ldr	r3, [pc, #36]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ab2:	2200      	movs	r2, #0
 8005ab4:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 8005ab6:	4b08      	ldr	r3, [pc, #32]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ab8:	f04f 0200 	mov.w	r2, #0
 8005abc:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005abe:	4b06      	ldr	r3, [pc, #24]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ac0:	f04f 0200 	mov.w	r2, #0
 8005ac4:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005ac6:	4b04      	ldr	r3, [pc, #16]	; (8005ad8 <chassis_kill_ctrl+0x2c>)
 8005ac8:	f04f 0200 	mov.w	r2, #0
 8005acc:	609a      	str	r2, [r3, #8]
}
 8005ace:	bf00      	nop
 8005ad0:	46bd      	mov	sp, r7
 8005ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad6:	4770      	bx	lr
 8005ad8:	20002f28 	.word	0x20002f28

08005adc <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 8005adc:	b580      	push	{r7, lr}
 8005ade:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 8005ae0:	4b14      	ldr	r3, [pc, #80]	; (8005b34 <control_reset+0x58>)
 8005ae2:	f04f 0200 	mov.w	r2, #0
 8005ae6:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005ae8:	4b12      	ldr	r3, [pc, #72]	; (8005b34 <control_reset+0x58>)
 8005aea:	f04f 0200 	mov.w	r2, #0
 8005aee:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005af0:	4b10      	ldr	r3, [pc, #64]	; (8005b34 <control_reset+0x58>)
 8005af2:	f04f 0200 	mov.w	r2, #0
 8005af6:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 8005af8:	4b0e      	ldr	r3, [pc, #56]	; (8005b34 <control_reset+0x58>)
 8005afa:	2200      	movs	r2, #0
 8005afc:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 8005afe:	4b0e      	ldr	r3, [pc, #56]	; (8005b38 <control_reset+0x5c>)
 8005b00:	f04f 0200 	mov.w	r2, #0
 8005b04:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 8005b06:	4b0d      	ldr	r3, [pc, #52]	; (8005b3c <control_reset+0x60>)
 8005b08:	689b      	ldr	r3, [r3, #8]
 8005b0a:	4a0b      	ldr	r2, [pc, #44]	; (8005b38 <control_reset+0x5c>)
 8005b0c:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 8005b0e:	4b0a      	ldr	r3, [pc, #40]	; (8005b38 <control_reset+0x5c>)
 8005b10:	2200      	movs	r2, #0
 8005b12:	725a      	strb	r2, [r3, #9]
	launcher_ctrl_data.gun_feeding_speed = 0;
 8005b14:	4b0a      	ldr	r3, [pc, #40]	; (8005b40 <control_reset+0x64>)
 8005b16:	2200      	movs	r2, #0
 8005b18:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 8005b1a:	4b09      	ldr	r3, [pc, #36]	; (8005b40 <control_reset+0x64>)
 8005b1c:	2200      	movs	r2, #0
 8005b1e:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 8005b20:	4b07      	ldr	r3, [pc, #28]	; (8005b40 <control_reset+0x64>)
 8005b22:	2200      	movs	r2, #0
 8005b24:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 8005b26:	4b07      	ldr	r3, [pc, #28]	; (8005b44 <control_reset+0x68>)
 8005b28:	2200      	movs	r2, #0
 8005b2a:	601a      	str	r2, [r3, #0]
	laser_off();
 8005b2c:	f7fb fdae 	bl	800168c <laser_off>
}
 8005b30:	bf00      	nop
 8005b32:	bd80      	pop	{r7, pc}
 8005b34:	20002f28 	.word	0x20002f28
 8005b38:	20002f48 	.word	0x20002f48
 8005b3c:	2000327c 	.word	0x2000327c
 8005b40:	20002f40 	.word	0x20002f40
 8005b44:	20002f94 	.word	0x20002f94

08005b48 <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 8005b48:	b580      	push	{r7, lr}
 8005b4a:	b084      	sub	sp, #16
 8005b4c:	af00      	add	r7, sp, #0
 8005b4e:	4603      	mov	r3, r0
 8005b50:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (remote_cmd.left_switch == ge_LSW_CONFIG) {
 8005b52:	4b6f      	ldr	r3, [pc, #444]	; (8005d10 <control_mode_change+0x1c8>)
 8005b54:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005b58:	2b03      	cmp	r3, #3
 8005b5a:	d133      	bne.n	8005bc4 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 8005b5c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005b60:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005b64:	dc04      	bgt.n	8005b70 <control_mode_change+0x28>
 8005b66:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005b6a:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005b6e:	da23      	bge.n	8005bb8 <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005b70:	f009 fd98 	bl	800f6a4 <HAL_GetTick>
 8005b74:	4602      	mov	r2, r0
 8005b76:	4b67      	ldr	r3, [pc, #412]	; (8005d14 <control_mode_change+0x1cc>)
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	1ad3      	subs	r3, r2, r3
 8005b7c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005b80:	d918      	bls.n	8005bb4 <control_mode_change+0x6c>
				switch (control_mode) {
 8005b82:	4b65      	ldr	r3, [pc, #404]	; (8005d18 <control_mode_change+0x1d0>)
 8005b84:	781b      	ldrb	r3, [r3, #0]
 8005b86:	3b01      	subs	r3, #1
 8005b88:	2b01      	cmp	r3, #1
 8005b8a:	d80d      	bhi.n	8005ba8 <control_mode_change+0x60>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 8005b8c:	4b62      	ldr	r3, [pc, #392]	; (8005d18 <control_mode_change+0x1d0>)
 8005b8e:	2203      	movs	r2, #3
 8005b90:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 8005b92:	2305      	movs	r3, #5
 8005b94:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005b96:	4b61      	ldr	r3, [pc, #388]	; (8005d1c <control_mode_change+0x1d4>)
 8005b98:	6818      	ldr	r0, [r3, #0]
 8005b9a:	f107 010f 	add.w	r1, r7, #15
 8005b9e:	2300      	movs	r3, #0
 8005ba0:	2200      	movs	r2, #0
 8005ba2:	f016 f97d 	bl	801bea0 <xQueueGenericSend>
					break;
 8005ba6:	e006      	b.n	8005bb6 <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 8005ba8:	f009 fd7c 	bl	800f6a4 <HAL_GetTick>
 8005bac:	4603      	mov	r3, r0
 8005bae:	4a59      	ldr	r2, [pc, #356]	; (8005d14 <control_mode_change+0x1cc>)
 8005bb0:	6013      	str	r3, [r2, #0]
					break;
 8005bb2:	e000      	b.n	8005bb6 <control_mode_change+0x6e>
				}
			}
 8005bb4:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005bb6:	e0a7      	b.n	8005d08 <control_mode_change+0x1c0>
		} else {
			last_trig_time = HAL_GetTick();
 8005bb8:	f009 fd74 	bl	800f6a4 <HAL_GetTick>
 8005bbc:	4603      	mov	r3, r0
 8005bbe:	4a55      	ldr	r2, [pc, #340]	; (8005d14 <control_mode_change+0x1cc>)
 8005bc0:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 8005bc2:	e0a1      	b.n	8005d08 <control_mode_change+0x1c0>
		switch (control_mode) {
 8005bc4:	4b54      	ldr	r3, [pc, #336]	; (8005d18 <control_mode_change+0x1d0>)
 8005bc6:	781b      	ldrb	r3, [r3, #0]
 8005bc8:	2b03      	cmp	r3, #3
 8005bca:	d052      	beq.n	8005c72 <control_mode_change+0x12a>
 8005bcc:	2b03      	cmp	r3, #3
 8005bce:	f300 8094 	bgt.w	8005cfa <control_mode_change+0x1b2>
 8005bd2:	2b01      	cmp	r3, #1
 8005bd4:	d002      	beq.n	8005bdc <control_mode_change+0x94>
 8005bd6:	2b02      	cmp	r3, #2
 8005bd8:	d026      	beq.n	8005c28 <control_mode_change+0xe0>
			break;
 8005bda:	e08e      	b.n	8005cfa <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 8005bdc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005be0:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005be4:	da1a      	bge.n	8005c1c <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005be6:	f009 fd5d 	bl	800f6a4 <HAL_GetTick>
 8005bea:	4602      	mov	r2, r0
 8005bec:	4b49      	ldr	r3, [pc, #292]	; (8005d14 <control_mode_change+0x1cc>)
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	1ad3      	subs	r3, r2, r3
 8005bf2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005bf6:	f240 8082 	bls.w	8005cfe <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 8005bfa:	4b47      	ldr	r3, [pc, #284]	; (8005d18 <control_mode_change+0x1d0>)
 8005bfc:	2202      	movs	r2, #2
 8005bfe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005c00:	2304      	movs	r3, #4
 8005c02:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c04:	4b45      	ldr	r3, [pc, #276]	; (8005d1c <control_mode_change+0x1d4>)
 8005c06:	6818      	ldr	r0, [r3, #0]
 8005c08:	f107 010f 	add.w	r1, r7, #15
 8005c0c:	2300      	movs	r3, #0
 8005c0e:	2200      	movs	r2, #0
 8005c10:	f016 f946 	bl	801bea0 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c14:	4b42      	ldr	r3, [pc, #264]	; (8005d20 <control_mode_change+0x1d8>)
 8005c16:	2200      	movs	r2, #0
 8005c18:	701a      	strb	r2, [r3, #0]
			break;
 8005c1a:	e070      	b.n	8005cfe <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8005c1c:	f009 fd42 	bl	800f6a4 <HAL_GetTick>
 8005c20:	4603      	mov	r3, r0
 8005c22:	4a3c      	ldr	r2, [pc, #240]	; (8005d14 <control_mode_change+0x1cc>)
 8005c24:	6013      	str	r3, [r2, #0]
			break;
 8005c26:	e06a      	b.n	8005cfe <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 8005c28:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005c2c:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005c30:	dd19      	ble.n	8005c66 <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005c32:	f009 fd37 	bl	800f6a4 <HAL_GetTick>
 8005c36:	4602      	mov	r2, r0
 8005c38:	4b36      	ldr	r3, [pc, #216]	; (8005d14 <control_mode_change+0x1cc>)
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	1ad3      	subs	r3, r2, r3
 8005c3e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c42:	d95e      	bls.n	8005d02 <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 8005c44:	4b34      	ldr	r3, [pc, #208]	; (8005d18 <control_mode_change+0x1d0>)
 8005c46:	2201      	movs	r2, #1
 8005c48:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005c4a:	2303      	movs	r3, #3
 8005c4c:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c4e:	4b34      	ldr	r3, [pc, #208]	; (8005d20 <control_mode_change+0x1d8>)
 8005c50:	2200      	movs	r2, #0
 8005c52:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c54:	4b31      	ldr	r3, [pc, #196]	; (8005d1c <control_mode_change+0x1d4>)
 8005c56:	6818      	ldr	r0, [r3, #0]
 8005c58:	f107 010f 	add.w	r1, r7, #15
 8005c5c:	2300      	movs	r3, #0
 8005c5e:	2200      	movs	r2, #0
 8005c60:	f016 f91e 	bl	801bea0 <xQueueGenericSend>
			break;
 8005c64:	e04d      	b.n	8005d02 <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 8005c66:	f009 fd1d 	bl	800f6a4 <HAL_GetTick>
 8005c6a:	4603      	mov	r3, r0
 8005c6c:	4a29      	ldr	r2, [pc, #164]	; (8005d14 <control_mode_change+0x1cc>)
 8005c6e:	6013      	str	r3, [r2, #0]
			break;
 8005c70:	e047      	b.n	8005d02 <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 8005c72:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005c76:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 8005c7a:	da19      	bge.n	8005cb0 <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005c7c:	f009 fd12 	bl	800f6a4 <HAL_GetTick>
 8005c80:	4602      	mov	r2, r0
 8005c82:	4b24      	ldr	r3, [pc, #144]	; (8005d14 <control_mode_change+0x1cc>)
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	1ad3      	subs	r3, r2, r3
 8005c88:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c8c:	d93b      	bls.n	8005d06 <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 8005c8e:	4b22      	ldr	r3, [pc, #136]	; (8005d18 <control_mode_change+0x1d0>)
 8005c90:	2202      	movs	r2, #2
 8005c92:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005c94:	2304      	movs	r3, #4
 8005c96:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005c98:	4b21      	ldr	r3, [pc, #132]	; (8005d20 <control_mode_change+0x1d8>)
 8005c9a:	2200      	movs	r2, #0
 8005c9c:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005c9e:	4b1f      	ldr	r3, [pc, #124]	; (8005d1c <control_mode_change+0x1d4>)
 8005ca0:	6818      	ldr	r0, [r3, #0]
 8005ca2:	f107 010f 	add.w	r1, r7, #15
 8005ca6:	2300      	movs	r3, #0
 8005ca8:	2200      	movs	r2, #0
 8005caa:	f016 f8f9 	bl	801bea0 <xQueueGenericSend>
			break;
 8005cae:	e02a      	b.n	8005d06 <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 8005cb0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005cb4:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8005cb8:	dd19      	ble.n	8005cee <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005cba:	f009 fcf3 	bl	800f6a4 <HAL_GetTick>
 8005cbe:	4602      	mov	r2, r0
 8005cc0:	4b14      	ldr	r3, [pc, #80]	; (8005d14 <control_mode_change+0x1cc>)
 8005cc2:	681b      	ldr	r3, [r3, #0]
 8005cc4:	1ad3      	subs	r3, r2, r3
 8005cc6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005cca:	d91c      	bls.n	8005d06 <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 8005ccc:	4b12      	ldr	r3, [pc, #72]	; (8005d18 <control_mode_change+0x1d0>)
 8005cce:	2201      	movs	r2, #1
 8005cd0:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005cd2:	2303      	movs	r3, #3
 8005cd4:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005cd6:	4b12      	ldr	r3, [pc, #72]	; (8005d20 <control_mode_change+0x1d8>)
 8005cd8:	2200      	movs	r2, #0
 8005cda:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8005cdc:	4b0f      	ldr	r3, [pc, #60]	; (8005d1c <control_mode_change+0x1d4>)
 8005cde:	6818      	ldr	r0, [r3, #0]
 8005ce0:	f107 010f 	add.w	r1, r7, #15
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	2200      	movs	r2, #0
 8005ce8:	f016 f8da 	bl	801bea0 <xQueueGenericSend>
			break;
 8005cec:	e00b      	b.n	8005d06 <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 8005cee:	f009 fcd9 	bl	800f6a4 <HAL_GetTick>
 8005cf2:	4603      	mov	r3, r0
 8005cf4:	4a07      	ldr	r2, [pc, #28]	; (8005d14 <control_mode_change+0x1cc>)
 8005cf6:	6013      	str	r3, [r2, #0]
			break;
 8005cf8:	e005      	b.n	8005d06 <control_mode_change+0x1be>
			break;
 8005cfa:	bf00      	nop
 8005cfc:	e004      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005cfe:	bf00      	nop
 8005d00:	e002      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005d02:	bf00      	nop
 8005d04:	e000      	b.n	8005d08 <control_mode_change+0x1c0>
			break;
 8005d06:	bf00      	nop
}
 8005d08:	bf00      	nop
 8005d0a:	3710      	adds	r7, #16
 8005d0c:	46bd      	mov	sp, r7
 8005d0e:	bd80      	pop	{r7, pc}
 8005d10:	20000358 	.word	0x20000358
 8005d14:	20002f9c 	.word	0x20002f9c
 8005d18:	20000008 	.word	0x20000008
 8005d1c:	200004e4 	.word	0x200004e4
 8005d20:	20002f99 	.word	0x20002f99

08005d24 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8005d24:	b480      	push	{r7}
 8005d26:	b083      	sub	sp, #12
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	ed87 0a01 	vstr	s0, [r7, #4]
 8005d2e:	edc7 0a00 	vstr	s1, [r7]
	yaw_radians += gimbal_ctrl_data.yaw += yaw_radians;
 8005d32:	4b25      	ldr	r3, [pc, #148]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d34:	ed93 7a01 	vldr	s14, [r3, #4]
 8005d38:	edd7 7a00 	vldr	s15, [r7]
 8005d3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d40:	4b21      	ldr	r3, [pc, #132]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d42:	edc3 7a01 	vstr	s15, [r3, #4]
 8005d46:	4b20      	ldr	r3, [pc, #128]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005d48:	edd3 7a01 	vldr	s15, [r3, #4]
 8005d4c:	ed97 7a00 	vldr	s14, [r7]
 8005d50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d54:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians > PI) {
 8005d58:	e007      	b.n	8005d6a <gimbal_turn_ang+0x46>
		yaw_radians -= 2 * PI;
 8005d5a:	edd7 7a00 	vldr	s15, [r7]
 8005d5e:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 8005dcc <gimbal_turn_ang+0xa8>
 8005d62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005d66:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians > PI) {
 8005d6a:	edd7 7a00 	vldr	s15, [r7]
 8005d6e:	ed9f 7a18 	vldr	s14, [pc, #96]	; 8005dd0 <gimbal_turn_ang+0xac>
 8005d72:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d7a:	dcee      	bgt.n	8005d5a <gimbal_turn_ang+0x36>
	}
	while (yaw_radians < -PI) {
 8005d7c:	e007      	b.n	8005d8e <gimbal_turn_ang+0x6a>
		yaw_radians += 2 * PI;
 8005d7e:	edd7 7a00 	vldr	s15, [r7]
 8005d82:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8005dcc <gimbal_turn_ang+0xa8>
 8005d86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d8a:	edc7 7a00 	vstr	s15, [r7]
	while (yaw_radians < -PI) {
 8005d8e:	edd7 7a00 	vldr	s15, [r7]
 8005d92:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8005dd4 <gimbal_turn_ang+0xb0>
 8005d96:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d9e:	d4ee      	bmi.n	8005d7e <gimbal_turn_ang+0x5a>
	}
	gimbal_ctrl_data.pitch += pit_radians;
 8005da0:	4b09      	ldr	r3, [pc, #36]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005da2:	ed93 7a00 	vldr	s14, [r3]
 8005da6:	edd7 7a01 	vldr	s15, [r7, #4]
 8005daa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005dae:	4b06      	ldr	r3, [pc, #24]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005db0:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = yaw_radians;
 8005db4:	4a04      	ldr	r2, [pc, #16]	; (8005dc8 <gimbal_turn_ang+0xa4>)
 8005db6:	683b      	ldr	r3, [r7, #0]
 8005db8:	6053      	str	r3, [r2, #4]
}
 8005dba:	bf00      	nop
 8005dbc:	370c      	adds	r7, #12
 8005dbe:	46bd      	mov	sp, r7
 8005dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc4:	4770      	bx	lr
 8005dc6:	bf00      	nop
 8005dc8:	20002f48 	.word	0x20002f48
 8005dcc:	40c90fdb 	.word	0x40c90fdb
 8005dd0:	40490fdb 	.word	0x40490fdb
 8005dd4:	c0490fdb 	.word	0xc0490fdb

08005dd8 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 8005dd8:	b480      	push	{r7}
 8005dda:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 8005ddc:	4b35      	ldr	r3, [pc, #212]	; (8005eb4 <set_gear+0xdc>)
 8005dde:	781b      	ldrb	r3, [r3, #0]
 8005de0:	3b01      	subs	r3, #1
 8005de2:	2b05      	cmp	r3, #5
 8005de4:	d854      	bhi.n	8005e90 <set_gear+0xb8>
 8005de6:	a201      	add	r2, pc, #4	; (adr r2, 8005dec <set_gear+0x14>)
 8005de8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005dec:	08005e05 	.word	0x08005e05
 8005df0:	08005e1d 	.word	0x08005e1d
 8005df4:	08005e35 	.word	0x08005e35
 8005df8:	08005e4f 	.word	0x08005e4f
 8005dfc:	08005e63 	.word	0x08005e63
 8005e00:	08005e7d 	.word	0x08005e7d
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 8005e04:	4b2b      	ldr	r3, [pc, #172]	; (8005eb4 <set_gear+0xdc>)
 8005e06:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e0a:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 8005e0c:	4b29      	ldr	r3, [pc, #164]	; (8005eb4 <set_gear+0xdc>)
 8005e0e:	4a2a      	ldr	r2, [pc, #168]	; (8005eb8 <set_gear+0xe0>)
 8005e10:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 8005e12:	4b28      	ldr	r3, [pc, #160]	; (8005eb4 <set_gear+0xdc>)
 8005e14:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e18:	60da      	str	r2, [r3, #12]
		break;
 8005e1a:	e046      	b.n	8005eaa <set_gear+0xd2>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 8005e1c:	4b25      	ldr	r3, [pc, #148]	; (8005eb4 <set_gear+0xdc>)
 8005e1e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e22:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8005e24:	4b23      	ldr	r3, [pc, #140]	; (8005eb4 <set_gear+0xdc>)
 8005e26:	4a25      	ldr	r2, [pc, #148]	; (8005ebc <set_gear+0xe4>)
 8005e28:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8005e2a:	4b22      	ldr	r3, [pc, #136]	; (8005eb4 <set_gear+0xdc>)
 8005e2c:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e30:	60da      	str	r2, [r3, #12]
		break;
 8005e32:	e03a      	b.n	8005eaa <set_gear+0xd2>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005e34:	4b1f      	ldr	r3, [pc, #124]	; (8005eb4 <set_gear+0xdc>)
 8005e36:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e3a:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005e3c:	4b1d      	ldr	r3, [pc, #116]	; (8005eb4 <set_gear+0xdc>)
 8005e3e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e42:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005e44:	4b1b      	ldr	r3, [pc, #108]	; (8005eb4 <set_gear+0xdc>)
 8005e46:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e4a:	60da      	str	r2, [r3, #12]
		break;
 8005e4c:	e02d      	b.n	8005eaa <set_gear+0xd2>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 8005e4e:	4b19      	ldr	r3, [pc, #100]	; (8005eb4 <set_gear+0xdc>)
 8005e50:	4a1b      	ldr	r2, [pc, #108]	; (8005ec0 <set_gear+0xe8>)
 8005e52:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8005e54:	4b17      	ldr	r3, [pc, #92]	; (8005eb4 <set_gear+0xdc>)
 8005e56:	4a1b      	ldr	r2, [pc, #108]	; (8005ec4 <set_gear+0xec>)
 8005e58:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8005e5a:	4b16      	ldr	r3, [pc, #88]	; (8005eb4 <set_gear+0xdc>)
 8005e5c:	4a18      	ldr	r2, [pc, #96]	; (8005ec0 <set_gear+0xe8>)
 8005e5e:	60da      	str	r2, [r3, #12]
		break;
 8005e60:	e023      	b.n	8005eaa <set_gear+0xd2>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 8005e62:	4b14      	ldr	r3, [pc, #80]	; (8005eb4 <set_gear+0xdc>)
 8005e64:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005e68:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8005e6a:	4b12      	ldr	r3, [pc, #72]	; (8005eb4 <set_gear+0xdc>)
 8005e6c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005e70:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 8005e72:	4b10      	ldr	r3, [pc, #64]	; (8005eb4 <set_gear+0xdc>)
 8005e74:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8005e78:	60da      	str	r2, [r3, #12]
		break;
 8005e7a:	e016      	b.n	8005eaa <set_gear+0xd2>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8005e7c:	4b0d      	ldr	r3, [pc, #52]	; (8005eb4 <set_gear+0xdc>)
 8005e7e:	4a12      	ldr	r2, [pc, #72]	; (8005ec8 <set_gear+0xf0>)
 8005e80:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 8005e82:	4b0c      	ldr	r3, [pc, #48]	; (8005eb4 <set_gear+0xdc>)
 8005e84:	4a11      	ldr	r2, [pc, #68]	; (8005ecc <set_gear+0xf4>)
 8005e86:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8005e88:	4b0a      	ldr	r3, [pc, #40]	; (8005eb4 <set_gear+0xdc>)
 8005e8a:	4a11      	ldr	r2, [pc, #68]	; (8005ed0 <set_gear+0xf8>)
 8005e8c:	60da      	str	r2, [r3, #12]
		break;
 8005e8e:	e00c      	b.n	8005eaa <set_gear+0xd2>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005e90:	4b08      	ldr	r3, [pc, #32]	; (8005eb4 <set_gear+0xdc>)
 8005e92:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e96:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005e98:	4b06      	ldr	r3, [pc, #24]	; (8005eb4 <set_gear+0xdc>)
 8005e9a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005e9e:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005ea0:	4b04      	ldr	r3, [pc, #16]	; (8005eb4 <set_gear+0xdc>)
 8005ea2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005ea6:	60da      	str	r2, [r3, #12]
		break;
 8005ea8:	bf00      	nop
	}

}
 8005eaa:	bf00      	nop
 8005eac:	46bd      	mov	sp, r7
 8005eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eb2:	4770      	bx	lr
 8005eb4:	20002f84 	.word	0x20002f84
 8005eb8:	3ecccccd 	.word	0x3ecccccd
 8005ebc:	3f333333 	.word	0x3f333333
 8005ec0:	3f99999a 	.word	0x3f99999a
 8005ec4:	3fb33333 	.word	0x3fb33333
 8005ec8:	40400000 	.word	0x40400000
 8005ecc:	40a00000 	.word	0x40a00000
 8005ed0:	41200000 	.word	0x41200000

08005ed4 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 8005ed4:	b480      	push	{r7}
 8005ed6:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 8005ed8:	4b0a      	ldr	r3, [pc, #40]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005eda:	f04f 527c 	mov.w	r2, #1056964608	; 0x3f000000
 8005ede:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 8005ee0:	4b08      	ldr	r3, [pc, #32]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005ee2:	f04f 0200 	mov.w	r2, #0
 8005ee6:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 8005ee8:	4b06      	ldr	r3, [pc, #24]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005eea:	f04f 0200 	mov.w	r2, #0
 8005eee:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 8005ef0:	4b04      	ldr	r3, [pc, #16]	; (8005f04 <chassis_yaw_pid_init+0x30>)
 8005ef2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005ef6:	61da      	str	r2, [r3, #28]
}
 8005ef8:	bf00      	nop
 8005efa:	46bd      	mov	sp, r7
 8005efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f00:	4770      	bx	lr
 8005f02:	bf00      	nop
 8005f04:	20002f54 	.word	0x20002f54

08005f08 <keyboard_control_input>:

extern int g_spinspin_mode;



void keyboard_control_input() {
 8005f08:	b580      	push	{r7, lr}
 8005f0a:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 8005f0c:	f000 f918 	bl	8006140 <mouse_gimbal_input>
	keyboard_chassis_input();
 8005f10:	f000 f86a 	bl	8005fe8 <keyboard_chassis_input>
	mouse_launcher_control_input();
 8005f14:	f000 f984 	bl	8006220 <mouse_launcher_control_input>
}
 8005f18:	bf00      	nop
 8005f1a:	bd80      	pop	{r7, pc}

08005f1c <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 8005f1c:	b580      	push	{r7, lr}
 8005f1e:	b082      	sub	sp, #8
 8005f20:	af00      	add	r7, sp, #0
 8005f22:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if ((remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8005f24:	4b2c      	ldr	r3, [pc, #176]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f26:	8b5b      	ldrh	r3, [r3, #26]
 8005f28:	f003 0310 	and.w	r3, r3, #16
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d013      	beq.n	8005f58 <keyboard_gear_shifter+0x3c>
			&& (remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 8005f30:	4b29      	ldr	r3, [pc, #164]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f32:	8b5b      	ldrh	r3, [r3, #26]
 8005f34:	f003 0320 	and.w	r3, r3, #32
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d00d      	beq.n	8005f58 <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	2203      	movs	r2, #3
 8005f40:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005f42:	f009 fbaf 	bl	800f6a4 <HAL_GetTick>
 8005f46:	4603      	mov	r3, r0
 8005f48:	4a24      	ldr	r2, [pc, #144]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f4a:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8005f4c:	f009 fbaa 	bl	800f6a4 <HAL_GetTick>
 8005f50:	4603      	mov	r3, r0
 8005f52:	4a23      	ldr	r2, [pc, #140]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005f54:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8005f56:	e03a      	b.n	8005fce <keyboard_gear_shifter+0xb2>
	else if (remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8005f58:	4b1f      	ldr	r3, [pc, #124]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f5a:	8b5b      	ldrh	r3, [r3, #26]
 8005f5c:	f003 0310 	and.w	r3, r3, #16
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d017      	beq.n	8005f94 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8005f64:	f009 fb9e 	bl	800f6a4 <HAL_GetTick>
 8005f68:	4602      	mov	r2, r0
 8005f6a:	4b1c      	ldr	r3, [pc, #112]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	1ad3      	subs	r3, r2, r3
 8005f70:	2b64      	cmp	r3, #100	; 0x64
 8005f72:	d909      	bls.n	8005f88 <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005f78:	2b04      	cmp	r3, #4
 8005f7a:	bf28      	it	cs
 8005f7c:	2304      	movcs	r3, #4
 8005f7e:	b2db      	uxtb	r3, r3
 8005f80:	3301      	adds	r3, #1
 8005f82:	b2da      	uxtb	r2, r3
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005f88:	f009 fb8c 	bl	800f6a4 <HAL_GetTick>
 8005f8c:	4603      	mov	r3, r0
 8005f8e:	4a13      	ldr	r2, [pc, #76]	; (8005fdc <keyboard_gear_shifter+0xc0>)
 8005f90:	6013      	str	r3, [r2, #0]
}
 8005f92:	e01c      	b.n	8005fce <keyboard_gear_shifter+0xb2>
	else if (remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8005f94:	4b10      	ldr	r3, [pc, #64]	; (8005fd8 <keyboard_gear_shifter+0xbc>)
 8005f96:	8b5b      	ldrh	r3, [r3, #26]
 8005f98:	f003 0320 	and.w	r3, r3, #32
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d016      	beq.n	8005fce <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 8005fa0:	f009 fb80 	bl	800f6a4 <HAL_GetTick>
 8005fa4:	4602      	mov	r2, r0
 8005fa6:	4b0e      	ldr	r3, [pc, #56]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	1ad3      	subs	r3, r2, r3
 8005fac:	2b64      	cmp	r3, #100	; 0x64
 8005fae:	d909      	bls.n	8005fc4 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005fb4:	2b02      	cmp	r3, #2
 8005fb6:	bf38      	it	cc
 8005fb8:	2302      	movcc	r3, #2
 8005fba:	b2db      	uxtb	r3, r3
 8005fbc:	3b01      	subs	r3, #1
 8005fbe:	b2da      	uxtb	r2, r3
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 8005fc4:	f009 fb6e 	bl	800f6a4 <HAL_GetTick>
 8005fc8:	4603      	mov	r3, r0
 8005fca:	4a05      	ldr	r2, [pc, #20]	; (8005fe0 <keyboard_gear_shifter+0xc4>)
 8005fcc:	6013      	str	r3, [r2, #0]
}
 8005fce:	bf00      	nop
 8005fd0:	3708      	adds	r7, #8
 8005fd2:	46bd      	mov	sp, r7
 8005fd4:	bd80      	pop	{r7, pc}
 8005fd6:	bf00      	nop
 8005fd8:	20000358 	.word	0x20000358
 8005fdc:	20002fa0 	.word	0x20002fa0
 8005fe0:	20002fa4 	.word	0x20002fa4
 8005fe4:	00000000 	.word	0x00000000

08005fe8 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 8005fe8:	b580      	push	{r7, lr}
 8005fea:	b084      	sub	sp, #16
 8005fec:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8005fee:	4b50      	ldr	r3, [pc, #320]	; (8006130 <keyboard_chassis_input+0x148>)
 8005ff0:	781b      	ldrb	r3, [r3, #0]
 8005ff2:	2b00      	cmp	r3, #0
 8005ff4:	d104      	bne.n	8006000 <keyboard_chassis_input+0x18>
 8005ff6:	4b4f      	ldr	r3, [pc, #316]	; (8006134 <keyboard_chassis_input+0x14c>)
 8005ff8:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005ffc:	2b02      	cmp	r3, #2
 8005ffe:	d00f      	beq.n	8006020 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 8006000:	4b4d      	ldr	r3, [pc, #308]	; (8006138 <keyboard_chassis_input+0x150>)
 8006002:	2200      	movs	r2, #0
 8006004:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 8006006:	4b4c      	ldr	r3, [pc, #304]	; (8006138 <keyboard_chassis_input+0x150>)
 8006008:	f04f 0200 	mov.w	r2, #0
 800600c:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 800600e:	4b4a      	ldr	r3, [pc, #296]	; (8006138 <keyboard_chassis_input+0x150>)
 8006010:	f04f 0200 	mov.w	r2, #0
 8006014:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 8006016:	4b48      	ldr	r3, [pc, #288]	; (8006138 <keyboard_chassis_input+0x150>)
 8006018:	f04f 0200 	mov.w	r2, #0
 800601c:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 800601e:	e07f      	b.n	8006120 <keyboard_chassis_input+0x138>
		if (remote_cmd.right_switch == ge_RSW_ALL_ON) {
 8006020:	4b44      	ldr	r3, [pc, #272]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006022:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006026:	2b02      	cmp	r3, #2
 8006028:	d17a      	bne.n	8006120 <keyboard_chassis_input+0x138>
			chassis_ctrl_data.enabled = 1;
 800602a:	4b43      	ldr	r3, [pc, #268]	; (8006138 <keyboard_chassis_input+0x150>)
 800602c:	2201      	movs	r2, #1
 800602e:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006030:	f04f 0300 	mov.w	r3, #0
 8006034:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 8006036:	f04f 0300 	mov.w	r3, #0
 800603a:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 800603c:	f04f 0300 	mov.w	r3, #0
 8006040:	607b      	str	r3, [r7, #4]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 8006042:	4b3c      	ldr	r3, [pc, #240]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006044:	8b5b      	ldrh	r3, [r3, #26]
 8006046:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800604a:	2b00      	cmp	r3, #0
 800604c:	d003      	beq.n	8006056 <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 800604e:	4b3b      	ldr	r3, [pc, #236]	; (800613c <keyboard_chassis_input+0x154>)
 8006050:	2201      	movs	r2, #1
 8006052:	601a      	str	r2, [r3, #0]
 8006054:	e008      	b.n	8006068 <keyboard_chassis_input+0x80>
			} else if (remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 8006056:	4b37      	ldr	r3, [pc, #220]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006058:	8b5b      	ldrh	r3, [r3, #26]
 800605a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800605e:	2b00      	cmp	r3, #0
 8006060:	d002      	beq.n	8006068 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 8006062:	4b36      	ldr	r3, [pc, #216]	; (800613c <keyboard_chassis_input+0x154>)
 8006064:	2200      	movs	r2, #0
 8006066:	601a      	str	r2, [r3, #0]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8006068:	4b32      	ldr	r3, [pc, #200]	; (8006134 <keyboard_chassis_input+0x14c>)
 800606a:	8b5b      	ldrh	r3, [r3, #26]
 800606c:	f003 0301 	and.w	r3, r3, #1
 8006070:	2b00      	cmp	r3, #0
 8006072:	d007      	beq.n	8006084 <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 8006074:	edd7 7a02 	vldr	s15, [r7, #8]
 8006078:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800607c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006080:	edc7 7a02 	vstr	s15, [r7, #8]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 8006084:	4b2b      	ldr	r3, [pc, #172]	; (8006134 <keyboard_chassis_input+0x14c>)
 8006086:	8b5b      	ldrh	r3, [r3, #26]
 8006088:	f003 0302 	and.w	r3, r3, #2
 800608c:	2b00      	cmp	r3, #0
 800608e:	d007      	beq.n	80060a0 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8006090:	edd7 7a02 	vldr	s15, [r7, #8]
 8006094:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8006098:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800609c:	edc7 7a02 	vstr	s15, [r7, #8]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 80060a0:	4b24      	ldr	r3, [pc, #144]	; (8006134 <keyboard_chassis_input+0x14c>)
 80060a2:	8b5b      	ldrh	r3, [r3, #26]
 80060a4:	f003 0304 	and.w	r3, r3, #4
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d007      	beq.n	80060bc <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 80060ac:	edd7 7a03 	vldr	s15, [r7, #12]
 80060b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80060b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80060b8:	edc7 7a03 	vstr	s15, [r7, #12]
			if (remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 80060bc:	4b1d      	ldr	r3, [pc, #116]	; (8006134 <keyboard_chassis_input+0x14c>)
 80060be:	8b5b      	ldrh	r3, [r3, #26]
 80060c0:	f003 0308 	and.w	r3, r3, #8
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d007      	beq.n	80060d8 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 80060c8:	edd7 7a03 	vldr	s15, [r7, #12]
 80060cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80060d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060d4:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 80060d8:	4b18      	ldr	r3, [pc, #96]	; (800613c <keyboard_chassis_input+0x154>)
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	2b00      	cmp	r3, #0
 80060de:	d012      	beq.n	8006106 <keyboard_chassis_input+0x11e>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 80060e0:	4b16      	ldr	r3, [pc, #88]	; (800613c <keyboard_chassis_input+0x154>)
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	4618      	mov	r0, r3
 80060e6:	f7fa fa1d 	bl	8000524 <__aeabi_i2d>
 80060ea:	a30f      	add	r3, pc, #60	; (adr r3, 8006128 <keyboard_chassis_input+0x140>)
 80060ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060f0:	f7fa fa82 	bl	80005f8 <__aeabi_dmul>
 80060f4:	4602      	mov	r2, r0
 80060f6:	460b      	mov	r3, r1
 80060f8:	4610      	mov	r0, r2
 80060fa:	4619      	mov	r1, r3
 80060fc:	f7fa fd74 	bl	8000be8 <__aeabi_d2f>
 8006100:	4603      	mov	r3, r0
 8006102:	607b      	str	r3, [r7, #4]
 8006104:	e003      	b.n	800610e <keyboard_chassis_input+0x126>
				yaw_input = chassis_center_yaw();
 8006106:	f7ff fc8f 	bl	8005a28 <chassis_center_yaw>
 800610a:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 800610e:	4a0a      	ldr	r2, [pc, #40]	; (8006138 <keyboard_chassis_input+0x150>)
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 8006114:	4a08      	ldr	r2, [pc, #32]	; (8006138 <keyboard_chassis_input+0x150>)
 8006116:	68bb      	ldr	r3, [r7, #8]
 8006118:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 800611a:	4a07      	ldr	r2, [pc, #28]	; (8006138 <keyboard_chassis_input+0x150>)
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	6093      	str	r3, [r2, #8]
}
 8006120:	bf00      	nop
 8006122:	3710      	adds	r7, #16
 8006124:	46bd      	mov	sp, r7
 8006126:	bd80      	pop	{r7, pc}
 8006128:	cccccccd 	.word	0xcccccccd
 800612c:	3feccccc 	.word	0x3feccccc
 8006130:	20002f98 	.word	0x20002f98
 8006134:	20000358 	.word	0x20000358
 8006138:	20002f28 	.word	0x20002f28
 800613c:	20002f94 	.word	0x20002f94

08006140 <mouse_gimbal_input>:

void mouse_gimbal_input() {
 8006140:	b580      	push	{r7, lr}
 8006142:	b082      	sub	sp, #8
 8006144:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006146:	4b30      	ldr	r3, [pc, #192]	; (8006208 <mouse_gimbal_input+0xc8>)
 8006148:	781b      	ldrb	r3, [r3, #0]
 800614a:	2b00      	cmp	r3, #0
 800614c:	d104      	bne.n	8006158 <mouse_gimbal_input+0x18>
 800614e:	4b2f      	ldr	r3, [pc, #188]	; (800620c <mouse_gimbal_input+0xcc>)
 8006150:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006154:	2b01      	cmp	r3, #1
 8006156:	d103      	bne.n	8006160 <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006158:	4b2d      	ldr	r3, [pc, #180]	; (8006210 <mouse_gimbal_input+0xd0>)
 800615a:	2200      	movs	r2, #0
 800615c:	725a      	strb	r2, [r3, #9]
 800615e:	e04e      	b.n	80061fe <mouse_gimbal_input+0xbe>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8006160:	4b2b      	ldr	r3, [pc, #172]	; (8006210 <mouse_gimbal_input+0xd0>)
 8006162:	2201      	movs	r2, #1
 8006164:	725a      	strb	r2, [r3, #9]
		float pitch_mouse = (float) remote_cmd.mouse_y * MOUSE_Y_INVERT
 8006166:	4b29      	ldr	r3, [pc, #164]	; (800620c <mouse_gimbal_input+0xcc>)
 8006168:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 800616c:	ee07 3a90 	vmov	s15, r3
 8006170:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006174:	ee17 0a90 	vmov	r0, s15
 8006178:	f7fa f9e6 	bl	8000548 <__aeabi_f2d>
 800617c:	f04f 0200 	mov.w	r2, #0
 8006180:	4b24      	ldr	r3, [pc, #144]	; (8006214 <mouse_gimbal_input+0xd4>)
 8006182:	f7fa fa39 	bl	80005f8 <__aeabi_dmul>
 8006186:	4602      	mov	r2, r0
 8006188:	460b      	mov	r3, r1
 800618a:	4610      	mov	r0, r2
 800618c:	4619      	mov	r1, r3
 800618e:	f04f 0200 	mov.w	r2, #0
 8006192:	4b21      	ldr	r3, [pc, #132]	; (8006218 <mouse_gimbal_input+0xd8>)
 8006194:	f7fa fb5a 	bl	800084c <__aeabi_ddiv>
 8006198:	4602      	mov	r2, r0
 800619a:	460b      	mov	r3, r1
		float pitch_mouse = (float) remote_cmd.mouse_y * MOUSE_Y_INVERT
 800619c:	4610      	mov	r0, r2
 800619e:	4619      	mov	r1, r3
 80061a0:	f7fa fd22 	bl	8000be8 <__aeabi_d2f>
 80061a4:	4603      	mov	r3, r0
 80061a6:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) remote_cmd.mouse_x * MOUSE_X_INVERT
 80061a8:	4b18      	ldr	r3, [pc, #96]	; (800620c <mouse_gimbal_input+0xcc>)
 80061aa:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80061ae:	ee07 3a90 	vmov	s15, r3
 80061b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 80061b6:	eef1 7a67 	vneg.f32	s15, s15
 80061ba:	ee17 3a90 	vmov	r3, s15
 80061be:	4618      	mov	r0, r3
 80061c0:	f7fa f9c2 	bl	8000548 <__aeabi_f2d>
 80061c4:	f04f 0200 	mov.w	r2, #0
 80061c8:	4b14      	ldr	r3, [pc, #80]	; (800621c <mouse_gimbal_input+0xdc>)
 80061ca:	f7fa fa15 	bl	80005f8 <__aeabi_dmul>
 80061ce:	4602      	mov	r2, r0
 80061d0:	460b      	mov	r3, r1
 80061d2:	4610      	mov	r0, r2
 80061d4:	4619      	mov	r1, r3
 80061d6:	f04f 0200 	mov.w	r2, #0
 80061da:	4b0f      	ldr	r3, [pc, #60]	; (8006218 <mouse_gimbal_input+0xd8>)
 80061dc:	f7fa fb36 	bl	800084c <__aeabi_ddiv>
 80061e0:	4602      	mov	r2, r0
 80061e2:	460b      	mov	r3, r1
		float yaw_mouse = (float) remote_cmd.mouse_x * MOUSE_X_INVERT
 80061e4:	4610      	mov	r0, r2
 80061e6:	4619      	mov	r1, r3
 80061e8:	f7fa fcfe 	bl	8000be8 <__aeabi_d2f>
 80061ec:	4603      	mov	r3, r0
 80061ee:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 80061f0:	edd7 0a00 	vldr	s1, [r7]
 80061f4:	ed97 0a01 	vldr	s0, [r7, #4]
 80061f8:	f7ff fd94 	bl	8005d24 <gimbal_turn_ang>
	}
}
 80061fc:	bf00      	nop
 80061fe:	bf00      	nop
 8006200:	3708      	adds	r7, #8
 8006202:	46bd      	mov	sp, r7
 8006204:	bd80      	pop	{r7, pc}
 8006206:	bf00      	nop
 8006208:	20002f98 	.word	0x20002f98
 800620c:	20000358 	.word	0x20000358
 8006210:	20002f48 	.word	0x20002f48
 8006214:	40240000 	.word	0x40240000
 8006218:	40e00000 	.word	0x40e00000
 800621c:	40340000 	.word	0x40340000

08006220 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 8006220:	b480      	push	{r7}
 8006222:	af00      	add	r7, sp, #0
	if (safety_toggle || launcher_safety_toggle
 8006224:	4b28      	ldr	r3, [pc, #160]	; (80062c8 <mouse_launcher_control_input+0xa8>)
 8006226:	781b      	ldrb	r3, [r3, #0]
 8006228:	2b00      	cmp	r3, #0
 800622a:	d10d      	bne.n	8006248 <mouse_launcher_control_input+0x28>
 800622c:	4b27      	ldr	r3, [pc, #156]	; (80062cc <mouse_launcher_control_input+0xac>)
 800622e:	781b      	ldrb	r3, [r3, #0]
 8006230:	2b00      	cmp	r3, #0
 8006232:	d109      	bne.n	8006248 <mouse_launcher_control_input+0x28>
			|| remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8006234:	4b26      	ldr	r3, [pc, #152]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006236:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800623a:	2b01      	cmp	r3, #1
 800623c:	d004      	beq.n	8006248 <mouse_launcher_control_input+0x28>
			|| remote_cmd.left_switch != ge_LSW_UNSAFE) {
 800623e:	4b24      	ldr	r3, [pc, #144]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006240:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006244:	2b01      	cmp	r3, #1
 8006246:	d016      	beq.n	8006276 <mouse_launcher_control_input+0x56>
		if (remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006248:	4b21      	ldr	r3, [pc, #132]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 800624a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800624e:	2b01      	cmp	r3, #1
 8006250:	d102      	bne.n	8006258 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 8006252:	4b20      	ldr	r3, [pc, #128]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006254:	2200      	movs	r2, #0
 8006256:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.gun_feeding_speed = 0;
 8006258:	4b1e      	ldr	r3, [pc, #120]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 800625a:	2200      	movs	r2, #0
 800625c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 800625e:	4b1d      	ldr	r3, [pc, #116]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006260:	2200      	movs	r2, #0
 8006262:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006264:	4b1a      	ldr	r3, [pc, #104]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006266:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800626a:	2b01      	cmp	r3, #1
 800626c:	d027      	beq.n	80062be <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 800626e:	4b17      	ldr	r3, [pc, #92]	; (80062cc <mouse_launcher_control_input+0xac>)
 8006270:	2200      	movs	r2, #0
 8006272:	701a      	strb	r2, [r3, #0]
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006274:	e023      	b.n	80062be <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 8006276:	4b17      	ldr	r3, [pc, #92]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006278:	2201      	movs	r2, #1
 800627a:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 800627c:	4b15      	ldr	r3, [pc, #84]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 800627e:	2201      	movs	r2, #1
 8006280:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8006282:	4b13      	ldr	r3, [pc, #76]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 8006284:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006288:	2b01      	cmp	r3, #1
 800628a:	d10b      	bne.n	80062a4 <mouse_launcher_control_input+0x84>
			if (remote_cmd.mouse_right) {
 800628c:	4b10      	ldr	r3, [pc, #64]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 800628e:	f993 3019 	ldrsb.w	r3, [r3, #25]
 8006292:	2b00      	cmp	r3, #0
 8006294:	d003      	beq.n	800629e <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 8006296:	4b0f      	ldr	r3, [pc, #60]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 8006298:	2201      	movs	r2, #1
 800629a:	711a      	strb	r2, [r3, #4]
 800629c:	e002      	b.n	80062a4 <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 800629e:	4b0d      	ldr	r3, [pc, #52]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062a0:	2200      	movs	r2, #0
 80062a2:	711a      	strb	r2, [r3, #4]
			}
		}
		if (remote_cmd.mouse_left) {
 80062a4:	4b0a      	ldr	r3, [pc, #40]	; (80062d0 <mouse_launcher_control_input+0xb0>)
 80062a6:	f993 3018 	ldrsb.w	r3, [r3, #24]
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d003      	beq.n	80062b6 <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.gun_feeding_speed =1;
 80062ae:	4b09      	ldr	r3, [pc, #36]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062b0:	2201      	movs	r2, #1
 80062b2:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.gun_feeding_speed = 0;
		}
	}
}
 80062b4:	e003      	b.n	80062be <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.gun_feeding_speed = 0;
 80062b6:	4b07      	ldr	r3, [pc, #28]	; (80062d4 <mouse_launcher_control_input+0xb4>)
 80062b8:	2200      	movs	r2, #0
 80062ba:	805a      	strh	r2, [r3, #2]
}
 80062bc:	e7ff      	b.n	80062be <mouse_launcher_control_input+0x9e>
 80062be:	bf00      	nop
 80062c0:	46bd      	mov	sp, r7
 80062c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062c6:	4770      	bx	lr
 80062c8:	20002f98 	.word	0x20002f98
 80062cc:	20002f99 	.word	0x20002f99
 80062d0:	20000358 	.word	0x20000358
 80062d4:	20002f40 	.word	0x20002f40

080062d8 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 80062d8:	b580      	push	{r7, lr}
 80062da:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 80062dc:	f000 f8d0 	bl	8006480 <remote_gimbal_input>
	remote_chassis_input();
 80062e0:	f000 f87e 	bl	80063e0 <remote_chassis_input>
	remote_launcher_control_input();
 80062e4:	f000 f934 	bl	8006550 <remote_launcher_control_input>
}
 80062e8:	bf00      	nop
 80062ea:	bd80      	pop	{r7, pc}

080062ec <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 80062ec:	b580      	push	{r7, lr}
 80062ee:	b084      	sub	sp, #16
 80062f0:	af00      	add	r7, sp, #0
 80062f2:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (remote_cmd.left_switch == ge_LSW_CONFIG) {
 80062f4:	4b36      	ldr	r3, [pc, #216]	; (80063d0 <remote_gear_shifter+0xe4>)
 80062f6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062fa:	2b03      	cmp	r3, #3
 80062fc:	d164      	bne.n	80063c8 <remote_gear_shifter+0xdc>
		if (remote_cmd.side_dial > 330) {
 80062fe:	4b34      	ldr	r3, [pc, #208]	; (80063d0 <remote_gear_shifter+0xe4>)
 8006300:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8006304:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
 8006308:	dd2c      	ble.n	8006364 <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 800630a:	f009 f9cb 	bl	800f6a4 <HAL_GetTick>
 800630e:	4602      	mov	r2, r0
 8006310:	4b30      	ldr	r3, [pc, #192]	; (80063d4 <remote_gear_shifter+0xe8>)
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	1ad3      	subs	r3, r2, r3
 8006316:	2b64      	cmp	r3, #100	; 0x64
 8006318:	d91e      	bls.n	8006358 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 800631e:	2b05      	cmp	r3, #5
 8006320:	bf28      	it	cs
 8006322:	2305      	movcs	r3, #5
 8006324:	b2db      	uxtb	r3, r3
 8006326:	3301      	adds	r3, #1
 8006328:	b2da      	uxtb	r2, r3
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 800632e:	2306      	movs	r3, #6
 8006330:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006332:	2300      	movs	r3, #0
 8006334:	73fb      	strb	r3, [r7, #15]
 8006336:	e00a      	b.n	800634e <remote_gear_shifter+0x62>
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 8006338:	4b27      	ldr	r3, [pc, #156]	; (80063d8 <remote_gear_shifter+0xec>)
 800633a:	6818      	ldr	r0, [r3, #0]
 800633c:	f107 010d 	add.w	r1, r7, #13
 8006340:	2300      	movs	r3, #0
 8006342:	2200      	movs	r2, #0
 8006344:	f015 fdac 	bl	801bea0 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006348:	7bfb      	ldrb	r3, [r7, #15]
 800634a:	3301      	adds	r3, #1
 800634c:	73fb      	strb	r3, [r7, #15]
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	781b      	ldrb	r3, [r3, #0]
 8006352:	7bfa      	ldrb	r2, [r7, #15]
 8006354:	429a      	cmp	r2, r3
 8006356:	d3ef      	bcc.n	8006338 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8006358:	f009 f9a4 	bl	800f6a4 <HAL_GetTick>
 800635c:	4603      	mov	r3, r0
 800635e:	4a1d      	ldr	r2, [pc, #116]	; (80063d4 <remote_gear_shifter+0xe8>)
 8006360:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 8006362:	e031      	b.n	80063c8 <remote_gear_shifter+0xdc>
		else if (remote_cmd.side_dial < -330) {
 8006364:	4b1a      	ldr	r3, [pc, #104]	; (80063d0 <remote_gear_shifter+0xe4>)
 8006366:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800636a:	f513 7fa5 	cmn.w	r3, #330	; 0x14a
 800636e:	da2b      	bge.n	80063c8 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 8006370:	f009 f998 	bl	800f6a4 <HAL_GetTick>
 8006374:	4602      	mov	r2, r0
 8006376:	4b19      	ldr	r3, [pc, #100]	; (80063dc <remote_gear_shifter+0xf0>)
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	1ad3      	subs	r3, r2, r3
 800637c:	2b64      	cmp	r3, #100	; 0x64
 800637e:	d91e      	bls.n	80063be <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 8006384:	2b02      	cmp	r3, #2
 8006386:	bf38      	it	cc
 8006388:	2302      	movcc	r3, #2
 800638a:	b2db      	uxtb	r3, r3
 800638c:	3b01      	subs	r3, #1
 800638e:	b2da      	uxtb	r2, r3
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 8006394:	2307      	movs	r3, #7
 8006396:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006398:	2300      	movs	r3, #0
 800639a:	73bb      	strb	r3, [r7, #14]
 800639c:	e00a      	b.n	80063b4 <remote_gear_shifter+0xc8>
					xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800639e:	4b0e      	ldr	r3, [pc, #56]	; (80063d8 <remote_gear_shifter+0xec>)
 80063a0:	6818      	ldr	r0, [r3, #0]
 80063a2:	f107 010d 	add.w	r1, r7, #13
 80063a6:	2300      	movs	r3, #0
 80063a8:	2200      	movs	r2, #0
 80063aa:	f015 fd79 	bl	801bea0 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80063ae:	7bbb      	ldrb	r3, [r7, #14]
 80063b0:	3301      	adds	r3, #1
 80063b2:	73bb      	strb	r3, [r7, #14]
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	781b      	ldrb	r3, [r3, #0]
 80063b8:	7bba      	ldrb	r2, [r7, #14]
 80063ba:	429a      	cmp	r2, r3
 80063bc:	d3ef      	bcc.n	800639e <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 80063be:	f009 f971 	bl	800f6a4 <HAL_GetTick>
 80063c2:	4603      	mov	r3, r0
 80063c4:	4a05      	ldr	r2, [pc, #20]	; (80063dc <remote_gear_shifter+0xf0>)
 80063c6:	6013      	str	r3, [r2, #0]
}
 80063c8:	bf00      	nop
 80063ca:	3710      	adds	r7, #16
 80063cc:	46bd      	mov	sp, r7
 80063ce:	bd80      	pop	{r7, pc}
 80063d0:	20000358 	.word	0x20000358
 80063d4:	20002fa8 	.word	0x20002fa8
 80063d8:	200004e4 	.word	0x200004e4
 80063dc:	20002fac 	.word	0x20002fac

080063e0 <remote_chassis_input>:

void remote_chassis_input() {
 80063e0:	b580      	push	{r7, lr}
 80063e2:	b084      	sub	sp, #16
 80063e4:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch != ge_RSW_ALL_ON) {
 80063e6:	4b21      	ldr	r3, [pc, #132]	; (800646c <remote_chassis_input+0x8c>)
 80063e8:	781b      	ldrb	r3, [r3, #0]
 80063ea:	2b00      	cmp	r3, #0
 80063ec:	d104      	bne.n	80063f8 <remote_chassis_input+0x18>
 80063ee:	4b20      	ldr	r3, [pc, #128]	; (8006470 <remote_chassis_input+0x90>)
 80063f0:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80063f4:	2b02      	cmp	r3, #2
 80063f6:	d002      	beq.n	80063fe <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 80063f8:	f7ff fb58 	bl	8005aac <chassis_kill_ctrl>
 80063fc:	e032      	b.n	8006464 <remote_chassis_input+0x84>
	} else {
			chassis_ctrl_data.enabled = 1;
 80063fe:	4b1d      	ldr	r3, [pc, #116]	; (8006474 <remote_chassis_input+0x94>)
 8006400:	2201      	movs	r2, #1
 8006402:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006404:	f04f 0300 	mov.w	r3, #0
 8006408:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 800640a:	f04f 0300 	mov.w	r3, #0
 800640e:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8006410:	f04f 0300 	mov.w	r3, #0
 8006414:	607b      	str	r3, [r7, #4]

			forward_input = (float) remote_cmd.left_y / RC_LIMITS;
 8006416:	4b16      	ldr	r3, [pc, #88]	; (8006470 <remote_chassis_input+0x90>)
 8006418:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800641c:	ee07 3a90 	vmov	s15, r3
 8006420:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006424:	eddf 6a14 	vldr	s13, [pc, #80]	; 8006478 <remote_chassis_input+0x98>
 8006428:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800642c:	edc7 7a02 	vstr	s15, [r7, #8]
			horizontal_input = (float) remote_cmd.left_x / RC_LIMITS;
 8006430:	4b0f      	ldr	r3, [pc, #60]	; (8006470 <remote_chassis_input+0x90>)
 8006432:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006436:	ee07 3a90 	vmov	s15, r3
 800643a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800643e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8006478 <remote_chassis_input+0x98>
 8006442:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006446:	edc7 7a03 	vstr	s15, [r7, #12]
			yaw_input = chassis_center_yaw();
 800644a:	f7ff faed 	bl	8005a28 <chassis_center_yaw>
 800644e:	ed87 0a01 	vstr	s0, [r7, #4]
//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 8006452:	ed97 1a01 	vldr	s2, [r7, #4]
 8006456:	edd7 0a03 	vldr	s1, [r7, #12]
 800645a:	ed97 0a02 	vldr	s0, [r7, #8]
 800645e:	f7ff fb07 	bl	8005a70 <chassis_set_ctrl>
	}
}
 8006462:	bf00      	nop
 8006464:	bf00      	nop
 8006466:	3710      	adds	r7, #16
 8006468:	46bd      	mov	sp, r7
 800646a:	bd80      	pop	{r7, pc}
 800646c:	20002f98 	.word	0x20002f98
 8006470:	20000358 	.word	0x20000358
 8006474:	20002f28 	.word	0x20002f28
 8006478:	44250000 	.word	0x44250000
 800647c:	00000000 	.word	0x00000000

08006480 <remote_gimbal_input>:

void remote_gimbal_input() {
 8006480:	b580      	push	{r7, lr}
 8006482:	b082      	sub	sp, #8
 8006484:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006486:	4b2e      	ldr	r3, [pc, #184]	; (8006540 <remote_gimbal_input+0xc0>)
 8006488:	781b      	ldrb	r3, [r3, #0]
 800648a:	2b00      	cmp	r3, #0
 800648c:	d104      	bne.n	8006498 <remote_gimbal_input+0x18>
 800648e:	4b2d      	ldr	r3, [pc, #180]	; (8006544 <remote_gimbal_input+0xc4>)
 8006490:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006494:	2b01      	cmp	r3, #1
 8006496:	d103      	bne.n	80064a0 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006498:	4b2b      	ldr	r3, [pc, #172]	; (8006548 <remote_gimbal_input+0xc8>)
 800649a:	2200      	movs	r2, #0
 800649c:	725a      	strb	r2, [r3, #9]
 800649e:	e047      	b.n	8006530 <remote_gimbal_input+0xb0>
	} else {
		gimbal_ctrl_data.enabled = 1;
 80064a0:	4b29      	ldr	r3, [pc, #164]	; (8006548 <remote_gimbal_input+0xc8>)
 80064a2:	2201      	movs	r2, #1
 80064a4:	725a      	strb	r2, [r3, #9]
		float pitch_remote = ((float) remote_cmd.right_y / 660) * PITCH_INVERT
 80064a6:	4b27      	ldr	r3, [pc, #156]	; (8006544 <remote_gimbal_input+0xc4>)
 80064a8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80064ac:	ee07 3a90 	vmov	s15, r3
 80064b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80064b4:	eddf 6a25 	vldr	s13, [pc, #148]	; 800654c <remote_gimbal_input+0xcc>
 80064b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80064bc:	eef1 7a67 	vneg.f32	s15, s15
 80064c0:	ee17 3a90 	vmov	r3, s15
 80064c4:	4618      	mov	r0, r3
 80064c6:	f7fa f83f 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 80064ca:	a31b      	add	r3, pc, #108	; (adr r3, 8006538 <remote_gimbal_input+0xb8>)
 80064cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064d0:	f7fa f892 	bl	80005f8 <__aeabi_dmul>
 80064d4:	4602      	mov	r2, r0
 80064d6:	460b      	mov	r3, r1
		float pitch_remote = ((float) remote_cmd.right_y / 660) * PITCH_INVERT
 80064d8:	4610      	mov	r0, r2
 80064da:	4619      	mov	r1, r3
 80064dc:	f7fa fb84 	bl	8000be8 <__aeabi_d2f>
 80064e0:	4603      	mov	r3, r0
 80064e2:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) remote_cmd.right_x / 660) * YAW_INVERT
 80064e4:	4b17      	ldr	r3, [pc, #92]	; (8006544 <remote_gimbal_input+0xc4>)
 80064e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80064ea:	ee07 3a90 	vmov	s15, r3
 80064ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80064f2:	eddf 6a16 	vldr	s13, [pc, #88]	; 800654c <remote_gimbal_input+0xcc>
 80064f6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80064fa:	eef1 7a67 	vneg.f32	s15, s15
 80064fe:	ee17 3a90 	vmov	r3, s15
 8006502:	4618      	mov	r0, r3
 8006504:	f7fa f820 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 8006508:	a30b      	add	r3, pc, #44	; (adr r3, 8006538 <remote_gimbal_input+0xb8>)
 800650a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800650e:	f7fa f873 	bl	80005f8 <__aeabi_dmul>
 8006512:	4602      	mov	r2, r0
 8006514:	460b      	mov	r3, r1
		float yaw_remote = ((float) remote_cmd.right_x / 660) * YAW_INVERT
 8006516:	4610      	mov	r0, r2
 8006518:	4619      	mov	r1, r3
 800651a:	f7fa fb65 	bl	8000be8 <__aeabi_d2f>
 800651e:	4603      	mov	r3, r0
 8006520:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 8006522:	edd7 0a00 	vldr	s1, [r7]
 8006526:	ed97 0a01 	vldr	s0, [r7, #4]
 800652a:	f7ff fbfb 	bl	8005d24 <gimbal_turn_ang>
	}
}
 800652e:	bf00      	nop
 8006530:	bf00      	nop
 8006532:	3708      	adds	r7, #8
 8006534:	46bd      	mov	sp, r7
 8006536:	bd80      	pop	{r7, pc}
 8006538:	9999999a 	.word	0x9999999a
 800653c:	3fa99999 	.word	0x3fa99999
 8006540:	20002f98 	.word	0x20002f98
 8006544:	20000358 	.word	0x20000358
 8006548:	20002f48 	.word	0x20002f48
 800654c:	44250000 	.word	0x44250000

08006550 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 8006550:	b480      	push	{r7}
 8006552:	af00      	add	r7, sp, #0
	if (safety_toggle || remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8006554:	4b1d      	ldr	r3, [pc, #116]	; (80065cc <remote_launcher_control_input+0x7c>)
 8006556:	781b      	ldrb	r3, [r3, #0]
 8006558:	2b00      	cmp	r3, #0
 800655a:	d109      	bne.n	8006570 <remote_launcher_control_input+0x20>
 800655c:	4b1c      	ldr	r3, [pc, #112]	; (80065d0 <remote_launcher_control_input+0x80>)
 800655e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006562:	2b01      	cmp	r3, #1
 8006564:	d004      	beq.n	8006570 <remote_launcher_control_input+0x20>
			|| remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006566:	4b1a      	ldr	r3, [pc, #104]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006568:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800656c:	2b01      	cmp	r3, #1
 800656e:	d016      	beq.n	800659e <remote_launcher_control_input+0x4e>
		if (remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8006570:	4b17      	ldr	r3, [pc, #92]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006572:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006576:	2b01      	cmp	r3, #1
 8006578:	d002      	beq.n	8006580 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 800657a:	4b16      	ldr	r3, [pc, #88]	; (80065d4 <remote_launcher_control_input+0x84>)
 800657c:	2200      	movs	r2, #0
 800657e:	701a      	strb	r2, [r3, #0]
		}
		if (remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8006580:	4b13      	ldr	r3, [pc, #76]	; (80065d0 <remote_launcher_control_input+0x80>)
 8006582:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006586:	2b01      	cmp	r3, #1
 8006588:	d102      	bne.n	8006590 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 800658a:	4b13      	ldr	r3, [pc, #76]	; (80065d8 <remote_launcher_control_input+0x88>)
 800658c:	2200      	movs	r2, #0
 800658e:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.gun_feeding_speed = 0;
 8006590:	4b11      	ldr	r3, [pc, #68]	; (80065d8 <remote_launcher_control_input+0x88>)
 8006592:	2200      	movs	r2, #0
 8006594:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8006596:	4b10      	ldr	r3, [pc, #64]	; (80065d8 <remote_launcher_control_input+0x88>)
 8006598:	2200      	movs	r2, #0
 800659a:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.gun_feeding_speed = 0;
		}
	}

}
 800659c:	e011      	b.n	80065c2 <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 800659e:	4b0e      	ldr	r3, [pc, #56]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065a0:	2201      	movs	r2, #1
 80065a2:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 80065a4:	4b0c      	ldr	r3, [pc, #48]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065a6:	2201      	movs	r2, #1
 80065a8:	801a      	strh	r2, [r3, #0]
		if (remote_cmd.left_switch == ge_LSW_UNSAFE) {
 80065aa:	4b09      	ldr	r3, [pc, #36]	; (80065d0 <remote_launcher_control_input+0x80>)
 80065ac:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80065b0:	2b01      	cmp	r3, #1
 80065b2:	d103      	bne.n	80065bc <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.gun_feeding_speed = 1;
 80065b4:	4b08      	ldr	r3, [pc, #32]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065b6:	2201      	movs	r2, #1
 80065b8:	805a      	strh	r2, [r3, #2]
}
 80065ba:	e002      	b.n	80065c2 <remote_launcher_control_input+0x72>
			launcher_ctrl_data.gun_feeding_speed = 0;
 80065bc:	4b06      	ldr	r3, [pc, #24]	; (80065d8 <remote_launcher_control_input+0x88>)
 80065be:	2200      	movs	r2, #0
 80065c0:	805a      	strh	r2, [r3, #2]
}
 80065c2:	bf00      	nop
 80065c4:	46bd      	mov	sp, r7
 80065c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ca:	4770      	bx	lr
 80065cc:	20002f98 	.word	0x20002f98
 80065d0:	20000358 	.word	0x20000358
 80065d4:	20002f99 	.word	0x20002f99
 80065d8:	20002f40 	.word	0x20002f40

080065dc <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 80065dc:	b480      	push	{r7}
 80065de:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 80065e0:	4b1a      	ldr	r3, [pc, #104]	; (800664c <aimbot_pid_init+0x70>)
 80065e2:	f04f 0200 	mov.w	r2, #0
 80065e6:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 80065e8:	4b18      	ldr	r3, [pc, #96]	; (800664c <aimbot_pid_init+0x70>)
 80065ea:	f04f 0200 	mov.w	r2, #0
 80065ee:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 80065f0:	4b17      	ldr	r3, [pc, #92]	; (8006650 <aimbot_pid_init+0x74>)
 80065f2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80065f6:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 80065f8:	4b15      	ldr	r3, [pc, #84]	; (8006650 <aimbot_pid_init+0x74>)
 80065fa:	f04f 0200 	mov.w	r2, #0
 80065fe:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8006600:	4b13      	ldr	r3, [pc, #76]	; (8006650 <aimbot_pid_init+0x74>)
 8006602:	f04f 0200 	mov.w	r2, #0
 8006606:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8006608:	4b11      	ldr	r3, [pc, #68]	; (8006650 <aimbot_pid_init+0x74>)
 800660a:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800660e:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8006610:	4b0f      	ldr	r3, [pc, #60]	; (8006650 <aimbot_pid_init+0x74>)
 8006612:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8006616:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 8006618:	4b0e      	ldr	r3, [pc, #56]	; (8006654 <aimbot_pid_init+0x78>)
 800661a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800661e:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 8006620:	4b0c      	ldr	r3, [pc, #48]	; (8006654 <aimbot_pid_init+0x78>)
 8006622:	f04f 0200 	mov.w	r2, #0
 8006626:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 8006628:	4b0a      	ldr	r3, [pc, #40]	; (8006654 <aimbot_pid_init+0x78>)
 800662a:	f04f 0200 	mov.w	r2, #0
 800662e:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 8006630:	4b08      	ldr	r3, [pc, #32]	; (8006654 <aimbot_pid_init+0x78>)
 8006632:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8006636:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 8006638:	4b06      	ldr	r3, [pc, #24]	; (8006654 <aimbot_pid_init+0x78>)
 800663a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800663e:	619a      	str	r2, [r3, #24]
}
 8006640:	bf00      	nop
 8006642:	46bd      	mov	sp, r7
 8006644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006648:	4770      	bx	lr
 800664a:	bf00      	nop
 800664c:	20003014 	.word	0x20003014
 8006650:	20002fe0 	.word	0x20002fe0
 8006654:	20002fb0 	.word	0x20002fb0

08006658 <joint_motor_init>:
 * FreeRTOS task for gimbal controls
 * Has HIGH2 priority
 *
 */

void joint_motor_init(motor_data_t *motor_data){
 8006658:	b580      	push	{r7, lr}
 800665a:	b082      	sub	sp, #8
 800665c:	af00      	add	r7, sp, #0
 800665e:	6078      	str	r0, [r7, #4]
	motor_data[7].id = L1_MOTOR_ID;
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	f503 63d2 	add.w	r3, r3, #1680	; 0x690
 8006666:	2208      	movs	r2, #8
 8006668:	801a      	strh	r2, [r3, #0]
	motor_data[6].id = L2_MOTOR_ID;
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	f503 63b4 	add.w	r3, r3, #1440	; 0x5a0
 8006670:	2207      	movs	r2, #7
 8006672:	801a      	strh	r2, [r3, #0]
	motor_data[5].id = R2_MOTOR_ID;
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	f503 6396 	add.w	r3, r3, #1200	; 0x4b0
 800667a:	2206      	movs	r2, #6
 800667c:	801a      	strh	r2, [r3, #0]
	motor_data[4].id = R1_MOTOR_ID;
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	f503 7370 	add.w	r3, r3, #960	; 0x3c0
 8006684:	2205      	movs	r2, #5
 8006686:	801a      	strh	r2, [r3, #0]
	jointmotor_control_loop(&leg_move);
 8006688:	4803      	ldr	r0, [pc, #12]	; (8006698 <joint_motor_init+0x40>)
 800668a:	f000 fe99 	bl	80073c0 <jointmotor_control_loop>

}
 800668e:	bf00      	nop
 8006690:	3708      	adds	r7, #8
 8006692:	46bd      	mov	sp, r7
 8006694:	bd80      	pop	{r7, pc}
 8006696:	bf00      	nop
 8006698:	2000301c 	.word	0x2000301c

0800669c <gimbal_control_task>:

void gimbal_control_task(void *argument) {
 800669c:	b580      	push	{r7, lr}
 800669e:	b086      	sub	sp, #24
 80066a0:	af02      	add	r7, sp, #8
 80066a2:	6078      	str	r0, [r7, #4]
	TickType_t start_time;
	//initialize
	joint_motor_init(&can_motors[24]);
 80066a4:	4813      	ldr	r0, [pc, #76]	; (80066f4 <gimbal_control_task+0x58>)
 80066a6:	f7ff ffd7 	bl	8006658 <joint_motor_init>

	while (1) {
		xEventGroupWaitBits(gimbal_event_group, 0b11, pdTRUE, pdTRUE,
 80066aa:	4b13      	ldr	r3, [pc, #76]	; (80066f8 <gimbal_control_task+0x5c>)
 80066ac:	6818      	ldr	r0, [r3, #0]
 80066ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80066b2:	9300      	str	r3, [sp, #0]
 80066b4:	2301      	movs	r3, #1
 80066b6:	2201      	movs	r2, #1
 80066b8:	2103      	movs	r1, #3
 80066ba:	f015 f82b 	bl	801b714 <xEventGroupWaitBits>
		portMAX_DELAY);
		start_time = xTaskGetTickCount();
 80066be:	f016 fbeb 	bl	801ce98 <xTaskGetTickCount>
 80066c2:	4603      	mov	r3, r0
 80066c4:	60fb      	str	r3, [r7, #12]
//		if (gimbal_ctrl_data.enabled) {
//			if (gimbal_ctrl_data.imu_mode) {
		leg_control(&leg_move);
 80066c6:	480d      	ldr	r0, [pc, #52]	; (80066fc <gimbal_control_task+0x60>)
 80066c8:	f000 f892 	bl	80067f0 <leg_control>
		jointmotor_control_loop(&leg_move);
 80066cc:	480b      	ldr	r0, [pc, #44]	; (80066fc <gimbal_control_task+0x60>)
 80066ce:	f000 fe77 	bl	80073c0 <jointmotor_control_loop>
		// joint_motor_send_can(&leg_move, R1_MOTOR_ID, R2_MOTOR_ID, L1_MOTOR_ID, L2_MOTOR_ID);
//
//		}
		status_led(2, off_led);
 80066d2:	2101      	movs	r1, #1
 80066d4:	2002      	movs	r0, #2
 80066d6:	f7fb fcf3 	bl	80020c0 <status_led>
		xEventGroupClearBits(gimbal_event_group, 0b11);
 80066da:	4b07      	ldr	r3, [pc, #28]	; (80066f8 <gimbal_control_task+0x5c>)
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	2103      	movs	r1, #3
 80066e0:	4618      	mov	r0, r3
 80066e2:	f015 f8e5 	bl	801b8b0 <xEventGroupClearBits>
		vTaskDelayUntil(&start_time, GIMBAL_DELAY);
 80066e6:	f107 030c 	add.w	r3, r7, #12
 80066ea:	2105      	movs	r1, #5
 80066ec:	4618      	mov	r0, r3
 80066ee:	f016 fa05 	bl	801cafc <vTaskDelayUntil>
	while (1) {
 80066f2:	e7da      	b.n	80066aa <gimbal_control_task+0xe>
 80066f4:	20002f28 	.word	0x20002f28
 80066f8:	200004c8 	.word	0x200004c8
 80066fc:	2000301c 	.word	0x2000301c

08006700 <calculate_torque>:
	}
	//should not run here
}


float calculate_torque(float x) {
 8006700:	b580      	push	{r7, lr}
 8006702:	b084      	sub	sp, #16
 8006704:	af00      	add	r7, sp, #0
 8006706:	ed87 0a01 	vstr	s0, [r7, #4]
    // Calculate y using the absolute value of x
    float y = (1.2 * fabs(x) + 0.1)/3*16000;
 800670a:	edd7 7a01 	vldr	s15, [r7, #4]
 800670e:	eef0 7ae7 	vabs.f32	s15, s15
 8006712:	ee17 0a90 	vmov	r0, s15
 8006716:	f7f9 ff17 	bl	8000548 <__aeabi_f2d>
 800671a:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 800671e:	4b2c      	ldr	r3, [pc, #176]	; (80067d0 <calculate_torque+0xd0>)
 8006720:	f7f9 ff6a 	bl	80005f8 <__aeabi_dmul>
 8006724:	4602      	mov	r2, r0
 8006726:	460b      	mov	r3, r1
 8006728:	4610      	mov	r0, r2
 800672a:	4619      	mov	r1, r3
 800672c:	a326      	add	r3, pc, #152	; (adr r3, 80067c8 <calculate_torque+0xc8>)
 800672e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006732:	f7f9 fdab 	bl	800028c <__adddf3>
 8006736:	4602      	mov	r2, r0
 8006738:	460b      	mov	r3, r1
 800673a:	4610      	mov	r0, r2
 800673c:	4619      	mov	r1, r3
 800673e:	f04f 0200 	mov.w	r2, #0
 8006742:	4b24      	ldr	r3, [pc, #144]	; (80067d4 <calculate_torque+0xd4>)
 8006744:	f7fa f882 	bl	800084c <__aeabi_ddiv>
 8006748:	4602      	mov	r2, r0
 800674a:	460b      	mov	r3, r1
 800674c:	4610      	mov	r0, r2
 800674e:	4619      	mov	r1, r3
 8006750:	f04f 0200 	mov.w	r2, #0
 8006754:	4b20      	ldr	r3, [pc, #128]	; (80067d8 <calculate_torque+0xd8>)
 8006756:	f7f9 ff4f 	bl	80005f8 <__aeabi_dmul>
 800675a:	4602      	mov	r2, r0
 800675c:	460b      	mov	r3, r1
 800675e:	4610      	mov	r0, r2
 8006760:	4619      	mov	r1, r3
 8006762:	f7fa fa41 	bl	8000be8 <__aeabi_d2f>
 8006766:	4603      	mov	r3, r0
 8006768:	60fb      	str	r3, [r7, #12]
    LIMIT_MIN_MAX(y,-16000,16000);
 800676a:	edd7 7a03 	vldr	s15, [r7, #12]
 800676e:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 80067dc <calculate_torque+0xdc>
 8006772:	eef4 7ac7 	vcmpe.f32	s15, s14
 8006776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800677a:	d801      	bhi.n	8006780 <calculate_torque+0x80>
 800677c:	4b18      	ldr	r3, [pc, #96]	; (80067e0 <calculate_torque+0xe0>)
 800677e:	e00b      	b.n	8006798 <calculate_torque+0x98>
 8006780:	edd7 7a03 	vldr	s15, [r7, #12]
 8006784:	ed9f 7a17 	vldr	s14, [pc, #92]	; 80067e4 <calculate_torque+0xe4>
 8006788:	eef4 7ac7 	vcmpe.f32	s15, s14
 800678c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006790:	db01      	blt.n	8006796 <calculate_torque+0x96>
 8006792:	4b15      	ldr	r3, [pc, #84]	; (80067e8 <calculate_torque+0xe8>)
 8006794:	e000      	b.n	8006798 <calculate_torque+0x98>
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	60fb      	str	r3, [r7, #12]

    // Preserve the original sign of x
    if (x < 0) {
 800679a:	edd7 7a01 	vldr	s15, [r7, #4]
 800679e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80067a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80067a6:	d505      	bpl.n	80067b4 <calculate_torque+0xb4>
        y = -y;
 80067a8:	edd7 7a03 	vldr	s15, [r7, #12]
 80067ac:	eef1 7a67 	vneg.f32	s15, s15
 80067b0:	edc7 7a03 	vstr	s15, [r7, #12]
    }

    return y;
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	ee07 3a90 	vmov	s15, r3
}
 80067ba:	eeb0 0a67 	vmov.f32	s0, s15
 80067be:	3710      	adds	r7, #16
 80067c0:	46bd      	mov	sp, r7
 80067c2:	bd80      	pop	{r7, pc}
 80067c4:	f3af 8000 	nop.w
 80067c8:	9999999a 	.word	0x9999999a
 80067cc:	3fb99999 	.word	0x3fb99999
 80067d0:	3ff33333 	.word	0x3ff33333
 80067d4:	40080000 	.word	0x40080000
 80067d8:	40cf4000 	.word	0x40cf4000
 80067dc:	c67a0000 	.word	0xc67a0000
 80067e0:	c67a0000 	.word	0xc67a0000
 80067e4:	467a0000 	.word	0x467a0000
 80067e8:	467a0000 	.word	0x467a0000
 80067ec:	00000000 	.word	0x00000000

080067f0 <leg_control>:



void leg_control(leg_move_t *leg_move_update) {
 80067f0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80067f4:	b082      	sub	sp, #8
 80067f6:	af00      	add	r7, sp, #0
 80067f8:	6078      	str	r0, [r7, #4]

	leg_move_update->joint_motor[0].angle = can_motors[4].angle_data.adj_ang;// R1
 80067fa:	4bd9      	ldr	r3, [pc, #868]	; (8006b60 <leg_control+0x370>)
 80067fc:	f203 438c 	addw	r3, r3, #1164	; 0x48c
 8006800:	681a      	ldr	r2, [r3, #0]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	605a      	str	r2, [r3, #4]
	leg_move_update->joint_motor[1].angle = can_motors[5].angle_data.adj_ang;//R2
 8006806:	4bd6      	ldr	r3, [pc, #856]	; (8006b60 <leg_control+0x370>)
 8006808:	f203 537c 	addw	r3, r3, #1404	; 0x57c
 800680c:	681a      	ldr	r2, [r3, #0]
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	615a      	str	r2, [r3, #20]
	leg_move_update->joint_motor[2].angle = can_motors[6].angle_data.adj_ang;//L2
 8006812:	4bd3      	ldr	r3, [pc, #844]	; (8006b60 <leg_control+0x370>)
 8006814:	f203 636c 	addw	r3, r3, #1644	; 0x66c
 8006818:	681a      	ldr	r2, [r3, #0]
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	625a      	str	r2, [r3, #36]	; 0x24
	leg_move_update->joint_motor[3].angle = can_motors[7].angle_data.adj_ang+PI;//L1
 800681e:	4bd0      	ldr	r3, [pc, #832]	; (8006b60 <leg_control+0x370>)
 8006820:	f203 735c 	addw	r3, r3, #1884	; 0x75c
 8006824:	edd3 7a00 	vldr	s15, [r3]
 8006828:	ed9f 7ace 	vldr	s14, [pc, #824]	; 8006b64 <leg_control+0x374>
 800682c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34


	//left and right leg height// todo:find average
	leg_move_update->yR1 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[0].angle),2))-l2*sin(leg_move_update->joint_motor[0].angle));//0 3
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	685b      	ldr	r3, [r3, #4]
 800683a:	4618      	mov	r0, r3
 800683c:	f7f9 fe84 	bl	8000548 <__aeabi_f2d>
 8006840:	4602      	mov	r2, r0
 8006842:	460b      	mov	r3, r1
 8006844:	ec43 2b10 	vmov	d0, r2, r3
 8006848:	f01d fcfa 	bl	8024240 <cos>
 800684c:	ec51 0b10 	vmov	r0, r1, d0
 8006850:	a3bb      	add	r3, pc, #748	; (adr r3, 8006b40 <leg_control+0x350>)
 8006852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006856:	f7f9 fecf 	bl	80005f8 <__aeabi_dmul>
 800685a:	4602      	mov	r2, r0
 800685c:	460b      	mov	r3, r1
 800685e:	a1ba      	add	r1, pc, #744	; (adr r1, 8006b48 <leg_control+0x358>)
 8006860:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006864:	f7f9 fd10 	bl	8000288 <__aeabi_dsub>
 8006868:	4602      	mov	r2, r0
 800686a:	460b      	mov	r3, r1
 800686c:	ec43 2b17 	vmov	d7, r2, r3
 8006870:	ed9f 1bb7 	vldr	d1, [pc, #732]	; 8006b50 <leg_control+0x360>
 8006874:	eeb0 0a47 	vmov.f32	s0, s14
 8006878:	eef0 0a67 	vmov.f32	s1, s15
 800687c:	f01d fe4e 	bl	802451c <pow>
 8006880:	ec53 2b10 	vmov	r2, r3, d0
 8006884:	a1b4      	add	r1, pc, #720	; (adr r1, 8006b58 <leg_control+0x368>)
 8006886:	e9d1 0100 	ldrd	r0, r1, [r1]
 800688a:	f7f9 fcfd 	bl	8000288 <__aeabi_dsub>
 800688e:	4602      	mov	r2, r0
 8006890:	460b      	mov	r3, r1
 8006892:	ec43 2b17 	vmov	d7, r2, r3
 8006896:	eeb0 0a47 	vmov.f32	s0, s14
 800689a:	eef0 0a67 	vmov.f32	s1, s15
 800689e:	f01d fead 	bl	80245fc <sqrt>
 80068a2:	ec5b ab10 	vmov	sl, fp, d0
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	685b      	ldr	r3, [r3, #4]
 80068aa:	4618      	mov	r0, r3
 80068ac:	f7f9 fe4c 	bl	8000548 <__aeabi_f2d>
 80068b0:	4602      	mov	r2, r0
 80068b2:	460b      	mov	r3, r1
 80068b4:	ec43 2b10 	vmov	d0, r2, r3
 80068b8:	f01d fda2 	bl	8024400 <sin>
 80068bc:	ec51 0b10 	vmov	r0, r1, d0
 80068c0:	a39f      	add	r3, pc, #636	; (adr r3, 8006b40 <leg_control+0x350>)
 80068c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068c6:	f7f9 fe97 	bl	80005f8 <__aeabi_dmul>
 80068ca:	4602      	mov	r2, r0
 80068cc:	460b      	mov	r3, r1
 80068ce:	4650      	mov	r0, sl
 80068d0:	4659      	mov	r1, fp
 80068d2:	f7f9 fcd9 	bl	8000288 <__aeabi_dsub>
 80068d6:	4602      	mov	r2, r0
 80068d8:	460b      	mov	r3, r1
 80068da:	4610      	mov	r0, r2
 80068dc:	4619      	mov	r1, r3
 80068de:	f7fa f983 	bl	8000be8 <__aeabi_d2f>
 80068e2:	4602      	mov	r2, r0
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	655a      	str	r2, [r3, #84]	; 0x54
	leg_move_update->yR2 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[1].angle),2))-l2*sin(-1*leg_move_update->joint_motor[1].angle));//0 3
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	695b      	ldr	r3, [r3, #20]
 80068ec:	4618      	mov	r0, r3
 80068ee:	f7f9 fe2b 	bl	8000548 <__aeabi_f2d>
 80068f2:	4602      	mov	r2, r0
 80068f4:	460b      	mov	r3, r1
 80068f6:	ec43 2b10 	vmov	d0, r2, r3
 80068fa:	f01d fca1 	bl	8024240 <cos>
 80068fe:	ec51 0b10 	vmov	r0, r1, d0
 8006902:	a38f      	add	r3, pc, #572	; (adr r3, 8006b40 <leg_control+0x350>)
 8006904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006908:	f7f9 fe76 	bl	80005f8 <__aeabi_dmul>
 800690c:	4602      	mov	r2, r0
 800690e:	460b      	mov	r3, r1
 8006910:	a18d      	add	r1, pc, #564	; (adr r1, 8006b48 <leg_control+0x358>)
 8006912:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006916:	f7f9 fcb7 	bl	8000288 <__aeabi_dsub>
 800691a:	4602      	mov	r2, r0
 800691c:	460b      	mov	r3, r1
 800691e:	ec43 2b17 	vmov	d7, r2, r3
 8006922:	ed9f 1b8b 	vldr	d1, [pc, #556]	; 8006b50 <leg_control+0x360>
 8006926:	eeb0 0a47 	vmov.f32	s0, s14
 800692a:	eef0 0a67 	vmov.f32	s1, s15
 800692e:	f01d fdf5 	bl	802451c <pow>
 8006932:	ec53 2b10 	vmov	r2, r3, d0
 8006936:	a188      	add	r1, pc, #544	; (adr r1, 8006b58 <leg_control+0x368>)
 8006938:	e9d1 0100 	ldrd	r0, r1, [r1]
 800693c:	f7f9 fca4 	bl	8000288 <__aeabi_dsub>
 8006940:	4602      	mov	r2, r0
 8006942:	460b      	mov	r3, r1
 8006944:	ec43 2b17 	vmov	d7, r2, r3
 8006948:	eeb0 0a47 	vmov.f32	s0, s14
 800694c:	eef0 0a67 	vmov.f32	s1, s15
 8006950:	f01d fe54 	bl	80245fc <sqrt>
 8006954:	ec5b ab10 	vmov	sl, fp, d0
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	695b      	ldr	r3, [r3, #20]
 800695c:	4618      	mov	r0, r3
 800695e:	f7f9 fdf3 	bl	8000548 <__aeabi_f2d>
 8006962:	4602      	mov	r2, r0
 8006964:	460b      	mov	r3, r1
 8006966:	ec43 2b10 	vmov	d0, r2, r3
 800696a:	f01d fd49 	bl	8024400 <sin>
 800696e:	ec51 0b10 	vmov	r0, r1, d0
 8006972:	a373      	add	r3, pc, #460	; (adr r3, 8006b40 <leg_control+0x350>)
 8006974:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006978:	f7f9 fe3e 	bl	80005f8 <__aeabi_dmul>
 800697c:	4602      	mov	r2, r0
 800697e:	460b      	mov	r3, r1
 8006980:	4650      	mov	r0, sl
 8006982:	4659      	mov	r1, fp
 8006984:	f7f9 fc82 	bl	800028c <__adddf3>
 8006988:	4602      	mov	r2, r0
 800698a:	460b      	mov	r3, r1
 800698c:	4610      	mov	r0, r2
 800698e:	4619      	mov	r1, r3
 8006990:	f7fa f92a 	bl	8000be8 <__aeabi_d2f>
 8006994:	4602      	mov	r2, r0
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	659a      	str	r2, [r3, #88]	; 0x58
//	leg_move_update->yR = (leg_move_update->yR2+leg_move_update->yR1)/2;
	leg_move_update->yL2 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[2].angle),2))-l2*sin(leg_move_update->joint_motor[2].angle));// 0 3
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800699e:	4618      	mov	r0, r3
 80069a0:	f7f9 fdd2 	bl	8000548 <__aeabi_f2d>
 80069a4:	4602      	mov	r2, r0
 80069a6:	460b      	mov	r3, r1
 80069a8:	ec43 2b10 	vmov	d0, r2, r3
 80069ac:	f01d fc48 	bl	8024240 <cos>
 80069b0:	ec51 0b10 	vmov	r0, r1, d0
 80069b4:	a362      	add	r3, pc, #392	; (adr r3, 8006b40 <leg_control+0x350>)
 80069b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069ba:	f7f9 fe1d 	bl	80005f8 <__aeabi_dmul>
 80069be:	4602      	mov	r2, r0
 80069c0:	460b      	mov	r3, r1
 80069c2:	a161      	add	r1, pc, #388	; (adr r1, 8006b48 <leg_control+0x358>)
 80069c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80069c8:	f7f9 fc5e 	bl	8000288 <__aeabi_dsub>
 80069cc:	4602      	mov	r2, r0
 80069ce:	460b      	mov	r3, r1
 80069d0:	ec43 2b17 	vmov	d7, r2, r3
 80069d4:	ed9f 1b5e 	vldr	d1, [pc, #376]	; 8006b50 <leg_control+0x360>
 80069d8:	eeb0 0a47 	vmov.f32	s0, s14
 80069dc:	eef0 0a67 	vmov.f32	s1, s15
 80069e0:	f01d fd9c 	bl	802451c <pow>
 80069e4:	ec53 2b10 	vmov	r2, r3, d0
 80069e8:	a15b      	add	r1, pc, #364	; (adr r1, 8006b58 <leg_control+0x368>)
 80069ea:	e9d1 0100 	ldrd	r0, r1, [r1]
 80069ee:	f7f9 fc4b 	bl	8000288 <__aeabi_dsub>
 80069f2:	4602      	mov	r2, r0
 80069f4:	460b      	mov	r3, r1
 80069f6:	ec43 2b17 	vmov	d7, r2, r3
 80069fa:	eeb0 0a47 	vmov.f32	s0, s14
 80069fe:	eef0 0a67 	vmov.f32	s1, s15
 8006a02:	f01d fdfb 	bl	80245fc <sqrt>
 8006a06:	ec5b ab10 	vmov	sl, fp, d0
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a0e:	4618      	mov	r0, r3
 8006a10:	f7f9 fd9a 	bl	8000548 <__aeabi_f2d>
 8006a14:	4602      	mov	r2, r0
 8006a16:	460b      	mov	r3, r1
 8006a18:	ec43 2b10 	vmov	d0, r2, r3
 8006a1c:	f01d fcf0 	bl	8024400 <sin>
 8006a20:	ec51 0b10 	vmov	r0, r1, d0
 8006a24:	a346      	add	r3, pc, #280	; (adr r3, 8006b40 <leg_control+0x350>)
 8006a26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a2a:	f7f9 fde5 	bl	80005f8 <__aeabi_dmul>
 8006a2e:	4602      	mov	r2, r0
 8006a30:	460b      	mov	r3, r1
 8006a32:	4650      	mov	r0, sl
 8006a34:	4659      	mov	r1, fp
 8006a36:	f7f9 fc27 	bl	8000288 <__aeabi_dsub>
 8006a3a:	4602      	mov	r2, r0
 8006a3c:	460b      	mov	r3, r1
 8006a3e:	4610      	mov	r0, r2
 8006a40:	4619      	mov	r1, r3
 8006a42:	f7fa f8d1 	bl	8000be8 <__aeabi_d2f>
 8006a46:	4602      	mov	r2, r0
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	64da      	str	r2, [r3, #76]	; 0x4c
	leg_move_update->yL1 = (sqrt(pow(l3,2)-pow(l1-l2*cos(leg_move_update->joint_motor[3].angle),2))-l2*sin(-1*leg_move_update->joint_motor[3].angle));// 0 3
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006a50:	4618      	mov	r0, r3
 8006a52:	f7f9 fd79 	bl	8000548 <__aeabi_f2d>
 8006a56:	4602      	mov	r2, r0
 8006a58:	460b      	mov	r3, r1
 8006a5a:	ec43 2b10 	vmov	d0, r2, r3
 8006a5e:	f01d fbef 	bl	8024240 <cos>
 8006a62:	ec51 0b10 	vmov	r0, r1, d0
 8006a66:	a336      	add	r3, pc, #216	; (adr r3, 8006b40 <leg_control+0x350>)
 8006a68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a6c:	f7f9 fdc4 	bl	80005f8 <__aeabi_dmul>
 8006a70:	4602      	mov	r2, r0
 8006a72:	460b      	mov	r3, r1
 8006a74:	a134      	add	r1, pc, #208	; (adr r1, 8006b48 <leg_control+0x358>)
 8006a76:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006a7a:	f7f9 fc05 	bl	8000288 <__aeabi_dsub>
 8006a7e:	4602      	mov	r2, r0
 8006a80:	460b      	mov	r3, r1
 8006a82:	ec43 2b17 	vmov	d7, r2, r3
 8006a86:	ed9f 1b32 	vldr	d1, [pc, #200]	; 8006b50 <leg_control+0x360>
 8006a8a:	eeb0 0a47 	vmov.f32	s0, s14
 8006a8e:	eef0 0a67 	vmov.f32	s1, s15
 8006a92:	f01d fd43 	bl	802451c <pow>
 8006a96:	ec53 2b10 	vmov	r2, r3, d0
 8006a9a:	a12f      	add	r1, pc, #188	; (adr r1, 8006b58 <leg_control+0x368>)
 8006a9c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006aa0:	f7f9 fbf2 	bl	8000288 <__aeabi_dsub>
 8006aa4:	4602      	mov	r2, r0
 8006aa6:	460b      	mov	r3, r1
 8006aa8:	ec43 2b17 	vmov	d7, r2, r3
 8006aac:	eeb0 0a47 	vmov.f32	s0, s14
 8006ab0:	eef0 0a67 	vmov.f32	s1, s15
 8006ab4:	f01d fda2 	bl	80245fc <sqrt>
 8006ab8:	ec5b ab10 	vmov	sl, fp, d0
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	f7f9 fd41 	bl	8000548 <__aeabi_f2d>
 8006ac6:	4602      	mov	r2, r0
 8006ac8:	460b      	mov	r3, r1
 8006aca:	ec43 2b10 	vmov	d0, r2, r3
 8006ace:	f01d fc97 	bl	8024400 <sin>
 8006ad2:	ec51 0b10 	vmov	r0, r1, d0
 8006ad6:	a31a      	add	r3, pc, #104	; (adr r3, 8006b40 <leg_control+0x350>)
 8006ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006adc:	f7f9 fd8c 	bl	80005f8 <__aeabi_dmul>
 8006ae0:	4602      	mov	r2, r0
 8006ae2:	460b      	mov	r3, r1
 8006ae4:	4650      	mov	r0, sl
 8006ae6:	4659      	mov	r1, fp
 8006ae8:	f7f9 fbd0 	bl	800028c <__adddf3>
 8006aec:	4602      	mov	r2, r0
 8006aee:	460b      	mov	r3, r1
 8006af0:	4610      	mov	r0, r2
 8006af2:	4619      	mov	r1, r3
 8006af4:	f7fa f878 	bl	8000be8 <__aeabi_d2f>
 8006af8:	4602      	mov	r2, r0
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	649a      	str	r2, [r3, #72]	; 0x48
//	leg_move_update->yL = (leg_move_update->yL2+leg_move_update->yL1)/2;
//	leg_move_update->y  = (leg_move_update->yR +leg_move_update->yL)/2;

	// acc of Z-axis
	leg_move_update->z_accel = imu_data.accel_data.az;
 8006afe:	4b1a      	ldr	r3, [pc, #104]	; (8006b68 <leg_control+0x378>)
 8006b00:	699a      	ldr	r2, [r3, #24]
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	65da      	str	r2, [r3, #92]	; 0x5c

	//末端执行力系数
	leg_move_update->vyR1 =-(l1-l2*cos(-1*leg_move_update->joint_motor[0].angle))*l2*sin(-1*leg_move_update->joint_motor[0].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[0].angle),2))-l2*cos(-1*leg_move_update->joint_motor[0].angle);// 0 3
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	edd3 7a01 	vldr	s15, [r3, #4]
 8006b0c:	eef1 7a67 	vneg.f32	s15, s15
 8006b10:	ee17 3a90 	vmov	r3, s15
 8006b14:	4618      	mov	r0, r3
 8006b16:	f7f9 fd17 	bl	8000548 <__aeabi_f2d>
 8006b1a:	4602      	mov	r2, r0
 8006b1c:	460b      	mov	r3, r1
 8006b1e:	ec43 2b10 	vmov	d0, r2, r3
 8006b22:	f01d fb8d 	bl	8024240 <cos>
 8006b26:	ec51 0b10 	vmov	r0, r1, d0
 8006b2a:	a305      	add	r3, pc, #20	; (adr r3, 8006b40 <leg_control+0x350>)
 8006b2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b30:	f7f9 fd62 	bl	80005f8 <__aeabi_dmul>
 8006b34:	4602      	mov	r2, r0
 8006b36:	460b      	mov	r3, r1
 8006b38:	e018      	b.n	8006b6c <leg_control+0x37c>
 8006b3a:	bf00      	nop
 8006b3c:	f3af 8000 	nop.w
 8006b40:	47ae147b 	.word	0x47ae147b
 8006b44:	3fb47ae1 	.word	0x3fb47ae1
 8006b48:	9999999a 	.word	0x9999999a
 8006b4c:	3fa99999 	.word	0x3fa99999
 8006b50:	00000000 	.word	0x00000000
 8006b54:	40000000 	.word	0x40000000
 8006b58:	eb1c432d 	.word	0xeb1c432d
 8006b5c:	3f9a36e2 	.word	0x3f9a36e2
 8006b60:	200018a8 	.word	0x200018a8
 8006b64:	40490fdb 	.word	0x40490fdb
 8006b68:	20000394 	.word	0x20000394
 8006b6c:	f20f 4138 	addw	r1, pc, #1080	; 0x438
 8006b70:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006b74:	f7f9 fb88 	bl	8000288 <__aeabi_dsub>
 8006b78:	4602      	mov	r2, r0
 8006b7a:	460b      	mov	r3, r1
 8006b7c:	4690      	mov	r8, r2
 8006b7e:	f083 4900 	eor.w	r9, r3, #2147483648	; 0x80000000
 8006b82:	f20f 432c 	addw	r3, pc, #1068	; 0x42c
 8006b86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b8a:	4640      	mov	r0, r8
 8006b8c:	4649      	mov	r1, r9
 8006b8e:	f7f9 fd33 	bl	80005f8 <__aeabi_dmul>
 8006b92:	4602      	mov	r2, r0
 8006b94:	460b      	mov	r3, r1
 8006b96:	4690      	mov	r8, r2
 8006b98:	4699      	mov	r9, r3
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	edd3 7a01 	vldr	s15, [r3, #4]
 8006ba0:	eef1 7a67 	vneg.f32	s15, s15
 8006ba4:	ee17 3a90 	vmov	r3, s15
 8006ba8:	4618      	mov	r0, r3
 8006baa:	f7f9 fccd 	bl	8000548 <__aeabi_f2d>
 8006bae:	4602      	mov	r2, r0
 8006bb0:	460b      	mov	r3, r1
 8006bb2:	ec43 2b10 	vmov	d0, r2, r3
 8006bb6:	f01d fc23 	bl	8024400 <sin>
 8006bba:	ec53 2b10 	vmov	r2, r3, d0
 8006bbe:	4640      	mov	r0, r8
 8006bc0:	4649      	mov	r1, r9
 8006bc2:	f7f9 fd19 	bl	80005f8 <__aeabi_dmul>
 8006bc6:	4602      	mov	r2, r0
 8006bc8:	460b      	mov	r3, r1
 8006bca:	4690      	mov	r8, r2
 8006bcc:	4699      	mov	r9, r3
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	edd3 7a01 	vldr	s15, [r3, #4]
 8006bd4:	eef1 7a67 	vneg.f32	s15, s15
 8006bd8:	ee17 3a90 	vmov	r3, s15
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f7f9 fcb3 	bl	8000548 <__aeabi_f2d>
 8006be2:	4602      	mov	r2, r0
 8006be4:	460b      	mov	r3, r1
 8006be6:	ec43 2b10 	vmov	d0, r2, r3
 8006bea:	f01d fb29 	bl	8024240 <cos>
 8006bee:	ec51 0b10 	vmov	r0, r1, d0
 8006bf2:	a3ef      	add	r3, pc, #956	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006bf8:	f7f9 fcfe 	bl	80005f8 <__aeabi_dmul>
 8006bfc:	4602      	mov	r2, r0
 8006bfe:	460b      	mov	r3, r1
 8006c00:	a1e9      	add	r1, pc, #932	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006c02:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006c06:	f7f9 fb3f 	bl	8000288 <__aeabi_dsub>
 8006c0a:	4602      	mov	r2, r0
 8006c0c:	460b      	mov	r3, r1
 8006c0e:	ec43 2b17 	vmov	d7, r2, r3
 8006c12:	ed9f 1be3 	vldr	d1, [pc, #908]	; 8006fa0 <leg_control+0x7b0>
 8006c16:	eeb0 0a47 	vmov.f32	s0, s14
 8006c1a:	eef0 0a67 	vmov.f32	s1, s15
 8006c1e:	f01d fc7d 	bl	802451c <pow>
 8006c22:	ec53 2b10 	vmov	r2, r3, d0
 8006c26:	a1e4      	add	r1, pc, #912	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006c28:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006c2c:	f7f9 fb2c 	bl	8000288 <__aeabi_dsub>
 8006c30:	4602      	mov	r2, r0
 8006c32:	460b      	mov	r3, r1
 8006c34:	ec43 2b17 	vmov	d7, r2, r3
 8006c38:	eeb0 0a47 	vmov.f32	s0, s14
 8006c3c:	eef0 0a67 	vmov.f32	s1, s15
 8006c40:	f01d fcdc 	bl	80245fc <sqrt>
 8006c44:	ec53 2b10 	vmov	r2, r3, d0
 8006c48:	4640      	mov	r0, r8
 8006c4a:	4649      	mov	r1, r9
 8006c4c:	f7f9 fdfe 	bl	800084c <__aeabi_ddiv>
 8006c50:	4602      	mov	r2, r0
 8006c52:	460b      	mov	r3, r1
 8006c54:	4690      	mov	r8, r2
 8006c56:	4699      	mov	r9, r3
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	edd3 7a01 	vldr	s15, [r3, #4]
 8006c5e:	eef1 7a67 	vneg.f32	s15, s15
 8006c62:	ee17 3a90 	vmov	r3, s15
 8006c66:	4618      	mov	r0, r3
 8006c68:	f7f9 fc6e 	bl	8000548 <__aeabi_f2d>
 8006c6c:	4602      	mov	r2, r0
 8006c6e:	460b      	mov	r3, r1
 8006c70:	ec43 2b10 	vmov	d0, r2, r3
 8006c74:	f01d fae4 	bl	8024240 <cos>
 8006c78:	ec51 0b10 	vmov	r0, r1, d0
 8006c7c:	a3cc      	add	r3, pc, #816	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c82:	f7f9 fcb9 	bl	80005f8 <__aeabi_dmul>
 8006c86:	4602      	mov	r2, r0
 8006c88:	460b      	mov	r3, r1
 8006c8a:	4640      	mov	r0, r8
 8006c8c:	4649      	mov	r1, r9
 8006c8e:	f7f9 fafb 	bl	8000288 <__aeabi_dsub>
 8006c92:	4602      	mov	r2, r0
 8006c94:	460b      	mov	r3, r1
 8006c96:	4610      	mov	r0, r2
 8006c98:	4619      	mov	r1, r3
 8006c9a:	f7f9 ffa5 	bl	8000be8 <__aeabi_d2f>
 8006c9e:	4602      	mov	r2, r0
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	675a      	str	r2, [r3, #116]	; 0x74
	leg_move_update->vyR2 = (l1-l2*cos(-1*leg_move_update->joint_motor[1].angle))*l2*sin(-1*leg_move_update->joint_motor[1].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[1].angle),2))-l2*cos(-1*leg_move_update->joint_motor[1].angle);// 0 3
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	edd3 7a05 	vldr	s15, [r3, #20]
 8006caa:	eef1 7a67 	vneg.f32	s15, s15
 8006cae:	ee17 3a90 	vmov	r3, s15
 8006cb2:	4618      	mov	r0, r3
 8006cb4:	f7f9 fc48 	bl	8000548 <__aeabi_f2d>
 8006cb8:	4602      	mov	r2, r0
 8006cba:	460b      	mov	r3, r1
 8006cbc:	ec43 2b10 	vmov	d0, r2, r3
 8006cc0:	f01d fabe 	bl	8024240 <cos>
 8006cc4:	ec51 0b10 	vmov	r0, r1, d0
 8006cc8:	a3b9      	add	r3, pc, #740	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cce:	f7f9 fc93 	bl	80005f8 <__aeabi_dmul>
 8006cd2:	4602      	mov	r2, r0
 8006cd4:	460b      	mov	r3, r1
 8006cd6:	a1b4      	add	r1, pc, #720	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006cd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006cdc:	f7f9 fad4 	bl	8000288 <__aeabi_dsub>
 8006ce0:	4602      	mov	r2, r0
 8006ce2:	460b      	mov	r3, r1
 8006ce4:	4610      	mov	r0, r2
 8006ce6:	4619      	mov	r1, r3
 8006ce8:	a3b1      	add	r3, pc, #708	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006cea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cee:	f7f9 fc83 	bl	80005f8 <__aeabi_dmul>
 8006cf2:	4602      	mov	r2, r0
 8006cf4:	460b      	mov	r3, r1
 8006cf6:	4690      	mov	r8, r2
 8006cf8:	4699      	mov	r9, r3
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	edd3 7a05 	vldr	s15, [r3, #20]
 8006d00:	eef1 7a67 	vneg.f32	s15, s15
 8006d04:	ee17 3a90 	vmov	r3, s15
 8006d08:	4618      	mov	r0, r3
 8006d0a:	f7f9 fc1d 	bl	8000548 <__aeabi_f2d>
 8006d0e:	4602      	mov	r2, r0
 8006d10:	460b      	mov	r3, r1
 8006d12:	ec43 2b10 	vmov	d0, r2, r3
 8006d16:	f01d fb73 	bl	8024400 <sin>
 8006d1a:	ec53 2b10 	vmov	r2, r3, d0
 8006d1e:	4640      	mov	r0, r8
 8006d20:	4649      	mov	r1, r9
 8006d22:	f7f9 fc69 	bl	80005f8 <__aeabi_dmul>
 8006d26:	4602      	mov	r2, r0
 8006d28:	460b      	mov	r3, r1
 8006d2a:	4690      	mov	r8, r2
 8006d2c:	4699      	mov	r9, r3
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	edd3 7a05 	vldr	s15, [r3, #20]
 8006d34:	eef1 7a67 	vneg.f32	s15, s15
 8006d38:	ee17 3a90 	vmov	r3, s15
 8006d3c:	4618      	mov	r0, r3
 8006d3e:	f7f9 fc03 	bl	8000548 <__aeabi_f2d>
 8006d42:	4602      	mov	r2, r0
 8006d44:	460b      	mov	r3, r1
 8006d46:	ec43 2b10 	vmov	d0, r2, r3
 8006d4a:	f01d fa79 	bl	8024240 <cos>
 8006d4e:	ec51 0b10 	vmov	r0, r1, d0
 8006d52:	a397      	add	r3, pc, #604	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006d54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d58:	f7f9 fc4e 	bl	80005f8 <__aeabi_dmul>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	460b      	mov	r3, r1
 8006d60:	a191      	add	r1, pc, #580	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006d62:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006d66:	f7f9 fa8f 	bl	8000288 <__aeabi_dsub>
 8006d6a:	4602      	mov	r2, r0
 8006d6c:	460b      	mov	r3, r1
 8006d6e:	ec43 2b17 	vmov	d7, r2, r3
 8006d72:	ed9f 1b8b 	vldr	d1, [pc, #556]	; 8006fa0 <leg_control+0x7b0>
 8006d76:	eeb0 0a47 	vmov.f32	s0, s14
 8006d7a:	eef0 0a67 	vmov.f32	s1, s15
 8006d7e:	f01d fbcd 	bl	802451c <pow>
 8006d82:	ec53 2b10 	vmov	r2, r3, d0
 8006d86:	a18c      	add	r1, pc, #560	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006d88:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006d8c:	f7f9 fa7c 	bl	8000288 <__aeabi_dsub>
 8006d90:	4602      	mov	r2, r0
 8006d92:	460b      	mov	r3, r1
 8006d94:	ec43 2b17 	vmov	d7, r2, r3
 8006d98:	eeb0 0a47 	vmov.f32	s0, s14
 8006d9c:	eef0 0a67 	vmov.f32	s1, s15
 8006da0:	f01d fc2c 	bl	80245fc <sqrt>
 8006da4:	ec53 2b10 	vmov	r2, r3, d0
 8006da8:	4640      	mov	r0, r8
 8006daa:	4649      	mov	r1, r9
 8006dac:	f7f9 fd4e 	bl	800084c <__aeabi_ddiv>
 8006db0:	4602      	mov	r2, r0
 8006db2:	460b      	mov	r3, r1
 8006db4:	4690      	mov	r8, r2
 8006db6:	4699      	mov	r9, r3
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	edd3 7a05 	vldr	s15, [r3, #20]
 8006dbe:	eef1 7a67 	vneg.f32	s15, s15
 8006dc2:	ee17 3a90 	vmov	r3, s15
 8006dc6:	4618      	mov	r0, r3
 8006dc8:	f7f9 fbbe 	bl	8000548 <__aeabi_f2d>
 8006dcc:	4602      	mov	r2, r0
 8006dce:	460b      	mov	r3, r1
 8006dd0:	ec43 2b10 	vmov	d0, r2, r3
 8006dd4:	f01d fa34 	bl	8024240 <cos>
 8006dd8:	ec51 0b10 	vmov	r0, r1, d0
 8006ddc:	a374      	add	r3, pc, #464	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006dde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006de2:	f7f9 fc09 	bl	80005f8 <__aeabi_dmul>
 8006de6:	4602      	mov	r2, r0
 8006de8:	460b      	mov	r3, r1
 8006dea:	4640      	mov	r0, r8
 8006dec:	4649      	mov	r1, r9
 8006dee:	f7f9 fa4b 	bl	8000288 <__aeabi_dsub>
 8006df2:	4602      	mov	r2, r0
 8006df4:	460b      	mov	r3, r1
 8006df6:	4610      	mov	r0, r2
 8006df8:	4619      	mov	r1, r3
 8006dfa:	f7f9 fef5 	bl	8000be8 <__aeabi_d2f>
 8006dfe:	4602      	mov	r2, r0
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	671a      	str	r2, [r3, #112]	; 0x70
//	leg_move_update ->vyR = (leg_move_update->vyR1-leg_move_update->vyR2)/2;
	leg_move_update->vyL2 = -(l1-l2*cos(-1*leg_move_update->joint_motor[2].angle))*l2*sin(-1*leg_move_update->joint_motor[2].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[2].angle),2))-l2*cos(-1*leg_move_update->joint_motor[2].angle);
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e0a:	eef1 7a67 	vneg.f32	s15, s15
 8006e0e:	ee17 3a90 	vmov	r3, s15
 8006e12:	4618      	mov	r0, r3
 8006e14:	f7f9 fb98 	bl	8000548 <__aeabi_f2d>
 8006e18:	4602      	mov	r2, r0
 8006e1a:	460b      	mov	r3, r1
 8006e1c:	ec43 2b10 	vmov	d0, r2, r3
 8006e20:	f01d fa0e 	bl	8024240 <cos>
 8006e24:	ec51 0b10 	vmov	r0, r1, d0
 8006e28:	a361      	add	r3, pc, #388	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e2e:	f7f9 fbe3 	bl	80005f8 <__aeabi_dmul>
 8006e32:	4602      	mov	r2, r0
 8006e34:	460b      	mov	r3, r1
 8006e36:	a15c      	add	r1, pc, #368	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006e38:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006e3c:	f7f9 fa24 	bl	8000288 <__aeabi_dsub>
 8006e40:	4602      	mov	r2, r0
 8006e42:	460b      	mov	r3, r1
 8006e44:	4614      	mov	r4, r2
 8006e46:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8006e4a:	a359      	add	r3, pc, #356	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006e4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e50:	4620      	mov	r0, r4
 8006e52:	4629      	mov	r1, r5
 8006e54:	f7f9 fbd0 	bl	80005f8 <__aeabi_dmul>
 8006e58:	4602      	mov	r2, r0
 8006e5a:	460b      	mov	r3, r1
 8006e5c:	4614      	mov	r4, r2
 8006e5e:	461d      	mov	r5, r3
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e66:	eef1 7a67 	vneg.f32	s15, s15
 8006e6a:	ee17 3a90 	vmov	r3, s15
 8006e6e:	4618      	mov	r0, r3
 8006e70:	f7f9 fb6a 	bl	8000548 <__aeabi_f2d>
 8006e74:	4602      	mov	r2, r0
 8006e76:	460b      	mov	r3, r1
 8006e78:	ec43 2b10 	vmov	d0, r2, r3
 8006e7c:	f01d fac0 	bl	8024400 <sin>
 8006e80:	ec53 2b10 	vmov	r2, r3, d0
 8006e84:	4620      	mov	r0, r4
 8006e86:	4629      	mov	r1, r5
 8006e88:	f7f9 fbb6 	bl	80005f8 <__aeabi_dmul>
 8006e8c:	4602      	mov	r2, r0
 8006e8e:	460b      	mov	r3, r1
 8006e90:	4614      	mov	r4, r2
 8006e92:	461d      	mov	r5, r3
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006e9a:	eef1 7a67 	vneg.f32	s15, s15
 8006e9e:	ee17 3a90 	vmov	r3, s15
 8006ea2:	4618      	mov	r0, r3
 8006ea4:	f7f9 fb50 	bl	8000548 <__aeabi_f2d>
 8006ea8:	4602      	mov	r2, r0
 8006eaa:	460b      	mov	r3, r1
 8006eac:	ec43 2b10 	vmov	d0, r2, r3
 8006eb0:	f01d f9c6 	bl	8024240 <cos>
 8006eb4:	ec51 0b10 	vmov	r0, r1, d0
 8006eb8:	a33d      	add	r3, pc, #244	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006eba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ebe:	f7f9 fb9b 	bl	80005f8 <__aeabi_dmul>
 8006ec2:	4602      	mov	r2, r0
 8006ec4:	460b      	mov	r3, r1
 8006ec6:	a138      	add	r1, pc, #224	; (adr r1, 8006fa8 <leg_control+0x7b8>)
 8006ec8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ecc:	f7f9 f9dc 	bl	8000288 <__aeabi_dsub>
 8006ed0:	4602      	mov	r2, r0
 8006ed2:	460b      	mov	r3, r1
 8006ed4:	ec43 2b17 	vmov	d7, r2, r3
 8006ed8:	ed9f 1b31 	vldr	d1, [pc, #196]	; 8006fa0 <leg_control+0x7b0>
 8006edc:	eeb0 0a47 	vmov.f32	s0, s14
 8006ee0:	eef0 0a67 	vmov.f32	s1, s15
 8006ee4:	f01d fb1a 	bl	802451c <pow>
 8006ee8:	ec53 2b10 	vmov	r2, r3, d0
 8006eec:	a132      	add	r1, pc, #200	; (adr r1, 8006fb8 <leg_control+0x7c8>)
 8006eee:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006ef2:	f7f9 f9c9 	bl	8000288 <__aeabi_dsub>
 8006ef6:	4602      	mov	r2, r0
 8006ef8:	460b      	mov	r3, r1
 8006efa:	ec43 2b17 	vmov	d7, r2, r3
 8006efe:	eeb0 0a47 	vmov.f32	s0, s14
 8006f02:	eef0 0a67 	vmov.f32	s1, s15
 8006f06:	f01d fb79 	bl	80245fc <sqrt>
 8006f0a:	ec53 2b10 	vmov	r2, r3, d0
 8006f0e:	4620      	mov	r0, r4
 8006f10:	4629      	mov	r1, r5
 8006f12:	f7f9 fc9b 	bl	800084c <__aeabi_ddiv>
 8006f16:	4602      	mov	r2, r0
 8006f18:	460b      	mov	r3, r1
 8006f1a:	4614      	mov	r4, r2
 8006f1c:	461d      	mov	r5, r3
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8006f24:	eef1 7a67 	vneg.f32	s15, s15
 8006f28:	ee17 3a90 	vmov	r3, s15
 8006f2c:	4618      	mov	r0, r3
 8006f2e:	f7f9 fb0b 	bl	8000548 <__aeabi_f2d>
 8006f32:	4602      	mov	r2, r0
 8006f34:	460b      	mov	r3, r1
 8006f36:	ec43 2b10 	vmov	d0, r2, r3
 8006f3a:	f01d f981 	bl	8024240 <cos>
 8006f3e:	ec51 0b10 	vmov	r0, r1, d0
 8006f42:	a31b      	add	r3, pc, #108	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f48:	f7f9 fb56 	bl	80005f8 <__aeabi_dmul>
 8006f4c:	4602      	mov	r2, r0
 8006f4e:	460b      	mov	r3, r1
 8006f50:	4620      	mov	r0, r4
 8006f52:	4629      	mov	r1, r5
 8006f54:	f7f9 f998 	bl	8000288 <__aeabi_dsub>
 8006f58:	4602      	mov	r2, r0
 8006f5a:	460b      	mov	r3, r1
 8006f5c:	4610      	mov	r0, r2
 8006f5e:	4619      	mov	r1, r3
 8006f60:	f7f9 fe42 	bl	8000be8 <__aeabi_d2f>
 8006f64:	4602      	mov	r2, r0
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	669a      	str	r2, [r3, #104]	; 0x68
	leg_move_update->vyL1 = (l1-l2*cos(-1*leg_move_update->joint_motor[3].angle))*l2*sin(-1*leg_move_update->joint_motor[3].angle)/sqrt(pow(l3,2)-pow(l1-l2*cos(-1*leg_move_update->joint_motor[3].angle),2))-l2*cos(-1*leg_move_update->joint_motor[3].angle);
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8006f70:	eef1 7a67 	vneg.f32	s15, s15
 8006f74:	ee17 3a90 	vmov	r3, s15
 8006f78:	4618      	mov	r0, r3
 8006f7a:	f7f9 fae5 	bl	8000548 <__aeabi_f2d>
 8006f7e:	4602      	mov	r2, r0
 8006f80:	460b      	mov	r3, r1
 8006f82:	ec43 2b10 	vmov	d0, r2, r3
 8006f86:	f01d f95b 	bl	8024240 <cos>
 8006f8a:	ec51 0b10 	vmov	r0, r1, d0
 8006f8e:	a308      	add	r3, pc, #32	; (adr r3, 8006fb0 <leg_control+0x7c0>)
 8006f90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f94:	f7f9 fb30 	bl	80005f8 <__aeabi_dmul>
 8006f98:	4602      	mov	r2, r0
 8006f9a:	460b      	mov	r3, r1
 8006f9c:	e010      	b.n	8006fc0 <leg_control+0x7d0>
 8006f9e:	bf00      	nop
 8006fa0:	00000000 	.word	0x00000000
 8006fa4:	40000000 	.word	0x40000000
 8006fa8:	9999999a 	.word	0x9999999a
 8006fac:	3fa99999 	.word	0x3fa99999
 8006fb0:	47ae147b 	.word	0x47ae147b
 8006fb4:	3fb47ae1 	.word	0x3fb47ae1
 8006fb8:	eb1c432d 	.word	0xeb1c432d
 8006fbc:	3f9a36e2 	.word	0x3f9a36e2
 8006fc0:	a19f      	add	r1, pc, #636	; (adr r1, 8007240 <leg_control+0xa50>)
 8006fc2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006fc6:	f7f9 f95f 	bl	8000288 <__aeabi_dsub>
 8006fca:	4602      	mov	r2, r0
 8006fcc:	460b      	mov	r3, r1
 8006fce:	4610      	mov	r0, r2
 8006fd0:	4619      	mov	r1, r3
 8006fd2:	a39d      	add	r3, pc, #628	; (adr r3, 8007248 <leg_control+0xa58>)
 8006fd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fd8:	f7f9 fb0e 	bl	80005f8 <__aeabi_dmul>
 8006fdc:	4602      	mov	r2, r0
 8006fde:	460b      	mov	r3, r1
 8006fe0:	4614      	mov	r4, r2
 8006fe2:	461d      	mov	r5, r3
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 8006fea:	eef1 7a67 	vneg.f32	s15, s15
 8006fee:	ee17 3a90 	vmov	r3, s15
 8006ff2:	4618      	mov	r0, r3
 8006ff4:	f7f9 faa8 	bl	8000548 <__aeabi_f2d>
 8006ff8:	4602      	mov	r2, r0
 8006ffa:	460b      	mov	r3, r1
 8006ffc:	ec43 2b10 	vmov	d0, r2, r3
 8007000:	f01d f9fe 	bl	8024400 <sin>
 8007004:	ec53 2b10 	vmov	r2, r3, d0
 8007008:	4620      	mov	r0, r4
 800700a:	4629      	mov	r1, r5
 800700c:	f7f9 faf4 	bl	80005f8 <__aeabi_dmul>
 8007010:	4602      	mov	r2, r0
 8007012:	460b      	mov	r3, r1
 8007014:	4614      	mov	r4, r2
 8007016:	461d      	mov	r5, r3
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800701e:	eef1 7a67 	vneg.f32	s15, s15
 8007022:	ee17 3a90 	vmov	r3, s15
 8007026:	4618      	mov	r0, r3
 8007028:	f7f9 fa8e 	bl	8000548 <__aeabi_f2d>
 800702c:	4602      	mov	r2, r0
 800702e:	460b      	mov	r3, r1
 8007030:	ec43 2b10 	vmov	d0, r2, r3
 8007034:	f01d f904 	bl	8024240 <cos>
 8007038:	ec51 0b10 	vmov	r0, r1, d0
 800703c:	a382      	add	r3, pc, #520	; (adr r3, 8007248 <leg_control+0xa58>)
 800703e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007042:	f7f9 fad9 	bl	80005f8 <__aeabi_dmul>
 8007046:	4602      	mov	r2, r0
 8007048:	460b      	mov	r3, r1
 800704a:	a17d      	add	r1, pc, #500	; (adr r1, 8007240 <leg_control+0xa50>)
 800704c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007050:	f7f9 f91a 	bl	8000288 <__aeabi_dsub>
 8007054:	4602      	mov	r2, r0
 8007056:	460b      	mov	r3, r1
 8007058:	ec43 2b17 	vmov	d7, r2, r3
 800705c:	ed9f 1b74 	vldr	d1, [pc, #464]	; 8007230 <leg_control+0xa40>
 8007060:	eeb0 0a47 	vmov.f32	s0, s14
 8007064:	eef0 0a67 	vmov.f32	s1, s15
 8007068:	f01d fa58 	bl	802451c <pow>
 800706c:	ec53 2b10 	vmov	r2, r3, d0
 8007070:	a177      	add	r1, pc, #476	; (adr r1, 8007250 <leg_control+0xa60>)
 8007072:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007076:	f7f9 f907 	bl	8000288 <__aeabi_dsub>
 800707a:	4602      	mov	r2, r0
 800707c:	460b      	mov	r3, r1
 800707e:	ec43 2b17 	vmov	d7, r2, r3
 8007082:	eeb0 0a47 	vmov.f32	s0, s14
 8007086:	eef0 0a67 	vmov.f32	s1, s15
 800708a:	f01d fab7 	bl	80245fc <sqrt>
 800708e:	ec53 2b10 	vmov	r2, r3, d0
 8007092:	4620      	mov	r0, r4
 8007094:	4629      	mov	r1, r5
 8007096:	f7f9 fbd9 	bl	800084c <__aeabi_ddiv>
 800709a:	4602      	mov	r2, r0
 800709c:	460b      	mov	r3, r1
 800709e:	4614      	mov	r4, r2
 80070a0:	461d      	mov	r5, r3
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 80070a8:	eef1 7a67 	vneg.f32	s15, s15
 80070ac:	ee17 3a90 	vmov	r3, s15
 80070b0:	4618      	mov	r0, r3
 80070b2:	f7f9 fa49 	bl	8000548 <__aeabi_f2d>
 80070b6:	4602      	mov	r2, r0
 80070b8:	460b      	mov	r3, r1
 80070ba:	ec43 2b10 	vmov	d0, r2, r3
 80070be:	f01d f8bf 	bl	8024240 <cos>
 80070c2:	ec51 0b10 	vmov	r0, r1, d0
 80070c6:	a360      	add	r3, pc, #384	; (adr r3, 8007248 <leg_control+0xa58>)
 80070c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070cc:	f7f9 fa94 	bl	80005f8 <__aeabi_dmul>
 80070d0:	4602      	mov	r2, r0
 80070d2:	460b      	mov	r3, r1
 80070d4:	4620      	mov	r0, r4
 80070d6:	4629      	mov	r1, r5
 80070d8:	f7f9 f8d6 	bl	8000288 <__aeabi_dsub>
 80070dc:	4602      	mov	r2, r0
 80070de:	460b      	mov	r3, r1
 80070e0:	4610      	mov	r0, r2
 80070e2:	4619      	mov	r1, r3
 80070e4:	f7f9 fd80 	bl	8000be8 <__aeabi_d2f>
 80070e8:	4602      	mov	r2, r0
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	665a      	str	r2, [r3, #100]	; 0x64
//	leg_move_update->vyL = (-leg_move_update->vyL1+leg_move_update->vyL2)/2;
//	//	Z-axis speed
	leg_move_update->vyspeedR2  =  leg_move_update->yR2/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070f2:	4618      	mov	r0, r3
 80070f4:	f7f9 fa28 	bl	8000548 <__aeabi_f2d>
 80070f8:	a357      	add	r3, pc, #348	; (adr r3, 8007258 <leg_control+0xa68>)
 80070fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070fe:	f7f9 fba5 	bl	800084c <__aeabi_ddiv>
 8007102:	4602      	mov	r2, r0
 8007104:	460b      	mov	r3, r1
 8007106:	4610      	mov	r0, r2
 8007108:	4619      	mov	r1, r3
 800710a:	f7f9 fd6d 	bl	8000be8 <__aeabi_d2f>
 800710e:	4602      	mov	r2, r0
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	679a      	str	r2, [r3, #120]	; 0x78
	leg_move_update->vyspeedR1  =  leg_move_update->yR1/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007118:	4618      	mov	r0, r3
 800711a:	f7f9 fa15 	bl	8000548 <__aeabi_f2d>
 800711e:	a34e      	add	r3, pc, #312	; (adr r3, 8007258 <leg_control+0xa68>)
 8007120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007124:	f7f9 fb92 	bl	800084c <__aeabi_ddiv>
 8007128:	4602      	mov	r2, r0
 800712a:	460b      	mov	r3, r1
 800712c:	4610      	mov	r0, r2
 800712e:	4619      	mov	r1, r3
 8007130:	f7f9 fd5a 	bl	8000be8 <__aeabi_d2f>
 8007134:	4602      	mov	r2, r0
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	67da      	str	r2, [r3, #124]	; 0x7c
	leg_move_update->vyspeedL1  =  leg_move_update->yL1/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800713e:	4618      	mov	r0, r3
 8007140:	f7f9 fa02 	bl	8000548 <__aeabi_f2d>
 8007144:	a344      	add	r3, pc, #272	; (adr r3, 8007258 <leg_control+0xa68>)
 8007146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800714a:	f7f9 fb7f 	bl	800084c <__aeabi_ddiv>
 800714e:	4602      	mov	r2, r0
 8007150:	460b      	mov	r3, r1
 8007152:	4610      	mov	r0, r2
 8007154:	4619      	mov	r1, r3
 8007156:	f7f9 fd47 	bl	8000be8 <__aeabi_d2f>
 800715a:	4602      	mov	r2, r0
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	leg_move_update->vyspeedL2  =  leg_move_update->yL2/0.04;//imu_data.accel_data.az*contol time + 0;//leg_move_update->y_accel * JOINTMOTOR_CONTROL_TIME_S;
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007166:	4618      	mov	r0, r3
 8007168:	f7f9 f9ee 	bl	8000548 <__aeabi_f2d>
 800716c:	a33a      	add	r3, pc, #232	; (adr r3, 8007258 <leg_control+0xa68>)
 800716e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007172:	f7f9 fb6b 	bl	800084c <__aeabi_ddiv>
 8007176:	4602      	mov	r2, r0
 8007178:	460b      	mov	r3, r1
 800717a:	4610      	mov	r0, r2
 800717c:	4619      	mov	r1, r3
 800717e:	f7f9 fd33 	bl	8000be8 <__aeabi_d2f>
 8007182:	4602      	mov	r2, r0
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

	//chassis euler angle
	leg_move_update->chassis_yaw = imu_heading.yaw;
 800718a:	4b2b      	ldr	r3, [pc, #172]	; (8007238 <leg_control+0xa48>)
 800718c:	689a      	ldr	r2, [r3, #8]
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
	leg_move_update->chassis_pitch=imu_heading.pit;
 8007194:	4b28      	ldr	r3, [pc, #160]	; (8007238 <leg_control+0xa48>)
 8007196:	681a      	ldr	r2, [r3, #0]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
	leg_move_update->chassis_roll = imu_heading.rol;
 800719e:	4b26      	ldr	r3, [pc, #152]	; (8007238 <leg_control+0xa48>)
 80071a0:	685a      	ldr	r2, [r3, #4]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4

	// chassis angle speed
	leg_move_update->chassis_yaw_speed = (leg_move_update->chassis_yaw-leg_move_update->chassis_yaw_prev)/dt;
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	ed93 7a2f 	vldr	s14, [r3, #188]	; 0xbc
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	edd3 7a32 	vldr	s15, [r3, #200]	; 0xc8
 80071b4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071b8:	4b20      	ldr	r3, [pc, #128]	; (800723c <leg_control+0xa4c>)
 80071ba:	ed93 7a00 	vldr	s14, [r3]
 80071be:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	edc3 7a35 	vstr	s15, [r3, #212]	; 0xd4
	leg_move_update->chassis_pitch_speed =(leg_move_update->chassis_pitch-leg_move_update->chassis_pitch_prev)/dt;
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	ed93 7a30 	vldr	s14, [r3, #192]	; 0xc0
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	edd3 7a33 	vldr	s15, [r3, #204]	; 0xcc
 80071d4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071d8:	4b18      	ldr	r3, [pc, #96]	; (800723c <leg_control+0xa4c>)
 80071da:	ed93 7a00 	vldr	s14, [r3]
 80071de:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	edc3 7a36 	vstr	s15, [r3, #216]	; 0xd8
	leg_move_update->chassis_roll_speed = (leg_move_update->chassis_roll-leg_move_update->chassis_roll_prev)/dt;
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	ed93 7a31 	vldr	s14, [r3, #196]	; 0xc4
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	edd3 7a34 	vldr	s15, [r3, #208]	; 0xd0
 80071f4:	ee77 6a67 	vsub.f32	s13, s14, s15
 80071f8:	4b10      	ldr	r3, [pc, #64]	; (800723c <leg_control+0xa4c>)
 80071fa:	ed93 7a00 	vldr	s14, [r3]
 80071fe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	edc3 7a37 	vstr	s15, [r3, #220]	; 0xdc

	leg_move_update->chassis_yaw_prev = imu_heading.yaw;
 8007208:	4b0b      	ldr	r3, [pc, #44]	; (8007238 <leg_control+0xa48>)
 800720a:	689a      	ldr	r2, [r3, #8]
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
	leg_move_update ->chassis_pitch_prev =imu_heading.pit;
 8007212:	4b09      	ldr	r3, [pc, #36]	; (8007238 <leg_control+0xa48>)
 8007214:	681a      	ldr	r2, [r3, #0]
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	leg_move_update->chassis_roll_prev = imu_heading.rol;
 800721c:	4b06      	ldr	r3, [pc, #24]	; (8007238 <leg_control+0xa48>)
 800721e:	685a      	ldr	r2, [r3, #4]
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0



}
 8007226:	bf00      	nop
 8007228:	3708      	adds	r7, #8
 800722a:	46bd      	mov	sp, r7
 800722c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007230:	00000000 	.word	0x00000000
 8007234:	40000000 	.word	0x40000000
 8007238:	2000327c 	.word	0x2000327c
 800723c:	2000000c 	.word	0x2000000c
 8007240:	9999999a 	.word	0x9999999a
 8007244:	3fa99999 	.word	0x3fa99999
 8007248:	47ae147b 	.word	0x47ae147b
 800724c:	3fb47ae1 	.word	0x3fb47ae1
 8007250:	eb1c432d 	.word	0xeb1c432d
 8007254:	3f9a36e2 	.word	0x3f9a36e2
 8007258:	47ae147b 	.word	0x47ae147b
 800725c:	3fa47ae1 	.word	0x3fa47ae1

08007260 <joint_motor_send_can>:
void joint_motor_send_can (leg_move_t *leg_move, uint8_t id_one,uint8_t id_two,uint8_t id_three,uint8_t id_four) {
 8007260:	b580      	push	{r7, lr}
 8007262:	b08e      	sub	sp, #56	; 0x38
 8007264:	af00      	add	r7, sp, #0
 8007266:	6078      	str	r0, [r7, #4]
 8007268:	4608      	mov	r0, r1
 800726a:	4611      	mov	r1, r2
 800726c:	461a      	mov	r2, r3
 800726e:	4603      	mov	r3, r0
 8007270:	70fb      	strb	r3, [r7, #3]
 8007272:	460b      	mov	r3, r1
 8007274:	70bb      	strb	r3, [r7, #2]
 8007276:	4613      	mov	r3, r2
 8007278:	707b      	strb	r3, [r7, #1]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	uint32_t temp_checker = 0;
 800727a:	2300      	movs	r3, #0
 800727c:	637b      	str	r3, [r7, #52]	; 0x34
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 800727e:	2300      	movs	r3, #0
 8007280:	623b      	str	r3, [r7, #32]
	CAN_tx_message.RTR = CAN_RTR_DATA;
 8007282:	2300      	movs	r3, #0
 8007284:	627b      	str	r3, [r7, #36]	; 0x24
	CAN_tx_message.DLC = 0x08;
 8007286:	2308      	movs	r3, #8
 8007288:	62bb      	str	r3, [r7, #40]	; 0x28
	if (id_one < 25 && id_one > 0) {
 800728a:	78fb      	ldrb	r3, [r7, #3]
 800728c:	2b18      	cmp	r3, #24
 800728e:	d80b      	bhi.n	80072a8 <joint_motor_send_can+0x48>
 8007290:	78fb      	ldrb	r3, [r7, #3]
 8007292:	2b00      	cmp	r3, #0
 8007294:	d008      	beq.n	80072a8 <joint_motor_send_can+0x48>
		temp_checker = temp_checker | 1 << (id_one - 1);
 8007296:	78fb      	ldrb	r3, [r7, #3]
 8007298:	3b01      	subs	r3, #1
 800729a:	2201      	movs	r2, #1
 800729c:	fa02 f303 	lsl.w	r3, r2, r3
 80072a0:	461a      	mov	r2, r3
 80072a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80072a4:	4313      	orrs	r3, r2
 80072a6:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_two < 25 && id_two > 0) {
 80072a8:	78bb      	ldrb	r3, [r7, #2]
 80072aa:	2b18      	cmp	r3, #24
 80072ac:	d80b      	bhi.n	80072c6 <joint_motor_send_can+0x66>
 80072ae:	78bb      	ldrb	r3, [r7, #2]
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	d008      	beq.n	80072c6 <joint_motor_send_can+0x66>
		temp_checker = temp_checker | 1 << (id_two - 1);
 80072b4:	78bb      	ldrb	r3, [r7, #2]
 80072b6:	3b01      	subs	r3, #1
 80072b8:	2201      	movs	r2, #1
 80072ba:	fa02 f303 	lsl.w	r3, r2, r3
 80072be:	461a      	mov	r2, r3
 80072c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80072c2:	4313      	orrs	r3, r2
 80072c4:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_three < 25 && id_three > 0) {
 80072c6:	787b      	ldrb	r3, [r7, #1]
 80072c8:	2b18      	cmp	r3, #24
 80072ca:	d80b      	bhi.n	80072e4 <joint_motor_send_can+0x84>
 80072cc:	787b      	ldrb	r3, [r7, #1]
 80072ce:	2b00      	cmp	r3, #0
 80072d0:	d008      	beq.n	80072e4 <joint_motor_send_can+0x84>
		temp_checker = temp_checker | 1 << (id_three - 1);
 80072d2:	787b      	ldrb	r3, [r7, #1]
 80072d4:	3b01      	subs	r3, #1
 80072d6:	2201      	movs	r2, #1
 80072d8:	fa02 f303 	lsl.w	r3, r2, r3
 80072dc:	461a      	mov	r2, r3
 80072de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80072e0:	4313      	orrs	r3, r2
 80072e2:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_four < 25 && id_four > 0) {
 80072e4:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 80072e8:	2b18      	cmp	r3, #24
 80072ea:	d80d      	bhi.n	8007308 <joint_motor_send_can+0xa8>
 80072ec:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 80072f0:	2b00      	cmp	r3, #0
 80072f2:	d009      	beq.n	8007308 <joint_motor_send_can+0xa8>
		temp_checker = temp_checker | 1 << (id_four - 1);
 80072f4:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 80072f8:	3b01      	subs	r3, #1
 80072fa:	2201      	movs	r2, #1
 80072fc:	fa02 f303 	lsl.w	r3, r2, r3
 8007300:	461a      	mov	r2, r3
 8007302:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007304:	4313      	orrs	r3, r2
 8007306:	637b      	str	r3, [r7, #52]	; 0x34
	}


	if (temp_checker & 0x0000F0) {
 8007308:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800730a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800730e:	2b00      	cmp	r3, #0
 8007310:	d04f      	beq.n	80073b2 <joint_motor_send_can+0x152>
		CAN_tx_message.StdId = 0x1FF;
 8007312:	f240 13ff 	movw	r3, #511	; 0x1ff
 8007316:	61bb      	str	r3, [r7, #24]
		temp_converter = leg_move->joint_motor[0].torque_set;
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	edd3 7a02 	vldr	s15, [r3, #8]
 800731e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007322:	ee17 3a90 	vmov	r3, s15
 8007326:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 8007328:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800732c:	121b      	asrs	r3, r3, #8
 800732e:	b21b      	sxth	r3, r3
 8007330:	b2db      	uxtb	r3, r3
 8007332:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 8007334:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8007336:	b2db      	uxtb	r3, r3
 8007338:	747b      	strb	r3, [r7, #17]
		temp_converter = leg_move->joint_motor[1].torque_set;
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	edd3 7a06 	vldr	s15, [r3, #24]
 8007340:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007344:	ee17 3a90 	vmov	r3, s15
 8007348:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800734a:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800734e:	121b      	asrs	r3, r3, #8
 8007350:	b21b      	sxth	r3, r3
 8007352:	b2db      	uxtb	r3, r3
 8007354:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 8007356:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8007358:	b2db      	uxtb	r3, r3
 800735a:	74fb      	strb	r3, [r7, #19]
		temp_converter = leg_move->joint_motor[2].torque_set;
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8007362:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007366:	ee17 3a90 	vmov	r3, s15
 800736a:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800736c:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 8007370:	121b      	asrs	r3, r3, #8
 8007372:	b21b      	sxth	r3, r3
 8007374:	b2db      	uxtb	r3, r3
 8007376:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 8007378:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800737a:	b2db      	uxtb	r3, r3
 800737c:	757b      	strb	r3, [r7, #21]
		temp_converter = leg_move->joint_motor[3].torque_set;
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	edd3 7a0e 	vldr	s15, [r3, #56]	; 0x38
 8007384:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007388:	ee17 3a90 	vmov	r3, s15
 800738c:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800738e:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 8007392:	121b      	asrs	r3, r3, #8
 8007394:	b21b      	sxth	r3, r3
 8007396:	b2db      	uxtb	r3, r3
 8007398:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800739a:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800739c:	b2db      	uxtb	r3, r3
 800739e:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
 80073a0:	f107 030c 	add.w	r3, r7, #12
 80073a4:	f107 0210 	add.w	r2, r7, #16
 80073a8:	f107 0118 	add.w	r1, r7, #24
 80073ac:	4803      	ldr	r0, [pc, #12]	; (80073bc <joint_motor_send_can+0x15c>)
 80073ae:	f008 fe2b 	bl	8010008 <HAL_CAN_AddTxMessage>
	}
}
 80073b2:	bf00      	nop
 80073b4:	3738      	adds	r7, #56	; 0x38
 80073b6:	46bd      	mov	sp, r7
 80073b8:	bd80      	pop	{r7, pc}
 80073ba:	bf00      	nop
 80073bc:	20000434 	.word	0x20000434

080073c0 <jointmotor_control_loop>:
}


void jointmotor_control_loop(leg_move_t *leg_move_control_loop)

{
 80073c0:	b5b0      	push	{r4, r5, r7, lr}
 80073c2:	b082      	sub	sp, #8
 80073c4:	af00      	add	r7, sp, #0
 80073c6:	6078      	str	r0, [r7, #4]
	leg_move_control_loop->y_set = 0.2;
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	4adf      	ldr	r2, [pc, #892]	; (8007748 <jointmotor_control_loop+0x388>)
 80073cc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	//计算y方向和ROLL方向设定值与反馈值的偏差
	leg_move_control_loop->delta_yL1 = leg_move_control_loop->y_set - leg_move_control_loop->yL1;//leg_move_control_loop->y_set
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 80073dc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	edc3 7a27 	vstr	s15, [r3, #156]	; 0x9c
	leg_move_control_loop->delta_yL2 = leg_move_control_loop->y_set - leg_move_control_loop->yL2;
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 80073f2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	edc3 7a28 	vstr	s15, [r3, #160]	; 0xa0
	leg_move_control_loop->delta_yR1 = leg_move_control_loop->y_set - leg_move_control_loop->yR1;//leg_move_control_loop->y_set
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	edd3 7a15 	vldr	s15, [r3, #84]	; 0x54
 8007408:	ee77 7a67 	vsub.f32	s15, s14, s15
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	edc3 7a25 	vstr	s15, [r3, #148]	; 0x94
	leg_move_control_loop->delta_yR2 = leg_move_control_loop->y_set - leg_move_control_loop->yR2;
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	ed93 7a29 	vldr	s14, [r3, #164]	; 0xa4
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800741e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	edc3 7a26 	vstr	s15, [r3, #152]	; 0x98

	leg_move_control_loop->delta_roll = leg_move_control_loop->roll_set - leg_move_control_loop->chassis_roll;
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	ed93 7a2a 	vldr	s14, [r3, #168]	; 0xa8
 800742e:	687b      	ldr	r3, [r7, #4]
 8007430:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8007434:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	edc3 7a24 	vstr	s15, [r3, #144]	; 0x90

	//计算左腿和右腿的末端执行力
	leg_move_control_loop->FL1 = (KP_Y * leg_move_control_loop->delta_yL1 - KD_Y * leg_move_control_loop->vyspeedL1 + G)/2 + (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	edd3 7a27 	vldr	s15, [r3, #156]	; 0x9c
 8007444:	ed9f 7ac1 	vldr	s14, [pc, #772]	; 800774c <jointmotor_control_loop+0x38c>
 8007448:	ee27 7a87 	vmul.f32	s14, s15, s14
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	edd3 7a20 	vldr	s15, [r3, #128]	; 0x80
 8007452:	eddf 6abf 	vldr	s13, [pc, #764]	; 8007750 <jointmotor_control_loop+0x390>
 8007456:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800745a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800745e:	ee17 0a90 	vmov	r0, s15
 8007462:	f7f9 f871 	bl	8000548 <__aeabi_f2d>
 8007466:	a3b4      	add	r3, pc, #720	; (adr r3, 8007738 <jointmotor_control_loop+0x378>)
 8007468:	e9d3 2300 	ldrd	r2, r3, [r3]
 800746c:	f7f8 ff0e 	bl	800028c <__adddf3>
 8007470:	4602      	mov	r2, r0
 8007472:	460b      	mov	r3, r1
 8007474:	4610      	mov	r0, r2
 8007476:	4619      	mov	r1, r3
 8007478:	f04f 0200 	mov.w	r2, #0
 800747c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007480:	f7f9 f9e4 	bl	800084c <__aeabi_ddiv>
 8007484:	4602      	mov	r2, r0
 8007486:	460b      	mov	r3, r1
 8007488:	4614      	mov	r4, r2
 800748a:	461d      	mov	r5, r3
 800748c:	687b      	ldr	r3, [r7, #4]
 800748e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007492:	ed9f 7ab0 	vldr	s14, [pc, #704]	; 8007754 <jointmotor_control_loop+0x394>
 8007496:	ee27 7a87 	vmul.f32	s14, s15, s14
 800749a:	687b      	ldr	r3, [r7, #4]
 800749c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 80074a0:	eddf 6aac 	vldr	s13, [pc, #688]	; 8007754 <jointmotor_control_loop+0x394>
 80074a4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80074a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80074ac:	ee17 0a90 	vmov	r0, s15
 80074b0:	f7f9 f84a 	bl	8000548 <__aeabi_f2d>
 80074b4:	a3a2      	add	r3, pc, #648	; (adr r3, 8007740 <jointmotor_control_loop+0x380>)
 80074b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ba:	f7f9 f9c7 	bl	800084c <__aeabi_ddiv>
 80074be:	4602      	mov	r2, r0
 80074c0:	460b      	mov	r3, r1
 80074c2:	4620      	mov	r0, r4
 80074c4:	4629      	mov	r1, r5
 80074c6:	f7f8 fee1 	bl	800028c <__adddf3>
 80074ca:	4602      	mov	r2, r0
 80074cc:	460b      	mov	r3, r1
 80074ce:	4610      	mov	r0, r2
 80074d0:	4619      	mov	r1, r3
 80074d2:	f7f9 fb89 	bl	8000be8 <__aeabi_d2f>
 80074d6:	4602      	mov	r2, r0
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
	leg_move_control_loop->FL2 = (KP_Y * leg_move_control_loop->delta_yL2 - KD_Y * leg_move_control_loop->vyspeedL2 + G)/2 + (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	edd3 7a28 	vldr	s15, [r3, #160]	; 0xa0
 80074e4:	ed9f 7a99 	vldr	s14, [pc, #612]	; 800774c <jointmotor_control_loop+0x38c>
 80074e8:	ee27 7a87 	vmul.f32	s14, s15, s14
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	edd3 7a21 	vldr	s15, [r3, #132]	; 0x84
 80074f2:	eddf 6a97 	vldr	s13, [pc, #604]	; 8007750 <jointmotor_control_loop+0x390>
 80074f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80074fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80074fe:	ee17 0a90 	vmov	r0, s15
 8007502:	f7f9 f821 	bl	8000548 <__aeabi_f2d>
 8007506:	a38c      	add	r3, pc, #560	; (adr r3, 8007738 <jointmotor_control_loop+0x378>)
 8007508:	e9d3 2300 	ldrd	r2, r3, [r3]
 800750c:	f7f8 febe 	bl	800028c <__adddf3>
 8007510:	4602      	mov	r2, r0
 8007512:	460b      	mov	r3, r1
 8007514:	4610      	mov	r0, r2
 8007516:	4619      	mov	r1, r3
 8007518:	f04f 0200 	mov.w	r2, #0
 800751c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007520:	f7f9 f994 	bl	800084c <__aeabi_ddiv>
 8007524:	4602      	mov	r2, r0
 8007526:	460b      	mov	r3, r1
 8007528:	4614      	mov	r4, r2
 800752a:	461d      	mov	r5, r3
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007532:	ed9f 7a88 	vldr	s14, [pc, #544]	; 8007754 <jointmotor_control_loop+0x394>
 8007536:	ee27 7a87 	vmul.f32	s14, s15, s14
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8007540:	eddf 6a84 	vldr	s13, [pc, #528]	; 8007754 <jointmotor_control_loop+0x394>
 8007544:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007548:	ee77 7a67 	vsub.f32	s15, s14, s15
 800754c:	ee17 0a90 	vmov	r0, s15
 8007550:	f7f8 fffa 	bl	8000548 <__aeabi_f2d>
 8007554:	a37a      	add	r3, pc, #488	; (adr r3, 8007740 <jointmotor_control_loop+0x380>)
 8007556:	e9d3 2300 	ldrd	r2, r3, [r3]
 800755a:	f7f9 f977 	bl	800084c <__aeabi_ddiv>
 800755e:	4602      	mov	r2, r0
 8007560:	460b      	mov	r3, r1
 8007562:	4620      	mov	r0, r4
 8007564:	4629      	mov	r1, r5
 8007566:	f7f8 fe91 	bl	800028c <__adddf3>
 800756a:	4602      	mov	r2, r0
 800756c:	460b      	mov	r3, r1
 800756e:	4610      	mov	r0, r2
 8007570:	4619      	mov	r1, r3
 8007572:	f7f9 fb39 	bl	8000be8 <__aeabi_d2f>
 8007576:	4602      	mov	r2, r0
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

	leg_move_control_loop->FR1 = (KP_Y * leg_move_control_loop->delta_yR1 - KD_Y * leg_move_control_loop->vyspeedR1 + G)/2 - (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	edd3 7a25 	vldr	s15, [r3, #148]	; 0x94
 8007584:	ed9f 7a71 	vldr	s14, [pc, #452]	; 800774c <jointmotor_control_loop+0x38c>
 8007588:	ee27 7a87 	vmul.f32	s14, s15, s14
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	edd3 7a1f 	vldr	s15, [r3, #124]	; 0x7c
 8007592:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8007750 <jointmotor_control_loop+0x390>
 8007596:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800759a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800759e:	ee17 0a90 	vmov	r0, s15
 80075a2:	f7f8 ffd1 	bl	8000548 <__aeabi_f2d>
 80075a6:	a364      	add	r3, pc, #400	; (adr r3, 8007738 <jointmotor_control_loop+0x378>)
 80075a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075ac:	f7f8 fe6e 	bl	800028c <__adddf3>
 80075b0:	4602      	mov	r2, r0
 80075b2:	460b      	mov	r3, r1
 80075b4:	4610      	mov	r0, r2
 80075b6:	4619      	mov	r1, r3
 80075b8:	f04f 0200 	mov.w	r2, #0
 80075bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80075c0:	f7f9 f944 	bl	800084c <__aeabi_ddiv>
 80075c4:	4602      	mov	r2, r0
 80075c6:	460b      	mov	r3, r1
 80075c8:	4614      	mov	r4, r2
 80075ca:	461d      	mov	r5, r3
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 80075d2:	ed9f 7a60 	vldr	s14, [pc, #384]	; 8007754 <jointmotor_control_loop+0x394>
 80075d6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 80075e0:	eddf 6a5c 	vldr	s13, [pc, #368]	; 8007754 <jointmotor_control_loop+0x394>
 80075e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80075e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80075ec:	ee17 0a90 	vmov	r0, s15
 80075f0:	f7f8 ffaa 	bl	8000548 <__aeabi_f2d>
 80075f4:	a352      	add	r3, pc, #328	; (adr r3, 8007740 <jointmotor_control_loop+0x380>)
 80075f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075fa:	f7f9 f927 	bl	800084c <__aeabi_ddiv>
 80075fe:	4602      	mov	r2, r0
 8007600:	460b      	mov	r3, r1
 8007602:	4620      	mov	r0, r4
 8007604:	4629      	mov	r1, r5
 8007606:	f7f8 fe3f 	bl	8000288 <__aeabi_dsub>
 800760a:	4602      	mov	r2, r0
 800760c:	460b      	mov	r3, r1
 800760e:	4610      	mov	r0, r2
 8007610:	4619      	mov	r1, r3
 8007612:	f7f9 fae9 	bl	8000be8 <__aeabi_d2f>
 8007616:	4602      	mov	r2, r0
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
	leg_move_control_loop->FR2 = (KP_Y * leg_move_control_loop->delta_yR2 - KD_Y * leg_move_control_loop->vyspeedR2 + G)/2 - (KP_ROLL * leg_move_control_loop->delta_roll - KD_ROLL * leg_move_control_loop->chassis_roll_speed)/D;
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	edd3 7a26 	vldr	s15, [r3, #152]	; 0x98
 8007624:	ed9f 7a49 	vldr	s14, [pc, #292]	; 800774c <jointmotor_control_loop+0x38c>
 8007628:	ee27 7a87 	vmul.f32	s14, s15, s14
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	edd3 7a1e 	vldr	s15, [r3, #120]	; 0x78
 8007632:	eddf 6a47 	vldr	s13, [pc, #284]	; 8007750 <jointmotor_control_loop+0x390>
 8007636:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800763a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800763e:	ee17 0a90 	vmov	r0, s15
 8007642:	f7f8 ff81 	bl	8000548 <__aeabi_f2d>
 8007646:	a33c      	add	r3, pc, #240	; (adr r3, 8007738 <jointmotor_control_loop+0x378>)
 8007648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800764c:	f7f8 fe1e 	bl	800028c <__adddf3>
 8007650:	4602      	mov	r2, r0
 8007652:	460b      	mov	r3, r1
 8007654:	4610      	mov	r0, r2
 8007656:	4619      	mov	r1, r3
 8007658:	f04f 0200 	mov.w	r2, #0
 800765c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007660:	f7f9 f8f4 	bl	800084c <__aeabi_ddiv>
 8007664:	4602      	mov	r2, r0
 8007666:	460b      	mov	r3, r1
 8007668:	4614      	mov	r4, r2
 800766a:	461d      	mov	r5, r3
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	edd3 7a24 	vldr	s15, [r3, #144]	; 0x90
 8007672:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8007754 <jointmotor_control_loop+0x394>
 8007676:	ee27 7a87 	vmul.f32	s14, s15, s14
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	edd3 7a37 	vldr	s15, [r3, #220]	; 0xdc
 8007680:	eddf 6a34 	vldr	s13, [pc, #208]	; 8007754 <jointmotor_control_loop+0x394>
 8007684:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007688:	ee77 7a67 	vsub.f32	s15, s14, s15
 800768c:	ee17 0a90 	vmov	r0, s15
 8007690:	f7f8 ff5a 	bl	8000548 <__aeabi_f2d>
 8007694:	a32a      	add	r3, pc, #168	; (adr r3, 8007740 <jointmotor_control_loop+0x380>)
 8007696:	e9d3 2300 	ldrd	r2, r3, [r3]
 800769a:	f7f9 f8d7 	bl	800084c <__aeabi_ddiv>
 800769e:	4602      	mov	r2, r0
 80076a0:	460b      	mov	r3, r1
 80076a2:	4620      	mov	r0, r4
 80076a4:	4629      	mov	r1, r5
 80076a6:	f7f8 fdef 	bl	8000288 <__aeabi_dsub>
 80076aa:	4602      	mov	r2, r0
 80076ac:	460b      	mov	r3, r1
 80076ae:	4610      	mov	r0, r2
 80076b0:	4619      	mov	r1, r3
 80076b2:	f7f9 fa99 	bl	8000be8 <__aeabi_d2f>
 80076b6:	4602      	mov	r2, r0
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8

	//计算每个关节电机的控制力矩
	leg_move_control_loop->joint_motor[1].torque_set = calculate_torque(0.5*leg_move_control_loop->FR2*leg_move_control_loop->vyR2);//R2
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80076c4:	4618      	mov	r0, r3
 80076c6:	f7f8 ff3f 	bl	8000548 <__aeabi_f2d>
 80076ca:	f04f 0200 	mov.w	r2, #0
 80076ce:	4b22      	ldr	r3, [pc, #136]	; (8007758 <jointmotor_control_loop+0x398>)
 80076d0:	f7f8 ff92 	bl	80005f8 <__aeabi_dmul>
 80076d4:	4602      	mov	r2, r0
 80076d6:	460b      	mov	r3, r1
 80076d8:	4614      	mov	r4, r2
 80076da:	461d      	mov	r5, r3
 80076dc:	687b      	ldr	r3, [r7, #4]
 80076de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076e0:	4618      	mov	r0, r3
 80076e2:	f7f8 ff31 	bl	8000548 <__aeabi_f2d>
 80076e6:	4602      	mov	r2, r0
 80076e8:	460b      	mov	r3, r1
 80076ea:	4620      	mov	r0, r4
 80076ec:	4629      	mov	r1, r5
 80076ee:	f7f8 ff83 	bl	80005f8 <__aeabi_dmul>
 80076f2:	4602      	mov	r2, r0
 80076f4:	460b      	mov	r3, r1
 80076f6:	4610      	mov	r0, r2
 80076f8:	4619      	mov	r1, r3
 80076fa:	f7f9 fa75 	bl	8000be8 <__aeabi_d2f>
 80076fe:	4603      	mov	r3, r0
 8007700:	ee00 3a10 	vmov	s0, r3
 8007704:	f7fe fffc 	bl	8006700 <calculate_torque>
 8007708:	eef0 7a40 	vmov.f32	s15, s0
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	edc3 7a06 	vstr	s15, [r3, #24]
	leg_move_control_loop->joint_motor[0].torque_set = calculate_torque(-0.5*leg_move_control_loop->FR1*leg_move_control_loop->vyR1);//R1
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007718:	4618      	mov	r0, r3
 800771a:	f7f8 ff15 	bl	8000548 <__aeabi_f2d>
 800771e:	f04f 0200 	mov.w	r2, #0
 8007722:	4b0e      	ldr	r3, [pc, #56]	; (800775c <jointmotor_control_loop+0x39c>)
 8007724:	f7f8 ff68 	bl	80005f8 <__aeabi_dmul>
 8007728:	4602      	mov	r2, r0
 800772a:	460b      	mov	r3, r1
 800772c:	4614      	mov	r4, r2
 800772e:	461d      	mov	r5, r3
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007734:	e014      	b.n	8007760 <jointmotor_control_loop+0x3a0>
 8007736:	bf00      	nop
 8007738:	66666666 	.word	0x66666666
 800773c:	404d6666 	.word	0x404d6666
 8007740:	66666666 	.word	0x66666666
 8007744:	3fd66666 	.word	0x3fd66666
 8007748:	3e4ccccd 	.word	0x3e4ccccd
 800774c:	447a0000 	.word	0x447a0000
 8007750:	43c80000 	.word	0x43c80000
 8007754:	00000000 	.word	0x00000000
 8007758:	3fe00000 	.word	0x3fe00000
 800775c:	bfe00000 	.word	0xbfe00000
 8007760:	4618      	mov	r0, r3
 8007762:	f7f8 fef1 	bl	8000548 <__aeabi_f2d>
 8007766:	4602      	mov	r2, r0
 8007768:	460b      	mov	r3, r1
 800776a:	4620      	mov	r0, r4
 800776c:	4629      	mov	r1, r5
 800776e:	f7f8 ff43 	bl	80005f8 <__aeabi_dmul>
 8007772:	4602      	mov	r2, r0
 8007774:	460b      	mov	r3, r1
 8007776:	4610      	mov	r0, r2
 8007778:	4619      	mov	r1, r3
 800777a:	f7f9 fa35 	bl	8000be8 <__aeabi_d2f>
 800777e:	4603      	mov	r3, r0
 8007780:	ee00 3a10 	vmov	s0, r3
 8007784:	f7fe ffbc 	bl	8006700 <calculate_torque>
 8007788:	eef0 7a40 	vmov.f32	s15, s0
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	edc3 7a02 	vstr	s15, [r3, #8]

	leg_move_control_loop->joint_motor[2].torque_set = calculate_torque(0.5*leg_move_control_loop->FL2*leg_move_control_loop->vyL2);//L2
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8007798:	4618      	mov	r0, r3
 800779a:	f7f8 fed5 	bl	8000548 <__aeabi_f2d>
 800779e:	f04f 0200 	mov.w	r2, #0
 80077a2:	4b32      	ldr	r3, [pc, #200]	; (800786c <jointmotor_control_loop+0x4ac>)
 80077a4:	f7f8 ff28 	bl	80005f8 <__aeabi_dmul>
 80077a8:	4602      	mov	r2, r0
 80077aa:	460b      	mov	r3, r1
 80077ac:	4614      	mov	r4, r2
 80077ae:	461d      	mov	r5, r3
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80077b4:	4618      	mov	r0, r3
 80077b6:	f7f8 fec7 	bl	8000548 <__aeabi_f2d>
 80077ba:	4602      	mov	r2, r0
 80077bc:	460b      	mov	r3, r1
 80077be:	4620      	mov	r0, r4
 80077c0:	4629      	mov	r1, r5
 80077c2:	f7f8 ff19 	bl	80005f8 <__aeabi_dmul>
 80077c6:	4602      	mov	r2, r0
 80077c8:	460b      	mov	r3, r1
 80077ca:	4610      	mov	r0, r2
 80077cc:	4619      	mov	r1, r3
 80077ce:	f7f9 fa0b 	bl	8000be8 <__aeabi_d2f>
 80077d2:	4603      	mov	r3, r0
 80077d4:	ee00 3a10 	vmov	s0, r3
 80077d8:	f7fe ff92 	bl	8006700 <calculate_torque>
 80077dc:	eef0 7a40 	vmov.f32	s15, s0
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
	leg_move_control_loop->joint_motor[3].torque_set = calculate_torque(-0.5*leg_move_control_loop->FL1*leg_move_control_loop->vyL1);//L1
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80077ec:	4618      	mov	r0, r3
 80077ee:	f7f8 feab 	bl	8000548 <__aeabi_f2d>
 80077f2:	f04f 0200 	mov.w	r2, #0
 80077f6:	4b1e      	ldr	r3, [pc, #120]	; (8007870 <jointmotor_control_loop+0x4b0>)
 80077f8:	f7f8 fefe 	bl	80005f8 <__aeabi_dmul>
 80077fc:	4602      	mov	r2, r0
 80077fe:	460b      	mov	r3, r1
 8007800:	4614      	mov	r4, r2
 8007802:	461d      	mov	r5, r3
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007808:	4618      	mov	r0, r3
 800780a:	f7f8 fe9d 	bl	8000548 <__aeabi_f2d>
 800780e:	4602      	mov	r2, r0
 8007810:	460b      	mov	r3, r1
 8007812:	4620      	mov	r0, r4
 8007814:	4629      	mov	r1, r5
 8007816:	f7f8 feef 	bl	80005f8 <__aeabi_dmul>
 800781a:	4602      	mov	r2, r0
 800781c:	460b      	mov	r3, r1
 800781e:	4610      	mov	r0, r2
 8007820:	4619      	mov	r1, r3
 8007822:	f7f9 f9e1 	bl	8000be8 <__aeabi_d2f>
 8007826:	4603      	mov	r3, r0
 8007828:	ee00 3a10 	vmov	s0, r3
 800782c:	f7fe ff68 	bl	8006700 <calculate_torque>
 8007830:	eef0 7a40 	vmov.f32	s15, s0
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38


	leg_move_control_loop->joint_motor[0].raw_angle = can_motors[4].raw_data.angle[0];
 800783a:	4b0e      	ldr	r3, [pc, #56]	; (8007874 <jointmotor_control_loop+0x4b4>)
 800783c:	f9b3 23c4 	ldrsh.w	r2, [r3, #964]	; 0x3c4
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	805a      	strh	r2, [r3, #2]
	leg_move_control_loop->joint_motor[1].raw_angle = can_motors[5].raw_data.angle[0];
 8007844:	4b0b      	ldr	r3, [pc, #44]	; (8007874 <jointmotor_control_loop+0x4b4>)
 8007846:	f9b3 24b4 	ldrsh.w	r2, [r3, #1204]	; 0x4b4
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	825a      	strh	r2, [r3, #18]
	leg_move_control_loop->joint_motor[2].raw_angle = can_motors[6].raw_data.angle[0];
 800784e:	4b09      	ldr	r3, [pc, #36]	; (8007874 <jointmotor_control_loop+0x4b4>)
 8007850:	f9b3 25a4 	ldrsh.w	r2, [r3, #1444]	; 0x5a4
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	845a      	strh	r2, [r3, #34]	; 0x22
	leg_move_control_loop->joint_motor[3].raw_angle = can_motors[7].raw_data.angle[0];
 8007858:	4b06      	ldr	r3, [pc, #24]	; (8007874 <jointmotor_control_loop+0x4b4>)
 800785a:	f9b3 2694 	ldrsh.w	r2, [r3, #1684]	; 0x694
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	865a      	strh	r2, [r3, #50]	; 0x32

}
 8007862:	bf00      	nop
 8007864:	3708      	adds	r7, #8
 8007866:	46bd      	mov	sp, r7
 8007868:	bdb0      	pop	{r4, r5, r7, pc}
 800786a:	bf00      	nop
 800786c:	3fe00000 	.word	0x3fe00000
 8007870:	bfe00000 	.word	0xbfe00000
 8007874:	200018a8 	.word	0x200018a8

08007878 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 8007878:	b580      	push	{r7, lr}
 800787a:	b084      	sub	sp, #16
 800787c:	af00      	add	r7, sp, #0
 800787e:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 8007880:	e002      	b.n	8007888 <hud_task+0x10>
		vTaskDelay(10);
 8007882:	200a      	movs	r0, #10
 8007884:	f015 f9b8 	bl	801cbf8 <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 8007888:	4b69      	ldr	r3, [pc, #420]	; (8007a30 <hud_task+0x1b8>)
 800788a:	781b      	ldrb	r3, [r3, #0]
 800788c:	2b00      	cmp	r3, #0
 800788e:	d0f8      	beq.n	8007882 <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 8007890:	f007 ff08 	bl	800f6a4 <HAL_GetTick>
 8007894:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 8007896:	2300      	movs	r3, #0
 8007898:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 800789a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800789e:	f015 f9ab 	bl	801cbf8 <vTaskDelay>
	clear_hud();
 80078a2:	f000 fb29 	bl	8007ef8 <clear_hud>
	vTaskDelay(150);
 80078a6:	2096      	movs	r0, #150	; 0x96
 80078a8:	f015 f9a6 	bl	801cbf8 <vTaskDelay>
	draw_spinspin(0);
 80078ac:	2000      	movs	r0, #0
 80078ae:	f000 f8c3 	bl	8007a38 <draw_spinspin>
	vTaskDelay(150);
 80078b2:	2096      	movs	r0, #150	; 0x96
 80078b4:	f015 f9a0 	bl	801cbf8 <vTaskDelay>
	draw_gearing(0);
 80078b8:	2000      	movs	r0, #0
 80078ba:	f000 f9f5 	bl	8007ca8 <draw_gearing>
	vTaskDelay(150);
 80078be:	2096      	movs	r0, #150	; 0x96
 80078c0:	f015 f99a 	bl	801cbf8 <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 80078c4:	f007 feee 	bl	800f6a4 <HAL_GetTick>
 80078c8:	4602      	mov	r2, r0
 80078ca:	68fb      	ldr	r3, [r7, #12]
 80078cc:	1ad3      	subs	r3, r2, r3
 80078ce:	f241 3288 	movw	r2, #5000	; 0x1388
 80078d2:	4293      	cmp	r3, r2
 80078d4:	d904      	bls.n	80078e0 <hud_task+0x68>
			draw_state = refresh;
 80078d6:	2304      	movs	r3, #4
 80078d8:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 80078da:	f007 fee3 	bl	800f6a4 <HAL_GetTick>
 80078de:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 80078e0:	4b53      	ldr	r3, [pc, #332]	; (8007a30 <hud_task+0x1b8>)
 80078e2:	781b      	ldrb	r3, [r3, #0]
 80078e4:	2b06      	cmp	r3, #6
 80078e6:	dc27      	bgt.n	8007938 <hud_task+0xc0>
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	dc13      	bgt.n	8007914 <hud_task+0x9c>
 80078ec:	e065      	b.n	80079ba <hud_task+0x142>
 80078ee:	3b65      	subs	r3, #101	; 0x65
 80078f0:	2b05      	cmp	r3, #5
 80078f2:	d862      	bhi.n	80079ba <hud_task+0x142>
 80078f4:	a201      	add	r2, pc, #4	; (adr r2, 80078fc <hud_task+0x84>)
 80078f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80078fa:	bf00      	nop
 80078fc:	0800797f 	.word	0x0800797f
 8007900:	08007989 	.word	0x08007989
 8007904:	08007993 	.word	0x08007993
 8007908:	0800799d 	.word	0x0800799d
 800790c:	080079a7 	.word	0x080079a7
 8007910:	080079b1 	.word	0x080079b1
 8007914:	3b01      	subs	r3, #1
 8007916:	2b05      	cmp	r3, #5
 8007918:	d84f      	bhi.n	80079ba <hud_task+0x142>
 800791a:	a201      	add	r2, pc, #4	; (adr r2, 8007920 <hud_task+0xa8>)
 800791c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007920:	08007943 	.word	0x08007943
 8007924:	0800794d 	.word	0x0800794d
 8007928:	08007957 	.word	0x08007957
 800792c:	08007961 	.word	0x08007961
 8007930:	0800796b 	.word	0x0800796b
 8007934:	08007975 	.word	0x08007975
 8007938:	2b6a      	cmp	r3, #106	; 0x6a
 800793a:	dc3e      	bgt.n	80079ba <hud_task+0x142>
 800793c:	2b65      	cmp	r3, #101	; 0x65
 800793e:	dad6      	bge.n	80078ee <hud_task+0x76>
 8007940:	e03b      	b.n	80079ba <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 8007942:	4b3c      	ldr	r3, [pc, #240]	; (8007a34 <hud_task+0x1bc>)
 8007944:	f240 1201 	movw	r2, #257	; 0x101
 8007948:	801a      	strh	r2, [r3, #0]
			break;
 800794a:	e03a      	b.n	80079c2 <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 800794c:	4b39      	ldr	r3, [pc, #228]	; (8007a34 <hud_task+0x1bc>)
 800794e:	f44f 7281 	mov.w	r2, #258	; 0x102
 8007952:	801a      	strh	r2, [r3, #0]
			break;
 8007954:	e035      	b.n	80079c2 <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 8007956:	4b37      	ldr	r3, [pc, #220]	; (8007a34 <hud_task+0x1bc>)
 8007958:	f240 1203 	movw	r2, #259	; 0x103
 800795c:	801a      	strh	r2, [r3, #0]
			break;
 800795e:	e030      	b.n	80079c2 <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 8007960:	4b34      	ldr	r3, [pc, #208]	; (8007a34 <hud_task+0x1bc>)
 8007962:	f44f 7282 	mov.w	r2, #260	; 0x104
 8007966:	801a      	strh	r2, [r3, #0]
			break;
 8007968:	e02b      	b.n	80079c2 <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 800796a:	4b32      	ldr	r3, [pc, #200]	; (8007a34 <hud_task+0x1bc>)
 800796c:	f240 1205 	movw	r2, #261	; 0x105
 8007970:	801a      	strh	r2, [r3, #0]
			break;
 8007972:	e026      	b.n	80079c2 <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 8007974:	4b2f      	ldr	r3, [pc, #188]	; (8007a34 <hud_task+0x1bc>)
 8007976:	f44f 7283 	mov.w	r2, #262	; 0x106
 800797a:	801a      	strh	r2, [r3, #0]
			break;
 800797c:	e021      	b.n	80079c2 <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 800797e:	4b2d      	ldr	r3, [pc, #180]	; (8007a34 <hud_task+0x1bc>)
 8007980:	f240 1265 	movw	r2, #357	; 0x165
 8007984:	801a      	strh	r2, [r3, #0]
			break;
 8007986:	e01c      	b.n	80079c2 <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 8007988:	4b2a      	ldr	r3, [pc, #168]	; (8007a34 <hud_task+0x1bc>)
 800798a:	f44f 72b3 	mov.w	r2, #358	; 0x166
 800798e:	801a      	strh	r2, [r3, #0]
			break;
 8007990:	e017      	b.n	80079c2 <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 8007992:	4b28      	ldr	r3, [pc, #160]	; (8007a34 <hud_task+0x1bc>)
 8007994:	f240 1267 	movw	r2, #359	; 0x167
 8007998:	801a      	strh	r2, [r3, #0]
			break;
 800799a:	e012      	b.n	80079c2 <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 800799c:	4b25      	ldr	r3, [pc, #148]	; (8007a34 <hud_task+0x1bc>)
 800799e:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80079a2:	801a      	strh	r2, [r3, #0]
			break;
 80079a4:	e00d      	b.n	80079c2 <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 80079a6:	4b23      	ldr	r3, [pc, #140]	; (8007a34 <hud_task+0x1bc>)
 80079a8:	f240 1269 	movw	r2, #361	; 0x169
 80079ac:	801a      	strh	r2, [r3, #0]
			break;
 80079ae:	e008      	b.n	80079c2 <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 80079b0:	4b20      	ldr	r3, [pc, #128]	; (8007a34 <hud_task+0x1bc>)
 80079b2:	f44f 72b5 	mov.w	r2, #362	; 0x16a
 80079b6:	801a      	strh	r2, [r3, #0]
			break;
 80079b8:	e003      	b.n	80079c2 <hud_task+0x14a>
		default:
			g_client_id = 0;
 80079ba:	4b1e      	ldr	r3, [pc, #120]	; (8007a34 <hud_task+0x1bc>)
 80079bc:	2200      	movs	r2, #0
 80079be:	801a      	strh	r2, [r3, #0]
			break;
 80079c0:	bf00      	nop

		}



		switch (draw_state) {
 80079c2:	7afb      	ldrb	r3, [r7, #11]
 80079c4:	2b04      	cmp	r3, #4
 80079c6:	d82d      	bhi.n	8007a24 <hud_task+0x1ac>
 80079c8:	a201      	add	r2, pc, #4	; (adr r2, 80079d0 <hud_task+0x158>)
 80079ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80079ce:	bf00      	nop
 80079d0:	080079e5 	.word	0x080079e5
 80079d4:	080079f1 	.word	0x080079f1
 80079d8:	08007a25 	.word	0x08007a25
 80079dc:	08007a25 	.word	0x08007a25
 80079e0:	080079fd 	.word	0x080079fd
		case spinspin:
			draw_spinspin(1);
 80079e4:	2001      	movs	r0, #1
 80079e6:	f000 f827 	bl	8007a38 <draw_spinspin>
			draw_state = gearing;
 80079ea:	2301      	movs	r3, #1
 80079ec:	72fb      	strb	r3, [r7, #11]
			break;
 80079ee:	e01a      	b.n	8007a26 <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 80079f0:	2001      	movs	r0, #1
 80079f2:	f000 f959 	bl	8007ca8 <draw_gearing>
			draw_state = spinspin;
 80079f6:	2300      	movs	r3, #0
 80079f8:	72fb      	strb	r3, [r7, #11]
			break;
 80079fa:	e014      	b.n	8007a26 <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 80079fc:	f000 fa7c 	bl	8007ef8 <clear_hud>
			vTaskDelay(150);
 8007a00:	2096      	movs	r0, #150	; 0x96
 8007a02:	f015 f8f9 	bl	801cbf8 <vTaskDelay>
			draw_spinspin(0);
 8007a06:	2000      	movs	r0, #0
 8007a08:	f000 f816 	bl	8007a38 <draw_spinspin>
			vTaskDelay(150);
 8007a0c:	2096      	movs	r0, #150	; 0x96
 8007a0e:	f015 f8f3 	bl	801cbf8 <vTaskDelay>
			draw_gearing(0);
 8007a12:	2000      	movs	r0, #0
 8007a14:	f000 f948 	bl	8007ca8 <draw_gearing>
			vTaskDelay(150);
 8007a18:	2096      	movs	r0, #150	; 0x96
 8007a1a:	f015 f8ed 	bl	801cbf8 <vTaskDelay>
			draw_state = spinspin;
 8007a1e:	2300      	movs	r3, #0
 8007a20:	72fb      	strb	r3, [r7, #11]
			break;
 8007a22:	e000      	b.n	8007a26 <hud_task+0x1ae>
		default:
			break;
 8007a24:	bf00      	nop
		}
		vTaskDelay(150);
 8007a26:	2096      	movs	r0, #150	; 0x96
 8007a28:	f015 f8e6 	bl	801cbf8 <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 8007a2c:	e74a      	b.n	80078c4 <hud_task+0x4c>
 8007a2e:	bf00      	nop
 8007a30:	2000337c 	.word	0x2000337c
 8007a34:	200030fc 	.word	0x200030fc

08007a38 <draw_spinspin>:
	}
}

void draw_spinspin(uint8_t modify) {
 8007a38:	b590      	push	{r4, r7, lr}
 8007a3a:	b085      	sub	sp, #20
 8007a3c:	af00      	add	r7, sp, #0
 8007a3e:	4603      	mov	r3, r0
 8007a40:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 8007a42:	2300      	movs	r3, #0
 8007a44:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 8007a46:	2300      	movs	r3, #0
 8007a48:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 8007a4a:	2300      	movs	r3, #0
 8007a4c:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 8007a4e:	4b8a      	ldr	r3, [pc, #552]	; (8007c78 <draw_spinspin+0x240>)
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	d10d      	bne.n	8007a72 <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 8007a56:	4a89      	ldr	r2, [pc, #548]	; (8007c7c <draw_spinspin+0x244>)
 8007a58:	7913      	ldrb	r3, [r2, #4]
 8007a5a:	2104      	movs	r1, #4
 8007a5c:	f361 0385 	bfi	r3, r1, #2, #4
 8007a60:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 8007a62:	4a87      	ldr	r2, [pc, #540]	; (8007c80 <draw_spinspin+0x248>)
 8007a64:	211e      	movs	r1, #30
 8007a66:	4887      	ldr	r0, [pc, #540]	; (8007c84 <draw_spinspin+0x24c>)
 8007a68:	f018 fdca 	bl	8020600 <sniprintf>
 8007a6c:	4603      	mov	r3, r0
 8007a6e:	73fb      	strb	r3, [r7, #15]
 8007a70:	e00c      	b.n	8007a8c <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 8007a72:	4a82      	ldr	r2, [pc, #520]	; (8007c7c <draw_spinspin+0x244>)
 8007a74:	7913      	ldrb	r3, [r2, #4]
 8007a76:	2103      	movs	r1, #3
 8007a78:	f361 0385 	bfi	r3, r1, #2, #4
 8007a7c:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 8007a7e:	4a82      	ldr	r2, [pc, #520]	; (8007c88 <draw_spinspin+0x250>)
 8007a80:	211e      	movs	r1, #30
 8007a82:	4880      	ldr	r0, [pc, #512]	; (8007c84 <draw_spinspin+0x24c>)
 8007a84:	f018 fdbc 	bl	8020600 <sniprintf>
 8007a88:	4603      	mov	r3, r0
 8007a8a:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 8007a8c:	4b7f      	ldr	r3, [pc, #508]	; (8007c8c <draw_spinspin+0x254>)
 8007a8e:	22a5      	movs	r2, #165	; 0xa5
 8007a90:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007a92:	4b7e      	ldr	r3, [pc, #504]	; (8007c8c <draw_spinspin+0x254>)
 8007a94:	2200      	movs	r2, #0
 8007a96:	f042 0201 	orr.w	r2, r2, #1
 8007a9a:	715a      	strb	r2, [r3, #5]
 8007a9c:	2200      	movs	r2, #0
 8007a9e:	f042 0203 	orr.w	r2, r2, #3
 8007aa2:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007aa4:	4b7a      	ldr	r3, [pc, #488]	; (8007c90 <draw_spinspin+0x258>)
 8007aa6:	781b      	ldrb	r3, [r3, #0]
 8007aa8:	1c5a      	adds	r2, r3, #1
 8007aaa:	b2d1      	uxtb	r1, r2
 8007aac:	4a78      	ldr	r2, [pc, #480]	; (8007c90 <draw_spinspin+0x258>)
 8007aae:	7011      	strb	r1, [r2, #0]
 8007ab0:	4a76      	ldr	r2, [pc, #472]	; (8007c8c <draw_spinspin+0x254>)
 8007ab2:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8007ab4:	7bfb      	ldrb	r3, [r7, #15]
 8007ab6:	b29b      	uxth	r3, r3
 8007ab8:	3315      	adds	r3, #21
 8007aba:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8007abc:	4b73      	ldr	r3, [pc, #460]	; (8007c8c <draw_spinspin+0x254>)
 8007abe:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8007ac2:	4b73      	ldr	r3, [pc, #460]	; (8007c90 <draw_spinspin+0x258>)
 8007ac4:	781b      	ldrb	r3, [r3, #0]
 8007ac6:	1c5a      	adds	r2, r3, #1
 8007ac8:	b2d1      	uxtb	r1, r2
 8007aca:	4a71      	ldr	r2, [pc, #452]	; (8007c90 <draw_spinspin+0x258>)
 8007acc:	7011      	strb	r1, [r2, #0]
 8007ace:	4a6f      	ldr	r2, [pc, #444]	; (8007c8c <draw_spinspin+0x254>)
 8007ad0:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007ad2:	68bb      	ldr	r3, [r7, #8]
 8007ad4:	4a6f      	ldr	r2, [pc, #444]	; (8007c94 <draw_spinspin+0x25c>)
 8007ad6:	4413      	add	r3, r2
 8007ad8:	4a6c      	ldr	r2, [pc, #432]	; (8007c8c <draw_spinspin+0x254>)
 8007ada:	6810      	ldr	r0, [r2, #0]
 8007adc:	6018      	str	r0, [r3, #0]
 8007ade:	8891      	ldrh	r1, [r2, #4]
 8007ae0:	7992      	ldrb	r2, [r2, #6]
 8007ae2:	8099      	strh	r1, [r3, #4]
 8007ae4:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8007ae6:	68bb      	ldr	r3, [r7, #8]
 8007ae8:	3307      	adds	r3, #7
 8007aea:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 8007aec:	2105      	movs	r1, #5
 8007aee:	4869      	ldr	r0, [pc, #420]	; (8007c94 <draw_spinspin+0x25c>)
 8007af0:	f7f9 facb 	bl	800108a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8007af4:	4b68      	ldr	r3, [pc, #416]	; (8007c98 <draw_spinspin+0x260>)
 8007af6:	f44f 7288 	mov.w	r2, #272	; 0x110
 8007afa:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8007afc:	4b67      	ldr	r3, [pc, #412]	; (8007c9c <draw_spinspin+0x264>)
 8007afe:	781b      	ldrb	r3, [r3, #0]
 8007b00:	b29a      	uxth	r2, r3
 8007b02:	4b65      	ldr	r3, [pc, #404]	; (8007c98 <draw_spinspin+0x260>)
 8007b04:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8007b06:	4b66      	ldr	r3, [pc, #408]	; (8007ca0 <draw_spinspin+0x268>)
 8007b08:	881a      	ldrh	r2, [r3, #0]
 8007b0a:	4b63      	ldr	r3, [pc, #396]	; (8007c98 <draw_spinspin+0x260>)
 8007b0c:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8007b0e:	68bb      	ldr	r3, [r7, #8]
 8007b10:	4a60      	ldr	r2, [pc, #384]	; (8007c94 <draw_spinspin+0x25c>)
 8007b12:	4413      	add	r3, r2
 8007b14:	4a60      	ldr	r2, [pc, #384]	; (8007c98 <draw_spinspin+0x260>)
 8007b16:	6810      	ldr	r0, [r2, #0]
 8007b18:	6018      	str	r0, [r3, #0]
 8007b1a:	8892      	ldrh	r2, [r2, #4]
 8007b1c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 8007b1e:	68bb      	ldr	r3, [r7, #8]
 8007b20:	3306      	adds	r3, #6
 8007b22:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8007b24:	4b55      	ldr	r3, [pc, #340]	; (8007c7c <draw_spinspin+0x244>)
 8007b26:	2200      	movs	r2, #0
 8007b28:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 8007b2a:	4b54      	ldr	r3, [pc, #336]	; (8007c7c <draw_spinspin+0x244>)
 8007b2c:	2200      	movs	r2, #0
 8007b2e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 8007b30:	4b52      	ldr	r3, [pc, #328]	; (8007c7c <draw_spinspin+0x244>)
 8007b32:	2201      	movs	r2, #1
 8007b34:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8007b36:	4b51      	ldr	r3, [pc, #324]	; (8007c7c <draw_spinspin+0x244>)
 8007b38:	78da      	ldrb	r2, [r3, #3]
 8007b3a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007b3e:	70da      	strb	r2, [r3, #3]
 8007b40:	791a      	ldrb	r2, [r3, #4]
 8007b42:	f022 0203 	bic.w	r2, r2, #3
 8007b46:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8007b48:	79fb      	ldrb	r3, [r7, #7]
 8007b4a:	2b01      	cmp	r3, #1
 8007b4c:	d106      	bne.n	8007b5c <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007b4e:	4a4b      	ldr	r2, [pc, #300]	; (8007c7c <draw_spinspin+0x244>)
 8007b50:	78d3      	ldrb	r3, [r2, #3]
 8007b52:	2102      	movs	r1, #2
 8007b54:	f361 0302 	bfi	r3, r1, #0, #3
 8007b58:	70d3      	strb	r3, [r2, #3]
 8007b5a:	e005      	b.n	8007b68 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007b5c:	4a47      	ldr	r2, [pc, #284]	; (8007c7c <draw_spinspin+0x244>)
 8007b5e:	78d3      	ldrb	r3, [r2, #3]
 8007b60:	2101      	movs	r1, #1
 8007b62:	f361 0302 	bfi	r3, r1, #0, #3
 8007b66:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8007b68:	4a44      	ldr	r2, [pc, #272]	; (8007c7c <draw_spinspin+0x244>)
 8007b6a:	78d3      	ldrb	r3, [r2, #3]
 8007b6c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8007b70:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8007b72:	4b42      	ldr	r3, [pc, #264]	; (8007c7c <draw_spinspin+0x244>)
 8007b74:	791a      	ldrb	r2, [r3, #4]
 8007b76:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007b7a:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8007b7e:	711a      	strb	r2, [r3, #4]
 8007b80:	795a      	ldrb	r2, [r3, #5]
 8007b82:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007b86:	f042 0207 	orr.w	r2, r2, #7
 8007b8a:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8007b8c:	7bfb      	ldrb	r3, [r7, #15]
 8007b8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007b92:	b29a      	uxth	r2, r3
 8007b94:	4b39      	ldr	r3, [pc, #228]	; (8007c7c <draw_spinspin+0x244>)
 8007b96:	f002 0101 	and.w	r1, r2, #1
 8007b9a:	01cc      	lsls	r4, r1, #7
 8007b9c:	7959      	ldrb	r1, [r3, #5]
 8007b9e:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8007ba2:	4608      	mov	r0, r1
 8007ba4:	4621      	mov	r1, r4
 8007ba6:	4301      	orrs	r1, r0
 8007ba8:	7159      	strb	r1, [r3, #5]
 8007baa:	0852      	lsrs	r2, r2, #1
 8007bac:	b292      	uxth	r2, r2
 8007bae:	b2d2      	uxtb	r2, r2
 8007bb0:	2100      	movs	r1, #0
 8007bb2:	430a      	orrs	r2, r1
 8007bb4:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8007bb6:	4b31      	ldr	r3, [pc, #196]	; (8007c7c <draw_spinspin+0x244>)
 8007bb8:	2200      	movs	r2, #0
 8007bba:	f042 0207 	orr.w	r2, r2, #7
 8007bbe:	71da      	strb	r2, [r3, #7]
 8007bc0:	7a1a      	ldrb	r2, [r3, #8]
 8007bc2:	f022 0203 	bic.w	r2, r2, #3
 8007bc6:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8007bc8:	4b2c      	ldr	r3, [pc, #176]	; (8007c7c <draw_spinspin+0x244>)
 8007bca:	78da      	ldrb	r2, [r3, #3]
 8007bcc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007bd0:	70da      	strb	r2, [r3, #3]
 8007bd2:	791a      	ldrb	r2, [r3, #4]
 8007bd4:	f022 0203 	bic.w	r2, r2, #3
 8007bd8:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8007bda:	4b28      	ldr	r3, [pc, #160]	; (8007c7c <draw_spinspin+0x244>)
 8007bdc:	7a1a      	ldrb	r2, [r3, #8]
 8007bde:	f002 0203 	and.w	r2, r2, #3
 8007be2:	f062 0237 	orn	r2, r2, #55	; 0x37
 8007be6:	721a      	strb	r2, [r3, #8]
 8007be8:	7a5a      	ldrb	r2, [r3, #9]
 8007bea:	f022 021f 	bic.w	r2, r2, #31
 8007bee:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 8007bf0:	4b22      	ldr	r3, [pc, #136]	; (8007c7c <draw_spinspin+0x244>)
 8007bf2:	7a5a      	ldrb	r2, [r3, #9]
 8007bf4:	f002 021f 	and.w	r2, r2, #31
 8007bf8:	725a      	strb	r2, [r3, #9]
 8007bfa:	2200      	movs	r2, #0
 8007bfc:	f042 024b 	orr.w	r2, r2, #75	; 0x4b
 8007c00:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8007c02:	68bb      	ldr	r3, [r7, #8]
 8007c04:	4a23      	ldr	r2, [pc, #140]	; (8007c94 <draw_spinspin+0x25c>)
 8007c06:	4413      	add	r3, r2
 8007c08:	4a1c      	ldr	r2, [pc, #112]	; (8007c7c <draw_spinspin+0x244>)
 8007c0a:	461c      	mov	r4, r3
 8007c0c:	4613      	mov	r3, r2
 8007c0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007c10:	6020      	str	r0, [r4, #0]
 8007c12:	6061      	str	r1, [r4, #4]
 8007c14:	60a2      	str	r2, [r4, #8]
 8007c16:	881a      	ldrh	r2, [r3, #0]
 8007c18:	789b      	ldrb	r3, [r3, #2]
 8007c1a:	81a2      	strh	r2, [r4, #12]
 8007c1c:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8007c1e:	68bb      	ldr	r3, [r7, #8]
 8007c20:	330f      	adds	r3, #15
 8007c22:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8007c24:	68bb      	ldr	r3, [r7, #8]
 8007c26:	4a1b      	ldr	r2, [pc, #108]	; (8007c94 <draw_spinspin+0x25c>)
 8007c28:	4413      	add	r3, r2
 8007c2a:	7bfa      	ldrb	r2, [r7, #15]
 8007c2c:	4915      	ldr	r1, [pc, #84]	; (8007c84 <draw_spinspin+0x24c>)
 8007c2e:	4618      	mov	r0, r3
 8007c30:	f017 fd41 	bl	801f6b6 <memcpy>
	curr_pos += char_len;
 8007c34:	7bfb      	ldrb	r3, [r7, #15]
 8007c36:	68ba      	ldr	r2, [r7, #8]
 8007c38:	4413      	add	r3, r2
 8007c3a:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007c3c:	68bb      	ldr	r3, [r7, #8]
 8007c3e:	3302      	adds	r3, #2
 8007c40:	4619      	mov	r1, r3
 8007c42:	4814      	ldr	r0, [pc, #80]	; (8007c94 <draw_spinspin+0x25c>)
 8007c44:	f7f9 faa4 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007c48:	e002      	b.n	8007c50 <draw_spinspin+0x218>
		vTaskDelay(1);
 8007c4a:	2001      	movs	r0, #1
 8007c4c:	f014 ffd4 	bl	801cbf8 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007c50:	4b14      	ldr	r3, [pc, #80]	; (8007ca4 <draw_spinspin+0x26c>)
 8007c52:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c56:	b2db      	uxtb	r3, r3
 8007c58:	2b20      	cmp	r3, #32
 8007c5a:	d1f6      	bne.n	8007c4a <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007c5c:	68bb      	ldr	r3, [r7, #8]
 8007c5e:	b29b      	uxth	r3, r3
 8007c60:	3302      	adds	r3, #2
 8007c62:	b29b      	uxth	r3, r3
 8007c64:	461a      	mov	r2, r3
 8007c66:	490b      	ldr	r1, [pc, #44]	; (8007c94 <draw_spinspin+0x25c>)
 8007c68:	480e      	ldr	r0, [pc, #56]	; (8007ca4 <draw_spinspin+0x26c>)
 8007c6a:	f00f f84d 	bl	8016d08 <HAL_UART_Transmit_DMA>
}
 8007c6e:	bf00      	nop
 8007c70:	3714      	adds	r7, #20
 8007c72:	46bd      	mov	sp, r7
 8007c74:	bd90      	pop	{r4, r7, pc}
 8007c76:	bf00      	nop
 8007c78:	20002f94 	.word	0x20002f94
 8007c7c:	20003208 	.word	0x20003208
 8007c80:	08026944 	.word	0x08026944
 8007c84:	20003220 	.word	0x20003220
 8007c88:	08026950 	.word	0x08026950
 8007c8c:	20003218 	.word	0x20003218
 8007c90:	200033e4 	.word	0x200033e4
 8007c94:	20003100 	.word	0x20003100
 8007c98:	20003200 	.word	0x20003200
 8007c9c:	2000337c 	.word	0x2000337c
 8007ca0:	200030fc 	.word	0x200030fc
 8007ca4:	200016e4 	.word	0x200016e4

08007ca8 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8007ca8:	b590      	push	{r4, r7, lr}
 8007caa:	b085      	sub	sp, #20
 8007cac:	af00      	add	r7, sp, #0
 8007cae:	4603      	mov	r3, r0
 8007cb0:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 8007cb2:	2300      	movs	r3, #0
 8007cb4:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 8007cb6:	2300      	movs	r3, #0
 8007cb8:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8007cba:	2300      	movs	r3, #0
 8007cbc:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 8007cbe:	4a83      	ldr	r2, [pc, #524]	; (8007ecc <draw_gearing+0x224>)
 8007cc0:	7913      	ldrb	r3, [r2, #4]
 8007cc2:	2106      	movs	r1, #6
 8007cc4:	f361 0385 	bfi	r3, r1, #2, #4
 8007cc8:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8007cca:	4b81      	ldr	r3, [pc, #516]	; (8007ed0 <draw_gearing+0x228>)
 8007ccc:	781b      	ldrb	r3, [r3, #0]
 8007cce:	4a81      	ldr	r2, [pc, #516]	; (8007ed4 <draw_gearing+0x22c>)
 8007cd0:	211e      	movs	r1, #30
 8007cd2:	4881      	ldr	r0, [pc, #516]	; (8007ed8 <draw_gearing+0x230>)
 8007cd4:	f018 fc94 	bl	8020600 <sniprintf>
 8007cd8:	4603      	mov	r3, r0
 8007cda:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 8007cdc:	4b7f      	ldr	r3, [pc, #508]	; (8007edc <draw_gearing+0x234>)
 8007cde:	22a5      	movs	r2, #165	; 0xa5
 8007ce0:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007ce2:	4b7e      	ldr	r3, [pc, #504]	; (8007edc <draw_gearing+0x234>)
 8007ce4:	2200      	movs	r2, #0
 8007ce6:	f042 0201 	orr.w	r2, r2, #1
 8007cea:	715a      	strb	r2, [r3, #5]
 8007cec:	2200      	movs	r2, #0
 8007cee:	f042 0203 	orr.w	r2, r2, #3
 8007cf2:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007cf4:	4b7a      	ldr	r3, [pc, #488]	; (8007ee0 <draw_gearing+0x238>)
 8007cf6:	781b      	ldrb	r3, [r3, #0]
 8007cf8:	1c5a      	adds	r2, r3, #1
 8007cfa:	b2d1      	uxtb	r1, r2
 8007cfc:	4a78      	ldr	r2, [pc, #480]	; (8007ee0 <draw_gearing+0x238>)
 8007cfe:	7011      	strb	r1, [r2, #0]
 8007d00:	4a76      	ldr	r2, [pc, #472]	; (8007edc <draw_gearing+0x234>)
 8007d02:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8007d04:	7afb      	ldrb	r3, [r7, #11]
 8007d06:	b29b      	uxth	r3, r3
 8007d08:	3315      	adds	r3, #21
 8007d0a:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8007d0c:	4b73      	ldr	r3, [pc, #460]	; (8007edc <draw_gearing+0x234>)
 8007d0e:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8007d12:	4b73      	ldr	r3, [pc, #460]	; (8007ee0 <draw_gearing+0x238>)
 8007d14:	781b      	ldrb	r3, [r3, #0]
 8007d16:	1c5a      	adds	r2, r3, #1
 8007d18:	b2d1      	uxtb	r1, r2
 8007d1a:	4a71      	ldr	r2, [pc, #452]	; (8007ee0 <draw_gearing+0x238>)
 8007d1c:	7011      	strb	r1, [r2, #0]
 8007d1e:	4a6f      	ldr	r2, [pc, #444]	; (8007edc <draw_gearing+0x234>)
 8007d20:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007d22:	68fb      	ldr	r3, [r7, #12]
 8007d24:	4a6f      	ldr	r2, [pc, #444]	; (8007ee4 <draw_gearing+0x23c>)
 8007d26:	4413      	add	r3, r2
 8007d28:	4a6c      	ldr	r2, [pc, #432]	; (8007edc <draw_gearing+0x234>)
 8007d2a:	6810      	ldr	r0, [r2, #0]
 8007d2c:	6018      	str	r0, [r3, #0]
 8007d2e:	8891      	ldrh	r1, [r2, #4]
 8007d30:	7992      	ldrb	r2, [r2, #6]
 8007d32:	8099      	strh	r1, [r3, #4]
 8007d34:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8007d36:	68fb      	ldr	r3, [r7, #12]
 8007d38:	3307      	adds	r3, #7
 8007d3a:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 8007d3c:	2105      	movs	r1, #5
 8007d3e:	4869      	ldr	r0, [pc, #420]	; (8007ee4 <draw_gearing+0x23c>)
 8007d40:	f7f9 f9a3 	bl	800108a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8007d44:	4b68      	ldr	r3, [pc, #416]	; (8007ee8 <draw_gearing+0x240>)
 8007d46:	f44f 7288 	mov.w	r2, #272	; 0x110
 8007d4a:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8007d4c:	4b67      	ldr	r3, [pc, #412]	; (8007eec <draw_gearing+0x244>)
 8007d4e:	781b      	ldrb	r3, [r3, #0]
 8007d50:	b29a      	uxth	r2, r3
 8007d52:	4b65      	ldr	r3, [pc, #404]	; (8007ee8 <draw_gearing+0x240>)
 8007d54:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8007d56:	4b66      	ldr	r3, [pc, #408]	; (8007ef0 <draw_gearing+0x248>)
 8007d58:	881a      	ldrh	r2, [r3, #0]
 8007d5a:	4b63      	ldr	r3, [pc, #396]	; (8007ee8 <draw_gearing+0x240>)
 8007d5c:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	4a60      	ldr	r2, [pc, #384]	; (8007ee4 <draw_gearing+0x23c>)
 8007d62:	4413      	add	r3, r2
 8007d64:	4a60      	ldr	r2, [pc, #384]	; (8007ee8 <draw_gearing+0x240>)
 8007d66:	6810      	ldr	r0, [r2, #0]
 8007d68:	6018      	str	r0, [r3, #0]
 8007d6a:	8892      	ldrh	r2, [r2, #4]
 8007d6c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 8007d6e:	68fb      	ldr	r3, [r7, #12]
 8007d70:	3306      	adds	r3, #6
 8007d72:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8007d74:	4b55      	ldr	r3, [pc, #340]	; (8007ecc <draw_gearing+0x224>)
 8007d76:	2200      	movs	r2, #0
 8007d78:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 8007d7a:	4b54      	ldr	r3, [pc, #336]	; (8007ecc <draw_gearing+0x224>)
 8007d7c:	2200      	movs	r2, #0
 8007d7e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 8007d80:	4b52      	ldr	r3, [pc, #328]	; (8007ecc <draw_gearing+0x224>)
 8007d82:	2202      	movs	r2, #2
 8007d84:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8007d86:	4b51      	ldr	r3, [pc, #324]	; (8007ecc <draw_gearing+0x224>)
 8007d88:	78da      	ldrb	r2, [r3, #3]
 8007d8a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007d8e:	70da      	strb	r2, [r3, #3]
 8007d90:	791a      	ldrb	r2, [r3, #4]
 8007d92:	f022 0203 	bic.w	r2, r2, #3
 8007d96:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8007d98:	79fb      	ldrb	r3, [r7, #7]
 8007d9a:	2b01      	cmp	r3, #1
 8007d9c:	d106      	bne.n	8007dac <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007d9e:	4a4b      	ldr	r2, [pc, #300]	; (8007ecc <draw_gearing+0x224>)
 8007da0:	78d3      	ldrb	r3, [r2, #3]
 8007da2:	2102      	movs	r1, #2
 8007da4:	f361 0302 	bfi	r3, r1, #0, #3
 8007da8:	70d3      	strb	r3, [r2, #3]
 8007daa:	e005      	b.n	8007db8 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8007dac:	4a47      	ldr	r2, [pc, #284]	; (8007ecc <draw_gearing+0x224>)
 8007dae:	78d3      	ldrb	r3, [r2, #3]
 8007db0:	2101      	movs	r1, #1
 8007db2:	f361 0302 	bfi	r3, r1, #0, #3
 8007db6:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8007db8:	4a44      	ldr	r2, [pc, #272]	; (8007ecc <draw_gearing+0x224>)
 8007dba:	78d3      	ldrb	r3, [r2, #3]
 8007dbc:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8007dc0:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8007dc2:	4b42      	ldr	r3, [pc, #264]	; (8007ecc <draw_gearing+0x224>)
 8007dc4:	791a      	ldrb	r2, [r3, #4]
 8007dc6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007dca:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8007dce:	711a      	strb	r2, [r3, #4]
 8007dd0:	795a      	ldrb	r2, [r3, #5]
 8007dd2:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007dd6:	f042 0207 	orr.w	r2, r2, #7
 8007dda:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8007ddc:	7afb      	ldrb	r3, [r7, #11]
 8007dde:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007de2:	b29a      	uxth	r2, r3
 8007de4:	4b39      	ldr	r3, [pc, #228]	; (8007ecc <draw_gearing+0x224>)
 8007de6:	f002 0101 	and.w	r1, r2, #1
 8007dea:	01cc      	lsls	r4, r1, #7
 8007dec:	7959      	ldrb	r1, [r3, #5]
 8007dee:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8007df2:	4608      	mov	r0, r1
 8007df4:	4621      	mov	r1, r4
 8007df6:	4301      	orrs	r1, r0
 8007df8:	7159      	strb	r1, [r3, #5]
 8007dfa:	0852      	lsrs	r2, r2, #1
 8007dfc:	b292      	uxth	r2, r2
 8007dfe:	b2d2      	uxtb	r2, r2
 8007e00:	2100      	movs	r1, #0
 8007e02:	430a      	orrs	r2, r1
 8007e04:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8007e06:	4b31      	ldr	r3, [pc, #196]	; (8007ecc <draw_gearing+0x224>)
 8007e08:	2200      	movs	r2, #0
 8007e0a:	f042 0207 	orr.w	r2, r2, #7
 8007e0e:	71da      	strb	r2, [r3, #7]
 8007e10:	7a1a      	ldrb	r2, [r3, #8]
 8007e12:	f022 0203 	bic.w	r2, r2, #3
 8007e16:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8007e18:	4b2c      	ldr	r3, [pc, #176]	; (8007ecc <draw_gearing+0x224>)
 8007e1a:	78da      	ldrb	r2, [r3, #3]
 8007e1c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8007e20:	70da      	strb	r2, [r3, #3]
 8007e22:	791a      	ldrb	r2, [r3, #4]
 8007e24:	f022 0203 	bic.w	r2, r2, #3
 8007e28:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8007e2a:	4b28      	ldr	r3, [pc, #160]	; (8007ecc <draw_gearing+0x224>)
 8007e2c:	7a1a      	ldrb	r2, [r3, #8]
 8007e2e:	f002 0203 	and.w	r2, r2, #3
 8007e32:	f062 0237 	orn	r2, r2, #55	; 0x37
 8007e36:	721a      	strb	r2, [r3, #8]
 8007e38:	7a5a      	ldrb	r2, [r3, #9]
 8007e3a:	f022 021f 	bic.w	r2, r2, #31
 8007e3e:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 8007e40:	4b22      	ldr	r3, [pc, #136]	; (8007ecc <draw_gearing+0x224>)
 8007e42:	7a5a      	ldrb	r2, [r3, #9]
 8007e44:	f002 021f 	and.w	r2, r2, #31
 8007e48:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007e4c:	725a      	strb	r2, [r3, #9]
 8007e4e:	2200      	movs	r2, #0
 8007e50:	f042 0251 	orr.w	r2, r2, #81	; 0x51
 8007e54:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8007e56:	68fb      	ldr	r3, [r7, #12]
 8007e58:	4a22      	ldr	r2, [pc, #136]	; (8007ee4 <draw_gearing+0x23c>)
 8007e5a:	4413      	add	r3, r2
 8007e5c:	4a1b      	ldr	r2, [pc, #108]	; (8007ecc <draw_gearing+0x224>)
 8007e5e:	461c      	mov	r4, r3
 8007e60:	4613      	mov	r3, r2
 8007e62:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007e64:	6020      	str	r0, [r4, #0]
 8007e66:	6061      	str	r1, [r4, #4]
 8007e68:	60a2      	str	r2, [r4, #8]
 8007e6a:	881a      	ldrh	r2, [r3, #0]
 8007e6c:	789b      	ldrb	r3, [r3, #2]
 8007e6e:	81a2      	strh	r2, [r4, #12]
 8007e70:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8007e72:	68fb      	ldr	r3, [r7, #12]
 8007e74:	330f      	adds	r3, #15
 8007e76:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	4a1a      	ldr	r2, [pc, #104]	; (8007ee4 <draw_gearing+0x23c>)
 8007e7c:	4413      	add	r3, r2
 8007e7e:	7afa      	ldrb	r2, [r7, #11]
 8007e80:	4915      	ldr	r1, [pc, #84]	; (8007ed8 <draw_gearing+0x230>)
 8007e82:	4618      	mov	r0, r3
 8007e84:	f017 fc17 	bl	801f6b6 <memcpy>
	curr_pos += char_len;
 8007e88:	7afb      	ldrb	r3, [r7, #11]
 8007e8a:	68fa      	ldr	r2, [r7, #12]
 8007e8c:	4413      	add	r3, r2
 8007e8e:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007e90:	68fb      	ldr	r3, [r7, #12]
 8007e92:	3302      	adds	r3, #2
 8007e94:	4619      	mov	r1, r3
 8007e96:	4813      	ldr	r0, [pc, #76]	; (8007ee4 <draw_gearing+0x23c>)
 8007e98:	f7f9 f97a 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007e9c:	e002      	b.n	8007ea4 <draw_gearing+0x1fc>
		vTaskDelay(1);
 8007e9e:	2001      	movs	r0, #1
 8007ea0:	f014 feaa 	bl	801cbf8 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007ea4:	4b13      	ldr	r3, [pc, #76]	; (8007ef4 <draw_gearing+0x24c>)
 8007ea6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007eaa:	b2db      	uxtb	r3, r3
 8007eac:	2b20      	cmp	r3, #32
 8007eae:	d1f6      	bne.n	8007e9e <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007eb0:	68fb      	ldr	r3, [r7, #12]
 8007eb2:	b29b      	uxth	r3, r3
 8007eb4:	3302      	adds	r3, #2
 8007eb6:	b29b      	uxth	r3, r3
 8007eb8:	461a      	mov	r2, r3
 8007eba:	490a      	ldr	r1, [pc, #40]	; (8007ee4 <draw_gearing+0x23c>)
 8007ebc:	480d      	ldr	r0, [pc, #52]	; (8007ef4 <draw_gearing+0x24c>)
 8007ebe:	f00e ff23 	bl	8016d08 <HAL_UART_Transmit_DMA>
}
 8007ec2:	bf00      	nop
 8007ec4:	3714      	adds	r7, #20
 8007ec6:	46bd      	mov	sp, r7
 8007ec8:	bd90      	pop	{r4, r7, pc}
 8007eca:	bf00      	nop
 8007ecc:	20003208 	.word	0x20003208
 8007ed0:	20002f84 	.word	0x20002f84
 8007ed4:	08026958 	.word	0x08026958
 8007ed8:	20003220 	.word	0x20003220
 8007edc:	20003218 	.word	0x20003218
 8007ee0:	200033e4 	.word	0x200033e4
 8007ee4:	20003100 	.word	0x20003100
 8007ee8:	20003200 	.word	0x20003200
 8007eec:	2000337c 	.word	0x2000337c
 8007ef0:	200030fc 	.word	0x200030fc
 8007ef4:	200016e4 	.word	0x200016e4

08007ef8 <clear_hud>:


void clear_hud(){
 8007ef8:	b580      	push	{r7, lr}
 8007efa:	b084      	sub	sp, #16
 8007efc:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 8007efe:	2300      	movs	r3, #0
 8007f00:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 8007f02:	2300      	movs	r3, #0
 8007f04:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8007f06:	2300      	movs	r3, #0
 8007f08:	60fb      	str	r3, [r7, #12]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8007f0a:	4b34      	ldr	r3, [pc, #208]	; (8007fdc <clear_hud+0xe4>)
 8007f0c:	781b      	ldrb	r3, [r3, #0]
 8007f0e:	4a34      	ldr	r2, [pc, #208]	; (8007fe0 <clear_hud+0xe8>)
 8007f10:	211e      	movs	r1, #30
 8007f12:	4834      	ldr	r0, [pc, #208]	; (8007fe4 <clear_hud+0xec>)
 8007f14:	f018 fb74 	bl	8020600 <sniprintf>
 8007f18:	4603      	mov	r3, r0
 8007f1a:	72fb      	strb	r3, [r7, #11]

	send_header.start_frame = 0xA5;
 8007f1c:	4b32      	ldr	r3, [pc, #200]	; (8007fe8 <clear_hud+0xf0>)
 8007f1e:	22a5      	movs	r2, #165	; 0xa5
 8007f20:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007f22:	4b31      	ldr	r3, [pc, #196]	; (8007fe8 <clear_hud+0xf0>)
 8007f24:	2200      	movs	r2, #0
 8007f26:	f042 0201 	orr.w	r2, r2, #1
 8007f2a:	715a      	strb	r2, [r3, #5]
 8007f2c:	2200      	movs	r2, #0
 8007f2e:	f042 0203 	orr.w	r2, r2, #3
 8007f32:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007f34:	4b2d      	ldr	r3, [pc, #180]	; (8007fec <clear_hud+0xf4>)
 8007f36:	781b      	ldrb	r3, [r3, #0]
 8007f38:	1c5a      	adds	r2, r3, #1
 8007f3a:	b2d1      	uxtb	r1, r2
 8007f3c:	4a2b      	ldr	r2, [pc, #172]	; (8007fec <clear_hud+0xf4>)
 8007f3e:	7011      	strb	r1, [r2, #0]
 8007f40:	4a29      	ldr	r2, [pc, #164]	; (8007fe8 <clear_hud+0xf0>)
 8007f42:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 8007f44:	4b28      	ldr	r3, [pc, #160]	; (8007fe8 <clear_hud+0xf0>)
 8007f46:	2200      	movs	r2, #0
 8007f48:	f042 0208 	orr.w	r2, r2, #8
 8007f4c:	705a      	strb	r2, [r3, #1]
 8007f4e:	2200      	movs	r2, #0
 8007f50:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8007f52:	4b26      	ldr	r3, [pc, #152]	; (8007fec <clear_hud+0xf4>)
 8007f54:	781b      	ldrb	r3, [r3, #0]
 8007f56:	1c5a      	adds	r2, r3, #1
 8007f58:	b2d1      	uxtb	r1, r2
 8007f5a:	4a24      	ldr	r2, [pc, #144]	; (8007fec <clear_hud+0xf4>)
 8007f5c:	7011      	strb	r1, [r2, #0]
 8007f5e:	4a22      	ldr	r2, [pc, #136]	; (8007fe8 <clear_hud+0xf0>)
 8007f60:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007f62:	68fb      	ldr	r3, [r7, #12]
 8007f64:	4a22      	ldr	r2, [pc, #136]	; (8007ff0 <clear_hud+0xf8>)
 8007f66:	4413      	add	r3, r2
 8007f68:	4a1f      	ldr	r2, [pc, #124]	; (8007fe8 <clear_hud+0xf0>)
 8007f6a:	6810      	ldr	r0, [r2, #0]
 8007f6c:	6018      	str	r0, [r3, #0]
 8007f6e:	8891      	ldrh	r1, [r2, #4]
 8007f70:	7992      	ldrb	r2, [r2, #6]
 8007f72:	8099      	strh	r1, [r3, #4]
 8007f74:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 8007f76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007f7a:	803b      	strh	r3, [r7, #0]
	ref_delete.graphic_layer = 9;
 8007f7c:	2309      	movs	r3, #9
 8007f7e:	71fb      	strb	r3, [r7, #7]
	ref_delete.graphic_operation = 2;
 8007f80:	2302      	movs	r3, #2
 8007f82:	71bb      	strb	r3, [r7, #6]
	ref_delete.receiver_ID = g_client_id;
 8007f84:	4b1b      	ldr	r3, [pc, #108]	; (8007ff4 <clear_hud+0xfc>)
 8007f86:	881b      	ldrh	r3, [r3, #0]
 8007f88:	80bb      	strh	r3, [r7, #4]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8007f8a:	4b1b      	ldr	r3, [pc, #108]	; (8007ff8 <clear_hud+0x100>)
 8007f8c:	781b      	ldrb	r3, [r3, #0]
 8007f8e:	b29b      	uxth	r3, r3
 8007f90:	807b      	strh	r3, [r7, #2]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8007f92:	68fb      	ldr	r3, [r7, #12]
 8007f94:	4a16      	ldr	r2, [pc, #88]	; (8007ff0 <clear_hud+0xf8>)
 8007f96:	4413      	add	r3, r2
 8007f98:	461a      	mov	r2, r3
 8007f9a:	463b      	mov	r3, r7
 8007f9c:	cb03      	ldmia	r3!, {r0, r1}
 8007f9e:	6010      	str	r0, [r2, #0]
 8007fa0:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8007fa2:	68fb      	ldr	r3, [r7, #12]
 8007fa4:	3302      	adds	r3, #2
 8007fa6:	4619      	mov	r1, r3
 8007fa8:	4811      	ldr	r0, [pc, #68]	; (8007ff0 <clear_hud+0xf8>)
 8007faa:	f7f9 f8f1 	bl	8001190 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007fae:	e002      	b.n	8007fb6 <clear_hud+0xbe>
		vTaskDelay(1);
 8007fb0:	2001      	movs	r0, #1
 8007fb2:	f014 fe21 	bl	801cbf8 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8007fb6:	4b11      	ldr	r3, [pc, #68]	; (8007ffc <clear_hud+0x104>)
 8007fb8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007fbc:	b2db      	uxtb	r3, r3
 8007fbe:	2b20      	cmp	r3, #32
 8007fc0:	d1f6      	bne.n	8007fb0 <clear_hud+0xb8>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8007fc2:	68fb      	ldr	r3, [r7, #12]
 8007fc4:	b29b      	uxth	r3, r3
 8007fc6:	3302      	adds	r3, #2
 8007fc8:	b29b      	uxth	r3, r3
 8007fca:	461a      	mov	r2, r3
 8007fcc:	4908      	ldr	r1, [pc, #32]	; (8007ff0 <clear_hud+0xf8>)
 8007fce:	480b      	ldr	r0, [pc, #44]	; (8007ffc <clear_hud+0x104>)
 8007fd0:	f00e fe9a 	bl	8016d08 <HAL_UART_Transmit_DMA>

}
 8007fd4:	bf00      	nop
 8007fd6:	3710      	adds	r7, #16
 8007fd8:	46bd      	mov	sp, r7
 8007fda:	bd80      	pop	{r7, pc}
 8007fdc:	20002f84 	.word	0x20002f84
 8007fe0:	08026958 	.word	0x08026958
 8007fe4:	20003220 	.word	0x20003220
 8007fe8:	20003218 	.word	0x20003218
 8007fec:	200033e4 	.word	0x200033e4
 8007ff0:	20003100 	.word	0x20003100
 8007ff4:	200030fc 	.word	0x200030fc
 8007ff8:	2000337c 	.word	0x2000337c
 8007ffc:	200016e4 	.word	0x200016e4

08008000 <imu_proc_task_notif>:
extern QueueHandle_t mag_data_queue;
extern TaskHandle_t imu_processing_task_handle;
static uint32_t last_proc_times[2];
static uint8_t update_flag = 0;

void imu_proc_task_notif() {
 8008000:	b580      	push	{r7, lr}
 8008002:	b082      	sub	sp, #8
 8008004:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 8008006:	4b0d      	ldr	r3, [pc, #52]	; (800803c <imu_proc_task_notif+0x3c>)
 8008008:	2200      	movs	r2, #0
 800800a:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 800800c:	2300      	movs	r3, #0
 800800e:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8008010:	4b0b      	ldr	r3, [pc, #44]	; (8008040 <imu_proc_task_notif+0x40>)
 8008012:	681b      	ldr	r3, [r3, #0]
 8008014:	1d3a      	adds	r2, r7, #4
 8008016:	4611      	mov	r1, r2
 8008018:	4618      	mov	r0, r3
 800801a:	f015 fc49 	bl	801d8b0 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 800801e:	687b      	ldr	r3, [r7, #4]
 8008020:	2b00      	cmp	r3, #0
 8008022:	d007      	beq.n	8008034 <imu_proc_task_notif+0x34>
 8008024:	4b07      	ldr	r3, [pc, #28]	; (8008044 <imu_proc_task_notif+0x44>)
 8008026:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800802a:	601a      	str	r2, [r3, #0]
 800802c:	f3bf 8f4f 	dsb	sy
 8008030:	f3bf 8f6f 	isb	sy
}
 8008034:	bf00      	nop
 8008036:	3708      	adds	r7, #8
 8008038:	46bd      	mov	sp, r7
 800803a:	bd80      	pop	{r7, pc}
 800803c:	200032d8 	.word	0x200032d8
 8008040:	200004a4 	.word	0x200004a4
 8008044:	e000ed04 	.word	0xe000ed04

08008048 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8008048:	b590      	push	{r4, r7, lr}
 800804a:	b085      	sub	sp, #20
 800804c:	af00      	add	r7, sp, #0
 800804e:	463c      	mov	r4, r7
 8008050:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	gyro_proc_data.gx = gyro_data.gx;
 8008054:	683b      	ldr	r3, [r7, #0]
 8008056:	4a10      	ldr	r2, [pc, #64]	; (8008098 <gyro_data_ready+0x50>)
 8008058:	6013      	str	r3, [r2, #0]
	gyro_proc_data.gy = gyro_data.gy;
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	4a0e      	ldr	r2, [pc, #56]	; (8008098 <gyro_data_ready+0x50>)
 800805e:	6053      	str	r3, [r2, #4]
	gyro_proc_data.gz = gyro_data.gz;
 8008060:	68bb      	ldr	r3, [r7, #8]
 8008062:	4a0d      	ldr	r2, [pc, #52]	; (8008098 <gyro_data_ready+0x50>)
 8008064:	6093      	str	r3, [r2, #8]
	if (IMU_ORIENTATION == 2) {		// swap gyro inputs for vertically mounted devboard
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 8008066:	68fb      	ldr	r3, [r7, #12]
 8008068:	4a0b      	ldr	r2, [pc, #44]	; (8008098 <gyro_data_ready+0x50>)
 800806a:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 800806c:	4b0b      	ldr	r3, [pc, #44]	; (800809c <gyro_data_ready+0x54>)
 800806e:	781b      	ldrb	r3, [r3, #0]
 8008070:	f043 0301 	orr.w	r3, r3, #1
 8008074:	b2da      	uxtb	r2, r3
 8008076:	4b09      	ldr	r3, [pc, #36]	; (800809c <gyro_data_ready+0x54>)
 8008078:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 800807a:	4b08      	ldr	r3, [pc, #32]	; (800809c <gyro_data_ready+0x54>)
 800807c:	781b      	ldrb	r3, [r3, #0]
 800807e:	2b07      	cmp	r3, #7
 8008080:	d003      	beq.n	800808a <gyro_data_ready+0x42>
 8008082:	4b06      	ldr	r3, [pc, #24]	; (800809c <gyro_data_ready+0x54>)
 8008084:	781b      	ldrb	r3, [r3, #0]
 8008086:	2b03      	cmp	r3, #3
 8008088:	d101      	bne.n	800808e <gyro_data_ready+0x46>
		imu_proc_task_notif();
 800808a:	f7ff ffb9 	bl	8008000 <imu_proc_task_notif>
	}
}
 800808e:	bf00      	nop
 8008090:	3714      	adds	r7, #20
 8008092:	46bd      	mov	sp, r7
 8008094:	bd90      	pop	{r4, r7, pc}
 8008096:	bf00      	nop
 8008098:	200032b4 	.word	0x200032b4
 800809c:	200032d8 	.word	0x200032d8

080080a0 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 80080a0:	b590      	push	{r4, r7, lr}
 80080a2:	b085      	sub	sp, #20
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	463c      	mov	r4, r7
 80080a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	accel_proc_data.ax = accel_data.ax;
 80080ac:	683b      	ldr	r3, [r7, #0]
 80080ae:	4a10      	ldr	r2, [pc, #64]	; (80080f0 <accel_data_ready+0x50>)
 80080b0:	6013      	str	r3, [r2, #0]
	accel_proc_data.ay = accel_data.ay;
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	4a0e      	ldr	r2, [pc, #56]	; (80080f0 <accel_data_ready+0x50>)
 80080b6:	6053      	str	r3, [r2, #4]
	accel_proc_data.az = accel_data.az;
 80080b8:	68bb      	ldr	r3, [r7, #8]
 80080ba:	4a0d      	ldr	r2, [pc, #52]	; (80080f0 <accel_data_ready+0x50>)
 80080bc:	6093      	str	r3, [r2, #8]
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 80080be:	68fb      	ldr	r3, [r7, #12]
 80080c0:	4a0b      	ldr	r2, [pc, #44]	; (80080f0 <accel_data_ready+0x50>)
 80080c2:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 80080c4:	4b0b      	ldr	r3, [pc, #44]	; (80080f4 <accel_data_ready+0x54>)
 80080c6:	781b      	ldrb	r3, [r3, #0]
 80080c8:	f043 0302 	orr.w	r3, r3, #2
 80080cc:	b2da      	uxtb	r2, r3
 80080ce:	4b09      	ldr	r3, [pc, #36]	; (80080f4 <accel_data_ready+0x54>)
 80080d0:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 80080d2:	4b08      	ldr	r3, [pc, #32]	; (80080f4 <accel_data_ready+0x54>)
 80080d4:	781b      	ldrb	r3, [r3, #0]
 80080d6:	2b07      	cmp	r3, #7
 80080d8:	d003      	beq.n	80080e2 <accel_data_ready+0x42>
 80080da:	4b06      	ldr	r3, [pc, #24]	; (80080f4 <accel_data_ready+0x54>)
 80080dc:	781b      	ldrb	r3, [r3, #0]
 80080de:	2b03      	cmp	r3, #3
 80080e0:	d101      	bne.n	80080e6 <accel_data_ready+0x46>
		imu_proc_task_notif();
 80080e2:	f7ff ff8d 	bl	8008000 <imu_proc_task_notif>
	}
}
 80080e6:	bf00      	nop
 80080e8:	3714      	adds	r7, #20
 80080ea:	46bd      	mov	sp, r7
 80080ec:	bd90      	pop	{r4, r7, pc}
 80080ee:	bf00      	nop
 80080f0:	200032a4 	.word	0x200032a4
 80080f4:	200032d8 	.word	0x200032d8

080080f8 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 80080f8:	b480      	push	{r7}
 80080fa:	b085      	sub	sp, #20
 80080fc:	af00      	add	r7, sp, #0
 80080fe:	1d3b      	adds	r3, r7, #4
 8008100:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 8008104:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8008108:	4b0c      	ldr	r3, [pc, #48]	; (800813c <mag_data_ready+0x44>)
 800810a:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 800810c:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008110:	4b0a      	ldr	r3, [pc, #40]	; (800813c <mag_data_ready+0x44>)
 8008112:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 8008114:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008118:	4b08      	ldr	r3, [pc, #32]	; (800813c <mag_data_ready+0x44>)
 800811a:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 800811c:	68fb      	ldr	r3, [r7, #12]
 800811e:	4a07      	ldr	r2, [pc, #28]	; (800813c <mag_data_ready+0x44>)
 8008120:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 8008122:	4b07      	ldr	r3, [pc, #28]	; (8008140 <mag_data_ready+0x48>)
 8008124:	781b      	ldrb	r3, [r3, #0]
 8008126:	f043 0304 	orr.w	r3, r3, #4
 800812a:	b2da      	uxtb	r2, r3
 800812c:	4b04      	ldr	r3, [pc, #16]	; (8008140 <mag_data_ready+0x48>)
 800812e:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8008130:	bf00      	nop
 8008132:	3714      	adds	r7, #20
 8008134:	46bd      	mov	sp, r7
 8008136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800813a:	4770      	bx	lr
 800813c:	200032c4 	.word	0x200032c4
 8008140:	200032d8 	.word	0x200032d8

08008144 <imu_processing_task>:

void imu_processing_task(void *argument) {
 8008144:	b580      	push	{r7, lr}
 8008146:	b082      	sub	sp, #8
 8008148:	af00      	add	r7, sp, #0
 800814a:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 800814c:	f7f9 fdc2 	bl	8001cd4 <imu_start_ints>
	init_quaternion();
 8008150:	f000 f80a 	bl	8008168 <init_quaternion>
	while (1) {
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008154:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8008158:	2001      	movs	r0, #1
 800815a:	f015 fb5d 	bl	801d818 <ulTaskNotifyTake>
		imu_ahrs_update();
 800815e:	f000 f93f 	bl	80083e0 <imu_ahrs_update>
		imu_attitude_update();
 8008162:	f000 fd91 	bl	8008c88 <imu_attitude_update>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008166:	e7f5      	b.n	8008154 <imu_processing_task+0x10>

08008168 <init_quaternion>:
	}
}

void init_quaternion(void) {
 8008168:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800816c:	b084      	sub	sp, #16
 800816e:	af00      	add	r7, sp, #0
	int16_t hx, hy; //hz;

	hx = mag_proc_data.mx;
 8008170:	4b79      	ldr	r3, [pc, #484]	; (8008358 <init_quaternion+0x1f0>)
 8008172:	881b      	ldrh	r3, [r3, #0]
 8008174:	81fb      	strh	r3, [r7, #14]
	hy = mag_proc_data.my;
 8008176:	4b78      	ldr	r3, [pc, #480]	; (8008358 <init_quaternion+0x1f0>)
 8008178:	885b      	ldrh	r3, [r3, #2]
 800817a:	81bb      	strh	r3, [r7, #12]
			q2 = -0.56;
			q3 = 0.0045;
		}
	}
	#else
	if (hx < 0 && hy < 0) {
 800817c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8008180:	2b00      	cmp	r3, #0
 8008182:	da36      	bge.n	80081f2 <init_quaternion+0x8a>
 8008184:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008188:	2b00      	cmp	r3, #0
 800818a:	da32      	bge.n	80081f2 <init_quaternion+0x8a>
		if (fabs(hx / hy) >= 1) {
 800818c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8008190:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008194:	fb92 f3f3 	sdiv	r3, r2, r3
 8008198:	4618      	mov	r0, r3
 800819a:	f7f8 f9c3 	bl	8000524 <__aeabi_i2d>
 800819e:	4602      	mov	r2, r0
 80081a0:	460b      	mov	r3, r1
 80081a2:	603a      	str	r2, [r7, #0]
 80081a4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80081a8:	607b      	str	r3, [r7, #4]
 80081aa:	f04f 0200 	mov.w	r2, #0
 80081ae:	4b6b      	ldr	r3, [pc, #428]	; (800835c <init_quaternion+0x1f4>)
 80081b0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80081b4:	f7f8 fca6 	bl	8000b04 <__aeabi_dcmpge>
 80081b8:	4603      	mov	r3, r0
 80081ba:	2b00      	cmp	r3, #0
 80081bc:	d00c      	beq.n	80081d8 <init_quaternion+0x70>
			q0 = 0.195;
 80081be:	4b68      	ldr	r3, [pc, #416]	; (8008360 <init_quaternion+0x1f8>)
 80081c0:	4a68      	ldr	r2, [pc, #416]	; (8008364 <init_quaternion+0x1fc>)
 80081c2:	601a      	str	r2, [r3, #0]
			q1 = -0.015;
 80081c4:	4b68      	ldr	r3, [pc, #416]	; (8008368 <init_quaternion+0x200>)
 80081c6:	4a69      	ldr	r2, [pc, #420]	; (800836c <init_quaternion+0x204>)
 80081c8:	601a      	str	r2, [r3, #0]
			q2 = 0.0043;
 80081ca:	4b69      	ldr	r3, [pc, #420]	; (8008370 <init_quaternion+0x208>)
 80081cc:	4a69      	ldr	r2, [pc, #420]	; (8008374 <init_quaternion+0x20c>)
 80081ce:	601a      	str	r2, [r3, #0]
			q3 = 0.979;
 80081d0:	4b69      	ldr	r3, [pc, #420]	; (8008378 <init_quaternion+0x210>)
 80081d2:	4a6a      	ldr	r2, [pc, #424]	; (800837c <init_quaternion+0x214>)
 80081d4:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 80081d6:	e0ba      	b.n	800834e <init_quaternion+0x1e6>
		} else {
			q0 = 0.555;
 80081d8:	4b61      	ldr	r3, [pc, #388]	; (8008360 <init_quaternion+0x1f8>)
 80081da:	4a69      	ldr	r2, [pc, #420]	; (8008380 <init_quaternion+0x218>)
 80081dc:	601a      	str	r2, [r3, #0]
			q1 = -0.015;
 80081de:	4b62      	ldr	r3, [pc, #392]	; (8008368 <init_quaternion+0x200>)
 80081e0:	4a62      	ldr	r2, [pc, #392]	; (800836c <init_quaternion+0x204>)
 80081e2:	601a      	str	r2, [r3, #0]
			q2 = 0.006;
 80081e4:	4b62      	ldr	r3, [pc, #392]	; (8008370 <init_quaternion+0x208>)
 80081e6:	4a67      	ldr	r2, [pc, #412]	; (8008384 <init_quaternion+0x21c>)
 80081e8:	601a      	str	r2, [r3, #0]
			q3 = 0.829;
 80081ea:	4b63      	ldr	r3, [pc, #396]	; (8008378 <init_quaternion+0x210>)
 80081ec:	4a66      	ldr	r2, [pc, #408]	; (8008388 <init_quaternion+0x220>)
 80081ee:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 80081f0:	e0ad      	b.n	800834e <init_quaternion+0x1e6>
		}

	} else if (hx < 0 && hy > 0) {
 80081f2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80081f6:	2b00      	cmp	r3, #0
 80081f8:	da35      	bge.n	8008266 <init_quaternion+0xfe>
 80081fa:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80081fe:	2b00      	cmp	r3, #0
 8008200:	dd31      	ble.n	8008266 <init_quaternion+0xfe>
		if (fabs(hx / hy) >= 1) {
 8008202:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8008206:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800820a:	fb92 f3f3 	sdiv	r3, r2, r3
 800820e:	4618      	mov	r0, r3
 8008210:	f7f8 f988 	bl	8000524 <__aeabi_i2d>
 8008214:	4602      	mov	r2, r0
 8008216:	460b      	mov	r3, r1
 8008218:	4692      	mov	sl, r2
 800821a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 800821e:	f04f 0200 	mov.w	r2, #0
 8008222:	4b4e      	ldr	r3, [pc, #312]	; (800835c <init_quaternion+0x1f4>)
 8008224:	4650      	mov	r0, sl
 8008226:	4659      	mov	r1, fp
 8008228:	f7f8 fc6c 	bl	8000b04 <__aeabi_dcmpge>
 800822c:	4603      	mov	r3, r0
 800822e:	2b00      	cmp	r3, #0
 8008230:	d00c      	beq.n	800824c <init_quaternion+0xe4>
			q0 = -0.193;
 8008232:	4b4b      	ldr	r3, [pc, #300]	; (8008360 <init_quaternion+0x1f8>)
 8008234:	4a55      	ldr	r2, [pc, #340]	; (800838c <init_quaternion+0x224>)
 8008236:	601a      	str	r2, [r3, #0]
			q1 = -0.009;
 8008238:	4b4b      	ldr	r3, [pc, #300]	; (8008368 <init_quaternion+0x200>)
 800823a:	4a55      	ldr	r2, [pc, #340]	; (8008390 <init_quaternion+0x228>)
 800823c:	601a      	str	r2, [r3, #0]
			q2 = -0.006;
 800823e:	4b4c      	ldr	r3, [pc, #304]	; (8008370 <init_quaternion+0x208>)
 8008240:	4a54      	ldr	r2, [pc, #336]	; (8008394 <init_quaternion+0x22c>)
 8008242:	601a      	str	r2, [r3, #0]
			q3 = 0.979;
 8008244:	4b4c      	ldr	r3, [pc, #304]	; (8008378 <init_quaternion+0x210>)
 8008246:	4a4d      	ldr	r2, [pc, #308]	; (800837c <init_quaternion+0x214>)
 8008248:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 800824a:	e080      	b.n	800834e <init_quaternion+0x1e6>
		} else {
			q0 = -0.552;
 800824c:	4b44      	ldr	r3, [pc, #272]	; (8008360 <init_quaternion+0x1f8>)
 800824e:	4a52      	ldr	r2, [pc, #328]	; (8008398 <init_quaternion+0x230>)
 8008250:	601a      	str	r2, [r3, #0]
			q1 = -0.0048;
 8008252:	4b45      	ldr	r3, [pc, #276]	; (8008368 <init_quaternion+0x200>)
 8008254:	4a51      	ldr	r2, [pc, #324]	; (800839c <init_quaternion+0x234>)
 8008256:	601a      	str	r2, [r3, #0]
			q2 = -0.0115;
 8008258:	4b45      	ldr	r3, [pc, #276]	; (8008370 <init_quaternion+0x208>)
 800825a:	4a51      	ldr	r2, [pc, #324]	; (80083a0 <init_quaternion+0x238>)
 800825c:	601a      	str	r2, [r3, #0]
			q3 = 0.8313;
 800825e:	4b46      	ldr	r3, [pc, #280]	; (8008378 <init_quaternion+0x210>)
 8008260:	4a50      	ldr	r2, [pc, #320]	; (80083a4 <init_quaternion+0x23c>)
 8008262:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 8008264:	e073      	b.n	800834e <init_quaternion+0x1e6>
		}

	} else if (hx > 0 && hy > 0) {
 8008266:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800826a:	2b00      	cmp	r3, #0
 800826c:	dd35      	ble.n	80082da <init_quaternion+0x172>
 800826e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008272:	2b00      	cmp	r3, #0
 8008274:	dd31      	ble.n	80082da <init_quaternion+0x172>
		if (fabs(hx / hy) >= 1) {
 8008276:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800827a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800827e:	fb92 f3f3 	sdiv	r3, r2, r3
 8008282:	4618      	mov	r0, r3
 8008284:	f7f8 f94e 	bl	8000524 <__aeabi_i2d>
 8008288:	4602      	mov	r2, r0
 800828a:	460b      	mov	r3, r1
 800828c:	4690      	mov	r8, r2
 800828e:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 8008292:	f04f 0200 	mov.w	r2, #0
 8008296:	4b31      	ldr	r3, [pc, #196]	; (800835c <init_quaternion+0x1f4>)
 8008298:	4640      	mov	r0, r8
 800829a:	4649      	mov	r1, r9
 800829c:	f7f8 fc32 	bl	8000b04 <__aeabi_dcmpge>
 80082a0:	4603      	mov	r3, r0
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d00c      	beq.n	80082c0 <init_quaternion+0x158>
			q0 = -0.9785;
 80082a6:	4b2e      	ldr	r3, [pc, #184]	; (8008360 <init_quaternion+0x1f8>)
 80082a8:	4a3f      	ldr	r2, [pc, #252]	; (80083a8 <init_quaternion+0x240>)
 80082aa:	601a      	str	r2, [r3, #0]
			q1 = 0.008;
 80082ac:	4b2e      	ldr	r3, [pc, #184]	; (8008368 <init_quaternion+0x200>)
 80082ae:	4a3f      	ldr	r2, [pc, #252]	; (80083ac <init_quaternion+0x244>)
 80082b0:	601a      	str	r2, [r3, #0]
			q2 = -0.02;
 80082b2:	4b2f      	ldr	r3, [pc, #188]	; (8008370 <init_quaternion+0x208>)
 80082b4:	4a3e      	ldr	r2, [pc, #248]	; (80083b0 <init_quaternion+0x248>)
 80082b6:	601a      	str	r2, [r3, #0]
			q3 = 0.195;
 80082b8:	4b2f      	ldr	r3, [pc, #188]	; (8008378 <init_quaternion+0x210>)
 80082ba:	4a2a      	ldr	r2, [pc, #168]	; (8008364 <init_quaternion+0x1fc>)
 80082bc:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 80082be:	e046      	b.n	800834e <init_quaternion+0x1e6>
		} else {
			q0 = -0.9828;
 80082c0:	4b27      	ldr	r3, [pc, #156]	; (8008360 <init_quaternion+0x1f8>)
 80082c2:	4a3c      	ldr	r2, [pc, #240]	; (80083b4 <init_quaternion+0x24c>)
 80082c4:	601a      	str	r2, [r3, #0]
			q1 = 0.002;
 80082c6:	4b28      	ldr	r3, [pc, #160]	; (8008368 <init_quaternion+0x200>)
 80082c8:	4a3b      	ldr	r2, [pc, #236]	; (80083b8 <init_quaternion+0x250>)
 80082ca:	601a      	str	r2, [r3, #0]
			q2 = -0.0167;
 80082cc:	4b28      	ldr	r3, [pc, #160]	; (8008370 <init_quaternion+0x208>)
 80082ce:	4a3b      	ldr	r2, [pc, #236]	; (80083bc <init_quaternion+0x254>)
 80082d0:	601a      	str	r2, [r3, #0]
			q3 = 0.5557;
 80082d2:	4b29      	ldr	r3, [pc, #164]	; (8008378 <init_quaternion+0x210>)
 80082d4:	4a3a      	ldr	r2, [pc, #232]	; (80083c0 <init_quaternion+0x258>)
 80082d6:	601a      	str	r2, [r3, #0]
		if (fabs(hx / hy) >= 1) {
 80082d8:	e039      	b.n	800834e <init_quaternion+0x1e6>
		}

	} else if (hx > 0 && hy < 0) {
 80082da:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80082de:	2b00      	cmp	r3, #0
 80082e0:	dd35      	ble.n	800834e <init_quaternion+0x1e6>
 80082e2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	da31      	bge.n	800834e <init_quaternion+0x1e6>
		if (fabs(hx / hy) >= 1) {
 80082ea:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80082ee:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80082f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80082f6:	4618      	mov	r0, r3
 80082f8:	f7f8 f914 	bl	8000524 <__aeabi_i2d>
 80082fc:	4602      	mov	r2, r0
 80082fe:	460b      	mov	r3, r1
 8008300:	4614      	mov	r4, r2
 8008302:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8008306:	f04f 0200 	mov.w	r2, #0
 800830a:	4b14      	ldr	r3, [pc, #80]	; (800835c <init_quaternion+0x1f4>)
 800830c:	4620      	mov	r0, r4
 800830e:	4629      	mov	r1, r5
 8008310:	f7f8 fbf8 	bl	8000b04 <__aeabi_dcmpge>
 8008314:	4603      	mov	r3, r0
 8008316:	2b00      	cmp	r3, #0
 8008318:	d00c      	beq.n	8008334 <init_quaternion+0x1cc>
			q0 = -0.979;
 800831a:	4b11      	ldr	r3, [pc, #68]	; (8008360 <init_quaternion+0x1f8>)
 800831c:	4a29      	ldr	r2, [pc, #164]	; (80083c4 <init_quaternion+0x25c>)
 800831e:	601a      	str	r2, [r3, #0]
			q1 = 0.0116;
 8008320:	4b11      	ldr	r3, [pc, #68]	; (8008368 <init_quaternion+0x200>)
 8008322:	4a29      	ldr	r2, [pc, #164]	; (80083c8 <init_quaternion+0x260>)
 8008324:	601a      	str	r2, [r3, #0]
			q2 = -0.0167;
 8008326:	4b12      	ldr	r3, [pc, #72]	; (8008370 <init_quaternion+0x208>)
 8008328:	4a24      	ldr	r2, [pc, #144]	; (80083bc <init_quaternion+0x254>)
 800832a:	601a      	str	r2, [r3, #0]
			q3 = -0.195;
 800832c:	4b12      	ldr	r3, [pc, #72]	; (8008378 <init_quaternion+0x210>)
 800832e:	4a27      	ldr	r2, [pc, #156]	; (80083cc <init_quaternion+0x264>)
 8008330:	601a      	str	r2, [r3, #0]
			q2 = -0.012;
			q3 = -0.556;
		}
	}
#endif
}
 8008332:	e00c      	b.n	800834e <init_quaternion+0x1e6>
			q0 = -0.83;
 8008334:	4b0a      	ldr	r3, [pc, #40]	; (8008360 <init_quaternion+0x1f8>)
 8008336:	4a26      	ldr	r2, [pc, #152]	; (80083d0 <init_quaternion+0x268>)
 8008338:	601a      	str	r2, [r3, #0]
			q1 = 0.014;
 800833a:	4b0b      	ldr	r3, [pc, #44]	; (8008368 <init_quaternion+0x200>)
 800833c:	4a25      	ldr	r2, [pc, #148]	; (80083d4 <init_quaternion+0x26c>)
 800833e:	601a      	str	r2, [r3, #0]
			q2 = -0.012;
 8008340:	4b0b      	ldr	r3, [pc, #44]	; (8008370 <init_quaternion+0x208>)
 8008342:	4a25      	ldr	r2, [pc, #148]	; (80083d8 <init_quaternion+0x270>)
 8008344:	601a      	str	r2, [r3, #0]
			q3 = -0.556;
 8008346:	4b0c      	ldr	r3, [pc, #48]	; (8008378 <init_quaternion+0x210>)
 8008348:	4a24      	ldr	r2, [pc, #144]	; (80083dc <init_quaternion+0x274>)
 800834a:	601a      	str	r2, [r3, #0]
}
 800834c:	e7ff      	b.n	800834e <init_quaternion+0x1e6>
 800834e:	bf00      	nop
 8008350:	3710      	adds	r7, #16
 8008352:	46bd      	mov	sp, r7
 8008354:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008358:	200032c4 	.word	0x200032c4
 800835c:	3ff00000 	.word	0x3ff00000
 8008360:	20000010 	.word	0x20000010
 8008364:	3e47ae14 	.word	0x3e47ae14
 8008368:	20003240 	.word	0x20003240
 800836c:	bc75c28f 	.word	0xbc75c28f
 8008370:	20003244 	.word	0x20003244
 8008374:	3b8ce704 	.word	0x3b8ce704
 8008378:	20003248 	.word	0x20003248
 800837c:	3f7a9fbe 	.word	0x3f7a9fbe
 8008380:	3f0e147b 	.word	0x3f0e147b
 8008384:	3bc49ba6 	.word	0x3bc49ba6
 8008388:	3f543958 	.word	0x3f543958
 800838c:	be45a1cb 	.word	0xbe45a1cb
 8008390:	bc1374bc 	.word	0xbc1374bc
 8008394:	bbc49ba6 	.word	0xbbc49ba6
 8008398:	bf0d4fdf 	.word	0xbf0d4fdf
 800839c:	bb9d4952 	.word	0xbb9d4952
 80083a0:	bc3c6a7f 	.word	0xbc3c6a7f
 80083a4:	3f54d014 	.word	0x3f54d014
 80083a8:	bf7a7efa 	.word	0xbf7a7efa
 80083ac:	3c03126f 	.word	0x3c03126f
 80083b0:	bca3d70a 	.word	0xbca3d70a
 80083b4:	bf7b98c8 	.word	0xbf7b98c8
 80083b8:	3b03126f 	.word	0x3b03126f
 80083bc:	bc88ce70 	.word	0xbc88ce70
 80083c0:	3f0e425b 	.word	0x3f0e425b
 80083c4:	bf7a9fbe 	.word	0xbf7a9fbe
 80083c8:	3c3e0ded 	.word	0x3c3e0ded
 80083cc:	be47ae14 	.word	0xbe47ae14
 80083d0:	bf547ae1 	.word	0xbf547ae1
 80083d4:	3c656042 	.word	0x3c656042
 80083d8:	bc449ba6 	.word	0xbc449ba6
 80083dc:	bf0e5604 	.word	0xbf0e5604

080083e0 <imu_ahrs_update>:
	q1 = tempq1 * norm;
	q2 = tempq2 * norm;
	q3 = tempq3 * norm;
}

void imu_ahrs_update(void) {
 80083e0:	b580      	push	{r7, lr}
 80083e2:	b09e      	sub	sp, #120	; 0x78
 80083e4:	af00      	add	r7, sp, #0
	float hx, hy, hz, bx, bz;
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez, halfT;
	float tempq0, tempq1, tempq2, tempq3;

	float q0q0 = q0 * q0;
 80083e6:	4bd3      	ldr	r3, [pc, #844]	; (8008734 <imu_ahrs_update+0x354>)
 80083e8:	ed93 7a00 	vldr	s14, [r3]
 80083ec:	4bd1      	ldr	r3, [pc, #836]	; (8008734 <imu_ahrs_update+0x354>)
 80083ee:	edd3 7a00 	vldr	s15, [r3]
 80083f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80083f6:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
	float q0q1 = q0 * q1;
 80083fa:	4bce      	ldr	r3, [pc, #824]	; (8008734 <imu_ahrs_update+0x354>)
 80083fc:	ed93 7a00 	vldr	s14, [r3]
 8008400:	4bcd      	ldr	r3, [pc, #820]	; (8008738 <imu_ahrs_update+0x358>)
 8008402:	edd3 7a00 	vldr	s15, [r3]
 8008406:	ee67 7a27 	vmul.f32	s15, s14, s15
 800840a:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
	float q0q2 = q0 * q2;
 800840e:	4bc9      	ldr	r3, [pc, #804]	; (8008734 <imu_ahrs_update+0x354>)
 8008410:	ed93 7a00 	vldr	s14, [r3]
 8008414:	4bc9      	ldr	r3, [pc, #804]	; (800873c <imu_ahrs_update+0x35c>)
 8008416:	edd3 7a00 	vldr	s15, [r3]
 800841a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800841e:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
	float q0q3 = q0 * q3;
 8008422:	4bc4      	ldr	r3, [pc, #784]	; (8008734 <imu_ahrs_update+0x354>)
 8008424:	ed93 7a00 	vldr	s14, [r3]
 8008428:	4bc5      	ldr	r3, [pc, #788]	; (8008740 <imu_ahrs_update+0x360>)
 800842a:	edd3 7a00 	vldr	s15, [r3]
 800842e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008432:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
	float q1q1 = q1 * q1;
 8008436:	4bc0      	ldr	r3, [pc, #768]	; (8008738 <imu_ahrs_update+0x358>)
 8008438:	ed93 7a00 	vldr	s14, [r3]
 800843c:	4bbe      	ldr	r3, [pc, #760]	; (8008738 <imu_ahrs_update+0x358>)
 800843e:	edd3 7a00 	vldr	s15, [r3]
 8008442:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008446:	edc7 7a19 	vstr	s15, [r7, #100]	; 0x64
	float q1q2 = q1 * q2;
 800844a:	4bbb      	ldr	r3, [pc, #748]	; (8008738 <imu_ahrs_update+0x358>)
 800844c:	ed93 7a00 	vldr	s14, [r3]
 8008450:	4bba      	ldr	r3, [pc, #744]	; (800873c <imu_ahrs_update+0x35c>)
 8008452:	edd3 7a00 	vldr	s15, [r3]
 8008456:	ee67 7a27 	vmul.f32	s15, s14, s15
 800845a:	edc7 7a18 	vstr	s15, [r7, #96]	; 0x60
	float q1q3 = q1 * q3;
 800845e:	4bb6      	ldr	r3, [pc, #728]	; (8008738 <imu_ahrs_update+0x358>)
 8008460:	ed93 7a00 	vldr	s14, [r3]
 8008464:	4bb6      	ldr	r3, [pc, #728]	; (8008740 <imu_ahrs_update+0x360>)
 8008466:	edd3 7a00 	vldr	s15, [r3]
 800846a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800846e:	edc7 7a17 	vstr	s15, [r7, #92]	; 0x5c
	float q2q2 = q2 * q2;
 8008472:	4bb2      	ldr	r3, [pc, #712]	; (800873c <imu_ahrs_update+0x35c>)
 8008474:	ed93 7a00 	vldr	s14, [r3]
 8008478:	4bb0      	ldr	r3, [pc, #704]	; (800873c <imu_ahrs_update+0x35c>)
 800847a:	edd3 7a00 	vldr	s15, [r3]
 800847e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008482:	edc7 7a16 	vstr	s15, [r7, #88]	; 0x58
	float q2q3 = q2 * q3;
 8008486:	4bad      	ldr	r3, [pc, #692]	; (800873c <imu_ahrs_update+0x35c>)
 8008488:	ed93 7a00 	vldr	s14, [r3]
 800848c:	4bac      	ldr	r3, [pc, #688]	; (8008740 <imu_ahrs_update+0x360>)
 800848e:	edd3 7a00 	vldr	s15, [r3]
 8008492:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008496:	edc7 7a15 	vstr	s15, [r7, #84]	; 0x54
	float q3q3 = q3 * q3;
 800849a:	4ba9      	ldr	r3, [pc, #676]	; (8008740 <imu_ahrs_update+0x360>)
 800849c:	ed93 7a00 	vldr	s14, [r3]
 80084a0:	4ba7      	ldr	r3, [pc, #668]	; (8008740 <imu_ahrs_update+0x360>)
 80084a2:	edd3 7a00 	vldr	s15, [r3]
 80084a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80084aa:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50

	gx = gyro_proc_data.gx;
 80084ae:	4ba5      	ldr	r3, [pc, #660]	; (8008744 <imu_ahrs_update+0x364>)
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	4aa5      	ldr	r2, [pc, #660]	; (8008748 <imu_ahrs_update+0x368>)
 80084b4:	6013      	str	r3, [r2, #0]
	gy = gyro_proc_data.gy;
 80084b6:	4ba3      	ldr	r3, [pc, #652]	; (8008744 <imu_ahrs_update+0x364>)
 80084b8:	685b      	ldr	r3, [r3, #4]
 80084ba:	4aa4      	ldr	r2, [pc, #656]	; (800874c <imu_ahrs_update+0x36c>)
 80084bc:	6013      	str	r3, [r2, #0]
	gz = gyro_proc_data.gz;
 80084be:	4ba1      	ldr	r3, [pc, #644]	; (8008744 <imu_ahrs_update+0x364>)
 80084c0:	689b      	ldr	r3, [r3, #8]
 80084c2:	4aa3      	ldr	r2, [pc, #652]	; (8008750 <imu_ahrs_update+0x370>)
 80084c4:	6013      	str	r3, [r2, #0]
	ax = accel_proc_data.ax;
 80084c6:	4ba3      	ldr	r3, [pc, #652]	; (8008754 <imu_ahrs_update+0x374>)
 80084c8:	681b      	ldr	r3, [r3, #0]
 80084ca:	4aa3      	ldr	r2, [pc, #652]	; (8008758 <imu_ahrs_update+0x378>)
 80084cc:	6013      	str	r3, [r2, #0]
	ay = accel_proc_data.ay;
 80084ce:	4ba1      	ldr	r3, [pc, #644]	; (8008754 <imu_ahrs_update+0x374>)
 80084d0:	685b      	ldr	r3, [r3, #4]
 80084d2:	4aa2      	ldr	r2, [pc, #648]	; (800875c <imu_ahrs_update+0x37c>)
 80084d4:	6013      	str	r3, [r2, #0]
	az = accel_proc_data.az;
 80084d6:	4b9f      	ldr	r3, [pc, #636]	; (8008754 <imu_ahrs_update+0x374>)
 80084d8:	689b      	ldr	r3, [r3, #8]
 80084da:	4aa1      	ldr	r2, [pc, #644]	; (8008760 <imu_ahrs_update+0x380>)
 80084dc:	6013      	str	r3, [r2, #0]
	mx = mag_proc_data.mx;
 80084de:	4ba1      	ldr	r3, [pc, #644]	; (8008764 <imu_ahrs_update+0x384>)
 80084e0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80084e4:	ee07 3a90 	vmov	s15, r3
 80084e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084ec:	4b9e      	ldr	r3, [pc, #632]	; (8008768 <imu_ahrs_update+0x388>)
 80084ee:	edc3 7a00 	vstr	s15, [r3]
	my = mag_proc_data.my;
 80084f2:	4b9c      	ldr	r3, [pc, #624]	; (8008764 <imu_ahrs_update+0x384>)
 80084f4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80084f8:	ee07 3a90 	vmov	s15, r3
 80084fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008500:	4b9a      	ldr	r3, [pc, #616]	; (800876c <imu_ahrs_update+0x38c>)
 8008502:	edc3 7a00 	vstr	s15, [r3]
	mz = mag_proc_data.mz;
 8008506:	4b97      	ldr	r3, [pc, #604]	; (8008764 <imu_ahrs_update+0x384>)
 8008508:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800850c:	ee07 3a90 	vmov	s15, r3
 8008510:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008514:	4b96      	ldr	r3, [pc, #600]	; (8008770 <imu_ahrs_update+0x390>)
 8008516:	edc3 7a00 	vstr	s15, [r3]

	last_proc_times[0] = HAL_GetTick(); //ms
 800851a:	f007 f8c3 	bl	800f6a4 <HAL_GetTick>
 800851e:	4603      	mov	r3, r0
 8008520:	4a94      	ldr	r2, [pc, #592]	; (8008774 <imu_ahrs_update+0x394>)
 8008522:	6013      	str	r3, [r2, #0]
	halfT = ((float) (last_proc_times[0] - last_proc_times[1]) / 2000.0f);
 8008524:	4b93      	ldr	r3, [pc, #588]	; (8008774 <imu_ahrs_update+0x394>)
 8008526:	681a      	ldr	r2, [r3, #0]
 8008528:	4b92      	ldr	r3, [pc, #584]	; (8008774 <imu_ahrs_update+0x394>)
 800852a:	685b      	ldr	r3, [r3, #4]
 800852c:	1ad3      	subs	r3, r2, r3
 800852e:	ee07 3a90 	vmov	s15, r3
 8008532:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8008536:	eddf 6a90 	vldr	s13, [pc, #576]	; 8008778 <imu_ahrs_update+0x398>
 800853a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800853e:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c
	last_proc_times[1] = last_proc_times[0];
 8008542:	4b8c      	ldr	r3, [pc, #560]	; (8008774 <imu_ahrs_update+0x394>)
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	4a8b      	ldr	r2, [pc, #556]	; (8008774 <imu_ahrs_update+0x394>)
 8008548:	6053      	str	r3, [r2, #4]

	/* Fast inverse square-root */
	norm = inv_sqrt(ax * ax + ay * ay + az * az);
 800854a:	4b83      	ldr	r3, [pc, #524]	; (8008758 <imu_ahrs_update+0x378>)
 800854c:	ed93 7a00 	vldr	s14, [r3]
 8008550:	4b81      	ldr	r3, [pc, #516]	; (8008758 <imu_ahrs_update+0x378>)
 8008552:	edd3 7a00 	vldr	s15, [r3]
 8008556:	ee27 7a27 	vmul.f32	s14, s14, s15
 800855a:	4b80      	ldr	r3, [pc, #512]	; (800875c <imu_ahrs_update+0x37c>)
 800855c:	edd3 6a00 	vldr	s13, [r3]
 8008560:	4b7e      	ldr	r3, [pc, #504]	; (800875c <imu_ahrs_update+0x37c>)
 8008562:	edd3 7a00 	vldr	s15, [r3]
 8008566:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800856a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800856e:	4b7c      	ldr	r3, [pc, #496]	; (8008760 <imu_ahrs_update+0x380>)
 8008570:	edd3 6a00 	vldr	s13, [r3]
 8008574:	4b7a      	ldr	r3, [pc, #488]	; (8008760 <imu_ahrs_update+0x380>)
 8008576:	edd3 7a00 	vldr	s15, [r3]
 800857a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800857e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008582:	eeb0 0a67 	vmov.f32	s0, s15
 8008586:	f7f9 f8a3 	bl	80016d0 <inv_sqrt>
 800858a:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48
	ax = ax * norm;
 800858e:	4b72      	ldr	r3, [pc, #456]	; (8008758 <imu_ahrs_update+0x378>)
 8008590:	ed93 7a00 	vldr	s14, [r3]
 8008594:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008598:	ee67 7a27 	vmul.f32	s15, s14, s15
 800859c:	4b6e      	ldr	r3, [pc, #440]	; (8008758 <imu_ahrs_update+0x378>)
 800859e:	edc3 7a00 	vstr	s15, [r3]
	ay = ay * norm;
 80085a2:	4b6e      	ldr	r3, [pc, #440]	; (800875c <imu_ahrs_update+0x37c>)
 80085a4:	ed93 7a00 	vldr	s14, [r3]
 80085a8:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 80085ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80085b0:	4b6a      	ldr	r3, [pc, #424]	; (800875c <imu_ahrs_update+0x37c>)
 80085b2:	edc3 7a00 	vstr	s15, [r3]
	az = az * norm;
 80085b6:	4b6a      	ldr	r3, [pc, #424]	; (8008760 <imu_ahrs_update+0x380>)
 80085b8:	ed93 7a00 	vldr	s14, [r3]
 80085bc:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 80085c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80085c4:	4b66      	ldr	r3, [pc, #408]	; (8008760 <imu_ahrs_update+0x380>)
 80085c6:	edc3 7a00 	vstr	s15, [r3]
		norm = inv_sqrt(mx*mx + my*my + mz*mz);
		mx = mx * norm;
		my = my * norm;
		mz = mz * norm;
	#else
	mx = 0;
 80085ca:	4b67      	ldr	r3, [pc, #412]	; (8008768 <imu_ahrs_update+0x388>)
 80085cc:	f04f 0200 	mov.w	r2, #0
 80085d0:	601a      	str	r2, [r3, #0]
	my = 0;
 80085d2:	4b66      	ldr	r3, [pc, #408]	; (800876c <imu_ahrs_update+0x38c>)
 80085d4:	f04f 0200 	mov.w	r2, #0
 80085d8:	601a      	str	r2, [r3, #0]
	mz = 0;
 80085da:	4b65      	ldr	r3, [pc, #404]	; (8008770 <imu_ahrs_update+0x390>)
 80085dc:	f04f 0200 	mov.w	r2, #0
 80085e0:	601a      	str	r2, [r3, #0]
#endif
	/* compute reference direction of flux */
	hx = 2.0f * mx * (0.5f - q2q2 - q3q3) + 2.0f * my * (q1q2 - q0q3) + 2.0f * mz * (q1q3 + q0q2);
 80085e2:	4b61      	ldr	r3, [pc, #388]	; (8008768 <imu_ahrs_update+0x388>)
 80085e4:	edd3 7a00 	vldr	s15, [r3]
 80085e8:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80085ec:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80085f0:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 80085f4:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80085f8:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 80085fc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008600:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008604:	4b59      	ldr	r3, [pc, #356]	; (800876c <imu_ahrs_update+0x38c>)
 8008606:	edd3 7a00 	vldr	s15, [r3]
 800860a:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800860e:	ed97 6a18 	vldr	s12, [r7, #96]	; 0x60
 8008612:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8008616:	ee76 7a67 	vsub.f32	s15, s12, s15
 800861a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800861e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008622:	4b53      	ldr	r3, [pc, #332]	; (8008770 <imu_ahrs_update+0x390>)
 8008624:	edd3 7a00 	vldr	s15, [r3]
 8008628:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800862c:	ed97 6a17 	vldr	s12, [r7, #92]	; 0x5c
 8008630:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8008634:	ee76 7a27 	vadd.f32	s15, s12, s15
 8008638:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800863c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008640:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
	hy = 2.0f * mx * (q1q2 + q0q3) + 2.0f * my * (0.5f - q1q1 - q3q3) + 2.0f * mz * (q2q3 - q0q1);
 8008644:	4b48      	ldr	r3, [pc, #288]	; (8008768 <imu_ahrs_update+0x388>)
 8008646:	edd3 7a00 	vldr	s15, [r3]
 800864a:	ee37 7aa7 	vadd.f32	s14, s15, s15
 800864e:	edd7 6a18 	vldr	s13, [r7, #96]	; 0x60
 8008652:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8008656:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800865a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800865e:	4b43      	ldr	r3, [pc, #268]	; (800876c <imu_ahrs_update+0x38c>)
 8008660:	edd3 7a00 	vldr	s15, [r3]
 8008664:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008668:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800866c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008670:	ee36 6a67 	vsub.f32	s12, s12, s15
 8008674:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8008678:	ee76 7a67 	vsub.f32	s15, s12, s15
 800867c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008680:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008684:	4b3a      	ldr	r3, [pc, #232]	; (8008770 <imu_ahrs_update+0x390>)
 8008686:	edd3 7a00 	vldr	s15, [r3]
 800868a:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800868e:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 8008692:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 8008696:	ee76 7a67 	vsub.f32	s15, s12, s15
 800869a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800869e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80086a2:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
	hz = 2.0f * mx * (q1q3 - q0q2) + 2.0f * my * (q2q3 + q0q1) + 2.0f * mz * (0.5f - q1q1 - q2q2);
 80086a6:	4b30      	ldr	r3, [pc, #192]	; (8008768 <imu_ahrs_update+0x388>)
 80086a8:	edd3 7a00 	vldr	s15, [r3]
 80086ac:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80086b0:	edd7 6a17 	vldr	s13, [r7, #92]	; 0x5c
 80086b4:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 80086b8:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80086bc:	ee27 7a27 	vmul.f32	s14, s14, s15
 80086c0:	4b2a      	ldr	r3, [pc, #168]	; (800876c <imu_ahrs_update+0x38c>)
 80086c2:	edd3 7a00 	vldr	s15, [r3]
 80086c6:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80086ca:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 80086ce:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 80086d2:	ee76 7a27 	vadd.f32	s15, s12, s15
 80086d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80086da:	ee37 7a27 	vadd.f32	s14, s14, s15
 80086de:	4b24      	ldr	r3, [pc, #144]	; (8008770 <imu_ahrs_update+0x390>)
 80086e0:	edd3 7a00 	vldr	s15, [r3]
 80086e4:	ee77 6aa7 	vadd.f32	s13, s15, s15
 80086e8:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80086ec:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 80086f0:	ee36 6a67 	vsub.f32	s12, s12, s15
 80086f4:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 80086f8:	ee76 7a67 	vsub.f32	s15, s12, s15
 80086fc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008700:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008704:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c
	bx = sqrt((hx * hx) + (hy * hy));
 8008708:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 800870c:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8008710:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8008714:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008718:	ee77 7a27 	vadd.f32	s15, s14, s15
 800871c:	ee17 0a90 	vmov	r0, s15
 8008720:	f7f7 ff12 	bl	8000548 <__aeabi_f2d>
 8008724:	4602      	mov	r2, r0
 8008726:	460b      	mov	r3, r1
 8008728:	ec43 2b10 	vmov	d0, r2, r3
 800872c:	f01b ff66 	bl	80245fc <sqrt>
 8008730:	e024      	b.n	800877c <imu_ahrs_update+0x39c>
 8008732:	bf00      	nop
 8008734:	20000010 	.word	0x20000010
 8008738:	20003240 	.word	0x20003240
 800873c:	20003244 	.word	0x20003244
 8008740:	20003248 	.word	0x20003248
 8008744:	200032b4 	.word	0x200032b4
 8008748:	20003258 	.word	0x20003258
 800874c:	2000325c 	.word	0x2000325c
 8008750:	20003260 	.word	0x20003260
 8008754:	200032a4 	.word	0x200032a4
 8008758:	20003264 	.word	0x20003264
 800875c:	20003268 	.word	0x20003268
 8008760:	2000326c 	.word	0x2000326c
 8008764:	200032c4 	.word	0x200032c4
 8008768:	20003270 	.word	0x20003270
 800876c:	20003274 	.word	0x20003274
 8008770:	20003278 	.word	0x20003278
 8008774:	200032d0 	.word	0x200032d0
 8008778:	44fa0000 	.word	0x44fa0000
 800877c:	ec53 2b10 	vmov	r2, r3, d0
 8008780:	4610      	mov	r0, r2
 8008782:	4619      	mov	r1, r3
 8008784:	f7f8 fa30 	bl	8000be8 <__aeabi_d2f>
 8008788:	4603      	mov	r3, r0
 800878a:	63bb      	str	r3, [r7, #56]	; 0x38
	bz = hz;
 800878c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800878e:	637b      	str	r3, [r7, #52]	; 0x34

	/* estimated direction of gravity and flux (v and w) */
	vx = 2.0f * (q1q3 - q0q2);
 8008790:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8008794:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8008798:	ee77 7a67 	vsub.f32	s15, s14, s15
 800879c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80087a0:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
	vy = 2.0f * (q0q1 + q2q3);
 80087a4:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 80087a8:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 80087ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 80087b0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80087b4:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
	vz = q0q0 - q1q1 - q2q2 + q3q3;
 80087b8:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 80087bc:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 80087c0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80087c4:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 80087c8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80087cc:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 80087d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80087d4:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	wx = 2.0f * bx * (0.5f - q2q2 - q3q3) + 2.0f * bz * (q1q3 - q0q2);
 80087d8:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 80087dc:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80087e0:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80087e4:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 80087e8:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80087ec:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 80087f0:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80087f4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80087f8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80087fc:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008800:	ed97 6a17 	vldr	s12, [r7, #92]	; 0x5c
 8008804:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8008808:	ee76 7a67 	vsub.f32	s15, s12, s15
 800880c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008810:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008814:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
	wy = 2.0f * bx * (q1q2 - q0q3) + 2.0f * bz * (q0q1 + q2q3);
 8008818:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 800881c:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008820:	edd7 6a18 	vldr	s13, [r7, #96]	; 0x60
 8008824:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8008828:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800882c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008830:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8008834:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008838:	ed97 6a1c 	vldr	s12, [r7, #112]	; 0x70
 800883c:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8008840:	ee76 7a27 	vadd.f32	s15, s12, s15
 8008844:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008848:	ee77 7a27 	vadd.f32	s15, s14, s15
 800884c:	edc7 7a08 	vstr	s15, [r7, #32]
	wz = 2.0f * bx * (q0q2 + q1q3) + 2.0f * bz * (0.5f - q1q1 - q2q2);
 8008850:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8008854:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008858:	edd7 6a1b 	vldr	s13, [r7, #108]	; 0x6c
 800885c:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 8008860:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008864:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008868:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800886c:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008870:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8008874:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8008878:	ee36 6a67 	vsub.f32	s12, s12, s15
 800887c:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 8008880:	ee76 7a67 	vsub.f32	s15, s12, s15
 8008884:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008888:	ee77 7a27 	vadd.f32	s15, s14, s15
 800888c:	edc7 7a07 	vstr	s15, [r7, #28]

	/*
	 * error is sum of cross product between reference direction
	 * of fields and direction measured by sensors
	 */
	ex = (ay * vz - az * vy) + (my * wz - mz * wy);
 8008890:	4bde      	ldr	r3, [pc, #888]	; (8008c0c <imu_ahrs_update+0x82c>)
 8008892:	ed93 7a00 	vldr	s14, [r3]
 8008896:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 800889a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800889e:	4bdc      	ldr	r3, [pc, #880]	; (8008c10 <imu_ahrs_update+0x830>)
 80088a0:	edd3 6a00 	vldr	s13, [r3]
 80088a4:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80088a8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80088ac:	ee37 7a67 	vsub.f32	s14, s14, s15
 80088b0:	4bd8      	ldr	r3, [pc, #864]	; (8008c14 <imu_ahrs_update+0x834>)
 80088b2:	edd3 6a00 	vldr	s13, [r3]
 80088b6:	edd7 7a07 	vldr	s15, [r7, #28]
 80088ba:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80088be:	4bd6      	ldr	r3, [pc, #856]	; (8008c18 <imu_ahrs_update+0x838>)
 80088c0:	ed93 6a00 	vldr	s12, [r3]
 80088c4:	edd7 7a08 	vldr	s15, [r7, #32]
 80088c8:	ee66 7a27 	vmul.f32	s15, s12, s15
 80088cc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80088d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80088d4:	edc7 7a06 	vstr	s15, [r7, #24]
	ey = (az * vx - ax * vz) + (mz * wx - mx * wz);
 80088d8:	4bcd      	ldr	r3, [pc, #820]	; (8008c10 <imu_ahrs_update+0x830>)
 80088da:	ed93 7a00 	vldr	s14, [r3]
 80088de:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 80088e2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80088e6:	4bcd      	ldr	r3, [pc, #820]	; (8008c1c <imu_ahrs_update+0x83c>)
 80088e8:	edd3 6a00 	vldr	s13, [r3]
 80088ec:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80088f0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80088f4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80088f8:	4bc7      	ldr	r3, [pc, #796]	; (8008c18 <imu_ahrs_update+0x838>)
 80088fa:	edd3 6a00 	vldr	s13, [r3]
 80088fe:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8008902:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8008906:	4bc6      	ldr	r3, [pc, #792]	; (8008c20 <imu_ahrs_update+0x840>)
 8008908:	ed93 6a00 	vldr	s12, [r3]
 800890c:	edd7 7a07 	vldr	s15, [r7, #28]
 8008910:	ee66 7a27 	vmul.f32	s15, s12, s15
 8008914:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008918:	ee77 7a27 	vadd.f32	s15, s14, s15
 800891c:	edc7 7a05 	vstr	s15, [r7, #20]
	ez = (ax * vy - ay * vx) + (mx * wy - my * wx);
 8008920:	4bbe      	ldr	r3, [pc, #760]	; (8008c1c <imu_ahrs_update+0x83c>)
 8008922:	ed93 7a00 	vldr	s14, [r3]
 8008926:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800892a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800892e:	4bb7      	ldr	r3, [pc, #732]	; (8008c0c <imu_ahrs_update+0x82c>)
 8008930:	edd3 6a00 	vldr	s13, [r3]
 8008934:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8008938:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800893c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008940:	4bb7      	ldr	r3, [pc, #732]	; (8008c20 <imu_ahrs_update+0x840>)
 8008942:	edd3 6a00 	vldr	s13, [r3]
 8008946:	edd7 7a08 	vldr	s15, [r7, #32]
 800894a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800894e:	4bb1      	ldr	r3, [pc, #708]	; (8008c14 <imu_ahrs_update+0x834>)
 8008950:	ed93 6a00 	vldr	s12, [r3]
 8008954:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8008958:	ee66 7a27 	vmul.f32	s15, s12, s15
 800895c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8008960:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008964:	edc7 7a04 	vstr	s15, [r7, #16]

	/* PI */
	if (ex != 0.0f && ey != 0.0f && ez != 0.0f) {
 8008968:	edd7 7a06 	vldr	s15, [r7, #24]
 800896c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8008970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008974:	d07c      	beq.n	8008a70 <imu_ahrs_update+0x690>
 8008976:	edd7 7a05 	vldr	s15, [r7, #20]
 800897a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800897e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008982:	d075      	beq.n	8008a70 <imu_ahrs_update+0x690>
 8008984:	edd7 7a04 	vldr	s15, [r7, #16]
 8008988:	eef5 7a40 	vcmp.f32	s15, #0.0
 800898c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008990:	d06e      	beq.n	8008a70 <imu_ahrs_update+0x690>
		exInt = exInt + ex * AHRSKi * halfT;
 8008992:	edd7 7a06 	vldr	s15, [r7, #24]
 8008996:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8008c24 <imu_ahrs_update+0x844>
 800899a:	ee27 7a87 	vmul.f32	s14, s15, s14
 800899e:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 80089a2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089a6:	4ba0      	ldr	r3, [pc, #640]	; (8008c28 <imu_ahrs_update+0x848>)
 80089a8:	edd3 7a00 	vldr	s15, [r3]
 80089ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 80089b0:	4b9d      	ldr	r3, [pc, #628]	; (8008c28 <imu_ahrs_update+0x848>)
 80089b2:	edc3 7a00 	vstr	s15, [r3]
		eyInt = eyInt + ey * AHRSKi * halfT;
 80089b6:	edd7 7a05 	vldr	s15, [r7, #20]
 80089ba:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8008c24 <imu_ahrs_update+0x844>
 80089be:	ee27 7a87 	vmul.f32	s14, s15, s14
 80089c2:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 80089c6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089ca:	4b98      	ldr	r3, [pc, #608]	; (8008c2c <imu_ahrs_update+0x84c>)
 80089cc:	edd3 7a00 	vldr	s15, [r3]
 80089d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80089d4:	4b95      	ldr	r3, [pc, #596]	; (8008c2c <imu_ahrs_update+0x84c>)
 80089d6:	edc3 7a00 	vstr	s15, [r3]
		ezInt = ezInt + ez * AHRSKi * halfT;
 80089da:	edd7 7a04 	vldr	s15, [r7, #16]
 80089de:	ed9f 7a91 	vldr	s14, [pc, #580]	; 8008c24 <imu_ahrs_update+0x844>
 80089e2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80089e6:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 80089ea:	ee27 7a27 	vmul.f32	s14, s14, s15
 80089ee:	4b90      	ldr	r3, [pc, #576]	; (8008c30 <imu_ahrs_update+0x850>)
 80089f0:	edd3 7a00 	vldr	s15, [r3]
 80089f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80089f8:	4b8d      	ldr	r3, [pc, #564]	; (8008c30 <imu_ahrs_update+0x850>)
 80089fa:	edc3 7a00 	vstr	s15, [r3]

		gx = gx + AHRSKp * ex + exInt;
 80089fe:	edd7 7a06 	vldr	s15, [r7, #24]
 8008a02:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8008c34 <imu_ahrs_update+0x854>
 8008a06:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008a0a:	4b8b      	ldr	r3, [pc, #556]	; (8008c38 <imu_ahrs_update+0x858>)
 8008a0c:	edd3 7a00 	vldr	s15, [r3]
 8008a10:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a14:	4b84      	ldr	r3, [pc, #528]	; (8008c28 <imu_ahrs_update+0x848>)
 8008a16:	edd3 7a00 	vldr	s15, [r3]
 8008a1a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008a1e:	4b86      	ldr	r3, [pc, #536]	; (8008c38 <imu_ahrs_update+0x858>)
 8008a20:	edc3 7a00 	vstr	s15, [r3]
		gy = gy + AHRSKp * ey + eyInt;
 8008a24:	edd7 7a05 	vldr	s15, [r7, #20]
 8008a28:	ed9f 7a82 	vldr	s14, [pc, #520]	; 8008c34 <imu_ahrs_update+0x854>
 8008a2c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008a30:	4b82      	ldr	r3, [pc, #520]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008a32:	edd3 7a00 	vldr	s15, [r3]
 8008a36:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a3a:	4b7c      	ldr	r3, [pc, #496]	; (8008c2c <imu_ahrs_update+0x84c>)
 8008a3c:	edd3 7a00 	vldr	s15, [r3]
 8008a40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008a44:	4b7d      	ldr	r3, [pc, #500]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008a46:	edc3 7a00 	vstr	s15, [r3]
		gz = gz + AHRSKp * ez + ezInt;
 8008a4a:	edd7 7a04 	vldr	s15, [r7, #16]
 8008a4e:	ed9f 7a79 	vldr	s14, [pc, #484]	; 8008c34 <imu_ahrs_update+0x854>
 8008a52:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008a56:	4b7a      	ldr	r3, [pc, #488]	; (8008c40 <imu_ahrs_update+0x860>)
 8008a58:	edd3 7a00 	vldr	s15, [r3]
 8008a5c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008a60:	4b73      	ldr	r3, [pc, #460]	; (8008c30 <imu_ahrs_update+0x850>)
 8008a62:	edd3 7a00 	vldr	s15, [r3]
 8008a66:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008a6a:	4b75      	ldr	r3, [pc, #468]	; (8008c40 <imu_ahrs_update+0x860>)
 8008a6c:	edc3 7a00 	vstr	s15, [r3]
	}

	tempq0 = q0 + (-q1 * gx - q2 * gy - q3 * gz) * halfT;
 8008a70:	4b74      	ldr	r3, [pc, #464]	; (8008c44 <imu_ahrs_update+0x864>)
 8008a72:	edd3 7a00 	vldr	s15, [r3]
 8008a76:	eeb1 7a67 	vneg.f32	s14, s15
 8008a7a:	4b6f      	ldr	r3, [pc, #444]	; (8008c38 <imu_ahrs_update+0x858>)
 8008a7c:	edd3 7a00 	vldr	s15, [r3]
 8008a80:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008a84:	4b70      	ldr	r3, [pc, #448]	; (8008c48 <imu_ahrs_update+0x868>)
 8008a86:	edd3 6a00 	vldr	s13, [r3]
 8008a8a:	4b6c      	ldr	r3, [pc, #432]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008a8c:	edd3 7a00 	vldr	s15, [r3]
 8008a90:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008a94:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008a98:	4b6c      	ldr	r3, [pc, #432]	; (8008c4c <imu_ahrs_update+0x86c>)
 8008a9a:	edd3 6a00 	vldr	s13, [r3]
 8008a9e:	4b68      	ldr	r3, [pc, #416]	; (8008c40 <imu_ahrs_update+0x860>)
 8008aa0:	edd3 7a00 	vldr	s15, [r3]
 8008aa4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008aa8:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008aac:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008ab0:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008ab4:	4b66      	ldr	r3, [pc, #408]	; (8008c50 <imu_ahrs_update+0x870>)
 8008ab6:	edd3 7a00 	vldr	s15, [r3]
 8008aba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008abe:	edc7 7a03 	vstr	s15, [r7, #12]
	tempq1 = q1 + (q0 * gx + q2 * gz - q3 * gy) * halfT;
 8008ac2:	4b63      	ldr	r3, [pc, #396]	; (8008c50 <imu_ahrs_update+0x870>)
 8008ac4:	ed93 7a00 	vldr	s14, [r3]
 8008ac8:	4b5b      	ldr	r3, [pc, #364]	; (8008c38 <imu_ahrs_update+0x858>)
 8008aca:	edd3 7a00 	vldr	s15, [r3]
 8008ace:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008ad2:	4b5d      	ldr	r3, [pc, #372]	; (8008c48 <imu_ahrs_update+0x868>)
 8008ad4:	edd3 6a00 	vldr	s13, [r3]
 8008ad8:	4b59      	ldr	r3, [pc, #356]	; (8008c40 <imu_ahrs_update+0x860>)
 8008ada:	edd3 7a00 	vldr	s15, [r3]
 8008ade:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008ae2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008ae6:	4b59      	ldr	r3, [pc, #356]	; (8008c4c <imu_ahrs_update+0x86c>)
 8008ae8:	edd3 6a00 	vldr	s13, [r3]
 8008aec:	4b53      	ldr	r3, [pc, #332]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008aee:	edd3 7a00 	vldr	s15, [r3]
 8008af2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008af6:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008afa:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008afe:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b02:	4b50      	ldr	r3, [pc, #320]	; (8008c44 <imu_ahrs_update+0x864>)
 8008b04:	edd3 7a00 	vldr	s15, [r3]
 8008b08:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008b0c:	edc7 7a02 	vstr	s15, [r7, #8]
	tempq2 = q2 + (q0 * gy - q1 * gz + q3 * gx) * halfT;
 8008b10:	4b4f      	ldr	r3, [pc, #316]	; (8008c50 <imu_ahrs_update+0x870>)
 8008b12:	ed93 7a00 	vldr	s14, [r3]
 8008b16:	4b49      	ldr	r3, [pc, #292]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008b18:	edd3 7a00 	vldr	s15, [r3]
 8008b1c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b20:	4b48      	ldr	r3, [pc, #288]	; (8008c44 <imu_ahrs_update+0x864>)
 8008b22:	edd3 6a00 	vldr	s13, [r3]
 8008b26:	4b46      	ldr	r3, [pc, #280]	; (8008c40 <imu_ahrs_update+0x860>)
 8008b28:	edd3 7a00 	vldr	s15, [r3]
 8008b2c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b30:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008b34:	4b45      	ldr	r3, [pc, #276]	; (8008c4c <imu_ahrs_update+0x86c>)
 8008b36:	edd3 6a00 	vldr	s13, [r3]
 8008b3a:	4b3f      	ldr	r3, [pc, #252]	; (8008c38 <imu_ahrs_update+0x858>)
 8008b3c:	edd3 7a00 	vldr	s15, [r3]
 8008b40:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b44:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008b48:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008b4c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b50:	4b3d      	ldr	r3, [pc, #244]	; (8008c48 <imu_ahrs_update+0x868>)
 8008b52:	edd3 7a00 	vldr	s15, [r3]
 8008b56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008b5a:	edc7 7a01 	vstr	s15, [r7, #4]
	tempq3 = q3 + (q0 * gz + q1 * gy - q2 * gx) * halfT;
 8008b5e:	4b3c      	ldr	r3, [pc, #240]	; (8008c50 <imu_ahrs_update+0x870>)
 8008b60:	ed93 7a00 	vldr	s14, [r3]
 8008b64:	4b36      	ldr	r3, [pc, #216]	; (8008c40 <imu_ahrs_update+0x860>)
 8008b66:	edd3 7a00 	vldr	s15, [r3]
 8008b6a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b6e:	4b35      	ldr	r3, [pc, #212]	; (8008c44 <imu_ahrs_update+0x864>)
 8008b70:	edd3 6a00 	vldr	s13, [r3]
 8008b74:	4b31      	ldr	r3, [pc, #196]	; (8008c3c <imu_ahrs_update+0x85c>)
 8008b76:	edd3 7a00 	vldr	s15, [r3]
 8008b7a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b7e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008b82:	4b31      	ldr	r3, [pc, #196]	; (8008c48 <imu_ahrs_update+0x868>)
 8008b84:	edd3 6a00 	vldr	s13, [r3]
 8008b88:	4b2b      	ldr	r3, [pc, #172]	; (8008c38 <imu_ahrs_update+0x858>)
 8008b8a:	edd3 7a00 	vldr	s15, [r3]
 8008b8e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008b92:	ee37 7a67 	vsub.f32	s14, s14, s15
 8008b96:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8008b9a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008b9e:	4b2b      	ldr	r3, [pc, #172]	; (8008c4c <imu_ahrs_update+0x86c>)
 8008ba0:	edd3 7a00 	vldr	s15, [r3]
 8008ba4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008ba8:	edc7 7a00 	vstr	s15, [r7]

	/* normalise quaternion */
	norm = inv_sqrt(tempq0 * tempq0 + tempq1 * tempq1 + tempq2 * tempq2 + tempq3 * tempq3);
 8008bac:	edd7 7a03 	vldr	s15, [r7, #12]
 8008bb0:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8008bb4:	edd7 7a02 	vldr	s15, [r7, #8]
 8008bb8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008bbc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008bc0:	edd7 7a01 	vldr	s15, [r7, #4]
 8008bc4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008bc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008bcc:	edd7 7a00 	vldr	s15, [r7]
 8008bd0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8008bd4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008bd8:	eeb0 0a67 	vmov.f32	s0, s15
 8008bdc:	f7f8 fd78 	bl	80016d0 <inv_sqrt>
 8008be0:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48
	q0 = tempq0 * norm;
 8008be4:	ed97 7a03 	vldr	s14, [r7, #12]
 8008be8:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008bec:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008bf0:	4b17      	ldr	r3, [pc, #92]	; (8008c50 <imu_ahrs_update+0x870>)
 8008bf2:	edc3 7a00 	vstr	s15, [r3]
	q1 = tempq1 * norm;
 8008bf6:	ed97 7a02 	vldr	s14, [r7, #8]
 8008bfa:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008bfe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008c02:	4b10      	ldr	r3, [pc, #64]	; (8008c44 <imu_ahrs_update+0x864>)
 8008c04:	edc3 7a00 	vstr	s15, [r3]
 8008c08:	e024      	b.n	8008c54 <imu_ahrs_update+0x874>
 8008c0a:	bf00      	nop
 8008c0c:	20003268 	.word	0x20003268
 8008c10:	2000326c 	.word	0x2000326c
 8008c14:	20003274 	.word	0x20003274
 8008c18:	20003278 	.word	0x20003278
 8008c1c:	20003264 	.word	0x20003264
 8008c20:	20003270 	.word	0x20003270
 8008c24:	00000000 	.word	0x00000000
 8008c28:	2000324c 	.word	0x2000324c
 8008c2c:	20003250 	.word	0x20003250
 8008c30:	20003254 	.word	0x20003254
 8008c34:	3e19999a 	.word	0x3e19999a
 8008c38:	20003258 	.word	0x20003258
 8008c3c:	2000325c 	.word	0x2000325c
 8008c40:	20003260 	.word	0x20003260
 8008c44:	20003240 	.word	0x20003240
 8008c48:	20003244 	.word	0x20003244
 8008c4c:	20003248 	.word	0x20003248
 8008c50:	20000010 	.word	0x20000010
	q2 = tempq2 * norm;
 8008c54:	ed97 7a01 	vldr	s14, [r7, #4]
 8008c58:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008c5c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008c60:	4b07      	ldr	r3, [pc, #28]	; (8008c80 <imu_ahrs_update+0x8a0>)
 8008c62:	edc3 7a00 	vstr	s15, [r3]
	q3 = tempq3 * norm;
 8008c66:	ed97 7a00 	vldr	s14, [r7]
 8008c6a:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8008c6e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008c72:	4b04      	ldr	r3, [pc, #16]	; (8008c84 <imu_ahrs_update+0x8a4>)
 8008c74:	edc3 7a00 	vstr	s15, [r3]
}
 8008c78:	bf00      	nop
 8008c7a:	3778      	adds	r7, #120	; 0x78
 8008c7c:	46bd      	mov	sp, r7
 8008c7e:	bd80      	pop	{r7, pc}
 8008c80:	20003244 	.word	0x20003244
 8008c84:	20003248 	.word	0x20003248

08008c88 <imu_attitude_update>:

void imu_attitude_update(void) {
 8008c88:	b5b0      	push	{r4, r5, r7, lr}
 8008c8a:	af00      	add	r7, sp, #0
	if (IMU_ORIENTATION == 0) {
		/* yaw    -pi----pi */
		imu_heading.yaw = -atan2(2 * q1 * q2 + 2 * q0 * q3,
 8008c8c:	4b63      	ldr	r3, [pc, #396]	; (8008e1c <imu_attitude_update+0x194>)
 8008c8e:	edd3 7a00 	vldr	s15, [r3]
 8008c92:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008c96:	4b62      	ldr	r3, [pc, #392]	; (8008e20 <imu_attitude_update+0x198>)
 8008c98:	edd3 7a00 	vldr	s15, [r3]
 8008c9c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008ca0:	4b60      	ldr	r3, [pc, #384]	; (8008e24 <imu_attitude_update+0x19c>)
 8008ca2:	edd3 7a00 	vldr	s15, [r3]
 8008ca6:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008caa:	4b5f      	ldr	r3, [pc, #380]	; (8008e28 <imu_attitude_update+0x1a0>)
 8008cac:	edd3 7a00 	vldr	s15, [r3]
 8008cb0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008cb4:	ee77 7a27 	vadd.f32	s15, s14, s15
				-2 * q2 * q2 - 2 * q3 * q3 + 1) * IMU_YAW_INVERT;
 8008cb8:	ee17 0a90 	vmov	r0, s15
 8008cbc:	f7f7 fc44 	bl	8000548 <__aeabi_f2d>
 8008cc0:	4604      	mov	r4, r0
 8008cc2:	460d      	mov	r5, r1
 8008cc4:	4b56      	ldr	r3, [pc, #344]	; (8008e20 <imu_attitude_update+0x198>)
 8008cc6:	edd3 7a00 	vldr	s15, [r3]
 8008cca:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008cce:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008cd2:	4b53      	ldr	r3, [pc, #332]	; (8008e20 <imu_attitude_update+0x198>)
 8008cd4:	edd3 7a00 	vldr	s15, [r3]
 8008cd8:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008cdc:	4b52      	ldr	r3, [pc, #328]	; (8008e28 <imu_attitude_update+0x1a0>)
 8008cde:	edd3 7a00 	vldr	s15, [r3]
 8008ce2:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008ce6:	4b50      	ldr	r3, [pc, #320]	; (8008e28 <imu_attitude_update+0x1a0>)
 8008ce8:	edd3 7a00 	vldr	s15, [r3]
 8008cec:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008cf0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8008cf4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008cf8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008cfc:	ee17 0a90 	vmov	r0, s15
 8008d00:	f7f7 fc22 	bl	8000548 <__aeabi_f2d>
 8008d04:	4602      	mov	r2, r0
 8008d06:	460b      	mov	r3, r1
 8008d08:	ec43 2b11 	vmov	d1, r2, r3
 8008d0c:	ec45 4b10 	vmov	d0, r4, r5
 8008d10:	f01b fc02 	bl	8024518 <atan2>
 8008d14:	ec53 2b10 	vmov	r2, r3, d0
 8008d18:	4610      	mov	r0, r2
 8008d1a:	4619      	mov	r1, r3
 8008d1c:	f7f7 ff64 	bl	8000be8 <__aeabi_d2f>
 8008d20:	4603      	mov	r3, r0
		imu_heading.yaw = -atan2(2 * q1 * q2 + 2 * q0 * q3,
 8008d22:	4a42      	ldr	r2, [pc, #264]	; (8008e2c <imu_attitude_update+0x1a4>)
 8008d24:	6093      	str	r3, [r2, #8]
		/* pitch  -pi/2----pi/2 */
		imu_heading.pit = -asin(-2 * q1 * q3 + 2 * q0 * q2) * IMU_PITCH_INVERT;
 8008d26:	4b3d      	ldr	r3, [pc, #244]	; (8008e1c <imu_attitude_update+0x194>)
 8008d28:	edd3 7a00 	vldr	s15, [r3]
 8008d2c:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008d30:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008d34:	4b3c      	ldr	r3, [pc, #240]	; (8008e28 <imu_attitude_update+0x1a0>)
 8008d36:	edd3 7a00 	vldr	s15, [r3]
 8008d3a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008d3e:	4b39      	ldr	r3, [pc, #228]	; (8008e24 <imu_attitude_update+0x19c>)
 8008d40:	edd3 7a00 	vldr	s15, [r3]
 8008d44:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008d48:	4b35      	ldr	r3, [pc, #212]	; (8008e20 <imu_attitude_update+0x198>)
 8008d4a:	edd3 7a00 	vldr	s15, [r3]
 8008d4e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008d52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008d56:	ee17 0a90 	vmov	r0, s15
 8008d5a:	f7f7 fbf5 	bl	8000548 <__aeabi_f2d>
 8008d5e:	4602      	mov	r2, r0
 8008d60:	460b      	mov	r3, r1
 8008d62:	ec43 2b10 	vmov	d0, r2, r3
 8008d66:	f01b fba3 	bl	80244b0 <asin>
 8008d6a:	ec53 2b10 	vmov	r2, r3, d0
 8008d6e:	4610      	mov	r0, r2
 8008d70:	4619      	mov	r1, r3
 8008d72:	f7f7 ff39 	bl	8000be8 <__aeabi_d2f>
 8008d76:	4603      	mov	r3, r0
 8008d78:	4a2c      	ldr	r2, [pc, #176]	; (8008e2c <imu_attitude_update+0x1a4>)
 8008d7a:	6013      	str	r3, [r2, #0]
		/* roll   -pi----pi  */
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
 8008d7c:	4b28      	ldr	r3, [pc, #160]	; (8008e20 <imu_attitude_update+0x198>)
 8008d7e:	edd3 7a00 	vldr	s15, [r3]
 8008d82:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8008d86:	4b28      	ldr	r3, [pc, #160]	; (8008e28 <imu_attitude_update+0x1a0>)
 8008d88:	edd3 7a00 	vldr	s15, [r3]
 8008d8c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008d90:	4b24      	ldr	r3, [pc, #144]	; (8008e24 <imu_attitude_update+0x19c>)
 8008d92:	edd3 7a00 	vldr	s15, [r3]
 8008d96:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008d9a:	4b20      	ldr	r3, [pc, #128]	; (8008e1c <imu_attitude_update+0x194>)
 8008d9c:	edd3 7a00 	vldr	s15, [r3]
 8008da0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008da4:	ee77 7a27 	vadd.f32	s15, s14, s15
				-2 * q1 * q1 - 2 * q2 * q2 + 1) * IMU_ROLL_INVERT;
 8008da8:	ee17 0a90 	vmov	r0, s15
 8008dac:	f7f7 fbcc 	bl	8000548 <__aeabi_f2d>
 8008db0:	4604      	mov	r4, r0
 8008db2:	460d      	mov	r5, r1
 8008db4:	4b19      	ldr	r3, [pc, #100]	; (8008e1c <imu_attitude_update+0x194>)
 8008db6:	edd3 7a00 	vldr	s15, [r3]
 8008dba:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 8008dbe:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008dc2:	4b16      	ldr	r3, [pc, #88]	; (8008e1c <imu_attitude_update+0x194>)
 8008dc4:	edd3 7a00 	vldr	s15, [r3]
 8008dc8:	ee27 7a27 	vmul.f32	s14, s14, s15
 8008dcc:	4b14      	ldr	r3, [pc, #80]	; (8008e20 <imu_attitude_update+0x198>)
 8008dce:	edd3 7a00 	vldr	s15, [r3]
 8008dd2:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8008dd6:	4b12      	ldr	r3, [pc, #72]	; (8008e20 <imu_attitude_update+0x198>)
 8008dd8:	edd3 7a00 	vldr	s15, [r3]
 8008ddc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8008de0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8008de4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008de8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008dec:	ee17 0a90 	vmov	r0, s15
 8008df0:	f7f7 fbaa 	bl	8000548 <__aeabi_f2d>
 8008df4:	4602      	mov	r2, r0
 8008df6:	460b      	mov	r3, r1
 8008df8:	ec43 2b11 	vmov	d1, r2, r3
 8008dfc:	ec45 4b10 	vmov	d0, r4, r5
 8008e00:	f01b fb8a 	bl	8024518 <atan2>
 8008e04:	ec53 2b10 	vmov	r2, r3, d0
 8008e08:	4610      	mov	r0, r2
 8008e0a:	4619      	mov	r1, r3
 8008e0c:	f7f7 feec 	bl	8000be8 <__aeabi_d2f>
 8008e10:	4603      	mov	r3, r0
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
 8008e12:	4a06      	ldr	r2, [pc, #24]	; (8008e2c <imu_attitude_update+0x1a4>)
 8008e14:	6053      	str	r3, [r2, #4]
		imu_heading.pit = -asin(-2 * q1 * q3 + 2 * q0 * q2) * IMU_PITCH_INVERT;
		/* roll   -pi----pi  */
		imu_heading.rol = atan2(2 * q2 * q3 + 2 * q0 * q1,
				-2 * q1 * q1 - 2 * q2 * q2 + 1) * IMU_ROLL_INVERT;
	}
}
 8008e16:	bf00      	nop
 8008e18:	bdb0      	pop	{r4, r5, r7, pc}
 8008e1a:	bf00      	nop
 8008e1c:	20003240 	.word	0x20003240
 8008e20:	20003244 	.word	0x20003244
 8008e24:	20000010 	.word	0x20000010
 8008e28:	20003248 	.word	0x20003248
 8008e2c:	2000327c 	.word	0x2000327c

08008e30 <launcher_control_task>:
extern ref_magazine_data_t ref_mag_data;
extern uint32_t ref_mag_data_txno;
static uint32_t prev_power_data_no = 0;
static uint32_t prev_mag_data_no = 0;

void launcher_control_task(void *argument) {
 8008e30:	b580      	push	{r7, lr}
 8008e32:	b086      	sub	sp, #24
 8008e34:	af02      	add	r7, sp, #8
 8008e36:	6078      	str	r0, [r7, #4]
	TickType_t start_time;
	while (1) {
		//event flags!
		xEventGroupWaitBits(launcher_event_group, 0b111, pdTRUE, pdTRUE,
 8008e38:	4b26      	ldr	r3, [pc, #152]	; (8008ed4 <launcher_control_task+0xa4>)
 8008e3a:	6818      	ldr	r0, [r3, #0]
 8008e3c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008e40:	9300      	str	r3, [sp, #0]
 8008e42:	2301      	movs	r3, #1
 8008e44:	2201      	movs	r2, #1
 8008e46:	2107      	movs	r1, #7
 8008e48:	f012 fc64 	bl	801b714 <xEventGroupWaitBits>
		portMAX_DELAY);
		status_led(4, on_led);
 8008e4c:	2100      	movs	r1, #0
 8008e4e:	2004      	movs	r0, #4
 8008e50:	f7f9 f936 	bl	80020c0 <status_led>
		start_time = xTaskGetTickCount();
 8008e54:	f014 f820 	bl	801ce98 <xTaskGetTickCount>
 8008e58:	4603      	mov	r3, r0
 8008e5a:	60fb      	str	r3, [r7, #12]

		if (launcher_ctrl_data.enabled) {
 8008e5c:	4b1e      	ldr	r3, [pc, #120]	; (8008ed8 <launcher_control_task+0xa8>)
 8008e5e:	795b      	ldrb	r3, [r3, #5]
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d006      	beq.n	8008e72 <launcher_control_task+0x42>
			launcher_control(can_motors + LFRICTION_MOTOR_ID - 1,
 8008e64:	4b1d      	ldr	r3, [pc, #116]	; (8008edc <launcher_control_task+0xac>)
 8008e66:	491e      	ldr	r1, [pc, #120]	; (8008ee0 <launcher_control_task+0xb0>)
 8008e68:	4a1e      	ldr	r2, [pc, #120]	; (8008ee4 <launcher_control_task+0xb4>)
 8008e6a:	4618      	mov	r0, r3
 8008e6c:	f000 f840 	bl	8008ef0 <launcher_control>
 8008e70:	e01e      	b.n	8008eb0 <launcher_control_task+0x80>
					can_motors + RFRICTION_MOTOR_ID - 1,
					can_motors + FEEDER_MOTOR_ID - 1);

		} else {
			can_motors[LFRICTION_MOTOR_ID - 1].rpm_pid.output = 0;
 8008e72:	4b1d      	ldr	r3, [pc, #116]	; (8008ee8 <launcher_control_task+0xb8>)
 8008e74:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008e78:	f503 639f 	add.w	r3, r3, #1272	; 0x4f8
 8008e7c:	f04f 0200 	mov.w	r2, #0
 8008e80:	601a      	str	r2, [r3, #0]
			can_motors[RFRICTION_MOTOR_ID - 1].rpm_pid.output = 0;
 8008e82:	4b19      	ldr	r3, [pc, #100]	; (8008ee8 <launcher_control_task+0xb8>)
 8008e84:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008e88:	461a      	mov	r2, r3
 8008e8a:	f04f 0300 	mov.w	r3, #0
 8008e8e:	f8c2 3138 	str.w	r3, [r2, #312]	; 0x138
			can_motors[FEEDER_MOTOR_ID - 1].rpm_pid.output = 0;
 8008e92:	4b15      	ldr	r3, [pc, #84]	; (8008ee8 <launcher_control_task+0xb8>)
 8008e94:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8008e98:	461a      	mov	r2, r3
 8008e9a:	f04f 0300 	mov.w	r3, #0
 8008e9e:	6493      	str	r3, [r2, #72]	; 0x48
			motor_send_can(can_motors, FEEDER_MOTOR_ID, LFRICTION_MOTOR_ID,
 8008ea0:	2300      	movs	r3, #0
 8008ea2:	9300      	str	r3, [sp, #0]
 8008ea4:	2313      	movs	r3, #19
 8008ea6:	2217      	movs	r2, #23
 8008ea8:	2112      	movs	r1, #18
 8008eaa:	480f      	ldr	r0, [pc, #60]	; (8008ee8 <launcher_control_task+0xb8>)
 8008eac:	f003 ff62 	bl	800cd74 <motor_send_can>
			RFRICTION_MOTOR_ID, 0);
		}
		status_led(4, off_led);
 8008eb0:	2101      	movs	r1, #1
 8008eb2:	2004      	movs	r0, #4
 8008eb4:	f7f9 f904 	bl	80020c0 <status_led>
		//vTaskDelay(CHASSIS_DELAY);
		xEventGroupClearBits(launcher_event_group, 0b111);
 8008eb8:	4b06      	ldr	r3, [pc, #24]	; (8008ed4 <launcher_control_task+0xa4>)
 8008eba:	681b      	ldr	r3, [r3, #0]
 8008ebc:	2107      	movs	r1, #7
 8008ebe:	4618      	mov	r0, r3
 8008ec0:	f012 fcf6 	bl	801b8b0 <xEventGroupClearBits>
		vTaskDelayUntil(&start_time, CHASSIS_DELAY);
 8008ec4:	f107 030c 	add.w	r3, r7, #12
 8008ec8:	210a      	movs	r1, #10
 8008eca:	4618      	mov	r0, r3
 8008ecc:	f013 fe16 	bl	801cafc <vTaskDelayUntil>
		xEventGroupWaitBits(launcher_event_group, 0b111, pdTRUE, pdTRUE,
 8008ed0:	e7b2      	b.n	8008e38 <launcher_control_task+0x8>
 8008ed2:	bf00      	nop
 8008ed4:	200004d0 	.word	0x200004d0
 8008ed8:	20002f40 	.word	0x20002f40
 8008edc:	20002d48 	.word	0x20002d48
 8008ee0:	20002988 	.word	0x20002988
 8008ee4:	20002898 	.word	0x20002898
 8008ee8:	200018a8 	.word	0x200018a8
 8008eec:	00000000 	.word	0x00000000

08008ef0 <launcher_control>:
	}

}

void launcher_control(motor_data_t *left_friction_motor,
		motor_data_t *right_friction_motor, motor_data_t *feeder) {
 8008ef0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008ef4:	b094      	sub	sp, #80	; 0x50
 8008ef6:	af02      	add	r7, sp, #8
 8008ef8:	6378      	str	r0, [r7, #52]	; 0x34
 8008efa:	6339      	str	r1, [r7, #48]	; 0x30
 8008efc:	62fa      	str	r2, [r7, #44]	; 0x2c

	int16_t feeder_output = 0;
 8008efe:	2300      	movs	r3, #0
 8008f00:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
	static uint32_t overheat_time;
	static float target_ang;
	uint32_t curr_time = HAL_GetTick();
 8008f04:	f006 fbce 	bl	800f6a4 <HAL_GetTick>
 8008f08:	63f8      	str	r0, [r7, #60]	; 0x3c
	static uint32_t overheat_start;
	static uint32_t last_fire;
	static uint8_t fired;
	int16_t firing_speed = launcher_ctrl_data.gun_feeding_speed
 8008f0a:	4bb5      	ldr	r3, [pc, #724]	; (80091e0 <launcher_control+0x2f0>)
 8008f0c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008f10:	461a      	mov	r2, r3
			* referee_limiters.feeding_speed / FEEDER_SPEED_RATIO;
 8008f12:	4bb4      	ldr	r3, [pc, #720]	; (80091e4 <launcher_control+0x2f4>)
 8008f14:	f9b3 3000 	ldrsh.w	r3, [r3]
 8008f18:	fb02 f303 	mul.w	r3, r2, r3
 8008f1c:	2b00      	cmp	r3, #0
 8008f1e:	da00      	bge.n	8008f22 <launcher_control+0x32>
 8008f20:	3307      	adds	r3, #7
 8008f22:	10db      	asrs	r3, r3, #3
	int16_t firing_speed = launcher_ctrl_data.gun_feeding_speed
 8008f24:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44

	if (launcher_ctrl_data.gun_feeding_speed == 0) {
 8008f28:	4bad      	ldr	r3, [pc, #692]	; (80091e0 <launcher_control+0x2f0>)
 8008f2a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008f2e:	2b00      	cmp	r3, #0
 8008f30:	f040 80e7 	bne.w	8009102 <launcher_control+0x212>
		feeder_output = 0;
 8008f34:	2300      	movs	r3, #0
 8008f36:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46

		if (launcher_ctrl_data.override == 1) {
 8008f3a:	4ba9      	ldr	r3, [pc, #676]	; (80091e0 <launcher_control+0x2f0>)
 8008f3c:	791b      	ldrb	r3, [r3, #4]
 8008f3e:	2b01      	cmp	r3, #1
 8008f40:	d13b      	bne.n	8008fba <launcher_control+0xca>
			speed_pid(
					referee_limiters.projectile_speed * FRICTION_INVERT
 8008f42:	4ba8      	ldr	r3, [pc, #672]	; (80091e4 <launcher_control+0x2f4>)
 8008f44:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008f48:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008f4a:	4ba7      	ldr	r3, [pc, #668]	; (80091e8 <launcher_control+0x2f8>)
 8008f4c:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008f50:	4618      	mov	r0, r3
 8008f52:	f7f7 fae7 	bl	8000524 <__aeabi_i2d>
 8008f56:	4604      	mov	r4, r0
 8008f58:	460d      	mov	r5, r1
					left_friction_motor->raw_data.rpm,
 8008f5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f5c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008f60:	4618      	mov	r0, r3
 8008f62:	f7f7 fadf 	bl	8000524 <__aeabi_i2d>
 8008f66:	4680      	mov	r8, r0
 8008f68:	4689      	mov	r9, r1
 8008f6a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f6c:	3338      	adds	r3, #56	; 0x38
 8008f6e:	4618      	mov	r0, r3
 8008f70:	ec49 8b11 	vmov	d1, r8, r9
 8008f74:	ec45 4b10 	vmov	d0, r4, r5
 8008f78:	f003 fe16 	bl	800cba8 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-referee_limiters.projectile_speed * FRICTION_INVERT
 8008f7c:	4b99      	ldr	r3, [pc, #612]	; (80091e4 <launcher_control+0x2f4>)
 8008f7e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008f82:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008f84:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8008f88:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008f8c:	4618      	mov	r0, r3
 8008f8e:	f7f7 fac9 	bl	8000524 <__aeabi_i2d>
 8008f92:	4604      	mov	r4, r0
 8008f94:	460d      	mov	r5, r1
					right_friction_motor->raw_data.rpm,
 8008f96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008f9c:	4618      	mov	r0, r3
 8008f9e:	f7f7 fac1 	bl	8000524 <__aeabi_i2d>
 8008fa2:	4680      	mov	r8, r0
 8008fa4:	4689      	mov	r9, r1
 8008fa6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008fa8:	3338      	adds	r3, #56	; 0x38
 8008faa:	4618      	mov	r0, r3
 8008fac:	ec49 8b11 	vmov	d1, r8, r9
 8008fb0:	ec45 4b10 	vmov	d0, r4, r5
 8008fb4:	f003 fdf8 	bl	800cba8 <speed_pid>
 8008fb8:	e09a      	b.n	80090f0 <launcher_control+0x200>
					&right_friction_motor->rpm_pid);

		} else if (clear_time + CLEAR_DELAY > HAL_GetTick()) {
 8008fba:	4b8c      	ldr	r3, [pc, #560]	; (80091ec <launcher_control+0x2fc>)
 8008fbc:	681b      	ldr	r3, [r3, #0]
 8008fbe:	f503 747a 	add.w	r4, r3, #1000	; 0x3e8
 8008fc2:	f006 fb6f 	bl	800f6a4 <HAL_GetTick>
 8008fc6:	4603      	mov	r3, r0
 8008fc8:	429c      	cmp	r4, r3
 8008fca:	d95f      	bls.n	800908c <launcher_control+0x19c>
			speed_pid(
					referee_limiters.projectile_speed * FRICTION_INVERT
 8008fcc:	4b85      	ldr	r3, [pc, #532]	; (80091e4 <launcher_control+0x2f4>)
 8008fce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008fd2:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 8008fd4:	4b84      	ldr	r3, [pc, #528]	; (80091e8 <launcher_control+0x2f8>)
 8008fd6:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8008fda:	4618      	mov	r0, r3
 8008fdc:	f7f7 faa2 	bl	8000524 <__aeabi_i2d>
 8008fe0:	4604      	mov	r4, r0
 8008fe2:	460d      	mov	r5, r1
					left_friction_motor->raw_data.rpm,
 8008fe4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008fe6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8008fea:	4618      	mov	r0, r3
 8008fec:	f7f7 fa9a 	bl	8000524 <__aeabi_i2d>
 8008ff0:	4680      	mov	r8, r0
 8008ff2:	4689      	mov	r9, r1
 8008ff4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008ff6:	3338      	adds	r3, #56	; 0x38
 8008ff8:	4618      	mov	r0, r3
 8008ffa:	ec49 8b11 	vmov	d1, r8, r9
 8008ffe:	ec45 4b10 	vmov	d0, r4, r5
 8009002:	f003 fdd1 	bl	800cba8 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-referee_limiters.projectile_speed * FRICTION_INVERT
 8009006:	4b77      	ldr	r3, [pc, #476]	; (80091e4 <launcher_control+0x2f4>)
 8009008:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800900c:	461a      	mov	r2, r3
							* PROJECTILE_SPEED_RATIO,
 800900e:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8009012:	fb02 f303 	mul.w	r3, r2, r3
			speed_pid(
 8009016:	4618      	mov	r0, r3
 8009018:	f7f7 fa84 	bl	8000524 <__aeabi_i2d>
 800901c:	4604      	mov	r4, r0
 800901e:	460d      	mov	r5, r1
					right_friction_motor->raw_data.rpm,
 8009020:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009022:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 8009026:	4618      	mov	r0, r3
 8009028:	f7f7 fa7c 	bl	8000524 <__aeabi_i2d>
 800902c:	4680      	mov	r8, r0
 800902e:	4689      	mov	r9, r1
 8009030:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009032:	3338      	adds	r3, #56	; 0x38
 8009034:	4618      	mov	r0, r3
 8009036:	ec49 8b11 	vmov	d1, r8, r9
 800903a:	ec45 4b10 	vmov	d0, r4, r5
 800903e:	f003 fdb3 	bl	800cba8 <speed_pid>
					&right_friction_motor->rpm_pid);
			if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 8009042:	4b6b      	ldr	r3, [pc, #428]	; (80091f0 <launcher_control+0x300>)
 8009044:	781b      	ldrb	r3, [r3, #0]
 8009046:	2b01      	cmp	r3, #1
 8009048:	d11b      	bne.n	8009082 <launcher_control+0x192>
				if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 800904a:	4b6a      	ldr	r3, [pc, #424]	; (80091f4 <launcher_control+0x304>)
 800904c:	681b      	ldr	r3, [r3, #0]
 800904e:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 8009052:	f006 fb27 	bl	800f6a4 <HAL_GetTick>
 8009056:	4603      	mov	r3, r0
 8009058:	429c      	cmp	r4, r3
 800905a:	d305      	bcc.n	8009068 <launcher_control+0x178>
						|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 800905c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800905e:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8009062:	4a65      	ldr	r2, [pc, #404]	; (80091f8 <launcher_control+0x308>)
 8009064:	4293      	cmp	r3, r2
 8009066:	da07      	bge.n	8009078 <launcher_control+0x188>
					unjamming = 0;
 8009068:	4b61      	ldr	r3, [pc, #388]	; (80091f0 <launcher_control+0x300>)
 800906a:	2200      	movs	r2, #0
 800906c:	701a      	strb	r2, [r3, #0]
#ifndef ANGLE_FEEDER
					feeder_output = firing_speed;
 800906e:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8009072:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8009076:	e03b      	b.n	80090f0 <launcher_control+0x200>
#endif
				} else {
					feeder_output = FEEDER_UNJAM_SPD;
 8009078:	f64f 73c4 	movw	r3, #65476	; 0xffc4
 800907c:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8009080:	e036      	b.n	80090f0 <launcher_control+0x200>
				}
			} else {
#ifndef ANGLE_FEEDER
				feeder_output = firing_speed;
 8009082:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8009086:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 800908a:	e031      	b.n	80090f0 <launcher_control+0x200>
;
#endif
			}

		} else if (ref_game_state.game_progress == 4){
 800908c:	4b5b      	ldr	r3, [pc, #364]	; (80091fc <launcher_control+0x30c>)
 800908e:	781b      	ldrb	r3, [r3, #0]
 8009090:	f023 030f 	bic.w	r3, r3, #15
 8009094:	b2db      	uxtb	r3, r3
 8009096:	2b40      	cmp	r3, #64	; 0x40
 8009098:	d122      	bne.n	80090e0 <launcher_control+0x1f0>

			speed_pid(FRICTION_SB_SPIN * FRICTION_INVERT,
					left_friction_motor->raw_data.rpm,
 800909a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800909c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(FRICTION_SB_SPIN * FRICTION_INVERT,
 80090a0:	4618      	mov	r0, r3
 80090a2:	f7f7 fa3f 	bl	8000524 <__aeabi_i2d>
 80090a6:	4604      	mov	r4, r0
 80090a8:	460d      	mov	r5, r1
 80090aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80090ac:	3338      	adds	r3, #56	; 0x38
 80090ae:	4618      	mov	r0, r3
 80090b0:	ec45 4b11 	vmov	d1, r4, r5
 80090b4:	ed9f 0b46 	vldr	d0, [pc, #280]	; 80091d0 <launcher_control+0x2e0>
 80090b8:	f003 fd76 	bl	800cba8 <speed_pid>
					&left_friction_motor->rpm_pid);
			speed_pid(
					-FRICTION_SB_SPIN * FRICTION_INVERT,
					right_friction_motor->raw_data.rpm,
 80090bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
			speed_pid(
 80090c2:	4618      	mov	r0, r3
 80090c4:	f7f7 fa2e 	bl	8000524 <__aeabi_i2d>
 80090c8:	4604      	mov	r4, r0
 80090ca:	460d      	mov	r5, r1
 80090cc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090ce:	3338      	adds	r3, #56	; 0x38
 80090d0:	4618      	mov	r0, r3
 80090d2:	ec45 4b11 	vmov	d1, r4, r5
 80090d6:	ed9f 0b40 	vldr	d0, [pc, #256]	; 80091d8 <launcher_control+0x2e8>
 80090da:	f003 fd65 	bl	800cba8 <speed_pid>
 80090de:	e007      	b.n	80090f0 <launcher_control+0x200>
					&right_friction_motor->rpm_pid);

		}else {
			left_friction_motor->rpm_pid.output = 0;
 80090e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80090e2:	f04f 0200 	mov.w	r2, #0
 80090e6:	659a      	str	r2, [r3, #88]	; 0x58
			right_friction_motor->rpm_pid.output = 0;
 80090e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090ea:	f04f 0200 	mov.w	r2, #0
 80090ee:	659a      	str	r2, [r3, #88]	; 0x58
		}
		overheat_time = curr_time + 1000;
 80090f0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80090f2:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80090f6:	4a42      	ldr	r2, [pc, #264]	; (8009200 <launcher_control+0x310>)
 80090f8:	6013      	str	r3, [r2, #0]
		overheat = 0;
 80090fa:	4b42      	ldr	r3, [pc, #264]	; (8009204 <launcher_control+0x314>)
 80090fc:	2200      	movs	r2, #0
 80090fe:	701a      	strb	r2, [r3, #0]
 8009100:	e1fe      	b.n	8009500 <launcher_control+0x610>
	} else {

#ifdef OVERHEAT_PROTECTION
		if (overheat == 1) {
 8009102:	4b40      	ldr	r3, [pc, #256]	; (8009204 <launcher_control+0x314>)
 8009104:	781b      	ldrb	r3, [r3, #0]
 8009106:	2b01      	cmp	r3, #1
 8009108:	d108      	bne.n	800911c <launcher_control+0x22c>
			if (curr_time - overheat_start >= OVERHEAT_TIME) {
 800910a:	4b3f      	ldr	r3, [pc, #252]	; (8009208 <launcher_control+0x318>)
 800910c:	681b      	ldr	r3, [r3, #0]
 800910e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8009110:	1ad3      	subs	r3, r2, r3
 8009112:	2b63      	cmp	r3, #99	; 0x63
 8009114:	d902      	bls.n	800911c <launcher_control+0x22c>
				overheat = 0;
 8009116:	4a3b      	ldr	r2, [pc, #236]	; (8009204 <launcher_control+0x314>)
 8009118:	2300      	movs	r3, #0
 800911a:	7013      	strb	r3, [r2, #0]
			}
		}
		if (prev_power_data_no != ref_power_data_txno) {
 800911c:	4b3b      	ldr	r3, [pc, #236]	; (800920c <launcher_control+0x31c>)
 800911e:	681a      	ldr	r2, [r3, #0]
 8009120:	4b3b      	ldr	r3, [pc, #236]	; (8009210 <launcher_control+0x320>)
 8009122:	681b      	ldr	r3, [r3, #0]
 8009124:	429a      	cmp	r2, r3
 8009126:	f000 80c9 	beq.w	80092bc <launcher_control+0x3cc>
			prev_power_data_no = ref_power_data_txno;
 800912a:	4b39      	ldr	r3, [pc, #228]	; (8009210 <launcher_control+0x320>)
 800912c:	681b      	ldr	r3, [r3, #0]
 800912e:	4a37      	ldr	r2, [pc, #220]	; (800920c <launcher_control+0x31c>)
 8009130:	6013      	str	r3, [r2, #0]
//			int16_t cur_fire_rate = fabs(launcher_ctrl_data.gun_feeding_speed* referee_limiters.feeding_speed);
			int16_t ammo_remaining;

#ifdef BULLET_17
			uint8_t active_feeder = 2;
 8009132:	2302      	movs	r3, #2
 8009134:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
			if (ref_robot_data.shooter17_heat1_cooling_limit == 0
 8009138:	4b36      	ldr	r3, [pc, #216]	; (8009214 <launcher_control+0x324>)
 800913a:	89db      	ldrh	r3, [r3, #14]
 800913c:	b29b      	uxth	r3, r3
 800913e:	2b00      	cmp	r3, #0
 8009140:	d108      	bne.n	8009154 <launcher_control+0x264>
					&& ref_robot_data.shooter17_heat0_cooling_limit == 0) {
 8009142:	4b34      	ldr	r3, [pc, #208]	; (8009214 <launcher_control+0x324>)
 8009144:	891b      	ldrh	r3, [r3, #8]
 8009146:	b29b      	uxth	r3, r3
 8009148:	2b00      	cmp	r3, #0
 800914a:	d103      	bne.n	8009154 <launcher_control+0x264>
				active_feeder = 3;
 800914c:	2303      	movs	r3, #3
 800914e:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8009152:	e010      	b.n	8009176 <launcher_control+0x286>
			} else if (ref_robot_data.shooter17_heat0_cooling_limit == 0) {
 8009154:	4b2f      	ldr	r3, [pc, #188]	; (8009214 <launcher_control+0x324>)
 8009156:	891b      	ldrh	r3, [r3, #8]
 8009158:	b29b      	uxth	r3, r3
 800915a:	2b00      	cmp	r3, #0
 800915c:	d103      	bne.n	8009166 <launcher_control+0x276>
				active_feeder = 1;
 800915e:	2301      	movs	r3, #1
 8009160:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8009164:	e007      	b.n	8009176 <launcher_control+0x286>
			} else if (ref_robot_data.shooter17_heat1_cooling_limit == 0) {
 8009166:	4b2b      	ldr	r3, [pc, #172]	; (8009214 <launcher_control+0x324>)
 8009168:	89db      	ldrh	r3, [r3, #14]
 800916a:	b29b      	uxth	r3, r3
 800916c:	2b00      	cmp	r3, #0
 800916e:	d102      	bne.n	8009176 <launcher_control+0x286>
				active_feeder = 0;
 8009170:	2300      	movs	r3, #0
 8009172:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
			}

			if (active_feeder == 2) {
 8009176:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800917a:	2b02      	cmp	r3, #2
 800917c:	d10e      	bne.n	800919c <launcher_control+0x2ac>
				if (ref_power_data.shooter_heat0
 800917e:	4b26      	ldr	r3, [pc, #152]	; (8009218 <launcher_control+0x328>)
 8009180:	895b      	ldrh	r3, [r3, #10]
 8009182:	b29a      	uxth	r2, r3
						>= ref_power_data.shooter_heat1) {
 8009184:	4b24      	ldr	r3, [pc, #144]	; (8009218 <launcher_control+0x328>)
 8009186:	899b      	ldrh	r3, [r3, #12]
 8009188:	b29b      	uxth	r3, r3
				if (ref_power_data.shooter_heat0
 800918a:	429a      	cmp	r2, r3
 800918c:	d303      	bcc.n	8009196 <launcher_control+0x2a6>
					active_feeder = 0;
 800918e:	2300      	movs	r3, #0
 8009190:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8009194:	e002      	b.n	800919c <launcher_control+0x2ac>
				} else {
					active_feeder = 1;
 8009196:	2301      	movs	r3, #1
 8009198:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
				}

			}

			if (active_feeder == 0) {
 800919c:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d13d      	bne.n	8009220 <launcher_control+0x330>
				ammo_remaining =
						((((int16_t) ref_robot_data.shooter17_heat0_cooling_limit
 80091a4:	4b1b      	ldr	r3, [pc, #108]	; (8009214 <launcher_control+0x324>)
 80091a6:	891b      	ldrh	r3, [r3, #8]
 80091a8:	b29b      	uxth	r3, r3
 80091aa:	b21b      	sxth	r3, r3
 80091ac:	461a      	mov	r2, r3
								- (int16_t) ref_power_data.shooter_heat0))
 80091ae:	4b1a      	ldr	r3, [pc, #104]	; (8009218 <launcher_control+0x328>)
 80091b0:	895b      	ldrh	r3, [r3, #10]
 80091b2:	b29b      	uxth	r3, r3
 80091b4:	b21b      	sxth	r3, r3
 80091b6:	1ad1      	subs	r1, r2, r3
								/ BULLET_17_HEAT) - 2;
 80091b8:	4b18      	ldr	r3, [pc, #96]	; (800921c <launcher_control+0x32c>)
 80091ba:	fb83 2301 	smull	r2, r3, r3, r1
 80091be:	109a      	asrs	r2, r3, #2
 80091c0:	17cb      	asrs	r3, r1, #31
 80091c2:	1ad3      	subs	r3, r2, r3
 80091c4:	b29b      	uxth	r3, r3
 80091c6:	3b02      	subs	r3, #2
 80091c8:	b29b      	uxth	r3, r3
				ammo_remaining =
 80091ca:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 80091ce:	e040      	b.n	8009252 <launcher_control+0x362>
 80091d0:	00000000 	.word	0x00000000
 80091d4:	c08f4000 	.word	0xc08f4000
 80091d8:	00000000 	.word	0x00000000
 80091dc:	408f4000 	.word	0x408f4000
 80091e0:	20002f40 	.word	0x20002f40
 80091e4:	200032f8 	.word	0x200032f8
 80091e8:	fffffe98 	.word	0xfffffe98
 80091ec:	200032e0 	.word	0x200032e0
 80091f0:	200032e4 	.word	0x200032e4
 80091f4:	200032dc 	.word	0x200032dc
 80091f8:	ffffd9b8 	.word	0xffffd9b8
 80091fc:	20003354 	.word	0x20003354
 8009200:	200032ec 	.word	0x200032ec
 8009204:	200032e5 	.word	0x200032e5
 8009208:	200032f0 	.word	0x200032f0
 800920c:	200032e8 	.word	0x200032e8
 8009210:	200033ac 	.word	0x200033ac
 8009214:	2000337c 	.word	0x2000337c
 8009218:	2000339c 	.word	0x2000339c
 800921c:	66666667 	.word	0x66666667
			} else if (active_feeder == 1) {
 8009220:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8009224:	2b01      	cmp	r3, #1
 8009226:	d114      	bne.n	8009252 <launcher_control+0x362>
				ammo_remaining =
						((((int16_t) ref_robot_data.shooter17_heat1_cooling_limit
 8009228:	4ba5      	ldr	r3, [pc, #660]	; (80094c0 <launcher_control+0x5d0>)
 800922a:	89db      	ldrh	r3, [r3, #14]
 800922c:	b29b      	uxth	r3, r3
 800922e:	b21b      	sxth	r3, r3
 8009230:	461a      	mov	r2, r3
								- (int16_t) ref_power_data.shooter_heat1))
 8009232:	4ba4      	ldr	r3, [pc, #656]	; (80094c4 <launcher_control+0x5d4>)
 8009234:	899b      	ldrh	r3, [r3, #12]
 8009236:	b29b      	uxth	r3, r3
 8009238:	b21b      	sxth	r3, r3
 800923a:	1ad1      	subs	r1, r2, r3
								/ BULLET_17_HEAT) - 2;
 800923c:	4ba2      	ldr	r3, [pc, #648]	; (80094c8 <launcher_control+0x5d8>)
 800923e:	fb83 2301 	smull	r2, r3, r3, r1
 8009242:	109a      	asrs	r2, r3, #2
 8009244:	17cb      	asrs	r3, r1, #31
 8009246:	1ad3      	subs	r3, r2, r3
 8009248:	b29b      	uxth	r3, r3
 800924a:	3b02      	subs	r3, #2
 800924c:	b29b      	uxth	r3, r3
				ammo_remaining =
 800924e:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
			}
			if (active_feeder == 3) {
 8009252:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8009256:	2b03      	cmp	r3, #3
 8009258:	d103      	bne.n	8009262 <launcher_control+0x372>
				ammo_remaining = 1000;
 800925a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800925e:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
			}
#endif

#endif

			if (ammo_remaining < 3) {
 8009262:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 8009266:	2b02      	cmp	r3, #2
 8009268:	dc06      	bgt.n	8009278 <launcher_control+0x388>
				overheat = 1;
 800926a:	4a98      	ldr	r2, [pc, #608]	; (80094cc <launcher_control+0x5dc>)
 800926c:	2301      	movs	r3, #1
 800926e:	7013      	strb	r3, [r2, #0]
				overheat_start = curr_time;
 8009270:	4a97      	ldr	r2, [pc, #604]	; (80094d0 <launcher_control+0x5e0>)
 8009272:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009274:	6013      	str	r3, [r2, #0]
 8009276:	e011      	b.n	800929c <launcher_control+0x3ac>
			} else {
				if (ammo_remaining < 10){
 8009278:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 800927c:	2b09      	cmp	r3, #9
 800927e:	dc0d      	bgt.n	800929c <launcher_control+0x3ac>
					firing_speed = firing_speed * ammo_remaining/10;
 8009280:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 8009284:	f9b7 2042 	ldrsh.w	r2, [r7, #66]	; 0x42
 8009288:	fb02 f103 	mul.w	r1, r2, r3
 800928c:	4b8e      	ldr	r3, [pc, #568]	; (80094c8 <launcher_control+0x5d8>)
 800928e:	fb83 2301 	smull	r2, r3, r3, r1
 8009292:	109a      	asrs	r2, r3, #2
 8009294:	17cb      	asrs	r3, r1, #31
 8009296:	1ad3      	subs	r3, r2, r3
 8009298:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
				}
			}
			overheat_time = curr_time
					+ (ammo_remaining * 60 * 1000) / (firing_speed) - 50;
 800929c:	f9b7 3042 	ldrsh.w	r3, [r7, #66]	; 0x42
 80092a0:	f64e 2260 	movw	r2, #60000	; 0xea60
 80092a4:	fb03 f202 	mul.w	r2, r3, r2
 80092a8:	f9b7 3044 	ldrsh.w	r3, [r7, #68]	; 0x44
 80092ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80092b0:	461a      	mov	r2, r3
 80092b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80092b4:	4413      	add	r3, r2
 80092b6:	3b32      	subs	r3, #50	; 0x32
			overheat_time = curr_time
 80092b8:	4a86      	ldr	r2, [pc, #536]	; (80094d4 <launcher_control+0x5e4>)
 80092ba:	6013      	str	r3, [r2, #0]
		}
#endif

		//TODO: add in speed checks and shtuffasdwqwe
		clear_time = HAL_GetTick();
 80092bc:	f006 f9f2 	bl	800f6a4 <HAL_GetTick>
 80092c0:	4603      	mov	r3, r0
 80092c2:	4a85      	ldr	r2, [pc, #532]	; (80094d8 <launcher_control+0x5e8>)
 80092c4:	6013      	str	r3, [r2, #0]
		speed_pid(
				referee_limiters.projectile_speed * FRICTION_INVERT
 80092c6:	4b85      	ldr	r3, [pc, #532]	; (80094dc <launcher_control+0x5ec>)
 80092c8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80092cc:	461a      	mov	r2, r3
						* PROJECTILE_SPEED_RATIO,
 80092ce:	4b84      	ldr	r3, [pc, #528]	; (80094e0 <launcher_control+0x5f0>)
 80092d0:	fb02 f303 	mul.w	r3, r2, r3
		speed_pid(
 80092d4:	4618      	mov	r0, r3
 80092d6:	f7f7 f925 	bl	8000524 <__aeabi_i2d>
 80092da:	4680      	mov	r8, r0
 80092dc:	4689      	mov	r9, r1
				left_friction_motor->raw_data.rpm,
 80092de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(
 80092e4:	4618      	mov	r0, r3
 80092e6:	f7f7 f91d 	bl	8000524 <__aeabi_i2d>
 80092ea:	4604      	mov	r4, r0
 80092ec:	460d      	mov	r5, r1
 80092ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092f0:	3338      	adds	r3, #56	; 0x38
 80092f2:	4618      	mov	r0, r3
 80092f4:	ec45 4b11 	vmov	d1, r4, r5
 80092f8:	ec49 8b10 	vmov	d0, r8, r9
 80092fc:	f003 fc54 	bl	800cba8 <speed_pid>
				&left_friction_motor->rpm_pid);
		speed_pid(
				-referee_limiters.projectile_speed * FRICTION_INVERT
 8009300:	4b76      	ldr	r3, [pc, #472]	; (80094dc <launcher_control+0x5ec>)
 8009302:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8009306:	461a      	mov	r2, r3
						* PROJECTILE_SPEED_RATIO,
 8009308:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800930c:	fb02 f303 	mul.w	r3, r2, r3
		speed_pid(
 8009310:	4618      	mov	r0, r3
 8009312:	f7f7 f907 	bl	8000524 <__aeabi_i2d>
 8009316:	4680      	mov	r8, r0
 8009318:	4689      	mov	r9, r1
				right_friction_motor->raw_data.rpm,
 800931a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800931c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(
 8009320:	4618      	mov	r0, r3
 8009322:	f7f7 f8ff 	bl	8000524 <__aeabi_i2d>
 8009326:	4604      	mov	r4, r0
 8009328:	460d      	mov	r5, r1
 800932a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800932c:	3338      	adds	r3, #56	; 0x38
 800932e:	4618      	mov	r0, r3
 8009330:	ec45 4b11 	vmov	d1, r4, r5
 8009334:	ec49 8b10 	vmov	d0, r8, r9
 8009338:	f003 fc36 	bl	800cba8 <speed_pid>

		}
		last_fire = curr_time;
#endif

		if (((((fabs(left_friction_motor->raw_data.rpm)
 800933c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800933e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8009342:	4618      	mov	r0, r3
 8009344:	f7f7 f8ee 	bl	8000524 <__aeabi_i2d>
 8009348:	4602      	mov	r2, r0
 800934a:	460b      	mov	r3, r1
 800934c:	4692      	mov	sl, r2
 800934e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
				- fabs(
						(launcher_ctrl_data.projectile_speed
 8009352:	4b64      	ldr	r3, [pc, #400]	; (80094e4 <launcher_control+0x5f4>)
 8009354:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009358:	461a      	mov	r2, r3
								* PROJECTILE_SPEED_RATIO
								* referee_limiters.projectile_speed))
 800935a:	4b60      	ldr	r3, [pc, #384]	; (80094dc <launcher_control+0x5ec>)
 800935c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8009360:	fb02 f303 	mul.w	r3, r2, r3
 8009364:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8009368:	fb02 f303 	mul.w	r3, r2, r3
				- fabs(
 800936c:	4618      	mov	r0, r3
 800936e:	f7f7 f8d9 	bl	8000524 <__aeabi_i2d>
 8009372:	4602      	mov	r2, r0
 8009374:	460b      	mov	r3, r1
 8009376:	623a      	str	r2, [r7, #32]
 8009378:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800937c:	627b      	str	r3, [r7, #36]	; 0x24
 800937e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8009382:	4650      	mov	r0, sl
 8009384:	4659      	mov	r1, fp
 8009386:	f7f6 ff7f 	bl	8000288 <__aeabi_dsub>
 800938a:	4602      	mov	r2, r0
 800938c:	460b      	mov	r3, r1
 800938e:	4610      	mov	r0, r2
 8009390:	4619      	mov	r1, r3
		if (((((fabs(left_friction_motor->raw_data.rpm)
 8009392:	f04f 0200 	mov.w	r2, #0
 8009396:	4b54      	ldr	r3, [pc, #336]	; (80094e8 <launcher_control+0x5f8>)
 8009398:	f7f7 fba0 	bl	8000adc <__aeabi_dcmplt>
 800939c:	4603      	mov	r3, r0
 800939e:	2b00      	cmp	r3, #0
 80093a0:	f000 80ae 	beq.w	8009500 <launcher_control+0x610>
				< LAUNCHER_MARGIN)))
				&& ((fabs(right_friction_motor->raw_data.rpm)
 80093a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80093a6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80093aa:	4618      	mov	r0, r3
 80093ac:	f7f7 f8ba 	bl	8000524 <__aeabi_i2d>
 80093b0:	4602      	mov	r2, r0
 80093b2:	460b      	mov	r3, r1
 80093b4:	61ba      	str	r2, [r7, #24]
 80093b6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80093ba:	61fb      	str	r3, [r7, #28]
						- fabs(
								(launcher_ctrl_data.projectile_speed
 80093bc:	4b49      	ldr	r3, [pc, #292]	; (80094e4 <launcher_control+0x5f4>)
 80093be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80093c2:	461a      	mov	r2, r3
										* PROJECTILE_SPEED_RATIO
										* referee_limiters.projectile_speed))
 80093c4:	4b45      	ldr	r3, [pc, #276]	; (80094dc <launcher_control+0x5ec>)
 80093c6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80093ca:	fb02 f303 	mul.w	r3, r2, r3
 80093ce:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80093d2:	fb02 f303 	mul.w	r3, r2, r3
						- fabs(
 80093d6:	4618      	mov	r0, r3
 80093d8:	f7f7 f8a4 	bl	8000524 <__aeabi_i2d>
 80093dc:	4602      	mov	r2, r0
 80093de:	460b      	mov	r3, r1
 80093e0:	613a      	str	r2, [r7, #16]
 80093e2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80093e6:	617b      	str	r3, [r7, #20]
 80093e8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80093ec:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80093f0:	f7f6 ff4a 	bl	8000288 <__aeabi_dsub>
 80093f4:	4602      	mov	r2, r0
 80093f6:	460b      	mov	r3, r1
 80093f8:	4610      	mov	r0, r2
 80093fa:	4619      	mov	r1, r3
				&& ((fabs(right_friction_motor->raw_data.rpm)
 80093fc:	f04f 0200 	mov.w	r2, #0
 8009400:	4b39      	ldr	r3, [pc, #228]	; (80094e8 <launcher_control+0x5f8>)
 8009402:	f7f7 fb6b 	bl	8000adc <__aeabi_dcmplt>
 8009406:	4603      	mov	r3, r0
 8009408:	2b00      	cmp	r3, #0
 800940a:	d079      	beq.n	8009500 <launcher_control+0x610>
						< LAUNCHER_MARGIN)))
				&& ((fabs(right_friction_motor->raw_data.rpm)
 800940c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800940e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8009412:	4618      	mov	r0, r3
 8009414:	f7f7 f886 	bl	8000524 <__aeabi_i2d>
 8009418:	4602      	mov	r2, r0
 800941a:	460b      	mov	r3, r1
 800941c:	60ba      	str	r2, [r7, #8]
 800941e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8009422:	60fb      	str	r3, [r7, #12]
						- fabs(left_friction_motor->raw_data.rpm))
 8009424:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009426:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800942a:	4618      	mov	r0, r3
 800942c:	f7f7 f87a 	bl	8000524 <__aeabi_i2d>
 8009430:	4602      	mov	r2, r0
 8009432:	460b      	mov	r3, r1
 8009434:	603a      	str	r2, [r7, #0]
 8009436:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800943a:	607b      	str	r3, [r7, #4]
 800943c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009440:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8009444:	f7f6 ff20 	bl	8000288 <__aeabi_dsub>
 8009448:	4602      	mov	r2, r0
 800944a:	460b      	mov	r3, r1
 800944c:	4610      	mov	r0, r2
 800944e:	4619      	mov	r1, r3
				&& ((fabs(right_friction_motor->raw_data.rpm)
 8009450:	f04f 0200 	mov.w	r2, #0
 8009454:	4b24      	ldr	r3, [pc, #144]	; (80094e8 <launcher_control+0x5f8>)
 8009456:	f7f7 fb41 	bl	8000adc <__aeabi_dcmplt>
 800945a:	4603      	mov	r3, r0
 800945c:	2b00      	cmp	r3, #0
 800945e:	d04f      	beq.n	8009500 <launcher_control+0x610>
						< LAUNCHER_DIFF_MARGIN)) {

			if ((feeder->raw_data.torque > FEEDER_JAM_TORQUE)) {
 8009460:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009462:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8009466:	f242 6248 	movw	r2, #9800	; 0x2648
 800946a:	4293      	cmp	r3, r2
 800946c:	dd07      	ble.n	800947e <launcher_control+0x58e>
				unjamming = 1;
 800946e:	4b1f      	ldr	r3, [pc, #124]	; (80094ec <launcher_control+0x5fc>)
 8009470:	2201      	movs	r2, #1
 8009472:	701a      	strb	r2, [r3, #0]
				start_time = HAL_GetTick();
 8009474:	f006 f916 	bl	800f6a4 <HAL_GetTick>
 8009478:	4603      	mov	r3, r0
 800947a:	4a1d      	ldr	r2, [pc, #116]	; (80094f0 <launcher_control+0x600>)
 800947c:	6013      	str	r3, [r2, #0]
			}

			if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 800947e:	4b1b      	ldr	r3, [pc, #108]	; (80094ec <launcher_control+0x5fc>)
 8009480:	781b      	ldrb	r3, [r3, #0]
 8009482:	2b01      	cmp	r3, #1
 8009484:	d138      	bne.n	80094f8 <launcher_control+0x608>
				if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 8009486:	4b1a      	ldr	r3, [pc, #104]	; (80094f0 <launcher_control+0x600>)
 8009488:	681b      	ldr	r3, [r3, #0]
 800948a:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 800948e:	f006 f909 	bl	800f6a4 <HAL_GetTick>
 8009492:	4603      	mov	r3, r0
 8009494:	429c      	cmp	r4, r3
 8009496:	d305      	bcc.n	80094a4 <launcher_control+0x5b4>
						|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 8009498:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800949a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800949e:	4a15      	ldr	r2, [pc, #84]	; (80094f4 <launcher_control+0x604>)
 80094a0:	4293      	cmp	r3, r2
 80094a2:	da07      	bge.n	80094b4 <launcher_control+0x5c4>
					unjamming = 0;
 80094a4:	4b11      	ldr	r3, [pc, #68]	; (80094ec <launcher_control+0x5fc>)
 80094a6:	2200      	movs	r2, #0
 80094a8:	701a      	strb	r2, [r3, #0]
#ifndef ANGLE_FEEDER
					feeder_output = firing_speed;
 80094aa:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 80094ae:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 80094b2:	e025      	b.n	8009500 <launcher_control+0x610>
#endif
				} else {
					feeder_output = FEEDER_UNJAM_SPD;
 80094b4:	f64f 73c4 	movw	r3, #65476	; 0xffc4
 80094b8:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 80094bc:	e020      	b.n	8009500 <launcher_control+0x610>
 80094be:	bf00      	nop
 80094c0:	2000337c 	.word	0x2000337c
 80094c4:	2000339c 	.word	0x2000339c
 80094c8:	66666667 	.word	0x66666667
 80094cc:	200032e5 	.word	0x200032e5
 80094d0:	200032f0 	.word	0x200032f0
 80094d4:	200032ec 	.word	0x200032ec
 80094d8:	200032e0 	.word	0x200032e0
 80094dc:	200032f8 	.word	0x200032f8
 80094e0:	fffffe98 	.word	0xfffffe98
 80094e4:	20002f40 	.word	0x20002f40
 80094e8:	40590000 	.word	0x40590000
 80094ec:	200032e4 	.word	0x200032e4
 80094f0:	200032dc 	.word	0x200032dc
 80094f4:	ffffd9b8 	.word	0xffffd9b8
				}
			} else {
#ifndef ANGLE_FEEDER
				feeder_output = firing_speed;
 80094f8:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 80094fc:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
			}

		}
	}

	if ((overheat == 1) && launcher_ctrl_data.override == 0) {
 8009500:	4b35      	ldr	r3, [pc, #212]	; (80095d8 <launcher_control+0x6e8>)
 8009502:	781b      	ldrb	r3, [r3, #0]
 8009504:	2b01      	cmp	r3, #1
 8009506:	d106      	bne.n	8009516 <launcher_control+0x626>
 8009508:	4b34      	ldr	r3, [pc, #208]	; (80095dc <launcher_control+0x6ec>)
 800950a:	791b      	ldrb	r3, [r3, #4]
 800950c:	2b00      	cmp	r3, #0
 800950e:	d102      	bne.n	8009516 <launcher_control+0x626>
		feeder_output = 0;
 8009510:	2300      	movs	r3, #0
 8009512:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
	}

	if (unjamming == 1) { // if unjam time reached, or jam on reverse torque
 8009516:	4b32      	ldr	r3, [pc, #200]	; (80095e0 <launcher_control+0x6f0>)
 8009518:	781b      	ldrb	r3, [r3, #0]
 800951a:	2b01      	cmp	r3, #1
 800951c:	d111      	bne.n	8009542 <launcher_control+0x652>
		if ((start_time + FEEDER_UNJAM_TIME < HAL_GetTick())
 800951e:	4b31      	ldr	r3, [pc, #196]	; (80095e4 <launcher_control+0x6f4>)
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 8009526:	f006 f8bd 	bl	800f6a4 <HAL_GetTick>
 800952a:	4603      	mov	r3, r0
 800952c:	429c      	cmp	r4, r3
 800952e:	d305      	bcc.n	800953c <launcher_control+0x64c>
				|| (feeder->raw_data.torque < -FEEDER_JAM_TORQUE)) {
 8009530:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009532:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8009536:	4a2c      	ldr	r2, [pc, #176]	; (80095e8 <launcher_control+0x6f8>)
 8009538:	4293      	cmp	r3, r2
 800953a:	da02      	bge.n	8009542 <launcher_control+0x652>
			unjamming = 0;
 800953c:	4b28      	ldr	r3, [pc, #160]	; (80095e0 <launcher_control+0x6f0>)
 800953e:	2200      	movs	r2, #0
 8009540:	701a      	strb	r2, [r3, #0]
				(feeder_output < -FEEDER_MAX_RPM) ?
						-FEEDER_MAX_RPM : feeder_output;
	}
#endif

	if (feeder_output == 0) {
 8009542:	f9b7 3046 	ldrsh.w	r3, [r7, #70]	; 0x46
 8009546:	2b00      	cmp	r3, #0
 8009548:	d111      	bne.n	800956e <launcher_control+0x67e>
//		feeder->rpm_pid.output = 0;
		speed_pid(0, feeder->raw_data.rpm, &feeder->rpm_pid);
 800954a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800954c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8009550:	4618      	mov	r0, r3
 8009552:	f7f6 ffe7 	bl	8000524 <__aeabi_i2d>
 8009556:	4604      	mov	r4, r0
 8009558:	460d      	mov	r5, r1
 800955a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800955c:	3338      	adds	r3, #56	; 0x38
 800955e:	4618      	mov	r0, r3
 8009560:	ec45 4b11 	vmov	d1, r4, r5
 8009564:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 80095d0 <launcher_control+0x6e0>
 8009568:	f003 fb1e 	bl	800cba8 <speed_pid>
 800956c:	e021      	b.n	80095b2 <launcher_control+0x6c2>
	} else {
		speed_pid(feeder_output * feeder->angle_data.gearbox_ratio,
 800956e:	f9b7 3046 	ldrsh.w	r3, [r7, #70]	; 0x46
 8009572:	ee07 3a90 	vmov	s15, r3
 8009576:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800957a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800957c:	edd3 7a32 	vldr	s15, [r3, #200]	; 0xc8
 8009580:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009584:	ee17 0a90 	vmov	r0, s15
 8009588:	f7f6 ffde 	bl	8000548 <__aeabi_f2d>
 800958c:	4604      	mov	r4, r0
 800958e:	460d      	mov	r5, r1
				feeder->raw_data.rpm, &feeder->rpm_pid);
 8009590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009592:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
		speed_pid(feeder_output * feeder->angle_data.gearbox_ratio,
 8009596:	4618      	mov	r0, r3
 8009598:	f7f6 ffc4 	bl	8000524 <__aeabi_i2d>
 800959c:	4680      	mov	r8, r0
 800959e:	4689      	mov	r9, r1
 80095a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80095a2:	3338      	adds	r3, #56	; 0x38
 80095a4:	4618      	mov	r0, r3
 80095a6:	ec49 8b11 	vmov	d1, r8, r9
 80095aa:	ec45 4b10 	vmov	d0, r4, r5
 80095ae:	f003 fafb 	bl	800cba8 <speed_pid>
		//speed_pid(feeder_output * 36,feeder->raw_data.rpm, &feeder->rpm_pid);
	}

	motor_send_can(can_motors, FEEDER_MOTOR_ID, LFRICTION_MOTOR_ID,
 80095b2:	2300      	movs	r3, #0
 80095b4:	9300      	str	r3, [sp, #0]
 80095b6:	2313      	movs	r3, #19
 80095b8:	2217      	movs	r2, #23
 80095ba:	2112      	movs	r1, #18
 80095bc:	480b      	ldr	r0, [pc, #44]	; (80095ec <launcher_control+0x6fc>)
 80095be:	f003 fbd9 	bl	800cd74 <motor_send_can>
	RFRICTION_MOTOR_ID, 0);
}
 80095c2:	bf00      	nop
 80095c4:	3748      	adds	r7, #72	; 0x48
 80095c6:	46bd      	mov	sp, r7
 80095c8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80095cc:	f3af 8000 	nop.w
	...
 80095d8:	200032e5 	.word	0x200032e5
 80095dc:	20002f40 	.word	0x20002f40
 80095e0:	200032e4 	.word	0x200032e4
 80095e4:	200032dc 	.word	0x200032dc
 80095e8:	ffffd9b8 	.word	0xffffd9b8
 80095ec:	200018a8 	.word	0x200018a8

080095f0 <rt_atan2d_snf>:
 80095f0:	b5b0      	push	{r4, r5, r7, lr}
 80095f2:	b088      	sub	sp, #32
 80095f4:	af00      	add	r7, sp, #0
 80095f6:	ed87 0b02 	vstr	d0, [r7, #8]
 80095fa:	ed87 1b00 	vstr	d1, [r7]
 80095fe:	ed97 0b02 	vldr	d0, [r7, #8]
 8009602:	f004 fc17 	bl	800de34 <rtIsNaN>
 8009606:	4603      	mov	r3, r0
 8009608:	2b00      	cmp	r3, #0
 800960a:	d106      	bne.n	800961a <rt_atan2d_snf+0x2a>
 800960c:	ed97 0b00 	vldr	d0, [r7]
 8009610:	f004 fc10 	bl	800de34 <rtIsNaN>
 8009614:	4603      	mov	r3, r0
 8009616:	2b00      	cmp	r3, #0
 8009618:	d005      	beq.n	8009626 <rt_atan2d_snf+0x36>
 800961a:	4b4d      	ldr	r3, [pc, #308]	; (8009750 <rt_atan2d_snf+0x160>)
 800961c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009620:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009624:	e07e      	b.n	8009724 <rt_atan2d_snf+0x134>
 8009626:	ed97 0b02 	vldr	d0, [r7, #8]
 800962a:	f004 fbd5 	bl	800ddd8 <rtIsInf>
 800962e:	4603      	mov	r3, r0
 8009630:	2b00      	cmp	r3, #0
 8009632:	d03b      	beq.n	80096ac <rt_atan2d_snf+0xbc>
 8009634:	ed97 0b00 	vldr	d0, [r7]
 8009638:	f004 fbce 	bl	800ddd8 <rtIsInf>
 800963c:	4603      	mov	r3, r0
 800963e:	2b00      	cmp	r3, #0
 8009640:	d034      	beq.n	80096ac <rt_atan2d_snf+0xbc>
 8009642:	f04f 0200 	mov.w	r2, #0
 8009646:	f04f 0300 	mov.w	r3, #0
 800964a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800964e:	f7f7 fa63 	bl	8000b18 <__aeabi_dcmpgt>
 8009652:	4603      	mov	r3, r0
 8009654:	2b00      	cmp	r3, #0
 8009656:	d002      	beq.n	800965e <rt_atan2d_snf+0x6e>
 8009658:	2301      	movs	r3, #1
 800965a:	617b      	str	r3, [r7, #20]
 800965c:	e002      	b.n	8009664 <rt_atan2d_snf+0x74>
 800965e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009662:	617b      	str	r3, [r7, #20]
 8009664:	f04f 0200 	mov.w	r2, #0
 8009668:	f04f 0300 	mov.w	r3, #0
 800966c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8009670:	f7f7 fa52 	bl	8000b18 <__aeabi_dcmpgt>
 8009674:	4603      	mov	r3, r0
 8009676:	2b00      	cmp	r3, #0
 8009678:	d002      	beq.n	8009680 <rt_atan2d_snf+0x90>
 800967a:	2301      	movs	r3, #1
 800967c:	613b      	str	r3, [r7, #16]
 800967e:	e002      	b.n	8009686 <rt_atan2d_snf+0x96>
 8009680:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009684:	613b      	str	r3, [r7, #16]
 8009686:	6978      	ldr	r0, [r7, #20]
 8009688:	f7f6 ff4c 	bl	8000524 <__aeabi_i2d>
 800968c:	4604      	mov	r4, r0
 800968e:	460d      	mov	r5, r1
 8009690:	6938      	ldr	r0, [r7, #16]
 8009692:	f7f6 ff47 	bl	8000524 <__aeabi_i2d>
 8009696:	4602      	mov	r2, r0
 8009698:	460b      	mov	r3, r1
 800969a:	ec43 2b11 	vmov	d1, r2, r3
 800969e:	ec45 4b10 	vmov	d0, r4, r5
 80096a2:	f01a ff39 	bl	8024518 <atan2>
 80096a6:	ed87 0b06 	vstr	d0, [r7, #24]
 80096aa:	e03b      	b.n	8009724 <rt_atan2d_snf+0x134>
 80096ac:	f04f 0200 	mov.w	r2, #0
 80096b0:	f04f 0300 	mov.w	r3, #0
 80096b4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80096b8:	f7f7 fa06 	bl	8000ac8 <__aeabi_dcmpeq>
 80096bc:	4603      	mov	r3, r0
 80096be:	2b00      	cmp	r3, #0
 80096c0:	d028      	beq.n	8009714 <rt_atan2d_snf+0x124>
 80096c2:	f04f 0200 	mov.w	r2, #0
 80096c6:	f04f 0300 	mov.w	r3, #0
 80096ca:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80096ce:	f7f7 fa23 	bl	8000b18 <__aeabi_dcmpgt>
 80096d2:	4603      	mov	r3, r0
 80096d4:	2b00      	cmp	r3, #0
 80096d6:	d005      	beq.n	80096e4 <rt_atan2d_snf+0xf4>
 80096d8:	a319      	add	r3, pc, #100	; (adr r3, 8009740 <rt_atan2d_snf+0x150>)
 80096da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80096de:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80096e2:	e01f      	b.n	8009724 <rt_atan2d_snf+0x134>
 80096e4:	f04f 0200 	mov.w	r2, #0
 80096e8:	f04f 0300 	mov.w	r3, #0
 80096ec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80096f0:	f7f7 f9f4 	bl	8000adc <__aeabi_dcmplt>
 80096f4:	4603      	mov	r3, r0
 80096f6:	2b00      	cmp	r3, #0
 80096f8:	d005      	beq.n	8009706 <rt_atan2d_snf+0x116>
 80096fa:	a313      	add	r3, pc, #76	; (adr r3, 8009748 <rt_atan2d_snf+0x158>)
 80096fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009700:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009704:	e00e      	b.n	8009724 <rt_atan2d_snf+0x134>
 8009706:	f04f 0200 	mov.w	r2, #0
 800970a:	f04f 0300 	mov.w	r3, #0
 800970e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009712:	e007      	b.n	8009724 <rt_atan2d_snf+0x134>
 8009714:	ed97 1b00 	vldr	d1, [r7]
 8009718:	ed97 0b02 	vldr	d0, [r7, #8]
 800971c:	f01a fefc 	bl	8024518 <atan2>
 8009720:	ed87 0b06 	vstr	d0, [r7, #24]
 8009724:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8009728:	ec43 2b17 	vmov	d7, r2, r3
 800972c:	eeb0 0a47 	vmov.f32	s0, s14
 8009730:	eef0 0a67 	vmov.f32	s1, s15
 8009734:	3720      	adds	r7, #32
 8009736:	46bd      	mov	sp, r7
 8009738:	bdb0      	pop	{r4, r5, r7, pc}
 800973a:	bf00      	nop
 800973c:	f3af 8000 	nop.w
 8009740:	54442d18 	.word	0x54442d18
 8009744:	3ff921fb 	.word	0x3ff921fb
 8009748:	54442d18 	.word	0x54442d18
 800974c:	bff921fb 	.word	0xbff921fb
 8009750:	20000018 	.word	0x20000018
 8009754:	00000000 	.word	0x00000000

08009758 <leg_pos>:
 8009758:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800975c:	b09a      	sub	sp, #104	; 0x68
 800975e:	af00      	add	r7, sp, #0
 8009760:	ed87 0b04 	vstr	d0, [r7, #16]
 8009764:	ed87 1b02 	vstr	d1, [r7, #8]
 8009768:	6078      	str	r0, [r7, #4]
 800976a:	ed97 0b04 	vldr	d0, [r7, #16]
 800976e:	f01a fd67 	bl	8024240 <cos>
 8009772:	ed87 0b18 	vstr	d0, [r7, #96]	; 0x60
 8009776:	ed97 0b02 	vldr	d0, [r7, #8]
 800977a:	f01a fd61 	bl	8024240 <cos>
 800977e:	ed87 0b16 	vstr	d0, [r7, #88]	; 0x58
 8009782:	ed97 0b04 	vldr	d0, [r7, #16]
 8009786:	f01a fe3b 	bl	8024400 <sin>
 800978a:	ed87 0b14 	vstr	d0, [r7, #80]	; 0x50
 800978e:	ed97 0b02 	vldr	d0, [r7, #8]
 8009792:	f01a fe35 	bl	8024400 <sin>
 8009796:	ed87 0b12 	vstr	d0, [r7, #72]	; 0x48
 800979a:	a3c4      	add	r3, pc, #784	; (adr r3, 8009aac <leg_pos+0x354>)
 800979c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80097a0:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 80097a4:	f7f6 ff28 	bl	80005f8 <__aeabi_dmul>
 80097a8:	4602      	mov	r2, r0
 80097aa:	460b      	mov	r3, r1
 80097ac:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 80097b0:	a3be      	add	r3, pc, #760	; (adr r3, 8009aac <leg_pos+0x354>)
 80097b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80097b6:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80097ba:	f7f6 ff1d 	bl	80005f8 <__aeabi_dmul>
 80097be:	4602      	mov	r2, r0
 80097c0:	460b      	mov	r3, r1
 80097c2:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 80097c6:	a3bb      	add	r3, pc, #748	; (adr r3, 8009ab4 <leg_pos+0x35c>)
 80097c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80097cc:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80097d0:	f7f6 ff12 	bl	80005f8 <__aeabi_dmul>
 80097d4:	4602      	mov	r2, r0
 80097d6:	460b      	mov	r3, r1
 80097d8:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 80097dc:	a3b5      	add	r3, pc, #724	; (adr r3, 8009ab4 <leg_pos+0x35c>)
 80097de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80097e2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80097e6:	f7f6 ff07 	bl	80005f8 <__aeabi_dmul>
 80097ea:	4602      	mov	r2, r0
 80097ec:	460b      	mov	r3, r1
 80097ee:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80097f2:	a3ae      	add	r3, pc, #696	; (adr r3, 8009aac <leg_pos+0x354>)
 80097f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80097f8:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80097fc:	f7f6 fefc 	bl	80005f8 <__aeabi_dmul>
 8009800:	4602      	mov	r2, r0
 8009802:	460b      	mov	r3, r1
 8009804:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8009808:	f7f6 fd3e 	bl	8000288 <__aeabi_dsub>
 800980c:	4602      	mov	r2, r0
 800980e:	460b      	mov	r3, r1
 8009810:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 8009814:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8009818:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800981c:	f7f6 fd34 	bl	8000288 <__aeabi_dsub>
 8009820:	4602      	mov	r2, r0
 8009822:	460b      	mov	r3, r1
 8009824:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8009828:	a3a0      	add	r3, pc, #640	; (adr r3, 8009aac <leg_pos+0x354>)
 800982a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800982e:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 8009832:	f7f6 fee1 	bl	80005f8 <__aeabi_dmul>
 8009836:	4602      	mov	r2, r0
 8009838:	460b      	mov	r3, r1
 800983a:	4610      	mov	r0, r2
 800983c:	4619      	mov	r1, r3
 800983e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8009842:	f7f6 fd21 	bl	8000288 <__aeabi_dsub>
 8009846:	4602      	mov	r2, r0
 8009848:	460b      	mov	r3, r1
 800984a:	4610      	mov	r0, r2
 800984c:	4619      	mov	r1, r3
 800984e:	a39b      	add	r3, pc, #620	; (adr r3, 8009abc <leg_pos+0x364>)
 8009850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009854:	f7f6 fd1a 	bl	800028c <__adddf3>
 8009858:	4602      	mov	r2, r0
 800985a:	460b      	mov	r3, r1
 800985c:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8009860:	a394      	add	r3, pc, #592	; (adr r3, 8009ab4 <leg_pos+0x35c>)
 8009862:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009866:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800986a:	f7f6 fec5 	bl	80005f8 <__aeabi_dmul>
 800986e:	4602      	mov	r2, r0
 8009870:	460b      	mov	r3, r1
 8009872:	4614      	mov	r4, r2
 8009874:	461d      	mov	r5, r3
 8009876:	a38f      	add	r3, pc, #572	; (adr r3, 8009ab4 <leg_pos+0x35c>)
 8009878:	e9d3 2300 	ldrd	r2, r3, [r3]
 800987c:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8009880:	f7f6 feba 	bl	80005f8 <__aeabi_dmul>
 8009884:	4602      	mov	r2, r0
 8009886:	460b      	mov	r3, r1
 8009888:	4620      	mov	r0, r4
 800988a:	4629      	mov	r1, r5
 800988c:	f7f6 fcfc 	bl	8000288 <__aeabi_dsub>
 8009890:	4602      	mov	r2, r0
 8009892:	460b      	mov	r3, r1
 8009894:	4610      	mov	r0, r2
 8009896:	4619      	mov	r1, r3
 8009898:	a38a      	add	r3, pc, #552	; (adr r3, 8009ac4 <leg_pos+0x36c>)
 800989a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800989e:	f7f6 fcf5 	bl	800028c <__adddf3>
 80098a2:	4602      	mov	r2, r0
 80098a4:	460b      	mov	r3, r1
 80098a6:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 80098aa:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80098ae:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80098b2:	f7f6 fea1 	bl	80005f8 <__aeabi_dmul>
 80098b6:	4602      	mov	r2, r0
 80098b8:	460b      	mov	r3, r1
 80098ba:	4614      	mov	r4, r2
 80098bc:	461d      	mov	r5, r3
 80098be:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80098c2:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80098c6:	f7f6 fe97 	bl	80005f8 <__aeabi_dmul>
 80098ca:	4602      	mov	r2, r0
 80098cc:	460b      	mov	r3, r1
 80098ce:	4620      	mov	r0, r4
 80098d0:	4629      	mov	r1, r5
 80098d2:	f7f6 fcdb 	bl	800028c <__adddf3>
 80098d6:	4602      	mov	r2, r0
 80098d8:	460b      	mov	r3, r1
 80098da:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 80098de:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80098e2:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 80098e6:	f7f6 fcd1 	bl	800028c <__adddf3>
 80098ea:	4602      	mov	r2, r0
 80098ec:	460b      	mov	r3, r1
 80098ee:	f04f 0000 	mov.w	r0, #0
 80098f2:	496d      	ldr	r1, [pc, #436]	; (8009aa8 <leg_pos+0x350>)
 80098f4:	f7f6 ffaa 	bl	800084c <__aeabi_ddiv>
 80098f8:	4602      	mov	r2, r0
 80098fa:	460b      	mov	r3, r1
 80098fc:	4614      	mov	r4, r2
 80098fe:	461d      	mov	r5, r3
 8009900:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8009904:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8009908:	f7f6 fcbe 	bl	8000288 <__aeabi_dsub>
 800990c:	4602      	mov	r2, r0
 800990e:	460b      	mov	r3, r1
 8009910:	4690      	mov	r8, r2
 8009912:	4699      	mov	r9, r3
 8009914:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8009918:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800991c:	f7f6 fe6c 	bl	80005f8 <__aeabi_dmul>
 8009920:	4602      	mov	r2, r0
 8009922:	460b      	mov	r3, r1
 8009924:	4692      	mov	sl, r2
 8009926:	469b      	mov	fp, r3
 8009928:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800992c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8009930:	f7f6 fe62 	bl	80005f8 <__aeabi_dmul>
 8009934:	4602      	mov	r2, r0
 8009936:	460b      	mov	r3, r1
 8009938:	4650      	mov	r0, sl
 800993a:	4659      	mov	r1, fp
 800993c:	f7f6 fca6 	bl	800028c <__adddf3>
 8009940:	4602      	mov	r2, r0
 8009942:	460b      	mov	r3, r1
 8009944:	4692      	mov	sl, r2
 8009946:	469b      	mov	fp, r3
 8009948:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800994c:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009950:	f7f6 fe52 	bl	80005f8 <__aeabi_dmul>
 8009954:	4602      	mov	r2, r0
 8009956:	460b      	mov	r3, r1
 8009958:	4650      	mov	r0, sl
 800995a:	4659      	mov	r1, fp
 800995c:	f7f6 fc94 	bl	8000288 <__aeabi_dsub>
 8009960:	4602      	mov	r2, r0
 8009962:	460b      	mov	r3, r1
 8009964:	ec43 2b17 	vmov	d7, r2, r3
 8009968:	eeb0 0a47 	vmov.f32	s0, s14
 800996c:	eef0 0a67 	vmov.f32	s1, s15
 8009970:	f01a fe44 	bl	80245fc <sqrt>
 8009974:	ec53 2b10 	vmov	r2, r3, d0
 8009978:	4640      	mov	r0, r8
 800997a:	4649      	mov	r1, r9
 800997c:	f7f6 fc86 	bl	800028c <__adddf3>
 8009980:	4602      	mov	r2, r0
 8009982:	460b      	mov	r3, r1
 8009984:	4620      	mov	r0, r4
 8009986:	4629      	mov	r1, r5
 8009988:	f7f6 fe36 	bl	80005f8 <__aeabi_dmul>
 800998c:	4602      	mov	r2, r0
 800998e:	460b      	mov	r3, r1
 8009990:	ec43 2b17 	vmov	d7, r2, r3
 8009994:	eeb0 0a47 	vmov.f32	s0, s14
 8009998:	eef0 0a67 	vmov.f32	s1, s15
 800999c:	f01a fab0 	bl	8023f00 <atan>
 80099a0:	ec51 0b10 	vmov	r0, r1, d0
 80099a4:	4602      	mov	r2, r0
 80099a6:	460b      	mov	r3, r1
 80099a8:	f7f6 fc70 	bl	800028c <__adddf3>
 80099ac:	4602      	mov	r2, r0
 80099ae:	460b      	mov	r3, r1
 80099b0:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 80099b4:	ed97 0b14 	vldr	d0, [r7, #80]	; 0x50
 80099b8:	f01a fd22 	bl	8024400 <sin>
 80099bc:	ec51 0b10 	vmov	r0, r1, d0
 80099c0:	a335      	add	r3, pc, #212	; (adr r3, 8009a98 <leg_pos+0x340>)
 80099c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099c6:	f7f6 fe17 	bl	80005f8 <__aeabi_dmul>
 80099ca:	4602      	mov	r2, r0
 80099cc:	460b      	mov	r3, r1
 80099ce:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 80099d2:	f7f6 fc5b 	bl	800028c <__adddf3>
 80099d6:	4602      	mov	r2, r0
 80099d8:	460b      	mov	r3, r1
 80099da:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 80099de:	ed97 0b14 	vldr	d0, [r7, #80]	; 0x50
 80099e2:	f01a fc2d 	bl	8024240 <cos>
 80099e6:	ec51 0b10 	vmov	r0, r1, d0
 80099ea:	a32b      	add	r3, pc, #172	; (adr r3, 8009a98 <leg_pos+0x340>)
 80099ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099f0:	f7f6 fe02 	bl	80005f8 <__aeabi_dmul>
 80099f4:	4602      	mov	r2, r0
 80099f6:	460b      	mov	r3, r1
 80099f8:	4610      	mov	r0, r2
 80099fa:	4619      	mov	r1, r3
 80099fc:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8009a00:	f7f6 fc44 	bl	800028c <__adddf3>
 8009a04:	4602      	mov	r2, r0
 8009a06:	460b      	mov	r3, r1
 8009a08:	4610      	mov	r0, r2
 8009a0a:	4619      	mov	r1, r3
 8009a0c:	a324      	add	r3, pc, #144	; (adr r3, 8009aa0 <leg_pos+0x348>)
 8009a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a12:	f7f6 fc39 	bl	8000288 <__aeabi_dsub>
 8009a16:	4602      	mov	r2, r0
 8009a18:	460b      	mov	r3, r1
 8009a1a:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8009a1e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009a22:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009a26:	f7f6 fde7 	bl	80005f8 <__aeabi_dmul>
 8009a2a:	4602      	mov	r2, r0
 8009a2c:	460b      	mov	r3, r1
 8009a2e:	4614      	mov	r4, r2
 8009a30:	461d      	mov	r5, r3
 8009a32:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8009a36:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8009a3a:	f7f6 fddd 	bl	80005f8 <__aeabi_dmul>
 8009a3e:	4602      	mov	r2, r0
 8009a40:	460b      	mov	r3, r1
 8009a42:	4620      	mov	r0, r4
 8009a44:	4629      	mov	r1, r5
 8009a46:	f7f6 fc21 	bl	800028c <__adddf3>
 8009a4a:	4602      	mov	r2, r0
 8009a4c:	460b      	mov	r3, r1
 8009a4e:	ec43 2b17 	vmov	d7, r2, r3
 8009a52:	eeb0 0a47 	vmov.f32	s0, s14
 8009a56:	eef0 0a67 	vmov.f32	s1, s15
 8009a5a:	f01a fdcf 	bl	80245fc <sqrt>
 8009a5e:	eeb0 7a40 	vmov.f32	s14, s0
 8009a62:	eef0 7a60 	vmov.f32	s15, s1
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	ed83 7b00 	vstr	d7, [r3]
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	f103 0408 	add.w	r4, r3, #8
 8009a72:	ed97 1b14 	vldr	d1, [r7, #80]	; 0x50
 8009a76:	ed97 0b12 	vldr	d0, [r7, #72]	; 0x48
 8009a7a:	f7ff fdb9 	bl	80095f0 <rt_atan2d_snf>
 8009a7e:	eeb0 7a40 	vmov.f32	s14, s0
 8009a82:	eef0 7a60 	vmov.f32	s15, s1
 8009a86:	ed84 7b00 	vstr	d7, [r4]
 8009a8a:	bf00      	nop
 8009a8c:	3768      	adds	r7, #104	; 0x68
 8009a8e:	46bd      	mov	sp, r7
 8009a90:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009a94:	f3af 8000 	nop.w
 8009a98:	33333333 	.word	0x33333333
 8009a9c:	3fc33333 	.word	0x3fc33333
 8009aa0:	5532617c 	.word	0x5532617c
 8009aa4:	3fa92a30 	.word	0x3fa92a30
 8009aa8:	3ff00000 	.word	0x3ff00000
 8009aac:	47ae147b 	.word	0x47ae147b
 8009ab0:	3fb47ae1 	.word	0x3fb47ae1
 8009ab4:	bc6a7efa 	.word	0xbc6a7efa
 8009ab8:	3f989374 	.word	0x3f989374
 8009abc:	5532617c 	.word	0x5532617c
 8009ac0:	3fb92a30 	.word	0x3fb92a30
 8009ac4:	663c74fb 	.word	0x663c74fb
 8009ac8:	3f9e32a0 	.word	0x3f9e32a0
 8009acc:	00000000 	.word	0x00000000

08009ad0 <leg_conv>:
 8009ad0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009ad4:	b0ba      	sub	sp, #232	; 0xe8
 8009ad6:	af00      	add	r7, sp, #0
 8009ad8:	ed87 0b08 	vstr	d0, [r7, #32]
 8009adc:	ed87 1b06 	vstr	d1, [r7, #24]
 8009ae0:	ed87 2b04 	vstr	d2, [r7, #16]
 8009ae4:	ed87 3b02 	vstr	d3, [r7, #8]
 8009ae8:	6078      	str	r0, [r7, #4]
 8009aea:	ed97 0b04 	vldr	d0, [r7, #16]
 8009aee:	f01a fba7 	bl	8024240 <cos>
 8009af2:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
 8009af6:	ed97 0b02 	vldr	d0, [r7, #8]
 8009afa:	f01a fba1 	bl	8024240 <cos>
 8009afe:	ed87 0b36 	vstr	d0, [r7, #216]	; 0xd8
 8009b02:	ed97 0b04 	vldr	d0, [r7, #16]
 8009b06:	f01a fc7b 	bl	8024400 <sin>
 8009b0a:	ed87 0b34 	vstr	d0, [r7, #208]	; 0xd0
 8009b0e:	ed97 0b02 	vldr	d0, [r7, #8]
 8009b12:	f01a fc75 	bl	8024400 <sin>
 8009b16:	ed87 0b32 	vstr	d0, [r7, #200]	; 0xc8
 8009b1a:	f20f 5350 	addw	r3, pc, #1360	; 0x550
 8009b1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b22:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009b26:	f7f6 fd67 	bl	80005f8 <__aeabi_dmul>
 8009b2a:	4602      	mov	r2, r0
 8009b2c:	460b      	mov	r3, r1
 8009b2e:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 8009b32:	f20f 5338 	addw	r3, pc, #1336	; 0x538
 8009b36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b3a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009b3e:	f7f6 fd5b 	bl	80005f8 <__aeabi_dmul>
 8009b42:	4602      	mov	r2, r0
 8009b44:	460b      	mov	r3, r1
 8009b46:	e9c7 232e 	strd	r2, r3, [r7, #184]	; 0xb8
 8009b4a:	f20f 5328 	addw	r3, pc, #1320	; 0x528
 8009b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b52:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009b56:	f7f6 fd4f 	bl	80005f8 <__aeabi_dmul>
 8009b5a:	4602      	mov	r2, r0
 8009b5c:	460b      	mov	r3, r1
 8009b5e:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 8009b62:	f20f 5310 	addw	r3, pc, #1296	; 0x510
 8009b66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b6a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009b6e:	f7f6 fd43 	bl	80005f8 <__aeabi_dmul>
 8009b72:	4602      	mov	r2, r0
 8009b74:	460b      	mov	r3, r1
 8009b76:	e9c7 232a 	strd	r2, r3, [r7, #168]	; 0xa8
 8009b7a:	f20f 43f8 	addw	r3, pc, #1272	; 0x4f8
 8009b7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b82:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009b86:	f7f6 fd37 	bl	80005f8 <__aeabi_dmul>
 8009b8a:	4602      	mov	r2, r0
 8009b8c:	460b      	mov	r3, r1
 8009b8e:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 8009b92:	f20f 43e0 	addw	r3, pc, #1248	; 0x4e0
 8009b96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b9a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009b9e:	f7f6 fd2b 	bl	80005f8 <__aeabi_dmul>
 8009ba2:	4602      	mov	r2, r0
 8009ba4:	460b      	mov	r3, r1
 8009ba6:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
 8009baa:	f20f 43c0 	addw	r3, pc, #1216	; 0x4c0
 8009bae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009bb2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009bb6:	f7f6 fd1f 	bl	80005f8 <__aeabi_dmul>
 8009bba:	4602      	mov	r2, r0
 8009bbc:	460b      	mov	r3, r1
 8009bbe:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 8009bc2:	f7f6 fb61 	bl	8000288 <__aeabi_dsub>
 8009bc6:	4602      	mov	r2, r0
 8009bc8:	460b      	mov	r3, r1
 8009bca:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 8009bce:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 8009bd2:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 8009bd6:	f7f6 fb57 	bl	8000288 <__aeabi_dsub>
 8009bda:	4602      	mov	r2, r0
 8009bdc:	460b      	mov	r3, r1
 8009bde:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88
 8009be2:	f20f 4388 	addw	r3, pc, #1160	; 0x488
 8009be6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009bea:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009bee:	f7f6 fd03 	bl	80005f8 <__aeabi_dmul>
 8009bf2:	4602      	mov	r2, r0
 8009bf4:	460b      	mov	r3, r1
 8009bf6:	4610      	mov	r0, r2
 8009bf8:	4619      	mov	r1, r3
 8009bfa:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 8009bfe:	f7f6 fb43 	bl	8000288 <__aeabi_dsub>
 8009c02:	4602      	mov	r2, r0
 8009c04:	460b      	mov	r3, r1
 8009c06:	4610      	mov	r0, r2
 8009c08:	4619      	mov	r1, r3
 8009c0a:	f20f 4370 	addw	r3, pc, #1136	; 0x470
 8009c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009c12:	f7f6 fb3b 	bl	800028c <__adddf3>
 8009c16:	4602      	mov	r2, r0
 8009c18:	460b      	mov	r3, r1
 8009c1a:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 8009c1e:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 8009c22:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 8009c26:	f7f6 fb2f 	bl	8000288 <__aeabi_dsub>
 8009c2a:	4602      	mov	r2, r0
 8009c2c:	460b      	mov	r3, r1
 8009c2e:	4610      	mov	r0, r2
 8009c30:	4619      	mov	r1, r3
 8009c32:	f20f 4350 	addw	r3, pc, #1104	; 0x450
 8009c36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009c3a:	f7f6 fb27 	bl	800028c <__adddf3>
 8009c3e:	4602      	mov	r2, r0
 8009c40:	460b      	mov	r3, r1
 8009c42:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 8009c46:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009c4a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 8009c4e:	f7f6 fcd3 	bl	80005f8 <__aeabi_dmul>
 8009c52:	4602      	mov	r2, r0
 8009c54:	460b      	mov	r3, r1
 8009c56:	4690      	mov	r8, r2
 8009c58:	4699      	mov	r9, r3
 8009c5a:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009c5e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009c62:	f7f6 fcc9 	bl	80005f8 <__aeabi_dmul>
 8009c66:	4602      	mov	r2, r0
 8009c68:	460b      	mov	r3, r1
 8009c6a:	4640      	mov	r0, r8
 8009c6c:	4649      	mov	r1, r9
 8009c6e:	f7f6 fb0d 	bl	800028c <__adddf3>
 8009c72:	4602      	mov	r2, r0
 8009c74:	460b      	mov	r3, r1
 8009c76:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 8009c7a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009c7e:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009c82:	f7f6 fcb9 	bl	80005f8 <__aeabi_dmul>
 8009c86:	4602      	mov	r2, r0
 8009c88:	460b      	mov	r3, r1
 8009c8a:	4610      	mov	r0, r2
 8009c8c:	4619      	mov	r1, r3
 8009c8e:	a3ff      	add	r3, pc, #1020	; (adr r3, 800a08c <leg_conv+0x5bc>)
 8009c90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009c94:	f7f6 fcb0 	bl	80005f8 <__aeabi_dmul>
 8009c98:	4602      	mov	r2, r0
 8009c9a:	460b      	mov	r3, r1
 8009c9c:	4690      	mov	r8, r2
 8009c9e:	4699      	mov	r9, r3
 8009ca0:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009ca4:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009ca8:	f7f6 fca6 	bl	80005f8 <__aeabi_dmul>
 8009cac:	4602      	mov	r2, r0
 8009cae:	460b      	mov	r3, r1
 8009cb0:	4610      	mov	r0, r2
 8009cb2:	4619      	mov	r1, r3
 8009cb4:	a3f5      	add	r3, pc, #980	; (adr r3, 800a08c <leg_conv+0x5bc>)
 8009cb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009cba:	f7f6 fc9d 	bl	80005f8 <__aeabi_dmul>
 8009cbe:	4602      	mov	r2, r0
 8009cc0:	460b      	mov	r3, r1
 8009cc2:	4640      	mov	r0, r8
 8009cc4:	4649      	mov	r1, r9
 8009cc6:	f7f6 fae1 	bl	800028c <__adddf3>
 8009cca:	4602      	mov	r2, r0
 8009ccc:	460b      	mov	r3, r1
 8009cce:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 8009cd2:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009cd6:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009cda:	f7f6 fc8d 	bl	80005f8 <__aeabi_dmul>
 8009cde:	4602      	mov	r2, r0
 8009ce0:	460b      	mov	r3, r1
 8009ce2:	4610      	mov	r0, r2
 8009ce4:	4619      	mov	r1, r3
 8009ce6:	a3e9      	add	r3, pc, #932	; (adr r3, 800a08c <leg_conv+0x5bc>)
 8009ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009cec:	f7f6 fc84 	bl	80005f8 <__aeabi_dmul>
 8009cf0:	4602      	mov	r2, r0
 8009cf2:	460b      	mov	r3, r1
 8009cf4:	4690      	mov	r8, r2
 8009cf6:	4699      	mov	r9, r3
 8009cf8:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009cfc:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009d00:	f7f6 fc7a 	bl	80005f8 <__aeabi_dmul>
 8009d04:	4602      	mov	r2, r0
 8009d06:	460b      	mov	r3, r1
 8009d08:	4610      	mov	r0, r2
 8009d0a:	4619      	mov	r1, r3
 8009d0c:	a3df      	add	r3, pc, #892	; (adr r3, 800a08c <leg_conv+0x5bc>)
 8009d0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d12:	f7f6 fc71 	bl	80005f8 <__aeabi_dmul>
 8009d16:	4602      	mov	r2, r0
 8009d18:	460b      	mov	r3, r1
 8009d1a:	4640      	mov	r0, r8
 8009d1c:	4649      	mov	r1, r9
 8009d1e:	f7f6 fab5 	bl	800028c <__adddf3>
 8009d22:	4602      	mov	r2, r0
 8009d24:	460b      	mov	r3, r1
 8009d26:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 8009d2a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009d2e:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 8009d32:	f7f6 faab 	bl	800028c <__adddf3>
 8009d36:	4602      	mov	r2, r0
 8009d38:	460b      	mov	r3, r1
 8009d3a:	f04f 0000 	mov.w	r0, #0
 8009d3e:	49ca      	ldr	r1, [pc, #808]	; (800a068 <leg_conv+0x598>)
 8009d40:	f7f6 fd84 	bl	800084c <__aeabi_ddiv>
 8009d44:	4602      	mov	r2, r0
 8009d46:	460b      	mov	r3, r1
 8009d48:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 8009d4c:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009d50:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009d54:	f7f6 fc50 	bl	80005f8 <__aeabi_dmul>
 8009d58:	4602      	mov	r2, r0
 8009d5a:	460b      	mov	r3, r1
 8009d5c:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 8009d60:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009d64:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 8009d68:	f7f6 fc46 	bl	80005f8 <__aeabi_dmul>
 8009d6c:	4602      	mov	r2, r0
 8009d6e:	460b      	mov	r3, r1
 8009d70:	4690      	mov	r8, r2
 8009d72:	4699      	mov	r9, r3
 8009d74:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009d78:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 8009d7c:	f7f6 fc3c 	bl	80005f8 <__aeabi_dmul>
 8009d80:	4602      	mov	r2, r0
 8009d82:	460b      	mov	r3, r1
 8009d84:	4640      	mov	r0, r8
 8009d86:	4649      	mov	r1, r9
 8009d88:	f7f6 fa80 	bl	800028c <__adddf3>
 8009d8c:	4602      	mov	r2, r0
 8009d8e:	460b      	mov	r3, r1
 8009d90:	4690      	mov	r8, r2
 8009d92:	4699      	mov	r9, r3
 8009d94:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009d98:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8009d9c:	f7f6 fc2c 	bl	80005f8 <__aeabi_dmul>
 8009da0:	4602      	mov	r2, r0
 8009da2:	460b      	mov	r3, r1
 8009da4:	4640      	mov	r0, r8
 8009da6:	4649      	mov	r1, r9
 8009da8:	f7f6 fa6e 	bl	8000288 <__aeabi_dsub>
 8009dac:	4602      	mov	r2, r0
 8009dae:	460b      	mov	r3, r1
 8009db0:	ec43 2b17 	vmov	d7, r2, r3
 8009db4:	eeb0 0a47 	vmov.f32	s0, s14
 8009db8:	eef0 0a67 	vmov.f32	s1, s15
 8009dbc:	f01a fc1e 	bl	80245fc <sqrt>
 8009dc0:	ed87 0b24 	vstr	d0, [r7, #144]	; 0x90
 8009dc4:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8009dc8:	f04f 0000 	mov.w	r0, #0
 8009dcc:	49a6      	ldr	r1, [pc, #664]	; (800a068 <leg_conv+0x598>)
 8009dce:	f7f6 fd3d 	bl	800084c <__aeabi_ddiv>
 8009dd2:	4602      	mov	r2, r0
 8009dd4:	460b      	mov	r3, r1
 8009dd6:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 8009dda:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 8009dde:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8009de2:	f7f6 fa51 	bl	8000288 <__aeabi_dsub>
 8009de6:	4602      	mov	r2, r0
 8009de8:	460b      	mov	r3, r1
 8009dea:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 8009dee:	f7f6 fa4d 	bl	800028c <__adddf3>
 8009df2:	4602      	mov	r2, r0
 8009df4:	460b      	mov	r3, r1
 8009df6:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 8009dfa:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009dfe:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8009e02:	f7f6 fbf9 	bl	80005f8 <__aeabi_dmul>
 8009e06:	4602      	mov	r2, r0
 8009e08:	460b      	mov	r3, r1
 8009e0a:	ec43 2b17 	vmov	d7, r2, r3
 8009e0e:	eeb0 0a47 	vmov.f32	s0, s14
 8009e12:	eef0 0a67 	vmov.f32	s1, s15
 8009e16:	f01a f873 	bl	8023f00 <atan>
 8009e1a:	ec51 0b10 	vmov	r0, r1, d0
 8009e1e:	4602      	mov	r2, r0
 8009e20:	460b      	mov	r3, r1
 8009e22:	f7f6 fa33 	bl	800028c <__adddf3>
 8009e26:	4602      	mov	r2, r0
 8009e28:	460b      	mov	r3, r1
 8009e2a:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8009e2e:	ed97 0b10 	vldr	d0, [r7, #64]	; 0x40
 8009e32:	f01a fa05 	bl	8024240 <cos>
 8009e36:	ed87 0b0e 	vstr	d0, [r7, #56]	; 0x38
 8009e3a:	ed97 0b10 	vldr	d0, [r7, #64]	; 0x40
 8009e3e:	f01a fadf 	bl	8024400 <sin>
 8009e42:	ed87 0b0c 	vstr	d0, [r7, #48]	; 0x30
 8009e46:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009e4a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8009e4e:	f7f6 fbd3 	bl	80005f8 <__aeabi_dmul>
 8009e52:	4602      	mov	r2, r0
 8009e54:	460b      	mov	r3, r1
 8009e56:	4610      	mov	r0, r2
 8009e58:	4619      	mov	r1, r3
 8009e5a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009e5e:	f7f6 fbcb 	bl	80005f8 <__aeabi_dmul>
 8009e62:	4602      	mov	r2, r0
 8009e64:	460b      	mov	r3, r1
 8009e66:	4610      	mov	r0, r2
 8009e68:	4619      	mov	r1, r3
 8009e6a:	f04f 0200 	mov.w	r2, #0
 8009e6e:	4b7e      	ldr	r3, [pc, #504]	; (800a068 <leg_conv+0x598>)
 8009e70:	f7f6 fa0c 	bl	800028c <__adddf3>
 8009e74:	4602      	mov	r2, r0
 8009e76:	460b      	mov	r3, r1
 8009e78:	f04f 0000 	mov.w	r0, #0
 8009e7c:	497a      	ldr	r1, [pc, #488]	; (800a068 <leg_conv+0x598>)
 8009e7e:	f7f6 fce5 	bl	800084c <__aeabi_ddiv>
 8009e82:	4602      	mov	r2, r0
 8009e84:	460b      	mov	r3, r1
 8009e86:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8009e8a:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8009e8e:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 8009e92:	f7f6 f9fb 	bl	800028c <__adddf3>
 8009e96:	4602      	mov	r2, r0
 8009e98:	460b      	mov	r3, r1
 8009e9a:	4610      	mov	r0, r2
 8009e9c:	4619      	mov	r1, r3
 8009e9e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009ea2:	f7f6 fba9 	bl	80005f8 <__aeabi_dmul>
 8009ea6:	4602      	mov	r2, r0
 8009ea8:	460b      	mov	r3, r1
 8009eaa:	4610      	mov	r0, r2
 8009eac:	4619      	mov	r1, r3
 8009eae:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009eb2:	f7f6 fba1 	bl	80005f8 <__aeabi_dmul>
 8009eb6:	4602      	mov	r2, r0
 8009eb8:	460b      	mov	r3, r1
 8009eba:	4690      	mov	r8, r2
 8009ebc:	4699      	mov	r9, r3
 8009ebe:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009ec2:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009ec6:	f7f6 fb97 	bl	80005f8 <__aeabi_dmul>
 8009eca:	4602      	mov	r2, r0
 8009ecc:	460b      	mov	r3, r1
 8009ece:	4610      	mov	r0, r2
 8009ed0:	4619      	mov	r1, r3
 8009ed2:	a363      	add	r3, pc, #396	; (adr r3, 800a060 <leg_conv+0x590>)
 8009ed4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ed8:	f7f6 fb8e 	bl	80005f8 <__aeabi_dmul>
 8009edc:	4602      	mov	r2, r0
 8009ede:	460b      	mov	r3, r1
 8009ee0:	4692      	mov	sl, r2
 8009ee2:	469b      	mov	fp, r3
 8009ee4:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009ee8:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 8009eec:	f7f6 fb84 	bl	80005f8 <__aeabi_dmul>
 8009ef0:	4602      	mov	r2, r0
 8009ef2:	460b      	mov	r3, r1
 8009ef4:	4610      	mov	r0, r2
 8009ef6:	4619      	mov	r1, r3
 8009ef8:	a359      	add	r3, pc, #356	; (adr r3, 800a060 <leg_conv+0x590>)
 8009efa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009efe:	f7f6 fb7b 	bl	80005f8 <__aeabi_dmul>
 8009f02:	4602      	mov	r2, r0
 8009f04:	460b      	mov	r3, r1
 8009f06:	4650      	mov	r0, sl
 8009f08:	4659      	mov	r1, fp
 8009f0a:	f7f6 f9bf 	bl	800028c <__adddf3>
 8009f0e:	4602      	mov	r2, r0
 8009f10:	460b      	mov	r3, r1
 8009f12:	4692      	mov	sl, r2
 8009f14:	469b      	mov	fp, r3
 8009f16:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8009f1a:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8009f1e:	f7f6 fb6b 	bl	80005f8 <__aeabi_dmul>
 8009f22:	4602      	mov	r2, r0
 8009f24:	460b      	mov	r3, r1
 8009f26:	4610      	mov	r0, r2
 8009f28:	4619      	mov	r1, r3
 8009f2a:	4602      	mov	r2, r0
 8009f2c:	460b      	mov	r3, r1
 8009f2e:	f7f6 f9ad 	bl	800028c <__adddf3>
 8009f32:	4602      	mov	r2, r0
 8009f34:	460b      	mov	r3, r1
 8009f36:	4650      	mov	r0, sl
 8009f38:	4659      	mov	r1, fp
 8009f3a:	f7f6 f9a5 	bl	8000288 <__aeabi_dsub>
 8009f3e:	4602      	mov	r2, r0
 8009f40:	460b      	mov	r3, r1
 8009f42:	4610      	mov	r0, r2
 8009f44:	4619      	mov	r1, r3
 8009f46:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8009f4a:	f7f6 fb55 	bl	80005f8 <__aeabi_dmul>
 8009f4e:	4602      	mov	r2, r0
 8009f50:	460b      	mov	r3, r1
 8009f52:	4610      	mov	r0, r2
 8009f54:	4619      	mov	r1, r3
 8009f56:	f04f 0200 	mov.w	r2, #0
 8009f5a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f5e:	f7f6 fc75 	bl	800084c <__aeabi_ddiv>
 8009f62:	4602      	mov	r2, r0
 8009f64:	460b      	mov	r3, r1
 8009f66:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8009f6a:	f7f6 f98d 	bl	8000288 <__aeabi_dsub>
 8009f6e:	4602      	mov	r2, r0
 8009f70:	460b      	mov	r3, r1
 8009f72:	4610      	mov	r0, r2
 8009f74:	4619      	mov	r1, r3
 8009f76:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8009f7a:	f7f6 fb3d 	bl	80005f8 <__aeabi_dmul>
 8009f7e:	4602      	mov	r2, r0
 8009f80:	460b      	mov	r3, r1
 8009f82:	4640      	mov	r0, r8
 8009f84:	4649      	mov	r1, r9
 8009f86:	f7f6 f981 	bl	800028c <__adddf3>
 8009f8a:	4602      	mov	r2, r0
 8009f8c:	460b      	mov	r3, r1
 8009f8e:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8009f92:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8009f96:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8009f9a:	f7f6 f977 	bl	800028c <__adddf3>
 8009f9e:	4602      	mov	r2, r0
 8009fa0:	460b      	mov	r3, r1
 8009fa2:	4610      	mov	r0, r2
 8009fa4:	4619      	mov	r1, r3
 8009fa6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009faa:	f7f6 fb25 	bl	80005f8 <__aeabi_dmul>
 8009fae:	4602      	mov	r2, r0
 8009fb0:	460b      	mov	r3, r1
 8009fb2:	4610      	mov	r0, r2
 8009fb4:	4619      	mov	r1, r3
 8009fb6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009fba:	f7f6 fb1d 	bl	80005f8 <__aeabi_dmul>
 8009fbe:	4602      	mov	r2, r0
 8009fc0:	460b      	mov	r3, r1
 8009fc2:	4690      	mov	r8, r2
 8009fc4:	4699      	mov	r9, r3
 8009fc6:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009fca:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 8009fce:	f7f6 fb13 	bl	80005f8 <__aeabi_dmul>
 8009fd2:	4602      	mov	r2, r0
 8009fd4:	460b      	mov	r3, r1
 8009fd6:	4610      	mov	r0, r2
 8009fd8:	4619      	mov	r1, r3
 8009fda:	a321      	add	r3, pc, #132	; (adr r3, 800a060 <leg_conv+0x590>)
 8009fdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009fe0:	f7f6 fb0a 	bl	80005f8 <__aeabi_dmul>
 8009fe4:	4602      	mov	r2, r0
 8009fe6:	460b      	mov	r3, r1
 8009fe8:	4692      	mov	sl, r2
 8009fea:	469b      	mov	fp, r3
 8009fec:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8009ff0:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8009ff4:	f7f6 fb00 	bl	80005f8 <__aeabi_dmul>
 8009ff8:	4602      	mov	r2, r0
 8009ffa:	460b      	mov	r3, r1
 8009ffc:	4610      	mov	r0, r2
 8009ffe:	4619      	mov	r1, r3
 800a000:	a317      	add	r3, pc, #92	; (adr r3, 800a060 <leg_conv+0x590>)
 800a002:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a006:	f7f6 faf7 	bl	80005f8 <__aeabi_dmul>
 800a00a:	4602      	mov	r2, r0
 800a00c:	460b      	mov	r3, r1
 800a00e:	4650      	mov	r0, sl
 800a010:	4659      	mov	r1, fp
 800a012:	f7f6 f93b 	bl	800028c <__adddf3>
 800a016:	4602      	mov	r2, r0
 800a018:	460b      	mov	r3, r1
 800a01a:	4692      	mov	sl, r2
 800a01c:	469b      	mov	fp, r3
 800a01e:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a022:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 800a026:	f7f6 fae7 	bl	80005f8 <__aeabi_dmul>
 800a02a:	4602      	mov	r2, r0
 800a02c:	460b      	mov	r3, r1
 800a02e:	4610      	mov	r0, r2
 800a030:	4619      	mov	r1, r3
 800a032:	4602      	mov	r2, r0
 800a034:	460b      	mov	r3, r1
 800a036:	f7f6 f929 	bl	800028c <__adddf3>
 800a03a:	4602      	mov	r2, r0
 800a03c:	460b      	mov	r3, r1
 800a03e:	4650      	mov	r0, sl
 800a040:	4659      	mov	r1, fp
 800a042:	f7f6 f921 	bl	8000288 <__aeabi_dsub>
 800a046:	4602      	mov	r2, r0
 800a048:	460b      	mov	r3, r1
 800a04a:	4610      	mov	r0, r2
 800a04c:	4619      	mov	r1, r3
 800a04e:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800a052:	f7f6 fad1 	bl	80005f8 <__aeabi_dmul>
 800a056:	4602      	mov	r2, r0
 800a058:	460b      	mov	r3, r1
 800a05a:	e01b      	b.n	800a094 <leg_conv+0x5c4>
 800a05c:	f3af 8000 	nop.w
 800a060:	bc6a7efa 	.word	0xbc6a7efa
 800a064:	3fa89374 	.word	0x3fa89374
 800a068:	3ff00000 	.word	0x3ff00000
 800a06c:	47ae147b 	.word	0x47ae147b
 800a070:	3fb47ae1 	.word	0x3fb47ae1
 800a074:	bc6a7efa 	.word	0xbc6a7efa
 800a078:	3f989374 	.word	0x3f989374
 800a07c:	5532617c 	.word	0x5532617c
 800a080:	3fb92a30 	.word	0x3fb92a30
 800a084:	663c74fb 	.word	0x663c74fb
 800a088:	3f9e32a0 	.word	0x3f9e32a0
 800a08c:	47ae147b 	.word	0x47ae147b
 800a090:	3fc47ae1 	.word	0x3fc47ae1
 800a094:	4610      	mov	r0, r2
 800a096:	4619      	mov	r1, r3
 800a098:	f04f 0200 	mov.w	r2, #0
 800a09c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a0a0:	f7f6 fbd4 	bl	800084c <__aeabi_ddiv>
 800a0a4:	4602      	mov	r2, r0
 800a0a6:	460b      	mov	r3, r1
 800a0a8:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 800a0ac:	f7f6 f8ec 	bl	8000288 <__aeabi_dsub>
 800a0b0:	4602      	mov	r2, r0
 800a0b2:	460b      	mov	r3, r1
 800a0b4:	4610      	mov	r0, r2
 800a0b6:	4619      	mov	r1, r3
 800a0b8:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a0bc:	f7f6 fa9c 	bl	80005f8 <__aeabi_dmul>
 800a0c0:	4602      	mov	r2, r0
 800a0c2:	460b      	mov	r3, r1
 800a0c4:	4640      	mov	r0, r8
 800a0c6:	4649      	mov	r1, r9
 800a0c8:	f7f6 f8e0 	bl	800028c <__adddf3>
 800a0cc:	4602      	mov	r2, r0
 800a0ce:	460b      	mov	r3, r1
 800a0d0:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 800a0d4:	a3f3      	add	r3, pc, #972	; (adr r3, 800a4a4 <leg_conv+0x9d4>)
 800a0d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a0da:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800a0de:	f7f6 fa8b 	bl	80005f8 <__aeabi_dmul>
 800a0e2:	4602      	mov	r2, r0
 800a0e4:	460b      	mov	r3, r1
 800a0e6:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a0ea:	f7f6 f8cf 	bl	800028c <__adddf3>
 800a0ee:	4602      	mov	r2, r0
 800a0f0:	460b      	mov	r3, r1
 800a0f2:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a0f6:	a3eb      	add	r3, pc, #940	; (adr r3, 800a4a4 <leg_conv+0x9d4>)
 800a0f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a0fc:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800a100:	f7f6 fa7a 	bl	80005f8 <__aeabi_dmul>
 800a104:	4602      	mov	r2, r0
 800a106:	460b      	mov	r3, r1
 800a108:	4610      	mov	r0, r2
 800a10a:	4619      	mov	r1, r3
 800a10c:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800a110:	f7f6 f8bc 	bl	800028c <__adddf3>
 800a114:	4602      	mov	r2, r0
 800a116:	460b      	mov	r3, r1
 800a118:	4610      	mov	r0, r2
 800a11a:	4619      	mov	r1, r3
 800a11c:	a3e3      	add	r3, pc, #908	; (adr r3, 800a4ac <leg_conv+0x9dc>)
 800a11e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a122:	f7f6 f8b1 	bl	8000288 <__aeabi_dsub>
 800a126:	4602      	mov	r2, r0
 800a128:	460b      	mov	r3, r1
 800a12a:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 800a12e:	f8d7 40c0 	ldr.w	r4, [r7, #192]	; 0xc0
 800a132:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800a136:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 800a13a:	a3da      	add	r3, pc, #872	; (adr r3, 800a4a4 <leg_conv+0x9d4>)
 800a13c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a140:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800a144:	f7f6 fa58 	bl	80005f8 <__aeabi_dmul>
 800a148:	4602      	mov	r2, r0
 800a14a:	460b      	mov	r3, r1
 800a14c:	4620      	mov	r0, r4
 800a14e:	4629      	mov	r1, r5
 800a150:	f7f6 f89a 	bl	8000288 <__aeabi_dsub>
 800a154:	4602      	mov	r2, r0
 800a156:	460b      	mov	r3, r1
 800a158:	4610      	mov	r0, r2
 800a15a:	4619      	mov	r1, r3
 800a15c:	a3d3      	add	r3, pc, #844	; (adr r3, 800a4ac <leg_conv+0x9dc>)
 800a15e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a162:	f7f6 f893 	bl	800028c <__adddf3>
 800a166:	4602      	mov	r2, r0
 800a168:	460b      	mov	r3, r1
 800a16a:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a16e:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a172:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a176:	f7f6 fa3f 	bl	80005f8 <__aeabi_dmul>
 800a17a:	4602      	mov	r2, r0
 800a17c:	460b      	mov	r3, r1
 800a17e:	e9c7 2338 	strd	r2, r3, [r7, #224]	; 0xe0
 800a182:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a186:	f04f 0000 	mov.w	r0, #0
 800a18a:	49c5      	ldr	r1, [pc, #788]	; (800a4a0 <leg_conv+0x9d0>)
 800a18c:	f7f6 fb5e 	bl	800084c <__aeabi_ddiv>
 800a190:	4602      	mov	r2, r0
 800a192:	460b      	mov	r3, r1
 800a194:	e9c7 2334 	strd	r2, r3, [r7, #208]	; 0xd0
 800a198:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a19c:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a1a0:	f7f6 fa2a 	bl	80005f8 <__aeabi_dmul>
 800a1a4:	4602      	mov	r2, r0
 800a1a6:	460b      	mov	r3, r1
 800a1a8:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a1ac:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800a1b0:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800a1b4:	f7f6 fa20 	bl	80005f8 <__aeabi_dmul>
 800a1b8:	4602      	mov	r2, r0
 800a1ba:	460b      	mov	r3, r1
 800a1bc:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800a1c0:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a1c4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a1c8:	f7f6 fa16 	bl	80005f8 <__aeabi_dmul>
 800a1cc:	4602      	mov	r2, r0
 800a1ce:	460b      	mov	r3, r1
 800a1d0:	4610      	mov	r0, r2
 800a1d2:	4619      	mov	r1, r3
 800a1d4:	a3ae      	add	r3, pc, #696	; (adr r3, 800a490 <leg_conv+0x9c0>)
 800a1d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a1da:	f7f6 fa0d 	bl	80005f8 <__aeabi_dmul>
 800a1de:	4602      	mov	r2, r0
 800a1e0:	460b      	mov	r3, r1
 800a1e2:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800a1e6:	f7f6 f84f 	bl	8000288 <__aeabi_dsub>
 800a1ea:	4602      	mov	r2, r0
 800a1ec:	460b      	mov	r3, r1
 800a1ee:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800a1f2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800a1f6:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800a1fa:	f7f6 f9fd 	bl	80005f8 <__aeabi_dmul>
 800a1fe:	4602      	mov	r2, r0
 800a200:	460b      	mov	r3, r1
 800a202:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800a206:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a20a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a20e:	f7f6 f9f3 	bl	80005f8 <__aeabi_dmul>
 800a212:	4602      	mov	r2, r0
 800a214:	460b      	mov	r3, r1
 800a216:	4610      	mov	r0, r2
 800a218:	4619      	mov	r1, r3
 800a21a:	a39d      	add	r3, pc, #628	; (adr r3, 800a490 <leg_conv+0x9c0>)
 800a21c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a220:	f7f6 f9ea 	bl	80005f8 <__aeabi_dmul>
 800a224:	4602      	mov	r2, r0
 800a226:	460b      	mov	r3, r1
 800a228:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a22c:	f7f6 f82c 	bl	8000288 <__aeabi_dsub>
 800a230:	4602      	mov	r2, r0
 800a232:	460b      	mov	r3, r1
 800a234:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 800a238:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a23c:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a240:	f7f6 f9da 	bl	80005f8 <__aeabi_dmul>
 800a244:	4602      	mov	r2, r0
 800a246:	460b      	mov	r3, r1
 800a248:	4610      	mov	r0, r2
 800a24a:	4619      	mov	r1, r3
 800a24c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a250:	f7f6 f81c 	bl	800028c <__adddf3>
 800a254:	4602      	mov	r2, r0
 800a256:	460b      	mov	r3, r1
 800a258:	ec43 2b17 	vmov	d7, r2, r3
 800a25c:	eeb0 0a47 	vmov.f32	s0, s14
 800a260:	eef0 0a67 	vmov.f32	s1, s15
 800a264:	f01a f9ca 	bl	80245fc <sqrt>
 800a268:	ec53 2b10 	vmov	r2, r3, d0
 800a26c:	f04f 0000 	mov.w	r0, #0
 800a270:	498b      	ldr	r1, [pc, #556]	; (800a4a0 <leg_conv+0x9d0>)
 800a272:	f7f6 faeb 	bl	800084c <__aeabi_ddiv>
 800a276:	4602      	mov	r2, r0
 800a278:	460b      	mov	r3, r1
 800a27a:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800a27e:	f7f6 f9bb 	bl	80005f8 <__aeabi_dmul>
 800a282:	4602      	mov	r2, r0
 800a284:	460b      	mov	r3, r1
 800a286:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
 800a28a:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a28e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800a292:	f7f6 f9b1 	bl	80005f8 <__aeabi_dmul>
 800a296:	4602      	mov	r2, r0
 800a298:	460b      	mov	r3, r1
 800a29a:	4614      	mov	r4, r2
 800a29c:	461d      	mov	r5, r3
 800a29e:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a2a2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a2a6:	f7f5 fff1 	bl	800028c <__adddf3>
 800a2aa:	4602      	mov	r2, r0
 800a2ac:	460b      	mov	r3, r1
 800a2ae:	f04f 0000 	mov.w	r0, #0
 800a2b2:	497b      	ldr	r1, [pc, #492]	; (800a4a0 <leg_conv+0x9d0>)
 800a2b4:	f7f6 faca 	bl	800084c <__aeabi_ddiv>
 800a2b8:	4602      	mov	r2, r0
 800a2ba:	460b      	mov	r3, r1
 800a2bc:	4620      	mov	r0, r4
 800a2be:	4629      	mov	r1, r5
 800a2c0:	f7f6 f99a 	bl	80005f8 <__aeabi_dmul>
 800a2c4:	4602      	mov	r2, r0
 800a2c6:	460b      	mov	r3, r1
 800a2c8:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 800a2cc:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800a2d0:	f04f 0000 	mov.w	r0, #0
 800a2d4:	4972      	ldr	r1, [pc, #456]	; (800a4a0 <leg_conv+0x9d0>)
 800a2d6:	f7f6 fab9 	bl	800084c <__aeabi_ddiv>
 800a2da:	4602      	mov	r2, r0
 800a2dc:	460b      	mov	r3, r1
 800a2de:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a2e2:	f7f6 f989 	bl	80005f8 <__aeabi_dmul>
 800a2e6:	4602      	mov	r2, r0
 800a2e8:	460b      	mov	r3, r1
 800a2ea:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a2ee:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a2f2:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a2f6:	f7f6 f97f 	bl	80005f8 <__aeabi_dmul>
 800a2fa:	4602      	mov	r2, r0
 800a2fc:	460b      	mov	r3, r1
 800a2fe:	4610      	mov	r0, r2
 800a300:	4619      	mov	r1, r3
 800a302:	4602      	mov	r2, r0
 800a304:	460b      	mov	r3, r1
 800a306:	f7f5 ffc1 	bl	800028c <__adddf3>
 800a30a:	4602      	mov	r2, r0
 800a30c:	460b      	mov	r3, r1
 800a30e:	4614      	mov	r4, r2
 800a310:	461d      	mov	r5, r3
 800a312:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a316:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a31a:	f7f6 f96d 	bl	80005f8 <__aeabi_dmul>
 800a31e:	4602      	mov	r2, r0
 800a320:	460b      	mov	r3, r1
 800a322:	4610      	mov	r0, r2
 800a324:	4619      	mov	r1, r3
 800a326:	4602      	mov	r2, r0
 800a328:	460b      	mov	r3, r1
 800a32a:	f7f5 ffaf 	bl	800028c <__adddf3>
 800a32e:	4602      	mov	r2, r0
 800a330:	460b      	mov	r3, r1
 800a332:	4620      	mov	r0, r4
 800a334:	4629      	mov	r1, r5
 800a336:	f7f5 ffa7 	bl	8000288 <__aeabi_dsub>
 800a33a:	4602      	mov	r2, r0
 800a33c:	460b      	mov	r3, r1
 800a33e:	4610      	mov	r0, r2
 800a340:	4619      	mov	r1, r3
 800a342:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800a346:	f7f6 f957 	bl	80005f8 <__aeabi_dmul>
 800a34a:	4602      	mov	r2, r0
 800a34c:	460b      	mov	r3, r1
 800a34e:	4610      	mov	r0, r2
 800a350:	4619      	mov	r1, r3
 800a352:	f04f 0200 	mov.w	r2, #0
 800a356:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a35a:	f7f6 fa77 	bl	800084c <__aeabi_ddiv>
 800a35e:	4602      	mov	r2, r0
 800a360:	460b      	mov	r3, r1
 800a362:	4614      	mov	r4, r2
 800a364:	461d      	mov	r5, r3
 800a366:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a36a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 800a36e:	f7f6 f943 	bl	80005f8 <__aeabi_dmul>
 800a372:	4602      	mov	r2, r0
 800a374:	460b      	mov	r3, r1
 800a376:	4690      	mov	r8, r2
 800a378:	4699      	mov	r9, r3
 800a37a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a37e:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a382:	f7f6 f939 	bl	80005f8 <__aeabi_dmul>
 800a386:	4602      	mov	r2, r0
 800a388:	460b      	mov	r3, r1
 800a38a:	4640      	mov	r0, r8
 800a38c:	4649      	mov	r1, r9
 800a38e:	f7f5 ff7b 	bl	8000288 <__aeabi_dsub>
 800a392:	4602      	mov	r2, r0
 800a394:	460b      	mov	r3, r1
 800a396:	4610      	mov	r0, r2
 800a398:	4619      	mov	r1, r3
 800a39a:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a39e:	f7f6 f92b 	bl	80005f8 <__aeabi_dmul>
 800a3a2:	4602      	mov	r2, r0
 800a3a4:	460b      	mov	r3, r1
 800a3a6:	4620      	mov	r0, r4
 800a3a8:	4629      	mov	r1, r5
 800a3aa:	f7f5 ff6d 	bl	8000288 <__aeabi_dsub>
 800a3ae:	4602      	mov	r2, r0
 800a3b0:	460b      	mov	r3, r1
 800a3b2:	6879      	ldr	r1, [r7, #4]
 800a3b4:	e9c1 2300 	strd	r2, r3, [r1]
 800a3b8:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a3bc:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a3c0:	f7f6 f91a 	bl	80005f8 <__aeabi_dmul>
 800a3c4:	4602      	mov	r2, r0
 800a3c6:	460b      	mov	r3, r1
 800a3c8:	4610      	mov	r0, r2
 800a3ca:	4619      	mov	r1, r3
 800a3cc:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a3d0:	f7f6 f912 	bl	80005f8 <__aeabi_dmul>
 800a3d4:	4602      	mov	r2, r0
 800a3d6:	460b      	mov	r3, r1
 800a3d8:	4610      	mov	r0, r2
 800a3da:	4619      	mov	r1, r3
 800a3dc:	a32e      	add	r3, pc, #184	; (adr r3, 800a498 <leg_conv+0x9c8>)
 800a3de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a3e2:	f7f6 f909 	bl	80005f8 <__aeabi_dmul>
 800a3e6:	4602      	mov	r2, r0
 800a3e8:	460b      	mov	r3, r1
 800a3ea:	4614      	mov	r4, r2
 800a3ec:	461d      	mov	r5, r3
 800a3ee:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a3f2:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a3f6:	f7f6 f8ff 	bl	80005f8 <__aeabi_dmul>
 800a3fa:	4602      	mov	r2, r0
 800a3fc:	460b      	mov	r3, r1
 800a3fe:	4610      	mov	r0, r2
 800a400:	4619      	mov	r1, r3
 800a402:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a406:	f7f6 f8f7 	bl	80005f8 <__aeabi_dmul>
 800a40a:	4602      	mov	r2, r0
 800a40c:	460b      	mov	r3, r1
 800a40e:	4610      	mov	r0, r2
 800a410:	4619      	mov	r1, r3
 800a412:	a321      	add	r3, pc, #132	; (adr r3, 800a498 <leg_conv+0x9c8>)
 800a414:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a418:	f7f6 f8ee 	bl	80005f8 <__aeabi_dmul>
 800a41c:	4602      	mov	r2, r0
 800a41e:	460b      	mov	r3, r1
 800a420:	4620      	mov	r0, r4
 800a422:	4629      	mov	r1, r5
 800a424:	f7f5 ff30 	bl	8000288 <__aeabi_dsub>
 800a428:	4602      	mov	r2, r0
 800a42a:	460b      	mov	r3, r1
 800a42c:	4610      	mov	r0, r2
 800a42e:	4619      	mov	r1, r3
 800a430:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800a434:	f7f6 f8e0 	bl	80005f8 <__aeabi_dmul>
 800a438:	4602      	mov	r2, r0
 800a43a:	460b      	mov	r3, r1
 800a43c:	4610      	mov	r0, r2
 800a43e:	4619      	mov	r1, r3
 800a440:	f04f 0200 	mov.w	r2, #0
 800a444:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a448:	f7f6 fa00 	bl	800084c <__aeabi_ddiv>
 800a44c:	4602      	mov	r2, r0
 800a44e:	460b      	mov	r3, r1
 800a450:	4690      	mov	r8, r2
 800a452:	4699      	mov	r9, r3
 800a454:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a458:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800a45c:	f7f6 f8cc 	bl	80005f8 <__aeabi_dmul>
 800a460:	4602      	mov	r2, r0
 800a462:	460b      	mov	r3, r1
 800a464:	4610      	mov	r0, r2
 800a466:	4619      	mov	r1, r3
 800a468:	a309      	add	r3, pc, #36	; (adr r3, 800a490 <leg_conv+0x9c0>)
 800a46a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a46e:	f7f6 f8c3 	bl	80005f8 <__aeabi_dmul>
 800a472:	4602      	mov	r2, r0
 800a474:	460b      	mov	r3, r1
 800a476:	f04f 0000 	mov.w	r0, #0
 800a47a:	f04f 0100 	mov.w	r1, #0
 800a47e:	f7f5 ff03 	bl	8000288 <__aeabi_dsub>
 800a482:	4602      	mov	r2, r0
 800a484:	460b      	mov	r3, r1
 800a486:	4610      	mov	r0, r2
 800a488:	4619      	mov	r1, r3
 800a48a:	e013      	b.n	800a4b4 <leg_conv+0x9e4>
 800a48c:	f3af 8000 	nop.w
 800a490:	33333333 	.word	0x33333333
 800a494:	3fd33333 	.word	0x3fd33333
 800a498:	33333333 	.word	0x33333333
 800a49c:	3fe33333 	.word	0x3fe33333
 800a4a0:	3ff00000 	.word	0x3ff00000
 800a4a4:	33333333 	.word	0x33333333
 800a4a8:	3fc33333 	.word	0x3fc33333
 800a4ac:	5532617c 	.word	0x5532617c
 800a4b0:	3fa92a30 	.word	0x3fa92a30
 800a4b4:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800a4b8:	f7f6 f89e 	bl	80005f8 <__aeabi_dmul>
 800a4bc:	4602      	mov	r2, r0
 800a4be:	460b      	mov	r3, r1
 800a4c0:	4614      	mov	r4, r2
 800a4c2:	461d      	mov	r5, r3
 800a4c4:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a4c8:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800a4cc:	f7f6 f894 	bl	80005f8 <__aeabi_dmul>
 800a4d0:	4602      	mov	r2, r0
 800a4d2:	460b      	mov	r3, r1
 800a4d4:	4610      	mov	r0, r2
 800a4d6:	4619      	mov	r1, r3
 800a4d8:	a319      	add	r3, pc, #100	; (adr r3, 800a540 <leg_conv+0xa70>)
 800a4da:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4de:	f7f6 f88b 	bl	80005f8 <__aeabi_dmul>
 800a4e2:	4602      	mov	r2, r0
 800a4e4:	460b      	mov	r3, r1
 800a4e6:	4610      	mov	r0, r2
 800a4e8:	4619      	mov	r1, r3
 800a4ea:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a4ee:	f7f6 f883 	bl	80005f8 <__aeabi_dmul>
 800a4f2:	4602      	mov	r2, r0
 800a4f4:	460b      	mov	r3, r1
 800a4f6:	4620      	mov	r0, r4
 800a4f8:	4629      	mov	r1, r5
 800a4fa:	f7f5 fec7 	bl	800028c <__adddf3>
 800a4fe:	4602      	mov	r2, r0
 800a500:	460b      	mov	r3, r1
 800a502:	4610      	mov	r0, r2
 800a504:	4619      	mov	r1, r3
 800a506:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a50a:	f7f6 f875 	bl	80005f8 <__aeabi_dmul>
 800a50e:	4602      	mov	r2, r0
 800a510:	460b      	mov	r3, r1
 800a512:	4610      	mov	r0, r2
 800a514:	4619      	mov	r1, r3
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	f103 0408 	add.w	r4, r3, #8
 800a51c:	4602      	mov	r2, r0
 800a51e:	460b      	mov	r3, r1
 800a520:	4640      	mov	r0, r8
 800a522:	4649      	mov	r1, r9
 800a524:	f7f5 feb2 	bl	800028c <__adddf3>
 800a528:	4602      	mov	r2, r0
 800a52a:	460b      	mov	r3, r1
 800a52c:	e9c4 2300 	strd	r2, r3, [r4]
 800a530:	bf00      	nop
 800a532:	37e8      	adds	r7, #232	; 0xe8
 800a534:	46bd      	mov	sp, r7
 800a536:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800a53a:	bf00      	nop
 800a53c:	f3af 8000 	nop.w
 800a540:	33333333 	.word	0x33333333
 800a544:	3fd33333 	.word	0x3fd33333

0800a548 <leg_spd>:
 800a548:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800a54c:	b0be      	sub	sp, #248	; 0xf8
 800a54e:	af00      	add	r7, sp, #0
 800a550:	ed87 0b0c 	vstr	d0, [r7, #48]	; 0x30
 800a554:	ed87 1b0a 	vstr	d1, [r7, #40]	; 0x28
 800a558:	ed87 2b08 	vstr	d2, [r7, #32]
 800a55c:	ed87 3b06 	vstr	d3, [r7, #24]
 800a560:	6178      	str	r0, [r7, #20]
 800a562:	ed97 0b08 	vldr	d0, [r7, #32]
 800a566:	f019 fe6b 	bl	8024240 <cos>
 800a56a:	ed87 0b3c 	vstr	d0, [r7, #240]	; 0xf0
 800a56e:	ed97 0b06 	vldr	d0, [r7, #24]
 800a572:	f019 fe65 	bl	8024240 <cos>
 800a576:	ed87 0b3a 	vstr	d0, [r7, #232]	; 0xe8
 800a57a:	ed97 0b08 	vldr	d0, [r7, #32]
 800a57e:	f019 ff3f 	bl	8024400 <sin>
 800a582:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
 800a586:	ed97 0b06 	vldr	d0, [r7, #24]
 800a58a:	f019 ff39 	bl	8024400 <sin>
 800a58e:	ed87 0b36 	vstr	d0, [r7, #216]	; 0xd8
 800a592:	f20f 5350 	addw	r3, pc, #1360	; 0x550
 800a596:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a59a:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a59e:	f7f6 f82b 	bl	80005f8 <__aeabi_dmul>
 800a5a2:	4602      	mov	r2, r0
 800a5a4:	460b      	mov	r3, r1
 800a5a6:	e9c7 2334 	strd	r2, r3, [r7, #208]	; 0xd0
 800a5aa:	f20f 5338 	addw	r3, pc, #1336	; 0x538
 800a5ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5b2:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a5b6:	f7f6 f81f 	bl	80005f8 <__aeabi_dmul>
 800a5ba:	4602      	mov	r2, r0
 800a5bc:	460b      	mov	r3, r1
 800a5be:	e9c7 2332 	strd	r2, r3, [r7, #200]	; 0xc8
 800a5c2:	f20f 5328 	addw	r3, pc, #1320	; 0x528
 800a5c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5ca:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a5ce:	f7f6 f813 	bl	80005f8 <__aeabi_dmul>
 800a5d2:	4602      	mov	r2, r0
 800a5d4:	460b      	mov	r3, r1
 800a5d6:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 800a5da:	f20f 5310 	addw	r3, pc, #1296	; 0x510
 800a5de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5e2:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a5e6:	f7f6 f807 	bl	80005f8 <__aeabi_dmul>
 800a5ea:	4602      	mov	r2, r0
 800a5ec:	460b      	mov	r3, r1
 800a5ee:	e9c7 232e 	strd	r2, r3, [r7, #184]	; 0xb8
 800a5f2:	f20f 43f8 	addw	r3, pc, #1272	; 0x4f8
 800a5f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5fa:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a5fe:	f7f5 fffb 	bl	80005f8 <__aeabi_dmul>
 800a602:	4602      	mov	r2, r0
 800a604:	460b      	mov	r3, r1
 800a606:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 800a60a:	f20f 43e0 	addw	r3, pc, #1248	; 0x4e0
 800a60e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a612:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a616:	f7f5 ffef 	bl	80005f8 <__aeabi_dmul>
 800a61a:	4602      	mov	r2, r0
 800a61c:	460b      	mov	r3, r1
 800a61e:	e9c7 232a 	strd	r2, r3, [r7, #168]	; 0xa8
 800a622:	f20f 43c0 	addw	r3, pc, #1216	; 0x4c0
 800a626:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a62a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a62e:	f7f5 ffe3 	bl	80005f8 <__aeabi_dmul>
 800a632:	4602      	mov	r2, r0
 800a634:	460b      	mov	r3, r1
 800a636:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800a63a:	f7f5 fe25 	bl	8000288 <__aeabi_dsub>
 800a63e:	4602      	mov	r2, r0
 800a640:	460b      	mov	r3, r1
 800a642:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a646:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	; 0xa8
 800a64a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800a64e:	f7f5 fe1b 	bl	8000288 <__aeabi_dsub>
 800a652:	4602      	mov	r2, r0
 800a654:	460b      	mov	r3, r1
 800a656:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
 800a65a:	f20f 4388 	addw	r3, pc, #1160	; 0x488
 800a65e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a662:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a666:	f7f5 ffc7 	bl	80005f8 <__aeabi_dmul>
 800a66a:	4602      	mov	r2, r0
 800a66c:	460b      	mov	r3, r1
 800a66e:	4610      	mov	r0, r2
 800a670:	4619      	mov	r1, r3
 800a672:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800a676:	f7f5 fe07 	bl	8000288 <__aeabi_dsub>
 800a67a:	4602      	mov	r2, r0
 800a67c:	460b      	mov	r3, r1
 800a67e:	4610      	mov	r0, r2
 800a680:	4619      	mov	r1, r3
 800a682:	f20f 4370 	addw	r3, pc, #1136	; 0x470
 800a686:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a68a:	f7f5 fdff 	bl	800028c <__adddf3>
 800a68e:	4602      	mov	r2, r0
 800a690:	460b      	mov	r3, r1
 800a692:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a696:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800a69a:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800a69e:	f7f5 fdf3 	bl	8000288 <__aeabi_dsub>
 800a6a2:	4602      	mov	r2, r0
 800a6a4:	460b      	mov	r3, r1
 800a6a6:	4610      	mov	r0, r2
 800a6a8:	4619      	mov	r1, r3
 800a6aa:	f20f 4350 	addw	r3, pc, #1104	; 0x450
 800a6ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6b2:	f7f5 fdeb 	bl	800028c <__adddf3>
 800a6b6:	4602      	mov	r2, r0
 800a6b8:	460b      	mov	r3, r1
 800a6ba:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88
 800a6be:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a6c2:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800a6c6:	f7f5 ff97 	bl	80005f8 <__aeabi_dmul>
 800a6ca:	4602      	mov	r2, r0
 800a6cc:	460b      	mov	r3, r1
 800a6ce:	4614      	mov	r4, r2
 800a6d0:	461d      	mov	r5, r3
 800a6d2:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a6d6:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a6da:	f7f5 ff8d 	bl	80005f8 <__aeabi_dmul>
 800a6de:	4602      	mov	r2, r0
 800a6e0:	460b      	mov	r3, r1
 800a6e2:	4620      	mov	r0, r4
 800a6e4:	4629      	mov	r1, r5
 800a6e6:	f7f5 fdd1 	bl	800028c <__adddf3>
 800a6ea:	4602      	mov	r2, r0
 800a6ec:	460b      	mov	r3, r1
 800a6ee:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 800a6f2:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a6f6:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a6fa:	f7f5 ff7d 	bl	80005f8 <__aeabi_dmul>
 800a6fe:	4602      	mov	r2, r0
 800a700:	460b      	mov	r3, r1
 800a702:	4610      	mov	r0, r2
 800a704:	4619      	mov	r1, r3
 800a706:	a3ff      	add	r3, pc, #1020	; (adr r3, 800ab04 <leg_spd+0x5bc>)
 800a708:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a70c:	f7f5 ff74 	bl	80005f8 <__aeabi_dmul>
 800a710:	4602      	mov	r2, r0
 800a712:	460b      	mov	r3, r1
 800a714:	4614      	mov	r4, r2
 800a716:	461d      	mov	r5, r3
 800a718:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a71c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a720:	f7f5 ff6a 	bl	80005f8 <__aeabi_dmul>
 800a724:	4602      	mov	r2, r0
 800a726:	460b      	mov	r3, r1
 800a728:	4610      	mov	r0, r2
 800a72a:	4619      	mov	r1, r3
 800a72c:	a3f5      	add	r3, pc, #980	; (adr r3, 800ab04 <leg_spd+0x5bc>)
 800a72e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a732:	f7f5 ff61 	bl	80005f8 <__aeabi_dmul>
 800a736:	4602      	mov	r2, r0
 800a738:	460b      	mov	r3, r1
 800a73a:	4620      	mov	r0, r4
 800a73c:	4629      	mov	r1, r5
 800a73e:	f7f5 fda5 	bl	800028c <__adddf3>
 800a742:	4602      	mov	r2, r0
 800a744:	460b      	mov	r3, r1
 800a746:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 800a74a:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800a74e:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800a752:	f7f5 ff51 	bl	80005f8 <__aeabi_dmul>
 800a756:	4602      	mov	r2, r0
 800a758:	460b      	mov	r3, r1
 800a75a:	4610      	mov	r0, r2
 800a75c:	4619      	mov	r1, r3
 800a75e:	a3e9      	add	r3, pc, #932	; (adr r3, 800ab04 <leg_spd+0x5bc>)
 800a760:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a764:	f7f5 ff48 	bl	80005f8 <__aeabi_dmul>
 800a768:	4602      	mov	r2, r0
 800a76a:	460b      	mov	r3, r1
 800a76c:	4614      	mov	r4, r2
 800a76e:	461d      	mov	r5, r3
 800a770:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a774:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800a778:	f7f5 ff3e 	bl	80005f8 <__aeabi_dmul>
 800a77c:	4602      	mov	r2, r0
 800a77e:	460b      	mov	r3, r1
 800a780:	4610      	mov	r0, r2
 800a782:	4619      	mov	r1, r3
 800a784:	a3df      	add	r3, pc, #892	; (adr r3, 800ab04 <leg_spd+0x5bc>)
 800a786:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a78a:	f7f5 ff35 	bl	80005f8 <__aeabi_dmul>
 800a78e:	4602      	mov	r2, r0
 800a790:	460b      	mov	r3, r1
 800a792:	4620      	mov	r0, r4
 800a794:	4629      	mov	r1, r5
 800a796:	f7f5 fd79 	bl	800028c <__adddf3>
 800a79a:	4602      	mov	r2, r0
 800a79c:	460b      	mov	r3, r1
 800a79e:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 800a7a2:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a7a6:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 800a7aa:	f7f5 fd6f 	bl	800028c <__adddf3>
 800a7ae:	4602      	mov	r2, r0
 800a7b0:	460b      	mov	r3, r1
 800a7b2:	f04f 0000 	mov.w	r0, #0
 800a7b6:	49ca      	ldr	r1, [pc, #808]	; (800aae0 <leg_spd+0x598>)
 800a7b8:	f7f6 f848 	bl	800084c <__aeabi_ddiv>
 800a7bc:	4602      	mov	r2, r0
 800a7be:	460b      	mov	r3, r1
 800a7c0:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 800a7c4:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a7c8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a7cc:	f7f5 ff14 	bl	80005f8 <__aeabi_dmul>
 800a7d0:	4602      	mov	r2, r0
 800a7d2:	460b      	mov	r3, r1
 800a7d4:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800a7d8:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800a7dc:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800a7e0:	f7f5 ff0a 	bl	80005f8 <__aeabi_dmul>
 800a7e4:	4602      	mov	r2, r0
 800a7e6:	460b      	mov	r3, r1
 800a7e8:	4614      	mov	r4, r2
 800a7ea:	461d      	mov	r5, r3
 800a7ec:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800a7f0:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 800a7f4:	f7f5 ff00 	bl	80005f8 <__aeabi_dmul>
 800a7f8:	4602      	mov	r2, r0
 800a7fa:	460b      	mov	r3, r1
 800a7fc:	4620      	mov	r0, r4
 800a7fe:	4629      	mov	r1, r5
 800a800:	f7f5 fd44 	bl	800028c <__adddf3>
 800a804:	4602      	mov	r2, r0
 800a806:	460b      	mov	r3, r1
 800a808:	4614      	mov	r4, r2
 800a80a:	461d      	mov	r5, r3
 800a80c:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 800a810:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a814:	f7f5 fef0 	bl	80005f8 <__aeabi_dmul>
 800a818:	4602      	mov	r2, r0
 800a81a:	460b      	mov	r3, r1
 800a81c:	4620      	mov	r0, r4
 800a81e:	4629      	mov	r1, r5
 800a820:	f7f5 fd32 	bl	8000288 <__aeabi_dsub>
 800a824:	4602      	mov	r2, r0
 800a826:	460b      	mov	r3, r1
 800a828:	ec43 2b17 	vmov	d7, r2, r3
 800a82c:	eeb0 0a47 	vmov.f32	s0, s14
 800a830:	eef0 0a67 	vmov.f32	s1, s15
 800a834:	f019 fee2 	bl	80245fc <sqrt>
 800a838:	ed87 0b16 	vstr	d0, [r7, #88]	; 0x58
 800a83c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800a840:	f04f 0000 	mov.w	r0, #0
 800a844:	49a6      	ldr	r1, [pc, #664]	; (800aae0 <leg_spd+0x598>)
 800a846:	f7f6 f801 	bl	800084c <__aeabi_ddiv>
 800a84a:	4602      	mov	r2, r0
 800a84c:	460b      	mov	r3, r1
 800a84e:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800a852:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800a856:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 800a85a:	f7f5 fd15 	bl	8000288 <__aeabi_dsub>
 800a85e:	4602      	mov	r2, r0
 800a860:	460b      	mov	r3, r1
 800a862:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800a866:	f7f5 fd11 	bl	800028c <__adddf3>
 800a86a:	4602      	mov	r2, r0
 800a86c:	460b      	mov	r3, r1
 800a86e:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800a872:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a876:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a87a:	f7f5 febd 	bl	80005f8 <__aeabi_dmul>
 800a87e:	4602      	mov	r2, r0
 800a880:	460b      	mov	r3, r1
 800a882:	ec43 2b17 	vmov	d7, r2, r3
 800a886:	eeb0 0a47 	vmov.f32	s0, s14
 800a88a:	eef0 0a67 	vmov.f32	s1, s15
 800a88e:	f019 fb37 	bl	8023f00 <atan>
 800a892:	ec51 0b10 	vmov	r0, r1, d0
 800a896:	4602      	mov	r2, r0
 800a898:	460b      	mov	r3, r1
 800a89a:	f7f5 fcf7 	bl	800028c <__adddf3>
 800a89e:	4602      	mov	r2, r0
 800a8a0:	460b      	mov	r3, r1
 800a8a2:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800a8a6:	ed97 0b28 	vldr	d0, [r7, #160]	; 0xa0
 800a8aa:	f019 fcc9 	bl	8024240 <cos>
 800a8ae:	ed87 0b12 	vstr	d0, [r7, #72]	; 0x48
 800a8b2:	ed97 0b28 	vldr	d0, [r7, #160]	; 0xa0
 800a8b6:	f019 fda3 	bl	8024400 <sin>
 800a8ba:	ed87 0b10 	vstr	d0, [r7, #64]	; 0x40
 800a8be:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a8c2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800a8c6:	f7f5 fe97 	bl	80005f8 <__aeabi_dmul>
 800a8ca:	4602      	mov	r2, r0
 800a8cc:	460b      	mov	r3, r1
 800a8ce:	4610      	mov	r0, r2
 800a8d0:	4619      	mov	r1, r3
 800a8d2:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a8d6:	f7f5 fe8f 	bl	80005f8 <__aeabi_dmul>
 800a8da:	4602      	mov	r2, r0
 800a8dc:	460b      	mov	r3, r1
 800a8de:	4610      	mov	r0, r2
 800a8e0:	4619      	mov	r1, r3
 800a8e2:	f04f 0200 	mov.w	r2, #0
 800a8e6:	4b7e      	ldr	r3, [pc, #504]	; (800aae0 <leg_spd+0x598>)
 800a8e8:	f7f5 fcd0 	bl	800028c <__adddf3>
 800a8ec:	4602      	mov	r2, r0
 800a8ee:	460b      	mov	r3, r1
 800a8f0:	f04f 0000 	mov.w	r0, #0
 800a8f4:	497a      	ldr	r1, [pc, #488]	; (800aae0 <leg_spd+0x598>)
 800a8f6:	f7f5 ffa9 	bl	800084c <__aeabi_ddiv>
 800a8fa:	4602      	mov	r2, r0
 800a8fc:	460b      	mov	r3, r1
 800a8fe:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 800a902:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800a906:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800a90a:	f7f5 fcbf 	bl	800028c <__adddf3>
 800a90e:	4602      	mov	r2, r0
 800a910:	460b      	mov	r3, r1
 800a912:	4610      	mov	r0, r2
 800a914:	4619      	mov	r1, r3
 800a916:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800a91a:	f7f5 fe6d 	bl	80005f8 <__aeabi_dmul>
 800a91e:	4602      	mov	r2, r0
 800a920:	460b      	mov	r3, r1
 800a922:	4610      	mov	r0, r2
 800a924:	4619      	mov	r1, r3
 800a926:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800a92a:	f7f5 fe65 	bl	80005f8 <__aeabi_dmul>
 800a92e:	4602      	mov	r2, r0
 800a930:	460b      	mov	r3, r1
 800a932:	4690      	mov	r8, r2
 800a934:	4699      	mov	r9, r3
 800a936:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800a93a:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800a93e:	f7f5 fe5b 	bl	80005f8 <__aeabi_dmul>
 800a942:	4602      	mov	r2, r0
 800a944:	460b      	mov	r3, r1
 800a946:	4610      	mov	r0, r2
 800a948:	4619      	mov	r1, r3
 800a94a:	a363      	add	r3, pc, #396	; (adr r3, 800aad8 <leg_spd+0x590>)
 800a94c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a950:	f7f5 fe52 	bl	80005f8 <__aeabi_dmul>
 800a954:	4602      	mov	r2, r0
 800a956:	460b      	mov	r3, r1
 800a958:	4614      	mov	r4, r2
 800a95a:	461d      	mov	r5, r3
 800a95c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800a960:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800a964:	f7f5 fe48 	bl	80005f8 <__aeabi_dmul>
 800a968:	4602      	mov	r2, r0
 800a96a:	460b      	mov	r3, r1
 800a96c:	4610      	mov	r0, r2
 800a96e:	4619      	mov	r1, r3
 800a970:	a359      	add	r3, pc, #356	; (adr r3, 800aad8 <leg_spd+0x590>)
 800a972:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a976:	f7f5 fe3f 	bl	80005f8 <__aeabi_dmul>
 800a97a:	4602      	mov	r2, r0
 800a97c:	460b      	mov	r3, r1
 800a97e:	4620      	mov	r0, r4
 800a980:	4629      	mov	r1, r5
 800a982:	f7f5 fc83 	bl	800028c <__adddf3>
 800a986:	4602      	mov	r2, r0
 800a988:	460b      	mov	r3, r1
 800a98a:	4614      	mov	r4, r2
 800a98c:	461d      	mov	r5, r3
 800a98e:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800a992:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a996:	f7f5 fe2f 	bl	80005f8 <__aeabi_dmul>
 800a99a:	4602      	mov	r2, r0
 800a99c:	460b      	mov	r3, r1
 800a99e:	4610      	mov	r0, r2
 800a9a0:	4619      	mov	r1, r3
 800a9a2:	4602      	mov	r2, r0
 800a9a4:	460b      	mov	r3, r1
 800a9a6:	f7f5 fc71 	bl	800028c <__adddf3>
 800a9aa:	4602      	mov	r2, r0
 800a9ac:	460b      	mov	r3, r1
 800a9ae:	4620      	mov	r0, r4
 800a9b0:	4629      	mov	r1, r5
 800a9b2:	f7f5 fc69 	bl	8000288 <__aeabi_dsub>
 800a9b6:	4602      	mov	r2, r0
 800a9b8:	460b      	mov	r3, r1
 800a9ba:	4610      	mov	r0, r2
 800a9bc:	4619      	mov	r1, r3
 800a9be:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800a9c2:	f7f5 fe19 	bl	80005f8 <__aeabi_dmul>
 800a9c6:	4602      	mov	r2, r0
 800a9c8:	460b      	mov	r3, r1
 800a9ca:	4610      	mov	r0, r2
 800a9cc:	4619      	mov	r1, r3
 800a9ce:	f04f 0200 	mov.w	r2, #0
 800a9d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a9d6:	f7f5 ff39 	bl	800084c <__aeabi_ddiv>
 800a9da:	4602      	mov	r2, r0
 800a9dc:	460b      	mov	r3, r1
 800a9de:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800a9e2:	f7f5 fc51 	bl	8000288 <__aeabi_dsub>
 800a9e6:	4602      	mov	r2, r0
 800a9e8:	460b      	mov	r3, r1
 800a9ea:	4610      	mov	r0, r2
 800a9ec:	4619      	mov	r1, r3
 800a9ee:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800a9f2:	f7f5 fe01 	bl	80005f8 <__aeabi_dmul>
 800a9f6:	4602      	mov	r2, r0
 800a9f8:	460b      	mov	r3, r1
 800a9fa:	4640      	mov	r0, r8
 800a9fc:	4649      	mov	r1, r9
 800a9fe:	f7f5 fc45 	bl	800028c <__adddf3>
 800aa02:	4602      	mov	r2, r0
 800aa04:	460b      	mov	r3, r1
 800aa06:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 800aa0a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800aa0e:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	; 0xa8
 800aa12:	f7f5 fc3b 	bl	800028c <__adddf3>
 800aa16:	4602      	mov	r2, r0
 800aa18:	460b      	mov	r3, r1
 800aa1a:	4610      	mov	r0, r2
 800aa1c:	4619      	mov	r1, r3
 800aa1e:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800aa22:	f7f5 fde9 	bl	80005f8 <__aeabi_dmul>
 800aa26:	4602      	mov	r2, r0
 800aa28:	460b      	mov	r3, r1
 800aa2a:	4610      	mov	r0, r2
 800aa2c:	4619      	mov	r1, r3
 800aa2e:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800aa32:	f7f5 fde1 	bl	80005f8 <__aeabi_dmul>
 800aa36:	4602      	mov	r2, r0
 800aa38:	460b      	mov	r3, r1
 800aa3a:	4690      	mov	r8, r2
 800aa3c:	4699      	mov	r9, r3
 800aa3e:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800aa42:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 800aa46:	f7f5 fdd7 	bl	80005f8 <__aeabi_dmul>
 800aa4a:	4602      	mov	r2, r0
 800aa4c:	460b      	mov	r3, r1
 800aa4e:	4610      	mov	r0, r2
 800aa50:	4619      	mov	r1, r3
 800aa52:	a321      	add	r3, pc, #132	; (adr r3, 800aad8 <leg_spd+0x590>)
 800aa54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa58:	f7f5 fdce 	bl	80005f8 <__aeabi_dmul>
 800aa5c:	4602      	mov	r2, r0
 800aa5e:	460b      	mov	r3, r1
 800aa60:	4614      	mov	r4, r2
 800aa62:	461d      	mov	r5, r3
 800aa64:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800aa68:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	; 0xd8
 800aa6c:	f7f5 fdc4 	bl	80005f8 <__aeabi_dmul>
 800aa70:	4602      	mov	r2, r0
 800aa72:	460b      	mov	r3, r1
 800aa74:	4610      	mov	r0, r2
 800aa76:	4619      	mov	r1, r3
 800aa78:	a317      	add	r3, pc, #92	; (adr r3, 800aad8 <leg_spd+0x590>)
 800aa7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa7e:	f7f5 fdbb 	bl	80005f8 <__aeabi_dmul>
 800aa82:	4602      	mov	r2, r0
 800aa84:	460b      	mov	r3, r1
 800aa86:	4620      	mov	r0, r4
 800aa88:	4629      	mov	r1, r5
 800aa8a:	f7f5 fbff 	bl	800028c <__adddf3>
 800aa8e:	4602      	mov	r2, r0
 800aa90:	460b      	mov	r3, r1
 800aa92:	4614      	mov	r4, r2
 800aa94:	461d      	mov	r5, r3
 800aa96:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800aa9a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800aa9e:	f7f5 fdab 	bl	80005f8 <__aeabi_dmul>
 800aaa2:	4602      	mov	r2, r0
 800aaa4:	460b      	mov	r3, r1
 800aaa6:	4610      	mov	r0, r2
 800aaa8:	4619      	mov	r1, r3
 800aaaa:	4602      	mov	r2, r0
 800aaac:	460b      	mov	r3, r1
 800aaae:	f7f5 fbed 	bl	800028c <__adddf3>
 800aab2:	4602      	mov	r2, r0
 800aab4:	460b      	mov	r3, r1
 800aab6:	4620      	mov	r0, r4
 800aab8:	4629      	mov	r1, r5
 800aaba:	f7f5 fbe5 	bl	8000288 <__aeabi_dsub>
 800aabe:	4602      	mov	r2, r0
 800aac0:	460b      	mov	r3, r1
 800aac2:	4610      	mov	r0, r2
 800aac4:	4619      	mov	r1, r3
 800aac6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800aaca:	f7f5 fd95 	bl	80005f8 <__aeabi_dmul>
 800aace:	4602      	mov	r2, r0
 800aad0:	460b      	mov	r3, r1
 800aad2:	e01b      	b.n	800ab0c <leg_spd+0x5c4>
 800aad4:	f3af 8000 	nop.w
 800aad8:	bc6a7efa 	.word	0xbc6a7efa
 800aadc:	3fa89374 	.word	0x3fa89374
 800aae0:	3ff00000 	.word	0x3ff00000
 800aae4:	47ae147b 	.word	0x47ae147b
 800aae8:	3fb47ae1 	.word	0x3fb47ae1
 800aaec:	bc6a7efa 	.word	0xbc6a7efa
 800aaf0:	3f989374 	.word	0x3f989374
 800aaf4:	5532617c 	.word	0x5532617c
 800aaf8:	3fb92a30 	.word	0x3fb92a30
 800aafc:	663c74fb 	.word	0x663c74fb
 800ab00:	3f9e32a0 	.word	0x3f9e32a0
 800ab04:	47ae147b 	.word	0x47ae147b
 800ab08:	3fc47ae1 	.word	0x3fc47ae1
 800ab0c:	4610      	mov	r0, r2
 800ab0e:	4619      	mov	r1, r3
 800ab10:	f04f 0200 	mov.w	r2, #0
 800ab14:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ab18:	f7f5 fe98 	bl	800084c <__aeabi_ddiv>
 800ab1c:	4602      	mov	r2, r0
 800ab1e:	460b      	mov	r3, r1
 800ab20:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 800ab24:	f7f5 fbb0 	bl	8000288 <__aeabi_dsub>
 800ab28:	4602      	mov	r2, r0
 800ab2a:	460b      	mov	r3, r1
 800ab2c:	4610      	mov	r0, r2
 800ab2e:	4619      	mov	r1, r3
 800ab30:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800ab34:	f7f5 fd60 	bl	80005f8 <__aeabi_dmul>
 800ab38:	4602      	mov	r2, r0
 800ab3a:	460b      	mov	r3, r1
 800ab3c:	4640      	mov	r0, r8
 800ab3e:	4649      	mov	r1, r9
 800ab40:	f7f5 fba4 	bl	800028c <__adddf3>
 800ab44:	4602      	mov	r2, r0
 800ab46:	460b      	mov	r3, r1
 800ab48:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800ab4c:	f20f 432c 	addw	r3, pc, #1068	; 0x42c
 800ab50:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab54:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800ab58:	f7f5 fd4e 	bl	80005f8 <__aeabi_dmul>
 800ab5c:	4602      	mov	r2, r0
 800ab5e:	460b      	mov	r3, r1
 800ab60:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800ab64:	f7f5 fb92 	bl	800028c <__adddf3>
 800ab68:	4602      	mov	r2, r0
 800ab6a:	460b      	mov	r3, r1
 800ab6c:	e9c7 2338 	strd	r2, r3, [r7, #224]	; 0xe0
 800ab70:	f20f 4308 	addw	r3, pc, #1032	; 0x408
 800ab74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab78:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800ab7c:	f7f5 fd3c 	bl	80005f8 <__aeabi_dmul>
 800ab80:	4602      	mov	r2, r0
 800ab82:	460b      	mov	r3, r1
 800ab84:	4610      	mov	r0, r2
 800ab86:	4619      	mov	r1, r3
 800ab88:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 800ab8c:	f7f5 fb7e 	bl	800028c <__adddf3>
 800ab90:	4602      	mov	r2, r0
 800ab92:	460b      	mov	r3, r1
 800ab94:	4610      	mov	r0, r2
 800ab96:	4619      	mov	r1, r3
 800ab98:	a3fa      	add	r3, pc, #1000	; (adr r3, 800af84 <leg_spd+0xa3c>)
 800ab9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab9e:	f7f5 fb73 	bl	8000288 <__aeabi_dsub>
 800aba2:	4602      	mov	r2, r0
 800aba4:	460b      	mov	r3, r1
 800aba6:	e9c7 2330 	strd	r2, r3, [r7, #192]	; 0xc0
 800abaa:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800abae:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800abb2:	f7f5 fd21 	bl	80005f8 <__aeabi_dmul>
 800abb6:	4602      	mov	r2, r0
 800abb8:	460b      	mov	r3, r1
 800abba:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800abbe:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800abc2:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800abc6:	f7f5 fd17 	bl	80005f8 <__aeabi_dmul>
 800abca:	4602      	mov	r2, r0
 800abcc:	460b      	mov	r3, r1
 800abce:	e9c7 232c 	strd	r2, r3, [r7, #176]	; 0xb0
 800abd2:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800abd6:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800abda:	f7f5 fd0d 	bl	80005f8 <__aeabi_dmul>
 800abde:	4602      	mov	r2, r0
 800abe0:	460b      	mov	r3, r1
 800abe2:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
 800abe6:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800abea:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800abee:	f7f5 fd03 	bl	80005f8 <__aeabi_dmul>
 800abf2:	4602      	mov	r2, r0
 800abf4:	460b      	mov	r3, r1
 800abf6:	e9c7 233c 	strd	r2, r3, [r7, #240]	; 0xf0
 800abfa:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 800abfe:	60bb      	str	r3, [r7, #8]
 800ac00:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800ac04:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 800ac08:	60fb      	str	r3, [r7, #12]
 800ac0a:	a3dc      	add	r3, pc, #880	; (adr r3, 800af7c <leg_spd+0xa34>)
 800ac0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac10:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800ac14:	f7f5 fcf0 	bl	80005f8 <__aeabi_dmul>
 800ac18:	4602      	mov	r2, r0
 800ac1a:	460b      	mov	r3, r1
 800ac1c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ac20:	f7f5 fb32 	bl	8000288 <__aeabi_dsub>
 800ac24:	4602      	mov	r2, r0
 800ac26:	460b      	mov	r3, r1
 800ac28:	4610      	mov	r0, r2
 800ac2a:	4619      	mov	r1, r3
 800ac2c:	a3d5      	add	r3, pc, #852	; (adr r3, 800af84 <leg_spd+0xa3c>)
 800ac2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac32:	f7f5 fb2b 	bl	800028c <__adddf3>
 800ac36:	4602      	mov	r2, r0
 800ac38:	460b      	mov	r3, r1
 800ac3a:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800ac3e:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800ac42:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800ac46:	f7f5 fcd7 	bl	80005f8 <__aeabi_dmul>
 800ac4a:	4602      	mov	r2, r0
 800ac4c:	460b      	mov	r3, r1
 800ac4e:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800ac52:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800ac56:	f04f 0000 	mov.w	r0, #0
 800ac5a:	49c7      	ldr	r1, [pc, #796]	; (800af78 <leg_spd+0xa30>)
 800ac5c:	f7f5 fdf6 	bl	800084c <__aeabi_ddiv>
 800ac60:	4602      	mov	r2, r0
 800ac62:	460b      	mov	r3, r1
 800ac64:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 800ac68:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 800ac6c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ac70:	f7f5 fcc2 	bl	80005f8 <__aeabi_dmul>
 800ac74:	4602      	mov	r2, r0
 800ac76:	460b      	mov	r3, r1
 800ac78:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800ac7c:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800ac80:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800ac84:	f7f5 fcb8 	bl	80005f8 <__aeabi_dmul>
 800ac88:	4602      	mov	r2, r0
 800ac8a:	460b      	mov	r3, r1
 800ac8c:	4610      	mov	r0, r2
 800ac8e:	4619      	mov	r1, r3
 800ac90:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800ac94:	f7f5 fafa 	bl	800028c <__adddf3>
 800ac98:	4602      	mov	r2, r0
 800ac9a:	460b      	mov	r3, r1
 800ac9c:	ec43 2b17 	vmov	d7, r2, r3
 800aca0:	eeb0 0a47 	vmov.f32	s0, s14
 800aca4:	eef0 0a67 	vmov.f32	s1, s15
 800aca8:	f019 fca8 	bl	80245fc <sqrt>
 800acac:	ec53 2b10 	vmov	r2, r3, d0
 800acb0:	f04f 0000 	mov.w	r0, #0
 800acb4:	49b0      	ldr	r1, [pc, #704]	; (800af78 <leg_spd+0xa30>)
 800acb6:	f7f5 fdc9 	bl	800084c <__aeabi_ddiv>
 800acba:	4602      	mov	r2, r0
 800acbc:	460b      	mov	r3, r1
 800acbe:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800acc2:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800acc6:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800acca:	f7f5 fadf 	bl	800028c <__adddf3>
 800acce:	4602      	mov	r2, r0
 800acd0:	460b      	mov	r3, r1
 800acd2:	f04f 0000 	mov.w	r0, #0
 800acd6:	49a8      	ldr	r1, [pc, #672]	; (800af78 <leg_spd+0xa30>)
 800acd8:	f7f5 fdb8 	bl	800084c <__aeabi_ddiv>
 800acdc:	4602      	mov	r2, r0
 800acde:	460b      	mov	r3, r1
 800ace0:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 800ace4:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800ace8:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800acec:	f7f5 fc84 	bl	80005f8 <__aeabi_dmul>
 800acf0:	4602      	mov	r2, r0
 800acf2:	460b      	mov	r3, r1
 800acf4:	4610      	mov	r0, r2
 800acf6:	4619      	mov	r1, r3
 800acf8:	a39b      	add	r3, pc, #620	; (adr r3, 800af68 <leg_spd+0xa20>)
 800acfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800acfe:	f7f5 fc7b 	bl	80005f8 <__aeabi_dmul>
 800ad02:	4602      	mov	r2, r0
 800ad04:	460b      	mov	r3, r1
 800ad06:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	; 0xd0
 800ad0a:	f7f5 fabd 	bl	8000288 <__aeabi_dsub>
 800ad0e:	4602      	mov	r2, r0
 800ad10:	460b      	mov	r3, r1
 800ad12:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 800ad16:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 800ad1a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800ad1e:	f7f5 fc6b 	bl	80005f8 <__aeabi_dmul>
 800ad22:	4602      	mov	r2, r0
 800ad24:	460b      	mov	r3, r1
 800ad26:	4610      	mov	r0, r2
 800ad28:	4619      	mov	r1, r3
 800ad2a:	a38f      	add	r3, pc, #572	; (adr r3, 800af68 <leg_spd+0xa20>)
 800ad2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad30:	f7f5 fc62 	bl	80005f8 <__aeabi_dmul>
 800ad34:	4602      	mov	r2, r0
 800ad36:	460b      	mov	r3, r1
 800ad38:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800ad3c:	f7f5 faa4 	bl	8000288 <__aeabi_dsub>
 800ad40:	4602      	mov	r2, r0
 800ad42:	460b      	mov	r3, r1
 800ad44:	e9c7 2324 	strd	r2, r3, [r7, #144]	; 0x90
 800ad48:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800ad4c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800ad50:	f7f5 fc52 	bl	80005f8 <__aeabi_dmul>
 800ad54:	4602      	mov	r2, r0
 800ad56:	460b      	mov	r3, r1
 800ad58:	4614      	mov	r4, r2
 800ad5a:	461d      	mov	r5, r3
 800ad5c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800ad60:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ad64:	f7f5 fc48 	bl	80005f8 <__aeabi_dmul>
 800ad68:	4602      	mov	r2, r0
 800ad6a:	460b      	mov	r3, r1
 800ad6c:	4610      	mov	r0, r2
 800ad6e:	4619      	mov	r1, r3
 800ad70:	a37f      	add	r3, pc, #508	; (adr r3, 800af70 <leg_spd+0xa28>)
 800ad72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad76:	f7f5 fc3f 	bl	80005f8 <__aeabi_dmul>
 800ad7a:	4602      	mov	r2, r0
 800ad7c:	460b      	mov	r3, r1
 800ad7e:	4690      	mov	r8, r2
 800ad80:	4699      	mov	r9, r3
 800ad82:	e9d7 233c 	ldrd	r2, r3, [r7, #240]	; 0xf0
 800ad86:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800ad8a:	f7f5 fc35 	bl	80005f8 <__aeabi_dmul>
 800ad8e:	4602      	mov	r2, r0
 800ad90:	460b      	mov	r3, r1
 800ad92:	4610      	mov	r0, r2
 800ad94:	4619      	mov	r1, r3
 800ad96:	a376      	add	r3, pc, #472	; (adr r3, 800af70 <leg_spd+0xa28>)
 800ad98:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad9c:	f7f5 fc2c 	bl	80005f8 <__aeabi_dmul>
 800ada0:	4602      	mov	r2, r0
 800ada2:	460b      	mov	r3, r1
 800ada4:	4640      	mov	r0, r8
 800ada6:	4649      	mov	r1, r9
 800ada8:	f7f5 fa6e 	bl	8000288 <__aeabi_dsub>
 800adac:	4602      	mov	r2, r0
 800adae:	460b      	mov	r3, r1
 800adb0:	4620      	mov	r0, r4
 800adb2:	4629      	mov	r1, r5
 800adb4:	f7f5 fc20 	bl	80005f8 <__aeabi_dmul>
 800adb8:	4602      	mov	r2, r0
 800adba:	460b      	mov	r3, r1
 800adbc:	4610      	mov	r0, r2
 800adbe:	4619      	mov	r1, r3
 800adc0:	f04f 0200 	mov.w	r2, #0
 800adc4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800adc8:	f7f5 fd40 	bl	800084c <__aeabi_ddiv>
 800adcc:	4602      	mov	r2, r0
 800adce:	460b      	mov	r3, r1
 800add0:	4614      	mov	r4, r2
 800add2:	461d      	mov	r5, r3
 800add4:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800add8:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800addc:	f7f5 fc0c 	bl	80005f8 <__aeabi_dmul>
 800ade0:	4602      	mov	r2, r0
 800ade2:	460b      	mov	r3, r1
 800ade4:	4690      	mov	r8, r2
 800ade6:	4699      	mov	r9, r3
 800ade8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800adec:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800adf0:	f7f5 fc02 	bl	80005f8 <__aeabi_dmul>
 800adf4:	4602      	mov	r2, r0
 800adf6:	460b      	mov	r3, r1
 800adf8:	4610      	mov	r0, r2
 800adfa:	4619      	mov	r1, r3
 800adfc:	4602      	mov	r2, r0
 800adfe:	460b      	mov	r3, r1
 800ae00:	f7f5 fa44 	bl	800028c <__adddf3>
 800ae04:	4602      	mov	r2, r0
 800ae06:	460b      	mov	r3, r1
 800ae08:	4692      	mov	sl, r2
 800ae0a:	469b      	mov	fp, r3
 800ae0c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800ae10:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	; 0xc0
 800ae14:	f7f5 fbf0 	bl	80005f8 <__aeabi_dmul>
 800ae18:	4602      	mov	r2, r0
 800ae1a:	460b      	mov	r3, r1
 800ae1c:	4610      	mov	r0, r2
 800ae1e:	4619      	mov	r1, r3
 800ae20:	4602      	mov	r2, r0
 800ae22:	460b      	mov	r3, r1
 800ae24:	f7f5 fa32 	bl	800028c <__adddf3>
 800ae28:	4602      	mov	r2, r0
 800ae2a:	460b      	mov	r3, r1
 800ae2c:	4650      	mov	r0, sl
 800ae2e:	4659      	mov	r1, fp
 800ae30:	f7f5 fa2a 	bl	8000288 <__aeabi_dsub>
 800ae34:	4602      	mov	r2, r0
 800ae36:	460b      	mov	r3, r1
 800ae38:	4640      	mov	r0, r8
 800ae3a:	4649      	mov	r1, r9
 800ae3c:	f7f5 fbdc 	bl	80005f8 <__aeabi_dmul>
 800ae40:	4602      	mov	r2, r0
 800ae42:	460b      	mov	r3, r1
 800ae44:	4610      	mov	r0, r2
 800ae46:	4619      	mov	r1, r3
 800ae48:	f04f 0200 	mov.w	r2, #0
 800ae4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ae50:	f7f5 fcfc 	bl	800084c <__aeabi_ddiv>
 800ae54:	4602      	mov	r2, r0
 800ae56:	460b      	mov	r3, r1
 800ae58:	4620      	mov	r0, r4
 800ae5a:	4629      	mov	r1, r5
 800ae5c:	f7f5 fa16 	bl	800028c <__adddf3>
 800ae60:	4602      	mov	r2, r0
 800ae62:	460b      	mov	r3, r1
 800ae64:	6979      	ldr	r1, [r7, #20]
 800ae66:	e9c1 2300 	strd	r2, r3, [r1]
 800ae6a:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ae6e:	f04f 0000 	mov.w	r0, #0
 800ae72:	4941      	ldr	r1, [pc, #260]	; (800af78 <leg_spd+0xa30>)
 800ae74:	f7f5 fcea 	bl	800084c <__aeabi_ddiv>
 800ae78:	4602      	mov	r2, r0
 800ae7a:	460b      	mov	r3, r1
 800ae7c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ae80:	f7f5 fbba 	bl	80005f8 <__aeabi_dmul>
 800ae84:	4602      	mov	r2, r0
 800ae86:	460b      	mov	r3, r1
 800ae88:	e9c7 2328 	strd	r2, r3, [r7, #160]	; 0xa0
 800ae8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ae8e:	603b      	str	r3, [r7, #0]
 800ae90:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ae92:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 800ae96:	607b      	str	r3, [r7, #4]
 800ae98:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ae9c:	e9d7 0100 	ldrd	r0, r1, [r7]
 800aea0:	f7f5 fbaa 	bl	80005f8 <__aeabi_dmul>
 800aea4:	4602      	mov	r2, r0
 800aea6:	460b      	mov	r3, r1
 800aea8:	4610      	mov	r0, r2
 800aeaa:	4619      	mov	r1, r3
 800aeac:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800aeb0:	f7f5 fba2 	bl	80005f8 <__aeabi_dmul>
 800aeb4:	4602      	mov	r2, r0
 800aeb6:	460b      	mov	r3, r1
 800aeb8:	4614      	mov	r4, r2
 800aeba:	461d      	mov	r5, r3
 800aebc:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800aec0:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800aec4:	f7f5 fb98 	bl	80005f8 <__aeabi_dmul>
 800aec8:	4602      	mov	r2, r0
 800aeca:	460b      	mov	r3, r1
 800aecc:	4690      	mov	r8, r2
 800aece:	4699      	mov	r9, r3
 800aed0:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800aed4:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	; 0xa0
 800aed8:	f7f5 fb8e 	bl	80005f8 <__aeabi_dmul>
 800aedc:	4602      	mov	r2, r0
 800aede:	460b      	mov	r3, r1
 800aee0:	4640      	mov	r0, r8
 800aee2:	4649      	mov	r1, r9
 800aee4:	f7f5 f9d0 	bl	8000288 <__aeabi_dsub>
 800aee8:	4602      	mov	r2, r0
 800aeea:	460b      	mov	r3, r1
 800aeec:	4620      	mov	r0, r4
 800aeee:	4629      	mov	r1, r5
 800aef0:	f7f5 fb82 	bl	80005f8 <__aeabi_dmul>
 800aef4:	4602      	mov	r2, r0
 800aef6:	460b      	mov	r3, r1
 800aef8:	4690      	mov	r8, r2
 800aefa:	4699      	mov	r9, r3
 800aefc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800af00:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800af04:	f7f5 fb78 	bl	80005f8 <__aeabi_dmul>
 800af08:	4602      	mov	r2, r0
 800af0a:	460b      	mov	r3, r1
 800af0c:	4610      	mov	r0, r2
 800af0e:	4619      	mov	r1, r3
 800af10:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800af14:	f7f5 fb70 	bl	80005f8 <__aeabi_dmul>
 800af18:	4602      	mov	r2, r0
 800af1a:	460b      	mov	r3, r1
 800af1c:	4614      	mov	r4, r2
 800af1e:	461d      	mov	r5, r3
 800af20:	a311      	add	r3, pc, #68	; (adr r3, 800af68 <leg_spd+0xa20>)
 800af22:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af26:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800af2a:	f7f5 fb65 	bl	80005f8 <__aeabi_dmul>
 800af2e:	4602      	mov	r2, r0
 800af30:	460b      	mov	r3, r1
 800af32:	f04f 0000 	mov.w	r0, #0
 800af36:	f04f 0100 	mov.w	r1, #0
 800af3a:	f7f5 f9a5 	bl	8000288 <__aeabi_dsub>
 800af3e:	4602      	mov	r2, r0
 800af40:	460b      	mov	r3, r1
 800af42:	4610      	mov	r0, r2
 800af44:	4619      	mov	r1, r3
 800af46:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800af4a:	f7f5 fb55 	bl	80005f8 <__aeabi_dmul>
 800af4e:	4602      	mov	r2, r0
 800af50:	460b      	mov	r3, r1
 800af52:	4692      	mov	sl, r2
 800af54:	469b      	mov	fp, r3
 800af56:	a304      	add	r3, pc, #16	; (adr r3, 800af68 <leg_spd+0xa20>)
 800af58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af5c:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	; 0xf0
 800af60:	e014      	b.n	800af8c <leg_spd+0xa44>
 800af62:	bf00      	nop
 800af64:	f3af 8000 	nop.w
 800af68:	33333333 	.word	0x33333333
 800af6c:	3fd33333 	.word	0x3fd33333
 800af70:	33333333 	.word	0x33333333
 800af74:	3fe33333 	.word	0x3fe33333
 800af78:	3ff00000 	.word	0x3ff00000
 800af7c:	33333333 	.word	0x33333333
 800af80:	3fc33333 	.word	0x3fc33333
 800af84:	5532617c 	.word	0x5532617c
 800af88:	3fa92a30 	.word	0x3fa92a30
 800af8c:	f7f5 fb34 	bl	80005f8 <__aeabi_dmul>
 800af90:	4602      	mov	r2, r0
 800af92:	460b      	mov	r3, r1
 800af94:	4610      	mov	r0, r2
 800af96:	4619      	mov	r1, r3
 800af98:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800af9c:	f7f5 fb2c 	bl	80005f8 <__aeabi_dmul>
 800afa0:	4602      	mov	r2, r0
 800afa2:	460b      	mov	r3, r1
 800afa4:	4650      	mov	r0, sl
 800afa6:	4659      	mov	r1, fp
 800afa8:	f7f5 f970 	bl	800028c <__adddf3>
 800afac:	4602      	mov	r2, r0
 800afae:	460b      	mov	r3, r1
 800afb0:	4620      	mov	r0, r4
 800afb2:	4629      	mov	r1, r5
 800afb4:	f7f5 fb20 	bl	80005f8 <__aeabi_dmul>
 800afb8:	4602      	mov	r2, r0
 800afba:	460b      	mov	r3, r1
 800afbc:	4610      	mov	r0, r2
 800afbe:	4619      	mov	r1, r3
 800afc0:	697b      	ldr	r3, [r7, #20]
 800afc2:	f103 0408 	add.w	r4, r3, #8
 800afc6:	4602      	mov	r2, r0
 800afc8:	460b      	mov	r3, r1
 800afca:	4640      	mov	r0, r8
 800afcc:	4649      	mov	r1, r9
 800afce:	f7f5 f95d 	bl	800028c <__adddf3>
 800afd2:	4602      	mov	r2, r0
 800afd4:	460b      	mov	r3, r1
 800afd6:	e9c4 2300 	strd	r2, r3, [r4]
 800afda:	bf00      	nop
 800afdc:	37f8      	adds	r7, #248	; 0xf8
 800afde:	46bd      	mov	sp, r7
 800afe0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

0800afe4 <rt_powd_snf>:
 800afe4:	b5b0      	push	{r4, r5, r7, lr}
 800afe6:	b08c      	sub	sp, #48	; 0x30
 800afe8:	af00      	add	r7, sp, #0
 800afea:	ed87 0b04 	vstr	d0, [r7, #16]
 800afee:	ed87 1b02 	vstr	d1, [r7, #8]
 800aff2:	ed97 0b04 	vldr	d0, [r7, #16]
 800aff6:	f002 ff1d 	bl	800de34 <rtIsNaN>
 800affa:	4603      	mov	r3, r0
 800affc:	2b00      	cmp	r3, #0
 800affe:	d106      	bne.n	800b00e <rt_powd_snf+0x2a>
 800b000:	ed97 0b02 	vldr	d0, [r7, #8]
 800b004:	f002 ff16 	bl	800de34 <rtIsNaN>
 800b008:	4603      	mov	r3, r0
 800b00a:	2b00      	cmp	r3, #0
 800b00c:	d005      	beq.n	800b01a <rt_powd_snf+0x36>
 800b00e:	4b80      	ldr	r3, [pc, #512]	; (800b210 <rt_powd_snf+0x22c>)
 800b010:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b014:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b018:	e0ef      	b.n	800b1fa <rt_powd_snf+0x216>
 800b01a:	693b      	ldr	r3, [r7, #16]
 800b01c:	603b      	str	r3, [r7, #0]
 800b01e:	697b      	ldr	r3, [r7, #20]
 800b020:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b024:	607b      	str	r3, [r7, #4]
 800b026:	ed97 7b00 	vldr	d7, [r7]
 800b02a:	ed87 7b08 	vstr	d7, [r7, #32]
 800b02e:	68bc      	ldr	r4, [r7, #8]
 800b030:	68fb      	ldr	r3, [r7, #12]
 800b032:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800b036:	e9c7 4506 	strd	r4, r5, [r7, #24]
 800b03a:	ed97 0b02 	vldr	d0, [r7, #8]
 800b03e:	f002 fecb 	bl	800ddd8 <rtIsInf>
 800b042:	4603      	mov	r3, r0
 800b044:	2b00      	cmp	r3, #0
 800b046:	d049      	beq.n	800b0dc <rt_powd_snf+0xf8>
 800b048:	f04f 0200 	mov.w	r2, #0
 800b04c:	4b71      	ldr	r3, [pc, #452]	; (800b214 <rt_powd_snf+0x230>)
 800b04e:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800b052:	f7f5 fd39 	bl	8000ac8 <__aeabi_dcmpeq>
 800b056:	4603      	mov	r3, r0
 800b058:	2b00      	cmp	r3, #0
 800b05a:	d005      	beq.n	800b068 <rt_powd_snf+0x84>
 800b05c:	f04f 0200 	mov.w	r2, #0
 800b060:	4b6c      	ldr	r3, [pc, #432]	; (800b214 <rt_powd_snf+0x230>)
 800b062:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b066:	e0c8      	b.n	800b1fa <rt_powd_snf+0x216>
 800b068:	f04f 0200 	mov.w	r2, #0
 800b06c:	4b69      	ldr	r3, [pc, #420]	; (800b214 <rt_powd_snf+0x230>)
 800b06e:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800b072:	f7f5 fd51 	bl	8000b18 <__aeabi_dcmpgt>
 800b076:	4603      	mov	r3, r0
 800b078:	2b00      	cmp	r3, #0
 800b07a:	d017      	beq.n	800b0ac <rt_powd_snf+0xc8>
 800b07c:	f04f 0200 	mov.w	r2, #0
 800b080:	f04f 0300 	mov.w	r3, #0
 800b084:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b088:	f7f5 fd46 	bl	8000b18 <__aeabi_dcmpgt>
 800b08c:	4603      	mov	r3, r0
 800b08e:	2b00      	cmp	r3, #0
 800b090:	d005      	beq.n	800b09e <rt_powd_snf+0xba>
 800b092:	4b61      	ldr	r3, [pc, #388]	; (800b218 <rt_powd_snf+0x234>)
 800b094:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b098:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b09c:	e0ad      	b.n	800b1fa <rt_powd_snf+0x216>
 800b09e:	f04f 0200 	mov.w	r2, #0
 800b0a2:	f04f 0300 	mov.w	r3, #0
 800b0a6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b0aa:	e0a6      	b.n	800b1fa <rt_powd_snf+0x216>
 800b0ac:	f04f 0200 	mov.w	r2, #0
 800b0b0:	f04f 0300 	mov.w	r3, #0
 800b0b4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b0b8:	f7f5 fd2e 	bl	8000b18 <__aeabi_dcmpgt>
 800b0bc:	4603      	mov	r3, r0
 800b0be:	2b00      	cmp	r3, #0
 800b0c0:	d006      	beq.n	800b0d0 <rt_powd_snf+0xec>
 800b0c2:	f04f 0200 	mov.w	r2, #0
 800b0c6:	f04f 0300 	mov.w	r3, #0
 800b0ca:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b0ce:	e094      	b.n	800b1fa <rt_powd_snf+0x216>
 800b0d0:	4b51      	ldr	r3, [pc, #324]	; (800b218 <rt_powd_snf+0x234>)
 800b0d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b0d6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b0da:	e08e      	b.n	800b1fa <rt_powd_snf+0x216>
 800b0dc:	f04f 0200 	mov.w	r2, #0
 800b0e0:	f04f 0300 	mov.w	r3, #0
 800b0e4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b0e8:	f7f5 fcee 	bl	8000ac8 <__aeabi_dcmpeq>
 800b0ec:	4603      	mov	r3, r0
 800b0ee:	2b00      	cmp	r3, #0
 800b0f0:	d005      	beq.n	800b0fe <rt_powd_snf+0x11a>
 800b0f2:	f04f 0200 	mov.w	r2, #0
 800b0f6:	4b47      	ldr	r3, [pc, #284]	; (800b214 <rt_powd_snf+0x230>)
 800b0f8:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b0fc:	e07d      	b.n	800b1fa <rt_powd_snf+0x216>
 800b0fe:	f04f 0200 	mov.w	r2, #0
 800b102:	4b44      	ldr	r3, [pc, #272]	; (800b214 <rt_powd_snf+0x230>)
 800b104:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b108:	f7f5 fcde 	bl	8000ac8 <__aeabi_dcmpeq>
 800b10c:	4603      	mov	r3, r0
 800b10e:	2b00      	cmp	r3, #0
 800b110:	d01b      	beq.n	800b14a <rt_powd_snf+0x166>
 800b112:	f04f 0200 	mov.w	r2, #0
 800b116:	f04f 0300 	mov.w	r3, #0
 800b11a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b11e:	f7f5 fcfb 	bl	8000b18 <__aeabi_dcmpgt>
 800b122:	4603      	mov	r3, r0
 800b124:	2b00      	cmp	r3, #0
 800b126:	d004      	beq.n	800b132 <rt_powd_snf+0x14e>
 800b128:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800b12c:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b130:	e063      	b.n	800b1fa <rt_powd_snf+0x216>
 800b132:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800b136:	f04f 0000 	mov.w	r0, #0
 800b13a:	4936      	ldr	r1, [pc, #216]	; (800b214 <rt_powd_snf+0x230>)
 800b13c:	f7f5 fb86 	bl	800084c <__aeabi_ddiv>
 800b140:	4602      	mov	r2, r0
 800b142:	460b      	mov	r3, r1
 800b144:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b148:	e057      	b.n	800b1fa <rt_powd_snf+0x216>
 800b14a:	f04f 0200 	mov.w	r2, #0
 800b14e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b152:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b156:	f7f5 fcb7 	bl	8000ac8 <__aeabi_dcmpeq>
 800b15a:	4603      	mov	r3, r0
 800b15c:	2b00      	cmp	r3, #0
 800b15e:	d00a      	beq.n	800b176 <rt_powd_snf+0x192>
 800b160:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800b164:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b168:	f7f5 fa46 	bl	80005f8 <__aeabi_dmul>
 800b16c:	4602      	mov	r2, r0
 800b16e:	460b      	mov	r3, r1
 800b170:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b174:	e041      	b.n	800b1fa <rt_powd_snf+0x216>
 800b176:	f04f 0200 	mov.w	r2, #0
 800b17a:	4b28      	ldr	r3, [pc, #160]	; (800b21c <rt_powd_snf+0x238>)
 800b17c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b180:	f7f5 fca2 	bl	8000ac8 <__aeabi_dcmpeq>
 800b184:	4603      	mov	r3, r0
 800b186:	2b00      	cmp	r3, #0
 800b188:	d011      	beq.n	800b1ae <rt_powd_snf+0x1ca>
 800b18a:	f04f 0200 	mov.w	r2, #0
 800b18e:	f04f 0300 	mov.w	r3, #0
 800b192:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b196:	f7f5 fcb5 	bl	8000b04 <__aeabi_dcmpge>
 800b19a:	4603      	mov	r3, r0
 800b19c:	2b00      	cmp	r3, #0
 800b19e:	d006      	beq.n	800b1ae <rt_powd_snf+0x1ca>
 800b1a0:	ed97 0b04 	vldr	d0, [r7, #16]
 800b1a4:	f019 fa2a 	bl	80245fc <sqrt>
 800b1a8:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 800b1ac:	e025      	b.n	800b1fa <rt_powd_snf+0x216>
 800b1ae:	f04f 0200 	mov.w	r2, #0
 800b1b2:	f04f 0300 	mov.w	r3, #0
 800b1b6:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b1ba:	f7f5 fc8f 	bl	8000adc <__aeabi_dcmplt>
 800b1be:	4603      	mov	r3, r0
 800b1c0:	2b00      	cmp	r3, #0
 800b1c2:	d012      	beq.n	800b1ea <rt_powd_snf+0x206>
 800b1c4:	ed97 0b02 	vldr	d0, [r7, #8]
 800b1c8:	f019 f89a 	bl	8024300 <floor>
 800b1cc:	ec53 2b10 	vmov	r2, r3, d0
 800b1d0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b1d4:	f7f5 fca0 	bl	8000b18 <__aeabi_dcmpgt>
 800b1d8:	4603      	mov	r3, r0
 800b1da:	2b00      	cmp	r3, #0
 800b1dc:	d005      	beq.n	800b1ea <rt_powd_snf+0x206>
 800b1de:	4b0c      	ldr	r3, [pc, #48]	; (800b210 <rt_powd_snf+0x22c>)
 800b1e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1e4:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800b1e8:	e007      	b.n	800b1fa <rt_powd_snf+0x216>
 800b1ea:	ed97 1b02 	vldr	d1, [r7, #8]
 800b1ee:	ed97 0b04 	vldr	d0, [r7, #16]
 800b1f2:	f019 f993 	bl	802451c <pow>
 800b1f6:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 800b1fa:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b1fe:	ec43 2b17 	vmov	d7, r2, r3
 800b202:	eeb0 0a47 	vmov.f32	s0, s14
 800b206:	eef0 0a67 	vmov.f32	s1, s15
 800b20a:	3730      	adds	r7, #48	; 0x30
 800b20c:	46bd      	mov	sp, r7
 800b20e:	bdb0      	pop	{r4, r5, r7, pc}
 800b210:	20000018 	.word	0x20000018
 800b214:	3ff00000 	.word	0x3ff00000
 800b218:	20000020 	.word	0x20000020
 800b21c:	3fe00000 	.word	0x3fe00000

0800b220 <lqr_k>:
 800b220:	b5b0      	push	{r4, r5, r7, lr}
 800b222:	b088      	sub	sp, #32
 800b224:	af00      	add	r7, sp, #0
 800b226:	ed87 0b02 	vstr	d0, [r7, #8]
 800b22a:	6078      	str	r0, [r7, #4]
 800b22c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800b230:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b234:	f7f5 f9e0 	bl	80005f8 <__aeabi_dmul>
 800b238:	4602      	mov	r2, r0
 800b23a:	460b      	mov	r3, r1
 800b23c:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800b240:	ed9f 1bcf 	vldr	d1, [pc, #828]	; 800b580 <lqr_k+0x360>
 800b244:	ed97 0b02 	vldr	d0, [r7, #8]
 800b248:	f7ff fecc 	bl	800afe4 <rt_powd_snf>
 800b24c:	ed87 0b04 	vstr	d0, [r7, #16]
 800b250:	a3cd      	add	r3, pc, #820	; (adr r3, 800b588 <lqr_k+0x368>)
 800b252:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b256:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b25a:	f7f5 f9cd 	bl	80005f8 <__aeabi_dmul>
 800b25e:	4602      	mov	r2, r0
 800b260:	460b      	mov	r3, r1
 800b262:	4614      	mov	r4, r2
 800b264:	461d      	mov	r5, r3
 800b266:	a3ca      	add	r3, pc, #808	; (adr r3, 800b590 <lqr_k+0x370>)
 800b268:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b26c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b270:	f7f5 f9c2 	bl	80005f8 <__aeabi_dmul>
 800b274:	4602      	mov	r2, r0
 800b276:	460b      	mov	r3, r1
 800b278:	4620      	mov	r0, r4
 800b27a:	4629      	mov	r1, r5
 800b27c:	f7f5 f806 	bl	800028c <__adddf3>
 800b280:	4602      	mov	r2, r0
 800b282:	460b      	mov	r3, r1
 800b284:	4614      	mov	r4, r2
 800b286:	461d      	mov	r5, r3
 800b288:	a3c3      	add	r3, pc, #780	; (adr r3, 800b598 <lqr_k+0x378>)
 800b28a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b28e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b292:	f7f5 f9b1 	bl	80005f8 <__aeabi_dmul>
 800b296:	4602      	mov	r2, r0
 800b298:	460b      	mov	r3, r1
 800b29a:	4620      	mov	r0, r4
 800b29c:	4629      	mov	r1, r5
 800b29e:	f7f4 fff3 	bl	8000288 <__aeabi_dsub>
 800b2a2:	4602      	mov	r2, r0
 800b2a4:	460b      	mov	r3, r1
 800b2a6:	4610      	mov	r0, r2
 800b2a8:	4619      	mov	r1, r3
 800b2aa:	a3bd      	add	r3, pc, #756	; (adr r3, 800b5a0 <lqr_k+0x380>)
 800b2ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2b0:	f7f4 ffea 	bl	8000288 <__aeabi_dsub>
 800b2b4:	4602      	mov	r2, r0
 800b2b6:	460b      	mov	r3, r1
 800b2b8:	6879      	ldr	r1, [r7, #4]
 800b2ba:	e9c1 2300 	strd	r2, r3, [r1]
 800b2be:	a3ba      	add	r3, pc, #744	; (adr r3, 800b5a8 <lqr_k+0x388>)
 800b2c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2c4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b2c8:	f7f5 f996 	bl	80005f8 <__aeabi_dmul>
 800b2cc:	4602      	mov	r2, r0
 800b2ce:	460b      	mov	r3, r1
 800b2d0:	4614      	mov	r4, r2
 800b2d2:	461d      	mov	r5, r3
 800b2d4:	a3b6      	add	r3, pc, #728	; (adr r3, 800b5b0 <lqr_k+0x390>)
 800b2d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2da:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b2de:	f7f5 f98b 	bl	80005f8 <__aeabi_dmul>
 800b2e2:	4602      	mov	r2, r0
 800b2e4:	460b      	mov	r3, r1
 800b2e6:	4620      	mov	r0, r4
 800b2e8:	4629      	mov	r1, r5
 800b2ea:	f7f4 ffcf 	bl	800028c <__adddf3>
 800b2ee:	4602      	mov	r2, r0
 800b2f0:	460b      	mov	r3, r1
 800b2f2:	4614      	mov	r4, r2
 800b2f4:	461d      	mov	r5, r3
 800b2f6:	a3b0      	add	r3, pc, #704	; (adr r3, 800b5b8 <lqr_k+0x398>)
 800b2f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b2fc:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b300:	f7f5 f97a 	bl	80005f8 <__aeabi_dmul>
 800b304:	4602      	mov	r2, r0
 800b306:	460b      	mov	r3, r1
 800b308:	4620      	mov	r0, r4
 800b30a:	4629      	mov	r1, r5
 800b30c:	f7f4 ffbc 	bl	8000288 <__aeabi_dsub>
 800b310:	4602      	mov	r2, r0
 800b312:	460b      	mov	r3, r1
 800b314:	4610      	mov	r0, r2
 800b316:	4619      	mov	r1, r3
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	f103 0408 	add.w	r4, r3, #8
 800b31e:	a3a8      	add	r3, pc, #672	; (adr r3, 800b5c0 <lqr_k+0x3a0>)
 800b320:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b324:	f7f4 ffb2 	bl	800028c <__adddf3>
 800b328:	4602      	mov	r2, r0
 800b32a:	460b      	mov	r3, r1
 800b32c:	e9c4 2300 	strd	r2, r3, [r4]
 800b330:	a3a5      	add	r3, pc, #660	; (adr r3, 800b5c8 <lqr_k+0x3a8>)
 800b332:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b336:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b33a:	f7f5 f95d 	bl	80005f8 <__aeabi_dmul>
 800b33e:	4602      	mov	r2, r0
 800b340:	460b      	mov	r3, r1
 800b342:	4614      	mov	r4, r2
 800b344:	461d      	mov	r5, r3
 800b346:	a3a2      	add	r3, pc, #648	; (adr r3, 800b5d0 <lqr_k+0x3b0>)
 800b348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b34c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b350:	f7f5 f952 	bl	80005f8 <__aeabi_dmul>
 800b354:	4602      	mov	r2, r0
 800b356:	460b      	mov	r3, r1
 800b358:	4620      	mov	r0, r4
 800b35a:	4629      	mov	r1, r5
 800b35c:	f7f4 ff96 	bl	800028c <__adddf3>
 800b360:	4602      	mov	r2, r0
 800b362:	460b      	mov	r3, r1
 800b364:	4614      	mov	r4, r2
 800b366:	461d      	mov	r5, r3
 800b368:	a39b      	add	r3, pc, #620	; (adr r3, 800b5d8 <lqr_k+0x3b8>)
 800b36a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b36e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b372:	f7f5 f941 	bl	80005f8 <__aeabi_dmul>
 800b376:	4602      	mov	r2, r0
 800b378:	460b      	mov	r3, r1
 800b37a:	4620      	mov	r0, r4
 800b37c:	4629      	mov	r1, r5
 800b37e:	f7f4 ff83 	bl	8000288 <__aeabi_dsub>
 800b382:	4602      	mov	r2, r0
 800b384:	460b      	mov	r3, r1
 800b386:	4610      	mov	r0, r2
 800b388:	4619      	mov	r1, r3
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	f103 0410 	add.w	r4, r3, #16
 800b390:	a393      	add	r3, pc, #588	; (adr r3, 800b5e0 <lqr_k+0x3c0>)
 800b392:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b396:	f7f4 ff77 	bl	8000288 <__aeabi_dsub>
 800b39a:	4602      	mov	r2, r0
 800b39c:	460b      	mov	r3, r1
 800b39e:	e9c4 2300 	strd	r2, r3, [r4]
 800b3a2:	a391      	add	r3, pc, #580	; (adr r3, 800b5e8 <lqr_k+0x3c8>)
 800b3a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3a8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b3ac:	f7f5 f924 	bl	80005f8 <__aeabi_dmul>
 800b3b0:	4602      	mov	r2, r0
 800b3b2:	460b      	mov	r3, r1
 800b3b4:	4614      	mov	r4, r2
 800b3b6:	461d      	mov	r5, r3
 800b3b8:	a38d      	add	r3, pc, #564	; (adr r3, 800b5f0 <lqr_k+0x3d0>)
 800b3ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3be:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b3c2:	f7f5 f919 	bl	80005f8 <__aeabi_dmul>
 800b3c6:	4602      	mov	r2, r0
 800b3c8:	460b      	mov	r3, r1
 800b3ca:	4620      	mov	r0, r4
 800b3cc:	4629      	mov	r1, r5
 800b3ce:	f7f4 ff5d 	bl	800028c <__adddf3>
 800b3d2:	4602      	mov	r2, r0
 800b3d4:	460b      	mov	r3, r1
 800b3d6:	4614      	mov	r4, r2
 800b3d8:	461d      	mov	r5, r3
 800b3da:	a387      	add	r3, pc, #540	; (adr r3, 800b5f8 <lqr_k+0x3d8>)
 800b3dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3e0:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b3e4:	f7f5 f908 	bl	80005f8 <__aeabi_dmul>
 800b3e8:	4602      	mov	r2, r0
 800b3ea:	460b      	mov	r3, r1
 800b3ec:	4620      	mov	r0, r4
 800b3ee:	4629      	mov	r1, r5
 800b3f0:	f7f4 ff4a 	bl	8000288 <__aeabi_dsub>
 800b3f4:	4602      	mov	r2, r0
 800b3f6:	460b      	mov	r3, r1
 800b3f8:	4610      	mov	r0, r2
 800b3fa:	4619      	mov	r1, r3
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	f103 0418 	add.w	r4, r3, #24
 800b402:	a37f      	add	r3, pc, #508	; (adr r3, 800b600 <lqr_k+0x3e0>)
 800b404:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b408:	f7f4 ff40 	bl	800028c <__adddf3>
 800b40c:	4602      	mov	r2, r0
 800b40e:	460b      	mov	r3, r1
 800b410:	e9c4 2300 	strd	r2, r3, [r4]
 800b414:	a37c      	add	r3, pc, #496	; (adr r3, 800b608 <lqr_k+0x3e8>)
 800b416:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b41a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b41e:	f7f5 f8eb 	bl	80005f8 <__aeabi_dmul>
 800b422:	4602      	mov	r2, r0
 800b424:	460b      	mov	r3, r1
 800b426:	4614      	mov	r4, r2
 800b428:	461d      	mov	r5, r3
 800b42a:	a379      	add	r3, pc, #484	; (adr r3, 800b610 <lqr_k+0x3f0>)
 800b42c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b430:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b434:	f7f5 f8e0 	bl	80005f8 <__aeabi_dmul>
 800b438:	4602      	mov	r2, r0
 800b43a:	460b      	mov	r3, r1
 800b43c:	4620      	mov	r0, r4
 800b43e:	4629      	mov	r1, r5
 800b440:	f7f4 ff24 	bl	800028c <__adddf3>
 800b444:	4602      	mov	r2, r0
 800b446:	460b      	mov	r3, r1
 800b448:	4614      	mov	r4, r2
 800b44a:	461d      	mov	r5, r3
 800b44c:	a372      	add	r3, pc, #456	; (adr r3, 800b618 <lqr_k+0x3f8>)
 800b44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b452:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b456:	f7f5 f8cf 	bl	80005f8 <__aeabi_dmul>
 800b45a:	4602      	mov	r2, r0
 800b45c:	460b      	mov	r3, r1
 800b45e:	4620      	mov	r0, r4
 800b460:	4629      	mov	r1, r5
 800b462:	f7f4 ff11 	bl	8000288 <__aeabi_dsub>
 800b466:	4602      	mov	r2, r0
 800b468:	460b      	mov	r3, r1
 800b46a:	4610      	mov	r0, r2
 800b46c:	4619      	mov	r1, r3
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	f103 0420 	add.w	r4, r3, #32
 800b474:	a36a      	add	r3, pc, #424	; (adr r3, 800b620 <lqr_k+0x400>)
 800b476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b47a:	f7f4 ff05 	bl	8000288 <__aeabi_dsub>
 800b47e:	4602      	mov	r2, r0
 800b480:	460b      	mov	r3, r1
 800b482:	e9c4 2300 	strd	r2, r3, [r4]
 800b486:	a368      	add	r3, pc, #416	; (adr r3, 800b628 <lqr_k+0x408>)
 800b488:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b48c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b490:	f7f5 f8b2 	bl	80005f8 <__aeabi_dmul>
 800b494:	4602      	mov	r2, r0
 800b496:	460b      	mov	r3, r1
 800b498:	4614      	mov	r4, r2
 800b49a:	461d      	mov	r5, r3
 800b49c:	a364      	add	r3, pc, #400	; (adr r3, 800b630 <lqr_k+0x410>)
 800b49e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b4a2:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b4a6:	f7f5 f8a7 	bl	80005f8 <__aeabi_dmul>
 800b4aa:	4602      	mov	r2, r0
 800b4ac:	460b      	mov	r3, r1
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	4629      	mov	r1, r5
 800b4b2:	f7f4 feeb 	bl	800028c <__adddf3>
 800b4b6:	4602      	mov	r2, r0
 800b4b8:	460b      	mov	r3, r1
 800b4ba:	4614      	mov	r4, r2
 800b4bc:	461d      	mov	r5, r3
 800b4be:	a35e      	add	r3, pc, #376	; (adr r3, 800b638 <lqr_k+0x418>)
 800b4c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b4c4:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b4c8:	f7f5 f896 	bl	80005f8 <__aeabi_dmul>
 800b4cc:	4602      	mov	r2, r0
 800b4ce:	460b      	mov	r3, r1
 800b4d0:	4620      	mov	r0, r4
 800b4d2:	4629      	mov	r1, r5
 800b4d4:	f7f4 fed8 	bl	8000288 <__aeabi_dsub>
 800b4d8:	4602      	mov	r2, r0
 800b4da:	460b      	mov	r3, r1
 800b4dc:	4610      	mov	r0, r2
 800b4de:	4619      	mov	r1, r3
 800b4e0:	687b      	ldr	r3, [r7, #4]
 800b4e2:	f103 0428 	add.w	r4, r3, #40	; 0x28
 800b4e6:	a356      	add	r3, pc, #344	; (adr r3, 800b640 <lqr_k+0x420>)
 800b4e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b4ec:	f7f4 fece 	bl	800028c <__adddf3>
 800b4f0:	4602      	mov	r2, r0
 800b4f2:	460b      	mov	r3, r1
 800b4f4:	e9c4 2300 	strd	r2, r3, [r4]
 800b4f8:	a353      	add	r3, pc, #332	; (adr r3, 800b648 <lqr_k+0x428>)
 800b4fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b4fe:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b502:	f7f5 f879 	bl	80005f8 <__aeabi_dmul>
 800b506:	4602      	mov	r2, r0
 800b508:	460b      	mov	r3, r1
 800b50a:	4614      	mov	r4, r2
 800b50c:	461d      	mov	r5, r3
 800b50e:	a350      	add	r3, pc, #320	; (adr r3, 800b650 <lqr_k+0x430>)
 800b510:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b514:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b518:	f7f5 f86e 	bl	80005f8 <__aeabi_dmul>
 800b51c:	4602      	mov	r2, r0
 800b51e:	460b      	mov	r3, r1
 800b520:	4620      	mov	r0, r4
 800b522:	4629      	mov	r1, r5
 800b524:	f7f4 feb2 	bl	800028c <__adddf3>
 800b528:	4602      	mov	r2, r0
 800b52a:	460b      	mov	r3, r1
 800b52c:	4614      	mov	r4, r2
 800b52e:	461d      	mov	r5, r3
 800b530:	a349      	add	r3, pc, #292	; (adr r3, 800b658 <lqr_k+0x438>)
 800b532:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b536:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b53a:	f7f5 f85d 	bl	80005f8 <__aeabi_dmul>
 800b53e:	4602      	mov	r2, r0
 800b540:	460b      	mov	r3, r1
 800b542:	4620      	mov	r0, r4
 800b544:	4629      	mov	r1, r5
 800b546:	f7f4 fe9f 	bl	8000288 <__aeabi_dsub>
 800b54a:	4602      	mov	r2, r0
 800b54c:	460b      	mov	r3, r1
 800b54e:	4610      	mov	r0, r2
 800b550:	4619      	mov	r1, r3
 800b552:	687b      	ldr	r3, [r7, #4]
 800b554:	f103 0430 	add.w	r4, r3, #48	; 0x30
 800b558:	a341      	add	r3, pc, #260	; (adr r3, 800b660 <lqr_k+0x440>)
 800b55a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b55e:	f7f4 fe93 	bl	8000288 <__aeabi_dsub>
 800b562:	4602      	mov	r2, r0
 800b564:	460b      	mov	r3, r1
 800b566:	e9c4 2300 	strd	r2, r3, [r4]
 800b56a:	a33f      	add	r3, pc, #252	; (adr r3, 800b668 <lqr_k+0x448>)
 800b56c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b570:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b574:	f7f5 f840 	bl	80005f8 <__aeabi_dmul>
 800b578:	e07a      	b.n	800b670 <lqr_k+0x450>
 800b57a:	bf00      	nop
 800b57c:	f3af 8000 	nop.w
 800b580:	00000000 	.word	0x00000000
 800b584:	40080000 	.word	0x40080000
 800b588:	e11d56d7 	.word	0xe11d56d7
 800b58c:	c0495e82 	.word	0xc0495e82
 800b590:	cef284e7 	.word	0xcef284e7
 800b594:	40651773 	.word	0x40651773
 800b598:	c64f31c5 	.word	0xc64f31c5
 800b59c:	40715b7a 	.word	0x40715b7a
 800b5a0:	088684e0 	.word	0x088684e0
 800b5a4:	40058010 	.word	0x40058010
 800b5a8:	dc2046b8 	.word	0xdc2046b8
 800b5ac:	c0306918 	.word	0xc0306918
 800b5b0:	d1f54deb 	.word	0xd1f54deb
 800b5b4:	404a26fe 	.word	0x404a26fe
 800b5b8:	7f95d98b 	.word	0x7f95d98b
 800b5bc:	404f6e68 	.word	0x404f6e68
 800b5c0:	c2b97df5 	.word	0xc2b97df5
 800b5c4:	40034320 	.word	0x40034320
 800b5c8:	bbfc5804 	.word	0xbbfc5804
 800b5cc:	c00e57c6 	.word	0xc00e57c6
 800b5d0:	8b2cbed8 	.word	0x8b2cbed8
 800b5d4:	3fe136f6 	.word	0x3fe136f6
 800b5d8:	48541815 	.word	0x48541815
 800b5dc:	401596a8 	.word	0x401596a8
 800b5e0:	553c5f99 	.word	0x553c5f99
 800b5e4:	3fd643b5 	.word	0x3fd643b5
 800b5e8:	8b6872cc 	.word	0x8b6872cc
 800b5ec:	c0030952 	.word	0xc0030952
 800b5f0:	0321b9a5 	.word	0x0321b9a5
 800b5f4:	40221b5e 	.word	0x40221b5e
 800b5f8:	5e67f3fd 	.word	0x5e67f3fd
 800b5fc:	402a2fcb 	.word	0x402a2fcb
 800b600:	2466f335 	.word	0x2466f335
 800b604:	3fd58446 	.word	0x3fd58446
 800b608:	12933d46 	.word	0x12933d46
 800b60c:	c022345e 	.word	0xc022345e
 800b610:	104153cc 	.word	0x104153cc
 800b614:	404791c5 	.word	0x404791c5
 800b618:	b37e44bf 	.word	0xb37e44bf
 800b61c:	4054e01e 	.word	0x4054e01e
 800b620:	35d984fd 	.word	0x35d984fd
 800b624:	4004470f 	.word	0x4004470f
 800b628:	6d2a2eb6 	.word	0x6d2a2eb6
 800b62c:	c035b964 	.word	0xc035b964
 800b630:	001d5b40 	.word	0x001d5b40
 800b634:	4056ca7d 	.word	0x4056ca7d
 800b638:	67da7a89 	.word	0x67da7a89
 800b63c:	4061b7f6 	.word	0x4061b7f6
 800b640:	5ee7abc5 	.word	0x5ee7abc5
 800b644:	4001a635 	.word	0x4001a635
 800b648:	3c8af835 	.word	0x3c8af835
 800b64c:	c00363cc 	.word	0xc00363cc
 800b650:	2d7aa92b 	.word	0x2d7aa92b
 800b654:	401a315b 	.word	0x401a315b
 800b658:	bc999b77 	.word	0xbc999b77
 800b65c:	4028ad80 	.word	0x4028ad80
 800b660:	cfcf5d7c 	.word	0xcfcf5d7c
 800b664:	40032833 	.word	0x40032833
 800b668:	9ad97d7b 	.word	0x9ad97d7b
 800b66c:	c03416fd 	.word	0xc03416fd
 800b670:	4602      	mov	r2, r0
 800b672:	460b      	mov	r3, r1
 800b674:	4614      	mov	r4, r2
 800b676:	461d      	mov	r5, r3
 800b678:	a38b      	add	r3, pc, #556	; (adr r3, 800b8a8 <lqr_k+0x688>)
 800b67a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b67e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b682:	f7f4 ffb9 	bl	80005f8 <__aeabi_dmul>
 800b686:	4602      	mov	r2, r0
 800b688:	460b      	mov	r3, r1
 800b68a:	4620      	mov	r0, r4
 800b68c:	4629      	mov	r1, r5
 800b68e:	f7f4 fdfd 	bl	800028c <__adddf3>
 800b692:	4602      	mov	r2, r0
 800b694:	460b      	mov	r3, r1
 800b696:	4614      	mov	r4, r2
 800b698:	461d      	mov	r5, r3
 800b69a:	a385      	add	r3, pc, #532	; (adr r3, 800b8b0 <lqr_k+0x690>)
 800b69c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6a0:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b6a4:	f7f4 ffa8 	bl	80005f8 <__aeabi_dmul>
 800b6a8:	4602      	mov	r2, r0
 800b6aa:	460b      	mov	r3, r1
 800b6ac:	4620      	mov	r0, r4
 800b6ae:	4629      	mov	r1, r5
 800b6b0:	f7f4 fdea 	bl	8000288 <__aeabi_dsub>
 800b6b4:	4602      	mov	r2, r0
 800b6b6:	460b      	mov	r3, r1
 800b6b8:	4610      	mov	r0, r2
 800b6ba:	4619      	mov	r1, r3
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	f103 0438 	add.w	r4, r3, #56	; 0x38
 800b6c2:	a37d      	add	r3, pc, #500	; (adr r3, 800b8b8 <lqr_k+0x698>)
 800b6c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6c8:	f7f4 fde0 	bl	800028c <__adddf3>
 800b6cc:	4602      	mov	r2, r0
 800b6ce:	460b      	mov	r3, r1
 800b6d0:	e9c4 2300 	strd	r2, r3, [r4]
 800b6d4:	a37a      	add	r3, pc, #488	; (adr r3, 800b8c0 <lqr_k+0x6a0>)
 800b6d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6da:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b6de:	f7f4 ff8b 	bl	80005f8 <__aeabi_dmul>
 800b6e2:	4602      	mov	r2, r0
 800b6e4:	460b      	mov	r3, r1
 800b6e6:	4614      	mov	r4, r2
 800b6e8:	461d      	mov	r5, r3
 800b6ea:	a377      	add	r3, pc, #476	; (adr r3, 800b8c8 <lqr_k+0x6a8>)
 800b6ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b6f0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b6f4:	f7f4 ff80 	bl	80005f8 <__aeabi_dmul>
 800b6f8:	4602      	mov	r2, r0
 800b6fa:	460b      	mov	r3, r1
 800b6fc:	4620      	mov	r0, r4
 800b6fe:	4629      	mov	r1, r5
 800b700:	f7f4 fdc4 	bl	800028c <__adddf3>
 800b704:	4602      	mov	r2, r0
 800b706:	460b      	mov	r3, r1
 800b708:	4614      	mov	r4, r2
 800b70a:	461d      	mov	r5, r3
 800b70c:	a370      	add	r3, pc, #448	; (adr r3, 800b8d0 <lqr_k+0x6b0>)
 800b70e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b712:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b716:	f7f4 ff6f 	bl	80005f8 <__aeabi_dmul>
 800b71a:	4602      	mov	r2, r0
 800b71c:	460b      	mov	r3, r1
 800b71e:	4620      	mov	r0, r4
 800b720:	4629      	mov	r1, r5
 800b722:	f7f4 fdb1 	bl	8000288 <__aeabi_dsub>
 800b726:	4602      	mov	r2, r0
 800b728:	460b      	mov	r3, r1
 800b72a:	4610      	mov	r0, r2
 800b72c:	4619      	mov	r1, r3
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800b734:	a368      	add	r3, pc, #416	; (adr r3, 800b8d8 <lqr_k+0x6b8>)
 800b736:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b73a:	f7f4 fda7 	bl	800028c <__adddf3>
 800b73e:	4602      	mov	r2, r0
 800b740:	460b      	mov	r3, r1
 800b742:	e9c4 2300 	strd	r2, r3, [r4]
 800b746:	a366      	add	r3, pc, #408	; (adr r3, 800b8e0 <lqr_k+0x6c0>)
 800b748:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b74c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b750:	f7f4 ff52 	bl	80005f8 <__aeabi_dmul>
 800b754:	4602      	mov	r2, r0
 800b756:	460b      	mov	r3, r1
 800b758:	4614      	mov	r4, r2
 800b75a:	461d      	mov	r5, r3
 800b75c:	a362      	add	r3, pc, #392	; (adr r3, 800b8e8 <lqr_k+0x6c8>)
 800b75e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b762:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b766:	f7f4 ff47 	bl	80005f8 <__aeabi_dmul>
 800b76a:	4602      	mov	r2, r0
 800b76c:	460b      	mov	r3, r1
 800b76e:	4620      	mov	r0, r4
 800b770:	4629      	mov	r1, r5
 800b772:	f7f4 fd89 	bl	8000288 <__aeabi_dsub>
 800b776:	4602      	mov	r2, r0
 800b778:	460b      	mov	r3, r1
 800b77a:	4614      	mov	r4, r2
 800b77c:	461d      	mov	r5, r3
 800b77e:	a35c      	add	r3, pc, #368	; (adr r3, 800b8f0 <lqr_k+0x6d0>)
 800b780:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b784:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b788:	f7f4 ff36 	bl	80005f8 <__aeabi_dmul>
 800b78c:	4602      	mov	r2, r0
 800b78e:	460b      	mov	r3, r1
 800b790:	4620      	mov	r0, r4
 800b792:	4629      	mov	r1, r5
 800b794:	f7f4 fd7a 	bl	800028c <__adddf3>
 800b798:	4602      	mov	r2, r0
 800b79a:	460b      	mov	r3, r1
 800b79c:	4610      	mov	r0, r2
 800b79e:	4619      	mov	r1, r3
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	f103 0448 	add.w	r4, r3, #72	; 0x48
 800b7a6:	a354      	add	r3, pc, #336	; (adr r3, 800b8f8 <lqr_k+0x6d8>)
 800b7a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7ac:	f7f4 fd6e 	bl	800028c <__adddf3>
 800b7b0:	4602      	mov	r2, r0
 800b7b2:	460b      	mov	r3, r1
 800b7b4:	e9c4 2300 	strd	r2, r3, [r4]
 800b7b8:	a351      	add	r3, pc, #324	; (adr r3, 800b900 <lqr_k+0x6e0>)
 800b7ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7be:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b7c2:	f7f4 ff19 	bl	80005f8 <__aeabi_dmul>
 800b7c6:	4602      	mov	r2, r0
 800b7c8:	460b      	mov	r3, r1
 800b7ca:	4614      	mov	r4, r2
 800b7cc:	461d      	mov	r5, r3
 800b7ce:	a34e      	add	r3, pc, #312	; (adr r3, 800b908 <lqr_k+0x6e8>)
 800b7d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7d4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b7d8:	f7f4 ff0e 	bl	80005f8 <__aeabi_dmul>
 800b7dc:	4602      	mov	r2, r0
 800b7de:	460b      	mov	r3, r1
 800b7e0:	4620      	mov	r0, r4
 800b7e2:	4629      	mov	r1, r5
 800b7e4:	f7f4 fd52 	bl	800028c <__adddf3>
 800b7e8:	4602      	mov	r2, r0
 800b7ea:	460b      	mov	r3, r1
 800b7ec:	4614      	mov	r4, r2
 800b7ee:	461d      	mov	r5, r3
 800b7f0:	a347      	add	r3, pc, #284	; (adr r3, 800b910 <lqr_k+0x6f0>)
 800b7f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7f6:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b7fa:	f7f4 fefd 	bl	80005f8 <__aeabi_dmul>
 800b7fe:	4602      	mov	r2, r0
 800b800:	460b      	mov	r3, r1
 800b802:	4620      	mov	r0, r4
 800b804:	4629      	mov	r1, r5
 800b806:	f7f4 fd3f 	bl	8000288 <__aeabi_dsub>
 800b80a:	4602      	mov	r2, r0
 800b80c:	460b      	mov	r3, r1
 800b80e:	4610      	mov	r0, r2
 800b810:	4619      	mov	r1, r3
 800b812:	687b      	ldr	r3, [r7, #4]
 800b814:	f103 0450 	add.w	r4, r3, #80	; 0x50
 800b818:	a33f      	add	r3, pc, #252	; (adr r3, 800b918 <lqr_k+0x6f8>)
 800b81a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b81e:	f7f4 fd35 	bl	800028c <__adddf3>
 800b822:	4602      	mov	r2, r0
 800b824:	460b      	mov	r3, r1
 800b826:	e9c4 2300 	strd	r2, r3, [r4]
 800b82a:	a33d      	add	r3, pc, #244	; (adr r3, 800b920 <lqr_k+0x700>)
 800b82c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b830:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b834:	f7f4 fee0 	bl	80005f8 <__aeabi_dmul>
 800b838:	4602      	mov	r2, r0
 800b83a:	460b      	mov	r3, r1
 800b83c:	4614      	mov	r4, r2
 800b83e:	461d      	mov	r5, r3
 800b840:	a339      	add	r3, pc, #228	; (adr r3, 800b928 <lqr_k+0x708>)
 800b842:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b846:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800b84a:	f7f4 fed5 	bl	80005f8 <__aeabi_dmul>
 800b84e:	4602      	mov	r2, r0
 800b850:	460b      	mov	r3, r1
 800b852:	4620      	mov	r0, r4
 800b854:	4629      	mov	r1, r5
 800b856:	f7f4 fd17 	bl	8000288 <__aeabi_dsub>
 800b85a:	4602      	mov	r2, r0
 800b85c:	460b      	mov	r3, r1
 800b85e:	4614      	mov	r4, r2
 800b860:	461d      	mov	r5, r3
 800b862:	a333      	add	r3, pc, #204	; (adr r3, 800b930 <lqr_k+0x710>)
 800b864:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b868:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b86c:	f7f4 fec4 	bl	80005f8 <__aeabi_dmul>
 800b870:	4602      	mov	r2, r0
 800b872:	460b      	mov	r3, r1
 800b874:	4620      	mov	r0, r4
 800b876:	4629      	mov	r1, r5
 800b878:	f7f4 fd08 	bl	800028c <__adddf3>
 800b87c:	4602      	mov	r2, r0
 800b87e:	460b      	mov	r3, r1
 800b880:	4610      	mov	r0, r2
 800b882:	4619      	mov	r1, r3
 800b884:	687b      	ldr	r3, [r7, #4]
 800b886:	f103 0458 	add.w	r4, r3, #88	; 0x58
 800b88a:	a32b      	add	r3, pc, #172	; (adr r3, 800b938 <lqr_k+0x718>)
 800b88c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b890:	f7f4 fcfc 	bl	800028c <__adddf3>
 800b894:	4602      	mov	r2, r0
 800b896:	460b      	mov	r3, r1
 800b898:	e9c4 2300 	strd	r2, r3, [r4]
 800b89c:	bf00      	nop
 800b89e:	3720      	adds	r7, #32
 800b8a0:	46bd      	mov	sp, r7
 800b8a2:	bdb0      	pop	{r4, r5, r7, pc}
 800b8a4:	f3af 8000 	nop.w
 800b8a8:	ec636a38 	.word	0xec636a38
 800b8ac:	40563570 	.word	0x40563570
 800b8b0:	de607f9b 	.word	0xde607f9b
 800b8b4:	4061f95b 	.word	0x4061f95b
 800b8b8:	d857dd98 	.word	0xd857dd98
 800b8bc:	3ffed8c9 	.word	0x3ffed8c9
 800b8c0:	a994a8df 	.word	0xa994a8df
 800b8c4:	c0512caa 	.word	0xc0512caa
 800b8c8:	67b97e90 	.word	0x67b97e90
 800b8cc:	40720491 	.word	0x40720491
 800b8d0:	89aa9a8f 	.word	0x89aa9a8f
 800b8d4:	407c03fc 	.word	0x407c03fc
 800b8d8:	34ddb1fa 	.word	0x34ddb1fa
 800b8dc:	401be7ea 	.word	0x401be7ea
 800b8e0:	1ed9f335 	.word	0x1ed9f335
 800b8e4:	403cc8b0 	.word	0x403cc8b0
 800b8e8:	24f0940c 	.word	0x24f0940c
 800b8ec:	4062a21d 	.word	0x4062a21d
 800b8f0:	d3de004a 	.word	0xd3de004a
 800b8f4:	407080e5 	.word	0x407080e5
 800b8f8:	8ee6d215 	.word	0x8ee6d215
 800b8fc:	402007e4 	.word	0x402007e4
 800b900:	61780aba 	.word	0x61780aba
 800b904:	c011e3af 	.word	0xc011e3af
 800b908:	95202cc4 	.word	0x95202cc4
 800b90c:	40327c8a 	.word	0x40327c8a
 800b910:	51990ce8 	.word	0x51990ce8
 800b914:	403cbbaa 	.word	0x403cbbaa
 800b918:	843f48ab 	.word	0x843f48ab
 800b91c:	3fdf7186 	.word	0x3fdf7186
 800b920:	2f3d86ed 	.word	0x2f3d86ed
 800b924:	3ffeb730 	.word	0x3ffeb730
 800b928:	ef16c0ea 	.word	0xef16c0ea
 800b92c:	4023a29b 	.word	0x4023a29b
 800b930:	84ebc161 	.word	0x84ebc161
 800b934:	403147f4 	.word	0x403147f4
 800b938:	0a47f0a1 	.word	0x0a47f0a1
 800b93c:	3fdd2d7f 	.word	0x3fdd2d7f

0800b940 <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t* motor){
 800b940:	b480      	push	{r7}
 800b942:	b083      	sub	sp, #12
 800b944:	af00      	add	r7, sp, #0
 800b946:	6078      	str	r0, [r7, #4]
	//general config:
		switch(motor->motor_type){
 800b948:	687b      	ldr	r3, [r7, #4]
 800b94a:	789b      	ldrb	r3, [r3, #2]
 800b94c:	3b01      	subs	r3, #1
 800b94e:	2b08      	cmp	r3, #8
 800b950:	d849      	bhi.n	800b9e6 <set_motor_config+0xa6>
 800b952:	a201      	add	r2, pc, #4	; (adr r2, 800b958 <set_motor_config+0x18>)
 800b954:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b958:	0800b9b3 	.word	0x0800b9b3
 800b95c:	0800b9cd 	.word	0x0800b9cd
 800b960:	0800b97d 	.word	0x0800b97d
 800b964:	0800b997 	.word	0x0800b997
 800b968:	0800b97d 	.word	0x0800b97d
 800b96c:	0800b9cd 	.word	0x0800b9cd
 800b970:	0800b9cd 	.word	0x0800b9cd
 800b974:	0800b97d 	.word	0x0800b97d
 800b978:	0800b9b3 	.word	0x0800b9b3
		case TYPE_M3508_ANGLE:
		case TYPE_M3508_STEPS:
		case TYPE_M3508:
			motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800b97c:	687b      	ldr	r3, [r7, #4]
 800b97e:	4a1d      	ldr	r2, [pc, #116]	; (800b9f4 <set_motor_config+0xb4>)
 800b980:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b984:	687b      	ldr	r3, [r7, #4]
 800b986:	4a1c      	ldr	r2, [pc, #112]	; (800b9f8 <set_motor_config+0xb8>)
 800b988:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b98c:	687b      	ldr	r3, [r7, #4]
 800b98e:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b992:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b994:	e028      	b.n	800b9e8 <set_motor_config+0xa8>
		case TYPE_M3508_NGEARBOX:
			motor->angle_data.gearbox_ratio = 1;
 800b996:	687b      	ldr	r3, [r7, #4]
 800b998:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800b99c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	4a15      	ldr	r2, [pc, #84]	; (800b9f8 <set_motor_config+0xb8>)
 800b9a4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b9ae:	65da      	str	r2, [r3, #92]	; 0x5c

		break;
 800b9b0:	e01a      	b.n	800b9e8 <set_motor_config+0xa8>
		case TYPE_GM6020:
		case TYPE_GM6020_720:
			motor->angle_data.gearbox_ratio = 0;
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	f04f 0200 	mov.w	r2, #0
 800b9b8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = GM6020_MAX_RPM;
 800b9bc:	687b      	ldr	r3, [r7, #4]
 800b9be:	4a0f      	ldr	r2, [pc, #60]	; (800b9fc <set_motor_config+0xbc>)
 800b9c0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800b9c4:	687b      	ldr	r3, [r7, #4]
 800b9c6:	4a0e      	ldr	r2, [pc, #56]	; (800ba00 <set_motor_config+0xc0>)
 800b9c8:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b9ca:	e00d      	b.n	800b9e8 <set_motor_config+0xa8>
		case TYPE_M2006:
		case TYPE_M2006_STEPS:
		case TYPE_M2006_ANGLE:
			motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 800b9cc:	687b      	ldr	r3, [r7, #4]
 800b9ce:	4a0d      	ldr	r2, [pc, #52]	; (800ba04 <set_motor_config+0xc4>)
 800b9d0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
			motor->angle_pid.physical_max = M2006_MAX_RPM;
 800b9d4:	687b      	ldr	r3, [r7, #4]
 800b9d6:	4a0c      	ldr	r2, [pc, #48]	; (800ba08 <set_motor_config+0xc8>)
 800b9d8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800b9e2:	65da      	str	r2, [r3, #92]	; 0x5c
			break;
 800b9e4:	e000      	b.n	800b9e8 <set_motor_config+0xa8>
		default:
			break;
 800b9e6:	bf00      	nop
		}

}
 800b9e8:	bf00      	nop
 800b9ea:	370c      	adds	r7, #12
 800b9ec:	46bd      	mov	sp, r7
 800b9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f2:	4770      	bx	lr
 800b9f4:	4199999a 	.word	0x4199999a
 800b9f8:	460ca000 	.word	0x460ca000
 800b9fc:	43c80000 	.word	0x43c80000
 800ba00:	469c4000 	.word	0x469c4000
 800ba04:	42100000 	.word	0x42100000
 800ba08:	466a6000 	.word	0x466a6000

0800ba0c <config_motors>:

extern motor_data_t can_motors[24];
void config_motors() {
 800ba0c:	b580      	push	{r7, lr}
 800ba0e:	b082      	sub	sp, #8
 800ba10:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i <= 24; i++) {
 800ba12:	2300      	movs	r3, #0
 800ba14:	71fb      	strb	r3, [r7, #7]
 800ba16:	e042      	b.n	800ba9e <config_motors+0x92>
		//reset all the values to 0
		can_motors[i].motor_type = 0;
 800ba18:	79fa      	ldrb	r2, [r7, #7]
 800ba1a:	49c2      	ldr	r1, [pc, #776]	; (800bd24 <config_motors+0x318>)
 800ba1c:	4613      	mov	r3, r2
 800ba1e:	011b      	lsls	r3, r3, #4
 800ba20:	1a9b      	subs	r3, r3, r2
 800ba22:	011b      	lsls	r3, r3, #4
 800ba24:	440b      	add	r3, r1
 800ba26:	3302      	adds	r3, #2
 800ba28:	2200      	movs	r2, #0
 800ba2a:	701a      	strb	r2, [r3, #0]
		can_motors[i].rpm_pid.output = 0;
 800ba2c:	79fa      	ldrb	r2, [r7, #7]
 800ba2e:	49bd      	ldr	r1, [pc, #756]	; (800bd24 <config_motors+0x318>)
 800ba30:	4613      	mov	r3, r2
 800ba32:	011b      	lsls	r3, r3, #4
 800ba34:	1a9b      	subs	r3, r3, r2
 800ba36:	011b      	lsls	r3, r3, #4
 800ba38:	440b      	add	r3, r1
 800ba3a:	3358      	adds	r3, #88	; 0x58
 800ba3c:	f04f 0200 	mov.w	r2, #0
 800ba40:	601a      	str	r2, [r3, #0]
		can_motors[i].rpm_pid.integral = 0;
 800ba42:	79fa      	ldrb	r2, [r7, #7]
 800ba44:	49b7      	ldr	r1, [pc, #732]	; (800bd24 <config_motors+0x318>)
 800ba46:	4613      	mov	r3, r2
 800ba48:	011b      	lsls	r3, r3, #4
 800ba4a:	1a9b      	subs	r3, r3, r2
 800ba4c:	011b      	lsls	r3, r3, #4
 800ba4e:	440b      	add	r3, r1
 800ba50:	334c      	adds	r3, #76	; 0x4c
 800ba52:	f04f 0200 	mov.w	r2, #0
 800ba56:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_pid.output = 0;
 800ba58:	79fa      	ldrb	r2, [r7, #7]
 800ba5a:	49b2      	ldr	r1, [pc, #712]	; (800bd24 <config_motors+0x318>)
 800ba5c:	4613      	mov	r3, r2
 800ba5e:	011b      	lsls	r3, r3, #4
 800ba60:	1a9b      	subs	r3, r3, r2
 800ba62:	011b      	lsls	r3, r3, #4
 800ba64:	440b      	add	r3, r1
 800ba66:	3388      	adds	r3, #136	; 0x88
 800ba68:	f04f 0200 	mov.w	r2, #0
 800ba6c:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_pid.integral = 0;
 800ba6e:	79fa      	ldrb	r2, [r7, #7]
 800ba70:	49ac      	ldr	r1, [pc, #688]	; (800bd24 <config_motors+0x318>)
 800ba72:	4613      	mov	r3, r2
 800ba74:	011b      	lsls	r3, r3, #4
 800ba76:	1a9b      	subs	r3, r3, r2
 800ba78:	011b      	lsls	r3, r3, #4
 800ba7a:	440b      	add	r3, r1
 800ba7c:	337c      	adds	r3, #124	; 0x7c
 800ba7e:	f04f 0200 	mov.w	r2, #0
 800ba82:	601a      	str	r2, [r3, #0]
		can_motors[i].angle_data.ticks = 0;
 800ba84:	79fa      	ldrb	r2, [r7, #7]
 800ba86:	49a7      	ldr	r1, [pc, #668]	; (800bd24 <config_motors+0x318>)
 800ba88:	4613      	mov	r3, r2
 800ba8a:	011b      	lsls	r3, r3, #4
 800ba8c:	1a9b      	subs	r3, r3, r2
 800ba8e:	011b      	lsls	r3, r3, #4
 800ba90:	440b      	add	r3, r1
 800ba92:	3398      	adds	r3, #152	; 0x98
 800ba94:	2200      	movs	r2, #0
 800ba96:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i <= 24; i++) {
 800ba98:	79fb      	ldrb	r3, [r7, #7]
 800ba9a:	3301      	adds	r3, #1
 800ba9c:	71fb      	strb	r3, [r7, #7]
 800ba9e:	79fb      	ldrb	r3, [r7, #7]
 800baa0:	2b18      	cmp	r3, #24
 800baa2:	d9b9      	bls.n	800ba18 <config_motors+0xc>
	}

	//initialise motor data
#ifdef Leftwheel_MOTOR_ID
	uint8_t motor_id = Leftwheel_MOTOR_ID - 1;
 800baa4:	2300      	movs	r3, #0
 800baa6:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800baa8:	79ba      	ldrb	r2, [r7, #6]
 800baaa:	499e      	ldr	r1, [pc, #632]	; (800bd24 <config_motors+0x318>)
 800baac:	4613      	mov	r3, r2
 800baae:	011b      	lsls	r3, r3, #4
 800bab0:	1a9b      	subs	r3, r3, r2
 800bab2:	011b      	lsls	r3, r3, #4
 800bab4:	440b      	add	r3, r1
 800bab6:	3302      	adds	r3, #2
 800bab8:	2203      	movs	r2, #3
 800baba:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800babc:	79ba      	ldrb	r2, [r7, #6]
 800babe:	4613      	mov	r3, r2
 800bac0:	011b      	lsls	r3, r3, #4
 800bac2:	1a9b      	subs	r3, r3, r2
 800bac4:	011b      	lsls	r3, r3, #4
 800bac6:	4a97      	ldr	r2, [pc, #604]	; (800bd24 <config_motors+0x318>)
 800bac8:	4413      	add	r3, r2
 800baca:	4618      	mov	r0, r3
 800bacc:	f7ff ff38 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800bad0:	79ba      	ldrb	r2, [r7, #6]
 800bad2:	4994      	ldr	r1, [pc, #592]	; (800bd24 <config_motors+0x318>)
 800bad4:	4613      	mov	r3, r2
 800bad6:	011b      	lsls	r3, r3, #4
 800bad8:	1a9b      	subs	r3, r3, r2
 800bada:	011b      	lsls	r3, r3, #4
 800badc:	440b      	add	r3, r1
 800bade:	339c      	adds	r3, #156	; 0x9c
 800bae0:	2200      	movs	r2, #0
 800bae2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800bae4:	79ba      	ldrb	r2, [r7, #6]
 800bae6:	498f      	ldr	r1, [pc, #572]	; (800bd24 <config_motors+0x318>)
 800bae8:	4613      	mov	r3, r2
 800baea:	011b      	lsls	r3, r3, #4
 800baec:	1a9b      	subs	r3, r3, r2
 800baee:	011b      	lsls	r3, r3, #4
 800baf0:	440b      	add	r3, r1
 800baf2:	33b8      	adds	r3, #184	; 0xb8
 800baf4:	f04f 0200 	mov.w	r2, #0
 800baf8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800bafa:	79ba      	ldrb	r2, [r7, #6]
 800bafc:	4989      	ldr	r1, [pc, #548]	; (800bd24 <config_motors+0x318>)
 800bafe:	4613      	mov	r3, r2
 800bb00:	011b      	lsls	r3, r3, #4
 800bb02:	1a9b      	subs	r3, r3, r2
 800bb04:	011b      	lsls	r3, r3, #4
 800bb06:	440b      	add	r3, r1
 800bb08:	33b4      	adds	r3, #180	; 0xb4
 800bb0a:	f04f 0200 	mov.w	r2, #0
 800bb0e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bb10:	79ba      	ldrb	r2, [r7, #6]
 800bb12:	4984      	ldr	r1, [pc, #528]	; (800bd24 <config_motors+0x318>)
 800bb14:	4613      	mov	r3, r2
 800bb16:	011b      	lsls	r3, r3, #4
 800bb18:	1a9b      	subs	r3, r3, r2
 800bb1a:	011b      	lsls	r3, r3, #4
 800bb1c:	440b      	add	r3, r1
 800bb1e:	3338      	adds	r3, #56	; 0x38
 800bb20:	4a81      	ldr	r2, [pc, #516]	; (800bd28 <config_motors+0x31c>)
 800bb22:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bb24:	79ba      	ldrb	r2, [r7, #6]
 800bb26:	497f      	ldr	r1, [pc, #508]	; (800bd24 <config_motors+0x318>)
 800bb28:	4613      	mov	r3, r2
 800bb2a:	011b      	lsls	r3, r3, #4
 800bb2c:	1a9b      	subs	r3, r3, r2
 800bb2e:	011b      	lsls	r3, r3, #4
 800bb30:	440b      	add	r3, r1
 800bb32:	333c      	adds	r3, #60	; 0x3c
 800bb34:	4a7d      	ldr	r2, [pc, #500]	; (800bd2c <config_motors+0x320>)
 800bb36:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bb38:	79ba      	ldrb	r2, [r7, #6]
 800bb3a:	497a      	ldr	r1, [pc, #488]	; (800bd24 <config_motors+0x318>)
 800bb3c:	4613      	mov	r3, r2
 800bb3e:	011b      	lsls	r3, r3, #4
 800bb40:	1a9b      	subs	r3, r3, r2
 800bb42:	011b      	lsls	r3, r3, #4
 800bb44:	440b      	add	r3, r1
 800bb46:	3340      	adds	r3, #64	; 0x40
 800bb48:	4a79      	ldr	r2, [pc, #484]	; (800bd30 <config_motors+0x324>)
 800bb4a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bb4c:	79ba      	ldrb	r2, [r7, #6]
 800bb4e:	4975      	ldr	r1, [pc, #468]	; (800bd24 <config_motors+0x318>)
 800bb50:	4613      	mov	r3, r2
 800bb52:	011b      	lsls	r3, r3, #4
 800bb54:	1a9b      	subs	r3, r3, r2
 800bb56:	011b      	lsls	r3, r3, #4
 800bb58:	440b      	add	r3, r1
 800bb5a:	33d4      	adds	r3, #212	; 0xd4
 800bb5c:	4a75      	ldr	r2, [pc, #468]	; (800bd34 <config_motors+0x328>)
 800bb5e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bb60:	79ba      	ldrb	r2, [r7, #6]
 800bb62:	4970      	ldr	r1, [pc, #448]	; (800bd24 <config_motors+0x318>)
 800bb64:	4613      	mov	r3, r2
 800bb66:	011b      	lsls	r3, r3, #4
 800bb68:	1a9b      	subs	r3, r3, r2
 800bb6a:	011b      	lsls	r3, r3, #4
 800bb6c:	440b      	add	r3, r1
 800bb6e:	3350      	adds	r3, #80	; 0x50
 800bb70:	4a71      	ldr	r2, [pc, #452]	; (800bd38 <config_motors+0x32c>)
 800bb72:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bb74:	79ba      	ldrb	r2, [r7, #6]
 800bb76:	496b      	ldr	r1, [pc, #428]	; (800bd24 <config_motors+0x318>)
 800bb78:	4613      	mov	r3, r2
 800bb7a:	011b      	lsls	r3, r3, #4
 800bb7c:	1a9b      	subs	r3, r3, r2
 800bb7e:	011b      	lsls	r3, r3, #4
 800bb80:	440b      	add	r3, r1
 800bb82:	3354      	adds	r3, #84	; 0x54
 800bb84:	4a6d      	ldr	r2, [pc, #436]	; (800bd3c <config_motors+0x330>)
 800bb86:	601a      	str	r2, [r3, #0]
#endif

#ifdef Rightwheel_MOTOR_ID
	motor_id =Rightwheel_MOTOR_ID - 1;
 800bb88:	2301      	movs	r3, #1
 800bb8a:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800bb8c:	79ba      	ldrb	r2, [r7, #6]
 800bb8e:	4965      	ldr	r1, [pc, #404]	; (800bd24 <config_motors+0x318>)
 800bb90:	4613      	mov	r3, r2
 800bb92:	011b      	lsls	r3, r3, #4
 800bb94:	1a9b      	subs	r3, r3, r2
 800bb96:	011b      	lsls	r3, r3, #4
 800bb98:	440b      	add	r3, r1
 800bb9a:	3302      	adds	r3, #2
 800bb9c:	2203      	movs	r2, #3
 800bb9e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800bba0:	79ba      	ldrb	r2, [r7, #6]
 800bba2:	4613      	mov	r3, r2
 800bba4:	011b      	lsls	r3, r3, #4
 800bba6:	1a9b      	subs	r3, r3, r2
 800bba8:	011b      	lsls	r3, r3, #4
 800bbaa:	4a5e      	ldr	r2, [pc, #376]	; (800bd24 <config_motors+0x318>)
 800bbac:	4413      	add	r3, r2
 800bbae:	4618      	mov	r0, r3
 800bbb0:	f7ff fec6 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800bbb4:	79ba      	ldrb	r2, [r7, #6]
 800bbb6:	495b      	ldr	r1, [pc, #364]	; (800bd24 <config_motors+0x318>)
 800bbb8:	4613      	mov	r3, r2
 800bbba:	011b      	lsls	r3, r3, #4
 800bbbc:	1a9b      	subs	r3, r3, r2
 800bbbe:	011b      	lsls	r3, r3, #4
 800bbc0:	440b      	add	r3, r1
 800bbc2:	339c      	adds	r3, #156	; 0x9c
 800bbc4:	2200      	movs	r2, #0
 800bbc6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800bbc8:	79ba      	ldrb	r2, [r7, #6]
 800bbca:	4956      	ldr	r1, [pc, #344]	; (800bd24 <config_motors+0x318>)
 800bbcc:	4613      	mov	r3, r2
 800bbce:	011b      	lsls	r3, r3, #4
 800bbd0:	1a9b      	subs	r3, r3, r2
 800bbd2:	011b      	lsls	r3, r3, #4
 800bbd4:	440b      	add	r3, r1
 800bbd6:	33b8      	adds	r3, #184	; 0xb8
 800bbd8:	f04f 0200 	mov.w	r2, #0
 800bbdc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800bbde:	79ba      	ldrb	r2, [r7, #6]
 800bbe0:	4950      	ldr	r1, [pc, #320]	; (800bd24 <config_motors+0x318>)
 800bbe2:	4613      	mov	r3, r2
 800bbe4:	011b      	lsls	r3, r3, #4
 800bbe6:	1a9b      	subs	r3, r3, r2
 800bbe8:	011b      	lsls	r3, r3, #4
 800bbea:	440b      	add	r3, r1
 800bbec:	33b4      	adds	r3, #180	; 0xb4
 800bbee:	f04f 0200 	mov.w	r2, #0
 800bbf2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bbf4:	79ba      	ldrb	r2, [r7, #6]
 800bbf6:	494b      	ldr	r1, [pc, #300]	; (800bd24 <config_motors+0x318>)
 800bbf8:	4613      	mov	r3, r2
 800bbfa:	011b      	lsls	r3, r3, #4
 800bbfc:	1a9b      	subs	r3, r3, r2
 800bbfe:	011b      	lsls	r3, r3, #4
 800bc00:	440b      	add	r3, r1
 800bc02:	33c4      	adds	r3, #196	; 0xc4
 800bc04:	4a4e      	ldr	r2, [pc, #312]	; (800bd40 <config_motors+0x334>)
 800bc06:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bc08:	79ba      	ldrb	r2, [r7, #6]
 800bc0a:	4946      	ldr	r1, [pc, #280]	; (800bd24 <config_motors+0x318>)
 800bc0c:	4613      	mov	r3, r2
 800bc0e:	011b      	lsls	r3, r3, #4
 800bc10:	1a9b      	subs	r3, r3, r2
 800bc12:	011b      	lsls	r3, r3, #4
 800bc14:	440b      	add	r3, r1
 800bc16:	33c0      	adds	r3, #192	; 0xc0
 800bc18:	4a4a      	ldr	r2, [pc, #296]	; (800bd44 <config_motors+0x338>)
 800bc1a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bc1c:	79ba      	ldrb	r2, [r7, #6]
 800bc1e:	4941      	ldr	r1, [pc, #260]	; (800bd24 <config_motors+0x318>)
 800bc20:	4613      	mov	r3, r2
 800bc22:	011b      	lsls	r3, r3, #4
 800bc24:	1a9b      	subs	r3, r3, r2
 800bc26:	011b      	lsls	r3, r3, #4
 800bc28:	440b      	add	r3, r1
 800bc2a:	33d4      	adds	r3, #212	; 0xd4
 800bc2c:	4a41      	ldr	r2, [pc, #260]	; (800bd34 <config_motors+0x328>)
 800bc2e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bc30:	79ba      	ldrb	r2, [r7, #6]
 800bc32:	493c      	ldr	r1, [pc, #240]	; (800bd24 <config_motors+0x318>)
 800bc34:	4613      	mov	r3, r2
 800bc36:	011b      	lsls	r3, r3, #4
 800bc38:	1a9b      	subs	r3, r3, r2
 800bc3a:	011b      	lsls	r3, r3, #4
 800bc3c:	440b      	add	r3, r1
 800bc3e:	3338      	adds	r3, #56	; 0x38
 800bc40:	4a39      	ldr	r2, [pc, #228]	; (800bd28 <config_motors+0x31c>)
 800bc42:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bc44:	79ba      	ldrb	r2, [r7, #6]
 800bc46:	4937      	ldr	r1, [pc, #220]	; (800bd24 <config_motors+0x318>)
 800bc48:	4613      	mov	r3, r2
 800bc4a:	011b      	lsls	r3, r3, #4
 800bc4c:	1a9b      	subs	r3, r3, r2
 800bc4e:	011b      	lsls	r3, r3, #4
 800bc50:	440b      	add	r3, r1
 800bc52:	333c      	adds	r3, #60	; 0x3c
 800bc54:	4a35      	ldr	r2, [pc, #212]	; (800bd2c <config_motors+0x320>)
 800bc56:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bc58:	79ba      	ldrb	r2, [r7, #6]
 800bc5a:	4932      	ldr	r1, [pc, #200]	; (800bd24 <config_motors+0x318>)
 800bc5c:	4613      	mov	r3, r2
 800bc5e:	011b      	lsls	r3, r3, #4
 800bc60:	1a9b      	subs	r3, r3, r2
 800bc62:	011b      	lsls	r3, r3, #4
 800bc64:	440b      	add	r3, r1
 800bc66:	3340      	adds	r3, #64	; 0x40
 800bc68:	4a31      	ldr	r2, [pc, #196]	; (800bd30 <config_motors+0x324>)
 800bc6a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bc6c:	79ba      	ldrb	r2, [r7, #6]
 800bc6e:	492d      	ldr	r1, [pc, #180]	; (800bd24 <config_motors+0x318>)
 800bc70:	4613      	mov	r3, r2
 800bc72:	011b      	lsls	r3, r3, #4
 800bc74:	1a9b      	subs	r3, r3, r2
 800bc76:	011b      	lsls	r3, r3, #4
 800bc78:	440b      	add	r3, r1
 800bc7a:	3350      	adds	r3, #80	; 0x50
 800bc7c:	4a2e      	ldr	r2, [pc, #184]	; (800bd38 <config_motors+0x32c>)
 800bc7e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bc80:	79ba      	ldrb	r2, [r7, #6]
 800bc82:	4928      	ldr	r1, [pc, #160]	; (800bd24 <config_motors+0x318>)
 800bc84:	4613      	mov	r3, r2
 800bc86:	011b      	lsls	r3, r3, #4
 800bc88:	1a9b      	subs	r3, r3, r2
 800bc8a:	011b      	lsls	r3, r3, #4
 800bc8c:	440b      	add	r3, r1
 800bc8e:	3354      	adds	r3, #84	; 0x54
 800bc90:	4a2a      	ldr	r2, [pc, #168]	; (800bd3c <config_motors+0x330>)
 800bc92:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 800bc94:	230e      	movs	r3, #14
 800bc96:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800bc98:	79ba      	ldrb	r2, [r7, #6]
 800bc9a:	4922      	ldr	r1, [pc, #136]	; (800bd24 <config_motors+0x318>)
 800bc9c:	4613      	mov	r3, r2
 800bc9e:	011b      	lsls	r3, r3, #4
 800bca0:	1a9b      	subs	r3, r3, r2
 800bca2:	011b      	lsls	r3, r3, #4
 800bca4:	440b      	add	r3, r1
 800bca6:	3302      	adds	r3, #2
 800bca8:	2203      	movs	r2, #3
 800bcaa:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800bcac:	79ba      	ldrb	r2, [r7, #6]
 800bcae:	4613      	mov	r3, r2
 800bcb0:	011b      	lsls	r3, r3, #4
 800bcb2:	1a9b      	subs	r3, r3, r2
 800bcb4:	011b      	lsls	r3, r3, #4
 800bcb6:	4a1b      	ldr	r2, [pc, #108]	; (800bd24 <config_motors+0x318>)
 800bcb8:	4413      	add	r3, r2
 800bcba:	4618      	mov	r0, r3
 800bcbc:	f7ff fe40 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800bcc0:	79ba      	ldrb	r2, [r7, #6]
 800bcc2:	4918      	ldr	r1, [pc, #96]	; (800bd24 <config_motors+0x318>)
 800bcc4:	4613      	mov	r3, r2
 800bcc6:	011b      	lsls	r3, r3, #4
 800bcc8:	1a9b      	subs	r3, r3, r2
 800bcca:	011b      	lsls	r3, r3, #4
 800bccc:	440b      	add	r3, r1
 800bcce:	339c      	adds	r3, #156	; 0x9c
 800bcd0:	2200      	movs	r2, #0
 800bcd2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800bcd4:	79ba      	ldrb	r2, [r7, #6]
 800bcd6:	4913      	ldr	r1, [pc, #76]	; (800bd24 <config_motors+0x318>)
 800bcd8:	4613      	mov	r3, r2
 800bcda:	011b      	lsls	r3, r3, #4
 800bcdc:	1a9b      	subs	r3, r3, r2
 800bcde:	011b      	lsls	r3, r3, #4
 800bce0:	440b      	add	r3, r1
 800bce2:	33b8      	adds	r3, #184	; 0xb8
 800bce4:	f04f 0200 	mov.w	r2, #0
 800bce8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800bcea:	79ba      	ldrb	r2, [r7, #6]
 800bcec:	490d      	ldr	r1, [pc, #52]	; (800bd24 <config_motors+0x318>)
 800bcee:	4613      	mov	r3, r2
 800bcf0:	011b      	lsls	r3, r3, #4
 800bcf2:	1a9b      	subs	r3, r3, r2
 800bcf4:	011b      	lsls	r3, r3, #4
 800bcf6:	440b      	add	r3, r1
 800bcf8:	33b4      	adds	r3, #180	; 0xb4
 800bcfa:	f04f 0200 	mov.w	r2, #0
 800bcfe:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bd00:	79ba      	ldrb	r2, [r7, #6]
 800bd02:	4908      	ldr	r1, [pc, #32]	; (800bd24 <config_motors+0x318>)
 800bd04:	4613      	mov	r3, r2
 800bd06:	011b      	lsls	r3, r3, #4
 800bd08:	1a9b      	subs	r3, r3, r2
 800bd0a:	011b      	lsls	r3, r3, #4
 800bd0c:	440b      	add	r3, r1
 800bd0e:	33c4      	adds	r3, #196	; 0xc4
 800bd10:	4a0b      	ldr	r2, [pc, #44]	; (800bd40 <config_motors+0x334>)
 800bd12:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bd14:	79ba      	ldrb	r2, [r7, #6]
 800bd16:	4903      	ldr	r1, [pc, #12]	; (800bd24 <config_motors+0x318>)
 800bd18:	4613      	mov	r3, r2
 800bd1a:	011b      	lsls	r3, r3, #4
 800bd1c:	1a9b      	subs	r3, r3, r2
 800bd1e:	011b      	lsls	r3, r3, #4
 800bd20:	e012      	b.n	800bd48 <config_motors+0x33c>
 800bd22:	bf00      	nop
 800bd24:	200018a8 	.word	0x200018a8
 800bd28:	41200000 	.word	0x41200000
 800bd2c:	3dcccccd 	.word	0x3dcccccd
 800bd30:	40a00000 	.word	0x40a00000
 800bd34:	40f40000 	.word	0x40f40000
 800bd38:	461c4000 	.word	0x461c4000
 800bd3c:	457a0000 	.word	0x457a0000
 800bd40:	40c90fdb 	.word	0x40c90fdb
 800bd44:	c0c90fdb 	.word	0xc0c90fdb
 800bd48:	440b      	add	r3, r1
 800bd4a:	33c0      	adds	r3, #192	; 0xc0
 800bd4c:	4abe      	ldr	r2, [pc, #760]	; (800c048 <config_motors+0x63c>)
 800bd4e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bd50:	79ba      	ldrb	r2, [r7, #6]
 800bd52:	49be      	ldr	r1, [pc, #760]	; (800c04c <config_motors+0x640>)
 800bd54:	4613      	mov	r3, r2
 800bd56:	011b      	lsls	r3, r3, #4
 800bd58:	1a9b      	subs	r3, r3, r2
 800bd5a:	011b      	lsls	r3, r3, #4
 800bd5c:	440b      	add	r3, r1
 800bd5e:	33d4      	adds	r3, #212	; 0xd4
 800bd60:	4abb      	ldr	r2, [pc, #748]	; (800c050 <config_motors+0x644>)
 800bd62:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = 0;
 800bd64:	79ba      	ldrb	r2, [r7, #6]
 800bd66:	49b9      	ldr	r1, [pc, #740]	; (800c04c <config_motors+0x640>)
 800bd68:	4613      	mov	r3, r2
 800bd6a:	011b      	lsls	r3, r3, #4
 800bd6c:	1a9b      	subs	r3, r3, r2
 800bd6e:	011b      	lsls	r3, r3, #4
 800bd70:	440b      	add	r3, r1
 800bd72:	3368      	adds	r3, #104	; 0x68
 800bd74:	f04f 0200 	mov.w	r2, #0
 800bd78:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = 0;
 800bd7a:	79ba      	ldrb	r2, [r7, #6]
 800bd7c:	49b3      	ldr	r1, [pc, #716]	; (800c04c <config_motors+0x640>)
 800bd7e:	4613      	mov	r3, r2
 800bd80:	011b      	lsls	r3, r3, #4
 800bd82:	1a9b      	subs	r3, r3, r2
 800bd84:	011b      	lsls	r3, r3, #4
 800bd86:	440b      	add	r3, r1
 800bd88:	336c      	adds	r3, #108	; 0x6c
 800bd8a:	f04f 0200 	mov.w	r2, #0
 800bd8e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = 0;
 800bd90:	79ba      	ldrb	r2, [r7, #6]
 800bd92:	49ae      	ldr	r1, [pc, #696]	; (800c04c <config_motors+0x640>)
 800bd94:	4613      	mov	r3, r2
 800bd96:	011b      	lsls	r3, r3, #4
 800bd98:	1a9b      	subs	r3, r3, r2
 800bd9a:	011b      	lsls	r3, r3, #4
 800bd9c:	440b      	add	r3, r1
 800bd9e:	3370      	adds	r3, #112	; 0x70
 800bda0:	f04f 0200 	mov.w	r2, #0
 800bda4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = 0;
 800bda6:	79ba      	ldrb	r2, [r7, #6]
 800bda8:	49a8      	ldr	r1, [pc, #672]	; (800c04c <config_motors+0x640>)
 800bdaa:	4613      	mov	r3, r2
 800bdac:	011b      	lsls	r3, r3, #4
 800bdae:	1a9b      	subs	r3, r3, r2
 800bdb0:	011b      	lsls	r3, r3, #4
 800bdb2:	440b      	add	r3, r1
 800bdb4:	3380      	adds	r3, #128	; 0x80
 800bdb6:	f04f 0200 	mov.w	r2, #0
 800bdba:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = 0;
 800bdbc:	79ba      	ldrb	r2, [r7, #6]
 800bdbe:	49a3      	ldr	r1, [pc, #652]	; (800c04c <config_motors+0x640>)
 800bdc0:	4613      	mov	r3, r2
 800bdc2:	011b      	lsls	r3, r3, #4
 800bdc4:	1a9b      	subs	r3, r3, r2
 800bdc6:	011b      	lsls	r3, r3, #4
 800bdc8:	440b      	add	r3, r1
 800bdca:	3384      	adds	r3, #132	; 0x84
 800bdcc:	f04f 0200 	mov.w	r2, #0
 800bdd0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bdd2:	79ba      	ldrb	r2, [r7, #6]
 800bdd4:	499d      	ldr	r1, [pc, #628]	; (800c04c <config_motors+0x640>)
 800bdd6:	4613      	mov	r3, r2
 800bdd8:	011b      	lsls	r3, r3, #4
 800bdda:	1a9b      	subs	r3, r3, r2
 800bddc:	011b      	lsls	r3, r3, #4
 800bdde:	440b      	add	r3, r1
 800bde0:	3338      	adds	r3, #56	; 0x38
 800bde2:	4a9c      	ldr	r2, [pc, #624]	; (800c054 <config_motors+0x648>)
 800bde4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bde6:	79ba      	ldrb	r2, [r7, #6]
 800bde8:	4998      	ldr	r1, [pc, #608]	; (800c04c <config_motors+0x640>)
 800bdea:	4613      	mov	r3, r2
 800bdec:	011b      	lsls	r3, r3, #4
 800bdee:	1a9b      	subs	r3, r3, r2
 800bdf0:	011b      	lsls	r3, r3, #4
 800bdf2:	440b      	add	r3, r1
 800bdf4:	333c      	adds	r3, #60	; 0x3c
 800bdf6:	4a98      	ldr	r2, [pc, #608]	; (800c058 <config_motors+0x64c>)
 800bdf8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bdfa:	79ba      	ldrb	r2, [r7, #6]
 800bdfc:	4993      	ldr	r1, [pc, #588]	; (800c04c <config_motors+0x640>)
 800bdfe:	4613      	mov	r3, r2
 800be00:	011b      	lsls	r3, r3, #4
 800be02:	1a9b      	subs	r3, r3, r2
 800be04:	011b      	lsls	r3, r3, #4
 800be06:	440b      	add	r3, r1
 800be08:	3340      	adds	r3, #64	; 0x40
 800be0a:	4a94      	ldr	r2, [pc, #592]	; (800c05c <config_motors+0x650>)
 800be0c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800be0e:	79ba      	ldrb	r2, [r7, #6]
 800be10:	498e      	ldr	r1, [pc, #568]	; (800c04c <config_motors+0x640>)
 800be12:	4613      	mov	r3, r2
 800be14:	011b      	lsls	r3, r3, #4
 800be16:	1a9b      	subs	r3, r3, r2
 800be18:	011b      	lsls	r3, r3, #4
 800be1a:	440b      	add	r3, r1
 800be1c:	3350      	adds	r3, #80	; 0x50
 800be1e:	4a90      	ldr	r2, [pc, #576]	; (800c060 <config_motors+0x654>)
 800be20:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800be22:	79ba      	ldrb	r2, [r7, #6]
 800be24:	4989      	ldr	r1, [pc, #548]	; (800c04c <config_motors+0x640>)
 800be26:	4613      	mov	r3, r2
 800be28:	011b      	lsls	r3, r3, #4
 800be2a:	1a9b      	subs	r3, r3, r2
 800be2c:	011b      	lsls	r3, r3, #4
 800be2e:	440b      	add	r3, r1
 800be30:	3354      	adds	r3, #84	; 0x54
 800be32:	4a8c      	ldr	r2, [pc, #560]	; (800c064 <config_motors+0x658>)
 800be34:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 800be36:	230f      	movs	r3, #15
 800be38:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508;
 800be3a:	79ba      	ldrb	r2, [r7, #6]
 800be3c:	4983      	ldr	r1, [pc, #524]	; (800c04c <config_motors+0x640>)
 800be3e:	4613      	mov	r3, r2
 800be40:	011b      	lsls	r3, r3, #4
 800be42:	1a9b      	subs	r3, r3, r2
 800be44:	011b      	lsls	r3, r3, #4
 800be46:	440b      	add	r3, r1
 800be48:	3302      	adds	r3, #2
 800be4a:	2203      	movs	r2, #3
 800be4c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800be4e:	79ba      	ldrb	r2, [r7, #6]
 800be50:	4613      	mov	r3, r2
 800be52:	011b      	lsls	r3, r3, #4
 800be54:	1a9b      	subs	r3, r3, r2
 800be56:	011b      	lsls	r3, r3, #4
 800be58:	4a7c      	ldr	r2, [pc, #496]	; (800c04c <config_motors+0x640>)
 800be5a:	4413      	add	r3, r2
 800be5c:	4618      	mov	r0, r3
 800be5e:	f7ff fd6f 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.center_ang = 0;
 800be62:	79ba      	ldrb	r2, [r7, #6]
 800be64:	4979      	ldr	r1, [pc, #484]	; (800c04c <config_motors+0x640>)
 800be66:	4613      	mov	r3, r2
 800be68:	011b      	lsls	r3, r3, #4
 800be6a:	1a9b      	subs	r3, r3, r2
 800be6c:	011b      	lsls	r3, r3, #4
 800be6e:	440b      	add	r3, r1
 800be70:	339c      	adds	r3, #156	; 0x9c
 800be72:	2200      	movs	r2, #0
 800be74:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = 0;
 800be76:	79ba      	ldrb	r2, [r7, #6]
 800be78:	4974      	ldr	r1, [pc, #464]	; (800c04c <config_motors+0x640>)
 800be7a:	4613      	mov	r3, r2
 800be7c:	011b      	lsls	r3, r3, #4
 800be7e:	1a9b      	subs	r3, r3, r2
 800be80:	011b      	lsls	r3, r3, #4
 800be82:	440b      	add	r3, r1
 800be84:	33b8      	adds	r3, #184	; 0xb8
 800be86:	f04f 0200 	mov.w	r2, #0
 800be8a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = 0;
 800be8c:	79ba      	ldrb	r2, [r7, #6]
 800be8e:	496f      	ldr	r1, [pc, #444]	; (800c04c <config_motors+0x640>)
 800be90:	4613      	mov	r3, r2
 800be92:	011b      	lsls	r3, r3, #4
 800be94:	1a9b      	subs	r3, r3, r2
 800be96:	011b      	lsls	r3, r3, #4
 800be98:	440b      	add	r3, r1
 800be9a:	33b4      	adds	r3, #180	; 0xb4
 800be9c:	f04f 0200 	mov.w	r2, #0
 800bea0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bea2:	79ba      	ldrb	r2, [r7, #6]
 800bea4:	4969      	ldr	r1, [pc, #420]	; (800c04c <config_motors+0x640>)
 800bea6:	4613      	mov	r3, r2
 800bea8:	011b      	lsls	r3, r3, #4
 800beaa:	1a9b      	subs	r3, r3, r2
 800beac:	011b      	lsls	r3, r3, #4
 800beae:	440b      	add	r3, r1
 800beb0:	33c4      	adds	r3, #196	; 0xc4
 800beb2:	4a6d      	ldr	r2, [pc, #436]	; (800c068 <config_motors+0x65c>)
 800beb4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800beb6:	79ba      	ldrb	r2, [r7, #6]
 800beb8:	4964      	ldr	r1, [pc, #400]	; (800c04c <config_motors+0x640>)
 800beba:	4613      	mov	r3, r2
 800bebc:	011b      	lsls	r3, r3, #4
 800bebe:	1a9b      	subs	r3, r3, r2
 800bec0:	011b      	lsls	r3, r3, #4
 800bec2:	440b      	add	r3, r1
 800bec4:	33c0      	adds	r3, #192	; 0xc0
 800bec6:	4a60      	ldr	r2, [pc, #384]	; (800c048 <config_motors+0x63c>)
 800bec8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800beca:	79ba      	ldrb	r2, [r7, #6]
 800becc:	495f      	ldr	r1, [pc, #380]	; (800c04c <config_motors+0x640>)
 800bece:	4613      	mov	r3, r2
 800bed0:	011b      	lsls	r3, r3, #4
 800bed2:	1a9b      	subs	r3, r3, r2
 800bed4:	011b      	lsls	r3, r3, #4
 800bed6:	440b      	add	r3, r1
 800bed8:	33d4      	adds	r3, #212	; 0xd4
 800beda:	4a5d      	ldr	r2, [pc, #372]	; (800c050 <config_motors+0x644>)
 800bedc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = 0;
 800bede:	79ba      	ldrb	r2, [r7, #6]
 800bee0:	495a      	ldr	r1, [pc, #360]	; (800c04c <config_motors+0x640>)
 800bee2:	4613      	mov	r3, r2
 800bee4:	011b      	lsls	r3, r3, #4
 800bee6:	1a9b      	subs	r3, r3, r2
 800bee8:	011b      	lsls	r3, r3, #4
 800beea:	440b      	add	r3, r1
 800beec:	3368      	adds	r3, #104	; 0x68
 800beee:	f04f 0200 	mov.w	r2, #0
 800bef2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = 0;
 800bef4:	79ba      	ldrb	r2, [r7, #6]
 800bef6:	4955      	ldr	r1, [pc, #340]	; (800c04c <config_motors+0x640>)
 800bef8:	4613      	mov	r3, r2
 800befa:	011b      	lsls	r3, r3, #4
 800befc:	1a9b      	subs	r3, r3, r2
 800befe:	011b      	lsls	r3, r3, #4
 800bf00:	440b      	add	r3, r1
 800bf02:	336c      	adds	r3, #108	; 0x6c
 800bf04:	f04f 0200 	mov.w	r2, #0
 800bf08:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = 0;
 800bf0a:	79ba      	ldrb	r2, [r7, #6]
 800bf0c:	494f      	ldr	r1, [pc, #316]	; (800c04c <config_motors+0x640>)
 800bf0e:	4613      	mov	r3, r2
 800bf10:	011b      	lsls	r3, r3, #4
 800bf12:	1a9b      	subs	r3, r3, r2
 800bf14:	011b      	lsls	r3, r3, #4
 800bf16:	440b      	add	r3, r1
 800bf18:	3370      	adds	r3, #112	; 0x70
 800bf1a:	f04f 0200 	mov.w	r2, #0
 800bf1e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = 0;
 800bf20:	79ba      	ldrb	r2, [r7, #6]
 800bf22:	494a      	ldr	r1, [pc, #296]	; (800c04c <config_motors+0x640>)
 800bf24:	4613      	mov	r3, r2
 800bf26:	011b      	lsls	r3, r3, #4
 800bf28:	1a9b      	subs	r3, r3, r2
 800bf2a:	011b      	lsls	r3, r3, #4
 800bf2c:	440b      	add	r3, r1
 800bf2e:	3380      	adds	r3, #128	; 0x80
 800bf30:	f04f 0200 	mov.w	r2, #0
 800bf34:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = 0;
 800bf36:	79ba      	ldrb	r2, [r7, #6]
 800bf38:	4944      	ldr	r1, [pc, #272]	; (800c04c <config_motors+0x640>)
 800bf3a:	4613      	mov	r3, r2
 800bf3c:	011b      	lsls	r3, r3, #4
 800bf3e:	1a9b      	subs	r3, r3, r2
 800bf40:	011b      	lsls	r3, r3, #4
 800bf42:	440b      	add	r3, r1
 800bf44:	3384      	adds	r3, #132	; 0x84
 800bf46:	f04f 0200 	mov.w	r2, #0
 800bf4a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bf4c:	79ba      	ldrb	r2, [r7, #6]
 800bf4e:	493f      	ldr	r1, [pc, #252]	; (800c04c <config_motors+0x640>)
 800bf50:	4613      	mov	r3, r2
 800bf52:	011b      	lsls	r3, r3, #4
 800bf54:	1a9b      	subs	r3, r3, r2
 800bf56:	011b      	lsls	r3, r3, #4
 800bf58:	440b      	add	r3, r1
 800bf5a:	3338      	adds	r3, #56	; 0x38
 800bf5c:	4a3d      	ldr	r2, [pc, #244]	; (800c054 <config_motors+0x648>)
 800bf5e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bf60:	79ba      	ldrb	r2, [r7, #6]
 800bf62:	493a      	ldr	r1, [pc, #232]	; (800c04c <config_motors+0x640>)
 800bf64:	4613      	mov	r3, r2
 800bf66:	011b      	lsls	r3, r3, #4
 800bf68:	1a9b      	subs	r3, r3, r2
 800bf6a:	011b      	lsls	r3, r3, #4
 800bf6c:	440b      	add	r3, r1
 800bf6e:	333c      	adds	r3, #60	; 0x3c
 800bf70:	4a39      	ldr	r2, [pc, #228]	; (800c058 <config_motors+0x64c>)
 800bf72:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bf74:	79ba      	ldrb	r2, [r7, #6]
 800bf76:	4935      	ldr	r1, [pc, #212]	; (800c04c <config_motors+0x640>)
 800bf78:	4613      	mov	r3, r2
 800bf7a:	011b      	lsls	r3, r3, #4
 800bf7c:	1a9b      	subs	r3, r3, r2
 800bf7e:	011b      	lsls	r3, r3, #4
 800bf80:	440b      	add	r3, r1
 800bf82:	3340      	adds	r3, #64	; 0x40
 800bf84:	4a35      	ldr	r2, [pc, #212]	; (800c05c <config_motors+0x650>)
 800bf86:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bf88:	79ba      	ldrb	r2, [r7, #6]
 800bf8a:	4930      	ldr	r1, [pc, #192]	; (800c04c <config_motors+0x640>)
 800bf8c:	4613      	mov	r3, r2
 800bf8e:	011b      	lsls	r3, r3, #4
 800bf90:	1a9b      	subs	r3, r3, r2
 800bf92:	011b      	lsls	r3, r3, #4
 800bf94:	440b      	add	r3, r1
 800bf96:	3350      	adds	r3, #80	; 0x50
 800bf98:	4a31      	ldr	r2, [pc, #196]	; (800c060 <config_motors+0x654>)
 800bf9a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bf9c:	79ba      	ldrb	r2, [r7, #6]
 800bf9e:	492b      	ldr	r1, [pc, #172]	; (800c04c <config_motors+0x640>)
 800bfa0:	4613      	mov	r3, r2
 800bfa2:	011b      	lsls	r3, r3, #4
 800bfa4:	1a9b      	subs	r3, r3, r2
 800bfa6:	011b      	lsls	r3, r3, #4
 800bfa8:	440b      	add	r3, r1
 800bfaa:	3354      	adds	r3, #84	; 0x54
 800bfac:	4a2d      	ldr	r2, [pc, #180]	; (800c064 <config_motors+0x658>)
 800bfae:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 800bfb0:	2316      	movs	r3, #22
 800bfb2:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800bfb4:	79ba      	ldrb	r2, [r7, #6]
 800bfb6:	4925      	ldr	r1, [pc, #148]	; (800c04c <config_motors+0x640>)
 800bfb8:	4613      	mov	r3, r2
 800bfba:	011b      	lsls	r3, r3, #4
 800bfbc:	1a9b      	subs	r3, r3, r2
 800bfbe:	011b      	lsls	r3, r3, #4
 800bfc0:	440b      	add	r3, r1
 800bfc2:	3302      	adds	r3, #2
 800bfc4:	2204      	movs	r2, #4
 800bfc6:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800bfc8:	79ba      	ldrb	r2, [r7, #6]
 800bfca:	4613      	mov	r3, r2
 800bfcc:	011b      	lsls	r3, r3, #4
 800bfce:	1a9b      	subs	r3, r3, r2
 800bfd0:	011b      	lsls	r3, r3, #4
 800bfd2:	4a1e      	ldr	r2, [pc, #120]	; (800c04c <config_motors+0x640>)
 800bfd4:	4413      	add	r3, r2
 800bfd6:	4618      	mov	r0, r3
 800bfd8:	f7ff fcb2 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800bfdc:	79ba      	ldrb	r2, [r7, #6]
 800bfde:	491b      	ldr	r1, [pc, #108]	; (800c04c <config_motors+0x640>)
 800bfe0:	4613      	mov	r3, r2
 800bfe2:	011b      	lsls	r3, r3, #4
 800bfe4:	1a9b      	subs	r3, r3, r2
 800bfe6:	011b      	lsls	r3, r3, #4
 800bfe8:	440b      	add	r3, r1
 800bfea:	33c8      	adds	r3, #200	; 0xc8
 800bfec:	4a1f      	ldr	r2, [pc, #124]	; (800c06c <config_motors+0x660>)
 800bfee:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800bff0:	79ba      	ldrb	r2, [r7, #6]
 800bff2:	4916      	ldr	r1, [pc, #88]	; (800c04c <config_motors+0x640>)
 800bff4:	4613      	mov	r3, r2
 800bff6:	011b      	lsls	r3, r3, #4
 800bff8:	1a9b      	subs	r3, r3, r2
 800bffa:	011b      	lsls	r3, r3, #4
 800bffc:	440b      	add	r3, r1
 800bffe:	338c      	adds	r3, #140	; 0x8c
 800c000:	4a1b      	ldr	r2, [pc, #108]	; (800c070 <config_motors+0x664>)
 800c002:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800c004:	79ba      	ldrb	r2, [r7, #6]
 800c006:	4911      	ldr	r1, [pc, #68]	; (800c04c <config_motors+0x640>)
 800c008:	4613      	mov	r3, r2
 800c00a:	011b      	lsls	r3, r3, #4
 800c00c:	1a9b      	subs	r3, r3, r2
 800c00e:	011b      	lsls	r3, r3, #4
 800c010:	440b      	add	r3, r1
 800c012:	3338      	adds	r3, #56	; 0x38
 800c014:	f04f 4281 	mov.w	r2, #1082130432	; 0x40800000
 800c018:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800c01a:	79ba      	ldrb	r2, [r7, #6]
 800c01c:	490b      	ldr	r1, [pc, #44]	; (800c04c <config_motors+0x640>)
 800c01e:	4613      	mov	r3, r2
 800c020:	011b      	lsls	r3, r3, #4
 800c022:	1a9b      	subs	r3, r3, r2
 800c024:	011b      	lsls	r3, r3, #4
 800c026:	440b      	add	r3, r1
 800c028:	333c      	adds	r3, #60	; 0x3c
 800c02a:	4a12      	ldr	r2, [pc, #72]	; (800c074 <config_motors+0x668>)
 800c02c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800c02e:	79ba      	ldrb	r2, [r7, #6]
 800c030:	4906      	ldr	r1, [pc, #24]	; (800c04c <config_motors+0x640>)
 800c032:	4613      	mov	r3, r2
 800c034:	011b      	lsls	r3, r3, #4
 800c036:	1a9b      	subs	r3, r3, r2
 800c038:	011b      	lsls	r3, r3, #4
 800c03a:	440b      	add	r3, r1
 800c03c:	3340      	adds	r3, #64	; 0x40
 800c03e:	f04f 0200 	mov.w	r2, #0
 800c042:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800c044:	79ba      	ldrb	r2, [r7, #6]
 800c046:	e017      	b.n	800c078 <config_motors+0x66c>
 800c048:	c0c90fdb 	.word	0xc0c90fdb
 800c04c:	200018a8 	.word	0x200018a8
 800c050:	40f40000 	.word	0x40f40000
 800c054:	41200000 	.word	0x41200000
 800c058:	3dcccccd 	.word	0x3dcccccd
 800c05c:	40a00000 	.word	0x40a00000
 800c060:	461c4000 	.word	0x461c4000
 800c064:	457a0000 	.word	0x457a0000
 800c068:	40c90fdb 	.word	0x40c90fdb
 800c06c:	4199999a 	.word	0x4199999a
 800c070:	460ca000 	.word	0x460ca000
 800c074:	3b03126f 	.word	0x3b03126f
 800c078:	49c1      	ldr	r1, [pc, #772]	; (800c380 <config_motors+0x974>)
 800c07a:	4613      	mov	r3, r2
 800c07c:	011b      	lsls	r3, r3, #4
 800c07e:	1a9b      	subs	r3, r3, r2
 800c080:	011b      	lsls	r3, r3, #4
 800c082:	440b      	add	r3, r1
 800c084:	3350      	adds	r3, #80	; 0x50
 800c086:	4abf      	ldr	r2, [pc, #764]	; (800c384 <config_motors+0x978>)
 800c088:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800c08a:	79ba      	ldrb	r2, [r7, #6]
 800c08c:	49bc      	ldr	r1, [pc, #752]	; (800c380 <config_motors+0x974>)
 800c08e:	4613      	mov	r3, r2
 800c090:	011b      	lsls	r3, r3, #4
 800c092:	1a9b      	subs	r3, r3, r2
 800c094:	011b      	lsls	r3, r3, #4
 800c096:	440b      	add	r3, r1
 800c098:	3354      	adds	r3, #84	; 0x54
 800c09a:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800c09e:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 800c0a0:	2312      	movs	r3, #18
 800c0a2:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800c0a4:	79ba      	ldrb	r2, [r7, #6]
 800c0a6:	49b6      	ldr	r1, [pc, #728]	; (800c380 <config_motors+0x974>)
 800c0a8:	4613      	mov	r3, r2
 800c0aa:	011b      	lsls	r3, r3, #4
 800c0ac:	1a9b      	subs	r3, r3, r2
 800c0ae:	011b      	lsls	r3, r3, #4
 800c0b0:	440b      	add	r3, r1
 800c0b2:	3302      	adds	r3, #2
 800c0b4:	2204      	movs	r2, #4
 800c0b6:	701a      	strb	r2, [r3, #0]
	can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800c0b8:	79ba      	ldrb	r2, [r7, #6]
 800c0ba:	49b1      	ldr	r1, [pc, #708]	; (800c380 <config_motors+0x974>)
 800c0bc:	4613      	mov	r3, r2
 800c0be:	011b      	lsls	r3, r3, #4
 800c0c0:	1a9b      	subs	r3, r3, r2
 800c0c2:	011b      	lsls	r3, r3, #4
 800c0c4:	440b      	add	r3, r1
 800c0c6:	338c      	adds	r3, #140	; 0x8c
 800c0c8:	4aaf      	ldr	r2, [pc, #700]	; (800c388 <config_motors+0x97c>)
 800c0ca:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800c0cc:	79ba      	ldrb	r2, [r7, #6]
 800c0ce:	49ac      	ldr	r1, [pc, #688]	; (800c380 <config_motors+0x974>)
 800c0d0:	4613      	mov	r3, r2
 800c0d2:	011b      	lsls	r3, r3, #4
 800c0d4:	1a9b      	subs	r3, r3, r2
 800c0d6:	011b      	lsls	r3, r3, #4
 800c0d8:	440b      	add	r3, r1
 800c0da:	3338      	adds	r3, #56	; 0x38
 800c0dc:	f04f 4281 	mov.w	r2, #1082130432	; 0x40800000
 800c0e0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800c0e2:	79ba      	ldrb	r2, [r7, #6]
 800c0e4:	49a6      	ldr	r1, [pc, #664]	; (800c380 <config_motors+0x974>)
 800c0e6:	4613      	mov	r3, r2
 800c0e8:	011b      	lsls	r3, r3, #4
 800c0ea:	1a9b      	subs	r3, r3, r2
 800c0ec:	011b      	lsls	r3, r3, #4
 800c0ee:	440b      	add	r3, r1
 800c0f0:	333c      	adds	r3, #60	; 0x3c
 800c0f2:	4aa6      	ldr	r2, [pc, #664]	; (800c38c <config_motors+0x980>)
 800c0f4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800c0f6:	79ba      	ldrb	r2, [r7, #6]
 800c0f8:	49a1      	ldr	r1, [pc, #644]	; (800c380 <config_motors+0x974>)
 800c0fa:	4613      	mov	r3, r2
 800c0fc:	011b      	lsls	r3, r3, #4
 800c0fe:	1a9b      	subs	r3, r3, r2
 800c100:	011b      	lsls	r3, r3, #4
 800c102:	440b      	add	r3, r1
 800c104:	3340      	adds	r3, #64	; 0x40
 800c106:	f04f 0200 	mov.w	r2, #0
 800c10a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800c10c:	79ba      	ldrb	r2, [r7, #6]
 800c10e:	499c      	ldr	r1, [pc, #624]	; (800c380 <config_motors+0x974>)
 800c110:	4613      	mov	r3, r2
 800c112:	011b      	lsls	r3, r3, #4
 800c114:	1a9b      	subs	r3, r3, r2
 800c116:	011b      	lsls	r3, r3, #4
 800c118:	440b      	add	r3, r1
 800c11a:	3350      	adds	r3, #80	; 0x50
 800c11c:	4a99      	ldr	r2, [pc, #612]	; (800c384 <config_motors+0x978>)
 800c11e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800c120:	79ba      	ldrb	r2, [r7, #6]
 800c122:	4997      	ldr	r1, [pc, #604]	; (800c380 <config_motors+0x974>)
 800c124:	4613      	mov	r3, r2
 800c126:	011b      	lsls	r3, r3, #4
 800c128:	1a9b      	subs	r3, r3, r2
 800c12a:	011b      	lsls	r3, r3, #4
 800c12c:	440b      	add	r3, r1
 800c12e:	3354      	adds	r3, #84	; 0x54
 800c130:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800c134:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800c136:	79ba      	ldrb	r2, [r7, #6]
 800c138:	4991      	ldr	r1, [pc, #580]	; (800c380 <config_motors+0x974>)
 800c13a:	4613      	mov	r3, r2
 800c13c:	011b      	lsls	r3, r3, #4
 800c13e:	1a9b      	subs	r3, r3, r2
 800c140:	011b      	lsls	r3, r3, #4
 800c142:	440b      	add	r3, r1
 800c144:	335c      	adds	r3, #92	; 0x5c
 800c146:	f04f 428d 	mov.w	r2, #1182793728	; 0x46800000
 800c14a:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 800c14c:	2311      	movs	r3, #17
 800c14e:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	can_motors[motor_id].motor_type = TYPE_M2006;
 800c150:	79ba      	ldrb	r2, [r7, #6]
 800c152:	498b      	ldr	r1, [pc, #556]	; (800c380 <config_motors+0x974>)
 800c154:	4613      	mov	r3, r2
 800c156:	011b      	lsls	r3, r3, #4
 800c158:	1a9b      	subs	r3, r3, r2
 800c15a:	011b      	lsls	r3, r3, #4
 800c15c:	440b      	add	r3, r1
 800c15e:	3302      	adds	r3, #2
 800c160:	2202      	movs	r2, #2
 800c162:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&can_motors[motor_id]);
 800c164:	79ba      	ldrb	r2, [r7, #6]
 800c166:	4613      	mov	r3, r2
 800c168:	011b      	lsls	r3, r3, #4
 800c16a:	1a9b      	subs	r3, r3, r2
 800c16c:	011b      	lsls	r3, r3, #4
 800c16e:	4a84      	ldr	r2, [pc, #528]	; (800c380 <config_motors+0x974>)
 800c170:	4413      	add	r3, r2
 800c172:	4618      	mov	r0, r3
 800c174:	f7ff fbe4 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.max_ang = PI * 5000; //so it can rotate 5000 times oops
 800c178:	79ba      	ldrb	r2, [r7, #6]
 800c17a:	4981      	ldr	r1, [pc, #516]	; (800c380 <config_motors+0x974>)
 800c17c:	4613      	mov	r3, r2
 800c17e:	011b      	lsls	r3, r3, #4
 800c180:	1a9b      	subs	r3, r3, r2
 800c182:	011b      	lsls	r3, r3, #4
 800c184:	440b      	add	r3, r1
 800c186:	33b8      	adds	r3, #184	; 0xb8
 800c188:	4a81      	ldr	r2, [pc, #516]	; (800c390 <config_motors+0x984>)
 800c18a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = -PI * 5000;
 800c18c:	79ba      	ldrb	r2, [r7, #6]
 800c18e:	497c      	ldr	r1, [pc, #496]	; (800c380 <config_motors+0x974>)
 800c190:	4613      	mov	r3, r2
 800c192:	011b      	lsls	r3, r3, #4
 800c194:	1a9b      	subs	r3, r3, r2
 800c196:	011b      	lsls	r3, r3, #4
 800c198:	440b      	add	r3, r1
 800c19a:	33b4      	adds	r3, #180	; 0xb4
 800c19c:	4a7d      	ldr	r2, [pc, #500]	; (800c394 <config_motors+0x988>)
 800c19e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c1a0:	79ba      	ldrb	r2, [r7, #6]
 800c1a2:	4977      	ldr	r1, [pc, #476]	; (800c380 <config_motors+0x974>)
 800c1a4:	4613      	mov	r3, r2
 800c1a6:	011b      	lsls	r3, r3, #4
 800c1a8:	1a9b      	subs	r3, r3, r2
 800c1aa:	011b      	lsls	r3, r3, #4
 800c1ac:	440b      	add	r3, r1
 800c1ae:	33c4      	adds	r3, #196	; 0xc4
 800c1b0:	4a79      	ldr	r2, [pc, #484]	; (800c398 <config_motors+0x98c>)
 800c1b2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c1b4:	79ba      	ldrb	r2, [r7, #6]
 800c1b6:	4972      	ldr	r1, [pc, #456]	; (800c380 <config_motors+0x974>)
 800c1b8:	4613      	mov	r3, r2
 800c1ba:	011b      	lsls	r3, r3, #4
 800c1bc:	1a9b      	subs	r3, r3, r2
 800c1be:	011b      	lsls	r3, r3, #4
 800c1c0:	440b      	add	r3, r1
 800c1c2:	33c0      	adds	r3, #192	; 0xc0
 800c1c4:	4a75      	ldr	r2, [pc, #468]	; (800c39c <config_motors+0x990>)
 800c1c6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c1c8:	79ba      	ldrb	r2, [r7, #6]
 800c1ca:	496d      	ldr	r1, [pc, #436]	; (800c380 <config_motors+0x974>)
 800c1cc:	4613      	mov	r3, r2
 800c1ce:	011b      	lsls	r3, r3, #4
 800c1d0:	1a9b      	subs	r3, r3, r2
 800c1d2:	011b      	lsls	r3, r3, #4
 800c1d4:	440b      	add	r3, r1
 800c1d6:	33d4      	adds	r3, #212	; 0xd4
 800c1d8:	f04f 0200 	mov.w	r2, #0
 800c1dc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 800c1de:	79ba      	ldrb	r2, [r7, #6]
 800c1e0:	4967      	ldr	r1, [pc, #412]	; (800c380 <config_motors+0x974>)
 800c1e2:	4613      	mov	r3, r2
 800c1e4:	011b      	lsls	r3, r3, #4
 800c1e6:	1a9b      	subs	r3, r3, r2
 800c1e8:	011b      	lsls	r3, r3, #4
 800c1ea:	440b      	add	r3, r1
 800c1ec:	3368      	adds	r3, #104	; 0x68
 800c1ee:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800c1f2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 800c1f4:	79ba      	ldrb	r2, [r7, #6]
 800c1f6:	4962      	ldr	r1, [pc, #392]	; (800c380 <config_motors+0x974>)
 800c1f8:	4613      	mov	r3, r2
 800c1fa:	011b      	lsls	r3, r3, #4
 800c1fc:	1a9b      	subs	r3, r3, r2
 800c1fe:	011b      	lsls	r3, r3, #4
 800c200:	440b      	add	r3, r1
 800c202:	336c      	adds	r3, #108	; 0x6c
 800c204:	f04f 0200 	mov.w	r2, #0
 800c208:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 800c20a:	79ba      	ldrb	r2, [r7, #6]
 800c20c:	495c      	ldr	r1, [pc, #368]	; (800c380 <config_motors+0x974>)
 800c20e:	4613      	mov	r3, r2
 800c210:	011b      	lsls	r3, r3, #4
 800c212:	1a9b      	subs	r3, r3, r2
 800c214:	011b      	lsls	r3, r3, #4
 800c216:	440b      	add	r3, r1
 800c218:	3370      	adds	r3, #112	; 0x70
 800c21a:	f04f 0200 	mov.w	r2, #0
 800c21e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 800c220:	79ba      	ldrb	r2, [r7, #6]
 800c222:	4957      	ldr	r1, [pc, #348]	; (800c380 <config_motors+0x974>)
 800c224:	4613      	mov	r3, r2
 800c226:	011b      	lsls	r3, r3, #4
 800c228:	1a9b      	subs	r3, r3, r2
 800c22a:	011b      	lsls	r3, r3, #4
 800c22c:	440b      	add	r3, r1
 800c22e:	3380      	adds	r3, #128	; 0x80
 800c230:	f04f 0200 	mov.w	r2, #0
 800c234:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 800c236:	79ba      	ldrb	r2, [r7, #6]
 800c238:	4951      	ldr	r1, [pc, #324]	; (800c380 <config_motors+0x974>)
 800c23a:	4613      	mov	r3, r2
 800c23c:	011b      	lsls	r3, r3, #4
 800c23e:	1a9b      	subs	r3, r3, r2
 800c240:	011b      	lsls	r3, r3, #4
 800c242:	440b      	add	r3, r1
 800c244:	3384      	adds	r3, #132	; 0x84
 800c246:	4a56      	ldr	r2, [pc, #344]	; (800c3a0 <config_motors+0x994>)
 800c248:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 800c24a:	79ba      	ldrb	r2, [r7, #6]
 800c24c:	494c      	ldr	r1, [pc, #304]	; (800c380 <config_motors+0x974>)
 800c24e:	4613      	mov	r3, r2
 800c250:	011b      	lsls	r3, r3, #4
 800c252:	1a9b      	subs	r3, r3, r2
 800c254:	011b      	lsls	r3, r3, #4
 800c256:	440b      	add	r3, r1
 800c258:	3338      	adds	r3, #56	; 0x38
 800c25a:	4a52      	ldr	r2, [pc, #328]	; (800c3a4 <config_motors+0x998>)
 800c25c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 800c25e:	79ba      	ldrb	r2, [r7, #6]
 800c260:	4947      	ldr	r1, [pc, #284]	; (800c380 <config_motors+0x974>)
 800c262:	4613      	mov	r3, r2
 800c264:	011b      	lsls	r3, r3, #4
 800c266:	1a9b      	subs	r3, r3, r2
 800c268:	011b      	lsls	r3, r3, #4
 800c26a:	440b      	add	r3, r1
 800c26c:	333c      	adds	r3, #60	; 0x3c
 800c26e:	4a4e      	ldr	r2, [pc, #312]	; (800c3a8 <config_motors+0x99c>)
 800c270:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 800c272:	79ba      	ldrb	r2, [r7, #6]
 800c274:	4942      	ldr	r1, [pc, #264]	; (800c380 <config_motors+0x974>)
 800c276:	4613      	mov	r3, r2
 800c278:	011b      	lsls	r3, r3, #4
 800c27a:	1a9b      	subs	r3, r3, r2
 800c27c:	011b      	lsls	r3, r3, #4
 800c27e:	440b      	add	r3, r1
 800c280:	3340      	adds	r3, #64	; 0x40
 800c282:	4a4a      	ldr	r2, [pc, #296]	; (800c3ac <config_motors+0x9a0>)
 800c284:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 800c286:	79ba      	ldrb	r2, [r7, #6]
 800c288:	493d      	ldr	r1, [pc, #244]	; (800c380 <config_motors+0x974>)
 800c28a:	4613      	mov	r3, r2
 800c28c:	011b      	lsls	r3, r3, #4
 800c28e:	1a9b      	subs	r3, r3, r2
 800c290:	011b      	lsls	r3, r3, #4
 800c292:	440b      	add	r3, r1
 800c294:	3350      	adds	r3, #80	; 0x50
 800c296:	4a3b      	ldr	r2, [pc, #236]	; (800c384 <config_motors+0x978>)
 800c298:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 800c29a:	79ba      	ldrb	r2, [r7, #6]
 800c29c:	4938      	ldr	r1, [pc, #224]	; (800c380 <config_motors+0x974>)
 800c29e:	4613      	mov	r3, r2
 800c2a0:	011b      	lsls	r3, r3, #4
 800c2a2:	1a9b      	subs	r3, r3, r2
 800c2a4:	011b      	lsls	r3, r3, #4
 800c2a6:	440b      	add	r3, r1
 800c2a8:	3354      	adds	r3, #84	; 0x54
 800c2aa:	4a36      	ldr	r2, [pc, #216]	; (800c384 <config_motors+0x978>)
 800c2ac:	601a      	str	r2, [r3, #0]
#endif

#ifdef L1_MOTOR_ID
	motor_id = L1_MOTOR_ID - 1;
 800c2ae:	2307      	movs	r3, #7
 800c2b0:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c2b2:	79ba      	ldrb	r2, [r7, #6]
 800c2b4:	4932      	ldr	r1, [pc, #200]	; (800c380 <config_motors+0x974>)
 800c2b6:	4613      	mov	r3, r2
 800c2b8:	011b      	lsls	r3, r3, #4
 800c2ba:	1a9b      	subs	r3, r3, r2
 800c2bc:	011b      	lsls	r3, r3, #4
 800c2be:	440b      	add	r3, r1
 800c2c0:	3302      	adds	r3, #2
 800c2c2:	2201      	movs	r2, #1
 800c2c4:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c2c6:	79ba      	ldrb	r2, [r7, #6]
 800c2c8:	4613      	mov	r3, r2
 800c2ca:	011b      	lsls	r3, r3, #4
 800c2cc:	1a9b      	subs	r3, r3, r2
 800c2ce:	011b      	lsls	r3, r3, #4
 800c2d0:	4a2b      	ldr	r2, [pc, #172]	; (800c380 <config_motors+0x974>)
 800c2d2:	4413      	add	r3, r2
 800c2d4:	4618      	mov	r0, r3
 800c2d6:	f7ff fb33 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c2da:	79ba      	ldrb	r2, [r7, #6]
 800c2dc:	4928      	ldr	r1, [pc, #160]	; (800c380 <config_motors+0x974>)
 800c2de:	4613      	mov	r3, r2
 800c2e0:	011b      	lsls	r3, r3, #4
 800c2e2:	1a9b      	subs	r3, r3, r2
 800c2e4:	011b      	lsls	r3, r3, #4
 800c2e6:	440b      	add	r3, r1
 800c2e8:	33c8      	adds	r3, #200	; 0xc8
 800c2ea:	f04f 0200 	mov.w	r2, #0
 800c2ee:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = L1_CENTER;
 800c2f0:	79ba      	ldrb	r2, [r7, #6]
 800c2f2:	4923      	ldr	r1, [pc, #140]	; (800c380 <config_motors+0x974>)
 800c2f4:	4613      	mov	r3, r2
 800c2f6:	011b      	lsls	r3, r3, #4
 800c2f8:	1a9b      	subs	r3, r3, r2
 800c2fa:	011b      	lsls	r3, r3, #4
 800c2fc:	440b      	add	r3, r1
 800c2fe:	339c      	adds	r3, #156	; 0x9c
 800c300:	f641 222c 	movw	r2, #6700	; 0x1a2c
 800c304:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = L1_MAX_ANG;
 800c306:	79ba      	ldrb	r2, [r7, #6]
 800c308:	491d      	ldr	r1, [pc, #116]	; (800c380 <config_motors+0x974>)
 800c30a:	4613      	mov	r3, r2
 800c30c:	011b      	lsls	r3, r3, #4
 800c30e:	1a9b      	subs	r3, r3, r2
 800c310:	011b      	lsls	r3, r3, #4
 800c312:	440b      	add	r3, r1
 800c314:	33b8      	adds	r3, #184	; 0xb8
 800c316:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c31a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = L1_MIN_ANG;
 800c31c:	79ba      	ldrb	r2, [r7, #6]
 800c31e:	4918      	ldr	r1, [pc, #96]	; (800c380 <config_motors+0x974>)
 800c320:	4613      	mov	r3, r2
 800c322:	011b      	lsls	r3, r3, #4
 800c324:	1a9b      	subs	r3, r3, r2
 800c326:	011b      	lsls	r3, r3, #4
 800c328:	440b      	add	r3, r1
 800c32a:	33b4      	adds	r3, #180	; 0xb4
 800c32c:	4a20      	ldr	r2, [pc, #128]	; (800c3b0 <config_motors+0x9a4>)
 800c32e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c330:	79ba      	ldrb	r2, [r7, #6]
 800c332:	4913      	ldr	r1, [pc, #76]	; (800c380 <config_motors+0x974>)
 800c334:	4613      	mov	r3, r2
 800c336:	011b      	lsls	r3, r3, #4
 800c338:	1a9b      	subs	r3, r3, r2
 800c33a:	011b      	lsls	r3, r3, #4
 800c33c:	440b      	add	r3, r1
 800c33e:	33c4      	adds	r3, #196	; 0xc4
 800c340:	4a15      	ldr	r2, [pc, #84]	; (800c398 <config_motors+0x98c>)
 800c342:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c344:	79ba      	ldrb	r2, [r7, #6]
 800c346:	490e      	ldr	r1, [pc, #56]	; (800c380 <config_motors+0x974>)
 800c348:	4613      	mov	r3, r2
 800c34a:	011b      	lsls	r3, r3, #4
 800c34c:	1a9b      	subs	r3, r3, r2
 800c34e:	011b      	lsls	r3, r3, #4
 800c350:	440b      	add	r3, r1
 800c352:	33c0      	adds	r3, #192	; 0xc0
 800c354:	4a11      	ldr	r2, [pc, #68]	; (800c39c <config_motors+0x990>)
 800c356:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c358:	79ba      	ldrb	r2, [r7, #6]
 800c35a:	4909      	ldr	r1, [pc, #36]	; (800c380 <config_motors+0x974>)
 800c35c:	4613      	mov	r3, r2
 800c35e:	011b      	lsls	r3, r3, #4
 800c360:	1a9b      	subs	r3, r3, r2
 800c362:	011b      	lsls	r3, r3, #4
 800c364:	440b      	add	r3, r1
 800c366:	33d4      	adds	r3, #212	; 0xd4
 800c368:	f04f 0200 	mov.w	r2, #0
 800c36c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c36e:	79ba      	ldrb	r2, [r7, #6]
 800c370:	4903      	ldr	r1, [pc, #12]	; (800c380 <config_motors+0x974>)
 800c372:	4613      	mov	r3, r2
 800c374:	011b      	lsls	r3, r3, #4
 800c376:	1a9b      	subs	r3, r3, r2
 800c378:	011b      	lsls	r3, r3, #4
 800c37a:	440b      	add	r3, r1
 800c37c:	3368      	adds	r3, #104	; 0x68
 800c37e:	e019      	b.n	800c3b4 <config_motors+0x9a8>
 800c380:	200018a8 	.word	0x200018a8
 800c384:	461c4000 	.word	0x461c4000
 800c388:	460ca000 	.word	0x460ca000
 800c38c:	3b03126f 	.word	0x3b03126f
 800c390:	46756fdb 	.word	0x46756fdb
 800c394:	c6756fdb 	.word	0xc6756fdb
 800c398:	40c90fdb 	.word	0x40c90fdb
 800c39c:	c0c90fdb 	.word	0xc0c90fdb
 800c3a0:	42c80000 	.word	0x42c80000
 800c3a4:	40e00000 	.word	0x40e00000
 800c3a8:	3ca3d70a 	.word	0x3ca3d70a
 800c3ac:	40400000 	.word	0x40400000
 800c3b0:	bfc00000 	.word	0xbfc00000
 800c3b4:	4abe      	ldr	r2, [pc, #760]	; (800c6b0 <config_motors+0xca4>)
 800c3b6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c3b8:	79ba      	ldrb	r2, [r7, #6]
 800c3ba:	49be      	ldr	r1, [pc, #760]	; (800c6b4 <config_motors+0xca8>)
 800c3bc:	4613      	mov	r3, r2
 800c3be:	011b      	lsls	r3, r3, #4
 800c3c0:	1a9b      	subs	r3, r3, r2
 800c3c2:	011b      	lsls	r3, r3, #4
 800c3c4:	440b      	add	r3, r1
 800c3c6:	336c      	adds	r3, #108	; 0x6c
 800c3c8:	f04f 0200 	mov.w	r2, #0
 800c3cc:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c3ce:	79ba      	ldrb	r2, [r7, #6]
 800c3d0:	49b8      	ldr	r1, [pc, #736]	; (800c6b4 <config_motors+0xca8>)
 800c3d2:	4613      	mov	r3, r2
 800c3d4:	011b      	lsls	r3, r3, #4
 800c3d6:	1a9b      	subs	r3, r3, r2
 800c3d8:	011b      	lsls	r3, r3, #4
 800c3da:	440b      	add	r3, r1
 800c3dc:	3370      	adds	r3, #112	; 0x70
 800c3de:	f04f 0200 	mov.w	r2, #0
 800c3e2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c3e4:	79ba      	ldrb	r2, [r7, #6]
 800c3e6:	49b3      	ldr	r1, [pc, #716]	; (800c6b4 <config_motors+0xca8>)
 800c3e8:	4613      	mov	r3, r2
 800c3ea:	011b      	lsls	r3, r3, #4
 800c3ec:	1a9b      	subs	r3, r3, r2
 800c3ee:	011b      	lsls	r3, r3, #4
 800c3f0:	440b      	add	r3, r1
 800c3f2:	3380      	adds	r3, #128	; 0x80
 800c3f4:	4ab0      	ldr	r2, [pc, #704]	; (800c6b8 <config_motors+0xcac>)
 800c3f6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c3f8:	79ba      	ldrb	r2, [r7, #6]
 800c3fa:	49ae      	ldr	r1, [pc, #696]	; (800c6b4 <config_motors+0xca8>)
 800c3fc:	4613      	mov	r3, r2
 800c3fe:	011b      	lsls	r3, r3, #4
 800c400:	1a9b      	subs	r3, r3, r2
 800c402:	011b      	lsls	r3, r3, #4
 800c404:	440b      	add	r3, r1
 800c406:	3384      	adds	r3, #132	; 0x84
 800c408:	4aa9      	ldr	r2, [pc, #676]	; (800c6b0 <config_motors+0xca4>)
 800c40a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c40c:	79ba      	ldrb	r2, [r7, #6]
 800c40e:	49a9      	ldr	r1, [pc, #676]	; (800c6b4 <config_motors+0xca8>)
 800c410:	4613      	mov	r3, r2
 800c412:	011b      	lsls	r3, r3, #4
 800c414:	1a9b      	subs	r3, r3, r2
 800c416:	011b      	lsls	r3, r3, #4
 800c418:	440b      	add	r3, r1
 800c41a:	3338      	adds	r3, #56	; 0x38
 800c41c:	4aa4      	ldr	r2, [pc, #656]	; (800c6b0 <config_motors+0xca4>)
 800c41e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c420:	79ba      	ldrb	r2, [r7, #6]
 800c422:	49a4      	ldr	r1, [pc, #656]	; (800c6b4 <config_motors+0xca8>)
 800c424:	4613      	mov	r3, r2
 800c426:	011b      	lsls	r3, r3, #4
 800c428:	1a9b      	subs	r3, r3, r2
 800c42a:	011b      	lsls	r3, r3, #4
 800c42c:	440b      	add	r3, r1
 800c42e:	333c      	adds	r3, #60	; 0x3c
 800c430:	4aa2      	ldr	r2, [pc, #648]	; (800c6bc <config_motors+0xcb0>)
 800c432:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c434:	79ba      	ldrb	r2, [r7, #6]
 800c436:	499f      	ldr	r1, [pc, #636]	; (800c6b4 <config_motors+0xca8>)
 800c438:	4613      	mov	r3, r2
 800c43a:	011b      	lsls	r3, r3, #4
 800c43c:	1a9b      	subs	r3, r3, r2
 800c43e:	011b      	lsls	r3, r3, #4
 800c440:	440b      	add	r3, r1
 800c442:	3340      	adds	r3, #64	; 0x40
 800c444:	f04f 0200 	mov.w	r2, #0
 800c448:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c44a:	79ba      	ldrb	r2, [r7, #6]
 800c44c:	4999      	ldr	r1, [pc, #612]	; (800c6b4 <config_motors+0xca8>)
 800c44e:	4613      	mov	r3, r2
 800c450:	011b      	lsls	r3, r3, #4
 800c452:	1a9b      	subs	r3, r3, r2
 800c454:	011b      	lsls	r3, r3, #4
 800c456:	440b      	add	r3, r1
 800c458:	3350      	adds	r3, #80	; 0x50
 800c45a:	4a99      	ldr	r2, [pc, #612]	; (800c6c0 <config_motors+0xcb4>)
 800c45c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c45e:	79ba      	ldrb	r2, [r7, #6]
 800c460:	4994      	ldr	r1, [pc, #592]	; (800c6b4 <config_motors+0xca8>)
 800c462:	4613      	mov	r3, r2
 800c464:	011b      	lsls	r3, r3, #4
 800c466:	1a9b      	subs	r3, r3, r2
 800c468:	011b      	lsls	r3, r3, #4
 800c46a:	440b      	add	r3, r1
 800c46c:	3354      	adds	r3, #84	; 0x54
 800c46e:	4a95      	ldr	r2, [pc, #596]	; (800c6c4 <config_motors+0xcb8>)
 800c470:	601a      	str	r2, [r3, #0]
#endif

#ifdef L2_MOTOR_ID
	motor_id = L2_MOTOR_ID - 1;
 800c472:	2306      	movs	r3, #6
 800c474:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c476:	79ba      	ldrb	r2, [r7, #6]
 800c478:	498e      	ldr	r1, [pc, #568]	; (800c6b4 <config_motors+0xca8>)
 800c47a:	4613      	mov	r3, r2
 800c47c:	011b      	lsls	r3, r3, #4
 800c47e:	1a9b      	subs	r3, r3, r2
 800c480:	011b      	lsls	r3, r3, #4
 800c482:	440b      	add	r3, r1
 800c484:	3302      	adds	r3, #2
 800c486:	2201      	movs	r2, #1
 800c488:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c48a:	79ba      	ldrb	r2, [r7, #6]
 800c48c:	4613      	mov	r3, r2
 800c48e:	011b      	lsls	r3, r3, #4
 800c490:	1a9b      	subs	r3, r3, r2
 800c492:	011b      	lsls	r3, r3, #4
 800c494:	4a87      	ldr	r2, [pc, #540]	; (800c6b4 <config_motors+0xca8>)
 800c496:	4413      	add	r3, r2
 800c498:	4618      	mov	r0, r3
 800c49a:	f7ff fa51 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c49e:	79ba      	ldrb	r2, [r7, #6]
 800c4a0:	4984      	ldr	r1, [pc, #528]	; (800c6b4 <config_motors+0xca8>)
 800c4a2:	4613      	mov	r3, r2
 800c4a4:	011b      	lsls	r3, r3, #4
 800c4a6:	1a9b      	subs	r3, r3, r2
 800c4a8:	011b      	lsls	r3, r3, #4
 800c4aa:	440b      	add	r3, r1
 800c4ac:	33c8      	adds	r3, #200	; 0xc8
 800c4ae:	f04f 0200 	mov.w	r2, #0
 800c4b2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = L2_CENTER;
 800c4b4:	79ba      	ldrb	r2, [r7, #6]
 800c4b6:	497f      	ldr	r1, [pc, #508]	; (800c6b4 <config_motors+0xca8>)
 800c4b8:	4613      	mov	r3, r2
 800c4ba:	011b      	lsls	r3, r3, #4
 800c4bc:	1a9b      	subs	r3, r3, r2
 800c4be:	011b      	lsls	r3, r3, #4
 800c4c0:	440b      	add	r3, r1
 800c4c2:	339c      	adds	r3, #156	; 0x9c
 800c4c4:	f640 32b8 	movw	r2, #3000	; 0xbb8
 800c4c8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = L2_MAX_ANG;
 800c4ca:	79ba      	ldrb	r2, [r7, #6]
 800c4cc:	4979      	ldr	r1, [pc, #484]	; (800c6b4 <config_motors+0xca8>)
 800c4ce:	4613      	mov	r3, r2
 800c4d0:	011b      	lsls	r3, r3, #4
 800c4d2:	1a9b      	subs	r3, r3, r2
 800c4d4:	011b      	lsls	r3, r3, #4
 800c4d6:	440b      	add	r3, r1
 800c4d8:	33b8      	adds	r3, #184	; 0xb8
 800c4da:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c4de:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = L2_MIN_ANG;
 800c4e0:	79ba      	ldrb	r2, [r7, #6]
 800c4e2:	4974      	ldr	r1, [pc, #464]	; (800c6b4 <config_motors+0xca8>)
 800c4e4:	4613      	mov	r3, r2
 800c4e6:	011b      	lsls	r3, r3, #4
 800c4e8:	1a9b      	subs	r3, r3, r2
 800c4ea:	011b      	lsls	r3, r3, #4
 800c4ec:	440b      	add	r3, r1
 800c4ee:	33b4      	adds	r3, #180	; 0xb4
 800c4f0:	4a75      	ldr	r2, [pc, #468]	; (800c6c8 <config_motors+0xcbc>)
 800c4f2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c4f4:	79ba      	ldrb	r2, [r7, #6]
 800c4f6:	496f      	ldr	r1, [pc, #444]	; (800c6b4 <config_motors+0xca8>)
 800c4f8:	4613      	mov	r3, r2
 800c4fa:	011b      	lsls	r3, r3, #4
 800c4fc:	1a9b      	subs	r3, r3, r2
 800c4fe:	011b      	lsls	r3, r3, #4
 800c500:	440b      	add	r3, r1
 800c502:	33c4      	adds	r3, #196	; 0xc4
 800c504:	4a71      	ldr	r2, [pc, #452]	; (800c6cc <config_motors+0xcc0>)
 800c506:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c508:	79ba      	ldrb	r2, [r7, #6]
 800c50a:	496a      	ldr	r1, [pc, #424]	; (800c6b4 <config_motors+0xca8>)
 800c50c:	4613      	mov	r3, r2
 800c50e:	011b      	lsls	r3, r3, #4
 800c510:	1a9b      	subs	r3, r3, r2
 800c512:	011b      	lsls	r3, r3, #4
 800c514:	440b      	add	r3, r1
 800c516:	33c0      	adds	r3, #192	; 0xc0
 800c518:	4a6d      	ldr	r2, [pc, #436]	; (800c6d0 <config_motors+0xcc4>)
 800c51a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c51c:	79ba      	ldrb	r2, [r7, #6]
 800c51e:	4965      	ldr	r1, [pc, #404]	; (800c6b4 <config_motors+0xca8>)
 800c520:	4613      	mov	r3, r2
 800c522:	011b      	lsls	r3, r3, #4
 800c524:	1a9b      	subs	r3, r3, r2
 800c526:	011b      	lsls	r3, r3, #4
 800c528:	440b      	add	r3, r1
 800c52a:	33d4      	adds	r3, #212	; 0xd4
 800c52c:	f04f 0200 	mov.w	r2, #0
 800c530:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c532:	79ba      	ldrb	r2, [r7, #6]
 800c534:	495f      	ldr	r1, [pc, #380]	; (800c6b4 <config_motors+0xca8>)
 800c536:	4613      	mov	r3, r2
 800c538:	011b      	lsls	r3, r3, #4
 800c53a:	1a9b      	subs	r3, r3, r2
 800c53c:	011b      	lsls	r3, r3, #4
 800c53e:	440b      	add	r3, r1
 800c540:	3368      	adds	r3, #104	; 0x68
 800c542:	4a5b      	ldr	r2, [pc, #364]	; (800c6b0 <config_motors+0xca4>)
 800c544:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c546:	79ba      	ldrb	r2, [r7, #6]
 800c548:	495a      	ldr	r1, [pc, #360]	; (800c6b4 <config_motors+0xca8>)
 800c54a:	4613      	mov	r3, r2
 800c54c:	011b      	lsls	r3, r3, #4
 800c54e:	1a9b      	subs	r3, r3, r2
 800c550:	011b      	lsls	r3, r3, #4
 800c552:	440b      	add	r3, r1
 800c554:	336c      	adds	r3, #108	; 0x6c
 800c556:	f04f 0200 	mov.w	r2, #0
 800c55a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c55c:	79ba      	ldrb	r2, [r7, #6]
 800c55e:	4955      	ldr	r1, [pc, #340]	; (800c6b4 <config_motors+0xca8>)
 800c560:	4613      	mov	r3, r2
 800c562:	011b      	lsls	r3, r3, #4
 800c564:	1a9b      	subs	r3, r3, r2
 800c566:	011b      	lsls	r3, r3, #4
 800c568:	440b      	add	r3, r1
 800c56a:	3370      	adds	r3, #112	; 0x70
 800c56c:	f04f 0200 	mov.w	r2, #0
 800c570:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c572:	79ba      	ldrb	r2, [r7, #6]
 800c574:	494f      	ldr	r1, [pc, #316]	; (800c6b4 <config_motors+0xca8>)
 800c576:	4613      	mov	r3, r2
 800c578:	011b      	lsls	r3, r3, #4
 800c57a:	1a9b      	subs	r3, r3, r2
 800c57c:	011b      	lsls	r3, r3, #4
 800c57e:	440b      	add	r3, r1
 800c580:	3380      	adds	r3, #128	; 0x80
 800c582:	4a4d      	ldr	r2, [pc, #308]	; (800c6b8 <config_motors+0xcac>)
 800c584:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c586:	79ba      	ldrb	r2, [r7, #6]
 800c588:	494a      	ldr	r1, [pc, #296]	; (800c6b4 <config_motors+0xca8>)
 800c58a:	4613      	mov	r3, r2
 800c58c:	011b      	lsls	r3, r3, #4
 800c58e:	1a9b      	subs	r3, r3, r2
 800c590:	011b      	lsls	r3, r3, #4
 800c592:	440b      	add	r3, r1
 800c594:	3384      	adds	r3, #132	; 0x84
 800c596:	4a46      	ldr	r2, [pc, #280]	; (800c6b0 <config_motors+0xca4>)
 800c598:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c59a:	79ba      	ldrb	r2, [r7, #6]
 800c59c:	4945      	ldr	r1, [pc, #276]	; (800c6b4 <config_motors+0xca8>)
 800c59e:	4613      	mov	r3, r2
 800c5a0:	011b      	lsls	r3, r3, #4
 800c5a2:	1a9b      	subs	r3, r3, r2
 800c5a4:	011b      	lsls	r3, r3, #4
 800c5a6:	440b      	add	r3, r1
 800c5a8:	3338      	adds	r3, #56	; 0x38
 800c5aa:	4a41      	ldr	r2, [pc, #260]	; (800c6b0 <config_motors+0xca4>)
 800c5ac:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c5ae:	79ba      	ldrb	r2, [r7, #6]
 800c5b0:	4940      	ldr	r1, [pc, #256]	; (800c6b4 <config_motors+0xca8>)
 800c5b2:	4613      	mov	r3, r2
 800c5b4:	011b      	lsls	r3, r3, #4
 800c5b6:	1a9b      	subs	r3, r3, r2
 800c5b8:	011b      	lsls	r3, r3, #4
 800c5ba:	440b      	add	r3, r1
 800c5bc:	333c      	adds	r3, #60	; 0x3c
 800c5be:	4a3f      	ldr	r2, [pc, #252]	; (800c6bc <config_motors+0xcb0>)
 800c5c0:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c5c2:	79ba      	ldrb	r2, [r7, #6]
 800c5c4:	493b      	ldr	r1, [pc, #236]	; (800c6b4 <config_motors+0xca8>)
 800c5c6:	4613      	mov	r3, r2
 800c5c8:	011b      	lsls	r3, r3, #4
 800c5ca:	1a9b      	subs	r3, r3, r2
 800c5cc:	011b      	lsls	r3, r3, #4
 800c5ce:	440b      	add	r3, r1
 800c5d0:	3340      	adds	r3, #64	; 0x40
 800c5d2:	f04f 0200 	mov.w	r2, #0
 800c5d6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c5d8:	79ba      	ldrb	r2, [r7, #6]
 800c5da:	4936      	ldr	r1, [pc, #216]	; (800c6b4 <config_motors+0xca8>)
 800c5dc:	4613      	mov	r3, r2
 800c5de:	011b      	lsls	r3, r3, #4
 800c5e0:	1a9b      	subs	r3, r3, r2
 800c5e2:	011b      	lsls	r3, r3, #4
 800c5e4:	440b      	add	r3, r1
 800c5e6:	3350      	adds	r3, #80	; 0x50
 800c5e8:	4a35      	ldr	r2, [pc, #212]	; (800c6c0 <config_motors+0xcb4>)
 800c5ea:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c5ec:	79ba      	ldrb	r2, [r7, #6]
 800c5ee:	4931      	ldr	r1, [pc, #196]	; (800c6b4 <config_motors+0xca8>)
 800c5f0:	4613      	mov	r3, r2
 800c5f2:	011b      	lsls	r3, r3, #4
 800c5f4:	1a9b      	subs	r3, r3, r2
 800c5f6:	011b      	lsls	r3, r3, #4
 800c5f8:	440b      	add	r3, r1
 800c5fa:	3354      	adds	r3, #84	; 0x54
 800c5fc:	4a31      	ldr	r2, [pc, #196]	; (800c6c4 <config_motors+0xcb8>)
 800c5fe:	601a      	str	r2, [r3, #0]
#endif

#ifdef R1_MOTOR_ID
	motor_id = R1_MOTOR_ID - 1;
 800c600:	2304      	movs	r3, #4
 800c602:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c604:	79ba      	ldrb	r2, [r7, #6]
 800c606:	492b      	ldr	r1, [pc, #172]	; (800c6b4 <config_motors+0xca8>)
 800c608:	4613      	mov	r3, r2
 800c60a:	011b      	lsls	r3, r3, #4
 800c60c:	1a9b      	subs	r3, r3, r2
 800c60e:	011b      	lsls	r3, r3, #4
 800c610:	440b      	add	r3, r1
 800c612:	3302      	adds	r3, #2
 800c614:	2201      	movs	r2, #1
 800c616:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c618:	79ba      	ldrb	r2, [r7, #6]
 800c61a:	4613      	mov	r3, r2
 800c61c:	011b      	lsls	r3, r3, #4
 800c61e:	1a9b      	subs	r3, r3, r2
 800c620:	011b      	lsls	r3, r3, #4
 800c622:	4a24      	ldr	r2, [pc, #144]	; (800c6b4 <config_motors+0xca8>)
 800c624:	4413      	add	r3, r2
 800c626:	4618      	mov	r0, r3
 800c628:	f7ff f98a 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;	//1;
 800c62c:	79ba      	ldrb	r2, [r7, #6]
 800c62e:	4921      	ldr	r1, [pc, #132]	; (800c6b4 <config_motors+0xca8>)
 800c630:	4613      	mov	r3, r2
 800c632:	011b      	lsls	r3, r3, #4
 800c634:	1a9b      	subs	r3, r3, r2
 800c636:	011b      	lsls	r3, r3, #4
 800c638:	440b      	add	r3, r1
 800c63a:	33c8      	adds	r3, #200	; 0xc8
 800c63c:	f04f 0200 	mov.w	r2, #0
 800c640:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = R1_CENTER;
 800c642:	79ba      	ldrb	r2, [r7, #6]
 800c644:	491b      	ldr	r1, [pc, #108]	; (800c6b4 <config_motors+0xca8>)
 800c646:	4613      	mov	r3, r2
 800c648:	011b      	lsls	r3, r3, #4
 800c64a:	1a9b      	subs	r3, r3, r2
 800c64c:	011b      	lsls	r3, r3, #4
 800c64e:	440b      	add	r3, r1
 800c650:	339c      	adds	r3, #156	; 0x9c
 800c652:	f640 42d3 	movw	r2, #3283	; 0xcd3
 800c656:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = R1_MAX_ANG;
 800c658:	79ba      	ldrb	r2, [r7, #6]
 800c65a:	4916      	ldr	r1, [pc, #88]	; (800c6b4 <config_motors+0xca8>)
 800c65c:	4613      	mov	r3, r2
 800c65e:	011b      	lsls	r3, r3, #4
 800c660:	1a9b      	subs	r3, r3, r2
 800c662:	011b      	lsls	r3, r3, #4
 800c664:	440b      	add	r3, r1
 800c666:	33b8      	adds	r3, #184	; 0xb8
 800c668:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c66c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = R1_MIN_ANG;
 800c66e:	79ba      	ldrb	r2, [r7, #6]
 800c670:	4910      	ldr	r1, [pc, #64]	; (800c6b4 <config_motors+0xca8>)
 800c672:	4613      	mov	r3, r2
 800c674:	011b      	lsls	r3, r3, #4
 800c676:	1a9b      	subs	r3, r3, r2
 800c678:	011b      	lsls	r3, r3, #4
 800c67a:	440b      	add	r3, r1
 800c67c:	33b4      	adds	r3, #180	; 0xb4
 800c67e:	4a12      	ldr	r2, [pc, #72]	; (800c6c8 <config_motors+0xcbc>)
 800c680:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c682:	79ba      	ldrb	r2, [r7, #6]
 800c684:	490b      	ldr	r1, [pc, #44]	; (800c6b4 <config_motors+0xca8>)
 800c686:	4613      	mov	r3, r2
 800c688:	011b      	lsls	r3, r3, #4
 800c68a:	1a9b      	subs	r3, r3, r2
 800c68c:	011b      	lsls	r3, r3, #4
 800c68e:	440b      	add	r3, r1
 800c690:	33c4      	adds	r3, #196	; 0xc4
 800c692:	4a0e      	ldr	r2, [pc, #56]	; (800c6cc <config_motors+0xcc0>)
 800c694:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI; //angle before it overflows
 800c696:	79ba      	ldrb	r2, [r7, #6]
 800c698:	4906      	ldr	r1, [pc, #24]	; (800c6b4 <config_motors+0xca8>)
 800c69a:	4613      	mov	r3, r2
 800c69c:	011b      	lsls	r3, r3, #4
 800c69e:	1a9b      	subs	r3, r3, r2
 800c6a0:	011b      	lsls	r3, r3, #4
 800c6a2:	440b      	add	r3, r1
 800c6a4:	33c0      	adds	r3, #192	; 0xc0
 800c6a6:	4a0a      	ldr	r2, [pc, #40]	; (800c6d0 <config_motors+0xcc4>)
 800c6a8:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c6aa:	79ba      	ldrb	r2, [r7, #6]
 800c6ac:	e012      	b.n	800c6d4 <config_motors+0xcc8>
 800c6ae:	bf00      	nop
 800c6b0:	43480000 	.word	0x43480000
 800c6b4:	200018a8 	.word	0x200018a8
 800c6b8:	447a0000 	.word	0x447a0000
 800c6bc:	3dcccccd 	.word	0x3dcccccd
 800c6c0:	461c4000 	.word	0x461c4000
 800c6c4:	469c4000 	.word	0x469c4000
 800c6c8:	bfc00000 	.word	0xbfc00000
 800c6cc:	40c90fdb 	.word	0x40c90fdb
 800c6d0:	c0c90fdb 	.word	0xc0c90fdb
 800c6d4:	499d      	ldr	r1, [pc, #628]	; (800c94c <config_motors+0xf40>)
 800c6d6:	4613      	mov	r3, r2
 800c6d8:	011b      	lsls	r3, r3, #4
 800c6da:	1a9b      	subs	r3, r3, r2
 800c6dc:	011b      	lsls	r3, r3, #4
 800c6de:	440b      	add	r3, r1
 800c6e0:	33d4      	adds	r3, #212	; 0xd4
 800c6e2:	f04f 0200 	mov.w	r2, #0
 800c6e6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 800c6e8:	79ba      	ldrb	r2, [r7, #6]
 800c6ea:	4998      	ldr	r1, [pc, #608]	; (800c94c <config_motors+0xf40>)
 800c6ec:	4613      	mov	r3, r2
 800c6ee:	011b      	lsls	r3, r3, #4
 800c6f0:	1a9b      	subs	r3, r3, r2
 800c6f2:	011b      	lsls	r3, r3, #4
 800c6f4:	440b      	add	r3, r1
 800c6f6:	3368      	adds	r3, #104	; 0x68
 800c6f8:	4a95      	ldr	r2, [pc, #596]	; (800c950 <config_motors+0xf44>)
 800c6fa:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 800c6fc:	79ba      	ldrb	r2, [r7, #6]
 800c6fe:	4993      	ldr	r1, [pc, #588]	; (800c94c <config_motors+0xf40>)
 800c700:	4613      	mov	r3, r2
 800c702:	011b      	lsls	r3, r3, #4
 800c704:	1a9b      	subs	r3, r3, r2
 800c706:	011b      	lsls	r3, r3, #4
 800c708:	440b      	add	r3, r1
 800c70a:	336c      	adds	r3, #108	; 0x6c
 800c70c:	f04f 0200 	mov.w	r2, #0
 800c710:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 800c712:	79ba      	ldrb	r2, [r7, #6]
 800c714:	498d      	ldr	r1, [pc, #564]	; (800c94c <config_motors+0xf40>)
 800c716:	4613      	mov	r3, r2
 800c718:	011b      	lsls	r3, r3, #4
 800c71a:	1a9b      	subs	r3, r3, r2
 800c71c:	011b      	lsls	r3, r3, #4
 800c71e:	440b      	add	r3, r1
 800c720:	3370      	adds	r3, #112	; 0x70
 800c722:	f04f 0200 	mov.w	r2, #0
 800c726:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 800c728:	79ba      	ldrb	r2, [r7, #6]
 800c72a:	4988      	ldr	r1, [pc, #544]	; (800c94c <config_motors+0xf40>)
 800c72c:	4613      	mov	r3, r2
 800c72e:	011b      	lsls	r3, r3, #4
 800c730:	1a9b      	subs	r3, r3, r2
 800c732:	011b      	lsls	r3, r3, #4
 800c734:	440b      	add	r3, r1
 800c736:	3380      	adds	r3, #128	; 0x80
 800c738:	4a86      	ldr	r2, [pc, #536]	; (800c954 <config_motors+0xf48>)
 800c73a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 800c73c:	79ba      	ldrb	r2, [r7, #6]
 800c73e:	4983      	ldr	r1, [pc, #524]	; (800c94c <config_motors+0xf40>)
 800c740:	4613      	mov	r3, r2
 800c742:	011b      	lsls	r3, r3, #4
 800c744:	1a9b      	subs	r3, r3, r2
 800c746:	011b      	lsls	r3, r3, #4
 800c748:	440b      	add	r3, r1
 800c74a:	3384      	adds	r3, #132	; 0x84
 800c74c:	4a82      	ldr	r2, [pc, #520]	; (800c958 <config_motors+0xf4c>)
 800c74e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 800c750:	79ba      	ldrb	r2, [r7, #6]
 800c752:	497e      	ldr	r1, [pc, #504]	; (800c94c <config_motors+0xf40>)
 800c754:	4613      	mov	r3, r2
 800c756:	011b      	lsls	r3, r3, #4
 800c758:	1a9b      	subs	r3, r3, r2
 800c75a:	011b      	lsls	r3, r3, #4
 800c75c:	440b      	add	r3, r1
 800c75e:	3338      	adds	r3, #56	; 0x38
 800c760:	4a7c      	ldr	r2, [pc, #496]	; (800c954 <config_motors+0xf48>)
 800c762:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 800c764:	79ba      	ldrb	r2, [r7, #6]
 800c766:	4979      	ldr	r1, [pc, #484]	; (800c94c <config_motors+0xf40>)
 800c768:	4613      	mov	r3, r2
 800c76a:	011b      	lsls	r3, r3, #4
 800c76c:	1a9b      	subs	r3, r3, r2
 800c76e:	011b      	lsls	r3, r3, #4
 800c770:	440b      	add	r3, r1
 800c772:	333c      	adds	r3, #60	; 0x3c
 800c774:	4a79      	ldr	r2, [pc, #484]	; (800c95c <config_motors+0xf50>)
 800c776:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 800c778:	79ba      	ldrb	r2, [r7, #6]
 800c77a:	4974      	ldr	r1, [pc, #464]	; (800c94c <config_motors+0xf40>)
 800c77c:	4613      	mov	r3, r2
 800c77e:	011b      	lsls	r3, r3, #4
 800c780:	1a9b      	subs	r3, r3, r2
 800c782:	011b      	lsls	r3, r3, #4
 800c784:	440b      	add	r3, r1
 800c786:	3340      	adds	r3, #64	; 0x40
 800c788:	4a72      	ldr	r2, [pc, #456]	; (800c954 <config_motors+0xf48>)
 800c78a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 800c78c:	79ba      	ldrb	r2, [r7, #6]
 800c78e:	496f      	ldr	r1, [pc, #444]	; (800c94c <config_motors+0xf40>)
 800c790:	4613      	mov	r3, r2
 800c792:	011b      	lsls	r3, r3, #4
 800c794:	1a9b      	subs	r3, r3, r2
 800c796:	011b      	lsls	r3, r3, #4
 800c798:	440b      	add	r3, r1
 800c79a:	3350      	adds	r3, #80	; 0x50
 800c79c:	4a70      	ldr	r2, [pc, #448]	; (800c960 <config_motors+0xf54>)
 800c79e:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 800c7a0:	79ba      	ldrb	r2, [r7, #6]
 800c7a2:	496a      	ldr	r1, [pc, #424]	; (800c94c <config_motors+0xf40>)
 800c7a4:	4613      	mov	r3, r2
 800c7a6:	011b      	lsls	r3, r3, #4
 800c7a8:	1a9b      	subs	r3, r3, r2
 800c7aa:	011b      	lsls	r3, r3, #4
 800c7ac:	440b      	add	r3, r1
 800c7ae:	3354      	adds	r3, #84	; 0x54
 800c7b0:	4a6c      	ldr	r2, [pc, #432]	; (800c964 <config_motors+0xf58>)
 800c7b2:	601a      	str	r2, [r3, #0]
#endif



#ifdef R2_MOTOR_ID
	motor_id = R2_MOTOR_ID - 1;
 800c7b4:	2305      	movs	r3, #5
 800c7b6:	71bb      	strb	r3, [r7, #6]
	can_motors[motor_id].motor_type = TYPE_GM6020;
 800c7b8:	79ba      	ldrb	r2, [r7, #6]
 800c7ba:	4964      	ldr	r1, [pc, #400]	; (800c94c <config_motors+0xf40>)
 800c7bc:	4613      	mov	r3, r2
 800c7be:	011b      	lsls	r3, r3, #4
 800c7c0:	1a9b      	subs	r3, r3, r2
 800c7c2:	011b      	lsls	r3, r3, #4
 800c7c4:	440b      	add	r3, r1
 800c7c6:	3302      	adds	r3, #2
 800c7c8:	2201      	movs	r2, #1
 800c7ca:	701a      	strb	r2, [r3, #0]
	set_motor_config(&can_motors[motor_id]);
 800c7cc:	79ba      	ldrb	r2, [r7, #6]
 800c7ce:	4613      	mov	r3, r2
 800c7d0:	011b      	lsls	r3, r3, #4
 800c7d2:	1a9b      	subs	r3, r3, r2
 800c7d4:	011b      	lsls	r3, r3, #4
 800c7d6:	4a5d      	ldr	r2, [pc, #372]	; (800c94c <config_motors+0xf40>)
 800c7d8:	4413      	add	r3, r2
 800c7da:	4618      	mov	r0, r3
 800c7dc:	f7ff f8b0 	bl	800b940 <set_motor_config>
	can_motors[motor_id].angle_data.gearbox_ratio = 0;
 800c7e0:	79ba      	ldrb	r2, [r7, #6]
 800c7e2:	495a      	ldr	r1, [pc, #360]	; (800c94c <config_motors+0xf40>)
 800c7e4:	4613      	mov	r3, r2
 800c7e6:	011b      	lsls	r3, r3, #4
 800c7e8:	1a9b      	subs	r3, r3, r2
 800c7ea:	011b      	lsls	r3, r3, #4
 800c7ec:	440b      	add	r3, r1
 800c7ee:	33c8      	adds	r3, #200	; 0xc8
 800c7f0:	f04f 0200 	mov.w	r2, #0
 800c7f4:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.center_ang = R2_CENTER;
 800c7f6:	79ba      	ldrb	r2, [r7, #6]
 800c7f8:	4954      	ldr	r1, [pc, #336]	; (800c94c <config_motors+0xf40>)
 800c7fa:	4613      	mov	r3, r2
 800c7fc:	011b      	lsls	r3, r3, #4
 800c7fe:	1a9b      	subs	r3, r3, r2
 800c800:	011b      	lsls	r3, r3, #4
 800c802:	440b      	add	r3, r1
 800c804:	339c      	adds	r3, #156	; 0x9c
 800c806:	f641 121c 	movw	r2, #6428	; 0x191c
 800c80a:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.max_ang = R2_MAX_ANG;
 800c80c:	79ba      	ldrb	r2, [r7, #6]
 800c80e:	494f      	ldr	r1, [pc, #316]	; (800c94c <config_motors+0xf40>)
 800c810:	4613      	mov	r3, r2
 800c812:	011b      	lsls	r3, r3, #4
 800c814:	1a9b      	subs	r3, r3, r2
 800c816:	011b      	lsls	r3, r3, #4
 800c818:	440b      	add	r3, r1
 800c81a:	33b8      	adds	r3, #184	; 0xb8
 800c81c:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 800c820:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.min_ang = R2_MIN_ANG;
 800c822:	79ba      	ldrb	r2, [r7, #6]
 800c824:	4949      	ldr	r1, [pc, #292]	; (800c94c <config_motors+0xf40>)
 800c826:	4613      	mov	r3, r2
 800c828:	011b      	lsls	r3, r3, #4
 800c82a:	1a9b      	subs	r3, r3, r2
 800c82c:	011b      	lsls	r3, r3, #4
 800c82e:	440b      	add	r3, r1
 800c830:	33b4      	adds	r3, #180	; 0xb4
 800c832:	4a4d      	ldr	r2, [pc, #308]	; (800c968 <config_motors+0xf5c>)
 800c834:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800c836:	79ba      	ldrb	r2, [r7, #6]
 800c838:	4944      	ldr	r1, [pc, #272]	; (800c94c <config_motors+0xf40>)
 800c83a:	4613      	mov	r3, r2
 800c83c:	011b      	lsls	r3, r3, #4
 800c83e:	1a9b      	subs	r3, r3, r2
 800c840:	011b      	lsls	r3, r3, #4
 800c842:	440b      	add	r3, r1
 800c844:	33c4      	adds	r3, #196	; 0xc4
 800c846:	4a49      	ldr	r2, [pc, #292]	; (800c96c <config_motors+0xf60>)
 800c848:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800c84a:	79ba      	ldrb	r2, [r7, #6]
 800c84c:	493f      	ldr	r1, [pc, #252]	; (800c94c <config_motors+0xf40>)
 800c84e:	4613      	mov	r3, r2
 800c850:	011b      	lsls	r3, r3, #4
 800c852:	1a9b      	subs	r3, r3, r2
 800c854:	011b      	lsls	r3, r3, #4
 800c856:	440b      	add	r3, r1
 800c858:	33c0      	adds	r3, #192	; 0xc0
 800c85a:	4a45      	ldr	r2, [pc, #276]	; (800c970 <config_motors+0xf64>)
 800c85c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_data.wheel_circ = 0;
 800c85e:	79ba      	ldrb	r2, [r7, #6]
 800c860:	493a      	ldr	r1, [pc, #232]	; (800c94c <config_motors+0xf40>)
 800c862:	4613      	mov	r3, r2
 800c864:	011b      	lsls	r3, r3, #4
 800c866:	1a9b      	subs	r3, r3, r2
 800c868:	011b      	lsls	r3, r3, #4
 800c86a:	440b      	add	r3, r1
 800c86c:	33d4      	adds	r3, #212	; 0xd4
 800c86e:	f04f 0200 	mov.w	r2, #0
 800c872:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c874:	79ba      	ldrb	r2, [r7, #6]
 800c876:	4935      	ldr	r1, [pc, #212]	; (800c94c <config_motors+0xf40>)
 800c878:	4613      	mov	r3, r2
 800c87a:	011b      	lsls	r3, r3, #4
 800c87c:	1a9b      	subs	r3, r3, r2
 800c87e:	011b      	lsls	r3, r3, #4
 800c880:	440b      	add	r3, r1
 800c882:	3368      	adds	r3, #104	; 0x68
 800c884:	4a32      	ldr	r2, [pc, #200]	; (800c950 <config_motors+0xf44>)
 800c886:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c888:	79ba      	ldrb	r2, [r7, #6]
 800c88a:	4930      	ldr	r1, [pc, #192]	; (800c94c <config_motors+0xf40>)
 800c88c:	4613      	mov	r3, r2
 800c88e:	011b      	lsls	r3, r3, #4
 800c890:	1a9b      	subs	r3, r3, r2
 800c892:	011b      	lsls	r3, r3, #4
 800c894:	440b      	add	r3, r1
 800c896:	336c      	adds	r3, #108	; 0x6c
 800c898:	f04f 0200 	mov.w	r2, #0
 800c89c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c89e:	79ba      	ldrb	r2, [r7, #6]
 800c8a0:	492a      	ldr	r1, [pc, #168]	; (800c94c <config_motors+0xf40>)
 800c8a2:	4613      	mov	r3, r2
 800c8a4:	011b      	lsls	r3, r3, #4
 800c8a6:	1a9b      	subs	r3, r3, r2
 800c8a8:	011b      	lsls	r3, r3, #4
 800c8aa:	440b      	add	r3, r1
 800c8ac:	3370      	adds	r3, #112	; 0x70
 800c8ae:	f04f 0200 	mov.w	r2, #0
 800c8b2:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c8b4:	79ba      	ldrb	r2, [r7, #6]
 800c8b6:	4925      	ldr	r1, [pc, #148]	; (800c94c <config_motors+0xf40>)
 800c8b8:	4613      	mov	r3, r2
 800c8ba:	011b      	lsls	r3, r3, #4
 800c8bc:	1a9b      	subs	r3, r3, r2
 800c8be:	011b      	lsls	r3, r3, #4
 800c8c0:	440b      	add	r3, r1
 800c8c2:	3380      	adds	r3, #128	; 0x80
 800c8c4:	4a2b      	ldr	r2, [pc, #172]	; (800c974 <config_motors+0xf68>)
 800c8c6:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c8c8:	79ba      	ldrb	r2, [r7, #6]
 800c8ca:	4920      	ldr	r1, [pc, #128]	; (800c94c <config_motors+0xf40>)
 800c8cc:	4613      	mov	r3, r2
 800c8ce:	011b      	lsls	r3, r3, #4
 800c8d0:	1a9b      	subs	r3, r3, r2
 800c8d2:	011b      	lsls	r3, r3, #4
 800c8d4:	440b      	add	r3, r1
 800c8d6:	3384      	adds	r3, #132	; 0x84
 800c8d8:	4a1d      	ldr	r2, [pc, #116]	; (800c950 <config_motors+0xf44>)
 800c8da:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c8dc:	79ba      	ldrb	r2, [r7, #6]
 800c8de:	491b      	ldr	r1, [pc, #108]	; (800c94c <config_motors+0xf40>)
 800c8e0:	4613      	mov	r3, r2
 800c8e2:	011b      	lsls	r3, r3, #4
 800c8e4:	1a9b      	subs	r3, r3, r2
 800c8e6:	011b      	lsls	r3, r3, #4
 800c8e8:	440b      	add	r3, r1
 800c8ea:	3338      	adds	r3, #56	; 0x38
 800c8ec:	4a18      	ldr	r2, [pc, #96]	; (800c950 <config_motors+0xf44>)
 800c8ee:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c8f0:	79ba      	ldrb	r2, [r7, #6]
 800c8f2:	4916      	ldr	r1, [pc, #88]	; (800c94c <config_motors+0xf40>)
 800c8f4:	4613      	mov	r3, r2
 800c8f6:	011b      	lsls	r3, r3, #4
 800c8f8:	1a9b      	subs	r3, r3, r2
 800c8fa:	011b      	lsls	r3, r3, #4
 800c8fc:	440b      	add	r3, r1
 800c8fe:	333c      	adds	r3, #60	; 0x3c
 800c900:	4a1d      	ldr	r2, [pc, #116]	; (800c978 <config_motors+0xf6c>)
 800c902:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c904:	79ba      	ldrb	r2, [r7, #6]
 800c906:	4911      	ldr	r1, [pc, #68]	; (800c94c <config_motors+0xf40>)
 800c908:	4613      	mov	r3, r2
 800c90a:	011b      	lsls	r3, r3, #4
 800c90c:	1a9b      	subs	r3, r3, r2
 800c90e:	011b      	lsls	r3, r3, #4
 800c910:	440b      	add	r3, r1
 800c912:	3340      	adds	r3, #64	; 0x40
 800c914:	f04f 0200 	mov.w	r2, #0
 800c918:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c91a:	79ba      	ldrb	r2, [r7, #6]
 800c91c:	490b      	ldr	r1, [pc, #44]	; (800c94c <config_motors+0xf40>)
 800c91e:	4613      	mov	r3, r2
 800c920:	011b      	lsls	r3, r3, #4
 800c922:	1a9b      	subs	r3, r3, r2
 800c924:	011b      	lsls	r3, r3, #4
 800c926:	440b      	add	r3, r1
 800c928:	3350      	adds	r3, #80	; 0x50
 800c92a:	4a14      	ldr	r2, [pc, #80]	; (800c97c <config_motors+0xf70>)
 800c92c:	601a      	str	r2, [r3, #0]
	can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c92e:	79ba      	ldrb	r2, [r7, #6]
 800c930:	4906      	ldr	r1, [pc, #24]	; (800c94c <config_motors+0xf40>)
 800c932:	4613      	mov	r3, r2
 800c934:	011b      	lsls	r3, r3, #4
 800c936:	1a9b      	subs	r3, r3, r2
 800c938:	011b      	lsls	r3, r3, #4
 800c93a:	440b      	add	r3, r1
 800c93c:	3354      	adds	r3, #84	; 0x54
 800c93e:	4a09      	ldr	r2, [pc, #36]	; (800c964 <config_motors+0xf58>)
 800c940:	601a      	str	r2, [r3, #0]
#endif

}
 800c942:	bf00      	nop
 800c944:	3708      	adds	r7, #8
 800c946:	46bd      	mov	sp, r7
 800c948:	bd80      	pop	{r7, pc}
 800c94a:	bf00      	nop
 800c94c:	200018a8 	.word	0x200018a8
 800c950:	43480000 	.word	0x43480000
 800c954:	42c80000 	.word	0x42c80000
 800c958:	43c80000 	.word	0x43c80000
 800c95c:	3ba3d70a 	.word	0x3ba3d70a
 800c960:	459c4000 	.word	0x459c4000
 800c964:	469c4000 	.word	0x469c4000
 800c968:	bfc00000 	.word	0xbfc00000
 800c96c:	40c90fdb 	.word	0x40c90fdb
 800c970:	c0c90fdb 	.word	0xc0c90fdb
 800c974:	447a0000 	.word	0x447a0000
 800c978:	3dcccccd 	.word	0x3dcccccd
 800c97c:	461c4000 	.word	0x461c4000

0800c980 <bz_buzzer>:
void bz_buzzer(uint8_t high, uint8_t low) {
 800c980:	b580      	push	{r7, lr}
 800c982:	b084      	sub	sp, #16
 800c984:	af00      	add	r7, sp, #0
 800c986:	4603      	mov	r3, r0
 800c988:	460a      	mov	r2, r1
 800c98a:	71fb      	strb	r3, [r7, #7]
 800c98c:	4613      	mov	r3, r2
 800c98e:	71bb      	strb	r3, [r7, #6]
	int8_t temp_msg = bz_debug_high;
 800c990:	2309      	movs	r3, #9
 800c992:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < high; i++) {
 800c994:	2300      	movs	r3, #0
 800c996:	73fb      	strb	r3, [r7, #15]
 800c998:	e00d      	b.n	800c9b6 <bz_buzzer+0x36>
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c99a:	4b1c      	ldr	r3, [pc, #112]	; (800ca0c <bz_buzzer+0x8c>)
 800c99c:	6818      	ldr	r0, [r3, #0]
 800c99e:	f107 010d 	add.w	r1, r7, #13
 800c9a2:	2300      	movs	r3, #0
 800c9a4:	2200      	movs	r2, #0
 800c9a6:	f00f fa7b 	bl	801bea0 <xQueueGenericSend>
	for (int8_t i = 0; i < high; i++) {
 800c9aa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c9ae:	b2db      	uxtb	r3, r3
 800c9b0:	3301      	adds	r3, #1
 800c9b2:	b2db      	uxtb	r3, r3
 800c9b4:	73fb      	strb	r3, [r7, #15]
 800c9b6:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800c9ba:	79fb      	ldrb	r3, [r7, #7]
 800c9bc:	429a      	cmp	r2, r3
 800c9be:	dbec      	blt.n	800c99a <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 800c9c0:	2308      	movs	r3, #8
 800c9c2:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 800c9c4:	2300      	movs	r3, #0
 800c9c6:	73bb      	strb	r3, [r7, #14]
 800c9c8:	e00d      	b.n	800c9e6 <bz_buzzer+0x66>
		xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c9ca:	4b10      	ldr	r3, [pc, #64]	; (800ca0c <bz_buzzer+0x8c>)
 800c9cc:	6818      	ldr	r0, [r3, #0]
 800c9ce:	f107 010d 	add.w	r1, r7, #13
 800c9d2:	2300      	movs	r3, #0
 800c9d4:	2200      	movs	r2, #0
 800c9d6:	f00f fa63 	bl	801bea0 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800c9da:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800c9de:	b2db      	uxtb	r3, r3
 800c9e0:	3301      	adds	r3, #1
 800c9e2:	b2db      	uxtb	r3, r3
 800c9e4:	73bb      	strb	r3, [r7, #14]
 800c9e6:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800c9ea:	79bb      	ldrb	r3, [r7, #6]
 800c9ec:	429a      	cmp	r2, r3
 800c9ee:	dbec      	blt.n	800c9ca <bz_buzzer+0x4a>
	}
	temp_msg = bz_debug_rest;
 800c9f0:	230a      	movs	r3, #10
 800c9f2:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800c9f4:	4b05      	ldr	r3, [pc, #20]	; (800ca0c <bz_buzzer+0x8c>)
 800c9f6:	6818      	ldr	r0, [r3, #0]
 800c9f8:	f107 010d 	add.w	r1, r7, #13
 800c9fc:	2300      	movs	r3, #0
 800c9fe:	2200      	movs	r2, #0
 800ca00:	f00f fa4e 	bl	801bea0 <xQueueGenericSend>
}
 800ca04:	bf00      	nop
 800ca06:	3710      	adds	r7, #16
 800ca08:	46bd      	mov	sp, r7
 800ca0a:	bd80      	pop	{r7, pc}
 800ca0c:	200004e4 	.word	0x200004e4

0800ca10 <check_motors>:

uint16_t check_motors() {
 800ca10:	b580      	push	{r7, lr}
 800ca12:	b082      	sub	sp, #8
 800ca14:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 800ca16:	2300      	movs	r3, #0
 800ca18:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 800ca1a:	f7f5 fc29 	bl	8002270 <get_microseconds>
 800ca1e:	6038      	str	r0, [r7, #0]
	if (curr_time - can_motors[FR_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca20:	4b3b      	ldr	r3, [pc, #236]	; (800cb10 <check_motors+0x100>)
 800ca22:	f8d3 3c24 	ldr.w	r3, [r3, #3108]	; 0xc24
 800ca26:	683a      	ldr	r2, [r7, #0]
 800ca28:	1ad3      	subs	r3, r2, r3
 800ca2a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ca2e:	d903      	bls.n	800ca38 <check_motors+0x28>
		error |= 1 << (0);
 800ca30:	88fb      	ldrh	r3, [r7, #6]
 800ca32:	f043 0301 	orr.w	r3, r3, #1
 800ca36:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[FL_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca38:	4b35      	ldr	r3, [pc, #212]	; (800cb10 <check_motors+0x100>)
 800ca3a:	f8d3 3d14 	ldr.w	r3, [r3, #3348]	; 0xd14
 800ca3e:	683a      	ldr	r2, [r7, #0]
 800ca40:	1ad3      	subs	r3, r2, r3
 800ca42:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ca46:	d903      	bls.n	800ca50 <check_motors+0x40>
		error |= 1 << (1);
 800ca48:	88fb      	ldrh	r3, [r7, #6]
 800ca4a:	f043 0302 	orr.w	r3, r3, #2
 800ca4e:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[BL_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca50:	4b2f      	ldr	r3, [pc, #188]	; (800cb10 <check_motors+0x100>)
 800ca52:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	; 0xe04
 800ca56:	683a      	ldr	r2, [r7, #0]
 800ca58:	1ad3      	subs	r3, r2, r3
 800ca5a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ca5e:	d903      	bls.n	800ca68 <check_motors+0x58>
		error |= 1 << (2);
 800ca60:	88fb      	ldrh	r3, [r7, #6]
 800ca62:	f043 0304 	orr.w	r3, r3, #4
 800ca66:	80fb      	strh	r3, [r7, #6]
	}
	if (curr_time - can_motors[BR_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca68:	4b29      	ldr	r3, [pc, #164]	; (800cb10 <check_motors+0x100>)
 800ca6a:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	; 0xef4
 800ca6e:	683a      	ldr	r2, [r7, #0]
 800ca70:	1ad3      	subs	r3, r2, r3
 800ca72:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ca76:	d903      	bls.n	800ca80 <check_motors+0x70>
		error |= 1 << (3);
 800ca78:	88fb      	ldrh	r3, [r7, #6]
 800ca7a:	f043 0308 	orr.w	r3, r3, #8
 800ca7e:	80fb      	strh	r3, [r7, #6]
	}

	if (curr_time - can_motors[LFRICTION_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca80:	4b23      	ldr	r3, [pc, #140]	; (800cb10 <check_motors+0x100>)
 800ca82:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ca86:	f8d3 3584 	ldr.w	r3, [r3, #1412]	; 0x584
 800ca8a:	683a      	ldr	r2, [r7, #0]
 800ca8c:	1ad3      	subs	r3, r2, r3
 800ca8e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ca92:	d903      	bls.n	800ca9c <check_motors+0x8c>
		error |= 1 << (4);
 800ca94:	88fb      	ldrh	r3, [r7, #6]
 800ca96:	f043 0310 	orr.w	r3, r3, #16
 800ca9a:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[RFRICTION_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800ca9c:	4b1c      	ldr	r3, [pc, #112]	; (800cb10 <check_motors+0x100>)
 800ca9e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800caa2:	f8d3 31c4 	ldr.w	r3, [r3, #452]	; 0x1c4
 800caa6:	683a      	ldr	r2, [r7, #0]
 800caa8:	1ad3      	subs	r3, r2, r3
 800caaa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800caae:	d903      	bls.n	800cab8 <check_motors+0xa8>
		error |= 1 << (5);
 800cab0:	88fb      	ldrh	r3, [r7, #6]
 800cab2:	f043 0320 	orr.w	r3, r3, #32
 800cab6:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[FEEDER_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800cab8:	4b15      	ldr	r3, [pc, #84]	; (800cb10 <check_motors+0x100>)
 800caba:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800cabe:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800cac2:	683a      	ldr	r2, [r7, #0]
 800cac4:	1ad3      	subs	r3, r2, r3
 800cac6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800caca:	d903      	bls.n	800cad4 <check_motors+0xc4>
		error |= 1 << 6;
 800cacc:	88fb      	ldrh	r3, [r7, #6]
 800cace:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cad2:	80fb      	strh	r3, [r7, #6]

	}

	if (curr_time - can_motors[L1_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800cad4:	4b0e      	ldr	r3, [pc, #56]	; (800cb10 <check_motors+0x100>)
 800cad6:	f8d3 3774 	ldr.w	r3, [r3, #1908]	; 0x774
 800cada:	683a      	ldr	r2, [r7, #0]
 800cadc:	1ad3      	subs	r3, r2, r3
 800cade:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800cae2:	d903      	bls.n	800caec <check_motors+0xdc>
		error |= 1 << 7;
 800cae4:	88fb      	ldrh	r3, [r7, #6]
 800cae6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800caea:	80fb      	strh	r3, [r7, #6]

	}
	if (curr_time - can_motors[R1_MOTOR_ID - 1].last_time[0] > MOTOR_TIMEOUT_MAX) {
 800caec:	4b08      	ldr	r3, [pc, #32]	; (800cb10 <check_motors+0x100>)
 800caee:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	; 0x4a4
 800caf2:	683a      	ldr	r2, [r7, #0]
 800caf4:	1ad3      	subs	r3, r2, r3
 800caf6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800cafa:	d903      	bls.n	800cb04 <check_motors+0xf4>
		error |= 1 << 8;
 800cafc:	88fb      	ldrh	r3, [r7, #6]
 800cafe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cb02:	80fb      	strh	r3, [r7, #6]

	}
	return error;
 800cb04:	88fb      	ldrh	r3, [r7, #6]

}
 800cb06:	4618      	mov	r0, r3
 800cb08:	3708      	adds	r7, #8
 800cb0a:	46bd      	mov	sp, r7
 800cb0c:	bd80      	pop	{r7, pc}
 800cb0e:	bf00      	nop
 800cb10:	200018a8 	.word	0x200018a8

0800cb14 <motor_calib_task>:

void motor_calib_task(void *argument) {
 800cb14:	b580      	push	{r7, lr}
 800cb16:	b084      	sub	sp, #16
 800cb18:	af00      	add	r7, sp, #0
 800cb1a:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 800cb1c:	2200      	movs	r2, #0
 800cb1e:	2100      	movs	r1, #0
 800cb20:	481d      	ldr	r0, [pc, #116]	; (800cb98 <motor_calib_task+0x84>)
 800cb22:	f7f4 fbbd 	bl	80012a0 <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 800cb26:	2200      	movs	r2, #0
 800cb28:	2100      	movs	r1, #0
 800cb2a:	481c      	ldr	r0, [pc, #112]	; (800cb9c <motor_calib_task+0x88>)
 800cb2c:	f7f4 fbb8 	bl	80012a0 <can_start>
	config_motors();
 800cb30:	f7fe ff6c 	bl	800ba0c <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 800cb34:	f240 13ff 	movw	r3, #511	; 0x1ff
 800cb38:	81fb      	strh	r3, [r7, #14]
	vTaskDelay(50);
 800cb3a:	2032      	movs	r0, #50	; 0x32
 800cb3c:	f010 f85c 	bl	801cbf8 <vTaskDelay>
	uint8_t startup = 0;
 800cb40:	2300      	movs	r3, #0
 800cb42:	737b      	strb	r3, [r7, #13]
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0){
 800cb44:	89fb      	ldrh	r3, [r7, #14]
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	d102      	bne.n	800cb50 <motor_calib_task+0x3c>
		temp_msg = ok;
 800cb4a:	2301      	movs	r3, #1
 800cb4c:	733b      	strb	r3, [r7, #12]
 800cb4e:	e001      	b.n	800cb54 <motor_calib_task+0x40>
	} else {
		temp_msg = not_ok;
 800cb50:	2302      	movs	r3, #2
 800cb52:	733b      	strb	r3, [r7, #12]
	}
	xQueueSendToBack(buzzing_task_msg, &temp_msg, 0);
 800cb54:	4b12      	ldr	r3, [pc, #72]	; (800cba0 <motor_calib_task+0x8c>)
 800cb56:	6818      	ldr	r0, [r3, #0]
 800cb58:	f107 010c 	add.w	r1, r7, #12
 800cb5c:	2300      	movs	r3, #0
 800cb5e:	2200      	movs	r2, #0
 800cb60:	f00f f99e 	bl	801bea0 <xQueueGenericSend>

	while (1) {
		error = 0;
 800cb64:	2300      	movs	r3, #0
 800cb66:	81fb      	strh	r3, [r7, #14]

		error = check_motors();
 800cb68:	f7ff ff52 	bl	800ca10 <check_motors>
 800cb6c:	4603      	mov	r3, r0
 800cb6e:	81fb      	strh	r3, [r7, #14]
		g_motor_fault = error;
 800cb70:	4a0c      	ldr	r2, [pc, #48]	; (800cba4 <motor_calib_task+0x90>)
 800cb72:	89fb      	ldrh	r3, [r7, #14]
 800cb74:	8013      	strh	r3, [r2, #0]
			}
			vTaskDelay(5000);
			continue;
		}
		else if (MOTOR_ONLINE_CHECK == 0) {
			if(error != 0) {
 800cb76:	89fb      	ldrh	r3, [r7, #14]
 800cb78:	2b00      	cmp	r3, #0
 800cb7a:	d008      	beq.n	800cb8e <motor_calib_task+0x7a>
			bz_buzzer(0, 2);
 800cb7c:	2102      	movs	r1, #2
 800cb7e:	2000      	movs	r0, #0
 800cb80:	f7ff fefe 	bl	800c980 <bz_buzzer>
			vTaskDelay(5000);
 800cb84:	f241 3088 	movw	r0, #5000	; 0x1388
 800cb88:	f010 f836 	bl	801cbf8 <vTaskDelay>
			continue;
 800cb8c:	e003      	b.n	800cb96 <motor_calib_task+0x82>
			}
		}
		vTaskDelay(10000);
 800cb8e:	f242 7010 	movw	r0, #10000	; 0x2710
 800cb92:	f010 f831 	bl	801cbf8 <vTaskDelay>
		error = 0;
 800cb96:	e7e5      	b.n	800cb64 <motor_calib_task+0x50>
 800cb98:	20000434 	.word	0x20000434
 800cb9c:	2000045c 	.word	0x2000045c
 800cba0:	200004e4 	.word	0x200004e4
 800cba4:	200032f4 	.word	0x200032f4

0800cba8 <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 800cba8:	b580      	push	{r7, lr}
 800cbaa:	b08e      	sub	sp, #56	; 0x38
 800cbac:	af00      	add	r7, sp, #0
 800cbae:	ed87 0b04 	vstr	d0, [r7, #16]
 800cbb2:	ed87 1b02 	vstr	d1, [r7, #8]
 800cbb6:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 800cbb8:	687b      	ldr	r3, [r7, #4]
 800cbba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800cbbc:	687b      	ldr	r3, [r7, #4]
 800cbbe:	62da      	str	r2, [r3, #44]	; 0x2c
	pid->last_time[0] = get_microseconds();
 800cbc0:	f7f5 fb56 	bl	8002270 <get_microseconds>
 800cbc4:	4602      	mov	r2, r0
 800cbc6:	687b      	ldr	r3, [r7, #4]
 800cbc8:	629a      	str	r2, [r3, #40]	; 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 800cbca:	2301      	movs	r3, #1
 800cbcc:	637b      	str	r3, [r7, #52]	; 0x34
	double Pout = 0;
 800cbce:	f04f 0200 	mov.w	r2, #0
 800cbd2:	f04f 0300 	mov.w	r3, #0
 800cbd6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	double Iout = 0;
 800cbda:	f04f 0200 	mov.w	r2, #0
 800cbde:	f04f 0300 	mov.w	r3, #0
 800cbe2:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double Dout = 0;
 800cbe6:	f04f 0200 	mov.w	r2, #0
 800cbea:	f04f 0300 	mov.w	r3, #0
 800cbee:	e9c7 2306 	strd	r2, r3, [r7, #24]

	pid->error[1] = pid->error[0];
 800cbf2:	687b      	ldr	r3, [r7, #4]
 800cbf4:	68da      	ldr	r2, [r3, #12]
 800cbf6:	687b      	ldr	r3, [r7, #4]
 800cbf8:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 800cbfa:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800cbfe:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800cc02:	f7f3 fb41 	bl	8000288 <__aeabi_dsub>
 800cc06:	4602      	mov	r2, r0
 800cc08:	460b      	mov	r3, r1
 800cc0a:	4610      	mov	r0, r2
 800cc0c:	4619      	mov	r1, r3
 800cc0e:	f7f3 ffeb 	bl	8000be8 <__aeabi_d2f>
 800cc12:	4602      	mov	r2, r0
 800cc14:	687b      	ldr	r3, [r7, #4]
 800cc16:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 800cc18:	687b      	ldr	r3, [r7, #4]
 800cc1a:	ed93 7a03 	vldr	s14, [r3, #12]
 800cc1e:	687b      	ldr	r3, [r7, #4]
 800cc20:	edd3 7a00 	vldr	s15, [r3]
 800cc24:	ee27 7a27 	vmul.f32	s14, s14, s15
 800cc28:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc2a:	ee07 3a90 	vmov	s15, r3
 800cc2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cc32:	ee67 7a27 	vmul.f32	s15, s14, s15
 800cc36:	ee17 0a90 	vmov	r0, s15
 800cc3a:	f7f3 fc85 	bl	8000548 <__aeabi_f2d>
 800cc3e:	4602      	mov	r2, r0
 800cc40:	460b      	mov	r3, r1
 800cc42:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 800cc46:	687b      	ldr	r3, [r7, #4]
 800cc48:	ed93 7a03 	vldr	s14, [r3, #12]
 800cc4c:	687b      	ldr	r3, [r7, #4]
 800cc4e:	edd3 7a04 	vldr	s15, [r3, #16]
 800cc52:	ee37 7a67 	vsub.f32	s14, s14, s15
 800cc56:	687b      	ldr	r3, [r7, #4]
 800cc58:	edd3 7a02 	vldr	s15, [r3, #8]
 800cc5c:	ee27 7a27 	vmul.f32	s14, s14, s15
 800cc60:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc62:	ee07 3a90 	vmov	s15, r3
 800cc66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cc6a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800cc6e:	ee17 0a90 	vmov	r0, s15
 800cc72:	f7f3 fc69 	bl	8000548 <__aeabi_f2d>
 800cc76:	4602      	mov	r2, r0
 800cc78:	460b      	mov	r3, r1
 800cc7a:	e9c7 2306 	strd	r2, r3, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 800cc7e:	687b      	ldr	r3, [r7, #4]
 800cc80:	ed93 7a05 	vldr	s14, [r3, #20]
 800cc84:	687b      	ldr	r3, [r7, #4]
 800cc86:	edd3 6a03 	vldr	s13, [r3, #12]
 800cc8a:	687b      	ldr	r3, [r7, #4]
 800cc8c:	edd3 7a01 	vldr	s15, [r3, #4]
 800cc90:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800cc94:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc96:	ee07 3a90 	vmov	s15, r3
 800cc9a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cc9e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800cca2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cca6:	687b      	ldr	r3, [r7, #4]
 800cca8:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 800ccac:	687b      	ldr	r3, [r7, #4]
 800ccae:	f103 0214 	add.w	r2, r3, #20
 800ccb2:	687b      	ldr	r3, [r7, #4]
 800ccb4:	edd3 7a06 	vldr	s15, [r3, #24]
 800ccb8:	eddf 0a1b 	vldr	s1, [pc, #108]	; 800cd28 <speed_pid+0x180>
 800ccbc:	eeb0 0a67 	vmov.f32	s0, s15
 800ccc0:	4610      	mov	r0, r2
 800ccc2:	f000 fa98 	bl	800d1f6 <float_minmax>
	Iout = pid->integral;
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	695b      	ldr	r3, [r3, #20]
 800ccca:	4618      	mov	r0, r3
 800cccc:	f7f3 fc3c 	bl	8000548 <__aeabi_f2d>
 800ccd0:	4602      	mov	r2, r0
 800ccd2:	460b      	mov	r3, r1
 800ccd4:	e9c7 2308 	strd	r2, r3, [r7, #32]
	pid->output = Pout + Iout + Dout;
 800ccd8:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800ccdc:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800cce0:	f7f3 fad4 	bl	800028c <__adddf3>
 800cce4:	4602      	mov	r2, r0
 800cce6:	460b      	mov	r3, r1
 800cce8:	4610      	mov	r0, r2
 800ccea:	4619      	mov	r1, r3
 800ccec:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800ccf0:	f7f3 facc 	bl	800028c <__adddf3>
 800ccf4:	4602      	mov	r2, r0
 800ccf6:	460b      	mov	r3, r1
 800ccf8:	4610      	mov	r0, r2
 800ccfa:	4619      	mov	r1, r3
 800ccfc:	f7f3 ff74 	bl	8000be8 <__aeabi_d2f>
 800cd00:	4602      	mov	r2, r0
 800cd02:	687b      	ldr	r3, [r7, #4]
 800cd04:	621a      	str	r2, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 800cd06:	687b      	ldr	r3, [r7, #4]
 800cd08:	f103 0220 	add.w	r2, r3, #32
 800cd0c:	687b      	ldr	r3, [r7, #4]
 800cd0e:	edd3 7a07 	vldr	s15, [r3, #28]
 800cd12:	eddf 0a05 	vldr	s1, [pc, #20]	; 800cd28 <speed_pid+0x180>
 800cd16:	eeb0 0a67 	vmov.f32	s0, s15
 800cd1a:	4610      	mov	r0, r2
 800cd1c:	f000 fa6b 	bl	800d1f6 <float_minmax>
}
 800cd20:	bf00      	nop
 800cd22:	3738      	adds	r7, #56	; 0x38
 800cd24:	46bd      	mov	sp, r7
 800cd26:	bd80      	pop	{r7, pc}
 800cd28:	00000000 	.word	0x00000000

0800cd2c <motor_send_RTOS>:
 * @param id_two	id number of second motor to send can message to
 * @param id_three	id number of third motor to send can message to
 * @param id_four	id number of fourth motor to send can message to
 */

void motor_send_RTOS(void *argument){
 800cd2c:	b580      	push	{r7, lr}
 800cd2e:	b086      	sub	sp, #24
 800cd30:	af02      	add	r7, sp, #8
 800cd32:	6078      	str	r0, [r7, #4]
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800cd34:	f010 f8b0 	bl	801ce98 <xTaskGetTickCount>
 800cd38:	4603      	mov	r3, r0
 800cd3a:	60fb      	str	r3, [r7, #12]
	while (1)
	{
		motor_send_can(can_motors, Leftwheel_MOTOR_ID, Rightwheel_MOTOR_ID, 0, 0);
 800cd3c:	2300      	movs	r3, #0
 800cd3e:	9300      	str	r3, [sp, #0]
 800cd40:	2300      	movs	r3, #0
 800cd42:	2202      	movs	r2, #2
 800cd44:	2101      	movs	r1, #1
 800cd46:	4809      	ldr	r0, [pc, #36]	; (800cd6c <motor_send_RTOS+0x40>)
 800cd48:	f000 f814 	bl	800cd74 <motor_send_can>
		joint_motor_send_can(&leg_move, L1_MOTOR_ID, L2_MOTOR_ID, R1_MOTOR_ID, R2_MOTOR_ID);
 800cd4c:	2306      	movs	r3, #6
 800cd4e:	9300      	str	r3, [sp, #0]
 800cd50:	2305      	movs	r3, #5
 800cd52:	2207      	movs	r2, #7
 800cd54:	2108      	movs	r1, #8
 800cd56:	4806      	ldr	r0, [pc, #24]	; (800cd70 <motor_send_RTOS+0x44>)
 800cd58:	f7fa fa82 	bl	8007260 <joint_motor_send_can>
		vTaskDelayUntil(&xLastWakeTime, 4);
 800cd5c:	f107 030c 	add.w	r3, r7, #12
 800cd60:	2104      	movs	r1, #4
 800cd62:	4618      	mov	r0, r3
 800cd64:	f00f feca 	bl	801cafc <vTaskDelayUntil>
		motor_send_can(can_motors, Leftwheel_MOTOR_ID, Rightwheel_MOTOR_ID, 0, 0);
 800cd68:	e7e8      	b.n	800cd3c <motor_send_RTOS+0x10>
 800cd6a:	bf00      	nop
 800cd6c:	200018a8 	.word	0x200018a8
 800cd70:	2000301c 	.word	0x2000301c

0800cd74 <motor_send_can>:
	}
}

void motor_send_can(motor_data_t motor_all[], uint8_t id_one, uint8_t id_two, uint8_t id_three, uint8_t id_four) {
 800cd74:	b580      	push	{r7, lr}
 800cd76:	b08e      	sub	sp, #56	; 0x38
 800cd78:	af00      	add	r7, sp, #0
 800cd7a:	6078      	str	r0, [r7, #4]
 800cd7c:	4608      	mov	r0, r1
 800cd7e:	4611      	mov	r1, r2
 800cd80:	461a      	mov	r2, r3
 800cd82:	4603      	mov	r3, r0
 800cd84:	70fb      	strb	r3, [r7, #3]
 800cd86:	460b      	mov	r3, r1
 800cd88:	70bb      	strb	r3, [r7, #2]
 800cd8a:	4613      	mov	r3, r2
 800cd8c:	707b      	strb	r3, [r7, #1]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	uint32_t temp_checker = 0;
 800cd8e:	2300      	movs	r3, #0
 800cd90:	637b      	str	r3, [r7, #52]	; 0x34
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 800cd92:	2300      	movs	r3, #0
 800cd94:	623b      	str	r3, [r7, #32]
	CAN_tx_message.RTR = CAN_RTR_DATA;
 800cd96:	2300      	movs	r3, #0
 800cd98:	627b      	str	r3, [r7, #36]	; 0x24
	CAN_tx_message.DLC = 0x08;
 800cd9a:	2308      	movs	r3, #8
 800cd9c:	62bb      	str	r3, [r7, #40]	; 0x28
	if (id_one < 25 && id_one > 0) {
 800cd9e:	78fb      	ldrb	r3, [r7, #3]
 800cda0:	2b18      	cmp	r3, #24
 800cda2:	d80b      	bhi.n	800cdbc <motor_send_can+0x48>
 800cda4:	78fb      	ldrb	r3, [r7, #3]
 800cda6:	2b00      	cmp	r3, #0
 800cda8:	d008      	beq.n	800cdbc <motor_send_can+0x48>
		temp_checker = temp_checker | 1 << (id_one - 1);
 800cdaa:	78fb      	ldrb	r3, [r7, #3]
 800cdac:	3b01      	subs	r3, #1
 800cdae:	2201      	movs	r2, #1
 800cdb0:	fa02 f303 	lsl.w	r3, r2, r3
 800cdb4:	461a      	mov	r2, r3
 800cdb6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cdb8:	4313      	orrs	r3, r2
 800cdba:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_two < 25 && id_two > 0) {
 800cdbc:	78bb      	ldrb	r3, [r7, #2]
 800cdbe:	2b18      	cmp	r3, #24
 800cdc0:	d80b      	bhi.n	800cdda <motor_send_can+0x66>
 800cdc2:	78bb      	ldrb	r3, [r7, #2]
 800cdc4:	2b00      	cmp	r3, #0
 800cdc6:	d008      	beq.n	800cdda <motor_send_can+0x66>
		temp_checker = temp_checker | 1 << (id_two - 1);
 800cdc8:	78bb      	ldrb	r3, [r7, #2]
 800cdca:	3b01      	subs	r3, #1
 800cdcc:	2201      	movs	r2, #1
 800cdce:	fa02 f303 	lsl.w	r3, r2, r3
 800cdd2:	461a      	mov	r2, r3
 800cdd4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cdd6:	4313      	orrs	r3, r2
 800cdd8:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_three < 25 && id_three > 0) {
 800cdda:	787b      	ldrb	r3, [r7, #1]
 800cddc:	2b18      	cmp	r3, #24
 800cdde:	d80b      	bhi.n	800cdf8 <motor_send_can+0x84>
 800cde0:	787b      	ldrb	r3, [r7, #1]
 800cde2:	2b00      	cmp	r3, #0
 800cde4:	d008      	beq.n	800cdf8 <motor_send_can+0x84>
		temp_checker = temp_checker | 1 << (id_three - 1);
 800cde6:	787b      	ldrb	r3, [r7, #1]
 800cde8:	3b01      	subs	r3, #1
 800cdea:	2201      	movs	r2, #1
 800cdec:	fa02 f303 	lsl.w	r3, r2, r3
 800cdf0:	461a      	mov	r2, r3
 800cdf2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cdf4:	4313      	orrs	r3, r2
 800cdf6:	637b      	str	r3, [r7, #52]	; 0x34
	}
	if (id_four < 25 && id_four > 0) {
 800cdf8:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800cdfc:	2b18      	cmp	r3, #24
 800cdfe:	d80d      	bhi.n	800ce1c <motor_send_can+0xa8>
 800ce00:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800ce04:	2b00      	cmp	r3, #0
 800ce06:	d009      	beq.n	800ce1c <motor_send_can+0xa8>
		temp_checker = temp_checker | 1 << (id_four - 1);
 800ce08:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800ce0c:	3b01      	subs	r3, #1
 800ce0e:	2201      	movs	r2, #1
 800ce10:	fa02 f303 	lsl.w	r3, r2, r3
 800ce14:	461a      	mov	r2, r3
 800ce16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ce18:	4313      	orrs	r3, r2
 800ce1a:	637b      	str	r3, [r7, #52]	; 0x34
	}

	if (temp_checker & 0x00000F) {
 800ce1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ce1e:	f003 030f 	and.w	r3, r3, #15
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	d054      	beq.n	800ced0 <motor_send_can+0x15c>
		CAN_tx_message.StdId = 0x200;
 800ce26:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ce2a:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x0].rpm_pid.output;
 800ce2c:	687b      	ldr	r3, [r7, #4]
 800ce2e:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce36:	ee17 3a90 	vmov	r3, s15
 800ce3a:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800ce3c:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce40:	121b      	asrs	r3, r3, #8
 800ce42:	b21b      	sxth	r3, r3
 800ce44:	b2db      	uxtb	r3, r3
 800ce46:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800ce48:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce4a:	b2db      	uxtb	r3, r3
 800ce4c:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x1].rpm_pid.output;
 800ce4e:	687b      	ldr	r3, [r7, #4]
 800ce50:	33f0      	adds	r3, #240	; 0xf0
 800ce52:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce5a:	ee17 3a90 	vmov	r3, s15
 800ce5e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800ce60:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce64:	121b      	asrs	r3, r3, #8
 800ce66:	b21b      	sxth	r3, r3
 800ce68:	b2db      	uxtb	r3, r3
 800ce6a:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800ce6c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce6e:	b2db      	uxtb	r3, r3
 800ce70:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x2].rpm_pid.output;
 800ce72:	687b      	ldr	r3, [r7, #4]
 800ce74:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 800ce78:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ce7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce80:	ee17 3a90 	vmov	r3, s15
 800ce84:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800ce86:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ce8a:	121b      	asrs	r3, r3, #8
 800ce8c:	b21b      	sxth	r3, r3
 800ce8e:	b2db      	uxtb	r3, r3
 800ce90:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800ce92:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ce94:	b2db      	uxtb	r3, r3
 800ce96:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x3].rpm_pid.output;
 800ce98:	687b      	ldr	r3, [r7, #4]
 800ce9a:	f503 7334 	add.w	r3, r3, #720	; 0x2d0
 800ce9e:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cea2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cea6:	ee17 3a90 	vmov	r3, s15
 800ceaa:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800ceac:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800ceb0:	121b      	asrs	r3, r3, #8
 800ceb2:	b21b      	sxth	r3, r3
 800ceb4:	b2db      	uxtb	r3, r3
 800ceb6:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800ceb8:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800ceba:	b2db      	uxtb	r3, r3
 800cebc:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800cebe:	f107 030c 	add.w	r3, r7, #12
 800cec2:	f107 0210 	add.w	r2, r7, #16
 800cec6:	f107 0118 	add.w	r1, r7, #24
 800ceca:	48bf      	ldr	r0, [pc, #764]	; (800d1c8 <motor_send_can+0x454>)
 800cecc:	f003 f89c 	bl	8010008 <HAL_CAN_AddTxMessage>
//	 	temp_converter = motor_all[0x7].rpm_pid.output;
//	 	CAN_send_data[6] = temp_converter >> 8;
//	 	CAN_send_data[7] = temp_converter;
//	 	HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
//	 }
	if (temp_checker & 0x000F00) {
 800ced0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ced2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800ced6:	2b00      	cmp	r3, #0
 800ced8:	d057      	beq.n	800cf8a <motor_send_can+0x216>
		CAN_tx_message.StdId = 0x2FF;
 800ceda:	f240 23ff 	movw	r3, #767	; 0x2ff
 800cede:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x8].rpm_pid.output;
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	f503 63f0 	add.w	r3, r3, #1920	; 0x780
 800cee6:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800ceea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ceee:	ee17 3a90 	vmov	r3, s15
 800cef2:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800cef4:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cef8:	121b      	asrs	r3, r3, #8
 800cefa:	b21b      	sxth	r3, r3
 800cefc:	b2db      	uxtb	r3, r3
 800cefe:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800cf00:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf02:	b2db      	uxtb	r3, r3
 800cf04:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x9].rpm_pid.output;
 800cf06:	687b      	ldr	r3, [r7, #4]
 800cf08:	f503 6307 	add.w	r3, r3, #2160	; 0x870
 800cf0c:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf14:	ee17 3a90 	vmov	r3, s15
 800cf18:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800cf1a:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf1e:	121b      	asrs	r3, r3, #8
 800cf20:	b21b      	sxth	r3, r3
 800cf22:	b2db      	uxtb	r3, r3
 800cf24:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800cf26:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf28:	b2db      	uxtb	r3, r3
 800cf2a:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0xA].rpm_pid.output;
 800cf2c:	687b      	ldr	r3, [r7, #4]
 800cf2e:	f503 6316 	add.w	r3, r3, #2400	; 0x960
 800cf32:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf3a:	ee17 3a90 	vmov	r3, s15
 800cf3e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cf40:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf44:	121b      	asrs	r3, r3, #8
 800cf46:	b21b      	sxth	r3, r3
 800cf48:	b2db      	uxtb	r3, r3
 800cf4a:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800cf4c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf4e:	b2db      	uxtb	r3, r3
 800cf50:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0xB].rpm_pid.output;
 800cf52:	687b      	ldr	r3, [r7, #4]
 800cf54:	f503 6325 	add.w	r3, r3, #2640	; 0xa50
 800cf58:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cf5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf60:	ee17 3a90 	vmov	r3, s15
 800cf64:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800cf66:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cf6a:	121b      	asrs	r3, r3, #8
 800cf6c:	b21b      	sxth	r3, r3
 800cf6e:	b2db      	uxtb	r3, r3
 800cf70:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800cf72:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cf74:	b2db      	uxtb	r3, r3
 800cf76:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800cf78:	f107 030c 	add.w	r3, r7, #12
 800cf7c:	f107 0210 	add.w	r2, r7, #16
 800cf80:	f107 0118 	add.w	r1, r7, #24
 800cf84:	4890      	ldr	r0, [pc, #576]	; (800d1c8 <motor_send_can+0x454>)
 800cf86:	f003 f83f 	bl	8010008 <HAL_CAN_AddTxMessage>
	}
#ifndef CHASSIS_MCU
	if (temp_checker & 0x00F000) {
 800cf8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cf8c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800cf90:	2b00      	cmp	r3, #0
 800cf92:	d057      	beq.n	800d044 <motor_send_can+0x2d0>
		CAN_tx_message.StdId = 0x200;
 800cf94:	f44f 7300 	mov.w	r3, #512	; 0x200
 800cf98:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x0 + 12].rpm_pid.output;
 800cf9a:	687b      	ldr	r3, [r7, #4]
 800cf9c:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800cfa0:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cfa4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cfa8:	ee17 3a90 	vmov	r3, s15
 800cfac:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800cfae:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cfb2:	121b      	asrs	r3, r3, #8
 800cfb4:	b21b      	sxth	r3, r3
 800cfb6:	b2db      	uxtb	r3, r3
 800cfb8:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800cfba:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cfbc:	b2db      	uxtb	r3, r3
 800cfbe:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x1 + 12].rpm_pid.output;
 800cfc0:	687b      	ldr	r3, [r7, #4]
 800cfc2:	f503 6343 	add.w	r3, r3, #3120	; 0xc30
 800cfc6:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cfca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cfce:	ee17 3a90 	vmov	r3, s15
 800cfd2:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800cfd4:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cfd8:	121b      	asrs	r3, r3, #8
 800cfda:	b21b      	sxth	r3, r3
 800cfdc:	b2db      	uxtb	r3, r3
 800cfde:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800cfe0:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800cfe2:	b2db      	uxtb	r3, r3
 800cfe4:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x2 + 12].rpm_pid.output;
 800cfe6:	687b      	ldr	r3, [r7, #4]
 800cfe8:	f503 6352 	add.w	r3, r3, #3360	; 0xd20
 800cfec:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800cff0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cff4:	ee17 3a90 	vmov	r3, s15
 800cff8:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800cffa:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800cffe:	121b      	asrs	r3, r3, #8
 800d000:	b21b      	sxth	r3, r3
 800d002:	b2db      	uxtb	r3, r3
 800d004:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800d006:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d008:	b2db      	uxtb	r3, r3
 800d00a:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x3 + 12].rpm_pid.output;
 800d00c:	687b      	ldr	r3, [r7, #4]
 800d00e:	f503 6361 	add.w	r3, r3, #3600	; 0xe10
 800d012:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d016:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d01a:	ee17 3a90 	vmov	r3, s15
 800d01e:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800d020:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d024:	121b      	asrs	r3, r3, #8
 800d026:	b21b      	sxth	r3, r3
 800d028:	b2db      	uxtb	r3, r3
 800d02a:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800d02c:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d02e:	b2db      	uxtb	r3, r3
 800d030:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800d032:	f107 030c 	add.w	r3, r7, #12
 800d036:	f107 0210 	add.w	r2, r7, #16
 800d03a:	f107 0118 	add.w	r1, r7, #24
 800d03e:	4863      	ldr	r0, [pc, #396]	; (800d1cc <motor_send_can+0x458>)
 800d040:	f002 ffe2 	bl	8010008 <HAL_CAN_AddTxMessage>
	}
	if (temp_checker & 0x0F0000) {
 800d044:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d046:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 800d04a:	2b00      	cmp	r3, #0
 800d04c:	d058      	beq.n	800d100 <motor_send_can+0x38c>
		CAN_tx_message.StdId = 0x1FF;
 800d04e:	f240 13ff 	movw	r3, #511	; 0x1ff
 800d052:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x4 + 12].rpm_pid.output;
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	f503 6370 	add.w	r3, r3, #3840	; 0xf00
 800d05a:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d05e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d062:	ee17 3a90 	vmov	r3, s15
 800d066:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800d068:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d06c:	121b      	asrs	r3, r3, #8
 800d06e:	b21b      	sxth	r3, r3
 800d070:	b2db      	uxtb	r3, r3
 800d072:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800d074:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d076:	b2db      	uxtb	r3, r3
 800d078:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x5 + 12].rpm_pid.output;
 800d07a:	687b      	ldr	r3, [r7, #4]
 800d07c:	f503 637f 	add.w	r3, r3, #4080	; 0xff0
 800d080:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d084:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d088:	ee17 3a90 	vmov	r3, s15
 800d08c:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800d08e:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d092:	121b      	asrs	r3, r3, #8
 800d094:	b21b      	sxth	r3, r3
 800d096:	b2db      	uxtb	r3, r3
 800d098:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800d09a:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d09c:	b2db      	uxtb	r3, r3
 800d09e:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0x6 + 12].rpm_pid.output;
 800d0a0:	687b      	ldr	r3, [r7, #4]
 800d0a2:	f503 5387 	add.w	r3, r3, #4320	; 0x10e0
 800d0a6:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d0aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d0ae:	ee17 3a90 	vmov	r3, s15
 800d0b2:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800d0b4:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d0b8:	121b      	asrs	r3, r3, #8
 800d0ba:	b21b      	sxth	r3, r3
 800d0bc:	b2db      	uxtb	r3, r3
 800d0be:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800d0c0:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d0c2:	b2db      	uxtb	r3, r3
 800d0c4:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0x7 + 12].rpm_pid.output;
 800d0c6:	687b      	ldr	r3, [r7, #4]
 800d0c8:	f503 538e 	add.w	r3, r3, #4544	; 0x11c0
 800d0cc:	3310      	adds	r3, #16
 800d0ce:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d0d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d0d6:	ee17 3a90 	vmov	r3, s15
 800d0da:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800d0dc:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d0e0:	121b      	asrs	r3, r3, #8
 800d0e2:	b21b      	sxth	r3, r3
 800d0e4:	b2db      	uxtb	r3, r3
 800d0e6:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800d0e8:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d0ea:	b2db      	uxtb	r3, r3
 800d0ec:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800d0ee:	f107 030c 	add.w	r3, r7, #12
 800d0f2:	f107 0210 	add.w	r2, r7, #16
 800d0f6:	f107 0118 	add.w	r1, r7, #24
 800d0fa:	4834      	ldr	r0, [pc, #208]	; (800d1cc <motor_send_can+0x458>)
 800d0fc:	f002 ff84 	bl	8010008 <HAL_CAN_AddTxMessage>
	}
	if (temp_checker & 0xF00000) {
 800d100:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d102:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800d106:	2b00      	cmp	r3, #0
 800d108:	d059      	beq.n	800d1be <motor_send_can+0x44a>
		CAN_tx_message.StdId = 0x2FF;
 800d10a:	f240 23ff 	movw	r3, #767	; 0x2ff
 800d10e:	61bb      	str	r3, [r7, #24]
		temp_converter = motor_all[0x8 + 12].rpm_pid.output;
 800d110:	687b      	ldr	r3, [r7, #4]
 800d112:	f503 5396 	add.w	r3, r3, #4800	; 0x12c0
 800d116:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d11a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d11e:	ee17 3a90 	vmov	r3, s15
 800d122:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[0] = temp_converter >> 8;
 800d124:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d128:	121b      	asrs	r3, r3, #8
 800d12a:	b21b      	sxth	r3, r3
 800d12c:	b2db      	uxtb	r3, r3
 800d12e:	743b      	strb	r3, [r7, #16]
		CAN_send_data[1] = temp_converter;
 800d130:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d132:	b2db      	uxtb	r3, r3
 800d134:	747b      	strb	r3, [r7, #17]
		temp_converter = motor_all[0x9 + 12].rpm_pid.output;
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	f503 539d 	add.w	r3, r3, #5024	; 0x13a0
 800d13c:	3310      	adds	r3, #16
 800d13e:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d142:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d146:	ee17 3a90 	vmov	r3, s15
 800d14a:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[2] = temp_converter >> 8;
 800d14c:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d150:	121b      	asrs	r3, r3, #8
 800d152:	b21b      	sxth	r3, r3
 800d154:	b2db      	uxtb	r3, r3
 800d156:	74bb      	strb	r3, [r7, #18]
		CAN_send_data[3] = temp_converter;
 800d158:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d15a:	b2db      	uxtb	r3, r3
 800d15c:	74fb      	strb	r3, [r7, #19]
		temp_converter = motor_all[0xA + 12].rpm_pid.output;
 800d15e:	687b      	ldr	r3, [r7, #4]
 800d160:	f503 53a5 	add.w	r3, r3, #5280	; 0x14a0
 800d164:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d168:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d16c:	ee17 3a90 	vmov	r3, s15
 800d170:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[4] = temp_converter >> 8;
 800d172:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d176:	121b      	asrs	r3, r3, #8
 800d178:	b21b      	sxth	r3, r3
 800d17a:	b2db      	uxtb	r3, r3
 800d17c:	753b      	strb	r3, [r7, #20]
		CAN_send_data[5] = temp_converter;
 800d17e:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d180:	b2db      	uxtb	r3, r3
 800d182:	757b      	strb	r3, [r7, #21]
		temp_converter = motor_all[0xB + 12].rpm_pid.output;
 800d184:	687b      	ldr	r3, [r7, #4]
 800d186:	f503 53ac 	add.w	r3, r3, #5504	; 0x1580
 800d18a:	3310      	adds	r3, #16
 800d18c:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d190:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d194:	ee17 3a90 	vmov	r3, s15
 800d198:	867b      	strh	r3, [r7, #50]	; 0x32
		CAN_send_data[6] = temp_converter >> 8;
 800d19a:	f9b7 3032 	ldrsh.w	r3, [r7, #50]	; 0x32
 800d19e:	121b      	asrs	r3, r3, #8
 800d1a0:	b21b      	sxth	r3, r3
 800d1a2:	b2db      	uxtb	r3, r3
 800d1a4:	75bb      	strb	r3, [r7, #22]
		CAN_send_data[7] = temp_converter;
 800d1a6:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 800d1a8:	b2db      	uxtb	r3, r3
 800d1aa:	75fb      	strb	r3, [r7, #23]
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
 800d1ac:	f107 030c 	add.w	r3, r7, #12
 800d1b0:	f107 0210 	add.w	r2, r7, #16
 800d1b4:	f107 0118 	add.w	r1, r7, #24
 800d1b8:	4804      	ldr	r0, [pc, #16]	; (800d1cc <motor_send_can+0x458>)
 800d1ba:	f002 ff25 	bl	8010008 <HAL_CAN_AddTxMessage>
	}
#endif
}
 800d1be:	bf00      	nop
 800d1c0:	3738      	adds	r7, #56	; 0x38
 800d1c2:	46bd      	mov	sp, r7
 800d1c4:	bd80      	pop	{r7, pc}
 800d1c6:	bf00      	nop
 800d1c8:	20000434 	.word	0x20000434
 800d1cc:	2000045c 	.word	0x2000045c

0800d1d0 <kill_can>:

void kill_can() {
 800d1d0:	b480      	push	{r7}
 800d1d2:	b089      	sub	sp, #36	; 0x24
 800d1d4:	af00      	add	r7, sp, #0

	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8] = { 0, };
 800d1d6:	2300      	movs	r3, #0
 800d1d8:	603b      	str	r3, [r7, #0]
 800d1da:	2300      	movs	r3, #0
 800d1dc:	607b      	str	r3, [r7, #4]
	uint32_t send_mail_box;
	CAN_tx_message.IDE = CAN_ID_STD;
 800d1de:	2300      	movs	r3, #0
 800d1e0:	613b      	str	r3, [r7, #16]
	CAN_tx_message.RTR = CAN_RTR_DATA;
 800d1e2:	2300      	movs	r3, #0
 800d1e4:	617b      	str	r3, [r7, #20]
	CAN_tx_message.DLC = 0x08;
 800d1e6:	2308      	movs	r3, #8
 800d1e8:	61bb      	str	r3, [r7, #24]
//	HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
//	CAN_tx_message.StdId = 0x2FF;
//	HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
//
//#endif
}
 800d1ea:	bf00      	nop
 800d1ec:	3724      	adds	r7, #36	; 0x24
 800d1ee:	46bd      	mov	sp, r7
 800d1f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1f4:	4770      	bx	lr

0800d1f6 <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 800d1f6:	b480      	push	{r7}
 800d1f8:	b085      	sub	sp, #20
 800d1fa:	af00      	add	r7, sp, #0
 800d1fc:	60f8      	str	r0, [r7, #12]
 800d1fe:	ed87 0a02 	vstr	s0, [r7, #8]
 800d202:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 800d206:	68fb      	ldr	r3, [r7, #12]
 800d208:	edd3 7a00 	vldr	s15, [r3]
 800d20c:	ed97 7a02 	vldr	s14, [r7, #8]
 800d210:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d218:	d503      	bpl.n	800d222 <float_minmax+0x2c>
		*motor_in = motor_max;
 800d21a:	68fb      	ldr	r3, [r7, #12]
 800d21c:	68ba      	ldr	r2, [r7, #8]
 800d21e:	601a      	str	r2, [r3, #0]
 800d220:	e012      	b.n	800d248 <float_minmax+0x52>
	} else if (*motor_in < -motor_max) {
 800d222:	68fb      	ldr	r3, [r7, #12]
 800d224:	ed93 7a00 	vldr	s14, [r3]
 800d228:	edd7 7a02 	vldr	s15, [r7, #8]
 800d22c:	eef1 7a67 	vneg.f32	s15, s15
 800d230:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d238:	d506      	bpl.n	800d248 <float_minmax+0x52>
		*motor_in = -motor_max;
 800d23a:	edd7 7a02 	vldr	s15, [r7, #8]
 800d23e:	eef1 7a67 	vneg.f32	s15, s15
 800d242:	68fb      	ldr	r3, [r7, #12]
 800d244:	edc3 7a00 	vstr	s15, [r3]
	}

	if (fabs(*motor_in) < motor_min) {
 800d248:	68fb      	ldr	r3, [r7, #12]
 800d24a:	edd3 7a00 	vldr	s15, [r3]
 800d24e:	eef0 7ae7 	vabs.f32	s15, s15
 800d252:	ed97 7a01 	vldr	s14, [r7, #4]
 800d256:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d25a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d25e:	dc00      	bgt.n	800d262 <float_minmax+0x6c>
		*motor_in = 0;
	}

}
 800d260:	e003      	b.n	800d26a <float_minmax+0x74>
		*motor_in = 0;
 800d262:	68fb      	ldr	r3, [r7, #12]
 800d264:	f04f 0200 	mov.w	r2, #0
 800d268:	601a      	str	r2, [r3, #0]
}
 800d26a:	bf00      	nop
 800d26c:	3714      	adds	r7, #20
 800d26e:	46bd      	mov	sp, r7
 800d270:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d274:	4770      	bx	lr
	...

0800d278 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800d278:	b5b0      	push	{r4, r5, r7, lr}
 800d27a:	b08e      	sub	sp, #56	; 0x38
 800d27c:	af00      	add	r7, sp, #0
 800d27e:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800d280:	f04f 0200 	mov.w	r2, #0
 800d284:	f04f 0300 	mov.w	r3, #0
 800d288:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
	double endtime = 0;
 800d28c:	f04f 0200 	mov.w	r2, #0
 800d290:	f04f 0300 	mov.w	r3, #0
 800d294:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	double dt;
	vTaskDelay(5);
 800d298:	2005      	movs	r0, #5
 800d29a:	f00f fcad 	bl	801cbf8 <vTaskDelay>
	double leftWheel_offset = (double)can_motors[1].raw_data.angle[0];
 800d29e:	4b88      	ldr	r3, [pc, #544]	; (800d4c0 <motors_process_task+0x248>)
 800d2a0:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	; 0xf4
 800d2a4:	4618      	mov	r0, r3
 800d2a6:	f7f3 f93d 	bl	8000524 <__aeabi_i2d>
 800d2aa:	4602      	mov	r2, r0
 800d2ac:	460b      	mov	r3, r1
 800d2ae:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)can_motors[0].raw_data.angle[0];
 800d2b2:	4b83      	ldr	r3, [pc, #524]	; (800d4c0 <motors_process_task+0x248>)
 800d2b4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800d2b8:	4618      	mov	r0, r3
 800d2ba:	f7f3 f933 	bl	8000524 <__aeabi_i2d>
 800d2be:	4602      	mov	r2, r0
 800d2c0:	460b      	mov	r3, r1
 800d2c2:	e9c7 2306 	strd	r2, r3, [r7, #24]
	can_motors[1].rpm_pid.kp = 5000;
 800d2c6:	4b7e      	ldr	r3, [pc, #504]	; (800d4c0 <motors_process_task+0x248>)
 800d2c8:	4a7e      	ldr	r2, [pc, #504]	; (800d4c4 <motors_process_task+0x24c>)
 800d2ca:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
	can_motors[0].rpm_pid.kp = 5000;
 800d2ce:	4b7c      	ldr	r3, [pc, #496]	; (800d4c0 <motors_process_task+0x248>)
 800d2d0:	4a7c      	ldr	r2, [pc, #496]	; (800d4c4 <motors_process_task+0x24c>)
 800d2d2:	639a      	str	r2, [r3, #56]	; 0x38
	can_motors[1].rpm_pid.ki = 0;
 800d2d4:	4b7a      	ldr	r3, [pc, #488]	; (800d4c0 <motors_process_task+0x248>)
 800d2d6:	f04f 0200 	mov.w	r2, #0
 800d2da:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c
	can_motors[0].rpm_pid.ki = 0;
 800d2de:	4b78      	ldr	r3, [pc, #480]	; (800d4c0 <motors_process_task+0x248>)
 800d2e0:	f04f 0200 	mov.w	r2, #0
 800d2e4:	63da      	str	r2, [r3, #60]	; 0x3c
	can_motors[1].rpm_pid.kd = 0;
 800d2e6:	4b76      	ldr	r3, [pc, #472]	; (800d4c0 <motors_process_task+0x248>)
 800d2e8:	f04f 0200 	mov.w	r2, #0
 800d2ec:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
	can_motors[0].rpm_pid.kd = 0;
 800d2f0:	4b73      	ldr	r3, [pc, #460]	; (800d4c0 <motors_process_task+0x248>)
 800d2f2:	f04f 0200 	mov.w	r2, #0
 800d2f6:	641a      	str	r2, [r3, #64]	; 0x40
	can_motors[1].rpm_pid.max_out = 10000;
 800d2f8:	4b71      	ldr	r3, [pc, #452]	; (800d4c0 <motors_process_task+0x248>)
 800d2fa:	4a73      	ldr	r2, [pc, #460]	; (800d4c8 <motors_process_task+0x250>)
 800d2fc:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	can_motors[0].rpm_pid.max_out = 10000;
 800d300:	4b6f      	ldr	r3, [pc, #444]	; (800d4c0 <motors_process_task+0x248>)
 800d302:	4a71      	ldr	r2, [pc, #452]	; (800d4c8 <motors_process_task+0x250>)
 800d304:	655a      	str	r2, [r3, #84]	; 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800d306:	f7f4 ffb3 	bl	8002270 <get_microseconds>
 800d30a:	4603      	mov	r3, r0
 800d30c:	4618      	mov	r0, r3
 800d30e:	f7f3 f8f9 	bl	8000504 <__aeabi_ui2d>
 800d312:	4602      	mov	r2, r0
 800d314:	460b      	mov	r3, r1
 800d316:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
        dt = endtime - starttime;
 800d31a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800d31e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800d322:	f7f2 ffb1 	bl	8000288 <__aeabi_dsub>
 800d326:	4602      	mov	r2, r0
 800d328:	460b      	mov	r3, r1
 800d32a:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800d32e:	f00f fdb3 	bl	801ce98 <xTaskGetTickCount>
 800d332:	4603      	mov	r3, r0
 800d334:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(can_motors); // Pass the array directly
 800d336:	4862      	ldr	r0, [pc, #392]	; (800d4c0 <motors_process_task+0x248>)
 800d338:	f000 f8e2 	bl	800d500 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&can_motors[8], 3.62+PI, -1);
 800d33c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d340:	ed9f 0a62 	vldr	s0, [pc, #392]	; 800d4cc <motors_process_task+0x254>
 800d344:	4862      	ldr	r0, [pc, #392]	; (800d4d0 <motors_process_task+0x258>)
 800d346:	f000 f963 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[9], 3.62, -1);
 800d34a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d34e:	ed9f 0a61 	vldr	s0, [pc, #388]	; 800d4d4 <motors_process_task+0x25c>
 800d352:	4861      	ldr	r0, [pc, #388]	; (800d4d8 <motors_process_task+0x260>)
 800d354:	f000 f95c 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[16], -0.531, 1);
 800d358:	2101      	movs	r1, #1
 800d35a:	ed9f 0a60 	vldr	s0, [pc, #384]	; 800d4dc <motors_process_task+0x264>
 800d35e:	4860      	ldr	r0, [pc, #384]	; (800d4e0 <motors_process_task+0x268>)
 800d360:	f000 f956 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[17], -3.62, 1);
 800d364:	2101      	movs	r1, #1
 800d366:	ed9f 0a5f 	vldr	s0, [pc, #380]	; 800d4e4 <motors_process_task+0x26c>
 800d36a:	485f      	ldr	r0, [pc, #380]	; (800d4e8 <motors_process_task+0x270>)
 800d36c:	f000 f950 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[1], 0, -1);
 800d370:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d374:	ed9f 0a5d 	vldr	s0, [pc, #372]	; 800d4ec <motors_process_task+0x274>
 800d378:	485d      	ldr	r0, [pc, #372]	; (800d4f0 <motors_process_task+0x278>)
 800d37a:	f000 f949 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&can_motors[0], 0, 1);
 800d37e:	2101      	movs	r1, #1
 800d380:	ed9f 0a5a 	vldr	s0, [pc, #360]	; 800d4ec <motors_process_task+0x274>
 800d384:	484e      	ldr	r0, [pc, #312]	; (800d4c0 <motors_process_task+0x248>)
 800d386:	f000 f943 	bl	800d610 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&can_motors[8],0,-1.0);
 800d38a:	ed9f 1b49 	vldr	d1, [pc, #292]	; 800d4b0 <motors_process_task+0x238>
 800d38e:	ed9f 0a57 	vldr	s0, [pc, #348]	; 800d4ec <motors_process_task+0x274>
 800d392:	484f      	ldr	r0, [pc, #316]	; (800d4d0 <motors_process_task+0x258>)
 800d394:	f000 f99c 	bl	800d6d0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[9],0,-1.0);
 800d398:	ed9f 1b45 	vldr	d1, [pc, #276]	; 800d4b0 <motors_process_task+0x238>
 800d39c:	ed9f 0a53 	vldr	s0, [pc, #332]	; 800d4ec <motors_process_task+0x274>
 800d3a0:	484d      	ldr	r0, [pc, #308]	; (800d4d8 <motors_process_task+0x260>)
 800d3a2:	f000 f995 	bl	800d6d0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[16],0,1.0);
 800d3a6:	ed9f 1b44 	vldr	d1, [pc, #272]	; 800d4b8 <motors_process_task+0x240>
 800d3aa:	ed9f 0a50 	vldr	s0, [pc, #320]	; 800d4ec <motors_process_task+0x274>
 800d3ae:	484c      	ldr	r0, [pc, #304]	; (800d4e0 <motors_process_task+0x268>)
 800d3b0:	f000 f98e 	bl	800d6d0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&can_motors[17],0,1.0);
 800d3b4:	ed9f 1b40 	vldr	d1, [pc, #256]	; 800d4b8 <motors_process_task+0x240>
 800d3b8:	ed9f 0a4c 	vldr	s0, [pc, #304]	; 800d4ec <motors_process_task+0x274>
 800d3bc:	484a      	ldr	r0, [pc, #296]	; (800d4e8 <motors_process_task+0x270>)
 800d3be:	f000 f987 	bl	800d6d0 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&can_motors[0],15,1.0);
 800d3c2:	ed9f 1b3d 	vldr	d1, [pc, #244]	; 800d4b8 <motors_process_task+0x240>
 800d3c6:	eeb2 0a0e 	vmov.f32	s0, #46	; 0x41700000  15.0
 800d3ca:	483d      	ldr	r0, [pc, #244]	; (800d4c0 <motors_process_task+0x248>)
 800d3cc:	f000 fa0c 	bl	800d7e8 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&can_motors[1],15,-1.0);
 800d3d0:	ed9f 1b37 	vldr	d1, [pc, #220]	; 800d4b0 <motors_process_task+0x238>
 800d3d4:	eeb2 0a0e 	vmov.f32	s0, #46	; 0x41700000  15.0
 800d3d8:	4845      	ldr	r0, [pc, #276]	; (800d4f0 <motors_process_task+0x278>)
 800d3da:	f000 fa05 	bl	800d7e8 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)can_motors[1].torque ,(double)can_motors[1].raw_data.rpm/1000, &can_motors[1].rpm_pid);
 800d3de:	4b38      	ldr	r3, [pc, #224]	; (800d4c0 <motors_process_task+0x248>)
 800d3e0:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d3e4:	4618      	mov	r0, r3
 800d3e6:	f7f3 f8af 	bl	8000548 <__aeabi_f2d>
 800d3ea:	4604      	mov	r4, r0
 800d3ec:	460d      	mov	r5, r1
 800d3ee:	4b34      	ldr	r3, [pc, #208]	; (800d4c0 <motors_process_task+0x248>)
 800d3f0:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	; 0xf8
 800d3f4:	4618      	mov	r0, r3
 800d3f6:	f7f3 f895 	bl	8000524 <__aeabi_i2d>
 800d3fa:	f04f 0200 	mov.w	r2, #0
 800d3fe:	4b3d      	ldr	r3, [pc, #244]	; (800d4f4 <motors_process_task+0x27c>)
 800d400:	f7f3 fa24 	bl	800084c <__aeabi_ddiv>
 800d404:	4602      	mov	r2, r0
 800d406:	460b      	mov	r3, r1
 800d408:	ec43 2b17 	vmov	d7, r2, r3
 800d40c:	483a      	ldr	r0, [pc, #232]	; (800d4f8 <motors_process_task+0x280>)
 800d40e:	eeb0 1a47 	vmov.f32	s2, s14
 800d412:	eef0 1a67 	vmov.f32	s3, s15
 800d416:	ec45 4b10 	vmov	d0, r4, r5
 800d41a:	f7ff fbc5 	bl	800cba8 <speed_pid>
        speed_pid((double)can_motors[0].torque ,(double)can_motors[0].raw_data.rpm/1000, &can_motors[0].rpm_pid);
 800d41e:	4b28      	ldr	r3, [pc, #160]	; (800d4c0 <motors_process_task+0x248>)
 800d420:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d422:	4618      	mov	r0, r3
 800d424:	f7f3 f890 	bl	8000548 <__aeabi_f2d>
 800d428:	4604      	mov	r4, r0
 800d42a:	460d      	mov	r5, r1
 800d42c:	4b24      	ldr	r3, [pc, #144]	; (800d4c0 <motors_process_task+0x248>)
 800d42e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d432:	4618      	mov	r0, r3
 800d434:	f7f3 f876 	bl	8000524 <__aeabi_i2d>
 800d438:	f04f 0200 	mov.w	r2, #0
 800d43c:	4b2d      	ldr	r3, [pc, #180]	; (800d4f4 <motors_process_task+0x27c>)
 800d43e:	f7f3 fa05 	bl	800084c <__aeabi_ddiv>
 800d442:	4602      	mov	r2, r0
 800d444:	460b      	mov	r3, r1
 800d446:	ec43 2b17 	vmov	d7, r2, r3
 800d44a:	482c      	ldr	r0, [pc, #176]	; (800d4fc <motors_process_task+0x284>)
 800d44c:	eeb0 1a47 	vmov.f32	s2, s14
 800d450:	eef0 1a67 	vmov.f32	s3, s15
 800d454:	ec45 4b10 	vmov	d0, r4, r5
 800d458:	f7ff fba6 	bl	800cba8 <speed_pid>
        can_motors[1].output = can_motors[1].rpm_pid.output;
 800d45c:	4b18      	ldr	r3, [pc, #96]	; (800d4c0 <motors_process_task+0x248>)
 800d45e:	edd3 7a52 	vldr	s15, [r3, #328]	; 0x148
 800d462:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d466:	ee17 3a90 	vmov	r3, s15
 800d46a:	b21a      	sxth	r2, r3
 800d46c:	4b14      	ldr	r3, [pc, #80]	; (800d4c0 <motors_process_task+0x248>)
 800d46e:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
        can_motors[0].output = can_motors[0].rpm_pid.output;
 800d472:	4b13      	ldr	r3, [pc, #76]	; (800d4c0 <motors_process_task+0x248>)
 800d474:	edd3 7a16 	vldr	s15, [r3, #88]	; 0x58
 800d478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d47c:	ee17 3a90 	vmov	r3, s15
 800d480:	b21a      	sxth	r2, r3
 800d482:	4b0f      	ldr	r3, [pc, #60]	; (800d4c0 <motors_process_task+0x248>)
 800d484:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
        starttime = get_microseconds();
 800d488:	f7f4 fef2 	bl	8002270 <get_microseconds>
 800d48c:	4603      	mov	r3, r0
 800d48e:	4618      	mov	r0, r3
 800d490:	f7f3 f838 	bl	8000504 <__aeabi_ui2d>
 800d494:	4602      	mov	r2, r0
 800d496:	460b      	mov	r3, r1
 800d498:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30




        vTaskDelayUntil(&start_time, 5);
 800d49c:	f107 030c 	add.w	r3, r7, #12
 800d4a0:	2105      	movs	r1, #5
 800d4a2:	4618      	mov	r0, r3
 800d4a4:	f00f fb2a 	bl	801cafc <vTaskDelayUntil>
        endtime = get_microseconds();
 800d4a8:	e72d      	b.n	800d306 <motors_process_task+0x8e>
 800d4aa:	bf00      	nop
 800d4ac:	f3af 8000 	nop.w
 800d4b0:	00000000 	.word	0x00000000
 800d4b4:	bff00000 	.word	0xbff00000
 800d4b8:	00000000 	.word	0x00000000
 800d4bc:	3ff00000 	.word	0x3ff00000
 800d4c0:	200018a8 	.word	0x200018a8
 800d4c4:	459c4000 	.word	0x459c4000
 800d4c8:	461c4000 	.word	0x461c4000
 800d4cc:	40d85ef8 	.word	0x40d85ef8
 800d4d0:	20002028 	.word	0x20002028
 800d4d4:	4067ae14 	.word	0x4067ae14
 800d4d8:	20002118 	.word	0x20002118
 800d4dc:	bf07ef9e 	.word	0xbf07ef9e
 800d4e0:	200027a8 	.word	0x200027a8
 800d4e4:	c067ae14 	.word	0xc067ae14
 800d4e8:	20002898 	.word	0x20002898
 800d4ec:	00000000 	.word	0x00000000
 800d4f0:	20001998 	.word	0x20001998
 800d4f4:	408f4000 	.word	0x408f4000
 800d4f8:	200019d0 	.word	0x200019d0
 800d4fc:	200018e0 	.word	0x200018e0

0800d500 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800d500:	b590      	push	{r4, r7, lr}
 800d502:	b087      	sub	sp, #28
 800d504:	af00      	add	r7, sp, #0
 800d506:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800d508:	2300      	movs	r3, #0
 800d50a:	617b      	str	r3, [r7, #20]
 800d50c:	e06b      	b.n	800d5e6 <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800d50e:	697a      	ldr	r2, [r7, #20]
 800d510:	4613      	mov	r3, r2
 800d512:	011b      	lsls	r3, r3, #4
 800d514:	1a9b      	subs	r3, r3, r2
 800d516:	011b      	lsls	r3, r3, #4
 800d518:	461a      	mov	r2, r3
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	4413      	add	r3, r2
 800d51e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800d522:	4619      	mov	r1, r3
 800d524:	697a      	ldr	r2, [r7, #20]
 800d526:	4613      	mov	r3, r2
 800d528:	011b      	lsls	r3, r3, #4
 800d52a:	1a9b      	subs	r3, r3, r2
 800d52c:	011b      	lsls	r3, r3, #4
 800d52e:	461a      	mov	r2, r3
 800d530:	687b      	ldr	r3, [r7, #4]
 800d532:	4413      	add	r3, r2
 800d534:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 800d538:	4613      	mov	r3, r2
 800d53a:	04db      	lsls	r3, r3, #19
 800d53c:	1a9b      	subs	r3, r3, r2
 800d53e:	035b      	lsls	r3, r3, #13
 800d540:	440b      	add	r3, r1
 800d542:	4618      	mov	r0, r3
 800d544:	f7f2 ffee 	bl	8000524 <__aeabi_i2d>
 800d548:	4602      	mov	r2, r0
 800d54a:	460b      	mov	r3, r1
 800d54c:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800d550:	a32a      	add	r3, pc, #168	; (adr r3, 800d5fc <raw_angle_to_rad+0xfc>)
 800d552:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d556:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d55a:	f7f3 f977 	bl	800084c <__aeabi_ddiv>
 800d55e:	4602      	mov	r2, r0
 800d560:	460b      	mov	r3, r1
 800d562:	4610      	mov	r0, r2
 800d564:	4619      	mov	r1, r3
 800d566:	4602      	mov	r2, r0
 800d568:	460b      	mov	r3, r1
 800d56a:	f7f2 fe8f 	bl	800028c <__adddf3>
 800d56e:	4602      	mov	r2, r0
 800d570:	460b      	mov	r3, r1
 800d572:	4610      	mov	r0, r2
 800d574:	4619      	mov	r1, r3
 800d576:	a323      	add	r3, pc, #140	; (adr r3, 800d604 <raw_angle_to_rad+0x104>)
 800d578:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d57c:	f7f3 f83c 	bl	80005f8 <__aeabi_dmul>
 800d580:	4602      	mov	r2, r0
 800d582:	460b      	mov	r3, r1
 800d584:	4610      	mov	r0, r2
 800d586:	4619      	mov	r1, r3
 800d588:	697a      	ldr	r2, [r7, #20]
 800d58a:	4613      	mov	r3, r2
 800d58c:	011b      	lsls	r3, r3, #4
 800d58e:	1a9b      	subs	r3, r3, r2
 800d590:	011b      	lsls	r3, r3, #4
 800d592:	461a      	mov	r2, r3
 800d594:	687b      	ldr	r3, [r7, #4]
 800d596:	189c      	adds	r4, r3, r2
 800d598:	f7f3 fb26 	bl	8000be8 <__aeabi_d2f>
 800d59c:	4603      	mov	r3, r0
 800d59e:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800d5a0:	a316      	add	r3, pc, #88	; (adr r3, 800d5fc <raw_angle_to_rad+0xfc>)
 800d5a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d5a6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d5aa:	f7f3 f94f 	bl	800084c <__aeabi_ddiv>
 800d5ae:	4602      	mov	r2, r0
 800d5b0:	460b      	mov	r3, r1
 800d5b2:	4610      	mov	r0, r2
 800d5b4:	4619      	mov	r1, r3
 800d5b6:	f04f 0200 	mov.w	r2, #0
 800d5ba:	4b0f      	ldr	r3, [pc, #60]	; (800d5f8 <raw_angle_to_rad+0xf8>)
 800d5bc:	f7f3 f81c 	bl	80005f8 <__aeabi_dmul>
 800d5c0:	4602      	mov	r2, r0
 800d5c2:	460b      	mov	r3, r1
 800d5c4:	4610      	mov	r0, r2
 800d5c6:	4619      	mov	r1, r3
 800d5c8:	697a      	ldr	r2, [r7, #20]
 800d5ca:	4613      	mov	r3, r2
 800d5cc:	011b      	lsls	r3, r3, #4
 800d5ce:	1a9b      	subs	r3, r3, r2
 800d5d0:	011b      	lsls	r3, r3, #4
 800d5d2:	461a      	mov	r2, r3
 800d5d4:	687b      	ldr	r3, [r7, #4]
 800d5d6:	189c      	adds	r4, r3, r2
 800d5d8:	f7f3 fb06 	bl	8000be8 <__aeabi_d2f>
 800d5dc:	4603      	mov	r3, r0
 800d5de:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800d5e0:	697b      	ldr	r3, [r7, #20]
 800d5e2:	3301      	adds	r3, #1
 800d5e4:	617b      	str	r3, [r7, #20]
 800d5e6:	697b      	ldr	r3, [r7, #20]
 800d5e8:	2b17      	cmp	r3, #23
 800d5ea:	dd90      	ble.n	800d50e <raw_angle_to_rad+0xe>
    }
}
 800d5ec:	bf00      	nop
 800d5ee:	bf00      	nop
 800d5f0:	371c      	adds	r7, #28
 800d5f2:	46bd      	mov	sp, r7
 800d5f4:	bd90      	pop	{r4, r7, pc}
 800d5f6:	bf00      	nop
 800d5f8:	40768000 	.word	0x40768000
 800d5fc:	00000000 	.word	0x00000000
 800d600:	40bfff00 	.word	0x40bfff00
 800d604:	60000000 	.word	0x60000000
 800d608:	400921fb 	.word	0x400921fb
 800d60c:	00000000 	.word	0x00000000

0800d610 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800d610:	b580      	push	{r7, lr}
 800d612:	b084      	sub	sp, #16
 800d614:	af00      	add	r7, sp, #0
 800d616:	60f8      	str	r0, [r7, #12]
 800d618:	ed87 0a02 	vstr	s0, [r7, #8]
 800d61c:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800d624:	d11b      	bne.n	800d65e <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800d626:	68fb      	ldr	r3, [r7, #12]
 800d628:	edd3 7a04 	vldr	s15, [r3, #16]
 800d62c:	ed97 7a02 	vldr	s14, [r7, #8]
 800d630:	ee77 7a67 	vsub.f32	s15, s14, s15
 800d634:	68fb      	ldr	r3, [r7, #12]
 800d636:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800d63a:	68fb      	ldr	r3, [r7, #12]
 800d63c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d640:	425b      	negs	r3, r3
 800d642:	4618      	mov	r0, r3
 800d644:	f7f2 ff6e 	bl	8000524 <__aeabi_i2d>
 800d648:	a31d      	add	r3, pc, #116	; (adr r3, 800d6c0 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d64a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d64e:	f7f2 ffd3 	bl	80005f8 <__aeabi_dmul>
 800d652:	4602      	mov	r2, r0
 800d654:	460b      	mov	r3, r1
 800d656:	68f9      	ldr	r1, [r7, #12]
 800d658:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800d65c:	e019      	b.n	800d692 <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800d65e:	68fb      	ldr	r3, [r7, #12]
 800d660:	ed93 7a04 	vldr	s14, [r3, #16]
 800d664:	edd7 7a02 	vldr	s15, [r7, #8]
 800d668:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d66c:	68fb      	ldr	r3, [r7, #12]
 800d66e:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800d672:	68fb      	ldr	r3, [r7, #12]
 800d674:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d678:	4618      	mov	r0, r3
 800d67a:	f7f2 ff53 	bl	8000524 <__aeabi_i2d>
 800d67e:	a310      	add	r3, pc, #64	; (adr r3, 800d6c0 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d680:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d684:	f7f2 ffb8 	bl	80005f8 <__aeabi_dmul>
 800d688:	4602      	mov	r2, r0
 800d68a:	460b      	mov	r3, r1
 800d68c:	68f9      	ldr	r1, [r7, #12]
 800d68e:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800d692:	68fb      	ldr	r3, [r7, #12]
 800d694:	699b      	ldr	r3, [r3, #24]
 800d696:	4618      	mov	r0, r3
 800d698:	f7f2 ff56 	bl	8000548 <__aeabi_f2d>
 800d69c:	a30a      	add	r3, pc, #40	; (adr r3, 800d6c8 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800d69e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d6a2:	f7f2 ffa9 	bl	80005f8 <__aeabi_dmul>
 800d6a6:	4602      	mov	r2, r0
 800d6a8:	460b      	mov	r3, r1
 800d6aa:	4610      	mov	r0, r2
 800d6ac:	4619      	mov	r1, r3
 800d6ae:	f7f3 fa9b 	bl	8000be8 <__aeabi_d2f>
 800d6b2:	4602      	mov	r2, r0
 800d6b4:	68fb      	ldr	r3, [r7, #12]
 800d6b6:	61da      	str	r2, [r3, #28]

}
 800d6b8:	bf00      	nop
 800d6ba:	3710      	adds	r7, #16
 800d6bc:	46bd      	mov	sp, r7
 800d6be:	bd80      	pop	{r7, pc}
 800d6c0:	0f3cb3e5 	.word	0x0f3cb3e5
 800d6c4:	3fbaceee 	.word	0x3fbaceee
 800d6c8:	0d03cf26 	.word	0x0d03cf26
 800d6cc:	404ca5dc 	.word	0x404ca5dc

0800d6d0 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800d6d0:	b580      	push	{r7, lr}
 800d6d2:	b086      	sub	sp, #24
 800d6d4:	af00      	add	r7, sp, #0
 800d6d6:	60f8      	str	r0, [r7, #12]
 800d6d8:	ed87 0a02 	vstr	s0, [r7, #8]
 800d6dc:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d6e0:	f04f 0200 	mov.w	r2, #0
 800d6e4:	f04f 0300 	mov.w	r3, #0
 800d6e8:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d6ec:	68fb      	ldr	r3, [r7, #12]
 800d6ee:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d6f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d6f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d6fa:	dd17      	ble.n	800d72c <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800d6fc:	68fb      	ldr	r3, [r7, #12]
 800d6fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d700:	4618      	mov	r0, r3
 800d702:	f7f2 ff21 	bl	8000548 <__aeabi_f2d>
 800d706:	a333      	add	r3, pc, #204	; (adr r3, 800d7d4 <motors_torque_to_current_6020+0x104>)
 800d708:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d70c:	f7f2 ff74 	bl	80005f8 <__aeabi_dmul>
 800d710:	4602      	mov	r2, r0
 800d712:	460b      	mov	r3, r1
 800d714:	4610      	mov	r0, r2
 800d716:	4619      	mov	r1, r3
 800d718:	a330      	add	r3, pc, #192	; (adr r3, 800d7dc <motors_torque_to_current_6020+0x10c>)
 800d71a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d71e:	f7f2 fdb5 	bl	800028c <__adddf3>
 800d722:	4602      	mov	r2, r0
 800d724:	460b      	mov	r3, r1
 800d726:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d72a:	e025      	b.n	800d778 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800d72c:	68fb      	ldr	r3, [r7, #12]
 800d72e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d732:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d73a:	d517      	bpl.n	800d76c <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d740:	4618      	mov	r0, r3
 800d742:	f7f2 ff01 	bl	8000548 <__aeabi_f2d>
 800d746:	a323      	add	r3, pc, #140	; (adr r3, 800d7d4 <motors_torque_to_current_6020+0x104>)
 800d748:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d74c:	f7f2 ff54 	bl	80005f8 <__aeabi_dmul>
 800d750:	4602      	mov	r2, r0
 800d752:	460b      	mov	r3, r1
 800d754:	4610      	mov	r0, r2
 800d756:	4619      	mov	r1, r3
 800d758:	a320      	add	r3, pc, #128	; (adr r3, 800d7dc <motors_torque_to_current_6020+0x10c>)
 800d75a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d75e:	f7f2 fd93 	bl	8000288 <__aeabi_dsub>
 800d762:	4602      	mov	r2, r0
 800d764:	460b      	mov	r3, r1
 800d766:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d76a:	e005      	b.n	800d778 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800d76c:	f04f 0200 	mov.w	r2, #0
 800d770:	f04f 0300 	mov.w	r3, #0
 800d774:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800d778:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d77c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d780:	f7f2 ff3a 	bl	80005f8 <__aeabi_dmul>
 800d784:	4602      	mov	r2, r0
 800d786:	460b      	mov	r3, r1
 800d788:	4610      	mov	r0, r2
 800d78a:	4619      	mov	r1, r3
 800d78c:	f04f 0200 	mov.w	r2, #0
 800d790:	4b0f      	ldr	r3, [pc, #60]	; (800d7d0 <motors_torque_to_current_6020+0x100>)
 800d792:	f7f3 f85b 	bl	800084c <__aeabi_ddiv>
 800d796:	4602      	mov	r2, r0
 800d798:	460b      	mov	r3, r1
 800d79a:	4610      	mov	r0, r2
 800d79c:	4619      	mov	r1, r3
 800d79e:	a30a      	add	r3, pc, #40	; (adr r3, 800d7c8 <motors_torque_to_current_6020+0xf8>)
 800d7a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d7a4:	f7f2 ff28 	bl	80005f8 <__aeabi_dmul>
 800d7a8:	4602      	mov	r2, r0
 800d7aa:	460b      	mov	r3, r1
 800d7ac:	4610      	mov	r0, r2
 800d7ae:	4619      	mov	r1, r3
 800d7b0:	f7f3 f9d2 	bl	8000b58 <__aeabi_d2iz>
 800d7b4:	4603      	mov	r3, r0
 800d7b6:	b21a      	sxth	r2, r3
 800d7b8:	68fb      	ldr	r3, [r7, #12]
 800d7ba:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
}
 800d7be:	bf00      	nop
 800d7c0:	3718      	adds	r7, #24
 800d7c2:	46bd      	mov	sp, r7
 800d7c4:	bd80      	pop	{r7, pc}
 800d7c6:	bf00      	nop
 800d7c8:	00000000 	.word	0x00000000
 800d7cc:	40d00040 	.word	0x40d00040
 800d7d0:	40080000 	.word	0x40080000
 800d7d4:	cccccccd 	.word	0xcccccccd
 800d7d8:	3ffccccc 	.word	0x3ffccccc
 800d7dc:	9999999a 	.word	0x9999999a
 800d7e0:	3fc99999 	.word	0x3fc99999
 800d7e4:	00000000 	.word	0x00000000

0800d7e8 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800d7e8:	b580      	push	{r7, lr}
 800d7ea:	b086      	sub	sp, #24
 800d7ec:	af00      	add	r7, sp, #0
 800d7ee:	60f8      	str	r0, [r7, #12]
 800d7f0:	ed87 0a02 	vstr	s0, [r7, #8]
 800d7f4:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d7f8:	f04f 0200 	mov.w	r2, #0
 800d7fc:	f04f 0300 	mov.w	r3, #0
 800d800:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d804:	68fb      	ldr	r3, [r7, #12]
 800d806:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d80a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d80e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d812:	dd20      	ble.n	800d856 <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800d814:	68fb      	ldr	r3, [r7, #12]
 800d816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d818:	4618      	mov	r0, r3
 800d81a:	f7f2 fe95 	bl	8000548 <__aeabi_f2d>
 800d81e:	f04f 0200 	mov.w	r2, #0
 800d822:	4b55      	ldr	r3, [pc, #340]	; (800d978 <motors_torque_to_current_3508_gearbox+0x190>)
 800d824:	f7f3 f812 	bl	800084c <__aeabi_ddiv>
 800d828:	4602      	mov	r2, r0
 800d82a:	460b      	mov	r3, r1
 800d82c:	4610      	mov	r0, r2
 800d82e:	4619      	mov	r1, r3
 800d830:	f04f 0200 	mov.w	r2, #0
 800d834:	4b51      	ldr	r3, [pc, #324]	; (800d97c <motors_torque_to_current_3508_gearbox+0x194>)
 800d836:	f7f2 fedf 	bl	80005f8 <__aeabi_dmul>
 800d83a:	4602      	mov	r2, r0
 800d83c:	460b      	mov	r3, r1
 800d83e:	4610      	mov	r0, r2
 800d840:	4619      	mov	r1, r3
 800d842:	a349      	add	r3, pc, #292	; (adr r3, 800d968 <motors_torque_to_current_3508_gearbox+0x180>)
 800d844:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d848:	f7f2 fd20 	bl	800028c <__adddf3>
 800d84c:	4602      	mov	r2, r0
 800d84e:	460b      	mov	r3, r1
 800d850:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d854:	e02e      	b.n	800d8b4 <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800d856:	68fb      	ldr	r3, [r7, #12]
 800d858:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800d85c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d864:	d520      	bpl.n	800d8a8 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800d866:	68fb      	ldr	r3, [r7, #12]
 800d868:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d86a:	4618      	mov	r0, r3
 800d86c:	f7f2 fe6c 	bl	8000548 <__aeabi_f2d>
 800d870:	f04f 0200 	mov.w	r2, #0
 800d874:	4b40      	ldr	r3, [pc, #256]	; (800d978 <motors_torque_to_current_3508_gearbox+0x190>)
 800d876:	f7f2 ffe9 	bl	800084c <__aeabi_ddiv>
 800d87a:	4602      	mov	r2, r0
 800d87c:	460b      	mov	r3, r1
 800d87e:	4610      	mov	r0, r2
 800d880:	4619      	mov	r1, r3
 800d882:	f04f 0200 	mov.w	r2, #0
 800d886:	4b3d      	ldr	r3, [pc, #244]	; (800d97c <motors_torque_to_current_3508_gearbox+0x194>)
 800d888:	f7f2 feb6 	bl	80005f8 <__aeabi_dmul>
 800d88c:	4602      	mov	r2, r0
 800d88e:	460b      	mov	r3, r1
 800d890:	4610      	mov	r0, r2
 800d892:	4619      	mov	r1, r3
 800d894:	a334      	add	r3, pc, #208	; (adr r3, 800d968 <motors_torque_to_current_3508_gearbox+0x180>)
 800d896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d89a:	f7f2 fcf5 	bl	8000288 <__aeabi_dsub>
 800d89e:	4602      	mov	r2, r0
 800d8a0:	460b      	mov	r3, r1
 800d8a2:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d8a6:	e005      	b.n	800d8b4 <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800d8a8:	f04f 0200 	mov.w	r2, #0
 800d8ac:	f04f 0300 	mov.w	r3, #0
 800d8b0:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800d8b4:	68b8      	ldr	r0, [r7, #8]
 800d8b6:	f7f2 fe47 	bl	8000548 <__aeabi_f2d>
 800d8ba:	4602      	mov	r2, r0
 800d8bc:	460b      	mov	r3, r1
 800d8be:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d8c2:	f7f3 f929 	bl	8000b18 <__aeabi_dcmpgt>
 800d8c6:	4603      	mov	r3, r0
 800d8c8:	2b00      	cmp	r3, #0
 800d8ca:	d007      	beq.n	800d8dc <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800d8cc:	68b8      	ldr	r0, [r7, #8]
 800d8ce:	f7f2 fe3b 	bl	8000548 <__aeabi_f2d>
 800d8d2:	4602      	mov	r2, r0
 800d8d4:	460b      	mov	r3, r1
 800d8d6:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d8da:	e01e      	b.n	800d91a <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800d8dc:	edd7 7a02 	vldr	s15, [r7, #8]
 800d8e0:	eef1 7a67 	vneg.f32	s15, s15
 800d8e4:	ee17 3a90 	vmov	r3, s15
 800d8e8:	4618      	mov	r0, r3
 800d8ea:	f7f2 fe2d 	bl	8000548 <__aeabi_f2d>
 800d8ee:	4602      	mov	r2, r0
 800d8f0:	460b      	mov	r3, r1
 800d8f2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d8f6:	f7f3 f8f1 	bl	8000adc <__aeabi_dcmplt>
 800d8fa:	4603      	mov	r3, r0
 800d8fc:	2b00      	cmp	r3, #0
 800d8fe:	d00c      	beq.n	800d91a <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800d900:	edd7 7a02 	vldr	s15, [r7, #8]
 800d904:	eef1 7a67 	vneg.f32	s15, s15
 800d908:	ee17 3a90 	vmov	r3, s15
 800d90c:	4618      	mov	r0, r3
 800d90e:	f7f2 fe1b 	bl	8000548 <__aeabi_f2d>
 800d912:	4602      	mov	r2, r0
 800d914:	460b      	mov	r3, r1
 800d916:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800d91a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d91e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d922:	f7f2 fe69 	bl	80005f8 <__aeabi_dmul>
 800d926:	4602      	mov	r2, r0
 800d928:	460b      	mov	r3, r1
 800d92a:	4610      	mov	r0, r2
 800d92c:	4619      	mov	r1, r3
 800d92e:	f04f 0200 	mov.w	r2, #0
 800d932:	4b12      	ldr	r3, [pc, #72]	; (800d97c <motors_torque_to_current_3508_gearbox+0x194>)
 800d934:	f7f2 ff8a 	bl	800084c <__aeabi_ddiv>
 800d938:	4602      	mov	r2, r0
 800d93a:	460b      	mov	r3, r1
 800d93c:	4610      	mov	r0, r2
 800d93e:	4619      	mov	r1, r3
 800d940:	a30b      	add	r3, pc, #44	; (adr r3, 800d970 <motors_torque_to_current_3508_gearbox+0x188>)
 800d942:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d946:	f7f2 fe57 	bl	80005f8 <__aeabi_dmul>
 800d94a:	4602      	mov	r2, r0
 800d94c:	460b      	mov	r3, r1
 800d94e:	4610      	mov	r0, r2
 800d950:	4619      	mov	r1, r3
 800d952:	f7f3 f901 	bl	8000b58 <__aeabi_d2iz>
 800d956:	4603      	mov	r3, r0
 800d958:	b21a      	sxth	r2, r3
 800d95a:	68fb      	ldr	r3, [r7, #12]
 800d95c:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
}
 800d960:	bf00      	nop
 800d962:	3718      	adds	r7, #24
 800d964:	46bd      	mov	sp, r7
 800d966:	bd80      	pop	{r7, pc}
 800d968:	47ae147b 	.word	0x47ae147b
 800d96c:	3fb47ae1 	.word	0x3fb47ae1
 800d970:	00000000 	.word	0x00000000
 800d974:	40d00040 	.word	0x40d00040
 800d978:	40120000 	.word	0x40120000
 800d97c:	40340000 	.word	0x40340000

0800d980 <arm_sqrt_f32>:
   * <code>in</code> is negative value and returns zero output for negative values.
   */
  static __INLINE arm_status arm_sqrt_f32(
  float32_t in,
  float32_t * pOut)
  {
 800d980:	b580      	push	{r7, lr}
 800d982:	b082      	sub	sp, #8
 800d984:	af00      	add	r7, sp, #0
 800d986:	ed87 0a01 	vstr	s0, [r7, #4]
 800d98a:	6038      	str	r0, [r7, #0]
    if(in >= 0.0f)
 800d98c:	edd7 7a01 	vldr	s15, [r7, #4]
 800d990:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d998:	db0a      	blt.n	800d9b0 <arm_sqrt_f32+0x30>
#if   (__FPU_USED == 1) && defined ( __CC_ARM   )
      *pOut = __sqrtf(in);
#elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
      *pOut = __builtin_sqrtf(in);
#elif (__FPU_USED == 1) && defined(__GNUC__)
      *pOut = __builtin_sqrtf(in);
 800d99a:	ed97 0a01 	vldr	s0, [r7, #4]
 800d99e:	f016 fe59 	bl	8024654 <sqrtf>
 800d9a2:	eef0 7a40 	vmov.f32	s15, s0
 800d9a6:	683b      	ldr	r3, [r7, #0]
 800d9a8:	edc3 7a00 	vstr	s15, [r3]
      __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
#else
      *pOut = sqrtf(in);
#endif

      return (ARM_MATH_SUCCESS);
 800d9ac:	2300      	movs	r3, #0
 800d9ae:	e005      	b.n	800d9bc <arm_sqrt_f32+0x3c>
    }
    else
    {
      *pOut = 0.0f;
 800d9b0:	683b      	ldr	r3, [r7, #0]
 800d9b2:	f04f 0200 	mov.w	r2, #0
 800d9b6:	601a      	str	r2, [r3, #0]
      return (ARM_MATH_ARGUMENT_ERROR);
 800d9b8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    }
  }
 800d9bc:	4618      	mov	r0, r3
 800d9be:	3708      	adds	r7, #8
 800d9c0:	46bd      	mov	sp, r7
 800d9c2:	bd80      	pop	{r7, pc}
 800d9c4:	0000      	movs	r0, r0
	...

0800d9c8 <referee_processing_task>:
ref_magazine_data_t ref_mag_data;
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;


void referee_processing_task(void *argument) {
 800d9c8:	b5b0      	push	{r4, r5, r7, lr}
 800d9ca:	b0ca      	sub	sp, #296	; 0x128
 800d9cc:	af00      	add	r7, sp, #0
 800d9ce:	f507 7394 	add.w	r3, r7, #296	; 0x128
 800d9d2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800d9d6:	6018      	str	r0, [r3, #0]
	referee_limiters.robot_level = 0;
 800d9d8:	4ba0      	ldr	r3, [pc, #640]	; (800dc5c <referee_processing_task+0x294>)
 800d9da:	2200      	movs	r2, #0
 800d9dc:	731a      	strb	r2, [r3, #12]
	queue_t referee_uart_q;
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	referee_limiters.feeding_speed = LV1_FEEDER;
 800d9de:	4b9f      	ldr	r3, [pc, #636]	; (800dc5c <referee_processing_task+0x294>)
 800d9e0:	f44f 7252 	mov.w	r2, #840	; 0x348
 800d9e4:	801a      	strh	r2, [r3, #0]
	referee_limiters.projectile_speed = LV1_PROJECTILE;
 800d9e6:	4b9d      	ldr	r3, [pc, #628]	; (800dc5c <referee_processing_task+0x294>)
 800d9e8:	220d      	movs	r2, #13
 800d9ea:	805a      	strh	r2, [r3, #2]
	referee_limiters.wheel_power_limit = LV1_POWER * CHASSIS_POWER_MULT;
 800d9ec:	4b9b      	ldr	r3, [pc, #620]	; (800dc5c <referee_processing_task+0x294>)
 800d9ee:	4a9c      	ldr	r2, [pc, #624]	; (800dc60 <referee_processing_task+0x298>)
 800d9f0:	605a      	str	r2, [r3, #4]
	referee_limiters.robot_level = 1;
 800d9f2:	4b9a      	ldr	r3, [pc, #616]	; (800dc5c <referee_processing_task+0x294>)
 800d9f4:	2201      	movs	r2, #1
 800d9f6:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800d9f8:	2100      	movs	r1, #0
 800d9fa:	2007      	movs	r0, #7
 800d9fc:	f7f4 fb60 	bl	80020c0 <status_led>
	status_led(8, off_led);
 800da00:	2101      	movs	r1, #1
 800da02:	2008      	movs	r0, #8
 800da04:	f7f4 fb5c 	bl	80020c0 <status_led>
	uint8_t graphic_sent = 0;
 800da08:	2300      	movs	r3, #0
 800da0a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
	ref_robot_data.robot_id = 0;
 800da0e:	4b95      	ldr	r3, [pc, #596]	; (800dc64 <referee_processing_task+0x29c>)
 800da10:	2200      	movs	r2, #0
 800da12:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800da14:	f107 030c 	add.w	r3, r7, #12
 800da18:	f107 0108 	add.w	r1, r7, #8
 800da1c:	2202      	movs	r2, #2
 800da1e:	4892      	ldr	r0, [pc, #584]	; (800dc68 <referee_processing_task+0x2a0>)
 800da20:	f7f5 f962 	bl	8002ce8 <ref_usart_start>
	while (1) {
//			uint32_t ref_check = ulTaskNotifyTake(pdTRUE, 5);
		status_led(5, on_led);
 800da24:	2100      	movs	r1, #0
 800da26:	2005      	movs	r0, #5
 800da28:	f7f4 fb4a 	bl	80020c0 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800da2c:	f107 030c 	add.w	r3, r7, #12
 800da30:	4618      	mov	r0, r3
 800da32:	f7f4 fdc4 	bl	80025be <queue_get_size>
 800da36:	4603      	mov	r3, r0
 800da38:	2b07      	cmp	r3, #7
 800da3a:	f240 80c1 	bls.w	800dbc0 <referee_processing_task+0x1f8>
			while (queue_get_size(&referee_uart_q) > 7) {
 800da3e:	e0b4      	b.n	800dbaa <referee_processing_task+0x1e2>
				proc_status = ref_process_data(&referee_uart_q, &msg_buffer);
 800da40:	f107 030c 	add.w	r3, r7, #12
 800da44:	4989      	ldr	r1, [pc, #548]	; (800dc6c <referee_processing_task+0x2a4>)
 800da46:	4618      	mov	r0, r3
 800da48:	f7f4 fdc6 	bl	80025d8 <ref_process_data>
 800da4c:	4603      	mov	r3, r0
 800da4e:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
				if (proc_status == PROCESS_SUCCESS) {
 800da52:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 800da56:	2b00      	cmp	r3, #0
 800da58:	f040 80a3 	bne.w	800dba2 <referee_processing_task+0x1da>
					switch (msg_buffer.cmd_id) {
 800da5c:	4b83      	ldr	r3, [pc, #524]	; (800dc6c <referee_processing_task+0x2a4>)
 800da5e:	881b      	ldrh	r3, [r3, #0]
 800da60:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800da64:	f300 809b 	bgt.w	800db9e <referee_processing_task+0x1d6>
 800da68:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800da6c:	dc04      	bgt.n	800da78 <referee_processing_task+0xb0>
 800da6e:	2b01      	cmp	r3, #1
 800da70:	d029      	beq.n	800dac6 <referee_processing_task+0xfe>
 800da72:	2b03      	cmp	r3, #3
 800da74:	d073      	beq.n	800db5e <referee_processing_task+0x196>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800da76:	e092      	b.n	800db9e <referee_processing_task+0x1d6>
					switch (msg_buffer.cmd_id) {
 800da78:	f2a3 2301 	subw	r3, r3, #513	; 0x201
 800da7c:	2b07      	cmp	r3, #7
 800da7e:	f200 808e 	bhi.w	800db9e <referee_processing_task+0x1d6>
 800da82:	a201      	add	r2, pc, #4	; (adr r2, 800da88 <referee_processing_task+0xc0>)
 800da84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800da88:	0800dae1 	.word	0x0800dae1
 800da8c:	0800db2d 	.word	0x0800db2d
 800da90:	0800db0f 	.word	0x0800db0f
 800da94:	0800db9f 	.word	0x0800db9f
 800da98:	0800db9f 	.word	0x0800db9f
 800da9c:	0800db4b 	.word	0x0800db4b
 800daa0:	0800daa9 	.word	0x0800daa9
 800daa4:	0800db85 	.word	0x0800db85
						memcpy(&ref_shoot_data, &msg_buffer.data,
 800daa8:	4a71      	ldr	r2, [pc, #452]	; (800dc70 <referee_processing_task+0x2a8>)
 800daaa:	4b70      	ldr	r3, [pc, #448]	; (800dc6c <referee_processing_task+0x2a4>)
 800daac:	3302      	adds	r3, #2
 800daae:	6818      	ldr	r0, [r3, #0]
 800dab0:	6010      	str	r0, [r2, #0]
 800dab2:	8899      	ldrh	r1, [r3, #4]
 800dab4:	799b      	ldrb	r3, [r3, #6]
 800dab6:	8091      	strh	r1, [r2, #4]
 800dab8:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800daba:	4b6e      	ldr	r3, [pc, #440]	; (800dc74 <referee_processing_task+0x2ac>)
 800dabc:	681b      	ldr	r3, [r3, #0]
 800dabe:	3301      	adds	r3, #1
 800dac0:	4a6c      	ldr	r2, [pc, #432]	; (800dc74 <referee_processing_task+0x2ac>)
 800dac2:	6013      	str	r3, [r2, #0]
						break;
 800dac4:	e071      	b.n	800dbaa <referee_processing_task+0x1e2>
							memcpy(&ref_game_state, &msg_buffer.data,
 800dac6:	4a6c      	ldr	r2, [pc, #432]	; (800dc78 <referee_processing_task+0x2b0>)
 800dac8:	4b68      	ldr	r3, [pc, #416]	; (800dc6c <referee_processing_task+0x2a4>)
 800daca:	3302      	adds	r3, #2
 800dacc:	8819      	ldrh	r1, [r3, #0]
 800dace:	789b      	ldrb	r3, [r3, #2]
 800dad0:	8011      	strh	r1, [r2, #0]
 800dad2:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800dad4:	4b69      	ldr	r3, [pc, #420]	; (800dc7c <referee_processing_task+0x2b4>)
 800dad6:	681b      	ldr	r3, [r3, #0]
 800dad8:	3301      	adds	r3, #1
 800dada:	4a68      	ldr	r2, [pc, #416]	; (800dc7c <referee_processing_task+0x2b4>)
 800dadc:	6013      	str	r3, [r2, #0]
							break;
 800dade:	e064      	b.n	800dbaa <referee_processing_task+0x1e2>
						memcpy(&ref_robot_data, &msg_buffer.data,
 800dae0:	4a60      	ldr	r2, [pc, #384]	; (800dc64 <referee_processing_task+0x29c>)
 800dae2:	4b62      	ldr	r3, [pc, #392]	; (800dc6c <referee_processing_task+0x2a4>)
 800dae4:	4614      	mov	r4, r2
 800dae6:	1c9d      	adds	r5, r3, #2
 800dae8:	6828      	ldr	r0, [r5, #0]
 800daea:	6869      	ldr	r1, [r5, #4]
 800daec:	68aa      	ldr	r2, [r5, #8]
 800daee:	68eb      	ldr	r3, [r5, #12]
 800daf0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800daf2:	6928      	ldr	r0, [r5, #16]
 800daf4:	6969      	ldr	r1, [r5, #20]
 800daf6:	c403      	stmia	r4!, {r0, r1}
 800daf8:	8b2b      	ldrh	r3, [r5, #24]
 800dafa:	7eaa      	ldrb	r2, [r5, #26]
 800dafc:	8023      	strh	r3, [r4, #0]
 800dafe:	4613      	mov	r3, r2
 800db00:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800db02:	4b5f      	ldr	r3, [pc, #380]	; (800dc80 <referee_processing_task+0x2b8>)
 800db04:	681b      	ldr	r3, [r3, #0]
 800db06:	3301      	adds	r3, #1
 800db08:	4a5d      	ldr	r2, [pc, #372]	; (800dc80 <referee_processing_task+0x2b8>)
 800db0a:	6013      	str	r3, [r2, #0]
						break;
 800db0c:	e04d      	b.n	800dbaa <referee_processing_task+0x1e2>
						memcpy(&ref_robot_pos, &msg_buffer.data,
 800db0e:	4a5d      	ldr	r2, [pc, #372]	; (800dc84 <referee_processing_task+0x2bc>)
 800db10:	4b56      	ldr	r3, [pc, #344]	; (800dc6c <referee_processing_task+0x2a4>)
 800db12:	4614      	mov	r4, r2
 800db14:	3302      	adds	r3, #2
 800db16:	6818      	ldr	r0, [r3, #0]
 800db18:	6859      	ldr	r1, [r3, #4]
 800db1a:	689a      	ldr	r2, [r3, #8]
 800db1c:	68db      	ldr	r3, [r3, #12]
 800db1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_robot_pos_txno++;
 800db20:	4b59      	ldr	r3, [pc, #356]	; (800dc88 <referee_processing_task+0x2c0>)
 800db22:	681b      	ldr	r3, [r3, #0]
 800db24:	3301      	adds	r3, #1
 800db26:	4a58      	ldr	r2, [pc, #352]	; (800dc88 <referee_processing_task+0x2c0>)
 800db28:	6013      	str	r3, [r2, #0]
						break;
 800db2a:	e03e      	b.n	800dbaa <referee_processing_task+0x1e2>
						memcpy(&ref_power_data, &msg_buffer.data,
 800db2c:	4b57      	ldr	r3, [pc, #348]	; (800dc8c <referee_processing_task+0x2c4>)
 800db2e:	4a4f      	ldr	r2, [pc, #316]	; (800dc6c <referee_processing_task+0x2a4>)
 800db30:	1c94      	adds	r4, r2, #2
 800db32:	6820      	ldr	r0, [r4, #0]
 800db34:	6861      	ldr	r1, [r4, #4]
 800db36:	68a2      	ldr	r2, [r4, #8]
 800db38:	c307      	stmia	r3!, {r0, r1, r2}
 800db3a:	89a2      	ldrh	r2, [r4, #12]
 800db3c:	801a      	strh	r2, [r3, #0]
						ref_power_data_txno++;
 800db3e:	4b54      	ldr	r3, [pc, #336]	; (800dc90 <referee_processing_task+0x2c8>)
 800db40:	681b      	ldr	r3, [r3, #0]
 800db42:	3301      	adds	r3, #1
 800db44:	4a52      	ldr	r2, [pc, #328]	; (800dc90 <referee_processing_task+0x2c8>)
 800db46:	6013      	str	r3, [r2, #0]
						break;
 800db48:	e02f      	b.n	800dbaa <referee_processing_task+0x1e2>
 800db4a:	4b48      	ldr	r3, [pc, #288]	; (800dc6c <referee_processing_task+0x2a4>)
 800db4c:	789a      	ldrb	r2, [r3, #2]
						memcpy(&ref_dmg_data, &msg_buffer.data,
 800db4e:	4b51      	ldr	r3, [pc, #324]	; (800dc94 <referee_processing_task+0x2cc>)
 800db50:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800db52:	4b51      	ldr	r3, [pc, #324]	; (800dc98 <referee_processing_task+0x2d0>)
 800db54:	681b      	ldr	r3, [r3, #0]
 800db56:	3301      	adds	r3, #1
 800db58:	4a4f      	ldr	r2, [pc, #316]	; (800dc98 <referee_processing_task+0x2d0>)
 800db5a:	6013      	str	r3, [r2, #0]
						break;
 800db5c:	e025      	b.n	800dbaa <referee_processing_task+0x1e2>
						memcpy(&ref_robot_hp, &msg_buffer.data,
 800db5e:	4a4f      	ldr	r2, [pc, #316]	; (800dc9c <referee_processing_task+0x2d4>)
 800db60:	4b42      	ldr	r3, [pc, #264]	; (800dc6c <referee_processing_task+0x2a4>)
 800db62:	4614      	mov	r4, r2
 800db64:	1c9d      	adds	r5, r3, #2
 800db66:	6828      	ldr	r0, [r5, #0]
 800db68:	6869      	ldr	r1, [r5, #4]
 800db6a:	68aa      	ldr	r2, [r5, #8]
 800db6c:	68eb      	ldr	r3, [r5, #12]
 800db6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800db70:	6928      	ldr	r0, [r5, #16]
 800db72:	6969      	ldr	r1, [r5, #20]
 800db74:	69aa      	ldr	r2, [r5, #24]
 800db76:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800db78:	4b49      	ldr	r3, [pc, #292]	; (800dca0 <referee_processing_task+0x2d8>)
 800db7a:	681b      	ldr	r3, [r3, #0]
 800db7c:	3301      	adds	r3, #1
 800db7e:	4a48      	ldr	r2, [pc, #288]	; (800dca0 <referee_processing_task+0x2d8>)
 800db80:	6013      	str	r3, [r2, #0]
						break;
 800db82:	e012      	b.n	800dbaa <referee_processing_task+0x1e2>
						memcpy(&ref_mag_data, &msg_buffer.data,
 800db84:	4a47      	ldr	r2, [pc, #284]	; (800dca4 <referee_processing_task+0x2dc>)
 800db86:	4b39      	ldr	r3, [pc, #228]	; (800dc6c <referee_processing_task+0x2a4>)
 800db88:	3302      	adds	r3, #2
 800db8a:	6818      	ldr	r0, [r3, #0]
 800db8c:	6010      	str	r0, [r2, #0]
 800db8e:	889b      	ldrh	r3, [r3, #4]
 800db90:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800db92:	4b45      	ldr	r3, [pc, #276]	; (800dca8 <referee_processing_task+0x2e0>)
 800db94:	681b      	ldr	r3, [r3, #0]
 800db96:	3301      	adds	r3, #1
 800db98:	4a43      	ldr	r2, [pc, #268]	; (800dca8 <referee_processing_task+0x2e0>)
 800db9a:	6013      	str	r3, [r2, #0]
						break;
 800db9c:	e005      	b.n	800dbaa <referee_processing_task+0x1e2>
						break;
 800db9e:	bf00      	nop
 800dba0:	e003      	b.n	800dbaa <referee_processing_task+0x1e2>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800dba2:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 800dba6:	2b02      	cmp	r3, #2
 800dba8:	d009      	beq.n	800dbbe <referee_processing_task+0x1f6>
			while (queue_get_size(&referee_uart_q) > 7) {
 800dbaa:	f107 030c 	add.w	r3, r7, #12
 800dbae:	4618      	mov	r0, r3
 800dbb0:	f7f4 fd05 	bl	80025be <queue_get_size>
 800dbb4:	4603      	mov	r3, r0
 800dbb6:	2b07      	cmp	r3, #7
 800dbb8:	f63f af42 	bhi.w	800da40 <referee_processing_task+0x78>
 800dbbc:	e000      	b.n	800dbc0 <referee_processing_task+0x1f8>
					break;
 800dbbe:	bf00      	nop
				}
			}
		}

		status_led(5, off_led);
 800dbc0:	2101      	movs	r1, #1
 800dbc2:	2005      	movs	r0, #5
 800dbc4:	f7f4 fa7c 	bl	80020c0 <status_led>
		static uint32_t last_sent;

		status_led(5, on_led);
 800dbc8:	2100      	movs	r1, #0
 800dbca:	2005      	movs	r0, #5
 800dbcc:	f7f4 fa78 	bl	80020c0 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800dbd0:	4b24      	ldr	r3, [pc, #144]	; (800dc64 <referee_processing_task+0x29c>)
 800dbd2:	785b      	ldrb	r3, [r3, #1]
 800dbd4:	2b01      	cmp	r3, #1
 800dbd6:	d112      	bne.n	800dbfe <referee_processing_task+0x236>
			referee_limiters.feeding_speed = LV1_FEEDER;
 800dbd8:	4b20      	ldr	r3, [pc, #128]	; (800dc5c <referee_processing_task+0x294>)
 800dbda:	f44f 7252 	mov.w	r2, #840	; 0x348
 800dbde:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV1_PROJECTILE;
 800dbe0:	4b1e      	ldr	r3, [pc, #120]	; (800dc5c <referee_processing_task+0x294>)
 800dbe2:	220d      	movs	r2, #13
 800dbe4:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 1;
 800dbe6:	4b1d      	ldr	r3, [pc, #116]	; (800dc5c <referee_processing_task+0x294>)
 800dbe8:	2201      	movs	r2, #1
 800dbea:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800dbec:	2100      	movs	r1, #0
 800dbee:	2007      	movs	r0, #7
 800dbf0:	f7f4 fa66 	bl	80020c0 <status_led>
			status_led(8, off_led);
 800dbf4:	2101      	movs	r1, #1
 800dbf6:	2008      	movs	r0, #8
 800dbf8:	f7f4 fa62 	bl	80020c0 <status_led>
 800dbfc:	e05d      	b.n	800dcba <referee_processing_task+0x2f2>
		} else if (ref_robot_data.robot_level == 2) {
 800dbfe:	4b19      	ldr	r3, [pc, #100]	; (800dc64 <referee_processing_task+0x29c>)
 800dc00:	785b      	ldrb	r3, [r3, #1]
 800dc02:	2b02      	cmp	r3, #2
 800dc04:	d112      	bne.n	800dc2c <referee_processing_task+0x264>
			referee_limiters.feeding_speed = LV2_FEEDER;
 800dc06:	4b15      	ldr	r3, [pc, #84]	; (800dc5c <referee_processing_task+0x294>)
 800dc08:	f44f 7252 	mov.w	r2, #840	; 0x348
 800dc0c:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV2_PROJECTILE;
 800dc0e:	4b13      	ldr	r3, [pc, #76]	; (800dc5c <referee_processing_task+0x294>)
 800dc10:	220d      	movs	r2, #13
 800dc12:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 2;
 800dc14:	4b11      	ldr	r3, [pc, #68]	; (800dc5c <referee_processing_task+0x294>)
 800dc16:	2202      	movs	r2, #2
 800dc18:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800dc1a:	2101      	movs	r1, #1
 800dc1c:	2007      	movs	r0, #7
 800dc1e:	f7f4 fa4f 	bl	80020c0 <status_led>
			status_led(8, on_led);
 800dc22:	2100      	movs	r1, #0
 800dc24:	2008      	movs	r0, #8
 800dc26:	f7f4 fa4b 	bl	80020c0 <status_led>
 800dc2a:	e046      	b.n	800dcba <referee_processing_task+0x2f2>
		} else if (ref_robot_data.robot_level == 3) {
 800dc2c:	4b0d      	ldr	r3, [pc, #52]	; (800dc64 <referee_processing_task+0x29c>)
 800dc2e:	785b      	ldrb	r3, [r3, #1]
 800dc30:	2b03      	cmp	r3, #3
 800dc32:	d13b      	bne.n	800dcac <referee_processing_task+0x2e4>
			referee_limiters.feeding_speed = LV3_FEEDER;
 800dc34:	4b09      	ldr	r3, [pc, #36]	; (800dc5c <referee_processing_task+0x294>)
 800dc36:	f44f 7252 	mov.w	r2, #840	; 0x348
 800dc3a:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV3_PROJECTILE;
 800dc3c:	4b07      	ldr	r3, [pc, #28]	; (800dc5c <referee_processing_task+0x294>)
 800dc3e:	220d      	movs	r2, #13
 800dc40:	805a      	strh	r2, [r3, #2]
			referee_limiters.robot_level = 3;
 800dc42:	4b06      	ldr	r3, [pc, #24]	; (800dc5c <referee_processing_task+0x294>)
 800dc44:	2203      	movs	r2, #3
 800dc46:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800dc48:	2100      	movs	r1, #0
 800dc4a:	2007      	movs	r0, #7
 800dc4c:	f7f4 fa38 	bl	80020c0 <status_led>
			status_led(8, on_led);
 800dc50:	2100      	movs	r1, #0
 800dc52:	2008      	movs	r0, #8
 800dc54:	f7f4 fa34 	bl	80020c0 <status_led>
 800dc58:	e02f      	b.n	800dcba <referee_processing_task+0x2f2>
 800dc5a:	bf00      	nop
 800dc5c:	200032f8 	.word	0x200032f8
 800dc60:	42700000 	.word	0x42700000
 800dc64:	2000337c 	.word	0x2000337c
 800dc68:	200016e4 	.word	0x200016e4
 800dc6c:	20003310 	.word	0x20003310
 800dc70:	200033cc 	.word	0x200033cc
 800dc74:	200033d4 	.word	0x200033d4
 800dc78:	20003354 	.word	0x20003354
 800dc7c:	20003358 	.word	0x20003358
 800dc80:	20003398 	.word	0x20003398
 800dc84:	200033b0 	.word	0x200033b0
 800dc88:	200033c0 	.word	0x200033c0
 800dc8c:	2000339c 	.word	0x2000339c
 800dc90:	200033ac 	.word	0x200033ac
 800dc94:	200033c4 	.word	0x200033c4
 800dc98:	200033c8 	.word	0x200033c8
 800dc9c:	2000335c 	.word	0x2000335c
 800dca0:	20003378 	.word	0x20003378
 800dca4:	200033d8 	.word	0x200033d8
 800dca8:	200033e0 	.word	0x200033e0
		} else {
			referee_limiters.feeding_speed = LV1_FEEDER;
 800dcac:	4b44      	ldr	r3, [pc, #272]	; (800ddc0 <referee_processing_task+0x3f8>)
 800dcae:	f44f 7252 	mov.w	r2, #840	; 0x348
 800dcb2:	801a      	strh	r2, [r3, #0]
			referee_limiters.projectile_speed = LV1_PROJECTILE;
 800dcb4:	4b42      	ldr	r3, [pc, #264]	; (800ddc0 <referee_processing_task+0x3f8>)
 800dcb6:	220d      	movs	r2, #13
 800dcb8:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800dcba:	4b42      	ldr	r3, [pc, #264]	; (800ddc4 <referee_processing_task+0x3fc>)
 800dcbc:	785b      	ldrb	r3, [r3, #1]
 800dcbe:	2b00      	cmp	r3, #0
 800dcc0:	d06e      	beq.n	800dda0 <referee_processing_task+0x3d8>
			float temp_buffer = ((((float) ref_power_data.chassis_power_buffer)
 800dcc2:	4b41      	ldr	r3, [pc, #260]	; (800ddc8 <referee_processing_task+0x400>)
 800dcc4:	891b      	ldrh	r3, [r3, #8]
 800dcc6:	ee07 3a90 	vmov	s15, r3
 800dcca:	eef8 7a67 	vcvt.f32.u32	s15, s15
					/ 40) + 0.01);
 800dcce:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 800ddcc <referee_processing_task+0x404>
 800dcd2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800dcd6:	ee16 0a90 	vmov	r0, s13
 800dcda:	f7f2 fc35 	bl	8000548 <__aeabi_f2d>
 800dcde:	a336      	add	r3, pc, #216	; (adr r3, 800ddb8 <referee_processing_task+0x3f0>)
 800dce0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dce4:	f7f2 fad2 	bl	800028c <__adddf3>
 800dce8:	4602      	mov	r2, r0
 800dcea:	460b      	mov	r3, r1
			float temp_buffer = ((((float) ref_power_data.chassis_power_buffer)
 800dcec:	4610      	mov	r0, r2
 800dcee:	4619      	mov	r1, r3
 800dcf0:	f7f2 ff7a 	bl	8000be8 <__aeabi_d2f>
 800dcf4:	4603      	mov	r3, r0
 800dcf6:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800dcfa:	edd7 7a48 	vldr	s15, [r7, #288]	; 0x120
 800dcfe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dd02:	eef4 7ac7 	vcmpe.f32	s15, s14
 800dd06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dd0a:	dd02      	ble.n	800dd12 <referee_processing_task+0x34a>
 800dd0c:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800dd10:	e001      	b.n	800dd16 <referee_processing_task+0x34e>
 800dd12:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800dd16:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
			referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800dd1a:	edd7 7a48 	vldr	s15, [r7, #288]	; 0x120
 800dd1e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800dd22:	4b27      	ldr	r3, [pc, #156]	; (800ddc0 <referee_processing_task+0x3f8>)
 800dd24:	edc3 7a02 	vstr	s15, [r3, #8]
			float temp_power = ((((float) ref_power_data.chassis_power/(float) ref_robot_data.chassis_power_limit)
 800dd28:	4b27      	ldr	r3, [pc, #156]	; (800ddc8 <referee_processing_task+0x400>)
 800dd2a:	ed93 7a01 	vldr	s14, [r3, #4]
 800dd2e:	4b25      	ldr	r3, [pc, #148]	; (800ddc4 <referee_processing_task+0x3fc>)
 800dd30:	8b1b      	ldrh	r3, [r3, #24]
 800dd32:	ee07 3a90 	vmov	s15, r3
 800dd36:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd3a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800dd3e:	ee16 0a90 	vmov	r0, s13
 800dd42:	f7f2 fc01 	bl	8000548 <__aeabi_f2d>
					) * 0.5) + 0.5;
 800dd46:	f04f 0200 	mov.w	r2, #0
 800dd4a:	4b21      	ldr	r3, [pc, #132]	; (800ddd0 <referee_processing_task+0x408>)
 800dd4c:	f7f2 fc54 	bl	80005f8 <__aeabi_dmul>
 800dd50:	4602      	mov	r2, r0
 800dd52:	460b      	mov	r3, r1
 800dd54:	4610      	mov	r0, r2
 800dd56:	4619      	mov	r1, r3
 800dd58:	f04f 0200 	mov.w	r2, #0
 800dd5c:	4b1c      	ldr	r3, [pc, #112]	; (800ddd0 <referee_processing_task+0x408>)
 800dd5e:	f7f2 fa95 	bl	800028c <__adddf3>
 800dd62:	4602      	mov	r2, r0
 800dd64:	460b      	mov	r3, r1
			float temp_power = ((((float) ref_power_data.chassis_power/(float) ref_robot_data.chassis_power_limit)
 800dd66:	4610      	mov	r0, r2
 800dd68:	4619      	mov	r1, r3
 800dd6a:	f7f2 ff3d 	bl	8000be8 <__aeabi_d2f>
 800dd6e:	4603      	mov	r3, r0
 800dd70:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
			temp_power = (temp_power > 1) ? 1 : temp_power;
 800dd74:	edd7 7a47 	vldr	s15, [r7, #284]	; 0x11c
 800dd78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dd7c:	eef4 7ac7 	vcmpe.f32	s15, s14
 800dd80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dd84:	dd02      	ble.n	800dd8c <referee_processing_task+0x3c4>
 800dd86:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800dd8a:	e001      	b.n	800dd90 <referee_processing_task+0x3c8>
 800dd8c:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800dd90:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
 800dd94:	480f      	ldr	r0, [pc, #60]	; (800ddd4 <referee_processing_task+0x40c>)
 800dd96:	ed97 0a47 	vldr	s0, [r7, #284]	; 0x11c
 800dd9a:	f7ff fdf1 	bl	800d980 <arm_sqrt_f32>
 800dd9e:	e007      	b.n	800ddb0 <referee_processing_task+0x3e8>
		} else {
			referee_limiters.wheel_buffer_limit = 1;
 800dda0:	4b07      	ldr	r3, [pc, #28]	; (800ddc0 <referee_processing_task+0x3f8>)
 800dda2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800dda6:	609a      	str	r2, [r3, #8]
			referee_limiters.wheel_power_limit = 1;
 800dda8:	4b05      	ldr	r3, [pc, #20]	; (800ddc0 <referee_processing_task+0x3f8>)
 800ddaa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800ddae:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(10);
 800ddb0:	200a      	movs	r0, #10
 800ddb2:	f00e ff21 	bl	801cbf8 <vTaskDelay>
	while (1) {
 800ddb6:	e635      	b.n	800da24 <referee_processing_task+0x5c>
 800ddb8:	47ae147b 	.word	0x47ae147b
 800ddbc:	3f847ae1 	.word	0x3f847ae1
 800ddc0:	200032f8 	.word	0x200032f8
 800ddc4:	2000337c 	.word	0x2000337c
 800ddc8:	2000339c 	.word	0x2000339c
 800ddcc:	42200000 	.word	0x42200000
 800ddd0:	3fe00000 	.word	0x3fe00000
 800ddd4:	200032fc 	.word	0x200032fc

0800ddd8 <rtIsInf>:
 800ddd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddda:	b083      	sub	sp, #12
 800dddc:	af00      	add	r7, sp, #0
 800ddde:	ed87 0b00 	vstr	d0, [r7]
 800dde2:	683c      	ldr	r4, [r7, #0]
 800dde4:	687b      	ldr	r3, [r7, #4]
 800dde6:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800ddea:	2301      	movs	r3, #1
 800ddec:	461e      	mov	r6, r3
 800ddee:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ddf2:	4b0f      	ldr	r3, [pc, #60]	; (800de30 <rtIsInf+0x58>)
 800ddf4:	4620      	mov	r0, r4
 800ddf6:	4629      	mov	r1, r5
 800ddf8:	f7f2 fe98 	bl	8000b2c <__aeabi_dcmpun>
 800ddfc:	4603      	mov	r3, r0
 800ddfe:	2b00      	cmp	r3, #0
 800de00:	d10b      	bne.n	800de1a <rtIsInf+0x42>
 800de02:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800de06:	4b0a      	ldr	r3, [pc, #40]	; (800de30 <rtIsInf+0x58>)
 800de08:	4620      	mov	r0, r4
 800de0a:	4629      	mov	r1, r5
 800de0c:	f7f2 fe70 	bl	8000af0 <__aeabi_dcmple>
 800de10:	4603      	mov	r3, r0
 800de12:	2b00      	cmp	r3, #0
 800de14:	d101      	bne.n	800de1a <rtIsInf+0x42>
 800de16:	2300      	movs	r3, #0
 800de18:	461e      	mov	r6, r3
 800de1a:	b2f3      	uxtb	r3, r6
 800de1c:	f083 0301 	eor.w	r3, r3, #1
 800de20:	b2db      	uxtb	r3, r3
 800de22:	f003 0301 	and.w	r3, r3, #1
 800de26:	b2db      	uxtb	r3, r3
 800de28:	4618      	mov	r0, r3
 800de2a:	370c      	adds	r7, #12
 800de2c:	46bd      	mov	sp, r7
 800de2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de30:	7fefffff 	.word	0x7fefffff

0800de34 <rtIsNaN>:
 800de34:	b580      	push	{r7, lr}
 800de36:	b082      	sub	sp, #8
 800de38:	af00      	add	r7, sp, #0
 800de3a:	ed87 0b00 	vstr	d0, [r7]
 800de3e:	e9d7 2300 	ldrd	r2, r3, [r7]
 800de42:	e9d7 0100 	ldrd	r0, r1, [r7]
 800de46:	f7f2 fe71 	bl	8000b2c <__aeabi_dcmpun>
 800de4a:	4603      	mov	r3, r0
 800de4c:	2b00      	cmp	r3, #0
 800de4e:	d001      	beq.n	800de54 <rtIsNaN+0x20>
 800de50:	2301      	movs	r3, #1
 800de52:	e000      	b.n	800de56 <rtIsNaN+0x22>
 800de54:	2300      	movs	r3, #0
 800de56:	4618      	mov	r0, r3
 800de58:	3708      	adds	r7, #8
 800de5a:	46bd      	mov	sp, r7
 800de5c:	bd80      	pop	{r7, pc}

0800de5e <startup_task>:
extern remote_cmd_t remote_cmd;
extern float pitch;
extern float yaw;
uint16_t error = 0b111111111;

void startup_task() {
 800de5e:	b580      	push	{r7, lr}
 800de60:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800de62:	f7f4 f907 	bl	8002074 <led_on>
	//buzzer_init();
	imu_init();
 800de66:	f7f3 ff0d 	bl	8001c84 <imu_init>
	led_green_off();
 800de6a:	f7f4 f8f5 	bl	8002058 <led_green_off>
	start_micros_timer();
 800de6e:	f7f4 f9e7 	bl	8002240 <start_micros_timer>
	led_toggle();
 800de72:	f7f4 f91d 	bl	80020b0 <led_toggle>

}
 800de76:	bf00      	nop
 800de78:	bd80      	pop	{r7, pc}
	...

0800de7c <sbc_process_data>:
sbc_data_t sbc_data;
uint8_t sbc_new_data = 0;
uint8_t sbc_dma_buffer[20];
static uint8_t sbc_error;

void sbc_process_data() {
 800de7c:	b580      	push	{r7, lr}
 800de7e:	af00      	add	r7, sp, #0
	if (sbc_dma_buffer[0] == 0xa5 && sbc_dma_buffer[14] == 0x5a){
 800de80:	4b13      	ldr	r3, [pc, #76]	; (800ded0 <sbc_process_data+0x54>)
 800de82:	781b      	ldrb	r3, [r3, #0]
 800de84:	2ba5      	cmp	r3, #165	; 0xa5
 800de86:	d119      	bne.n	800debc <sbc_process_data+0x40>
 800de88:	4b11      	ldr	r3, [pc, #68]	; (800ded0 <sbc_process_data+0x54>)
 800de8a:	7b9b      	ldrb	r3, [r3, #14]
 800de8c:	2b5a      	cmp	r3, #90	; 0x5a
 800de8e:	d115      	bne.n	800debc <sbc_process_data+0x40>
		sbc_data.cmd_id = sbc_dma_buffer[1];
 800de90:	4b0f      	ldr	r3, [pc, #60]	; (800ded0 <sbc_process_data+0x54>)
 800de92:	785a      	ldrb	r2, [r3, #1]
 800de94:	4b0f      	ldr	r3, [pc, #60]	; (800ded4 <sbc_process_data+0x58>)
 800de96:	701a      	strb	r2, [r3, #0]
		memcpy(&sbc_data.data, sbc_dma_buffer+2,12);
 800de98:	4a0f      	ldr	r2, [pc, #60]	; (800ded8 <sbc_process_data+0x5c>)
 800de9a:	4b0e      	ldr	r3, [pc, #56]	; (800ded4 <sbc_process_data+0x58>)
 800de9c:	3301      	adds	r3, #1
 800de9e:	6810      	ldr	r0, [r2, #0]
 800dea0:	6851      	ldr	r1, [r2, #4]
 800dea2:	6892      	ldr	r2, [r2, #8]
 800dea4:	6018      	str	r0, [r3, #0]
 800dea6:	6059      	str	r1, [r3, #4]
 800dea8:	609a      	str	r2, [r3, #8]
		sbc_new_data = 1;
 800deaa:	4b0c      	ldr	r3, [pc, #48]	; (800dedc <sbc_process_data+0x60>)
 800deac:	2201      	movs	r2, #1
 800deae:	701a      	strb	r2, [r3, #0]
		sbc_last_time = HAL_GetTick();
 800deb0:	f001 fbf8 	bl	800f6a4 <HAL_GetTick>
 800deb4:	4603      	mov	r3, r0
 800deb6:	4a0a      	ldr	r2, [pc, #40]	; (800dee0 <sbc_process_data+0x64>)
 800deb8:	6013      	str	r3, [r2, #0]
 800deba:	e006      	b.n	800deca <sbc_process_data+0x4e>
	} else {
		sbc_error +=1;
 800debc:	4b09      	ldr	r3, [pc, #36]	; (800dee4 <sbc_process_data+0x68>)
 800debe:	781b      	ldrb	r3, [r3, #0]
 800dec0:	3301      	adds	r3, #1
 800dec2:	b2da      	uxtb	r2, r3
 800dec4:	4b07      	ldr	r3, [pc, #28]	; (800dee4 <sbc_process_data+0x68>)
 800dec6:	701a      	strb	r2, [r3, #0]
//	queue_append_bytes(&g_sbc_queue, sbc_dma_buffer, 15);
//	BaseType_t xHigherPriorityTaskWoken;
//	xHigherPriorityTaskWoken = pdFALSE;
//	vTaskNotifyGiveFromISR(telemetry_task_handle, &xHigherPriorityTaskWoken);
//	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
}
 800dec8:	bf00      	nop
 800deca:	bf00      	nop
 800decc:	bd80      	pop	{r7, pc}
 800dece:	bf00      	nop
 800ded0:	20003508 	.word	0x20003508
 800ded4:	200034f8 	.word	0x200034f8
 800ded8:	2000350a 	.word	0x2000350a
 800dedc:	20003505 	.word	0x20003505
 800dee0:	20003010 	.word	0x20003010
 800dee4:	2000351c 	.word	0x2000351c

0800dee8 <telemetry_task>:

//lol more stuff to add
void telemetry_task(void *argument) {
 800dee8:	b590      	push	{r4, r7, lr}
 800deea:	b0d3      	sub	sp, #332	; 0x14c
 800deec:	af00      	add	r7, sp, #0
 800deee:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800def2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800def6:	6018      	str	r0, [r3, #0]

	uint8_t send_buffer[256];
	uint32_t curr_time = HAL_GetTick();
 800def8:	f001 fbd4 	bl	800f6a4 <HAL_GetTick>
 800defc:	f8c7 0144 	str.w	r0, [r7, #324]	; 0x144
	uint32_t game_data_time = curr_time;
 800df00:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800df04:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
	uint32_t imu_data_time = curr_time;
 800df08:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800df0c:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
	sbc_game_data_t sbc_game_tx;
	queue_init(&g_sbc_queue);
 800df10:	4888      	ldr	r0, [pc, #544]	; (800e134 <telemetry_task+0x24c>)
 800df12:	f7f4 f9b9 	bl	8002288 <queue_init>

	sbc_game_tx.header = 0xA5;
 800df16:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df1a:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df1e:	22a5      	movs	r2, #165	; 0xa5
 800df20:	701a      	strb	r2, [r3, #0]
	sbc_game_tx.cmd_id = 0x80;
 800df22:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df26:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df2a:	2280      	movs	r2, #128	; 0x80
 800df2c:	705a      	strb	r2, [r3, #1]
	sbc_game_tx.team = 1;
 800df2e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df32:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df36:	2201      	movs	r2, #1
 800df38:	709a      	strb	r2, [r3, #2]
	sbc_game_tx.robot_id = 1;
 800df3a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df3e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df42:	2201      	movs	r2, #1
 800df44:	70da      	strb	r2, [r3, #3]
	sbc_game_tx.robot_level = 1;
 800df46:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df4a:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df4e:	2201      	movs	r2, #1
 800df50:	711a      	strb	r2, [r3, #4]
	sbc_game_tx.remaining_time = 1000;
 800df52:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df56:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df5a:	2200      	movs	r2, #0
 800df5c:	f062 0217 	orn	r2, r2, #23
 800df60:	715a      	strb	r2, [r3, #5]
 800df62:	2200      	movs	r2, #0
 800df64:	f042 0203 	orr.w	r2, r2, #3
 800df68:	719a      	strb	r2, [r3, #6]
	sbc_game_tx.ammo = 10;
 800df6a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df6e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df72:	2200      	movs	r2, #0
 800df74:	f042 020a 	orr.w	r2, r2, #10
 800df78:	71da      	strb	r2, [r3, #7]
 800df7a:	2200      	movs	r2, #0
 800df7c:	721a      	strb	r2, [r3, #8]
	sbc_game_tx.end_byte = 0x5A;
 800df7e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df82:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df86:	225a      	movs	r2, #90	; 0x5a
 800df88:	739a      	strb	r2, [r3, #14]
	sbc_game_tx.padding[0] = 0;
 800df8a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df8e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df92:	2200      	movs	r2, #0
 800df94:	725a      	strb	r2, [r3, #9]
	sbc_game_tx.padding[1] = 0;
 800df96:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800df9a:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800df9e:	2200      	movs	r2, #0
 800dfa0:	729a      	strb	r2, [r3, #10]
	sbc_game_tx.padding[2] = 0;
 800dfa2:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfa6:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dfaa:	2200      	movs	r2, #0
 800dfac:	72da      	strb	r2, [r3, #11]
	sbc_game_tx.padding[3] = 0;
 800dfae:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfb2:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dfb6:	2200      	movs	r2, #0
 800dfb8:	731a      	strb	r2, [r3, #12]
	sbc_game_tx.padding[4] = 0;
 800dfba:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfbe:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800dfc2:	2200      	movs	r2, #0
 800dfc4:	735a      	strb	r2, [r3, #13]

	//insert sbc control here, end byte 0x5B
	sbc_imu_data_t sbc_imu_tx;
	sbc_imu_tx.cmd_id = 0x82;
 800dfc6:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfca:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800dfce:	2282      	movs	r2, #130	; 0x82
 800dfd0:	705a      	strb	r2, [r3, #1]
	sbc_imu_tx.end_byte = 0x5C;
 800dfd2:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfd6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800dfda:	225c      	movs	r2, #92	; 0x5c
 800dfdc:	739a      	strb	r2, [r3, #14]
	sbc_imu_tx.header = 0xA5;
 800dfde:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800dfe2:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800dfe6:	22a5      	movs	r2, #165	; 0xa5
 800dfe8:	701a      	strb	r2, [r3, #0]
	uint8_t tx_buffer[15];;
				init_xvr_usart(sbc_dma_buffer);
 800dfea:	4853      	ldr	r0, [pc, #332]	; (800e138 <telemetry_task+0x250>)
 800dfec:	f7f4 fde0 	bl	8002bb0 <init_xvr_usart>
//					break;
//				}
//			}
//		}

		if (ref_robot_data.robot_id != 0){
 800dff0:	4b52      	ldr	r3, [pc, #328]	; (800e13c <telemetry_task+0x254>)
 800dff2:	781b      	ldrb	r3, [r3, #0]
 800dff4:	2b00      	cmp	r3, #0
 800dff6:	d047      	beq.n	800e088 <telemetry_task+0x1a0>
			sbc_game_tx.team = (ref_robot_data.robot_id < 100) ? 1 : 0;
 800dff8:	4b50      	ldr	r3, [pc, #320]	; (800e13c <telemetry_task+0x254>)
 800dffa:	781b      	ldrb	r3, [r3, #0]
 800dffc:	2b63      	cmp	r3, #99	; 0x63
 800dffe:	bf94      	ite	ls
 800e000:	2301      	movls	r3, #1
 800e002:	2300      	movhi	r3, #0
 800e004:	b2db      	uxtb	r3, r3
 800e006:	461a      	mov	r2, r3
 800e008:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e00c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e010:	709a      	strb	r2, [r3, #2]
			sbc_game_tx.robot_id = ref_robot_data.robot_id;
 800e012:	4b4a      	ldr	r3, [pc, #296]	; (800e13c <telemetry_task+0x254>)
 800e014:	781a      	ldrb	r2, [r3, #0]
 800e016:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e01a:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e01e:	70da      	strb	r2, [r3, #3]
			sbc_game_tx.remaining_time = ref_game_state.stage_remain_time;
 800e020:	4b47      	ldr	r3, [pc, #284]	; (800e140 <telemetry_task+0x258>)
 800e022:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800e026:	b29a      	uxth	r2, r3
 800e028:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e02c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e030:	f8a3 2005 	strh.w	r2, [r3, #5]
			sbc_game_tx.ammo = ref_mag_data.magazine_17mm;
 800e034:	4b43      	ldr	r3, [pc, #268]	; (800e144 <telemetry_task+0x25c>)
 800e036:	881b      	ldrh	r3, [r3, #0]
 800e038:	b29a      	uxth	r2, r3
 800e03a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e03e:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e042:	f8a3 2007 	strh.w	r2, [r3, #7]
			memcpy(send_buffer, &sbc_game_tx, 15);
 800e046:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e04a:	f5a3 7286 	sub.w	r2, r3, #268	; 0x10c
 800e04e:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e052:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e056:	4614      	mov	r4, r2
 800e058:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e05a:	c407      	stmia	r4!, {r0, r1, r2}
 800e05c:	8023      	strh	r3, [r4, #0]
 800e05e:	3402      	adds	r4, #2
 800e060:	0c1b      	lsrs	r3, r3, #16
 800e062:	7023      	strb	r3, [r4, #0]
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800e064:	e002      	b.n	800e06c <telemetry_task+0x184>
				vTaskDelay(1);
 800e066:	2001      	movs	r0, #1
 800e068:	f00e fdc6 	bl	801cbf8 <vTaskDelay>
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800e06c:	4b36      	ldr	r3, [pc, #216]	; (800e148 <telemetry_task+0x260>)
 800e06e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800e072:	b2db      	uxtb	r3, r3
 800e074:	2b21      	cmp	r3, #33	; 0x21
 800e076:	d0f6      	beq.n	800e066 <telemetry_task+0x17e>
			}
			HAL_UART_Transmit_IT(&SBC_UART, send_buffer, 15);
 800e078:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800e07c:	220f      	movs	r2, #15
 800e07e:	4619      	mov	r1, r3
 800e080:	4831      	ldr	r0, [pc, #196]	; (800e148 <telemetry_task+0x260>)
 800e082:	f008 fdfc 	bl	8016c7e <HAL_UART_Transmit_IT>
 800e086:	e043      	b.n	800e110 <telemetry_task+0x228>
		} else {
			sbc_game_tx.team = 1;
 800e088:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e08c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e090:	2201      	movs	r2, #1
 800e092:	709a      	strb	r2, [r3, #2]
			sbc_game_tx.robot_id = 0;
 800e094:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e098:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e09c:	2200      	movs	r2, #0
 800e09e:	70da      	strb	r2, [r3, #3]
			sbc_game_tx.remaining_time = 999;
 800e0a0:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e0a4:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e0a8:	2200      	movs	r2, #0
 800e0aa:	f062 0218 	orn	r2, r2, #24
 800e0ae:	715a      	strb	r2, [r3, #5]
 800e0b0:	2200      	movs	r2, #0
 800e0b2:	f042 0203 	orr.w	r2, r2, #3
 800e0b6:	719a      	strb	r2, [r3, #6]
			sbc_game_tx.ammo = 999;
 800e0b8:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e0bc:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e0c0:	2200      	movs	r2, #0
 800e0c2:	f062 0218 	orn	r2, r2, #24
 800e0c6:	71da      	strb	r2, [r3, #7]
 800e0c8:	2200      	movs	r2, #0
 800e0ca:	f042 0203 	orr.w	r2, r2, #3
 800e0ce:	721a      	strb	r2, [r3, #8]
			memcpy(send_buffer, &sbc_game_tx, 15);
 800e0d0:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e0d4:	f5a3 7286 	sub.w	r2, r3, #268	; 0x10c
 800e0d8:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 800e0dc:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800e0e0:	4614      	mov	r4, r2
 800e0e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e0e4:	c407      	stmia	r4!, {r0, r1, r2}
 800e0e6:	8023      	strh	r3, [r4, #0]
 800e0e8:	3402      	adds	r4, #2
 800e0ea:	0c1b      	lsrs	r3, r3, #16
 800e0ec:	7023      	strb	r3, [r4, #0]
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800e0ee:	e002      	b.n	800e0f6 <telemetry_task+0x20e>
				vTaskDelay(1);
 800e0f0:	2001      	movs	r0, #1
 800e0f2:	f00e fd81 	bl	801cbf8 <vTaskDelay>
			while (SBC_UART.gState == HAL_UART_STATE_BUSY_TX){
 800e0f6:	4b14      	ldr	r3, [pc, #80]	; (800e148 <telemetry_task+0x260>)
 800e0f8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800e0fc:	b2db      	uxtb	r3, r3
 800e0fe:	2b21      	cmp	r3, #33	; 0x21
 800e100:	d0f6      	beq.n	800e0f0 <telemetry_task+0x208>
			}
			HAL_UART_Transmit_IT(&SBC_UART, send_buffer, 15);
 800e102:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800e106:	220f      	movs	r2, #15
 800e108:	4619      	mov	r1, r3
 800e10a:	480f      	ldr	r0, [pc, #60]	; (800e148 <telemetry_task+0x260>)
 800e10c:	f008 fdb7 	bl	8016c7e <HAL_UART_Transmit_IT>
		}

		if (sbc_error >= 1){
 800e110:	4b0e      	ldr	r3, [pc, #56]	; (800e14c <telemetry_task+0x264>)
 800e112:	781b      	ldrb	r3, [r3, #0]
 800e114:	2b00      	cmp	r3, #0
 800e116:	d008      	beq.n	800e12a <telemetry_task+0x242>
			HAL_UART_DMAStop(&SBC_UART);
 800e118:	480b      	ldr	r0, [pc, #44]	; (800e148 <telemetry_task+0x260>)
 800e11a:	f008 fe73 	bl	8016e04 <HAL_UART_DMAStop>
			init_xvr_usart(sbc_dma_buffer);
 800e11e:	4806      	ldr	r0, [pc, #24]	; (800e138 <telemetry_task+0x250>)
 800e120:	f7f4 fd46 	bl	8002bb0 <init_xvr_usart>
			sbc_error = 0;
 800e124:	4b09      	ldr	r3, [pc, #36]	; (800e14c <telemetry_task+0x264>)
 800e126:	2200      	movs	r2, #0
 800e128:	701a      	strb	r2, [r3, #0]
		}
		vTaskDelay(1000);
 800e12a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800e12e:	f00e fd63 	bl	801cbf8 <vTaskDelay>
		if (ref_robot_data.robot_id != 0){
 800e132:	e75d      	b.n	800dff0 <telemetry_task+0x108>
 800e134:	200033e8 	.word	0x200033e8
 800e138:	20003508 	.word	0x20003508
 800e13c:	2000337c 	.word	0x2000337c
 800e140:	20003354 	.word	0x20003354
 800e144:	200033d8 	.word	0x200033d8
 800e148:	2000165c 	.word	0x2000165c
 800e14c:	2000351c 	.word	0x2000351c

0800e150 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800e150:	b580      	push	{r7, lr}
 800e152:	b0c4      	sub	sp, #272	; 0x110
 800e154:	af00      	add	r7, sp, #0
 800e156:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e15a:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800e15e:	6018      	str	r0, [r3, #0]
 800e160:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e164:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800e168:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800e16a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e16e:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800e172:	2200      	movs	r2, #0
 800e174:	601a      	str	r2, [r3, #0]
 800e176:	3304      	adds	r3, #4
 800e178:	22fc      	movs	r2, #252	; 0xfc
 800e17a:	2100      	movs	r1, #0
 800e17c:	4618      	mov	r0, r3
 800e17e:	f011 faa8 	bl	801f6d2 <memset>
	memcpy(blank_buffer, buffer, *len);
 800e182:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e186:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800e18a:	681b      	ldr	r3, [r3, #0]
 800e18c:	681a      	ldr	r2, [r3, #0]
 800e18e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e192:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800e196:	f107 0010 	add.w	r0, r7, #16
 800e19a:	6819      	ldr	r1, [r3, #0]
 800e19c:	f011 fa8b 	bl	801f6b6 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800e1a0:	4a1a      	ldr	r2, [pc, #104]	; (800e20c <usb_vcp_processing+0xbc>)
 800e1a2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e1a6:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800e1aa:	4610      	mov	r0, r2
 800e1ac:	4619      	mov	r1, r3
 800e1ae:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e1b2:	461a      	mov	r2, r3
 800e1b4:	f011 fa7f 	bl	801f6b6 <memcpy>
	usb_input_len = *len;
 800e1b8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e1bc:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800e1c0:	681b      	ldr	r3, [r3, #0]
 800e1c2:	681b      	ldr	r3, [r3, #0]
 800e1c4:	4a12      	ldr	r2, [pc, #72]	; (800e210 <usb_vcp_processing+0xc0>)
 800e1c6:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800e1c8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e1cc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800e1d0:	2200      	movs	r2, #0
 800e1d2:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800e1d4:	4b0f      	ldr	r3, [pc, #60]	; (800e214 <usb_vcp_processing+0xc4>)
 800e1d6:	681b      	ldr	r3, [r3, #0]
 800e1d8:	f107 020c 	add.w	r2, r7, #12
 800e1dc:	4611      	mov	r1, r2
 800e1de:	4618      	mov	r0, r3
 800e1e0:	f00d fff7 	bl	801c1d2 <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800e1e4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800e1e8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800e1ec:	681b      	ldr	r3, [r3, #0]
 800e1ee:	2b00      	cmp	r3, #0
 800e1f0:	d007      	beq.n	800e202 <usb_vcp_processing+0xb2>
 800e1f2:	4b09      	ldr	r3, [pc, #36]	; (800e218 <usb_vcp_processing+0xc8>)
 800e1f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1f8:	601a      	str	r2, [r3, #0]
 800e1fa:	f3bf 8f4f 	dsb	sy
 800e1fe:	f3bf 8f6f 	isb	sy
}
 800e202:	bf00      	nop
 800e204:	f507 7788 	add.w	r7, r7, #272	; 0x110
 800e208:	46bd      	mov	sp, r7
 800e20a:	bd80      	pop	{r7, pc}
 800e20c:	20003520 	.word	0x20003520
 800e210:	20003620 	.word	0x20003620
 800e214:	200004d4 	.word	0x200004d4
 800e218:	e000ed04 	.word	0xe000ed04

0800e21c <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800e21c:	b580      	push	{r7, lr}
 800e21e:	b082      	sub	sp, #8
 800e220:	af00      	add	r7, sp, #0
 800e222:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800e224:	2064      	movs	r0, #100	; 0x64
 800e226:	f00e fce7 	bl	801cbf8 <vTaskDelay>
 800e22a:	e7fb      	b.n	800e224 <usb_task+0x8>
 800e22c:	0000      	movs	r0, r0
	...

0800e230 <balancing_task>:
//double r1;
//double r4;
double k_check[12] = {0};
float check_x = 0;

void balancing_task(void *argument) {
 800e230:	b5b0      	push	{r4, r5, r7, lr}
 800e232:	b08a      	sub	sp, #40	; 0x28
 800e234:	af00      	add	r7, sp, #0
 800e236:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800e238:	f04f 0200 	mov.w	r2, #0
 800e23c:	f04f 0300 	mov.w	r3, #0
 800e240:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double endtime = 0;
 800e244:	f04f 0200 	mov.w	r2, #0
 800e248:	f04f 0300 	mov.w	r3, #0
 800e24c:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double dt;
    TickType_t start_time;
    Ctrl_Init();
 800e250:	f001 f97e 	bl	800f550 <Ctrl_Init>
    while (1) {
        endtime = get_microseconds();
 800e254:	f7f4 f80c 	bl	8002270 <get_microseconds>
 800e258:	4603      	mov	r3, r0
 800e25a:	4618      	mov	r0, r3
 800e25c:	f7f2 f952 	bl	8000504 <__aeabi_ui2d>
 800e260:	4602      	mov	r2, r0
 800e262:	460b      	mov	r3, r1
 800e264:	e9c7 2306 	strd	r2, r3, [r7, #24]
        dt = endtime - starttime;
 800e268:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e26c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800e270:	f7f2 f80a 	bl	8000288 <__aeabi_dsub>
 800e274:	4602      	mov	r2, r0
 800e276:	460b      	mov	r3, r1
 800e278:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800e27c:	f00e fe0c 	bl	801ce98 <xTaskGetTickCount>
 800e280:	4603      	mov	r3, r0
 800e282:	60fb      	str	r3, [r7, #12]
        starttime = get_microseconds();
 800e284:	f7f3 fff4 	bl	8002270 <get_microseconds>
 800e288:	4603      	mov	r3, r0
 800e28a:	4618      	mov	r0, r3
 800e28c:	f7f2 f93a 	bl	8000504 <__aeabi_ui2d>
 800e290:	4602      	mov	r2, r0
 800e292:	460b      	mov	r3, r1
 800e294:	e9c7 2308 	strd	r2, r3, [r7, #32]

        target.speedCmd = 0;//((float)g_remote_cmd.left_y/660)*1.0f;
 800e298:	4b61      	ldr	r3, [pc, #388]	; (800e420 <balancing_task+0x1f0>)
 800e29a:	f04f 0200 	mov.w	r2, #0
 800e29e:	605a      	str	r2, [r3, #4]
        target.yawSpeedCmd = 0;//-((float)g_remote_cmd.left_x/660)*2.0f;
 800e2a0:	4b5f      	ldr	r3, [pc, #380]	; (800e420 <balancing_task+0x1f0>)
 800e2a2:	f04f 0200 	mov.w	r2, #0
 800e2a6:	60da      	str	r2, [r3, #12]
        target.legLength = 0;//((float)g_remote_cmd.right_y/660)*0.04 + 0.12f;
 800e2a8:	4b5d      	ldr	r3, [pc, #372]	; (800e420 <balancing_task+0x1f0>)
 800e2aa:	f04f 0200 	mov.w	r2, #0
 800e2ae:	619a      	str	r2, [r3, #24]
        leftJoint[1].angle = (double)can_motors[8].angle_rad;
 800e2b0:	4b5c      	ldr	r3, [pc, #368]	; (800e424 <balancing_task+0x1f4>)
 800e2b2:	f503 63f3 	add.w	r3, r3, #1944	; 0x798
 800e2b6:	681b      	ldr	r3, [r3, #0]
 800e2b8:	4618      	mov	r0, r3
 800e2ba:	f7f2 f945 	bl	8000548 <__aeabi_f2d>
 800e2be:	4602      	mov	r2, r0
 800e2c0:	460b      	mov	r3, r1
 800e2c2:	4959      	ldr	r1, [pc, #356]	; (800e428 <balancing_task+0x1f8>)
 800e2c4:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
        leftJoint[1].speed = (double)can_motors[8].speed;
 800e2c8:	4b56      	ldr	r3, [pc, #344]	; (800e424 <balancing_task+0x1f4>)
 800e2ca:	f503 63f4 	add.w	r3, r3, #1952	; 0x7a0
 800e2ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e2d2:	4955      	ldr	r1, [pc, #340]	; (800e428 <balancing_task+0x1f8>)
 800e2d4:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
        leftJoint[0].angle = (double)can_motors[9].angle_rad;
 800e2d8:	4b52      	ldr	r3, [pc, #328]	; (800e424 <balancing_task+0x1f4>)
 800e2da:	f603 0388 	addw	r3, r3, #2184	; 0x888
 800e2de:	681b      	ldr	r3, [r3, #0]
 800e2e0:	4618      	mov	r0, r3
 800e2e2:	f7f2 f931 	bl	8000548 <__aeabi_f2d>
 800e2e6:	4602      	mov	r2, r0
 800e2e8:	460b      	mov	r3, r1
 800e2ea:	494f      	ldr	r1, [pc, #316]	; (800e428 <balancing_task+0x1f8>)
 800e2ec:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftJoint[0].speed = (double)can_motors[9].speed;
 800e2f0:	4b4c      	ldr	r3, [pc, #304]	; (800e424 <balancing_task+0x1f4>)
 800e2f2:	f503 6309 	add.w	r3, r3, #2192	; 0x890
 800e2f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e2fa:	494b      	ldr	r1, [pc, #300]	; (800e428 <balancing_task+0x1f8>)
 800e2fc:	e9c1 2300 	strd	r2, r3, [r1]
        rightJoint[1].angle = (double)can_motors[16].angle_rad;
 800e300:	4b48      	ldr	r3, [pc, #288]	; (800e424 <balancing_task+0x1f4>)
 800e302:	f603 7318 	addw	r3, r3, #3864	; 0xf18
 800e306:	681b      	ldr	r3, [r3, #0]
 800e308:	4618      	mov	r0, r3
 800e30a:	f7f2 f91d 	bl	8000548 <__aeabi_f2d>
 800e30e:	4602      	mov	r2, r0
 800e310:	460b      	mov	r3, r1
 800e312:	4946      	ldr	r1, [pc, #280]	; (800e42c <balancing_task+0x1fc>)
 800e314:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
        rightJoint[1].speed = (double)can_motors[16].speed;
 800e318:	4b42      	ldr	r3, [pc, #264]	; (800e424 <balancing_task+0x1f4>)
 800e31a:	f503 6372 	add.w	r3, r3, #3872	; 0xf20
 800e31e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e322:	4942      	ldr	r1, [pc, #264]	; (800e42c <balancing_task+0x1fc>)
 800e324:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
        rightJoint[0].angle = (double)can_motors[17].angle_rad;
 800e328:	4b3e      	ldr	r3, [pc, #248]	; (800e424 <balancing_task+0x1f4>)
 800e32a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e32e:	689b      	ldr	r3, [r3, #8]
 800e330:	4618      	mov	r0, r3
 800e332:	f7f2 f909 	bl	8000548 <__aeabi_f2d>
 800e336:	4602      	mov	r2, r0
 800e338:	460b      	mov	r3, r1
 800e33a:	493c      	ldr	r1, [pc, #240]	; (800e42c <balancing_task+0x1fc>)
 800e33c:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightJoint[0].speed = (double)can_motors[17].speed;
 800e340:	4b38      	ldr	r3, [pc, #224]	; (800e424 <balancing_task+0x1f4>)
 800e342:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e346:	3310      	adds	r3, #16
 800e348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e34c:	4937      	ldr	r1, [pc, #220]	; (800e42c <balancing_task+0x1fc>)
 800e34e:	e9c1 2300 	strd	r2, r3, [r1]
        leftWheel.angle = (double)can_motors[1].angle_rad/19.2;
 800e352:	4b34      	ldr	r3, [pc, #208]	; (800e424 <balancing_task+0x1f4>)
 800e354:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800e358:	4618      	mov	r0, r3
 800e35a:	f7f2 f8f5 	bl	8000548 <__aeabi_f2d>
 800e35e:	a32c      	add	r3, pc, #176	; (adr r3, 800e410 <balancing_task+0x1e0>)
 800e360:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e364:	f7f2 fa72 	bl	800084c <__aeabi_ddiv>
 800e368:	4602      	mov	r2, r0
 800e36a:	460b      	mov	r3, r1
 800e36c:	4930      	ldr	r1, [pc, #192]	; (800e430 <balancing_task+0x200>)
 800e36e:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightWheel.angle = (double)can_motors[0].angle_rad/19.2;
 800e372:	4b2c      	ldr	r3, [pc, #176]	; (800e424 <balancing_task+0x1f4>)
 800e374:	699b      	ldr	r3, [r3, #24]
 800e376:	4618      	mov	r0, r3
 800e378:	f7f2 f8e6 	bl	8000548 <__aeabi_f2d>
 800e37c:	a324      	add	r3, pc, #144	; (adr r3, 800e410 <balancing_task+0x1e0>)
 800e37e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e382:	f7f2 fa63 	bl	800084c <__aeabi_ddiv>
 800e386:	4602      	mov	r2, r0
 800e388:	460b      	mov	r3, r1
 800e38a:	492a      	ldr	r1, [pc, #168]	; (800e434 <balancing_task+0x204>)
 800e38c:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftWheel.speed = -(double)can_motors[1].raw_data.rpm * (2*PI/60) /19.2;
 800e390:	4b24      	ldr	r3, [pc, #144]	; (800e424 <balancing_task+0x1f4>)
 800e392:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	; 0xf8
 800e396:	4618      	mov	r0, r3
 800e398:	f7f2 f8c4 	bl	8000524 <__aeabi_i2d>
 800e39c:	4602      	mov	r2, r0
 800e39e:	460b      	mov	r3, r1
 800e3a0:	4614      	mov	r4, r2
 800e3a2:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 800e3a6:	a31c      	add	r3, pc, #112	; (adr r3, 800e418 <balancing_task+0x1e8>)
 800e3a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3ac:	4620      	mov	r0, r4
 800e3ae:	4629      	mov	r1, r5
 800e3b0:	f7f2 f922 	bl	80005f8 <__aeabi_dmul>
 800e3b4:	4602      	mov	r2, r0
 800e3b6:	460b      	mov	r3, r1
 800e3b8:	4610      	mov	r0, r2
 800e3ba:	4619      	mov	r1, r3
 800e3bc:	a314      	add	r3, pc, #80	; (adr r3, 800e410 <balancing_task+0x1e0>)
 800e3be:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3c2:	f7f2 fa43 	bl	800084c <__aeabi_ddiv>
 800e3c6:	4602      	mov	r2, r0
 800e3c8:	460b      	mov	r3, r1
 800e3ca:	4919      	ldr	r1, [pc, #100]	; (800e430 <balancing_task+0x200>)
 800e3cc:	e9c1 2300 	strd	r2, r3, [r1]
        rightWheel.speed = (double)can_motors[0].raw_data.rpm * (2*PI/60) /19.2;
 800e3d0:	4b14      	ldr	r3, [pc, #80]	; (800e424 <balancing_task+0x1f4>)
 800e3d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800e3d6:	4618      	mov	r0, r3
 800e3d8:	f7f2 f8a4 	bl	8000524 <__aeabi_i2d>
 800e3dc:	a30e      	add	r3, pc, #56	; (adr r3, 800e418 <balancing_task+0x1e8>)
 800e3de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3e2:	f7f2 f909 	bl	80005f8 <__aeabi_dmul>
 800e3e6:	4602      	mov	r2, r0
 800e3e8:	460b      	mov	r3, r1
 800e3ea:	4610      	mov	r0, r2
 800e3ec:	4619      	mov	r1, r3
 800e3ee:	a308      	add	r3, pc, #32	; (adr r3, 800e410 <balancing_task+0x1e0>)
 800e3f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3f4:	f7f2 fa2a 	bl	800084c <__aeabi_ddiv>
 800e3f8:	4602      	mov	r2, r0
 800e3fa:	460b      	mov	r3, r1
 800e3fc:	490d      	ldr	r1, [pc, #52]	; (800e434 <balancing_task+0x204>)
 800e3fe:	e9c1 2300 	strd	r2, r3, [r1]

        vTaskDelayUntil(&start_time, 4);
 800e402:	f107 030c 	add.w	r3, r7, #12
 800e406:	2104      	movs	r1, #4
 800e408:	4618      	mov	r0, r3
 800e40a:	f00e fb77 	bl	801cafc <vTaskDelayUntil>
        endtime = get_microseconds();
 800e40e:	e721      	b.n	800e254 <balancing_task+0x24>
 800e410:	33333333 	.word	0x33333333
 800e414:	40333333 	.word	0x40333333
 800e418:	00000000 	.word	0x00000000
 800e41c:	3fbaceea 	.word	0x3fbaceea
 800e420:	20000028 	.word	0x20000028
 800e424:	200018a8 	.word	0x200018a8
 800e428:	20003628 	.word	0x20003628
 800e42c:	200036b8 	.word	0x200036b8
 800e430:	20003748 	.word	0x20003748
 800e434:	20003790 	.word	0x20003790

0800e438 <Ctrl_TargetUpdateTask>:
    }
}

void Ctrl_TargetUpdateTask()
{
 800e438:	b580      	push	{r7, lr}
 800e43a:	b084      	sub	sp, #16
 800e43c:	af00      	add	r7, sp, #0
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e43e:	f00e fd2b 	bl	801ce98 <xTaskGetTickCount>
 800e442:	4603      	mov	r3, r0
 800e444:	607b      	str	r3, [r7, #4]
	float speedSlopeStep = 0.005f;
 800e446:	4b56      	ldr	r3, [pc, #344]	; (800e5a0 <Ctrl_TargetUpdateTask+0x168>)
 800e448:	60fb      	str	r3, [r7, #12]
	while(1){
		//根据当前腿长计算速度斜坡步长(腿越短越稳定，加减速斜率越大)
			float legLength = (leftLegPos.length + rightLegPos.length) / 2;
 800e44a:	4b56      	ldr	r3, [pc, #344]	; (800e5a4 <Ctrl_TargetUpdateTask+0x16c>)
 800e44c:	ed93 7a01 	vldr	s14, [r3, #4]
 800e450:	4b55      	ldr	r3, [pc, #340]	; (800e5a8 <Ctrl_TargetUpdateTask+0x170>)
 800e452:	edd3 7a01 	vldr	s15, [r3, #4]
 800e456:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e45a:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800e45e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800e462:	edc7 7a02 	vstr	s15, [r7, #8]
			speedSlopeStep = -(legLength - 0.12f) * 0.03f + 0.005f;
 800e466:	edd7 7a02 	vldr	s15, [r7, #8]
 800e46a:	ed9f 7a50 	vldr	s14, [pc, #320]	; 800e5ac <Ctrl_TargetUpdateTask+0x174>
 800e46e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e472:	eef1 7a67 	vneg.f32	s15, s15
 800e476:	ed9f 7a4e 	vldr	s14, [pc, #312]	; 800e5b0 <Ctrl_TargetUpdateTask+0x178>
 800e47a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e47e:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 800e5b4 <Ctrl_TargetUpdateTask+0x17c>
 800e482:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e486:	edc7 7a03 	vstr	s15, [r7, #12]
			// 		target.speed -= speedSlopeStep;
			// }
            //target.speed = target.speedCmd;

			//计算位置目标，并限制在当前位置的±0.1m内
			target.position += target.speed * 0.004f;
 800e48a:	4b4b      	ldr	r3, [pc, #300]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e48c:	ed93 7a00 	vldr	s14, [r3]
 800e490:	4b49      	ldr	r3, [pc, #292]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e492:	edd3 7a02 	vldr	s15, [r3, #8]
 800e496:	eddf 6a49 	vldr	s13, [pc, #292]	; 800e5bc <Ctrl_TargetUpdateTask+0x184>
 800e49a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e49e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e4a2:	4b45      	ldr	r3, [pc, #276]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e4a4:	edc3 7a00 	vstr	s15, [r3]
			if(target.position - stateVar.x > 0.1f)
 800e4a8:	4b43      	ldr	r3, [pc, #268]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e4aa:	ed93 7a00 	vldr	s14, [r3]
 800e4ae:	4b44      	ldr	r3, [pc, #272]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e4b0:	edd3 7a02 	vldr	s15, [r3, #8]
 800e4b4:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e4b8:	ed9f 7a42 	vldr	s14, [pc, #264]	; 800e5c4 <Ctrl_TargetUpdateTask+0x18c>
 800e4bc:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e4c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4c4:	dd0a      	ble.n	800e4dc <Ctrl_TargetUpdateTask+0xa4>
				target.position = stateVar.x + 0.1f;
 800e4c6:	4b3e      	ldr	r3, [pc, #248]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e4c8:	edd3 7a02 	vldr	s15, [r3, #8]
 800e4cc:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 800e5c4 <Ctrl_TargetUpdateTask+0x18c>
 800e4d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e4d4:	4b38      	ldr	r3, [pc, #224]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e4d6:	edc3 7a00 	vstr	s15, [r3]
 800e4da:	e018      	b.n	800e50e <Ctrl_TargetUpdateTask+0xd6>
			else if(target.position - stateVar.x < -0.1f)
 800e4dc:	4b36      	ldr	r3, [pc, #216]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e4de:	ed93 7a00 	vldr	s14, [r3]
 800e4e2:	4b37      	ldr	r3, [pc, #220]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e4e4:	edd3 7a02 	vldr	s15, [r3, #8]
 800e4e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e4ec:	ed9f 7a36 	vldr	s14, [pc, #216]	; 800e5c8 <Ctrl_TargetUpdateTask+0x190>
 800e4f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4f8:	d509      	bpl.n	800e50e <Ctrl_TargetUpdateTask+0xd6>
				target.position = stateVar.x - 0.1f;
 800e4fa:	4b31      	ldr	r3, [pc, #196]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e4fc:	edd3 7a02 	vldr	s15, [r3, #8]
 800e500:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800e5c4 <Ctrl_TargetUpdateTask+0x18c>
 800e504:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e508:	4b2b      	ldr	r3, [pc, #172]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e50a:	edc3 7a00 	vstr	s15, [r3]

			//限制速度目标在当前速度的±0.3m/s内
			if(target.speed - stateVar.dx > 1.0f)
 800e50e:	4b2a      	ldr	r3, [pc, #168]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e510:	ed93 7a02 	vldr	s14, [r3, #8]
 800e514:	4b2a      	ldr	r3, [pc, #168]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e516:	edd3 7a03 	vldr	s15, [r3, #12]
 800e51a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e51e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e522:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e52a:	dd0a      	ble.n	800e542 <Ctrl_TargetUpdateTask+0x10a>
				target.speed = stateVar.dx + 1.0f;
 800e52c:	4b24      	ldr	r3, [pc, #144]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e52e:	edd3 7a03 	vldr	s15, [r3, #12]
 800e532:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e536:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e53a:	4b1f      	ldr	r3, [pc, #124]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e53c:	edc3 7a02 	vstr	s15, [r3, #8]
 800e540:	e018      	b.n	800e574 <Ctrl_TargetUpdateTask+0x13c>
			else if(target.speed - stateVar.dx < -1.0f)
 800e542:	4b1d      	ldr	r3, [pc, #116]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e544:	ed93 7a02 	vldr	s14, [r3, #8]
 800e548:	4b1d      	ldr	r3, [pc, #116]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e54a:	edd3 7a03 	vldr	s15, [r3, #12]
 800e54e:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e552:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 800e556:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e55a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e55e:	d509      	bpl.n	800e574 <Ctrl_TargetUpdateTask+0x13c>
				target.speed = stateVar.dx - 1.0f;
 800e560:	4b17      	ldr	r3, [pc, #92]	; (800e5c0 <Ctrl_TargetUpdateTask+0x188>)
 800e562:	edd3 7a03 	vldr	s15, [r3, #12]
 800e566:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e56a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e56e:	4b12      	ldr	r3, [pc, #72]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e570:	edc3 7a02 	vstr	s15, [r3, #8]

			//计算yaw方位角目标
			target.yawAngle += target.yawSpeedCmd * 0.004f;
 800e574:	4b10      	ldr	r3, [pc, #64]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e576:	ed93 7a04 	vldr	s14, [r3, #16]
 800e57a:	4b0f      	ldr	r3, [pc, #60]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e57c:	edd3 7a03 	vldr	s15, [r3, #12]
 800e580:	eddf 6a0e 	vldr	s13, [pc, #56]	; 800e5bc <Ctrl_TargetUpdateTask+0x184>
 800e584:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e588:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e58c:	4b0a      	ldr	r3, [pc, #40]	; (800e5b8 <Ctrl_TargetUpdateTask+0x180>)
 800e58e:	edc3 7a04 	vstr	s15, [r3, #16]
			vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 800e592:	1d3b      	adds	r3, r7, #4
 800e594:	2104      	movs	r1, #4
 800e596:	4618      	mov	r0, r3
 800e598:	f00e fab0 	bl	801cafc <vTaskDelayUntil>
	while(1){
 800e59c:	e755      	b.n	800e44a <Ctrl_TargetUpdateTask+0x12>
 800e59e:	bf00      	nop
 800e5a0:	3ba3d70a 	.word	0x3ba3d70a
 800e5a4:	200037d8 	.word	0x200037d8
 800e5a8:	200037ec 	.word	0x200037ec
 800e5ac:	3df5c28f 	.word	0x3df5c28f
 800e5b0:	3cf5c28f 	.word	0x3cf5c28f
 800e5b4:	3ba3d70a 	.word	0x3ba3d70a
 800e5b8:	20000028 	.word	0x20000028
 800e5bc:	3b83126f 	.word	0x3b83126f
 800e5c0:	20003800 	.word	0x20003800
 800e5c4:	3dcccccd 	.word	0x3dcccccd
 800e5c8:	bdcccccd 	.word	0xbdcccccd

0800e5cc <LegPos_UpdateTask>:
	}
}

void LegPos_UpdateTask(void *arg)
{
 800e5cc:	b580      	push	{r7, lr}
 800e5ce:	b08e      	sub	sp, #56	; 0x38
 800e5d0:	af00      	add	r7, sp, #0
 800e5d2:	6078      	str	r0, [r7, #4]
	const float lpfRatio = 0.5f; //低通滤波系数(新值的权重)
 800e5d4:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 800e5d8:	62fb      	str	r3, [r7, #44]	; 0x2c
	float lastLeftDLength = 0, lastRightDLength = 0;
 800e5da:	f04f 0300 	mov.w	r3, #0
 800e5de:	637b      	str	r3, [r7, #52]	; 0x34
 800e5e0:	f04f 0300 	mov.w	r3, #0
 800e5e4:	633b      	str	r3, [r7, #48]	; 0x30
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e5e6:	f00e fc57 	bl	801ce98 <xTaskGetTickCount>
 800e5ea:	4603      	mov	r3, r0
 800e5ec:	62bb      	str	r3, [r7, #40]	; 0x28
	while (1)
	{
		double legPos[2], legSpd[2];

		//计算左腿位置
		leg_pos(leftJoint[1].angle, leftJoint[0].angle, legPos);
 800e5ee:	4b81      	ldr	r3, [pc, #516]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e5f0:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800e5f4:	4b7f      	ldr	r3, [pc, #508]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e5f6:	ed93 6b02 	vldr	d6, [r3, #8]
 800e5fa:	f107 0318 	add.w	r3, r7, #24
 800e5fe:	4618      	mov	r0, r3
 800e600:	eeb0 1a46 	vmov.f32	s2, s12
 800e604:	eef0 1a66 	vmov.f32	s3, s13
 800e608:	eeb0 0a47 	vmov.f32	s0, s14
 800e60c:	eef0 0a67 	vmov.f32	s1, s15
 800e610:	f7fb f8a2 	bl	8009758 <leg_pos>
		leftLegPos.length = legPos[0];
 800e614:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800e618:	4610      	mov	r0, r2
 800e61a:	4619      	mov	r1, r3
 800e61c:	f7f2 fae4 	bl	8000be8 <__aeabi_d2f>
 800e620:	4603      	mov	r3, r0
 800e622:	4a75      	ldr	r2, [pc, #468]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e624:	6053      	str	r3, [r2, #4]
		leftLegPos.angle = legPos[1];
 800e626:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e62a:	4610      	mov	r0, r2
 800e62c:	4619      	mov	r1, r3
 800e62e:	f7f2 fadb 	bl	8000be8 <__aeabi_d2f>
 800e632:	4603      	mov	r3, r0
 800e634:	4a70      	ldr	r2, [pc, #448]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e636:	6013      	str	r3, [r2, #0]

		//计算左腿速度
		leg_spd(leftJoint[1].speed, leftJoint[0].speed, leftJoint[1].angle, leftJoint[0].angle, legSpd);
 800e638:	4b6e      	ldr	r3, [pc, #440]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e63a:	ed93 7b12 	vldr	d7, [r3, #72]	; 0x48
 800e63e:	4b6d      	ldr	r3, [pc, #436]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e640:	ed93 6b00 	vldr	d6, [r3]
 800e644:	4b6b      	ldr	r3, [pc, #428]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e646:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 800e64a:	4b6a      	ldr	r3, [pc, #424]	; (800e7f4 <LegPos_UpdateTask+0x228>)
 800e64c:	ed93 4b02 	vldr	d4, [r3, #8]
 800e650:	f107 0308 	add.w	r3, r7, #8
 800e654:	4618      	mov	r0, r3
 800e656:	eeb0 3a44 	vmov.f32	s6, s8
 800e65a:	eef0 3a64 	vmov.f32	s7, s9
 800e65e:	eeb0 2a45 	vmov.f32	s4, s10
 800e662:	eef0 2a65 	vmov.f32	s5, s11
 800e666:	eeb0 1a46 	vmov.f32	s2, s12
 800e66a:	eef0 1a66 	vmov.f32	s3, s13
 800e66e:	eeb0 0a47 	vmov.f32	s0, s14
 800e672:	eef0 0a67 	vmov.f32	s1, s15
 800e676:	f7fb ff67 	bl	800a548 <leg_spd>
		leftLegPos.dLength = legSpd[0];
 800e67a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800e67e:	4610      	mov	r0, r2
 800e680:	4619      	mov	r1, r3
 800e682:	f7f2 fab1 	bl	8000be8 <__aeabi_d2f>
 800e686:	4603      	mov	r3, r0
 800e688:	4a5b      	ldr	r2, [pc, #364]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e68a:	60d3      	str	r3, [r2, #12]
		leftLegPos.dAngle = legSpd[1];
 800e68c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800e690:	4610      	mov	r0, r2
 800e692:	4619      	mov	r1, r3
 800e694:	f7f2 faa8 	bl	8000be8 <__aeabi_d2f>
 800e698:	4603      	mov	r3, r0
 800e69a:	4a57      	ldr	r2, [pc, #348]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e69c:	6093      	str	r3, [r2, #8]

		//计算左腿腿长加速度
		leftLegPos.ddLength = ((leftLegPos.dLength - lastLeftDLength) * 1000 / 4) * lpfRatio + leftLegPos.ddLength * (1 - lpfRatio);
 800e69e:	4b56      	ldr	r3, [pc, #344]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e6a0:	ed93 7a03 	vldr	s14, [r3, #12]
 800e6a4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800e6a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e6ac:	ed9f 7a53 	vldr	s14, [pc, #332]	; 800e7fc <LegPos_UpdateTask+0x230>
 800e6b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e6b4:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
 800e6b8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e6bc:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e6c0:	ee27 7a27 	vmul.f32	s14, s14, s15
 800e6c4:	4b4c      	ldr	r3, [pc, #304]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e6c6:	edd3 6a04 	vldr	s13, [r3, #16]
 800e6ca:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800e6ce:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e6d2:	ee76 7a67 	vsub.f32	s15, s12, s15
 800e6d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800e6da:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e6de:	4b46      	ldr	r3, [pc, #280]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e6e0:	edc3 7a04 	vstr	s15, [r3, #16]
		lastLeftDLength = leftLegPos.dLength;
 800e6e4:	4b44      	ldr	r3, [pc, #272]	; (800e7f8 <LegPos_UpdateTask+0x22c>)
 800e6e6:	68db      	ldr	r3, [r3, #12]
 800e6e8:	637b      	str	r3, [r7, #52]	; 0x34

		//计算右腿位置
		leg_pos(rightJoint[1].angle, rightJoint[0].angle, legPos);
 800e6ea:	4b45      	ldr	r3, [pc, #276]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e6ec:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800e6f0:	4b43      	ldr	r3, [pc, #268]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e6f2:	ed93 6b02 	vldr	d6, [r3, #8]
 800e6f6:	f107 0318 	add.w	r3, r7, #24
 800e6fa:	4618      	mov	r0, r3
 800e6fc:	eeb0 1a46 	vmov.f32	s2, s12
 800e700:	eef0 1a66 	vmov.f32	s3, s13
 800e704:	eeb0 0a47 	vmov.f32	s0, s14
 800e708:	eef0 0a67 	vmov.f32	s1, s15
 800e70c:	f7fb f824 	bl	8009758 <leg_pos>
		rightLegPos.length = legPos[0];
 800e710:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800e714:	4610      	mov	r0, r2
 800e716:	4619      	mov	r1, r3
 800e718:	f7f2 fa66 	bl	8000be8 <__aeabi_d2f>
 800e71c:	4603      	mov	r3, r0
 800e71e:	4a39      	ldr	r2, [pc, #228]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e720:	6053      	str	r3, [r2, #4]
		rightLegPos.angle = legPos[1];
 800e722:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800e726:	4610      	mov	r0, r2
 800e728:	4619      	mov	r1, r3
 800e72a:	f7f2 fa5d 	bl	8000be8 <__aeabi_d2f>
 800e72e:	4603      	mov	r3, r0
 800e730:	4a34      	ldr	r2, [pc, #208]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e732:	6013      	str	r3, [r2, #0]

		//计算右腿速度
		leg_spd(rightJoint[1].speed, rightJoint[0].speed, rightJoint[1].angle, rightJoint[0].angle, legSpd);
 800e734:	4b32      	ldr	r3, [pc, #200]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e736:	ed93 7b12 	vldr	d7, [r3, #72]	; 0x48
 800e73a:	4b31      	ldr	r3, [pc, #196]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e73c:	ed93 6b00 	vldr	d6, [r3]
 800e740:	4b2f      	ldr	r3, [pc, #188]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e742:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 800e746:	4b2e      	ldr	r3, [pc, #184]	; (800e800 <LegPos_UpdateTask+0x234>)
 800e748:	ed93 4b02 	vldr	d4, [r3, #8]
 800e74c:	f107 0308 	add.w	r3, r7, #8
 800e750:	4618      	mov	r0, r3
 800e752:	eeb0 3a44 	vmov.f32	s6, s8
 800e756:	eef0 3a64 	vmov.f32	s7, s9
 800e75a:	eeb0 2a45 	vmov.f32	s4, s10
 800e75e:	eef0 2a65 	vmov.f32	s5, s11
 800e762:	eeb0 1a46 	vmov.f32	s2, s12
 800e766:	eef0 1a66 	vmov.f32	s3, s13
 800e76a:	eeb0 0a47 	vmov.f32	s0, s14
 800e76e:	eef0 0a67 	vmov.f32	s1, s15
 800e772:	f7fb fee9 	bl	800a548 <leg_spd>
		rightLegPos.dLength = legSpd[0];
 800e776:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800e77a:	4610      	mov	r0, r2
 800e77c:	4619      	mov	r1, r3
 800e77e:	f7f2 fa33 	bl	8000be8 <__aeabi_d2f>
 800e782:	4603      	mov	r3, r0
 800e784:	4a1f      	ldr	r2, [pc, #124]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e786:	60d3      	str	r3, [r2, #12]
		rightLegPos.dAngle = legSpd[1];
 800e788:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800e78c:	4610      	mov	r0, r2
 800e78e:	4619      	mov	r1, r3
 800e790:	f7f2 fa2a 	bl	8000be8 <__aeabi_d2f>
 800e794:	4603      	mov	r3, r0
 800e796:	4a1b      	ldr	r2, [pc, #108]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e798:	6093      	str	r3, [r2, #8]

		//计算右腿腿长加速度
		rightLegPos.ddLength = ((rightLegPos.dLength - lastRightDLength) * 1000 / 4) * lpfRatio + rightLegPos.ddLength * (1 - lpfRatio);
 800e79a:	4b1a      	ldr	r3, [pc, #104]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e79c:	ed93 7a03 	vldr	s14, [r3, #12]
 800e7a0:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800e7a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 800e7a8:	ed9f 7a14 	vldr	s14, [pc, #80]	; 800e7fc <LegPos_UpdateTask+0x230>
 800e7ac:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e7b0:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
 800e7b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e7b8:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e7bc:	ee27 7a27 	vmul.f32	s14, s14, s15
 800e7c0:	4b10      	ldr	r3, [pc, #64]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e7c2:	edd3 6a04 	vldr	s13, [r3, #16]
 800e7c6:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800e7ca:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800e7ce:	ee76 7a67 	vsub.f32	s15, s12, s15
 800e7d2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800e7d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e7da:	4b0a      	ldr	r3, [pc, #40]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e7dc:	edc3 7a04 	vstr	s15, [r3, #16]
		lastRightDLength = rightLegPos.dLength;
 800e7e0:	4b08      	ldr	r3, [pc, #32]	; (800e804 <LegPos_UpdateTask+0x238>)
 800e7e2:	68db      	ldr	r3, [r3, #12]
 800e7e4:	633b      	str	r3, [r7, #48]	; 0x30

		vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 800e7e6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e7ea:	2104      	movs	r1, #4
 800e7ec:	4618      	mov	r0, r3
 800e7ee:	f00e f985 	bl	801cafc <vTaskDelayUntil>
	{
 800e7f2:	e6fc      	b.n	800e5ee <LegPos_UpdateTask+0x22>
 800e7f4:	20003628 	.word	0x20003628
 800e7f8:	200037d8 	.word	0x200037d8
 800e7fc:	447a0000 	.word	0x447a0000
 800e800:	200036b8 	.word	0x200036b8
 800e804:	200037ec 	.word	0x200037ec

0800e808 <Ctrl_Task>:
	}
}

void Ctrl_Task(void *arg)
{
 800e808:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800e80c:	b0ec      	sub	sp, #432	; 0x1b0
 800e80e:	af00      	add	r7, sp, #0
 800e810:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800e814:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 800e818:	6018      	str	r0, [r3, #0]
	double starttime = 0;
 800e81a:	f04f 0200 	mov.w	r2, #0
 800e81e:	f04f 0300 	mov.w	r3, #0
 800e822:	e9c7 236a 	strd	r2, r3, [r7, #424]	; 0x1a8
	double endtime = 0;
 800e826:	f04f 0200 	mov.w	r2, #0
 800e82a:	f04f 0300 	mov.w	r3, #0
 800e82e:	e9c7 2360 	strd	r2, r3, [r7, #384]	; 0x180
	double dt;
	const float wheelRadius = 0.045f; //m，车轮半径
 800e832:	4bb5      	ldr	r3, [pc, #724]	; (800eb08 <Ctrl_Task+0x300>)
 800e834:	f8c7 317c 	str.w	r3, [r7, #380]	; 0x17c
	const float legMass = 0.01f; //kg，腿部质量
 800e838:	4bb4      	ldr	r3, [pc, #720]	; (800eb0c <Ctrl_Task+0x304>)
 800e83a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178

	TickType_t xLastWakeTime = xTaskGetTickCount();
 800e83e:	f00e fb2b 	bl	801ce98 <xTaskGetTickCount>
 800e842:	4603      	mov	r3, r0
 800e844:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134

	//手动为反馈矩阵和输出叠加一个系数，用于手动优化控制效果
	float kRatio[2][6] = {{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f},
 800e848:	4bb1      	ldr	r3, [pc, #708]	; (800eb10 <Ctrl_Task+0x308>)
 800e84a:	f507 7482 	add.w	r4, r7, #260	; 0x104
 800e84e:	461d      	mov	r5, r3
 800e850:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e852:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e854:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e856:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e858:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800e85c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f}};
	float lqrTpRatio = 1.0f, lqrTRatio = 1.07f;
 800e860:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800e864:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800e868:	4baa      	ldr	r3, [pc, #680]	; (800eb14 <Ctrl_Task+0x30c>)
 800e86a:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170

	//设定初始目标值
	target.rollAngle = 0.0f;
 800e86e:	4baa      	ldr	r3, [pc, #680]	; (800eb18 <Ctrl_Task+0x310>)
 800e870:	f04f 0200 	mov.w	r2, #0
 800e874:	615a      	str	r2, [r3, #20]
	target.legLength = 0.12f;
 800e876:	4ba8      	ldr	r3, [pc, #672]	; (800eb18 <Ctrl_Task+0x310>)
 800e878:	4aa8      	ldr	r2, [pc, #672]	; (800eb1c <Ctrl_Task+0x314>)
 800e87a:	619a      	str	r2, [r3, #24]
	target.speed = 0.0f;
 800e87c:	4ba6      	ldr	r3, [pc, #664]	; (800eb18 <Ctrl_Task+0x310>)
 800e87e:	f04f 0200 	mov.w	r2, #0
 800e882:	609a      	str	r2, [r3, #8]
	target.position = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 800e884:	4ba6      	ldr	r3, [pc, #664]	; (800eb20 <Ctrl_Task+0x318>)
 800e886:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800e88a:	4ba6      	ldr	r3, [pc, #664]	; (800eb24 <Ctrl_Task+0x31c>)
 800e88c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800e890:	f7f1 fcfc 	bl	800028c <__adddf3>
 800e894:	4602      	mov	r2, r0
 800e896:	460b      	mov	r3, r1
 800e898:	4610      	mov	r0, r2
 800e89a:	4619      	mov	r1, r3
 800e89c:	f04f 0200 	mov.w	r2, #0
 800e8a0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e8a4:	f7f1 ffd2 	bl	800084c <__aeabi_ddiv>
 800e8a8:	4602      	mov	r2, r0
 800e8aa:	460b      	mov	r3, r1
 800e8ac:	4614      	mov	r4, r2
 800e8ae:	461d      	mov	r5, r3
 800e8b0:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e8b4:	f7f1 fe48 	bl	8000548 <__aeabi_f2d>
 800e8b8:	4602      	mov	r2, r0
 800e8ba:	460b      	mov	r3, r1
 800e8bc:	4620      	mov	r0, r4
 800e8be:	4629      	mov	r1, r5
 800e8c0:	f7f1 fe9a 	bl	80005f8 <__aeabi_dmul>
 800e8c4:	4602      	mov	r2, r0
 800e8c6:	460b      	mov	r3, r1
 800e8c8:	4610      	mov	r0, r2
 800e8ca:	4619      	mov	r1, r3
 800e8cc:	f7f2 f98c 	bl	8000be8 <__aeabi_d2f>
 800e8d0:	4603      	mov	r3, r0
 800e8d2:	4a91      	ldr	r2, [pc, #580]	; (800eb18 <Ctrl_Task+0x310>)
 800e8d4:	6013      	str	r3, [r2, #0]

	while (1)
	{
		endtime = get_microseconds();
 800e8d6:	f7f3 fccb 	bl	8002270 <get_microseconds>
 800e8da:	4603      	mov	r3, r0
 800e8dc:	4618      	mov	r0, r3
 800e8de:	f7f1 fe11 	bl	8000504 <__aeabi_ui2d>
 800e8e2:	4602      	mov	r2, r0
 800e8e4:	460b      	mov	r3, r1
 800e8e6:	e9c7 2360 	strd	r2, r3, [r7, #384]	; 0x180
		dt = endtime - starttime;
 800e8ea:	e9d7 236a 	ldrd	r2, r3, [r7, #424]	; 0x1a8
 800e8ee:	e9d7 0160 	ldrd	r0, r1, [r7, #384]	; 0x180
 800e8f2:	f7f1 fcc9 	bl	8000288 <__aeabi_dsub>
 800e8f6:	4602      	mov	r2, r0
 800e8f8:	460b      	mov	r3, r1
 800e8fa:	e9c7 235a 	strd	r2, r3, [r7, #360]	; 0x168
		check_dt = dt;
 800e8fe:	498a      	ldr	r1, [pc, #552]	; (800eb28 <Ctrl_Task+0x320>)
 800e900:	e9d7 235a 	ldrd	r2, r3, [r7, #360]	; 0x168
 800e904:	e9c1 2300 	strd	r2, r3, [r1]
		starttime = get_microseconds();
 800e908:	f7f3 fcb2 	bl	8002270 <get_microseconds>
 800e90c:	4603      	mov	r3, r0
 800e90e:	4618      	mov	r0, r3
 800e910:	f7f1 fdf8 	bl	8000504 <__aeabi_ui2d>
 800e914:	4602      	mov	r2, r0
 800e916:	460b      	mov	r3, r1
 800e918:	e9c7 236a 	strd	r2, r3, [r7, #424]	; 0x1a8
		//计算状态变量
		stateVar.phi = imu_heading.pit;
 800e91c:	4b83      	ldr	r3, [pc, #524]	; (800eb2c <Ctrl_Task+0x324>)
 800e91e:	681b      	ldr	r3, [r3, #0]
 800e920:	4a83      	ldr	r2, [pc, #524]	; (800eb30 <Ctrl_Task+0x328>)
 800e922:	6113      	str	r3, [r2, #16]
		stateVar.dPhi = imu_heading.dpit;
 800e924:	4b81      	ldr	r3, [pc, #516]	; (800eb2c <Ctrl_Task+0x324>)
 800e926:	68db      	ldr	r3, [r3, #12]
 800e928:	4a81      	ldr	r2, [pc, #516]	; (800eb30 <Ctrl_Task+0x328>)
 800e92a:	6153      	str	r3, [r2, #20]
		stateVar.x = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 800e92c:	4b7c      	ldr	r3, [pc, #496]	; (800eb20 <Ctrl_Task+0x318>)
 800e92e:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800e932:	4b7c      	ldr	r3, [pc, #496]	; (800eb24 <Ctrl_Task+0x31c>)
 800e934:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800e938:	f7f1 fca8 	bl	800028c <__adddf3>
 800e93c:	4602      	mov	r2, r0
 800e93e:	460b      	mov	r3, r1
 800e940:	4610      	mov	r0, r2
 800e942:	4619      	mov	r1, r3
 800e944:	f04f 0200 	mov.w	r2, #0
 800e948:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e94c:	f7f1 ff7e 	bl	800084c <__aeabi_ddiv>
 800e950:	4602      	mov	r2, r0
 800e952:	460b      	mov	r3, r1
 800e954:	4614      	mov	r4, r2
 800e956:	461d      	mov	r5, r3
 800e958:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e95c:	f7f1 fdf4 	bl	8000548 <__aeabi_f2d>
 800e960:	4602      	mov	r2, r0
 800e962:	460b      	mov	r3, r1
 800e964:	4620      	mov	r0, r4
 800e966:	4629      	mov	r1, r5
 800e968:	f7f1 fe46 	bl	80005f8 <__aeabi_dmul>
 800e96c:	4602      	mov	r2, r0
 800e96e:	460b      	mov	r3, r1
 800e970:	4610      	mov	r0, r2
 800e972:	4619      	mov	r1, r3
 800e974:	f7f2 f938 	bl	8000be8 <__aeabi_d2f>
 800e978:	4603      	mov	r3, r0
 800e97a:	4a6d      	ldr	r2, [pc, #436]	; (800eb30 <Ctrl_Task+0x328>)
 800e97c:	6093      	str	r3, [r2, #8]
		stateVar.dx = (leftWheel.speed + rightWheel.speed) / 2 * wheelRadius;
 800e97e:	4b68      	ldr	r3, [pc, #416]	; (800eb20 <Ctrl_Task+0x318>)
 800e980:	e9d3 0100 	ldrd	r0, r1, [r3]
 800e984:	4b67      	ldr	r3, [pc, #412]	; (800eb24 <Ctrl_Task+0x31c>)
 800e986:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e98a:	f7f1 fc7f 	bl	800028c <__adddf3>
 800e98e:	4602      	mov	r2, r0
 800e990:	460b      	mov	r3, r1
 800e992:	4610      	mov	r0, r2
 800e994:	4619      	mov	r1, r3
 800e996:	f04f 0200 	mov.w	r2, #0
 800e99a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e99e:	f7f1 ff55 	bl	800084c <__aeabi_ddiv>
 800e9a2:	4602      	mov	r2, r0
 800e9a4:	460b      	mov	r3, r1
 800e9a6:	4614      	mov	r4, r2
 800e9a8:	461d      	mov	r5, r3
 800e9aa:	f8d7 017c 	ldr.w	r0, [r7, #380]	; 0x17c
 800e9ae:	f7f1 fdcb 	bl	8000548 <__aeabi_f2d>
 800e9b2:	4602      	mov	r2, r0
 800e9b4:	460b      	mov	r3, r1
 800e9b6:	4620      	mov	r0, r4
 800e9b8:	4629      	mov	r1, r5
 800e9ba:	f7f1 fe1d 	bl	80005f8 <__aeabi_dmul>
 800e9be:	4602      	mov	r2, r0
 800e9c0:	460b      	mov	r3, r1
 800e9c2:	4610      	mov	r0, r2
 800e9c4:	4619      	mov	r1, r3
 800e9c6:	f7f2 f90f 	bl	8000be8 <__aeabi_d2f>
 800e9ca:	4603      	mov	r3, r0
 800e9cc:	4a58      	ldr	r2, [pc, #352]	; (800eb30 <Ctrl_Task+0x328>)
 800e9ce:	60d3      	str	r3, [r2, #12]
		stateVar.theta = 0;//(leftLegPos.angle + rightLegPos.angle) / 2 - M_PI_2 - imu_heading.pit;
 800e9d0:	4b57      	ldr	r3, [pc, #348]	; (800eb30 <Ctrl_Task+0x328>)
 800e9d2:	f04f 0200 	mov.w	r2, #0
 800e9d6:	601a      	str	r2, [r3, #0]
		stateVar.dTheta = 0;//(leftLegPos.dAngle + rightLegPos.dAngle) / 2 - imu_heading.dpit;
 800e9d8:	4b55      	ldr	r3, [pc, #340]	; (800eb30 <Ctrl_Task+0x328>)
 800e9da:	f04f 0200 	mov.w	r2, #0
 800e9de:	605a      	str	r2, [r3, #4]
		double legLength = 0.12;//(leftLegPos.length + rightLegPos.length) / 2;
 800e9e0:	a347      	add	r3, pc, #284	; (adr r3, 800eb00 <Ctrl_Task+0x2f8>)
 800e9e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e9e6:	e9c7 2358 	strd	r2, r3, [r7, #352]	; 0x160
		double dLegLength = 0;//(leftLegPos.dLength + rightLegPos.dLength) / 2;
 800e9ea:	f04f 0200 	mov.w	r2, #0
 800e9ee:	f04f 0300 	mov.w	r3, #0
 800e9f2:	e9c7 2356 	strd	r2, r3, [r7, #344]	; 0x158

		//如果正在站立准备状态，则不进行后续控制
		if(standupState == StandupState_Prepare)
 800e9f6:	4b4f      	ldr	r3, [pc, #316]	; (800eb34 <Ctrl_Task+0x32c>)
 800e9f8:	781b      	ldrb	r3, [r3, #0]
 800e9fa:	2b01      	cmp	r3, #1
 800e9fc:	d106      	bne.n	800ea0c <Ctrl_Task+0x204>
		{
			vTaskDelayUntil(&xLastWakeTime, 4);
 800e9fe:	f507 739a 	add.w	r3, r7, #308	; 0x134
 800ea02:	2104      	movs	r1, #4
 800ea04:	4618      	mov	r0, r3
 800ea06:	f00e f879 	bl	801cafc <vTaskDelayUntil>
 800ea0a:	e764      	b.n	800e8d6 <Ctrl_Task+0xce>
			continue;
		}

		//计算LQR反馈矩阵
		double kRes[12] = {0}, k[2][6] = {0};
 800ea0c:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ea10:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800ea14:	4618      	mov	r0, r3
 800ea16:	2360      	movs	r3, #96	; 0x60
 800ea18:	461a      	mov	r2, r3
 800ea1a:	2100      	movs	r1, #0
 800ea1c:	f010 fe59 	bl	801f6d2 <memset>
 800ea20:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ea24:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ea28:	4618      	mov	r0, r3
 800ea2a:	2360      	movs	r3, #96	; 0x60
 800ea2c:	461a      	mov	r2, r3
 800ea2e:	2100      	movs	r1, #0
 800ea30:	f010 fe4f 	bl	801f6d2 <memset>
		lqr_k(legLength, kRes);
 800ea34:	f107 0308 	add.w	r3, r7, #8
 800ea38:	4618      	mov	r0, r3
 800ea3a:	ed97 0b58 	vldr	d0, [r7, #352]	; 0x160
 800ea3e:	f7fc fbef 	bl	800b220 <lqr_k>
		lqr_k(0.12, k_check);
 800ea42:	483d      	ldr	r0, [pc, #244]	; (800eb38 <Ctrl_Task+0x330>)
 800ea44:	ed9f 0b2e 	vldr	d0, [pc, #184]	; 800eb00 <Ctrl_Task+0x2f8>
 800ea48:	f7fc fbea 	bl	800b220 <lqr_k>
		if(groundDetector.isTouchingGround) //正常触地状态
 800ea4c:	4b3b      	ldr	r3, [pc, #236]	; (800eb3c <Ctrl_Task+0x334>)
 800ea4e:	7a1b      	ldrb	r3, [r3, #8]
 800ea50:	2b00      	cmp	r3, #0
 800ea52:	d075      	beq.n	800eb40 <Ctrl_Task+0x338>
		{
            // double k[2][6] = {
            //     {-0.0224, -2.2530, -11.1054, -1.6155, 2.2361, 0.5513},
            //     {-0.0224, -2.2530, -11.1054, -1.6155, -2.2361, -0.5513}
            // };
			for (int i = 0; i < 6; i++)
 800ea54:	2300      	movs	r3, #0
 800ea56:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 800ea5a:	e04c      	b.n	800eaf6 <Ctrl_Task+0x2ee>
			{
				for (int j = 0; j < 2; j++)
 800ea5c:	2300      	movs	r3, #0
 800ea5e:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800ea62:	e03f      	b.n	800eae4 <Ctrl_Task+0x2dc>
					k[j][i] = kRes[i * 2 + j] * kRatio[j][i];
 800ea64:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800ea68:	005a      	lsls	r2, r3, #1
 800ea6a:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800ea6e:	4413      	add	r3, r2
 800ea70:	f507 72d8 	add.w	r2, r7, #432	; 0x1b0
 800ea74:	f5a2 72d4 	sub.w	r2, r2, #424	; 0x1a8
 800ea78:	00db      	lsls	r3, r3, #3
 800ea7a:	4413      	add	r3, r2
 800ea7c:	e9d3 4500 	ldrd	r4, r5, [r3]
 800ea80:	f8d7 21a0 	ldr.w	r2, [r7, #416]	; 0x1a0
 800ea84:	4613      	mov	r3, r2
 800ea86:	005b      	lsls	r3, r3, #1
 800ea88:	4413      	add	r3, r2
 800ea8a:	005b      	lsls	r3, r3, #1
 800ea8c:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 800ea90:	4413      	add	r3, r2
 800ea92:	009b      	lsls	r3, r3, #2
 800ea94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ea98:	443b      	add	r3, r7
 800ea9a:	3bac      	subs	r3, #172	; 0xac
 800ea9c:	681b      	ldr	r3, [r3, #0]
 800ea9e:	4618      	mov	r0, r3
 800eaa0:	f7f1 fd52 	bl	8000548 <__aeabi_f2d>
 800eaa4:	4602      	mov	r2, r0
 800eaa6:	460b      	mov	r3, r1
 800eaa8:	4620      	mov	r0, r4
 800eaaa:	4629      	mov	r1, r5
 800eaac:	f7f1 fda4 	bl	80005f8 <__aeabi_dmul>
 800eab0:	4602      	mov	r2, r0
 800eab2:	460b      	mov	r3, r1
 800eab4:	4610      	mov	r0, r2
 800eab6:	4619      	mov	r1, r3
 800eab8:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eabc:	f5a3 74a4 	sub.w	r4, r3, #328	; 0x148
 800eac0:	f8d7 21a0 	ldr.w	r2, [r7, #416]	; 0x1a0
 800eac4:	4613      	mov	r3, r2
 800eac6:	005b      	lsls	r3, r3, #1
 800eac8:	4413      	add	r3, r2
 800eaca:	005b      	lsls	r3, r3, #1
 800eacc:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 800ead0:	4413      	add	r3, r2
 800ead2:	00db      	lsls	r3, r3, #3
 800ead4:	4423      	add	r3, r4
 800ead6:	e9c3 0100 	strd	r0, r1, [r3]
				for (int j = 0; j < 2; j++)
 800eada:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800eade:	3301      	adds	r3, #1
 800eae0:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800eae4:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 800eae8:	2b01      	cmp	r3, #1
 800eaea:	ddbb      	ble.n	800ea64 <Ctrl_Task+0x25c>
			for (int i = 0; i < 6; i++)
 800eaec:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800eaf0:	3301      	adds	r3, #1
 800eaf2:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 800eaf6:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800eafa:	2b05      	cmp	r3, #5
 800eafc:	ddae      	ble.n	800ea5c <Ctrl_Task+0x254>
 800eafe:	e04d      	b.n	800eb9c <Ctrl_Task+0x394>
 800eb00:	eb851eb8 	.word	0xeb851eb8
 800eb04:	3fbeb851 	.word	0x3fbeb851
 800eb08:	3d3851ec 	.word	0x3d3851ec
 800eb0c:	3c23d70a 	.word	0x3c23d70a
 800eb10:	08026960 	.word	0x08026960
 800eb14:	3f88f5c3 	.word	0x3f88f5c3
 800eb18:	20000028 	.word	0x20000028
 800eb1c:	3df5c28f 	.word	0x3df5c28f
 800eb20:	20003748 	.word	0x20003748
 800eb24:	20003790 	.word	0x20003790
 800eb28:	20003948 	.word	0x20003948
 800eb2c:	2000327c 	.word	0x2000327c
 800eb30:	20003800 	.word	0x20003800
 800eb34:	20000050 	.word	0x20000050
 800eb38:	20003950 	.word	0x20003950
 800eb3c:	20000044 	.word	0x20000044
			}
		}
		else //腿部离地状态，手动修改反馈矩阵，仅保持腿部竖直
		{
			memset(k, 0, sizeof(k));
 800eb40:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800eb44:	2260      	movs	r2, #96	; 0x60
 800eb46:	2100      	movs	r1, #0
 800eb48:	4618      	mov	r0, r3
 800eb4a:	f010 fdc2 	bl	801f6d2 <memset>
			k[1][0] = kRes[1] * -2;
 800eb4e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eb52:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800eb56:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800eb5a:	f04f 0200 	mov.w	r2, #0
 800eb5e:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 800eb62:	f7f1 fd49 	bl	80005f8 <__aeabi_dmul>
 800eb66:	4602      	mov	r2, r0
 800eb68:	460b      	mov	r3, r1
 800eb6a:	f507 71d8 	add.w	r1, r7, #432	; 0x1b0
 800eb6e:	f5a1 71a4 	sub.w	r1, r1, #328	; 0x148
 800eb72:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
			k[1][1] = kRes[3] * -10;
 800eb76:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800eb7a:	f5a3 73d4 	sub.w	r3, r3, #424	; 0x1a8
 800eb7e:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800eb82:	f04f 0200 	mov.w	r2, #0
 800eb86:	4bda      	ldr	r3, [pc, #872]	; (800eef0 <Ctrl_Task+0x6e8>)
 800eb88:	f7f1 fd36 	bl	80005f8 <__aeabi_dmul>
 800eb8c:	4602      	mov	r2, r0
 800eb8e:	460b      	mov	r3, r1
 800eb90:	f507 71d8 	add.w	r1, r7, #432	; 0x1b0
 800eb94:	f5a1 71a4 	sub.w	r1, r1, #328	; 0x148
 800eb98:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
		}

		//准备状态变量
		float x[6] = {stateVar.theta, stateVar.dTheta, stateVar.x, stateVar.dx, stateVar.phi, stateVar.dPhi};
 800eb9c:	4bd5      	ldr	r3, [pc, #852]	; (800eef4 <Ctrl_Task+0x6ec>)
 800eb9e:	681b      	ldr	r3, [r3, #0]
 800eba0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 800eba4:	4bd3      	ldr	r3, [pc, #844]	; (800eef4 <Ctrl_Task+0x6ec>)
 800eba6:	685b      	ldr	r3, [r3, #4]
 800eba8:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 800ebac:	4bd1      	ldr	r3, [pc, #836]	; (800eef4 <Ctrl_Task+0x6ec>)
 800ebae:	689b      	ldr	r3, [r3, #8]
 800ebb0:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800ebb4:	4bcf      	ldr	r3, [pc, #828]	; (800eef4 <Ctrl_Task+0x6ec>)
 800ebb6:	68db      	ldr	r3, [r3, #12]
 800ebb8:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800ebbc:	4bcd      	ldr	r3, [pc, #820]	; (800eef4 <Ctrl_Task+0x6ec>)
 800ebbe:	691b      	ldr	r3, [r3, #16]
 800ebc0:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800ebc4:	4bcb      	ldr	r3, [pc, #812]	; (800eef4 <Ctrl_Task+0x6ec>)
 800ebc6:	695b      	ldr	r3, [r3, #20]
 800ebc8:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
		//与给定量作差
		x[2] -= target.position;
 800ebcc:	ed97 7a3d 	vldr	s14, [r7, #244]	; 0xf4
 800ebd0:	4bc9      	ldr	r3, [pc, #804]	; (800eef8 <Ctrl_Task+0x6f0>)
 800ebd2:	edd3 7a00 	vldr	s15, [r3]
 800ebd6:	ee77 7a67 	vsub.f32	s15, s14, s15
 800ebda:	edc7 7a3d 	vstr	s15, [r7, #244]	; 0xf4
		x[3] -= target.speed;
 800ebde:	ed97 7a3e 	vldr	s14, [r7, #248]	; 0xf8
 800ebe2:	4bc5      	ldr	r3, [pc, #788]	; (800eef8 <Ctrl_Task+0x6f0>)
 800ebe4:	edd3 7a02 	vldr	s15, [r3, #8]
 800ebe8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800ebec:	edc7 7a3e 	vstr	s15, [r7, #248]	; 0xf8
		check_x = x[2];
 800ebf0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ebf4:	4ac1      	ldr	r2, [pc, #772]	; (800eefc <Ctrl_Task+0x6f4>)
 800ebf6:	6013      	str	r3, [r2, #0]
		//矩阵相乘，计算LQR输出
		float lqrOutT = k[0][0] * x[0] + k[0][1] * x[1] + k[0][2] * x[2] + k[0][3] * x[3] + k[0][4] * x[4] + k[0][5] * x[5];
 800ebf8:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ebfc:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec00:	e9d3 4500 	ldrd	r4, r5, [r3]
 800ec04:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800ec08:	4618      	mov	r0, r3
 800ec0a:	f7f1 fc9d 	bl	8000548 <__aeabi_f2d>
 800ec0e:	4602      	mov	r2, r0
 800ec10:	460b      	mov	r3, r1
 800ec12:	4620      	mov	r0, r4
 800ec14:	4629      	mov	r1, r5
 800ec16:	f7f1 fcef 	bl	80005f8 <__aeabi_dmul>
 800ec1a:	4602      	mov	r2, r0
 800ec1c:	460b      	mov	r3, r1
 800ec1e:	4692      	mov	sl, r2
 800ec20:	469b      	mov	fp, r3
 800ec22:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec26:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec2a:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 800ec2e:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 800ec32:	4618      	mov	r0, r3
 800ec34:	f7f1 fc88 	bl	8000548 <__aeabi_f2d>
 800ec38:	4602      	mov	r2, r0
 800ec3a:	460b      	mov	r3, r1
 800ec3c:	4620      	mov	r0, r4
 800ec3e:	4629      	mov	r1, r5
 800ec40:	f7f1 fcda 	bl	80005f8 <__aeabi_dmul>
 800ec44:	4602      	mov	r2, r0
 800ec46:	460b      	mov	r3, r1
 800ec48:	4650      	mov	r0, sl
 800ec4a:	4659      	mov	r1, fp
 800ec4c:	f7f1 fb1e 	bl	800028c <__adddf3>
 800ec50:	4602      	mov	r2, r0
 800ec52:	460b      	mov	r3, r1
 800ec54:	4692      	mov	sl, r2
 800ec56:	469b      	mov	fp, r3
 800ec58:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec5c:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec60:	e9d3 4504 	ldrd	r4, r5, [r3, #16]
 800ec64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ec68:	4618      	mov	r0, r3
 800ec6a:	f7f1 fc6d 	bl	8000548 <__aeabi_f2d>
 800ec6e:	4602      	mov	r2, r0
 800ec70:	460b      	mov	r3, r1
 800ec72:	4620      	mov	r0, r4
 800ec74:	4629      	mov	r1, r5
 800ec76:	f7f1 fcbf 	bl	80005f8 <__aeabi_dmul>
 800ec7a:	4602      	mov	r2, r0
 800ec7c:	460b      	mov	r3, r1
 800ec7e:	4650      	mov	r0, sl
 800ec80:	4659      	mov	r1, fp
 800ec82:	f7f1 fb03 	bl	800028c <__adddf3>
 800ec86:	4602      	mov	r2, r0
 800ec88:	460b      	mov	r3, r1
 800ec8a:	4692      	mov	sl, r2
 800ec8c:	469b      	mov	fp, r3
 800ec8e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ec92:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ec96:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 800ec9a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ec9e:	4618      	mov	r0, r3
 800eca0:	f7f1 fc52 	bl	8000548 <__aeabi_f2d>
 800eca4:	4602      	mov	r2, r0
 800eca6:	460b      	mov	r3, r1
 800eca8:	4620      	mov	r0, r4
 800ecaa:	4629      	mov	r1, r5
 800ecac:	f7f1 fca4 	bl	80005f8 <__aeabi_dmul>
 800ecb0:	4602      	mov	r2, r0
 800ecb2:	460b      	mov	r3, r1
 800ecb4:	4650      	mov	r0, sl
 800ecb6:	4659      	mov	r1, fp
 800ecb8:	f7f1 fae8 	bl	800028c <__adddf3>
 800ecbc:	4602      	mov	r2, r0
 800ecbe:	460b      	mov	r3, r1
 800ecc0:	4692      	mov	sl, r2
 800ecc2:	469b      	mov	fp, r3
 800ecc4:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ecc8:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eccc:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 800ecd0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ecd4:	4618      	mov	r0, r3
 800ecd6:	f7f1 fc37 	bl	8000548 <__aeabi_f2d>
 800ecda:	4602      	mov	r2, r0
 800ecdc:	460b      	mov	r3, r1
 800ecde:	4620      	mov	r0, r4
 800ece0:	4629      	mov	r1, r5
 800ece2:	f7f1 fc89 	bl	80005f8 <__aeabi_dmul>
 800ece6:	4602      	mov	r2, r0
 800ece8:	460b      	mov	r3, r1
 800ecea:	4650      	mov	r0, sl
 800ecec:	4659      	mov	r1, fp
 800ecee:	f7f1 facd 	bl	800028c <__adddf3>
 800ecf2:	4602      	mov	r2, r0
 800ecf4:	460b      	mov	r3, r1
 800ecf6:	4692      	mov	sl, r2
 800ecf8:	469b      	mov	fp, r3
 800ecfa:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ecfe:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ed02:	e9d3 450a 	ldrd	r4, r5, [r3, #40]	; 0x28
 800ed06:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 800ed0a:	4618      	mov	r0, r3
 800ed0c:	f7f1 fc1c 	bl	8000548 <__aeabi_f2d>
 800ed10:	4602      	mov	r2, r0
 800ed12:	460b      	mov	r3, r1
 800ed14:	4620      	mov	r0, r4
 800ed16:	4629      	mov	r1, r5
 800ed18:	f7f1 fc6e 	bl	80005f8 <__aeabi_dmul>
 800ed1c:	4602      	mov	r2, r0
 800ed1e:	460b      	mov	r3, r1
 800ed20:	4650      	mov	r0, sl
 800ed22:	4659      	mov	r1, fp
 800ed24:	f7f1 fab2 	bl	800028c <__adddf3>
 800ed28:	4602      	mov	r2, r0
 800ed2a:	460b      	mov	r3, r1
 800ed2c:	4610      	mov	r0, r2
 800ed2e:	4619      	mov	r1, r3
 800ed30:	f7f1 ff5a 	bl	8000be8 <__aeabi_d2f>
 800ed34:	4603      	mov	r3, r0
 800ed36:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		float lqrOutTp = k[1][0] * x[0] + k[1][1] * x[1] + k[1][2] * x[2] + k[1][3] * x[3] + k[1][4] * x[4] + k[1][5] * x[5];
 800ed3a:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ed3e:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ed42:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	; 0x30
 800ed46:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800ed4a:	4618      	mov	r0, r3
 800ed4c:	f7f1 fbfc 	bl	8000548 <__aeabi_f2d>
 800ed50:	4602      	mov	r2, r0
 800ed52:	460b      	mov	r3, r1
 800ed54:	4620      	mov	r0, r4
 800ed56:	4629      	mov	r1, r5
 800ed58:	f7f1 fc4e 	bl	80005f8 <__aeabi_dmul>
 800ed5c:	4602      	mov	r2, r0
 800ed5e:	460b      	mov	r3, r1
 800ed60:	4692      	mov	sl, r2
 800ed62:	469b      	mov	fp, r3
 800ed64:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ed68:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ed6c:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800ed70:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 800ed74:	4618      	mov	r0, r3
 800ed76:	f7f1 fbe7 	bl	8000548 <__aeabi_f2d>
 800ed7a:	4602      	mov	r2, r0
 800ed7c:	460b      	mov	r3, r1
 800ed7e:	4620      	mov	r0, r4
 800ed80:	4629      	mov	r1, r5
 800ed82:	f7f1 fc39 	bl	80005f8 <__aeabi_dmul>
 800ed86:	4602      	mov	r2, r0
 800ed88:	460b      	mov	r3, r1
 800ed8a:	4650      	mov	r0, sl
 800ed8c:	4659      	mov	r1, fp
 800ed8e:	f7f1 fa7d 	bl	800028c <__adddf3>
 800ed92:	4602      	mov	r2, r0
 800ed94:	460b      	mov	r3, r1
 800ed96:	4692      	mov	sl, r2
 800ed98:	469b      	mov	fp, r3
 800ed9a:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ed9e:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800eda2:	e9d3 4510 	ldrd	r4, r5, [r3, #64]	; 0x40
 800eda6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800edaa:	4618      	mov	r0, r3
 800edac:	f7f1 fbcc 	bl	8000548 <__aeabi_f2d>
 800edb0:	4602      	mov	r2, r0
 800edb2:	460b      	mov	r3, r1
 800edb4:	4620      	mov	r0, r4
 800edb6:	4629      	mov	r1, r5
 800edb8:	f7f1 fc1e 	bl	80005f8 <__aeabi_dmul>
 800edbc:	4602      	mov	r2, r0
 800edbe:	460b      	mov	r3, r1
 800edc0:	4650      	mov	r0, sl
 800edc2:	4659      	mov	r1, fp
 800edc4:	f7f1 fa62 	bl	800028c <__adddf3>
 800edc8:	4602      	mov	r2, r0
 800edca:	460b      	mov	r3, r1
 800edcc:	4692      	mov	sl, r2
 800edce:	469b      	mov	fp, r3
 800edd0:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800edd4:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800edd8:	e9d3 4512 	ldrd	r4, r5, [r3, #72]	; 0x48
 800eddc:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ede0:	4618      	mov	r0, r3
 800ede2:	f7f1 fbb1 	bl	8000548 <__aeabi_f2d>
 800ede6:	4602      	mov	r2, r0
 800ede8:	460b      	mov	r3, r1
 800edea:	4620      	mov	r0, r4
 800edec:	4629      	mov	r1, r5
 800edee:	f7f1 fc03 	bl	80005f8 <__aeabi_dmul>
 800edf2:	4602      	mov	r2, r0
 800edf4:	460b      	mov	r3, r1
 800edf6:	4650      	mov	r0, sl
 800edf8:	4659      	mov	r1, fp
 800edfa:	f7f1 fa47 	bl	800028c <__adddf3>
 800edfe:	4602      	mov	r2, r0
 800ee00:	460b      	mov	r3, r1
 800ee02:	4692      	mov	sl, r2
 800ee04:	469b      	mov	fp, r3
 800ee06:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ee0a:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ee0e:	e9d3 4514 	ldrd	r4, r5, [r3, #80]	; 0x50
 800ee12:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ee16:	4618      	mov	r0, r3
 800ee18:	f7f1 fb96 	bl	8000548 <__aeabi_f2d>
 800ee1c:	4602      	mov	r2, r0
 800ee1e:	460b      	mov	r3, r1
 800ee20:	4620      	mov	r0, r4
 800ee22:	4629      	mov	r1, r5
 800ee24:	f7f1 fbe8 	bl	80005f8 <__aeabi_dmul>
 800ee28:	4602      	mov	r2, r0
 800ee2a:	460b      	mov	r3, r1
 800ee2c:	4650      	mov	r0, sl
 800ee2e:	4659      	mov	r1, fp
 800ee30:	f7f1 fa2c 	bl	800028c <__adddf3>
 800ee34:	4602      	mov	r2, r0
 800ee36:	460b      	mov	r3, r1
 800ee38:	4692      	mov	sl, r2
 800ee3a:	469b      	mov	fp, r3
 800ee3c:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
 800ee40:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800ee44:	e9d3 4516 	ldrd	r4, r5, [r3, #88]	; 0x58
 800ee48:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 800ee4c:	4618      	mov	r0, r3
 800ee4e:	f7f1 fb7b 	bl	8000548 <__aeabi_f2d>
 800ee52:	4602      	mov	r2, r0
 800ee54:	460b      	mov	r3, r1
 800ee56:	4620      	mov	r0, r4
 800ee58:	4629      	mov	r1, r5
 800ee5a:	f7f1 fbcd 	bl	80005f8 <__aeabi_dmul>
 800ee5e:	4602      	mov	r2, r0
 800ee60:	460b      	mov	r3, r1
 800ee62:	4650      	mov	r0, sl
 800ee64:	4659      	mov	r1, fp
 800ee66:	f7f1 fa11 	bl	800028c <__adddf3>
 800ee6a:	4602      	mov	r2, r0
 800ee6c:	460b      	mov	r3, r1
 800ee6e:	4610      	mov	r0, r2
 800ee70:	4619      	mov	r1, r3
 800ee72:	f7f1 feb9 	bl	8000be8 <__aeabi_d2f>
 800ee76:	4603      	mov	r3, r0
 800ee78:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
		lqrOutT_check = -lqrOutT;
 800ee7c:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 800ee80:	eef1 7a67 	vneg.f32	s15, s15
 800ee84:	ee17 3a90 	vmov	r3, s15
 800ee88:	4618      	mov	r0, r3
 800ee8a:	f7f1 fb5d 	bl	8000548 <__aeabi_f2d>
 800ee8e:	4602      	mov	r2, r0
 800ee90:	460b      	mov	r3, r1
 800ee92:	491b      	ldr	r1, [pc, #108]	; (800ef00 <Ctrl_Task+0x6f8>)
 800ee94:	e9c1 2300 	strd	r2, r3, [r1]
		lqrOutTp_check = -lqrOutTp;
 800ee98:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800ee9c:	eef1 7a67 	vneg.f32	s15, s15
 800eea0:	ee17 3a90 	vmov	r3, s15
 800eea4:	4618      	mov	r0, r3
 800eea6:	f7f1 fb4f 	bl	8000548 <__aeabi_f2d>
 800eeaa:	4602      	mov	r2, r0
 800eeac:	460b      	mov	r3, r1
 800eeae:	4915      	ldr	r1, [pc, #84]	; (800ef04 <Ctrl_Task+0x6fc>)
 800eeb0:	e9c1 2300 	strd	r2, r3, [r1]
		//计算yaw轴PID输出
		PID_Compute(&yawPID, target.yawAngle, imu_heading.yaw,0.004,0);
 800eeb4:	4b10      	ldr	r3, [pc, #64]	; (800eef8 <Ctrl_Task+0x6f0>)
 800eeb6:	691b      	ldr	r3, [r3, #16]
 800eeb8:	4618      	mov	r0, r3
 800eeba:	f7f1 fb45 	bl	8000548 <__aeabi_f2d>
 800eebe:	4604      	mov	r4, r0
 800eec0:	460d      	mov	r5, r1
 800eec2:	4b11      	ldr	r3, [pc, #68]	; (800ef08 <Ctrl_Task+0x700>)
 800eec4:	689b      	ldr	r3, [r3, #8]
 800eec6:	4618      	mov	r0, r3
 800eec8:	f7f1 fb3e 	bl	8000548 <__aeabi_f2d>
 800eecc:	4602      	mov	r2, r0
 800eece:	460b      	mov	r3, r1
 800eed0:	ed9f 3b03 	vldr	d3, [pc, #12]	; 800eee0 <Ctrl_Task+0x6d8>
 800eed4:	ed9f 2b04 	vldr	d2, [pc, #16]	; 800eee8 <Ctrl_Task+0x6e0>
 800eed8:	ec43 2b11 	vmov	d1, r2, r3
 800eedc:	e016      	b.n	800ef0c <Ctrl_Task+0x704>
 800eede:	bf00      	nop
	...
 800eee8:	d2f1a9fc 	.word	0xd2f1a9fc
 800eeec:	3f70624d 	.word	0x3f70624d
 800eef0:	c0240000 	.word	0xc0240000
 800eef4:	20003800 	.word	0x20003800
 800eef8:	20000028 	.word	0x20000028
 800eefc:	200039b0 	.word	0x200039b0
 800ef00:	20003920 	.word	0x20003920
 800ef04:	20003918 	.word	0x20003918
 800ef08:	2000327c 	.word	0x2000327c
 800ef0c:	ec45 4b10 	vmov	d0, r4, r5
 800ef10:	4861      	ldr	r0, [pc, #388]	; (800f098 <Ctrl_Task+0x890>)
 800ef12:	f7f5 ff39 	bl	8004d88 <PID_Compute>

		//设定车轮电机输出扭矩，为LQR和yaw轴PID输出的叠加
		if(groundDetector.isTouchingGround) //正常接地状态
 800ef16:	4b61      	ldr	r3, [pc, #388]	; (800f09c <Ctrl_Task+0x894>)
 800ef18:	7a1b      	ldrb	r3, [r3, #8]
 800ef1a:	2b00      	cmp	r3, #0
 800ef1c:	d033      	beq.n	800ef86 <Ctrl_Task+0x77e>
		{
//			Motor_SetTorque(&leftWheel, -lqrOutT * lqrTRatio - yawPID.output);
//			Motor_SetTorque(&rightWheel, -lqrOutT * lqrTRatio + yawPID.output);
			can_motors[1].torque = lqrOutT * lqrTRatio + yawPID.output;
 800ef1e:	ed97 7a55 	vldr	s14, [r7, #340]	; 0x154
 800ef22:	edd7 7a5c 	vldr	s15, [r7, #368]	; 0x170
 800ef26:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ef2a:	ee17 0a90 	vmov	r0, s15
 800ef2e:	f7f1 fb0b 	bl	8000548 <__aeabi_f2d>
 800ef32:	4b59      	ldr	r3, [pc, #356]	; (800f098 <Ctrl_Task+0x890>)
 800ef34:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800ef38:	f7f1 f9a8 	bl	800028c <__adddf3>
 800ef3c:	4602      	mov	r2, r0
 800ef3e:	460b      	mov	r3, r1
 800ef40:	4610      	mov	r0, r2
 800ef42:	4619      	mov	r1, r3
 800ef44:	f7f1 fe50 	bl	8000be8 <__aeabi_d2f>
 800ef48:	4603      	mov	r3, r0
 800ef4a:	4a55      	ldr	r2, [pc, #340]	; (800f0a0 <Ctrl_Task+0x898>)
 800ef4c:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
			can_motors[0].torque = -lqrOutT * lqrTRatio - yawPID.output;
 800ef50:	edd7 7a55 	vldr	s15, [r7, #340]	; 0x154
 800ef54:	eeb1 7a67 	vneg.f32	s14, s15
 800ef58:	edd7 7a5c 	vldr	s15, [r7, #368]	; 0x170
 800ef5c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ef60:	ee17 0a90 	vmov	r0, s15
 800ef64:	f7f1 faf0 	bl	8000548 <__aeabi_f2d>
 800ef68:	4b4b      	ldr	r3, [pc, #300]	; (800f098 <Ctrl_Task+0x890>)
 800ef6a:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800ef6e:	f7f1 f98b 	bl	8000288 <__aeabi_dsub>
 800ef72:	4602      	mov	r2, r0
 800ef74:	460b      	mov	r3, r1
 800ef76:	4610      	mov	r0, r2
 800ef78:	4619      	mov	r1, r3
 800ef7a:	f7f1 fe35 	bl	8000be8 <__aeabi_d2f>
 800ef7e:	4603      	mov	r3, r0
 800ef80:	4a47      	ldr	r2, [pc, #284]	; (800f0a0 <Ctrl_Task+0x898>)
 800ef82:	6293      	str	r3, [r2, #40]	; 0x28
 800ef84:	e008      	b.n	800ef98 <Ctrl_Task+0x790>
		}
		else //腿部离地状态，关闭车轮电机
		{
//			Motor_SetTorque(&leftWheel, 0);
//			Motor_SetTorque(&rightWheel, 0);
			can_motors[1].torque = 0;
 800ef86:	4b46      	ldr	r3, [pc, #280]	; (800f0a0 <Ctrl_Task+0x898>)
 800ef88:	f04f 0200 	mov.w	r2, #0
 800ef8c:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			can_motors[0].torque = 0;
 800ef90:	4b43      	ldr	r3, [pc, #268]	; (800f0a0 <Ctrl_Task+0x898>)
 800ef92:	f04f 0200 	mov.w	r2, #0
 800ef96:	629a      	str	r2, [r3, #40]	; 0x28
		}

		//根据离地状态修改目标腿长，并计算腿长PID输出
		PID_Compute(&legLengthPID, (groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? target.legLength : 0.2f, legLength,0.004,0.001);
 800ef98:	4b40      	ldr	r3, [pc, #256]	; (800f09c <Ctrl_Task+0x894>)
 800ef9a:	7a1b      	ldrb	r3, [r3, #8]
 800ef9c:	2b00      	cmp	r3, #0
 800ef9e:	d00e      	beq.n	800efbe <Ctrl_Task+0x7b6>
 800efa0:	4b3e      	ldr	r3, [pc, #248]	; (800f09c <Ctrl_Task+0x894>)
 800efa2:	7a5b      	ldrb	r3, [r3, #9]
 800efa4:	f083 0301 	eor.w	r3, r3, #1
 800efa8:	b2db      	uxtb	r3, r3
 800efaa:	2b00      	cmp	r3, #0
 800efac:	d007      	beq.n	800efbe <Ctrl_Task+0x7b6>
 800efae:	4b3d      	ldr	r3, [pc, #244]	; (800f0a4 <Ctrl_Task+0x89c>)
 800efb0:	699b      	ldr	r3, [r3, #24]
 800efb2:	4618      	mov	r0, r3
 800efb4:	f7f1 fac8 	bl	8000548 <__aeabi_f2d>
 800efb8:	4602      	mov	r2, r0
 800efba:	460b      	mov	r3, r1
 800efbc:	e002      	b.n	800efc4 <Ctrl_Task+0x7bc>
 800efbe:	a330      	add	r3, pc, #192	; (adr r3, 800f080 <Ctrl_Task+0x878>)
 800efc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800efc4:	ed9f 3b30 	vldr	d3, [pc, #192]	; 800f088 <Ctrl_Task+0x880>
 800efc8:	ed9f 2b31 	vldr	d2, [pc, #196]	; 800f090 <Ctrl_Task+0x888>
 800efcc:	ed97 1b58 	vldr	d1, [r7, #352]	; 0x160
 800efd0:	ec43 2b10 	vmov	d0, r2, r3
 800efd4:	4834      	ldr	r0, [pc, #208]	; (800f0a8 <Ctrl_Task+0x8a0>)
 800efd6:	f7f5 fed7 	bl	8004d88 <PID_Compute>
		//计算roll轴PID输出
		PID_Compute(&rollPID, target.rollAngle, imu_heading.rol,0.004,0.001);
 800efda:	4b32      	ldr	r3, [pc, #200]	; (800f0a4 <Ctrl_Task+0x89c>)
 800efdc:	695b      	ldr	r3, [r3, #20]
 800efde:	4618      	mov	r0, r3
 800efe0:	f7f1 fab2 	bl	8000548 <__aeabi_f2d>
 800efe4:	4604      	mov	r4, r0
 800efe6:	460d      	mov	r5, r1
 800efe8:	4b30      	ldr	r3, [pc, #192]	; (800f0ac <Ctrl_Task+0x8a4>)
 800efea:	685b      	ldr	r3, [r3, #4]
 800efec:	4618      	mov	r0, r3
 800efee:	f7f1 faab 	bl	8000548 <__aeabi_f2d>
 800eff2:	4602      	mov	r2, r0
 800eff4:	460b      	mov	r3, r1
 800eff6:	ed9f 3b24 	vldr	d3, [pc, #144]	; 800f088 <Ctrl_Task+0x880>
 800effa:	ed9f 2b25 	vldr	d2, [pc, #148]	; 800f090 <Ctrl_Task+0x888>
 800effe:	ec43 2b11 	vmov	d1, r2, r3
 800f002:	ec45 4b10 	vmov	d0, r4, r5
 800f006:	482a      	ldr	r0, [pc, #168]	; (800f0b0 <Ctrl_Task+0x8a8>)
 800f008:	f7f5 febe 	bl	8004d88 <PID_Compute>
		//根据离地状态计算左右腿推力，若离地则不考虑roll轴PID输出和前馈量
		double leftForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? +rollPID.output : 0) + 13;
 800f00c:	4b26      	ldr	r3, [pc, #152]	; (800f0a8 <Ctrl_Task+0x8a0>)
 800f00e:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800f012:	4922      	ldr	r1, [pc, #136]	; (800f09c <Ctrl_Task+0x894>)
 800f014:	7a09      	ldrb	r1, [r1, #8]
 800f016:	2900      	cmp	r1, #0
 800f018:	d00a      	beq.n	800f030 <Ctrl_Task+0x828>
 800f01a:	4920      	ldr	r1, [pc, #128]	; (800f09c <Ctrl_Task+0x894>)
 800f01c:	7a49      	ldrb	r1, [r1, #9]
 800f01e:	f081 0101 	eor.w	r1, r1, #1
 800f022:	b2c9      	uxtb	r1, r1
 800f024:	2900      	cmp	r1, #0
 800f026:	d003      	beq.n	800f030 <Ctrl_Task+0x828>
 800f028:	4921      	ldr	r1, [pc, #132]	; (800f0b0 <Ctrl_Task+0x8a8>)
 800f02a:	e9d1 010e 	ldrd	r0, r1, [r1, #56]	; 0x38
 800f02e:	e003      	b.n	800f038 <Ctrl_Task+0x830>
 800f030:	f04f 0000 	mov.w	r0, #0
 800f034:	f04f 0100 	mov.w	r1, #0
 800f038:	f7f1 f928 	bl	800028c <__adddf3>
 800f03c:	4602      	mov	r2, r0
 800f03e:	460b      	mov	r3, r1
 800f040:	4610      	mov	r0, r2
 800f042:	4619      	mov	r1, r3
 800f044:	f04f 0200 	mov.w	r2, #0
 800f048:	4b1a      	ldr	r3, [pc, #104]	; (800f0b4 <Ctrl_Task+0x8ac>)
 800f04a:	f7f1 f91f 	bl	800028c <__adddf3>
 800f04e:	4602      	mov	r2, r0
 800f050:	460b      	mov	r3, r1
 800f052:	e9c7 2366 	strd	r2, r3, [r7, #408]	; 0x198
		double rightForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? -rollPID.output : 0) + 13;
 800f056:	4b14      	ldr	r3, [pc, #80]	; (800f0a8 <Ctrl_Task+0x8a0>)
 800f058:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 800f05c:	4b0f      	ldr	r3, [pc, #60]	; (800f09c <Ctrl_Task+0x894>)
 800f05e:	7a1b      	ldrb	r3, [r3, #8]
 800f060:	2b00      	cmp	r3, #0
 800f062:	d029      	beq.n	800f0b8 <Ctrl_Task+0x8b0>
 800f064:	4b0d      	ldr	r3, [pc, #52]	; (800f09c <Ctrl_Task+0x894>)
 800f066:	7a5b      	ldrb	r3, [r3, #9]
 800f068:	f083 0301 	eor.w	r3, r3, #1
 800f06c:	b2db      	uxtb	r3, r3
 800f06e:	2b00      	cmp	r3, #0
 800f070:	d022      	beq.n	800f0b8 <Ctrl_Task+0x8b0>
 800f072:	4b0f      	ldr	r3, [pc, #60]	; (800f0b0 <Ctrl_Task+0x8a8>)
 800f074:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 800f078:	4690      	mov	r8, r2
 800f07a:	f083 4900 	eor.w	r9, r3, #2147483648	; 0x80000000
 800f07e:	e01f      	b.n	800f0c0 <Ctrl_Task+0x8b8>
 800f080:	a0000000 	.word	0xa0000000
 800f084:	3fc99999 	.word	0x3fc99999
 800f088:	d2f1a9fc 	.word	0xd2f1a9fc
 800f08c:	3f50624d 	.word	0x3f50624d
 800f090:	d2f1a9fc 	.word	0xd2f1a9fc
 800f094:	3f70624d 	.word	0x3f70624d
 800f098:	20003898 	.word	0x20003898
 800f09c:	20000044 	.word	0x20000044
 800f0a0:	200018a8 	.word	0x200018a8
 800f0a4:	20000028 	.word	0x20000028
 800f0a8:	20003858 	.word	0x20003858
 800f0ac:	2000327c 	.word	0x2000327c
 800f0b0:	200038d8 	.word	0x200038d8
 800f0b4:	402a0000 	.word	0x402a0000
 800f0b8:	f04f 0800 	mov.w	r8, #0
 800f0bc:	f04f 0900 	mov.w	r9, #0
 800f0c0:	4602      	mov	r2, r0
 800f0c2:	460b      	mov	r3, r1
 800f0c4:	4640      	mov	r0, r8
 800f0c6:	4649      	mov	r1, r9
 800f0c8:	f7f1 f8e0 	bl	800028c <__adddf3>
 800f0cc:	4602      	mov	r2, r0
 800f0ce:	460b      	mov	r3, r1
 800f0d0:	4610      	mov	r0, r2
 800f0d2:	4619      	mov	r1, r3
 800f0d4:	f04f 0200 	mov.w	r2, #0
 800f0d8:	4b62      	ldr	r3, [pc, #392]	; (800f264 <Ctrl_Task+0xa5c>)
 800f0da:	f7f1 f8d7 	bl	800028c <__adddf3>
 800f0de:	4602      	mov	r2, r0
 800f0e0:	460b      	mov	r3, r1
 800f0e2:	e9c7 2364 	strd	r2, r3, [r7, #400]	; 0x190
//		double leftForce = legLengthPID.output + 5.0;
//		double rightForce = legLengthPID.output + 5.0;
		if(leftLegPos.length > 0.22f) //保护腿部不能伸太长
 800f0e6:	4b60      	ldr	r3, [pc, #384]	; (800f268 <Ctrl_Task+0xa60>)
 800f0e8:	edd3 7a01 	vldr	s15, [r3, #4]
 800f0ec:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 800f26c <Ctrl_Task+0xa64>
 800f0f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f0f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0f8:	dd14      	ble.n	800f124 <Ctrl_Task+0x91c>
			leftForce -= (leftLegPos.length - 0.2f) * 1;
 800f0fa:	4b5b      	ldr	r3, [pc, #364]	; (800f268 <Ctrl_Task+0xa60>)
 800f0fc:	edd3 7a01 	vldr	s15, [r3, #4]
 800f100:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 800f270 <Ctrl_Task+0xa68>
 800f104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f108:	ee17 0a90 	vmov	r0, s15
 800f10c:	f7f1 fa1c 	bl	8000548 <__aeabi_f2d>
 800f110:	4602      	mov	r2, r0
 800f112:	460b      	mov	r3, r1
 800f114:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 800f118:	f7f1 f8b6 	bl	8000288 <__aeabi_dsub>
 800f11c:	4602      	mov	r2, r0
 800f11e:	460b      	mov	r3, r1
 800f120:	e9c7 2366 	strd	r2, r3, [r7, #408]	; 0x198
		if(rightLegPos.length > 0.22f)
 800f124:	4b53      	ldr	r3, [pc, #332]	; (800f274 <Ctrl_Task+0xa6c>)
 800f126:	edd3 7a01 	vldr	s15, [r3, #4]
 800f12a:	ed9f 7a50 	vldr	s14, [pc, #320]	; 800f26c <Ctrl_Task+0xa64>
 800f12e:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f136:	dd14      	ble.n	800f162 <Ctrl_Task+0x95a>
			rightForce -= (rightLegPos.length - 0.2f) * 1;
 800f138:	4b4e      	ldr	r3, [pc, #312]	; (800f274 <Ctrl_Task+0xa6c>)
 800f13a:	edd3 7a01 	vldr	s15, [r3, #4]
 800f13e:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 800f270 <Ctrl_Task+0xa68>
 800f142:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f146:	ee17 0a90 	vmov	r0, s15
 800f14a:	f7f1 f9fd 	bl	8000548 <__aeabi_f2d>
 800f14e:	4602      	mov	r2, r0
 800f150:	460b      	mov	r3, r1
 800f152:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 800f156:	f7f1 f897 	bl	8000288 <__aeabi_dsub>
 800f15a:	4602      	mov	r2, r0
 800f15c:	460b      	mov	r3, r1
 800f15e:	e9c7 2364 	strd	r2, r3, [r7, #400]	; 0x190

		//计算左右腿的地面支持力
		groundDetector.leftSupportForce = leftForce + legMass * 9.8f - legMass * (leftLegPos.ddLength - imu_heading.ddz - 9.8f);
 800f162:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f166:	ed9f 7a44 	vldr	s14, [pc, #272]	; 800f278 <Ctrl_Task+0xa70>
 800f16a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f16e:	ee17 0a90 	vmov	r0, s15
 800f172:	f7f1 f9e9 	bl	8000548 <__aeabi_f2d>
 800f176:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	; 0x198
 800f17a:	f7f1 f887 	bl	800028c <__adddf3>
 800f17e:	4602      	mov	r2, r0
 800f180:	460b      	mov	r3, r1
 800f182:	4614      	mov	r4, r2
 800f184:	461d      	mov	r5, r3
 800f186:	4b38      	ldr	r3, [pc, #224]	; (800f268 <Ctrl_Task+0xa60>)
 800f188:	ed93 7a04 	vldr	s14, [r3, #16]
 800f18c:	4b3b      	ldr	r3, [pc, #236]	; (800f27c <Ctrl_Task+0xa74>)
 800f18e:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 800f192:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f196:	ed9f 7a38 	vldr	s14, [pc, #224]	; 800f278 <Ctrl_Task+0xa70>
 800f19a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800f19e:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f1a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f1a6:	ee17 0a90 	vmov	r0, s15
 800f1aa:	f7f1 f9cd 	bl	8000548 <__aeabi_f2d>
 800f1ae:	4602      	mov	r2, r0
 800f1b0:	460b      	mov	r3, r1
 800f1b2:	4620      	mov	r0, r4
 800f1b4:	4629      	mov	r1, r5
 800f1b6:	f7f1 f867 	bl	8000288 <__aeabi_dsub>
 800f1ba:	4602      	mov	r2, r0
 800f1bc:	460b      	mov	r3, r1
 800f1be:	4610      	mov	r0, r2
 800f1c0:	4619      	mov	r1, r3
 800f1c2:	f7f1 fd11 	bl	8000be8 <__aeabi_d2f>
 800f1c6:	4603      	mov	r3, r0
 800f1c8:	4a2d      	ldr	r2, [pc, #180]	; (800f280 <Ctrl_Task+0xa78>)
 800f1ca:	6013      	str	r3, [r2, #0]
		groundDetector.rightSupportForce = rightForce + legMass * 9.8f - legMass * (rightLegPos.ddLength - imu_heading.ddz - 9.8f);
 800f1cc:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f1d0:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800f278 <Ctrl_Task+0xa70>
 800f1d4:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f1d8:	ee17 0a90 	vmov	r0, s15
 800f1dc:	f7f1 f9b4 	bl	8000548 <__aeabi_f2d>
 800f1e0:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	; 0x190
 800f1e4:	f7f1 f852 	bl	800028c <__adddf3>
 800f1e8:	4602      	mov	r2, r0
 800f1ea:	460b      	mov	r3, r1
 800f1ec:	4614      	mov	r4, r2
 800f1ee:	461d      	mov	r5, r3
 800f1f0:	4b20      	ldr	r3, [pc, #128]	; (800f274 <Ctrl_Task+0xa6c>)
 800f1f2:	ed93 7a04 	vldr	s14, [r3, #16]
 800f1f6:	4b21      	ldr	r3, [pc, #132]	; (800f27c <Ctrl_Task+0xa74>)
 800f1f8:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 800f1fc:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f200:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 800f278 <Ctrl_Task+0xa70>
 800f204:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800f208:	edd7 7a5e 	vldr	s15, [r7, #376]	; 0x178
 800f20c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f210:	ee17 0a90 	vmov	r0, s15
 800f214:	f7f1 f998 	bl	8000548 <__aeabi_f2d>
 800f218:	4602      	mov	r2, r0
 800f21a:	460b      	mov	r3, r1
 800f21c:	4620      	mov	r0, r4
 800f21e:	4629      	mov	r1, r5
 800f220:	f7f1 f832 	bl	8000288 <__aeabi_dsub>
 800f224:	4602      	mov	r2, r0
 800f226:	460b      	mov	r3, r1
 800f228:	4610      	mov	r0, r2
 800f22a:	4619      	mov	r1, r3
 800f22c:	f7f1 fcdc 	bl	8000be8 <__aeabi_d2f>
 800f230:	4603      	mov	r3, r0
 800f232:	4a13      	ldr	r2, [pc, #76]	; (800f280 <Ctrl_Task+0xa78>)
 800f234:	6053      	str	r3, [r2, #4]
		//更新离地检测器数据
		static uint32_t lastTouchTime = 0;
		bool isTouchingGround = groundDetector.leftSupportForce > -100 && groundDetector.rightSupportForce > -100; //判断当前瞬间是否接地
 800f236:	4b12      	ldr	r3, [pc, #72]	; (800f280 <Ctrl_Task+0xa78>)
 800f238:	edd3 7a00 	vldr	s15, [r3]
 800f23c:	ed9f 7a11 	vldr	s14, [pc, #68]	; 800f284 <Ctrl_Task+0xa7c>
 800f240:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f248:	dd1e      	ble.n	800f288 <Ctrl_Task+0xa80>
 800f24a:	4b0d      	ldr	r3, [pc, #52]	; (800f280 <Ctrl_Task+0xa78>)
 800f24c:	edd3 7a01 	vldr	s15, [r3, #4]
 800f250:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 800f284 <Ctrl_Task+0xa7c>
 800f254:	eef4 7ac7 	vcmpe.f32	s15, s14
 800f258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f25c:	dd14      	ble.n	800f288 <Ctrl_Task+0xa80>
 800f25e:	2301      	movs	r3, #1
 800f260:	e013      	b.n	800f28a <Ctrl_Task+0xa82>
 800f262:	bf00      	nop
 800f264:	402a0000 	.word	0x402a0000
 800f268:	200037d8 	.word	0x200037d8
 800f26c:	3e6147ae 	.word	0x3e6147ae
 800f270:	3e4ccccd 	.word	0x3e4ccccd
 800f274:	200037ec 	.word	0x200037ec
 800f278:	411ccccd 	.word	0x411ccccd
 800f27c:	2000327c 	.word	0x2000327c
 800f280:	20000044 	.word	0x20000044
 800f284:	c2c80000 	.word	0xc2c80000
 800f288:	2300      	movs	r3, #0
 800f28a:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
 800f28e:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f292:	f003 0301 	and.w	r3, r3, #1
 800f296:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
		if(!isTouchingGround && (get_microseconds()/1000) - lastTouchTime < 1000) //若上次触地时间距离现在不超过1s，则认为当前瞬间接地，避免弹跳导致误判
 800f29a:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f29e:	f083 0301 	eor.w	r3, r3, #1
 800f2a2:	b2db      	uxtb	r3, r3
 800f2a4:	2b00      	cmp	r3, #0
 800f2a6:	d00f      	beq.n	800f2c8 <Ctrl_Task+0xac0>
 800f2a8:	f7f2 ffe2 	bl	8002270 <get_microseconds>
 800f2ac:	4603      	mov	r3, r0
 800f2ae:	4a98      	ldr	r2, [pc, #608]	; (800f510 <Ctrl_Task+0xd08>)
 800f2b0:	fba2 2303 	umull	r2, r3, r2, r3
 800f2b4:	099a      	lsrs	r2, r3, #6
 800f2b6:	4b97      	ldr	r3, [pc, #604]	; (800f514 <Ctrl_Task+0xd0c>)
 800f2b8:	681b      	ldr	r3, [r3, #0]
 800f2ba:	1ad3      	subs	r3, r2, r3
 800f2bc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800f2c0:	d202      	bcs.n	800f2c8 <Ctrl_Task+0xac0>
			isTouchingGround = true;
 800f2c2:	2301      	movs	r3, #1
 800f2c4:	f887 318f 	strb.w	r3, [r7, #399]	; 0x18f
		if(!groundDetector.isTouchingGround && isTouchingGround) //判断转为接地状态，标记进入缓冲状态
 800f2c8:	4b93      	ldr	r3, [pc, #588]	; (800f518 <Ctrl_Task+0xd10>)
 800f2ca:	7a1b      	ldrb	r3, [r3, #8]
 800f2cc:	f083 0301 	eor.w	r3, r3, #1
 800f2d0:	b2db      	uxtb	r3, r3
 800f2d2:	2b00      	cmp	r3, #0
 800f2d4:	d013      	beq.n	800f2fe <Ctrl_Task+0xaf6>
 800f2d6:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f2da:	2b00      	cmp	r3, #0
 800f2dc:	d00f      	beq.n	800f2fe <Ctrl_Task+0xaf6>
		{
			target.position = stateVar.x;
 800f2de:	4b8f      	ldr	r3, [pc, #572]	; (800f51c <Ctrl_Task+0xd14>)
 800f2e0:	689b      	ldr	r3, [r3, #8]
 800f2e2:	4a8f      	ldr	r2, [pc, #572]	; (800f520 <Ctrl_Task+0xd18>)
 800f2e4:	6013      	str	r3, [r2, #0]
			groundDetector.isCuchioning = true;
 800f2e6:	4b8c      	ldr	r3, [pc, #560]	; (800f518 <Ctrl_Task+0xd10>)
 800f2e8:	2201      	movs	r2, #1
 800f2ea:	725a      	strb	r2, [r3, #9]
			lastTouchTime = (get_microseconds()/1000);
 800f2ec:	f7f2 ffc0 	bl	8002270 <get_microseconds>
 800f2f0:	4603      	mov	r3, r0
 800f2f2:	4a87      	ldr	r2, [pc, #540]	; (800f510 <Ctrl_Task+0xd08>)
 800f2f4:	fba2 2303 	umull	r2, r3, r2, r3
 800f2f8:	099b      	lsrs	r3, r3, #6
 800f2fa:	4a86      	ldr	r2, [pc, #536]	; (800f514 <Ctrl_Task+0xd0c>)
 800f2fc:	6013      	str	r3, [r2, #0]
		}
		if(groundDetector.isCuchioning && legLength < target.legLength) //缓冲状态直到腿长压缩到目标腿长结束
 800f2fe:	4b86      	ldr	r3, [pc, #536]	; (800f518 <Ctrl_Task+0xd10>)
 800f300:	7a5b      	ldrb	r3, [r3, #9]
 800f302:	2b00      	cmp	r3, #0
 800f304:	d010      	beq.n	800f328 <Ctrl_Task+0xb20>
 800f306:	4b86      	ldr	r3, [pc, #536]	; (800f520 <Ctrl_Task+0xd18>)
 800f308:	699b      	ldr	r3, [r3, #24]
 800f30a:	4618      	mov	r0, r3
 800f30c:	f7f1 f91c 	bl	8000548 <__aeabi_f2d>
 800f310:	4602      	mov	r2, r0
 800f312:	460b      	mov	r3, r1
 800f314:	e9d7 0158 	ldrd	r0, r1, [r7, #352]	; 0x160
 800f318:	f7f1 fbe0 	bl	8000adc <__aeabi_dcmplt>
 800f31c:	4603      	mov	r3, r0
 800f31e:	2b00      	cmp	r3, #0
 800f320:	d002      	beq.n	800f328 <Ctrl_Task+0xb20>
			groundDetector.isCuchioning = false;
 800f322:	4b7d      	ldr	r3, [pc, #500]	; (800f518 <Ctrl_Task+0xd10>)
 800f324:	2200      	movs	r2, #0
 800f326:	725a      	strb	r2, [r3, #9]
		groundDetector.isTouchingGround = isTouchingGround;
 800f328:	4a7b      	ldr	r2, [pc, #492]	; (800f518 <Ctrl_Task+0xd10>)
 800f32a:	f897 318f 	ldrb.w	r3, [r7, #399]	; 0x18f
 800f32e:	7213      	strb	r3, [r2, #8]

		//计算左右腿角度差PID输出
		// PID_Compute(&legAnglePID, 0, leftLegPos.angle - rightLegPos.angle,0.004,0.01);
        legAnglePID.output = 0;
 800f330:	497c      	ldr	r1, [pc, #496]	; (800f524 <Ctrl_Task+0xd1c>)
 800f332:	f04f 0200 	mov.w	r2, #0
 800f336:	f04f 0300 	mov.w	r3, #0
 800f33a:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

		//计算髋关节扭矩输出，为LQR输出和左右腿角度差PID输出的叠加
//		double leftTp = lqrOutTp * lqrTpRatio - legAnglePID.output * (leftLegPos.length / 0.15f);
//		double rightTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (rightLegPos.length / 0.15f);
		double leftTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (leftLegPos.length / 0.1f);
 800f33e:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800f342:	eeb1 7a67 	vneg.f32	s14, s15
 800f346:	edd7 7a5d 	vldr	s15, [r7, #372]	; 0x174
 800f34a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f34e:	ee17 0a90 	vmov	r0, s15
 800f352:	f7f1 f8f9 	bl	8000548 <__aeabi_f2d>
 800f356:	4682      	mov	sl, r0
 800f358:	468b      	mov	fp, r1
 800f35a:	4b72      	ldr	r3, [pc, #456]	; (800f524 <Ctrl_Task+0xd1c>)
 800f35c:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800f360:	4b71      	ldr	r3, [pc, #452]	; (800f528 <Ctrl_Task+0xd20>)
 800f362:	edd3 7a01 	vldr	s15, [r3, #4]
 800f366:	ed9f 7a71 	vldr	s14, [pc, #452]	; 800f52c <Ctrl_Task+0xd24>
 800f36a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f36e:	ee16 0a90 	vmov	r0, s13
 800f372:	f7f1 f8e9 	bl	8000548 <__aeabi_f2d>
 800f376:	4602      	mov	r2, r0
 800f378:	460b      	mov	r3, r1
 800f37a:	4620      	mov	r0, r4
 800f37c:	4629      	mov	r1, r5
 800f37e:	f7f1 f93b 	bl	80005f8 <__aeabi_dmul>
 800f382:	4602      	mov	r2, r0
 800f384:	460b      	mov	r3, r1
 800f386:	4650      	mov	r0, sl
 800f388:	4659      	mov	r1, fp
 800f38a:	f7f0 ff7f 	bl	800028c <__adddf3>
 800f38e:	4602      	mov	r2, r0
 800f390:	460b      	mov	r3, r1
 800f392:	e9c7 2352 	strd	r2, r3, [r7, #328]	; 0x148
		double rightTp = -lqrOutTp * lqrTpRatio - legAnglePID.output * (rightLegPos.length / 0.1f);
 800f396:	edd7 7a54 	vldr	s15, [r7, #336]	; 0x150
 800f39a:	eeb1 7a67 	vneg.f32	s14, s15
 800f39e:	edd7 7a5d 	vldr	s15, [r7, #372]	; 0x174
 800f3a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f3a6:	ee17 0a90 	vmov	r0, s15
 800f3aa:	f7f1 f8cd 	bl	8000548 <__aeabi_f2d>
 800f3ae:	4682      	mov	sl, r0
 800f3b0:	468b      	mov	fp, r1
 800f3b2:	4b5c      	ldr	r3, [pc, #368]	; (800f524 <Ctrl_Task+0xd1c>)
 800f3b4:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 800f3b8:	4b5d      	ldr	r3, [pc, #372]	; (800f530 <Ctrl_Task+0xd28>)
 800f3ba:	edd3 7a01 	vldr	s15, [r3, #4]
 800f3be:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 800f52c <Ctrl_Task+0xd24>
 800f3c2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f3c6:	ee16 0a90 	vmov	r0, s13
 800f3ca:	f7f1 f8bd 	bl	8000548 <__aeabi_f2d>
 800f3ce:	4602      	mov	r2, r0
 800f3d0:	460b      	mov	r3, r1
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	4629      	mov	r1, r5
 800f3d6:	f7f1 f90f 	bl	80005f8 <__aeabi_dmul>
 800f3da:	4602      	mov	r2, r0
 800f3dc:	460b      	mov	r3, r1
 800f3de:	4650      	mov	r0, sl
 800f3e0:	4659      	mov	r1, fp
 800f3e2:	f7f0 ff51 	bl	8000288 <__aeabi_dsub>
 800f3e6:	4602      	mov	r2, r0
 800f3e8:	460b      	mov	r3, r1
 800f3ea:	e9c7 2350 	strd	r2, r3, [r7, #320]	; 0x140



		//使用VMC计算各关节电机输出扭矩
		double leftJointTorque[2]={0};
 800f3ee:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800f3f2:	2200      	movs	r2, #0
 800f3f4:	601a      	str	r2, [r3, #0]
 800f3f6:	605a      	str	r2, [r3, #4]
 800f3f8:	609a      	str	r2, [r3, #8]
 800f3fa:	60da      	str	r2, [r3, #12]
		leg_conv(leftForce, leftTp, leftJoint[1].angle, leftJoint[0].angle, leftJointTorque);
 800f3fc:	4b4d      	ldr	r3, [pc, #308]	; (800f534 <Ctrl_Task+0xd2c>)
 800f3fe:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800f402:	4b4c      	ldr	r3, [pc, #304]	; (800f534 <Ctrl_Task+0xd2c>)
 800f404:	ed93 6b02 	vldr	d6, [r3, #8]
 800f408:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800f40c:	4618      	mov	r0, r3
 800f40e:	eeb0 3a46 	vmov.f32	s6, s12
 800f412:	eef0 3a66 	vmov.f32	s7, s13
 800f416:	eeb0 2a47 	vmov.f32	s4, s14
 800f41a:	eef0 2a67 	vmov.f32	s5, s15
 800f41e:	ed97 1b52 	vldr	d1, [r7, #328]	; 0x148
 800f422:	ed97 0b66 	vldr	d0, [r7, #408]	; 0x198
 800f426:	f7fa fb53 	bl	8009ad0 <leg_conv>
		double rightJointTorque[2]={0};
 800f42a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800f42e:	2200      	movs	r2, #0
 800f430:	601a      	str	r2, [r3, #0]
 800f432:	605a      	str	r2, [r3, #4]
 800f434:	609a      	str	r2, [r3, #8]
 800f436:	60da      	str	r2, [r3, #12]
		leg_conv(rightForce, rightTp, rightJoint[1].angle, rightJoint[0].angle, rightJointTorque);
 800f438:	4b3f      	ldr	r3, [pc, #252]	; (800f538 <Ctrl_Task+0xd30>)
 800f43a:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 800f43e:	4b3e      	ldr	r3, [pc, #248]	; (800f538 <Ctrl_Task+0xd30>)
 800f440:	ed93 6b02 	vldr	d6, [r3, #8]
 800f444:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 800f448:	4618      	mov	r0, r3
 800f44a:	eeb0 3a46 	vmov.f32	s6, s12
 800f44e:	eef0 3a66 	vmov.f32	s7, s13
 800f452:	eeb0 2a47 	vmov.f32	s4, s14
 800f456:	eef0 2a67 	vmov.f32	s5, s15
 800f45a:	ed97 1b50 	vldr	d1, [r7, #320]	; 0x140
 800f45e:	ed97 0b64 	vldr	d0, [r7, #400]	; 0x190
 800f462:	f7fa fb35 	bl	8009ad0 <leg_conv>

		leftF_check = leftForce;
 800f466:	4935      	ldr	r1, [pc, #212]	; (800f53c <Ctrl_Task+0xd34>)
 800f468:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	; 0x198
 800f46c:	e9c1 2300 	strd	r2, r3, [r1]
		leftTp_check = leftTp;
 800f470:	4933      	ldr	r1, [pc, #204]	; (800f540 <Ctrl_Task+0xd38>)
 800f472:	e9d7 2352 	ldrd	r2, r3, [r7, #328]	; 0x148
 800f476:	e9c1 2300 	strd	r2, r3, [r1]
		rightF_check = rightForce;
 800f47a:	4932      	ldr	r1, [pc, #200]	; (800f544 <Ctrl_Task+0xd3c>)
 800f47c:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	; 0x190
 800f480:	e9c1 2300 	strd	r2, r3, [r1]
		rightTp_check = rightTp;
 800f484:	4930      	ldr	r1, [pc, #192]	; (800f548 <Ctrl_Task+0xd40>)
 800f486:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	; 0x140
 800f48a:	e9c1 2300 	strd	r2, r3, [r1]
		// if (g_remote_cmd.right_switch == 3){
		// 	standupState = StandupState_Standup;
		// }else{
		// 	standupState = StandupState_None;
		// }
		float leftTheta = leftLegPos.angle - imu_heading.pit - M_PI_2;
 800f48e:	4b26      	ldr	r3, [pc, #152]	; (800f528 <Ctrl_Task+0xd20>)
 800f490:	ed93 7a00 	vldr	s14, [r3]
 800f494:	4b2d      	ldr	r3, [pc, #180]	; (800f54c <Ctrl_Task+0xd44>)
 800f496:	edd3 7a00 	vldr	s15, [r3]
 800f49a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f49e:	ee17 0a90 	vmov	r0, s15
 800f4a2:	f7f1 f851 	bl	8000548 <__aeabi_f2d>
 800f4a6:	a318      	add	r3, pc, #96	; (adr r3, 800f508 <Ctrl_Task+0xd00>)
 800f4a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4ac:	f7f0 feec 	bl	8000288 <__aeabi_dsub>
 800f4b0:	4602      	mov	r2, r0
 800f4b2:	460b      	mov	r3, r1
 800f4b4:	4610      	mov	r0, r2
 800f4b6:	4619      	mov	r1, r3
 800f4b8:	f7f1 fb96 	bl	8000be8 <__aeabi_d2f>
 800f4bc:	4603      	mov	r3, r0
 800f4be:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
		float rightTheta = rightLegPos.angle - imu_heading.pit - M_PI_2;
 800f4c2:	4b1b      	ldr	r3, [pc, #108]	; (800f530 <Ctrl_Task+0xd28>)
 800f4c4:	ed93 7a00 	vldr	s14, [r3]
 800f4c8:	4b20      	ldr	r3, [pc, #128]	; (800f54c <Ctrl_Task+0xd44>)
 800f4ca:	edd3 7a00 	vldr	s15, [r3]
 800f4ce:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f4d2:	ee17 0a90 	vmov	r0, s15
 800f4d6:	f7f1 f837 	bl	8000548 <__aeabi_f2d>
 800f4da:	a30b      	add	r3, pc, #44	; (adr r3, 800f508 <Ctrl_Task+0xd00>)
 800f4dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4e0:	f7f0 fed2 	bl	8000288 <__aeabi_dsub>
 800f4e4:	4602      	mov	r2, r0
 800f4e6:	460b      	mov	r3, r1
 800f4e8:	4610      	mov	r0, r2
 800f4ea:	4619      	mov	r1, r3
 800f4ec:	f7f1 fb7c 	bl	8000be8 <__aeabi_d2f>
 800f4f0:	4603      	mov	r3, r0
 800f4f2:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
//		l1 = leftJointTorque[0];
//		l4 = leftJointTorque[1];
//		r1 = rightJointTorque[0];
//		r4 = rightJointTorque[1];

		vTaskDelayUntil(&xLastWakeTime, 4); //4ms控制周期
 800f4f6:	f507 739a 	add.w	r3, r7, #308	; 0x134
 800f4fa:	2104      	movs	r1, #4
 800f4fc:	4618      	mov	r0, r3
 800f4fe:	f00d fafd 	bl	801cafc <vTaskDelayUntil>
	{
 800f502:	f7ff b9e8 	b.w	800e8d6 <Ctrl_Task+0xce>
 800f506:	bf00      	nop
 800f508:	54442d18 	.word	0x54442d18
 800f50c:	3ff921fb 	.word	0x3ff921fb
 800f510:	10624dd3 	.word	0x10624dd3
 800f514:	200039b4 	.word	0x200039b4
 800f518:	20000044 	.word	0x20000044
 800f51c:	20003800 	.word	0x20003800
 800f520:	20000028 	.word	0x20000028
 800f524:	20003818 	.word	0x20003818
 800f528:	200037d8 	.word	0x200037d8
 800f52c:	3dcccccd 	.word	0x3dcccccd
 800f530:	200037ec 	.word	0x200037ec
 800f534:	20003628 	.word	0x20003628
 800f538:	200036b8 	.word	0x200036b8
 800f53c:	20003928 	.word	0x20003928
 800f540:	20003930 	.word	0x20003930
 800f544:	20003938 	.word	0x20003938
 800f548:	20003940 	.word	0x20003940
 800f54c:	2000327c 	.word	0x2000327c

0800f550 <Ctrl_Init>:
	}
}
void Ctrl_Init()
{
 800f550:	b580      	push	{r7, lr}
 800f552:	af00      	add	r7, sp, #0
	//初始化各个PID参数
//	PID_SetErrLpfRatio(&rollPID.inner, 0.1f);
	PID_Init(&legLengthPID, 500, 0.0, 0.0, -300.0, 300.0);
 800f554:	ed9f 4b1a 	vldr	d4, [pc, #104]	; 800f5c0 <Ctrl_Init+0x70>
 800f558:	ed9f 3b1b 	vldr	d3, [pc, #108]	; 800f5c8 <Ctrl_Init+0x78>
 800f55c:	ed9f 2b1c 	vldr	d2, [pc, #112]	; 800f5d0 <Ctrl_Init+0x80>
 800f560:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 800f5d0 <Ctrl_Init+0x80>
 800f564:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 800f5d8 <Ctrl_Init+0x88>
 800f568:	482f      	ldr	r0, [pc, #188]	; (800f628 <Ctrl_Init+0xd8>)
 800f56a:	f7f5 fbd2 	bl	8004d12 <PID_Init>
//	PID_SetErrLpfRatio(&legLengthPID.inner, 0.5f);
	PID_Init(&legAnglePID, 13, 0.0, 0.0, -3.0, 3.0);
 800f56e:	ed9f 4b1c 	vldr	d4, [pc, #112]	; 800f5e0 <Ctrl_Init+0x90>
 800f572:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 800f5e8 <Ctrl_Init+0x98>
 800f576:	ed9f 2b16 	vldr	d2, [pc, #88]	; 800f5d0 <Ctrl_Init+0x80>
 800f57a:	ed9f 1b15 	vldr	d1, [pc, #84]	; 800f5d0 <Ctrl_Init+0x80>
 800f57e:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 800f5f0 <Ctrl_Init+0xa0>
 800f582:	482a      	ldr	r0, [pc, #168]	; (800f62c <Ctrl_Init+0xdc>)
 800f584:	f7f5 fbc5 	bl	8004d12 <PID_Init>
//	PID_SetErrLpfRatio(&legAnglePID.outer, 0.5f);
	PID_Init(&rollPID, 55, 0.0, 0.0, -50.0, 50.0);
 800f588:	ed9f 4b1b 	vldr	d4, [pc, #108]	; 800f5f8 <Ctrl_Init+0xa8>
 800f58c:	ed9f 3b1c 	vldr	d3, [pc, #112]	; 800f600 <Ctrl_Init+0xb0>
 800f590:	ed9f 2b0f 	vldr	d2, [pc, #60]	; 800f5d0 <Ctrl_Init+0x80>
 800f594:	ed9f 1b0e 	vldr	d1, [pc, #56]	; 800f5d0 <Ctrl_Init+0x80>
 800f598:	ed9f 0b1b 	vldr	d0, [pc, #108]	; 800f608 <Ctrl_Init+0xb8>
 800f59c:	4824      	ldr	r0, [pc, #144]	; (800f630 <Ctrl_Init+0xe0>)
 800f59e:	f7f5 fbb8 	bl	8004d12 <PID_Init>
	PID_Init(&yawPID, 0.5f, 0.0, 0.0, -1, 1);
 800f5a2:	ed9f 4b1b 	vldr	d4, [pc, #108]	; 800f610 <Ctrl_Init+0xc0>
 800f5a6:	ed9f 3b1c 	vldr	d3, [pc, #112]	; 800f618 <Ctrl_Init+0xc8>
 800f5aa:	ed9f 2b09 	vldr	d2, [pc, #36]	; 800f5d0 <Ctrl_Init+0x80>
 800f5ae:	ed9f 1b08 	vldr	d1, [pc, #32]	; 800f5d0 <Ctrl_Init+0x80>
 800f5b2:	ed9f 0b1b 	vldr	d0, [pc, #108]	; 800f620 <Ctrl_Init+0xd0>
 800f5b6:	481f      	ldr	r0, [pc, #124]	; (800f634 <Ctrl_Init+0xe4>)
 800f5b8:	f7f5 fbab 	bl	8004d12 <PID_Init>
}
 800f5bc:	bf00      	nop
 800f5be:	bd80      	pop	{r7, pc}
 800f5c0:	00000000 	.word	0x00000000
 800f5c4:	4072c000 	.word	0x4072c000
 800f5c8:	00000000 	.word	0x00000000
 800f5cc:	c072c000 	.word	0xc072c000
	...
 800f5dc:	407f4000 	.word	0x407f4000
 800f5e0:	00000000 	.word	0x00000000
 800f5e4:	40080000 	.word	0x40080000
 800f5e8:	00000000 	.word	0x00000000
 800f5ec:	c0080000 	.word	0xc0080000
 800f5f0:	00000000 	.word	0x00000000
 800f5f4:	402a0000 	.word	0x402a0000
 800f5f8:	00000000 	.word	0x00000000
 800f5fc:	40490000 	.word	0x40490000
 800f600:	00000000 	.word	0x00000000
 800f604:	c0490000 	.word	0xc0490000
 800f608:	00000000 	.word	0x00000000
 800f60c:	404b8000 	.word	0x404b8000
 800f610:	00000000 	.word	0x00000000
 800f614:	3ff00000 	.word	0x3ff00000
 800f618:	00000000 	.word	0x00000000
 800f61c:	bff00000 	.word	0xbff00000
 800f620:	00000000 	.word	0x00000000
 800f624:	3fe00000 	.word	0x3fe00000
 800f628:	20003858 	.word	0x20003858
 800f62c:	20003818 	.word	0x20003818
 800f630:	200038d8 	.word	0x200038d8
 800f634:	20003898 	.word	0x20003898

0800f638 <HAL_Init>:
 800f638:	b580      	push	{r7, lr}
 800f63a:	af00      	add	r7, sp, #0
 800f63c:	4b0e      	ldr	r3, [pc, #56]	; (800f678 <HAL_Init+0x40>)
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	4a0d      	ldr	r2, [pc, #52]	; (800f678 <HAL_Init+0x40>)
 800f642:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800f646:	6013      	str	r3, [r2, #0]
 800f648:	4b0b      	ldr	r3, [pc, #44]	; (800f678 <HAL_Init+0x40>)
 800f64a:	681b      	ldr	r3, [r3, #0]
 800f64c:	4a0a      	ldr	r2, [pc, #40]	; (800f678 <HAL_Init+0x40>)
 800f64e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800f652:	6013      	str	r3, [r2, #0]
 800f654:	4b08      	ldr	r3, [pc, #32]	; (800f678 <HAL_Init+0x40>)
 800f656:	681b      	ldr	r3, [r3, #0]
 800f658:	4a07      	ldr	r2, [pc, #28]	; (800f678 <HAL_Init+0x40>)
 800f65a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f65e:	6013      	str	r3, [r2, #0]
 800f660:	2003      	movs	r0, #3
 800f662:	f001 f9de 	bl	8010a22 <HAL_NVIC_SetPriorityGrouping>
 800f666:	2000      	movs	r0, #0
 800f668:	f7f4 fc14 	bl	8003e94 <HAL_InitTick>
 800f66c:	f7f4 fbe6 	bl	8003e3c <HAL_MspInit>
 800f670:	2300      	movs	r3, #0
 800f672:	4618      	mov	r0, r3
 800f674:	bd80      	pop	{r7, pc}
 800f676:	bf00      	nop
 800f678:	40023c00 	.word	0x40023c00

0800f67c <HAL_IncTick>:
 800f67c:	b480      	push	{r7}
 800f67e:	af00      	add	r7, sp, #0
 800f680:	4b06      	ldr	r3, [pc, #24]	; (800f69c <HAL_IncTick+0x20>)
 800f682:	781b      	ldrb	r3, [r3, #0]
 800f684:	461a      	mov	r2, r3
 800f686:	4b06      	ldr	r3, [pc, #24]	; (800f6a0 <HAL_IncTick+0x24>)
 800f688:	681b      	ldr	r3, [r3, #0]
 800f68a:	4413      	add	r3, r2
 800f68c:	4a04      	ldr	r2, [pc, #16]	; (800f6a0 <HAL_IncTick+0x24>)
 800f68e:	6013      	str	r3, [r2, #0]
 800f690:	bf00      	nop
 800f692:	46bd      	mov	sp, r7
 800f694:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f698:	4770      	bx	lr
 800f69a:	bf00      	nop
 800f69c:	20000058 	.word	0x20000058
 800f6a0:	200039b8 	.word	0x200039b8

0800f6a4 <HAL_GetTick>:
 800f6a4:	b480      	push	{r7}
 800f6a6:	af00      	add	r7, sp, #0
 800f6a8:	4b03      	ldr	r3, [pc, #12]	; (800f6b8 <HAL_GetTick+0x14>)
 800f6aa:	681b      	ldr	r3, [r3, #0]
 800f6ac:	4618      	mov	r0, r3
 800f6ae:	46bd      	mov	sp, r7
 800f6b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6b4:	4770      	bx	lr
 800f6b6:	bf00      	nop
 800f6b8:	200039b8 	.word	0x200039b8

0800f6bc <HAL_Delay>:
 800f6bc:	b580      	push	{r7, lr}
 800f6be:	b084      	sub	sp, #16
 800f6c0:	af00      	add	r7, sp, #0
 800f6c2:	6078      	str	r0, [r7, #4]
 800f6c4:	f7ff ffee 	bl	800f6a4 <HAL_GetTick>
 800f6c8:	60b8      	str	r0, [r7, #8]
 800f6ca:	687b      	ldr	r3, [r7, #4]
 800f6cc:	60fb      	str	r3, [r7, #12]
 800f6ce:	68fb      	ldr	r3, [r7, #12]
 800f6d0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800f6d4:	d005      	beq.n	800f6e2 <HAL_Delay+0x26>
 800f6d6:	4b0a      	ldr	r3, [pc, #40]	; (800f700 <HAL_Delay+0x44>)
 800f6d8:	781b      	ldrb	r3, [r3, #0]
 800f6da:	461a      	mov	r2, r3
 800f6dc:	68fb      	ldr	r3, [r7, #12]
 800f6de:	4413      	add	r3, r2
 800f6e0:	60fb      	str	r3, [r7, #12]
 800f6e2:	bf00      	nop
 800f6e4:	f7ff ffde 	bl	800f6a4 <HAL_GetTick>
 800f6e8:	4602      	mov	r2, r0
 800f6ea:	68bb      	ldr	r3, [r7, #8]
 800f6ec:	1ad3      	subs	r3, r2, r3
 800f6ee:	68fa      	ldr	r2, [r7, #12]
 800f6f0:	429a      	cmp	r2, r3
 800f6f2:	d8f7      	bhi.n	800f6e4 <HAL_Delay+0x28>
 800f6f4:	bf00      	nop
 800f6f6:	bf00      	nop
 800f6f8:	3710      	adds	r7, #16
 800f6fa:	46bd      	mov	sp, r7
 800f6fc:	bd80      	pop	{r7, pc}
 800f6fe:	bf00      	nop
 800f700:	20000058 	.word	0x20000058

0800f704 <HAL_ADC_Init>:
 800f704:	b580      	push	{r7, lr}
 800f706:	b084      	sub	sp, #16
 800f708:	af00      	add	r7, sp, #0
 800f70a:	6078      	str	r0, [r7, #4]
 800f70c:	2300      	movs	r3, #0
 800f70e:	73fb      	strb	r3, [r7, #15]
 800f710:	687b      	ldr	r3, [r7, #4]
 800f712:	2b00      	cmp	r3, #0
 800f714:	d101      	bne.n	800f71a <HAL_ADC_Init+0x16>
 800f716:	2301      	movs	r3, #1
 800f718:	e033      	b.n	800f782 <HAL_ADC_Init+0x7e>
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f71e:	2b00      	cmp	r3, #0
 800f720:	d109      	bne.n	800f736 <HAL_ADC_Init+0x32>
 800f722:	6878      	ldr	r0, [r7, #4]
 800f724:	f7f3 fbe0 	bl	8002ee8 <HAL_ADC_MspInit>
 800f728:	687b      	ldr	r3, [r7, #4]
 800f72a:	2200      	movs	r2, #0
 800f72c:	645a      	str	r2, [r3, #68]	; 0x44
 800f72e:	687b      	ldr	r3, [r7, #4]
 800f730:	2200      	movs	r2, #0
 800f732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f736:	687b      	ldr	r3, [r7, #4]
 800f738:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f73a:	f003 0310 	and.w	r3, r3, #16
 800f73e:	2b00      	cmp	r3, #0
 800f740:	d118      	bne.n	800f774 <HAL_ADC_Init+0x70>
 800f742:	687b      	ldr	r3, [r7, #4]
 800f744:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f746:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800f74a:	f023 0302 	bic.w	r3, r3, #2
 800f74e:	f043 0202 	orr.w	r2, r3, #2
 800f752:	687b      	ldr	r3, [r7, #4]
 800f754:	641a      	str	r2, [r3, #64]	; 0x40
 800f756:	6878      	ldr	r0, [r7, #4]
 800f758:	f000 f93a 	bl	800f9d0 <ADC_Init>
 800f75c:	687b      	ldr	r3, [r7, #4]
 800f75e:	2200      	movs	r2, #0
 800f760:	645a      	str	r2, [r3, #68]	; 0x44
 800f762:	687b      	ldr	r3, [r7, #4]
 800f764:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f766:	f023 0303 	bic.w	r3, r3, #3
 800f76a:	f043 0201 	orr.w	r2, r3, #1
 800f76e:	687b      	ldr	r3, [r7, #4]
 800f770:	641a      	str	r2, [r3, #64]	; 0x40
 800f772:	e001      	b.n	800f778 <HAL_ADC_Init+0x74>
 800f774:	2301      	movs	r3, #1
 800f776:	73fb      	strb	r3, [r7, #15]
 800f778:	687b      	ldr	r3, [r7, #4]
 800f77a:	2200      	movs	r2, #0
 800f77c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f780:	7bfb      	ldrb	r3, [r7, #15]
 800f782:	4618      	mov	r0, r3
 800f784:	3710      	adds	r7, #16
 800f786:	46bd      	mov	sp, r7
 800f788:	bd80      	pop	{r7, pc}
	...

0800f78c <HAL_ADC_ConfigChannel>:
 800f78c:	b480      	push	{r7}
 800f78e:	b085      	sub	sp, #20
 800f790:	af00      	add	r7, sp, #0
 800f792:	6078      	str	r0, [r7, #4]
 800f794:	6039      	str	r1, [r7, #0]
 800f796:	2300      	movs	r3, #0
 800f798:	60bb      	str	r3, [r7, #8]
 800f79a:	687b      	ldr	r3, [r7, #4]
 800f79c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800f7a0:	2b01      	cmp	r3, #1
 800f7a2:	d101      	bne.n	800f7a8 <HAL_ADC_ConfigChannel+0x1c>
 800f7a4:	2302      	movs	r3, #2
 800f7a6:	e105      	b.n	800f9b4 <HAL_ADC_ConfigChannel+0x228>
 800f7a8:	687b      	ldr	r3, [r7, #4]
 800f7aa:	2201      	movs	r2, #1
 800f7ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f7b0:	683b      	ldr	r3, [r7, #0]
 800f7b2:	681b      	ldr	r3, [r3, #0]
 800f7b4:	2b09      	cmp	r3, #9
 800f7b6:	d925      	bls.n	800f804 <HAL_ADC_ConfigChannel+0x78>
 800f7b8:	687b      	ldr	r3, [r7, #4]
 800f7ba:	681b      	ldr	r3, [r3, #0]
 800f7bc:	68d9      	ldr	r1, [r3, #12]
 800f7be:	683b      	ldr	r3, [r7, #0]
 800f7c0:	681b      	ldr	r3, [r3, #0]
 800f7c2:	b29b      	uxth	r3, r3
 800f7c4:	461a      	mov	r2, r3
 800f7c6:	4613      	mov	r3, r2
 800f7c8:	005b      	lsls	r3, r3, #1
 800f7ca:	4413      	add	r3, r2
 800f7cc:	3b1e      	subs	r3, #30
 800f7ce:	2207      	movs	r2, #7
 800f7d0:	fa02 f303 	lsl.w	r3, r2, r3
 800f7d4:	43da      	mvns	r2, r3
 800f7d6:	687b      	ldr	r3, [r7, #4]
 800f7d8:	681b      	ldr	r3, [r3, #0]
 800f7da:	400a      	ands	r2, r1
 800f7dc:	60da      	str	r2, [r3, #12]
 800f7de:	687b      	ldr	r3, [r7, #4]
 800f7e0:	681b      	ldr	r3, [r3, #0]
 800f7e2:	68d9      	ldr	r1, [r3, #12]
 800f7e4:	683b      	ldr	r3, [r7, #0]
 800f7e6:	689a      	ldr	r2, [r3, #8]
 800f7e8:	683b      	ldr	r3, [r7, #0]
 800f7ea:	681b      	ldr	r3, [r3, #0]
 800f7ec:	b29b      	uxth	r3, r3
 800f7ee:	4618      	mov	r0, r3
 800f7f0:	4603      	mov	r3, r0
 800f7f2:	005b      	lsls	r3, r3, #1
 800f7f4:	4403      	add	r3, r0
 800f7f6:	3b1e      	subs	r3, #30
 800f7f8:	409a      	lsls	r2, r3
 800f7fa:	687b      	ldr	r3, [r7, #4]
 800f7fc:	681b      	ldr	r3, [r3, #0]
 800f7fe:	430a      	orrs	r2, r1
 800f800:	60da      	str	r2, [r3, #12]
 800f802:	e022      	b.n	800f84a <HAL_ADC_ConfigChannel+0xbe>
 800f804:	687b      	ldr	r3, [r7, #4]
 800f806:	681b      	ldr	r3, [r3, #0]
 800f808:	6919      	ldr	r1, [r3, #16]
 800f80a:	683b      	ldr	r3, [r7, #0]
 800f80c:	681b      	ldr	r3, [r3, #0]
 800f80e:	b29b      	uxth	r3, r3
 800f810:	461a      	mov	r2, r3
 800f812:	4613      	mov	r3, r2
 800f814:	005b      	lsls	r3, r3, #1
 800f816:	4413      	add	r3, r2
 800f818:	2207      	movs	r2, #7
 800f81a:	fa02 f303 	lsl.w	r3, r2, r3
 800f81e:	43da      	mvns	r2, r3
 800f820:	687b      	ldr	r3, [r7, #4]
 800f822:	681b      	ldr	r3, [r3, #0]
 800f824:	400a      	ands	r2, r1
 800f826:	611a      	str	r2, [r3, #16]
 800f828:	687b      	ldr	r3, [r7, #4]
 800f82a:	681b      	ldr	r3, [r3, #0]
 800f82c:	6919      	ldr	r1, [r3, #16]
 800f82e:	683b      	ldr	r3, [r7, #0]
 800f830:	689a      	ldr	r2, [r3, #8]
 800f832:	683b      	ldr	r3, [r7, #0]
 800f834:	681b      	ldr	r3, [r3, #0]
 800f836:	b29b      	uxth	r3, r3
 800f838:	4618      	mov	r0, r3
 800f83a:	4603      	mov	r3, r0
 800f83c:	005b      	lsls	r3, r3, #1
 800f83e:	4403      	add	r3, r0
 800f840:	409a      	lsls	r2, r3
 800f842:	687b      	ldr	r3, [r7, #4]
 800f844:	681b      	ldr	r3, [r3, #0]
 800f846:	430a      	orrs	r2, r1
 800f848:	611a      	str	r2, [r3, #16]
 800f84a:	683b      	ldr	r3, [r7, #0]
 800f84c:	685b      	ldr	r3, [r3, #4]
 800f84e:	2b06      	cmp	r3, #6
 800f850:	d824      	bhi.n	800f89c <HAL_ADC_ConfigChannel+0x110>
 800f852:	687b      	ldr	r3, [r7, #4]
 800f854:	681b      	ldr	r3, [r3, #0]
 800f856:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800f858:	683b      	ldr	r3, [r7, #0]
 800f85a:	685a      	ldr	r2, [r3, #4]
 800f85c:	4613      	mov	r3, r2
 800f85e:	009b      	lsls	r3, r3, #2
 800f860:	4413      	add	r3, r2
 800f862:	3b05      	subs	r3, #5
 800f864:	221f      	movs	r2, #31
 800f866:	fa02 f303 	lsl.w	r3, r2, r3
 800f86a:	43da      	mvns	r2, r3
 800f86c:	687b      	ldr	r3, [r7, #4]
 800f86e:	681b      	ldr	r3, [r3, #0]
 800f870:	400a      	ands	r2, r1
 800f872:	635a      	str	r2, [r3, #52]	; 0x34
 800f874:	687b      	ldr	r3, [r7, #4]
 800f876:	681b      	ldr	r3, [r3, #0]
 800f878:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800f87a:	683b      	ldr	r3, [r7, #0]
 800f87c:	681b      	ldr	r3, [r3, #0]
 800f87e:	b29b      	uxth	r3, r3
 800f880:	4618      	mov	r0, r3
 800f882:	683b      	ldr	r3, [r7, #0]
 800f884:	685a      	ldr	r2, [r3, #4]
 800f886:	4613      	mov	r3, r2
 800f888:	009b      	lsls	r3, r3, #2
 800f88a:	4413      	add	r3, r2
 800f88c:	3b05      	subs	r3, #5
 800f88e:	fa00 f203 	lsl.w	r2, r0, r3
 800f892:	687b      	ldr	r3, [r7, #4]
 800f894:	681b      	ldr	r3, [r3, #0]
 800f896:	430a      	orrs	r2, r1
 800f898:	635a      	str	r2, [r3, #52]	; 0x34
 800f89a:	e04c      	b.n	800f936 <HAL_ADC_ConfigChannel+0x1aa>
 800f89c:	683b      	ldr	r3, [r7, #0]
 800f89e:	685b      	ldr	r3, [r3, #4]
 800f8a0:	2b0c      	cmp	r3, #12
 800f8a2:	d824      	bhi.n	800f8ee <HAL_ADC_ConfigChannel+0x162>
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	681b      	ldr	r3, [r3, #0]
 800f8a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800f8aa:	683b      	ldr	r3, [r7, #0]
 800f8ac:	685a      	ldr	r2, [r3, #4]
 800f8ae:	4613      	mov	r3, r2
 800f8b0:	009b      	lsls	r3, r3, #2
 800f8b2:	4413      	add	r3, r2
 800f8b4:	3b23      	subs	r3, #35	; 0x23
 800f8b6:	221f      	movs	r2, #31
 800f8b8:	fa02 f303 	lsl.w	r3, r2, r3
 800f8bc:	43da      	mvns	r2, r3
 800f8be:	687b      	ldr	r3, [r7, #4]
 800f8c0:	681b      	ldr	r3, [r3, #0]
 800f8c2:	400a      	ands	r2, r1
 800f8c4:	631a      	str	r2, [r3, #48]	; 0x30
 800f8c6:	687b      	ldr	r3, [r7, #4]
 800f8c8:	681b      	ldr	r3, [r3, #0]
 800f8ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800f8cc:	683b      	ldr	r3, [r7, #0]
 800f8ce:	681b      	ldr	r3, [r3, #0]
 800f8d0:	b29b      	uxth	r3, r3
 800f8d2:	4618      	mov	r0, r3
 800f8d4:	683b      	ldr	r3, [r7, #0]
 800f8d6:	685a      	ldr	r2, [r3, #4]
 800f8d8:	4613      	mov	r3, r2
 800f8da:	009b      	lsls	r3, r3, #2
 800f8dc:	4413      	add	r3, r2
 800f8de:	3b23      	subs	r3, #35	; 0x23
 800f8e0:	fa00 f203 	lsl.w	r2, r0, r3
 800f8e4:	687b      	ldr	r3, [r7, #4]
 800f8e6:	681b      	ldr	r3, [r3, #0]
 800f8e8:	430a      	orrs	r2, r1
 800f8ea:	631a      	str	r2, [r3, #48]	; 0x30
 800f8ec:	e023      	b.n	800f936 <HAL_ADC_ConfigChannel+0x1aa>
 800f8ee:	687b      	ldr	r3, [r7, #4]
 800f8f0:	681b      	ldr	r3, [r3, #0]
 800f8f2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f8f4:	683b      	ldr	r3, [r7, #0]
 800f8f6:	685a      	ldr	r2, [r3, #4]
 800f8f8:	4613      	mov	r3, r2
 800f8fa:	009b      	lsls	r3, r3, #2
 800f8fc:	4413      	add	r3, r2
 800f8fe:	3b41      	subs	r3, #65	; 0x41
 800f900:	221f      	movs	r2, #31
 800f902:	fa02 f303 	lsl.w	r3, r2, r3
 800f906:	43da      	mvns	r2, r3
 800f908:	687b      	ldr	r3, [r7, #4]
 800f90a:	681b      	ldr	r3, [r3, #0]
 800f90c:	400a      	ands	r2, r1
 800f90e:	62da      	str	r2, [r3, #44]	; 0x2c
 800f910:	687b      	ldr	r3, [r7, #4]
 800f912:	681b      	ldr	r3, [r3, #0]
 800f914:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f916:	683b      	ldr	r3, [r7, #0]
 800f918:	681b      	ldr	r3, [r3, #0]
 800f91a:	b29b      	uxth	r3, r3
 800f91c:	4618      	mov	r0, r3
 800f91e:	683b      	ldr	r3, [r7, #0]
 800f920:	685a      	ldr	r2, [r3, #4]
 800f922:	4613      	mov	r3, r2
 800f924:	009b      	lsls	r3, r3, #2
 800f926:	4413      	add	r3, r2
 800f928:	3b41      	subs	r3, #65	; 0x41
 800f92a:	fa00 f203 	lsl.w	r2, r0, r3
 800f92e:	687b      	ldr	r3, [r7, #4]
 800f930:	681b      	ldr	r3, [r3, #0]
 800f932:	430a      	orrs	r2, r1
 800f934:	62da      	str	r2, [r3, #44]	; 0x2c
 800f936:	4b22      	ldr	r3, [pc, #136]	; (800f9c0 <HAL_ADC_ConfigChannel+0x234>)
 800f938:	60fb      	str	r3, [r7, #12]
 800f93a:	687b      	ldr	r3, [r7, #4]
 800f93c:	681b      	ldr	r3, [r3, #0]
 800f93e:	4a21      	ldr	r2, [pc, #132]	; (800f9c4 <HAL_ADC_ConfigChannel+0x238>)
 800f940:	4293      	cmp	r3, r2
 800f942:	d109      	bne.n	800f958 <HAL_ADC_ConfigChannel+0x1cc>
 800f944:	683b      	ldr	r3, [r7, #0]
 800f946:	681b      	ldr	r3, [r3, #0]
 800f948:	2b12      	cmp	r3, #18
 800f94a:	d105      	bne.n	800f958 <HAL_ADC_ConfigChannel+0x1cc>
 800f94c:	68fb      	ldr	r3, [r7, #12]
 800f94e:	685b      	ldr	r3, [r3, #4]
 800f950:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800f954:	68fb      	ldr	r3, [r7, #12]
 800f956:	605a      	str	r2, [r3, #4]
 800f958:	687b      	ldr	r3, [r7, #4]
 800f95a:	681b      	ldr	r3, [r3, #0]
 800f95c:	4a19      	ldr	r2, [pc, #100]	; (800f9c4 <HAL_ADC_ConfigChannel+0x238>)
 800f95e:	4293      	cmp	r3, r2
 800f960:	d123      	bne.n	800f9aa <HAL_ADC_ConfigChannel+0x21e>
 800f962:	683b      	ldr	r3, [r7, #0]
 800f964:	681b      	ldr	r3, [r3, #0]
 800f966:	2b10      	cmp	r3, #16
 800f968:	d003      	beq.n	800f972 <HAL_ADC_ConfigChannel+0x1e6>
 800f96a:	683b      	ldr	r3, [r7, #0]
 800f96c:	681b      	ldr	r3, [r3, #0]
 800f96e:	2b11      	cmp	r3, #17
 800f970:	d11b      	bne.n	800f9aa <HAL_ADC_ConfigChannel+0x21e>
 800f972:	68fb      	ldr	r3, [r7, #12]
 800f974:	685b      	ldr	r3, [r3, #4]
 800f976:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800f97a:	68fb      	ldr	r3, [r7, #12]
 800f97c:	605a      	str	r2, [r3, #4]
 800f97e:	683b      	ldr	r3, [r7, #0]
 800f980:	681b      	ldr	r3, [r3, #0]
 800f982:	2b10      	cmp	r3, #16
 800f984:	d111      	bne.n	800f9aa <HAL_ADC_ConfigChannel+0x21e>
 800f986:	4b10      	ldr	r3, [pc, #64]	; (800f9c8 <HAL_ADC_ConfigChannel+0x23c>)
 800f988:	681b      	ldr	r3, [r3, #0]
 800f98a:	4a10      	ldr	r2, [pc, #64]	; (800f9cc <HAL_ADC_ConfigChannel+0x240>)
 800f98c:	fba2 2303 	umull	r2, r3, r2, r3
 800f990:	0c9a      	lsrs	r2, r3, #18
 800f992:	4613      	mov	r3, r2
 800f994:	009b      	lsls	r3, r3, #2
 800f996:	4413      	add	r3, r2
 800f998:	005b      	lsls	r3, r3, #1
 800f99a:	60bb      	str	r3, [r7, #8]
 800f99c:	e002      	b.n	800f9a4 <HAL_ADC_ConfigChannel+0x218>
 800f99e:	68bb      	ldr	r3, [r7, #8]
 800f9a0:	3b01      	subs	r3, #1
 800f9a2:	60bb      	str	r3, [r7, #8]
 800f9a4:	68bb      	ldr	r3, [r7, #8]
 800f9a6:	2b00      	cmp	r3, #0
 800f9a8:	d1f9      	bne.n	800f99e <HAL_ADC_ConfigChannel+0x212>
 800f9aa:	687b      	ldr	r3, [r7, #4]
 800f9ac:	2200      	movs	r2, #0
 800f9ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800f9b2:	2300      	movs	r3, #0
 800f9b4:	4618      	mov	r0, r3
 800f9b6:	3714      	adds	r7, #20
 800f9b8:	46bd      	mov	sp, r7
 800f9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9be:	4770      	bx	lr
 800f9c0:	40012300 	.word	0x40012300
 800f9c4:	40012000 	.word	0x40012000
 800f9c8:	20000004 	.word	0x20000004
 800f9cc:	431bde83 	.word	0x431bde83

0800f9d0 <ADC_Init>:
 800f9d0:	b480      	push	{r7}
 800f9d2:	b085      	sub	sp, #20
 800f9d4:	af00      	add	r7, sp, #0
 800f9d6:	6078      	str	r0, [r7, #4]
 800f9d8:	4b79      	ldr	r3, [pc, #484]	; (800fbc0 <ADC_Init+0x1f0>)
 800f9da:	60fb      	str	r3, [r7, #12]
 800f9dc:	68fb      	ldr	r3, [r7, #12]
 800f9de:	685b      	ldr	r3, [r3, #4]
 800f9e0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800f9e4:	68fb      	ldr	r3, [r7, #12]
 800f9e6:	605a      	str	r2, [r3, #4]
 800f9e8:	68fb      	ldr	r3, [r7, #12]
 800f9ea:	685a      	ldr	r2, [r3, #4]
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	685b      	ldr	r3, [r3, #4]
 800f9f0:	431a      	orrs	r2, r3
 800f9f2:	68fb      	ldr	r3, [r7, #12]
 800f9f4:	605a      	str	r2, [r3, #4]
 800f9f6:	687b      	ldr	r3, [r7, #4]
 800f9f8:	681b      	ldr	r3, [r3, #0]
 800f9fa:	685a      	ldr	r2, [r3, #4]
 800f9fc:	687b      	ldr	r3, [r7, #4]
 800f9fe:	681b      	ldr	r3, [r3, #0]
 800fa00:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800fa04:	605a      	str	r2, [r3, #4]
 800fa06:	687b      	ldr	r3, [r7, #4]
 800fa08:	681b      	ldr	r3, [r3, #0]
 800fa0a:	6859      	ldr	r1, [r3, #4]
 800fa0c:	687b      	ldr	r3, [r7, #4]
 800fa0e:	691b      	ldr	r3, [r3, #16]
 800fa10:	021a      	lsls	r2, r3, #8
 800fa12:	687b      	ldr	r3, [r7, #4]
 800fa14:	681b      	ldr	r3, [r3, #0]
 800fa16:	430a      	orrs	r2, r1
 800fa18:	605a      	str	r2, [r3, #4]
 800fa1a:	687b      	ldr	r3, [r7, #4]
 800fa1c:	681b      	ldr	r3, [r3, #0]
 800fa1e:	685a      	ldr	r2, [r3, #4]
 800fa20:	687b      	ldr	r3, [r7, #4]
 800fa22:	681b      	ldr	r3, [r3, #0]
 800fa24:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800fa28:	605a      	str	r2, [r3, #4]
 800fa2a:	687b      	ldr	r3, [r7, #4]
 800fa2c:	681b      	ldr	r3, [r3, #0]
 800fa2e:	6859      	ldr	r1, [r3, #4]
 800fa30:	687b      	ldr	r3, [r7, #4]
 800fa32:	689a      	ldr	r2, [r3, #8]
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	681b      	ldr	r3, [r3, #0]
 800fa38:	430a      	orrs	r2, r1
 800fa3a:	605a      	str	r2, [r3, #4]
 800fa3c:	687b      	ldr	r3, [r7, #4]
 800fa3e:	681b      	ldr	r3, [r3, #0]
 800fa40:	689a      	ldr	r2, [r3, #8]
 800fa42:	687b      	ldr	r3, [r7, #4]
 800fa44:	681b      	ldr	r3, [r3, #0]
 800fa46:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800fa4a:	609a      	str	r2, [r3, #8]
 800fa4c:	687b      	ldr	r3, [r7, #4]
 800fa4e:	681b      	ldr	r3, [r3, #0]
 800fa50:	6899      	ldr	r1, [r3, #8]
 800fa52:	687b      	ldr	r3, [r7, #4]
 800fa54:	68da      	ldr	r2, [r3, #12]
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	681b      	ldr	r3, [r3, #0]
 800fa5a:	430a      	orrs	r2, r1
 800fa5c:	609a      	str	r2, [r3, #8]
 800fa5e:	687b      	ldr	r3, [r7, #4]
 800fa60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fa62:	4a58      	ldr	r2, [pc, #352]	; (800fbc4 <ADC_Init+0x1f4>)
 800fa64:	4293      	cmp	r3, r2
 800fa66:	d022      	beq.n	800faae <ADC_Init+0xde>
 800fa68:	687b      	ldr	r3, [r7, #4]
 800fa6a:	681b      	ldr	r3, [r3, #0]
 800fa6c:	689a      	ldr	r2, [r3, #8]
 800fa6e:	687b      	ldr	r3, [r7, #4]
 800fa70:	681b      	ldr	r3, [r3, #0]
 800fa72:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800fa76:	609a      	str	r2, [r3, #8]
 800fa78:	687b      	ldr	r3, [r7, #4]
 800fa7a:	681b      	ldr	r3, [r3, #0]
 800fa7c:	6899      	ldr	r1, [r3, #8]
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800fa82:	687b      	ldr	r3, [r7, #4]
 800fa84:	681b      	ldr	r3, [r3, #0]
 800fa86:	430a      	orrs	r2, r1
 800fa88:	609a      	str	r2, [r3, #8]
 800fa8a:	687b      	ldr	r3, [r7, #4]
 800fa8c:	681b      	ldr	r3, [r3, #0]
 800fa8e:	689a      	ldr	r2, [r3, #8]
 800fa90:	687b      	ldr	r3, [r7, #4]
 800fa92:	681b      	ldr	r3, [r3, #0]
 800fa94:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800fa98:	609a      	str	r2, [r3, #8]
 800fa9a:	687b      	ldr	r3, [r7, #4]
 800fa9c:	681b      	ldr	r3, [r3, #0]
 800fa9e:	6899      	ldr	r1, [r3, #8]
 800faa0:	687b      	ldr	r3, [r7, #4]
 800faa2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800faa4:	687b      	ldr	r3, [r7, #4]
 800faa6:	681b      	ldr	r3, [r3, #0]
 800faa8:	430a      	orrs	r2, r1
 800faaa:	609a      	str	r2, [r3, #8]
 800faac:	e00f      	b.n	800face <ADC_Init+0xfe>
 800faae:	687b      	ldr	r3, [r7, #4]
 800fab0:	681b      	ldr	r3, [r3, #0]
 800fab2:	689a      	ldr	r2, [r3, #8]
 800fab4:	687b      	ldr	r3, [r7, #4]
 800fab6:	681b      	ldr	r3, [r3, #0]
 800fab8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800fabc:	609a      	str	r2, [r3, #8]
 800fabe:	687b      	ldr	r3, [r7, #4]
 800fac0:	681b      	ldr	r3, [r3, #0]
 800fac2:	689a      	ldr	r2, [r3, #8]
 800fac4:	687b      	ldr	r3, [r7, #4]
 800fac6:	681b      	ldr	r3, [r3, #0]
 800fac8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800facc:	609a      	str	r2, [r3, #8]
 800face:	687b      	ldr	r3, [r7, #4]
 800fad0:	681b      	ldr	r3, [r3, #0]
 800fad2:	689a      	ldr	r2, [r3, #8]
 800fad4:	687b      	ldr	r3, [r7, #4]
 800fad6:	681b      	ldr	r3, [r3, #0]
 800fad8:	f022 0202 	bic.w	r2, r2, #2
 800fadc:	609a      	str	r2, [r3, #8]
 800fade:	687b      	ldr	r3, [r7, #4]
 800fae0:	681b      	ldr	r3, [r3, #0]
 800fae2:	6899      	ldr	r1, [r3, #8]
 800fae4:	687b      	ldr	r3, [r7, #4]
 800fae6:	7e1b      	ldrb	r3, [r3, #24]
 800fae8:	005a      	lsls	r2, r3, #1
 800faea:	687b      	ldr	r3, [r7, #4]
 800faec:	681b      	ldr	r3, [r3, #0]
 800faee:	430a      	orrs	r2, r1
 800faf0:	609a      	str	r2, [r3, #8]
 800faf2:	687b      	ldr	r3, [r7, #4]
 800faf4:	f893 3020 	ldrb.w	r3, [r3, #32]
 800faf8:	2b00      	cmp	r3, #0
 800fafa:	d01b      	beq.n	800fb34 <ADC_Init+0x164>
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	681b      	ldr	r3, [r3, #0]
 800fb00:	685a      	ldr	r2, [r3, #4]
 800fb02:	687b      	ldr	r3, [r7, #4]
 800fb04:	681b      	ldr	r3, [r3, #0]
 800fb06:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800fb0a:	605a      	str	r2, [r3, #4]
 800fb0c:	687b      	ldr	r3, [r7, #4]
 800fb0e:	681b      	ldr	r3, [r3, #0]
 800fb10:	685a      	ldr	r2, [r3, #4]
 800fb12:	687b      	ldr	r3, [r7, #4]
 800fb14:	681b      	ldr	r3, [r3, #0]
 800fb16:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800fb1a:	605a      	str	r2, [r3, #4]
 800fb1c:	687b      	ldr	r3, [r7, #4]
 800fb1e:	681b      	ldr	r3, [r3, #0]
 800fb20:	6859      	ldr	r1, [r3, #4]
 800fb22:	687b      	ldr	r3, [r7, #4]
 800fb24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb26:	3b01      	subs	r3, #1
 800fb28:	035a      	lsls	r2, r3, #13
 800fb2a:	687b      	ldr	r3, [r7, #4]
 800fb2c:	681b      	ldr	r3, [r3, #0]
 800fb2e:	430a      	orrs	r2, r1
 800fb30:	605a      	str	r2, [r3, #4]
 800fb32:	e007      	b.n	800fb44 <ADC_Init+0x174>
 800fb34:	687b      	ldr	r3, [r7, #4]
 800fb36:	681b      	ldr	r3, [r3, #0]
 800fb38:	685a      	ldr	r2, [r3, #4]
 800fb3a:	687b      	ldr	r3, [r7, #4]
 800fb3c:	681b      	ldr	r3, [r3, #0]
 800fb3e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800fb42:	605a      	str	r2, [r3, #4]
 800fb44:	687b      	ldr	r3, [r7, #4]
 800fb46:	681b      	ldr	r3, [r3, #0]
 800fb48:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fb4a:	687b      	ldr	r3, [r7, #4]
 800fb4c:	681b      	ldr	r3, [r3, #0]
 800fb4e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800fb52:	62da      	str	r2, [r3, #44]	; 0x2c
 800fb54:	687b      	ldr	r3, [r7, #4]
 800fb56:	681b      	ldr	r3, [r3, #0]
 800fb58:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800fb5a:	687b      	ldr	r3, [r7, #4]
 800fb5c:	69db      	ldr	r3, [r3, #28]
 800fb5e:	3b01      	subs	r3, #1
 800fb60:	051a      	lsls	r2, r3, #20
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	681b      	ldr	r3, [r3, #0]
 800fb66:	430a      	orrs	r2, r1
 800fb68:	62da      	str	r2, [r3, #44]	; 0x2c
 800fb6a:	687b      	ldr	r3, [r7, #4]
 800fb6c:	681b      	ldr	r3, [r3, #0]
 800fb6e:	689a      	ldr	r2, [r3, #8]
 800fb70:	687b      	ldr	r3, [r7, #4]
 800fb72:	681b      	ldr	r3, [r3, #0]
 800fb74:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800fb78:	609a      	str	r2, [r3, #8]
 800fb7a:	687b      	ldr	r3, [r7, #4]
 800fb7c:	681b      	ldr	r3, [r3, #0]
 800fb7e:	6899      	ldr	r1, [r3, #8]
 800fb80:	687b      	ldr	r3, [r7, #4]
 800fb82:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800fb86:	025a      	lsls	r2, r3, #9
 800fb88:	687b      	ldr	r3, [r7, #4]
 800fb8a:	681b      	ldr	r3, [r3, #0]
 800fb8c:	430a      	orrs	r2, r1
 800fb8e:	609a      	str	r2, [r3, #8]
 800fb90:	687b      	ldr	r3, [r7, #4]
 800fb92:	681b      	ldr	r3, [r3, #0]
 800fb94:	689a      	ldr	r2, [r3, #8]
 800fb96:	687b      	ldr	r3, [r7, #4]
 800fb98:	681b      	ldr	r3, [r3, #0]
 800fb9a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800fb9e:	609a      	str	r2, [r3, #8]
 800fba0:	687b      	ldr	r3, [r7, #4]
 800fba2:	681b      	ldr	r3, [r3, #0]
 800fba4:	6899      	ldr	r1, [r3, #8]
 800fba6:	687b      	ldr	r3, [r7, #4]
 800fba8:	695b      	ldr	r3, [r3, #20]
 800fbaa:	029a      	lsls	r2, r3, #10
 800fbac:	687b      	ldr	r3, [r7, #4]
 800fbae:	681b      	ldr	r3, [r3, #0]
 800fbb0:	430a      	orrs	r2, r1
 800fbb2:	609a      	str	r2, [r3, #8]
 800fbb4:	bf00      	nop
 800fbb6:	3714      	adds	r7, #20
 800fbb8:	46bd      	mov	sp, r7
 800fbba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbbe:	4770      	bx	lr
 800fbc0:	40012300 	.word	0x40012300
 800fbc4:	0f000001 	.word	0x0f000001

0800fbc8 <HAL_CAN_Init>:
 800fbc8:	b580      	push	{r7, lr}
 800fbca:	b084      	sub	sp, #16
 800fbcc:	af00      	add	r7, sp, #0
 800fbce:	6078      	str	r0, [r7, #4]
 800fbd0:	687b      	ldr	r3, [r7, #4]
 800fbd2:	2b00      	cmp	r3, #0
 800fbd4:	d101      	bne.n	800fbda <HAL_CAN_Init+0x12>
 800fbd6:	2301      	movs	r3, #1
 800fbd8:	e0ed      	b.n	800fdb6 <HAL_CAN_Init+0x1ee>
 800fbda:	687b      	ldr	r3, [r7, #4]
 800fbdc:	f893 3020 	ldrb.w	r3, [r3, #32]
 800fbe0:	b2db      	uxtb	r3, r3
 800fbe2:	2b00      	cmp	r3, #0
 800fbe4:	d102      	bne.n	800fbec <HAL_CAN_Init+0x24>
 800fbe6:	6878      	ldr	r0, [r7, #4]
 800fbe8:	f7f3 fa2e 	bl	8003048 <HAL_CAN_MspInit>
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	681b      	ldr	r3, [r3, #0]
 800fbf0:	681a      	ldr	r2, [r3, #0]
 800fbf2:	687b      	ldr	r3, [r7, #4]
 800fbf4:	681b      	ldr	r3, [r3, #0]
 800fbf6:	f042 0201 	orr.w	r2, r2, #1
 800fbfa:	601a      	str	r2, [r3, #0]
 800fbfc:	f7ff fd52 	bl	800f6a4 <HAL_GetTick>
 800fc00:	60f8      	str	r0, [r7, #12]
 800fc02:	e012      	b.n	800fc2a <HAL_CAN_Init+0x62>
 800fc04:	f7ff fd4e 	bl	800f6a4 <HAL_GetTick>
 800fc08:	4602      	mov	r2, r0
 800fc0a:	68fb      	ldr	r3, [r7, #12]
 800fc0c:	1ad3      	subs	r3, r2, r3
 800fc0e:	2b0a      	cmp	r3, #10
 800fc10:	d90b      	bls.n	800fc2a <HAL_CAN_Init+0x62>
 800fc12:	687b      	ldr	r3, [r7, #4]
 800fc14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fc16:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800fc1a:	687b      	ldr	r3, [r7, #4]
 800fc1c:	625a      	str	r2, [r3, #36]	; 0x24
 800fc1e:	687b      	ldr	r3, [r7, #4]
 800fc20:	2205      	movs	r2, #5
 800fc22:	f883 2020 	strb.w	r2, [r3, #32]
 800fc26:	2301      	movs	r3, #1
 800fc28:	e0c5      	b.n	800fdb6 <HAL_CAN_Init+0x1ee>
 800fc2a:	687b      	ldr	r3, [r7, #4]
 800fc2c:	681b      	ldr	r3, [r3, #0]
 800fc2e:	685b      	ldr	r3, [r3, #4]
 800fc30:	f003 0301 	and.w	r3, r3, #1
 800fc34:	2b00      	cmp	r3, #0
 800fc36:	d0e5      	beq.n	800fc04 <HAL_CAN_Init+0x3c>
 800fc38:	687b      	ldr	r3, [r7, #4]
 800fc3a:	681b      	ldr	r3, [r3, #0]
 800fc3c:	681a      	ldr	r2, [r3, #0]
 800fc3e:	687b      	ldr	r3, [r7, #4]
 800fc40:	681b      	ldr	r3, [r3, #0]
 800fc42:	f022 0202 	bic.w	r2, r2, #2
 800fc46:	601a      	str	r2, [r3, #0]
 800fc48:	f7ff fd2c 	bl	800f6a4 <HAL_GetTick>
 800fc4c:	60f8      	str	r0, [r7, #12]
 800fc4e:	e012      	b.n	800fc76 <HAL_CAN_Init+0xae>
 800fc50:	f7ff fd28 	bl	800f6a4 <HAL_GetTick>
 800fc54:	4602      	mov	r2, r0
 800fc56:	68fb      	ldr	r3, [r7, #12]
 800fc58:	1ad3      	subs	r3, r2, r3
 800fc5a:	2b0a      	cmp	r3, #10
 800fc5c:	d90b      	bls.n	800fc76 <HAL_CAN_Init+0xae>
 800fc5e:	687b      	ldr	r3, [r7, #4]
 800fc60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fc62:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800fc66:	687b      	ldr	r3, [r7, #4]
 800fc68:	625a      	str	r2, [r3, #36]	; 0x24
 800fc6a:	687b      	ldr	r3, [r7, #4]
 800fc6c:	2205      	movs	r2, #5
 800fc6e:	f883 2020 	strb.w	r2, [r3, #32]
 800fc72:	2301      	movs	r3, #1
 800fc74:	e09f      	b.n	800fdb6 <HAL_CAN_Init+0x1ee>
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	681b      	ldr	r3, [r3, #0]
 800fc7a:	685b      	ldr	r3, [r3, #4]
 800fc7c:	f003 0302 	and.w	r3, r3, #2
 800fc80:	2b00      	cmp	r3, #0
 800fc82:	d1e5      	bne.n	800fc50 <HAL_CAN_Init+0x88>
 800fc84:	687b      	ldr	r3, [r7, #4]
 800fc86:	7e1b      	ldrb	r3, [r3, #24]
 800fc88:	2b01      	cmp	r3, #1
 800fc8a:	d108      	bne.n	800fc9e <HAL_CAN_Init+0xd6>
 800fc8c:	687b      	ldr	r3, [r7, #4]
 800fc8e:	681b      	ldr	r3, [r3, #0]
 800fc90:	681a      	ldr	r2, [r3, #0]
 800fc92:	687b      	ldr	r3, [r7, #4]
 800fc94:	681b      	ldr	r3, [r3, #0]
 800fc96:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800fc9a:	601a      	str	r2, [r3, #0]
 800fc9c:	e007      	b.n	800fcae <HAL_CAN_Init+0xe6>
 800fc9e:	687b      	ldr	r3, [r7, #4]
 800fca0:	681b      	ldr	r3, [r3, #0]
 800fca2:	681a      	ldr	r2, [r3, #0]
 800fca4:	687b      	ldr	r3, [r7, #4]
 800fca6:	681b      	ldr	r3, [r3, #0]
 800fca8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800fcac:	601a      	str	r2, [r3, #0]
 800fcae:	687b      	ldr	r3, [r7, #4]
 800fcb0:	7e5b      	ldrb	r3, [r3, #25]
 800fcb2:	2b01      	cmp	r3, #1
 800fcb4:	d108      	bne.n	800fcc8 <HAL_CAN_Init+0x100>
 800fcb6:	687b      	ldr	r3, [r7, #4]
 800fcb8:	681b      	ldr	r3, [r3, #0]
 800fcba:	681a      	ldr	r2, [r3, #0]
 800fcbc:	687b      	ldr	r3, [r7, #4]
 800fcbe:	681b      	ldr	r3, [r3, #0]
 800fcc0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800fcc4:	601a      	str	r2, [r3, #0]
 800fcc6:	e007      	b.n	800fcd8 <HAL_CAN_Init+0x110>
 800fcc8:	687b      	ldr	r3, [r7, #4]
 800fcca:	681b      	ldr	r3, [r3, #0]
 800fccc:	681a      	ldr	r2, [r3, #0]
 800fcce:	687b      	ldr	r3, [r7, #4]
 800fcd0:	681b      	ldr	r3, [r3, #0]
 800fcd2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800fcd6:	601a      	str	r2, [r3, #0]
 800fcd8:	687b      	ldr	r3, [r7, #4]
 800fcda:	7e9b      	ldrb	r3, [r3, #26]
 800fcdc:	2b01      	cmp	r3, #1
 800fcde:	d108      	bne.n	800fcf2 <HAL_CAN_Init+0x12a>
 800fce0:	687b      	ldr	r3, [r7, #4]
 800fce2:	681b      	ldr	r3, [r3, #0]
 800fce4:	681a      	ldr	r2, [r3, #0]
 800fce6:	687b      	ldr	r3, [r7, #4]
 800fce8:	681b      	ldr	r3, [r3, #0]
 800fcea:	f042 0220 	orr.w	r2, r2, #32
 800fcee:	601a      	str	r2, [r3, #0]
 800fcf0:	e007      	b.n	800fd02 <HAL_CAN_Init+0x13a>
 800fcf2:	687b      	ldr	r3, [r7, #4]
 800fcf4:	681b      	ldr	r3, [r3, #0]
 800fcf6:	681a      	ldr	r2, [r3, #0]
 800fcf8:	687b      	ldr	r3, [r7, #4]
 800fcfa:	681b      	ldr	r3, [r3, #0]
 800fcfc:	f022 0220 	bic.w	r2, r2, #32
 800fd00:	601a      	str	r2, [r3, #0]
 800fd02:	687b      	ldr	r3, [r7, #4]
 800fd04:	7edb      	ldrb	r3, [r3, #27]
 800fd06:	2b01      	cmp	r3, #1
 800fd08:	d108      	bne.n	800fd1c <HAL_CAN_Init+0x154>
 800fd0a:	687b      	ldr	r3, [r7, #4]
 800fd0c:	681b      	ldr	r3, [r3, #0]
 800fd0e:	681a      	ldr	r2, [r3, #0]
 800fd10:	687b      	ldr	r3, [r7, #4]
 800fd12:	681b      	ldr	r3, [r3, #0]
 800fd14:	f022 0210 	bic.w	r2, r2, #16
 800fd18:	601a      	str	r2, [r3, #0]
 800fd1a:	e007      	b.n	800fd2c <HAL_CAN_Init+0x164>
 800fd1c:	687b      	ldr	r3, [r7, #4]
 800fd1e:	681b      	ldr	r3, [r3, #0]
 800fd20:	681a      	ldr	r2, [r3, #0]
 800fd22:	687b      	ldr	r3, [r7, #4]
 800fd24:	681b      	ldr	r3, [r3, #0]
 800fd26:	f042 0210 	orr.w	r2, r2, #16
 800fd2a:	601a      	str	r2, [r3, #0]
 800fd2c:	687b      	ldr	r3, [r7, #4]
 800fd2e:	7f1b      	ldrb	r3, [r3, #28]
 800fd30:	2b01      	cmp	r3, #1
 800fd32:	d108      	bne.n	800fd46 <HAL_CAN_Init+0x17e>
 800fd34:	687b      	ldr	r3, [r7, #4]
 800fd36:	681b      	ldr	r3, [r3, #0]
 800fd38:	681a      	ldr	r2, [r3, #0]
 800fd3a:	687b      	ldr	r3, [r7, #4]
 800fd3c:	681b      	ldr	r3, [r3, #0]
 800fd3e:	f042 0208 	orr.w	r2, r2, #8
 800fd42:	601a      	str	r2, [r3, #0]
 800fd44:	e007      	b.n	800fd56 <HAL_CAN_Init+0x18e>
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	681b      	ldr	r3, [r3, #0]
 800fd4a:	681a      	ldr	r2, [r3, #0]
 800fd4c:	687b      	ldr	r3, [r7, #4]
 800fd4e:	681b      	ldr	r3, [r3, #0]
 800fd50:	f022 0208 	bic.w	r2, r2, #8
 800fd54:	601a      	str	r2, [r3, #0]
 800fd56:	687b      	ldr	r3, [r7, #4]
 800fd58:	7f5b      	ldrb	r3, [r3, #29]
 800fd5a:	2b01      	cmp	r3, #1
 800fd5c:	d108      	bne.n	800fd70 <HAL_CAN_Init+0x1a8>
 800fd5e:	687b      	ldr	r3, [r7, #4]
 800fd60:	681b      	ldr	r3, [r3, #0]
 800fd62:	681a      	ldr	r2, [r3, #0]
 800fd64:	687b      	ldr	r3, [r7, #4]
 800fd66:	681b      	ldr	r3, [r3, #0]
 800fd68:	f042 0204 	orr.w	r2, r2, #4
 800fd6c:	601a      	str	r2, [r3, #0]
 800fd6e:	e007      	b.n	800fd80 <HAL_CAN_Init+0x1b8>
 800fd70:	687b      	ldr	r3, [r7, #4]
 800fd72:	681b      	ldr	r3, [r3, #0]
 800fd74:	681a      	ldr	r2, [r3, #0]
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	681b      	ldr	r3, [r3, #0]
 800fd7a:	f022 0204 	bic.w	r2, r2, #4
 800fd7e:	601a      	str	r2, [r3, #0]
 800fd80:	687b      	ldr	r3, [r7, #4]
 800fd82:	689a      	ldr	r2, [r3, #8]
 800fd84:	687b      	ldr	r3, [r7, #4]
 800fd86:	68db      	ldr	r3, [r3, #12]
 800fd88:	431a      	orrs	r2, r3
 800fd8a:	687b      	ldr	r3, [r7, #4]
 800fd8c:	691b      	ldr	r3, [r3, #16]
 800fd8e:	431a      	orrs	r2, r3
 800fd90:	687b      	ldr	r3, [r7, #4]
 800fd92:	695b      	ldr	r3, [r3, #20]
 800fd94:	ea42 0103 	orr.w	r1, r2, r3
 800fd98:	687b      	ldr	r3, [r7, #4]
 800fd9a:	685b      	ldr	r3, [r3, #4]
 800fd9c:	1e5a      	subs	r2, r3, #1
 800fd9e:	687b      	ldr	r3, [r7, #4]
 800fda0:	681b      	ldr	r3, [r3, #0]
 800fda2:	430a      	orrs	r2, r1
 800fda4:	61da      	str	r2, [r3, #28]
 800fda6:	687b      	ldr	r3, [r7, #4]
 800fda8:	2200      	movs	r2, #0
 800fdaa:	625a      	str	r2, [r3, #36]	; 0x24
 800fdac:	687b      	ldr	r3, [r7, #4]
 800fdae:	2201      	movs	r2, #1
 800fdb0:	f883 2020 	strb.w	r2, [r3, #32]
 800fdb4:	2300      	movs	r3, #0
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	3710      	adds	r7, #16
 800fdba:	46bd      	mov	sp, r7
 800fdbc:	bd80      	pop	{r7, pc}
	...

0800fdc0 <HAL_CAN_ConfigFilter>:
 800fdc0:	b480      	push	{r7}
 800fdc2:	b087      	sub	sp, #28
 800fdc4:	af00      	add	r7, sp, #0
 800fdc6:	6078      	str	r0, [r7, #4]
 800fdc8:	6039      	str	r1, [r7, #0]
 800fdca:	687b      	ldr	r3, [r7, #4]
 800fdcc:	681b      	ldr	r3, [r3, #0]
 800fdce:	617b      	str	r3, [r7, #20]
 800fdd0:	687b      	ldr	r3, [r7, #4]
 800fdd2:	f893 3020 	ldrb.w	r3, [r3, #32]
 800fdd6:	74fb      	strb	r3, [r7, #19]
 800fdd8:	7cfb      	ldrb	r3, [r7, #19]
 800fdda:	2b01      	cmp	r3, #1
 800fddc:	d003      	beq.n	800fde6 <HAL_CAN_ConfigFilter+0x26>
 800fdde:	7cfb      	ldrb	r3, [r7, #19]
 800fde0:	2b02      	cmp	r3, #2
 800fde2:	f040 80be 	bne.w	800ff62 <HAL_CAN_ConfigFilter+0x1a2>
 800fde6:	4b65      	ldr	r3, [pc, #404]	; (800ff7c <HAL_CAN_ConfigFilter+0x1bc>)
 800fde8:	617b      	str	r3, [r7, #20]
 800fdea:	697b      	ldr	r3, [r7, #20]
 800fdec:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800fdf0:	f043 0201 	orr.w	r2, r3, #1
 800fdf4:	697b      	ldr	r3, [r7, #20]
 800fdf6:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fdfa:	697b      	ldr	r3, [r7, #20]
 800fdfc:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800fe00:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 800fe04:	697b      	ldr	r3, [r7, #20]
 800fe06:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fe0a:	697b      	ldr	r3, [r7, #20]
 800fe0c:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 800fe10:	683b      	ldr	r3, [r7, #0]
 800fe12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fe14:	021b      	lsls	r3, r3, #8
 800fe16:	431a      	orrs	r2, r3
 800fe18:	697b      	ldr	r3, [r7, #20]
 800fe1a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800fe1e:	683b      	ldr	r3, [r7, #0]
 800fe20:	695b      	ldr	r3, [r3, #20]
 800fe22:	f003 031f 	and.w	r3, r3, #31
 800fe26:	2201      	movs	r2, #1
 800fe28:	fa02 f303 	lsl.w	r3, r2, r3
 800fe2c:	60fb      	str	r3, [r7, #12]
 800fe2e:	697b      	ldr	r3, [r7, #20]
 800fe30:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 800fe34:	68fb      	ldr	r3, [r7, #12]
 800fe36:	43db      	mvns	r3, r3
 800fe38:	401a      	ands	r2, r3
 800fe3a:	697b      	ldr	r3, [r7, #20]
 800fe3c:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 800fe40:	683b      	ldr	r3, [r7, #0]
 800fe42:	69db      	ldr	r3, [r3, #28]
 800fe44:	2b00      	cmp	r3, #0
 800fe46:	d123      	bne.n	800fe90 <HAL_CAN_ConfigFilter+0xd0>
 800fe48:	697b      	ldr	r3, [r7, #20]
 800fe4a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800fe4e:	68fb      	ldr	r3, [r7, #12]
 800fe50:	43db      	mvns	r3, r3
 800fe52:	401a      	ands	r2, r3
 800fe54:	697b      	ldr	r3, [r7, #20]
 800fe56:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800fe5a:	683b      	ldr	r3, [r7, #0]
 800fe5c:	68db      	ldr	r3, [r3, #12]
 800fe5e:	0419      	lsls	r1, r3, #16
 800fe60:	683b      	ldr	r3, [r7, #0]
 800fe62:	685b      	ldr	r3, [r3, #4]
 800fe64:	b29b      	uxth	r3, r3
 800fe66:	683a      	ldr	r2, [r7, #0]
 800fe68:	6952      	ldr	r2, [r2, #20]
 800fe6a:	4319      	orrs	r1, r3
 800fe6c:	697b      	ldr	r3, [r7, #20]
 800fe6e:	3248      	adds	r2, #72	; 0x48
 800fe70:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800fe74:	683b      	ldr	r3, [r7, #0]
 800fe76:	689b      	ldr	r3, [r3, #8]
 800fe78:	0419      	lsls	r1, r3, #16
 800fe7a:	683b      	ldr	r3, [r7, #0]
 800fe7c:	681b      	ldr	r3, [r3, #0]
 800fe7e:	b29a      	uxth	r2, r3
 800fe80:	683b      	ldr	r3, [r7, #0]
 800fe82:	695b      	ldr	r3, [r3, #20]
 800fe84:	430a      	orrs	r2, r1
 800fe86:	6979      	ldr	r1, [r7, #20]
 800fe88:	3348      	adds	r3, #72	; 0x48
 800fe8a:	00db      	lsls	r3, r3, #3
 800fe8c:	440b      	add	r3, r1
 800fe8e:	605a      	str	r2, [r3, #4]
 800fe90:	683b      	ldr	r3, [r7, #0]
 800fe92:	69db      	ldr	r3, [r3, #28]
 800fe94:	2b01      	cmp	r3, #1
 800fe96:	d122      	bne.n	800fede <HAL_CAN_ConfigFilter+0x11e>
 800fe98:	697b      	ldr	r3, [r7, #20]
 800fe9a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800fe9e:	68fb      	ldr	r3, [r7, #12]
 800fea0:	431a      	orrs	r2, r3
 800fea2:	697b      	ldr	r3, [r7, #20]
 800fea4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800fea8:	683b      	ldr	r3, [r7, #0]
 800feaa:	681b      	ldr	r3, [r3, #0]
 800feac:	0419      	lsls	r1, r3, #16
 800feae:	683b      	ldr	r3, [r7, #0]
 800feb0:	685b      	ldr	r3, [r3, #4]
 800feb2:	b29b      	uxth	r3, r3
 800feb4:	683a      	ldr	r2, [r7, #0]
 800feb6:	6952      	ldr	r2, [r2, #20]
 800feb8:	4319      	orrs	r1, r3
 800feba:	697b      	ldr	r3, [r7, #20]
 800febc:	3248      	adds	r2, #72	; 0x48
 800febe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800fec2:	683b      	ldr	r3, [r7, #0]
 800fec4:	689b      	ldr	r3, [r3, #8]
 800fec6:	0419      	lsls	r1, r3, #16
 800fec8:	683b      	ldr	r3, [r7, #0]
 800feca:	68db      	ldr	r3, [r3, #12]
 800fecc:	b29a      	uxth	r2, r3
 800fece:	683b      	ldr	r3, [r7, #0]
 800fed0:	695b      	ldr	r3, [r3, #20]
 800fed2:	430a      	orrs	r2, r1
 800fed4:	6979      	ldr	r1, [r7, #20]
 800fed6:	3348      	adds	r3, #72	; 0x48
 800fed8:	00db      	lsls	r3, r3, #3
 800feda:	440b      	add	r3, r1
 800fedc:	605a      	str	r2, [r3, #4]
 800fede:	683b      	ldr	r3, [r7, #0]
 800fee0:	699b      	ldr	r3, [r3, #24]
 800fee2:	2b00      	cmp	r3, #0
 800fee4:	d109      	bne.n	800fefa <HAL_CAN_ConfigFilter+0x13a>
 800fee6:	697b      	ldr	r3, [r7, #20]
 800fee8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800feec:	68fb      	ldr	r3, [r7, #12]
 800feee:	43db      	mvns	r3, r3
 800fef0:	401a      	ands	r2, r3
 800fef2:	697b      	ldr	r3, [r7, #20]
 800fef4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800fef8:	e007      	b.n	800ff0a <HAL_CAN_ConfigFilter+0x14a>
 800fefa:	697b      	ldr	r3, [r7, #20]
 800fefc:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800ff00:	68fb      	ldr	r3, [r7, #12]
 800ff02:	431a      	orrs	r2, r3
 800ff04:	697b      	ldr	r3, [r7, #20]
 800ff06:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800ff0a:	683b      	ldr	r3, [r7, #0]
 800ff0c:	691b      	ldr	r3, [r3, #16]
 800ff0e:	2b00      	cmp	r3, #0
 800ff10:	d109      	bne.n	800ff26 <HAL_CAN_ConfigFilter+0x166>
 800ff12:	697b      	ldr	r3, [r7, #20]
 800ff14:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 800ff18:	68fb      	ldr	r3, [r7, #12]
 800ff1a:	43db      	mvns	r3, r3
 800ff1c:	401a      	ands	r2, r3
 800ff1e:	697b      	ldr	r3, [r7, #20]
 800ff20:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800ff24:	e007      	b.n	800ff36 <HAL_CAN_ConfigFilter+0x176>
 800ff26:	697b      	ldr	r3, [r7, #20]
 800ff28:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 800ff2c:	68fb      	ldr	r3, [r7, #12]
 800ff2e:	431a      	orrs	r2, r3
 800ff30:	697b      	ldr	r3, [r7, #20]
 800ff32:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800ff36:	683b      	ldr	r3, [r7, #0]
 800ff38:	6a1b      	ldr	r3, [r3, #32]
 800ff3a:	2b01      	cmp	r3, #1
 800ff3c:	d107      	bne.n	800ff4e <HAL_CAN_ConfigFilter+0x18e>
 800ff3e:	697b      	ldr	r3, [r7, #20]
 800ff40:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 800ff44:	68fb      	ldr	r3, [r7, #12]
 800ff46:	431a      	orrs	r2, r3
 800ff48:	697b      	ldr	r3, [r7, #20]
 800ff4a:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 800ff4e:	697b      	ldr	r3, [r7, #20]
 800ff50:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 800ff54:	f023 0201 	bic.w	r2, r3, #1
 800ff58:	697b      	ldr	r3, [r7, #20]
 800ff5a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 800ff5e:	2300      	movs	r3, #0
 800ff60:	e006      	b.n	800ff70 <HAL_CAN_ConfigFilter+0x1b0>
 800ff62:	687b      	ldr	r3, [r7, #4]
 800ff64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ff66:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 800ff6a:	687b      	ldr	r3, [r7, #4]
 800ff6c:	625a      	str	r2, [r3, #36]	; 0x24
 800ff6e:	2301      	movs	r3, #1
 800ff70:	4618      	mov	r0, r3
 800ff72:	371c      	adds	r7, #28
 800ff74:	46bd      	mov	sp, r7
 800ff76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff7a:	4770      	bx	lr
 800ff7c:	40006400 	.word	0x40006400

0800ff80 <HAL_CAN_Start>:
 800ff80:	b580      	push	{r7, lr}
 800ff82:	b084      	sub	sp, #16
 800ff84:	af00      	add	r7, sp, #0
 800ff86:	6078      	str	r0, [r7, #4]
 800ff88:	687b      	ldr	r3, [r7, #4]
 800ff8a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800ff8e:	b2db      	uxtb	r3, r3
 800ff90:	2b01      	cmp	r3, #1
 800ff92:	d12e      	bne.n	800fff2 <HAL_CAN_Start+0x72>
 800ff94:	687b      	ldr	r3, [r7, #4]
 800ff96:	2202      	movs	r2, #2
 800ff98:	f883 2020 	strb.w	r2, [r3, #32]
 800ff9c:	687b      	ldr	r3, [r7, #4]
 800ff9e:	681b      	ldr	r3, [r3, #0]
 800ffa0:	681a      	ldr	r2, [r3, #0]
 800ffa2:	687b      	ldr	r3, [r7, #4]
 800ffa4:	681b      	ldr	r3, [r3, #0]
 800ffa6:	f022 0201 	bic.w	r2, r2, #1
 800ffaa:	601a      	str	r2, [r3, #0]
 800ffac:	f7ff fb7a 	bl	800f6a4 <HAL_GetTick>
 800ffb0:	60f8      	str	r0, [r7, #12]
 800ffb2:	e012      	b.n	800ffda <HAL_CAN_Start+0x5a>
 800ffb4:	f7ff fb76 	bl	800f6a4 <HAL_GetTick>
 800ffb8:	4602      	mov	r2, r0
 800ffba:	68fb      	ldr	r3, [r7, #12]
 800ffbc:	1ad3      	subs	r3, r2, r3
 800ffbe:	2b0a      	cmp	r3, #10
 800ffc0:	d90b      	bls.n	800ffda <HAL_CAN_Start+0x5a>
 800ffc2:	687b      	ldr	r3, [r7, #4]
 800ffc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ffc6:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800ffca:	687b      	ldr	r3, [r7, #4]
 800ffcc:	625a      	str	r2, [r3, #36]	; 0x24
 800ffce:	687b      	ldr	r3, [r7, #4]
 800ffd0:	2205      	movs	r2, #5
 800ffd2:	f883 2020 	strb.w	r2, [r3, #32]
 800ffd6:	2301      	movs	r3, #1
 800ffd8:	e012      	b.n	8010000 <HAL_CAN_Start+0x80>
 800ffda:	687b      	ldr	r3, [r7, #4]
 800ffdc:	681b      	ldr	r3, [r3, #0]
 800ffde:	685b      	ldr	r3, [r3, #4]
 800ffe0:	f003 0301 	and.w	r3, r3, #1
 800ffe4:	2b00      	cmp	r3, #0
 800ffe6:	d1e5      	bne.n	800ffb4 <HAL_CAN_Start+0x34>
 800ffe8:	687b      	ldr	r3, [r7, #4]
 800ffea:	2200      	movs	r2, #0
 800ffec:	625a      	str	r2, [r3, #36]	; 0x24
 800ffee:	2300      	movs	r3, #0
 800fff0:	e006      	b.n	8010000 <HAL_CAN_Start+0x80>
 800fff2:	687b      	ldr	r3, [r7, #4]
 800fff4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fff6:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 800fffa:	687b      	ldr	r3, [r7, #4]
 800fffc:	625a      	str	r2, [r3, #36]	; 0x24
 800fffe:	2301      	movs	r3, #1
 8010000:	4618      	mov	r0, r3
 8010002:	3710      	adds	r7, #16
 8010004:	46bd      	mov	sp, r7
 8010006:	bd80      	pop	{r7, pc}

08010008 <HAL_CAN_AddTxMessage>:
 8010008:	b480      	push	{r7}
 801000a:	b089      	sub	sp, #36	; 0x24
 801000c:	af00      	add	r7, sp, #0
 801000e:	60f8      	str	r0, [r7, #12]
 8010010:	60b9      	str	r1, [r7, #8]
 8010012:	607a      	str	r2, [r7, #4]
 8010014:	603b      	str	r3, [r7, #0]
 8010016:	68fb      	ldr	r3, [r7, #12]
 8010018:	f893 3020 	ldrb.w	r3, [r3, #32]
 801001c:	77fb      	strb	r3, [r7, #31]
 801001e:	68fb      	ldr	r3, [r7, #12]
 8010020:	681b      	ldr	r3, [r3, #0]
 8010022:	689b      	ldr	r3, [r3, #8]
 8010024:	61bb      	str	r3, [r7, #24]
 8010026:	7ffb      	ldrb	r3, [r7, #31]
 8010028:	2b01      	cmp	r3, #1
 801002a:	d003      	beq.n	8010034 <HAL_CAN_AddTxMessage+0x2c>
 801002c:	7ffb      	ldrb	r3, [r7, #31]
 801002e:	2b02      	cmp	r3, #2
 8010030:	f040 80b8 	bne.w	80101a4 <HAL_CAN_AddTxMessage+0x19c>
 8010034:	69bb      	ldr	r3, [r7, #24]
 8010036:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 801003a:	2b00      	cmp	r3, #0
 801003c:	d10a      	bne.n	8010054 <HAL_CAN_AddTxMessage+0x4c>
 801003e:	69bb      	ldr	r3, [r7, #24]
 8010040:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8010044:	2b00      	cmp	r3, #0
 8010046:	d105      	bne.n	8010054 <HAL_CAN_AddTxMessage+0x4c>
 8010048:	69bb      	ldr	r3, [r7, #24]
 801004a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801004e:	2b00      	cmp	r3, #0
 8010050:	f000 80a0 	beq.w	8010194 <HAL_CAN_AddTxMessage+0x18c>
 8010054:	69bb      	ldr	r3, [r7, #24]
 8010056:	0e1b      	lsrs	r3, r3, #24
 8010058:	f003 0303 	and.w	r3, r3, #3
 801005c:	617b      	str	r3, [r7, #20]
 801005e:	697b      	ldr	r3, [r7, #20]
 8010060:	2b02      	cmp	r3, #2
 8010062:	d907      	bls.n	8010074 <HAL_CAN_AddTxMessage+0x6c>
 8010064:	68fb      	ldr	r3, [r7, #12]
 8010066:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010068:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 801006c:	68fb      	ldr	r3, [r7, #12]
 801006e:	625a      	str	r2, [r3, #36]	; 0x24
 8010070:	2301      	movs	r3, #1
 8010072:	e09e      	b.n	80101b2 <HAL_CAN_AddTxMessage+0x1aa>
 8010074:	2201      	movs	r2, #1
 8010076:	697b      	ldr	r3, [r7, #20]
 8010078:	409a      	lsls	r2, r3
 801007a:	683b      	ldr	r3, [r7, #0]
 801007c:	601a      	str	r2, [r3, #0]
 801007e:	68bb      	ldr	r3, [r7, #8]
 8010080:	689b      	ldr	r3, [r3, #8]
 8010082:	2b00      	cmp	r3, #0
 8010084:	d10d      	bne.n	80100a2 <HAL_CAN_AddTxMessage+0x9a>
 8010086:	68bb      	ldr	r3, [r7, #8]
 8010088:	681b      	ldr	r3, [r3, #0]
 801008a:	055a      	lsls	r2, r3, #21
 801008c:	68bb      	ldr	r3, [r7, #8]
 801008e:	68db      	ldr	r3, [r3, #12]
 8010090:	68f9      	ldr	r1, [r7, #12]
 8010092:	6809      	ldr	r1, [r1, #0]
 8010094:	431a      	orrs	r2, r3
 8010096:	697b      	ldr	r3, [r7, #20]
 8010098:	3318      	adds	r3, #24
 801009a:	011b      	lsls	r3, r3, #4
 801009c:	440b      	add	r3, r1
 801009e:	601a      	str	r2, [r3, #0]
 80100a0:	e00f      	b.n	80100c2 <HAL_CAN_AddTxMessage+0xba>
 80100a2:	68bb      	ldr	r3, [r7, #8]
 80100a4:	685b      	ldr	r3, [r3, #4]
 80100a6:	00da      	lsls	r2, r3, #3
 80100a8:	68bb      	ldr	r3, [r7, #8]
 80100aa:	689b      	ldr	r3, [r3, #8]
 80100ac:	431a      	orrs	r2, r3
 80100ae:	68bb      	ldr	r3, [r7, #8]
 80100b0:	68db      	ldr	r3, [r3, #12]
 80100b2:	68f9      	ldr	r1, [r7, #12]
 80100b4:	6809      	ldr	r1, [r1, #0]
 80100b6:	431a      	orrs	r2, r3
 80100b8:	697b      	ldr	r3, [r7, #20]
 80100ba:	3318      	adds	r3, #24
 80100bc:	011b      	lsls	r3, r3, #4
 80100be:	440b      	add	r3, r1
 80100c0:	601a      	str	r2, [r3, #0]
 80100c2:	68fb      	ldr	r3, [r7, #12]
 80100c4:	6819      	ldr	r1, [r3, #0]
 80100c6:	68bb      	ldr	r3, [r7, #8]
 80100c8:	691a      	ldr	r2, [r3, #16]
 80100ca:	697b      	ldr	r3, [r7, #20]
 80100cc:	3318      	adds	r3, #24
 80100ce:	011b      	lsls	r3, r3, #4
 80100d0:	440b      	add	r3, r1
 80100d2:	3304      	adds	r3, #4
 80100d4:	601a      	str	r2, [r3, #0]
 80100d6:	68bb      	ldr	r3, [r7, #8]
 80100d8:	7d1b      	ldrb	r3, [r3, #20]
 80100da:	2b01      	cmp	r3, #1
 80100dc:	d111      	bne.n	8010102 <HAL_CAN_AddTxMessage+0xfa>
 80100de:	68fb      	ldr	r3, [r7, #12]
 80100e0:	681a      	ldr	r2, [r3, #0]
 80100e2:	697b      	ldr	r3, [r7, #20]
 80100e4:	3318      	adds	r3, #24
 80100e6:	011b      	lsls	r3, r3, #4
 80100e8:	4413      	add	r3, r2
 80100ea:	3304      	adds	r3, #4
 80100ec:	681b      	ldr	r3, [r3, #0]
 80100ee:	68fa      	ldr	r2, [r7, #12]
 80100f0:	6811      	ldr	r1, [r2, #0]
 80100f2:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80100f6:	697b      	ldr	r3, [r7, #20]
 80100f8:	3318      	adds	r3, #24
 80100fa:	011b      	lsls	r3, r3, #4
 80100fc:	440b      	add	r3, r1
 80100fe:	3304      	adds	r3, #4
 8010100:	601a      	str	r2, [r3, #0]
 8010102:	687b      	ldr	r3, [r7, #4]
 8010104:	3307      	adds	r3, #7
 8010106:	781b      	ldrb	r3, [r3, #0]
 8010108:	061a      	lsls	r2, r3, #24
 801010a:	687b      	ldr	r3, [r7, #4]
 801010c:	3306      	adds	r3, #6
 801010e:	781b      	ldrb	r3, [r3, #0]
 8010110:	041b      	lsls	r3, r3, #16
 8010112:	431a      	orrs	r2, r3
 8010114:	687b      	ldr	r3, [r7, #4]
 8010116:	3305      	adds	r3, #5
 8010118:	781b      	ldrb	r3, [r3, #0]
 801011a:	021b      	lsls	r3, r3, #8
 801011c:	4313      	orrs	r3, r2
 801011e:	687a      	ldr	r2, [r7, #4]
 8010120:	3204      	adds	r2, #4
 8010122:	7812      	ldrb	r2, [r2, #0]
 8010124:	4610      	mov	r0, r2
 8010126:	68fa      	ldr	r2, [r7, #12]
 8010128:	6811      	ldr	r1, [r2, #0]
 801012a:	ea43 0200 	orr.w	r2, r3, r0
 801012e:	697b      	ldr	r3, [r7, #20]
 8010130:	011b      	lsls	r3, r3, #4
 8010132:	440b      	add	r3, r1
 8010134:	f503 73c6 	add.w	r3, r3, #396	; 0x18c
 8010138:	601a      	str	r2, [r3, #0]
 801013a:	687b      	ldr	r3, [r7, #4]
 801013c:	3303      	adds	r3, #3
 801013e:	781b      	ldrb	r3, [r3, #0]
 8010140:	061a      	lsls	r2, r3, #24
 8010142:	687b      	ldr	r3, [r7, #4]
 8010144:	3302      	adds	r3, #2
 8010146:	781b      	ldrb	r3, [r3, #0]
 8010148:	041b      	lsls	r3, r3, #16
 801014a:	431a      	orrs	r2, r3
 801014c:	687b      	ldr	r3, [r7, #4]
 801014e:	3301      	adds	r3, #1
 8010150:	781b      	ldrb	r3, [r3, #0]
 8010152:	021b      	lsls	r3, r3, #8
 8010154:	4313      	orrs	r3, r2
 8010156:	687a      	ldr	r2, [r7, #4]
 8010158:	7812      	ldrb	r2, [r2, #0]
 801015a:	4610      	mov	r0, r2
 801015c:	68fa      	ldr	r2, [r7, #12]
 801015e:	6811      	ldr	r1, [r2, #0]
 8010160:	ea43 0200 	orr.w	r2, r3, r0
 8010164:	697b      	ldr	r3, [r7, #20]
 8010166:	011b      	lsls	r3, r3, #4
 8010168:	440b      	add	r3, r1
 801016a:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 801016e:	601a      	str	r2, [r3, #0]
 8010170:	68fb      	ldr	r3, [r7, #12]
 8010172:	681a      	ldr	r2, [r3, #0]
 8010174:	697b      	ldr	r3, [r7, #20]
 8010176:	3318      	adds	r3, #24
 8010178:	011b      	lsls	r3, r3, #4
 801017a:	4413      	add	r3, r2
 801017c:	681b      	ldr	r3, [r3, #0]
 801017e:	68fa      	ldr	r2, [r7, #12]
 8010180:	6811      	ldr	r1, [r2, #0]
 8010182:	f043 0201 	orr.w	r2, r3, #1
 8010186:	697b      	ldr	r3, [r7, #20]
 8010188:	3318      	adds	r3, #24
 801018a:	011b      	lsls	r3, r3, #4
 801018c:	440b      	add	r3, r1
 801018e:	601a      	str	r2, [r3, #0]
 8010190:	2300      	movs	r3, #0
 8010192:	e00e      	b.n	80101b2 <HAL_CAN_AddTxMessage+0x1aa>
 8010194:	68fb      	ldr	r3, [r7, #12]
 8010196:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010198:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 801019c:	68fb      	ldr	r3, [r7, #12]
 801019e:	625a      	str	r2, [r3, #36]	; 0x24
 80101a0:	2301      	movs	r3, #1
 80101a2:	e006      	b.n	80101b2 <HAL_CAN_AddTxMessage+0x1aa>
 80101a4:	68fb      	ldr	r3, [r7, #12]
 80101a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80101a8:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80101ac:	68fb      	ldr	r3, [r7, #12]
 80101ae:	625a      	str	r2, [r3, #36]	; 0x24
 80101b0:	2301      	movs	r3, #1
 80101b2:	4618      	mov	r0, r3
 80101b4:	3724      	adds	r7, #36	; 0x24
 80101b6:	46bd      	mov	sp, r7
 80101b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101bc:	4770      	bx	lr

080101be <HAL_CAN_GetRxMessage>:
 80101be:	b480      	push	{r7}
 80101c0:	b087      	sub	sp, #28
 80101c2:	af00      	add	r7, sp, #0
 80101c4:	60f8      	str	r0, [r7, #12]
 80101c6:	60b9      	str	r1, [r7, #8]
 80101c8:	607a      	str	r2, [r7, #4]
 80101ca:	603b      	str	r3, [r7, #0]
 80101cc:	68fb      	ldr	r3, [r7, #12]
 80101ce:	f893 3020 	ldrb.w	r3, [r3, #32]
 80101d2:	75fb      	strb	r3, [r7, #23]
 80101d4:	7dfb      	ldrb	r3, [r7, #23]
 80101d6:	2b01      	cmp	r3, #1
 80101d8:	d003      	beq.n	80101e2 <HAL_CAN_GetRxMessage+0x24>
 80101da:	7dfb      	ldrb	r3, [r7, #23]
 80101dc:	2b02      	cmp	r3, #2
 80101de:	f040 80f3 	bne.w	80103c8 <HAL_CAN_GetRxMessage+0x20a>
 80101e2:	68bb      	ldr	r3, [r7, #8]
 80101e4:	2b00      	cmp	r3, #0
 80101e6:	d10e      	bne.n	8010206 <HAL_CAN_GetRxMessage+0x48>
 80101e8:	68fb      	ldr	r3, [r7, #12]
 80101ea:	681b      	ldr	r3, [r3, #0]
 80101ec:	68db      	ldr	r3, [r3, #12]
 80101ee:	f003 0303 	and.w	r3, r3, #3
 80101f2:	2b00      	cmp	r3, #0
 80101f4:	d116      	bne.n	8010224 <HAL_CAN_GetRxMessage+0x66>
 80101f6:	68fb      	ldr	r3, [r7, #12]
 80101f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80101fa:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 80101fe:	68fb      	ldr	r3, [r7, #12]
 8010200:	625a      	str	r2, [r3, #36]	; 0x24
 8010202:	2301      	movs	r3, #1
 8010204:	e0e7      	b.n	80103d6 <HAL_CAN_GetRxMessage+0x218>
 8010206:	68fb      	ldr	r3, [r7, #12]
 8010208:	681b      	ldr	r3, [r3, #0]
 801020a:	691b      	ldr	r3, [r3, #16]
 801020c:	f003 0303 	and.w	r3, r3, #3
 8010210:	2b00      	cmp	r3, #0
 8010212:	d107      	bne.n	8010224 <HAL_CAN_GetRxMessage+0x66>
 8010214:	68fb      	ldr	r3, [r7, #12]
 8010216:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010218:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 801021c:	68fb      	ldr	r3, [r7, #12]
 801021e:	625a      	str	r2, [r3, #36]	; 0x24
 8010220:	2301      	movs	r3, #1
 8010222:	e0d8      	b.n	80103d6 <HAL_CAN_GetRxMessage+0x218>
 8010224:	68fb      	ldr	r3, [r7, #12]
 8010226:	681a      	ldr	r2, [r3, #0]
 8010228:	68bb      	ldr	r3, [r7, #8]
 801022a:	331b      	adds	r3, #27
 801022c:	011b      	lsls	r3, r3, #4
 801022e:	4413      	add	r3, r2
 8010230:	681b      	ldr	r3, [r3, #0]
 8010232:	f003 0204 	and.w	r2, r3, #4
 8010236:	687b      	ldr	r3, [r7, #4]
 8010238:	609a      	str	r2, [r3, #8]
 801023a:	687b      	ldr	r3, [r7, #4]
 801023c:	689b      	ldr	r3, [r3, #8]
 801023e:	2b00      	cmp	r3, #0
 8010240:	d10c      	bne.n	801025c <HAL_CAN_GetRxMessage+0x9e>
 8010242:	68fb      	ldr	r3, [r7, #12]
 8010244:	681a      	ldr	r2, [r3, #0]
 8010246:	68bb      	ldr	r3, [r7, #8]
 8010248:	331b      	adds	r3, #27
 801024a:	011b      	lsls	r3, r3, #4
 801024c:	4413      	add	r3, r2
 801024e:	681b      	ldr	r3, [r3, #0]
 8010250:	0d5b      	lsrs	r3, r3, #21
 8010252:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8010256:	687b      	ldr	r3, [r7, #4]
 8010258:	601a      	str	r2, [r3, #0]
 801025a:	e00b      	b.n	8010274 <HAL_CAN_GetRxMessage+0xb6>
 801025c:	68fb      	ldr	r3, [r7, #12]
 801025e:	681a      	ldr	r2, [r3, #0]
 8010260:	68bb      	ldr	r3, [r7, #8]
 8010262:	331b      	adds	r3, #27
 8010264:	011b      	lsls	r3, r3, #4
 8010266:	4413      	add	r3, r2
 8010268:	681b      	ldr	r3, [r3, #0]
 801026a:	08db      	lsrs	r3, r3, #3
 801026c:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8010270:	687b      	ldr	r3, [r7, #4]
 8010272:	605a      	str	r2, [r3, #4]
 8010274:	68fb      	ldr	r3, [r7, #12]
 8010276:	681a      	ldr	r2, [r3, #0]
 8010278:	68bb      	ldr	r3, [r7, #8]
 801027a:	331b      	adds	r3, #27
 801027c:	011b      	lsls	r3, r3, #4
 801027e:	4413      	add	r3, r2
 8010280:	681b      	ldr	r3, [r3, #0]
 8010282:	f003 0202 	and.w	r2, r3, #2
 8010286:	687b      	ldr	r3, [r7, #4]
 8010288:	60da      	str	r2, [r3, #12]
 801028a:	68fb      	ldr	r3, [r7, #12]
 801028c:	681a      	ldr	r2, [r3, #0]
 801028e:	68bb      	ldr	r3, [r7, #8]
 8010290:	331b      	adds	r3, #27
 8010292:	011b      	lsls	r3, r3, #4
 8010294:	4413      	add	r3, r2
 8010296:	3304      	adds	r3, #4
 8010298:	681b      	ldr	r3, [r3, #0]
 801029a:	f003 020f 	and.w	r2, r3, #15
 801029e:	687b      	ldr	r3, [r7, #4]
 80102a0:	611a      	str	r2, [r3, #16]
 80102a2:	68fb      	ldr	r3, [r7, #12]
 80102a4:	681a      	ldr	r2, [r3, #0]
 80102a6:	68bb      	ldr	r3, [r7, #8]
 80102a8:	331b      	adds	r3, #27
 80102aa:	011b      	lsls	r3, r3, #4
 80102ac:	4413      	add	r3, r2
 80102ae:	3304      	adds	r3, #4
 80102b0:	681b      	ldr	r3, [r3, #0]
 80102b2:	0a1b      	lsrs	r3, r3, #8
 80102b4:	b2da      	uxtb	r2, r3
 80102b6:	687b      	ldr	r3, [r7, #4]
 80102b8:	619a      	str	r2, [r3, #24]
 80102ba:	68fb      	ldr	r3, [r7, #12]
 80102bc:	681a      	ldr	r2, [r3, #0]
 80102be:	68bb      	ldr	r3, [r7, #8]
 80102c0:	331b      	adds	r3, #27
 80102c2:	011b      	lsls	r3, r3, #4
 80102c4:	4413      	add	r3, r2
 80102c6:	3304      	adds	r3, #4
 80102c8:	681b      	ldr	r3, [r3, #0]
 80102ca:	0c1b      	lsrs	r3, r3, #16
 80102cc:	b29a      	uxth	r2, r3
 80102ce:	687b      	ldr	r3, [r7, #4]
 80102d0:	615a      	str	r2, [r3, #20]
 80102d2:	68fb      	ldr	r3, [r7, #12]
 80102d4:	681a      	ldr	r2, [r3, #0]
 80102d6:	68bb      	ldr	r3, [r7, #8]
 80102d8:	011b      	lsls	r3, r3, #4
 80102da:	4413      	add	r3, r2
 80102dc:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 80102e0:	681b      	ldr	r3, [r3, #0]
 80102e2:	b2da      	uxtb	r2, r3
 80102e4:	683b      	ldr	r3, [r7, #0]
 80102e6:	701a      	strb	r2, [r3, #0]
 80102e8:	68fb      	ldr	r3, [r7, #12]
 80102ea:	681a      	ldr	r2, [r3, #0]
 80102ec:	68bb      	ldr	r3, [r7, #8]
 80102ee:	011b      	lsls	r3, r3, #4
 80102f0:	4413      	add	r3, r2
 80102f2:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 80102f6:	681b      	ldr	r3, [r3, #0]
 80102f8:	0a1a      	lsrs	r2, r3, #8
 80102fa:	683b      	ldr	r3, [r7, #0]
 80102fc:	3301      	adds	r3, #1
 80102fe:	b2d2      	uxtb	r2, r2
 8010300:	701a      	strb	r2, [r3, #0]
 8010302:	68fb      	ldr	r3, [r7, #12]
 8010304:	681a      	ldr	r2, [r3, #0]
 8010306:	68bb      	ldr	r3, [r7, #8]
 8010308:	011b      	lsls	r3, r3, #4
 801030a:	4413      	add	r3, r2
 801030c:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8010310:	681b      	ldr	r3, [r3, #0]
 8010312:	0c1a      	lsrs	r2, r3, #16
 8010314:	683b      	ldr	r3, [r7, #0]
 8010316:	3302      	adds	r3, #2
 8010318:	b2d2      	uxtb	r2, r2
 801031a:	701a      	strb	r2, [r3, #0]
 801031c:	68fb      	ldr	r3, [r7, #12]
 801031e:	681a      	ldr	r2, [r3, #0]
 8010320:	68bb      	ldr	r3, [r7, #8]
 8010322:	011b      	lsls	r3, r3, #4
 8010324:	4413      	add	r3, r2
 8010326:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801032a:	681b      	ldr	r3, [r3, #0]
 801032c:	0e1a      	lsrs	r2, r3, #24
 801032e:	683b      	ldr	r3, [r7, #0]
 8010330:	3303      	adds	r3, #3
 8010332:	b2d2      	uxtb	r2, r2
 8010334:	701a      	strb	r2, [r3, #0]
 8010336:	68fb      	ldr	r3, [r7, #12]
 8010338:	681a      	ldr	r2, [r3, #0]
 801033a:	68bb      	ldr	r3, [r7, #8]
 801033c:	011b      	lsls	r3, r3, #4
 801033e:	4413      	add	r3, r2
 8010340:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8010344:	681a      	ldr	r2, [r3, #0]
 8010346:	683b      	ldr	r3, [r7, #0]
 8010348:	3304      	adds	r3, #4
 801034a:	b2d2      	uxtb	r2, r2
 801034c:	701a      	strb	r2, [r3, #0]
 801034e:	68fb      	ldr	r3, [r7, #12]
 8010350:	681a      	ldr	r2, [r3, #0]
 8010352:	68bb      	ldr	r3, [r7, #8]
 8010354:	011b      	lsls	r3, r3, #4
 8010356:	4413      	add	r3, r2
 8010358:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 801035c:	681b      	ldr	r3, [r3, #0]
 801035e:	0a1a      	lsrs	r2, r3, #8
 8010360:	683b      	ldr	r3, [r7, #0]
 8010362:	3305      	adds	r3, #5
 8010364:	b2d2      	uxtb	r2, r2
 8010366:	701a      	strb	r2, [r3, #0]
 8010368:	68fb      	ldr	r3, [r7, #12]
 801036a:	681a      	ldr	r2, [r3, #0]
 801036c:	68bb      	ldr	r3, [r7, #8]
 801036e:	011b      	lsls	r3, r3, #4
 8010370:	4413      	add	r3, r2
 8010372:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8010376:	681b      	ldr	r3, [r3, #0]
 8010378:	0c1a      	lsrs	r2, r3, #16
 801037a:	683b      	ldr	r3, [r7, #0]
 801037c:	3306      	adds	r3, #6
 801037e:	b2d2      	uxtb	r2, r2
 8010380:	701a      	strb	r2, [r3, #0]
 8010382:	68fb      	ldr	r3, [r7, #12]
 8010384:	681a      	ldr	r2, [r3, #0]
 8010386:	68bb      	ldr	r3, [r7, #8]
 8010388:	011b      	lsls	r3, r3, #4
 801038a:	4413      	add	r3, r2
 801038c:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8010390:	681b      	ldr	r3, [r3, #0]
 8010392:	0e1a      	lsrs	r2, r3, #24
 8010394:	683b      	ldr	r3, [r7, #0]
 8010396:	3307      	adds	r3, #7
 8010398:	b2d2      	uxtb	r2, r2
 801039a:	701a      	strb	r2, [r3, #0]
 801039c:	68bb      	ldr	r3, [r7, #8]
 801039e:	2b00      	cmp	r3, #0
 80103a0:	d108      	bne.n	80103b4 <HAL_CAN_GetRxMessage+0x1f6>
 80103a2:	68fb      	ldr	r3, [r7, #12]
 80103a4:	681b      	ldr	r3, [r3, #0]
 80103a6:	68da      	ldr	r2, [r3, #12]
 80103a8:	68fb      	ldr	r3, [r7, #12]
 80103aa:	681b      	ldr	r3, [r3, #0]
 80103ac:	f042 0220 	orr.w	r2, r2, #32
 80103b0:	60da      	str	r2, [r3, #12]
 80103b2:	e007      	b.n	80103c4 <HAL_CAN_GetRxMessage+0x206>
 80103b4:	68fb      	ldr	r3, [r7, #12]
 80103b6:	681b      	ldr	r3, [r3, #0]
 80103b8:	691a      	ldr	r2, [r3, #16]
 80103ba:	68fb      	ldr	r3, [r7, #12]
 80103bc:	681b      	ldr	r3, [r3, #0]
 80103be:	f042 0220 	orr.w	r2, r2, #32
 80103c2:	611a      	str	r2, [r3, #16]
 80103c4:	2300      	movs	r3, #0
 80103c6:	e006      	b.n	80103d6 <HAL_CAN_GetRxMessage+0x218>
 80103c8:	68fb      	ldr	r3, [r7, #12]
 80103ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80103cc:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80103d0:	68fb      	ldr	r3, [r7, #12]
 80103d2:	625a      	str	r2, [r3, #36]	; 0x24
 80103d4:	2301      	movs	r3, #1
 80103d6:	4618      	mov	r0, r3
 80103d8:	371c      	adds	r7, #28
 80103da:	46bd      	mov	sp, r7
 80103dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103e0:	4770      	bx	lr

080103e2 <HAL_CAN_ActivateNotification>:
 80103e2:	b480      	push	{r7}
 80103e4:	b085      	sub	sp, #20
 80103e6:	af00      	add	r7, sp, #0
 80103e8:	6078      	str	r0, [r7, #4]
 80103ea:	6039      	str	r1, [r7, #0]
 80103ec:	687b      	ldr	r3, [r7, #4]
 80103ee:	f893 3020 	ldrb.w	r3, [r3, #32]
 80103f2:	73fb      	strb	r3, [r7, #15]
 80103f4:	7bfb      	ldrb	r3, [r7, #15]
 80103f6:	2b01      	cmp	r3, #1
 80103f8:	d002      	beq.n	8010400 <HAL_CAN_ActivateNotification+0x1e>
 80103fa:	7bfb      	ldrb	r3, [r7, #15]
 80103fc:	2b02      	cmp	r3, #2
 80103fe:	d109      	bne.n	8010414 <HAL_CAN_ActivateNotification+0x32>
 8010400:	687b      	ldr	r3, [r7, #4]
 8010402:	681b      	ldr	r3, [r3, #0]
 8010404:	6959      	ldr	r1, [r3, #20]
 8010406:	687b      	ldr	r3, [r7, #4]
 8010408:	681b      	ldr	r3, [r3, #0]
 801040a:	683a      	ldr	r2, [r7, #0]
 801040c:	430a      	orrs	r2, r1
 801040e:	615a      	str	r2, [r3, #20]
 8010410:	2300      	movs	r3, #0
 8010412:	e006      	b.n	8010422 <HAL_CAN_ActivateNotification+0x40>
 8010414:	687b      	ldr	r3, [r7, #4]
 8010416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010418:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 801041c:	687b      	ldr	r3, [r7, #4]
 801041e:	625a      	str	r2, [r3, #36]	; 0x24
 8010420:	2301      	movs	r3, #1
 8010422:	4618      	mov	r0, r3
 8010424:	3714      	adds	r7, #20
 8010426:	46bd      	mov	sp, r7
 8010428:	f85d 7b04 	ldr.w	r7, [sp], #4
 801042c:	4770      	bx	lr

0801042e <HAL_CAN_DeactivateNotification>:
 801042e:	b480      	push	{r7}
 8010430:	b085      	sub	sp, #20
 8010432:	af00      	add	r7, sp, #0
 8010434:	6078      	str	r0, [r7, #4]
 8010436:	6039      	str	r1, [r7, #0]
 8010438:	687b      	ldr	r3, [r7, #4]
 801043a:	f893 3020 	ldrb.w	r3, [r3, #32]
 801043e:	73fb      	strb	r3, [r7, #15]
 8010440:	7bfb      	ldrb	r3, [r7, #15]
 8010442:	2b01      	cmp	r3, #1
 8010444:	d002      	beq.n	801044c <HAL_CAN_DeactivateNotification+0x1e>
 8010446:	7bfb      	ldrb	r3, [r7, #15]
 8010448:	2b02      	cmp	r3, #2
 801044a:	d10a      	bne.n	8010462 <HAL_CAN_DeactivateNotification+0x34>
 801044c:	687b      	ldr	r3, [r7, #4]
 801044e:	681b      	ldr	r3, [r3, #0]
 8010450:	6959      	ldr	r1, [r3, #20]
 8010452:	683b      	ldr	r3, [r7, #0]
 8010454:	43da      	mvns	r2, r3
 8010456:	687b      	ldr	r3, [r7, #4]
 8010458:	681b      	ldr	r3, [r3, #0]
 801045a:	400a      	ands	r2, r1
 801045c:	615a      	str	r2, [r3, #20]
 801045e:	2300      	movs	r3, #0
 8010460:	e006      	b.n	8010470 <HAL_CAN_DeactivateNotification+0x42>
 8010462:	687b      	ldr	r3, [r7, #4]
 8010464:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010466:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 801046a:	687b      	ldr	r3, [r7, #4]
 801046c:	625a      	str	r2, [r3, #36]	; 0x24
 801046e:	2301      	movs	r3, #1
 8010470:	4618      	mov	r0, r3
 8010472:	3714      	adds	r7, #20
 8010474:	46bd      	mov	sp, r7
 8010476:	f85d 7b04 	ldr.w	r7, [sp], #4
 801047a:	4770      	bx	lr

0801047c <HAL_CAN_IRQHandler>:
 801047c:	b580      	push	{r7, lr}
 801047e:	b08a      	sub	sp, #40	; 0x28
 8010480:	af00      	add	r7, sp, #0
 8010482:	6078      	str	r0, [r7, #4]
 8010484:	2300      	movs	r3, #0
 8010486:	627b      	str	r3, [r7, #36]	; 0x24
 8010488:	687b      	ldr	r3, [r7, #4]
 801048a:	681b      	ldr	r3, [r3, #0]
 801048c:	695b      	ldr	r3, [r3, #20]
 801048e:	623b      	str	r3, [r7, #32]
 8010490:	687b      	ldr	r3, [r7, #4]
 8010492:	681b      	ldr	r3, [r3, #0]
 8010494:	685b      	ldr	r3, [r3, #4]
 8010496:	61fb      	str	r3, [r7, #28]
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	681b      	ldr	r3, [r3, #0]
 801049c:	689b      	ldr	r3, [r3, #8]
 801049e:	61bb      	str	r3, [r7, #24]
 80104a0:	687b      	ldr	r3, [r7, #4]
 80104a2:	681b      	ldr	r3, [r3, #0]
 80104a4:	68db      	ldr	r3, [r3, #12]
 80104a6:	617b      	str	r3, [r7, #20]
 80104a8:	687b      	ldr	r3, [r7, #4]
 80104aa:	681b      	ldr	r3, [r3, #0]
 80104ac:	691b      	ldr	r3, [r3, #16]
 80104ae:	613b      	str	r3, [r7, #16]
 80104b0:	687b      	ldr	r3, [r7, #4]
 80104b2:	681b      	ldr	r3, [r3, #0]
 80104b4:	699b      	ldr	r3, [r3, #24]
 80104b6:	60fb      	str	r3, [r7, #12]
 80104b8:	6a3b      	ldr	r3, [r7, #32]
 80104ba:	f003 0301 	and.w	r3, r3, #1
 80104be:	2b00      	cmp	r3, #0
 80104c0:	d07c      	beq.n	80105bc <HAL_CAN_IRQHandler+0x140>
 80104c2:	69bb      	ldr	r3, [r7, #24]
 80104c4:	f003 0301 	and.w	r3, r3, #1
 80104c8:	2b00      	cmp	r3, #0
 80104ca:	d023      	beq.n	8010514 <HAL_CAN_IRQHandler+0x98>
 80104cc:	687b      	ldr	r3, [r7, #4]
 80104ce:	681b      	ldr	r3, [r3, #0]
 80104d0:	2201      	movs	r2, #1
 80104d2:	609a      	str	r2, [r3, #8]
 80104d4:	69bb      	ldr	r3, [r7, #24]
 80104d6:	f003 0302 	and.w	r3, r3, #2
 80104da:	2b00      	cmp	r3, #0
 80104dc:	d003      	beq.n	80104e6 <HAL_CAN_IRQHandler+0x6a>
 80104de:	6878      	ldr	r0, [r7, #4]
 80104e0:	f000 f983 	bl	80107ea <HAL_CAN_TxMailbox0CompleteCallback>
 80104e4:	e016      	b.n	8010514 <HAL_CAN_IRQHandler+0x98>
 80104e6:	69bb      	ldr	r3, [r7, #24]
 80104e8:	f003 0304 	and.w	r3, r3, #4
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	d004      	beq.n	80104fa <HAL_CAN_IRQHandler+0x7e>
 80104f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80104f2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80104f6:	627b      	str	r3, [r7, #36]	; 0x24
 80104f8:	e00c      	b.n	8010514 <HAL_CAN_IRQHandler+0x98>
 80104fa:	69bb      	ldr	r3, [r7, #24]
 80104fc:	f003 0308 	and.w	r3, r3, #8
 8010500:	2b00      	cmp	r3, #0
 8010502:	d004      	beq.n	801050e <HAL_CAN_IRQHandler+0x92>
 8010504:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010506:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 801050a:	627b      	str	r3, [r7, #36]	; 0x24
 801050c:	e002      	b.n	8010514 <HAL_CAN_IRQHandler+0x98>
 801050e:	6878      	ldr	r0, [r7, #4]
 8010510:	f000 f989 	bl	8010826 <HAL_CAN_TxMailbox0AbortCallback>
 8010514:	69bb      	ldr	r3, [r7, #24]
 8010516:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801051a:	2b00      	cmp	r3, #0
 801051c:	d024      	beq.n	8010568 <HAL_CAN_IRQHandler+0xec>
 801051e:	687b      	ldr	r3, [r7, #4]
 8010520:	681b      	ldr	r3, [r3, #0]
 8010522:	f44f 7280 	mov.w	r2, #256	; 0x100
 8010526:	609a      	str	r2, [r3, #8]
 8010528:	69bb      	ldr	r3, [r7, #24]
 801052a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 801052e:	2b00      	cmp	r3, #0
 8010530:	d003      	beq.n	801053a <HAL_CAN_IRQHandler+0xbe>
 8010532:	6878      	ldr	r0, [r7, #4]
 8010534:	f000 f963 	bl	80107fe <HAL_CAN_TxMailbox1CompleteCallback>
 8010538:	e016      	b.n	8010568 <HAL_CAN_IRQHandler+0xec>
 801053a:	69bb      	ldr	r3, [r7, #24]
 801053c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8010540:	2b00      	cmp	r3, #0
 8010542:	d004      	beq.n	801054e <HAL_CAN_IRQHandler+0xd2>
 8010544:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010546:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801054a:	627b      	str	r3, [r7, #36]	; 0x24
 801054c:	e00c      	b.n	8010568 <HAL_CAN_IRQHandler+0xec>
 801054e:	69bb      	ldr	r3, [r7, #24]
 8010550:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8010554:	2b00      	cmp	r3, #0
 8010556:	d004      	beq.n	8010562 <HAL_CAN_IRQHandler+0xe6>
 8010558:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801055a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801055e:	627b      	str	r3, [r7, #36]	; 0x24
 8010560:	e002      	b.n	8010568 <HAL_CAN_IRQHandler+0xec>
 8010562:	6878      	ldr	r0, [r7, #4]
 8010564:	f000 f969 	bl	801083a <HAL_CAN_TxMailbox1AbortCallback>
 8010568:	69bb      	ldr	r3, [r7, #24]
 801056a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801056e:	2b00      	cmp	r3, #0
 8010570:	d024      	beq.n	80105bc <HAL_CAN_IRQHandler+0x140>
 8010572:	687b      	ldr	r3, [r7, #4]
 8010574:	681b      	ldr	r3, [r3, #0]
 8010576:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 801057a:	609a      	str	r2, [r3, #8]
 801057c:	69bb      	ldr	r3, [r7, #24]
 801057e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8010582:	2b00      	cmp	r3, #0
 8010584:	d003      	beq.n	801058e <HAL_CAN_IRQHandler+0x112>
 8010586:	6878      	ldr	r0, [r7, #4]
 8010588:	f000 f943 	bl	8010812 <HAL_CAN_TxMailbox2CompleteCallback>
 801058c:	e016      	b.n	80105bc <HAL_CAN_IRQHandler+0x140>
 801058e:	69bb      	ldr	r3, [r7, #24]
 8010590:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8010594:	2b00      	cmp	r3, #0
 8010596:	d004      	beq.n	80105a2 <HAL_CAN_IRQHandler+0x126>
 8010598:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801059a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801059e:	627b      	str	r3, [r7, #36]	; 0x24
 80105a0:	e00c      	b.n	80105bc <HAL_CAN_IRQHandler+0x140>
 80105a2:	69bb      	ldr	r3, [r7, #24]
 80105a4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80105a8:	2b00      	cmp	r3, #0
 80105aa:	d004      	beq.n	80105b6 <HAL_CAN_IRQHandler+0x13a>
 80105ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80105ae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80105b2:	627b      	str	r3, [r7, #36]	; 0x24
 80105b4:	e002      	b.n	80105bc <HAL_CAN_IRQHandler+0x140>
 80105b6:	6878      	ldr	r0, [r7, #4]
 80105b8:	f000 f949 	bl	801084e <HAL_CAN_TxMailbox2AbortCallback>
 80105bc:	6a3b      	ldr	r3, [r7, #32]
 80105be:	f003 0308 	and.w	r3, r3, #8
 80105c2:	2b00      	cmp	r3, #0
 80105c4:	d00c      	beq.n	80105e0 <HAL_CAN_IRQHandler+0x164>
 80105c6:	697b      	ldr	r3, [r7, #20]
 80105c8:	f003 0310 	and.w	r3, r3, #16
 80105cc:	2b00      	cmp	r3, #0
 80105ce:	d007      	beq.n	80105e0 <HAL_CAN_IRQHandler+0x164>
 80105d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80105d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80105d6:	627b      	str	r3, [r7, #36]	; 0x24
 80105d8:	687b      	ldr	r3, [r7, #4]
 80105da:	681b      	ldr	r3, [r3, #0]
 80105dc:	2210      	movs	r2, #16
 80105de:	60da      	str	r2, [r3, #12]
 80105e0:	6a3b      	ldr	r3, [r7, #32]
 80105e2:	f003 0304 	and.w	r3, r3, #4
 80105e6:	2b00      	cmp	r3, #0
 80105e8:	d00b      	beq.n	8010602 <HAL_CAN_IRQHandler+0x186>
 80105ea:	697b      	ldr	r3, [r7, #20]
 80105ec:	f003 0308 	and.w	r3, r3, #8
 80105f0:	2b00      	cmp	r3, #0
 80105f2:	d006      	beq.n	8010602 <HAL_CAN_IRQHandler+0x186>
 80105f4:	687b      	ldr	r3, [r7, #4]
 80105f6:	681b      	ldr	r3, [r3, #0]
 80105f8:	2208      	movs	r2, #8
 80105fa:	60da      	str	r2, [r3, #12]
 80105fc:	6878      	ldr	r0, [r7, #4]
 80105fe:	f000 f930 	bl	8010862 <HAL_CAN_RxFifo0FullCallback>
 8010602:	6a3b      	ldr	r3, [r7, #32]
 8010604:	f003 0302 	and.w	r3, r3, #2
 8010608:	2b00      	cmp	r3, #0
 801060a:	d009      	beq.n	8010620 <HAL_CAN_IRQHandler+0x1a4>
 801060c:	687b      	ldr	r3, [r7, #4]
 801060e:	681b      	ldr	r3, [r3, #0]
 8010610:	68db      	ldr	r3, [r3, #12]
 8010612:	f003 0303 	and.w	r3, r3, #3
 8010616:	2b00      	cmp	r3, #0
 8010618:	d002      	beq.n	8010620 <HAL_CAN_IRQHandler+0x1a4>
 801061a:	6878      	ldr	r0, [r7, #4]
 801061c:	f7f0 fe08 	bl	8001230 <HAL_CAN_RxFifo0MsgPendingCallback>
 8010620:	6a3b      	ldr	r3, [r7, #32]
 8010622:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8010626:	2b00      	cmp	r3, #0
 8010628:	d00c      	beq.n	8010644 <HAL_CAN_IRQHandler+0x1c8>
 801062a:	693b      	ldr	r3, [r7, #16]
 801062c:	f003 0310 	and.w	r3, r3, #16
 8010630:	2b00      	cmp	r3, #0
 8010632:	d007      	beq.n	8010644 <HAL_CAN_IRQHandler+0x1c8>
 8010634:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010636:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801063a:	627b      	str	r3, [r7, #36]	; 0x24
 801063c:	687b      	ldr	r3, [r7, #4]
 801063e:	681b      	ldr	r3, [r3, #0]
 8010640:	2210      	movs	r2, #16
 8010642:	611a      	str	r2, [r3, #16]
 8010644:	6a3b      	ldr	r3, [r7, #32]
 8010646:	f003 0320 	and.w	r3, r3, #32
 801064a:	2b00      	cmp	r3, #0
 801064c:	d00b      	beq.n	8010666 <HAL_CAN_IRQHandler+0x1ea>
 801064e:	693b      	ldr	r3, [r7, #16]
 8010650:	f003 0308 	and.w	r3, r3, #8
 8010654:	2b00      	cmp	r3, #0
 8010656:	d006      	beq.n	8010666 <HAL_CAN_IRQHandler+0x1ea>
 8010658:	687b      	ldr	r3, [r7, #4]
 801065a:	681b      	ldr	r3, [r3, #0]
 801065c:	2208      	movs	r2, #8
 801065e:	611a      	str	r2, [r3, #16]
 8010660:	6878      	ldr	r0, [r7, #4]
 8010662:	f000 f908 	bl	8010876 <HAL_CAN_RxFifo1FullCallback>
 8010666:	6a3b      	ldr	r3, [r7, #32]
 8010668:	f003 0310 	and.w	r3, r3, #16
 801066c:	2b00      	cmp	r3, #0
 801066e:	d009      	beq.n	8010684 <HAL_CAN_IRQHandler+0x208>
 8010670:	687b      	ldr	r3, [r7, #4]
 8010672:	681b      	ldr	r3, [r3, #0]
 8010674:	691b      	ldr	r3, [r3, #16]
 8010676:	f003 0303 	and.w	r3, r3, #3
 801067a:	2b00      	cmp	r3, #0
 801067c:	d002      	beq.n	8010684 <HAL_CAN_IRQHandler+0x208>
 801067e:	6878      	ldr	r0, [r7, #4]
 8010680:	f7f0 fde1 	bl	8001246 <HAL_CAN_RxFifo1MsgPendingCallback>
 8010684:	6a3b      	ldr	r3, [r7, #32]
 8010686:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801068a:	2b00      	cmp	r3, #0
 801068c:	d00b      	beq.n	80106a6 <HAL_CAN_IRQHandler+0x22a>
 801068e:	69fb      	ldr	r3, [r7, #28]
 8010690:	f003 0310 	and.w	r3, r3, #16
 8010694:	2b00      	cmp	r3, #0
 8010696:	d006      	beq.n	80106a6 <HAL_CAN_IRQHandler+0x22a>
 8010698:	687b      	ldr	r3, [r7, #4]
 801069a:	681b      	ldr	r3, [r3, #0]
 801069c:	2210      	movs	r2, #16
 801069e:	605a      	str	r2, [r3, #4]
 80106a0:	6878      	ldr	r0, [r7, #4]
 80106a2:	f000 f8f2 	bl	801088a <HAL_CAN_SleepCallback>
 80106a6:	6a3b      	ldr	r3, [r7, #32]
 80106a8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80106ac:	2b00      	cmp	r3, #0
 80106ae:	d00b      	beq.n	80106c8 <HAL_CAN_IRQHandler+0x24c>
 80106b0:	69fb      	ldr	r3, [r7, #28]
 80106b2:	f003 0308 	and.w	r3, r3, #8
 80106b6:	2b00      	cmp	r3, #0
 80106b8:	d006      	beq.n	80106c8 <HAL_CAN_IRQHandler+0x24c>
 80106ba:	687b      	ldr	r3, [r7, #4]
 80106bc:	681b      	ldr	r3, [r3, #0]
 80106be:	2208      	movs	r2, #8
 80106c0:	605a      	str	r2, [r3, #4]
 80106c2:	6878      	ldr	r0, [r7, #4]
 80106c4:	f000 f8eb 	bl	801089e <HAL_CAN_WakeUpFromRxMsgCallback>
 80106c8:	6a3b      	ldr	r3, [r7, #32]
 80106ca:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80106ce:	2b00      	cmp	r3, #0
 80106d0:	d07b      	beq.n	80107ca <HAL_CAN_IRQHandler+0x34e>
 80106d2:	69fb      	ldr	r3, [r7, #28]
 80106d4:	f003 0304 	and.w	r3, r3, #4
 80106d8:	2b00      	cmp	r3, #0
 80106da:	d072      	beq.n	80107c2 <HAL_CAN_IRQHandler+0x346>
 80106dc:	6a3b      	ldr	r3, [r7, #32]
 80106de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80106e2:	2b00      	cmp	r3, #0
 80106e4:	d008      	beq.n	80106f8 <HAL_CAN_IRQHandler+0x27c>
 80106e6:	68fb      	ldr	r3, [r7, #12]
 80106e8:	f003 0301 	and.w	r3, r3, #1
 80106ec:	2b00      	cmp	r3, #0
 80106ee:	d003      	beq.n	80106f8 <HAL_CAN_IRQHandler+0x27c>
 80106f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80106f2:	f043 0301 	orr.w	r3, r3, #1
 80106f6:	627b      	str	r3, [r7, #36]	; 0x24
 80106f8:	6a3b      	ldr	r3, [r7, #32]
 80106fa:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80106fe:	2b00      	cmp	r3, #0
 8010700:	d008      	beq.n	8010714 <HAL_CAN_IRQHandler+0x298>
 8010702:	68fb      	ldr	r3, [r7, #12]
 8010704:	f003 0302 	and.w	r3, r3, #2
 8010708:	2b00      	cmp	r3, #0
 801070a:	d003      	beq.n	8010714 <HAL_CAN_IRQHandler+0x298>
 801070c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801070e:	f043 0302 	orr.w	r3, r3, #2
 8010712:	627b      	str	r3, [r7, #36]	; 0x24
 8010714:	6a3b      	ldr	r3, [r7, #32]
 8010716:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801071a:	2b00      	cmp	r3, #0
 801071c:	d008      	beq.n	8010730 <HAL_CAN_IRQHandler+0x2b4>
 801071e:	68fb      	ldr	r3, [r7, #12]
 8010720:	f003 0304 	and.w	r3, r3, #4
 8010724:	2b00      	cmp	r3, #0
 8010726:	d003      	beq.n	8010730 <HAL_CAN_IRQHandler+0x2b4>
 8010728:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801072a:	f043 0304 	orr.w	r3, r3, #4
 801072e:	627b      	str	r3, [r7, #36]	; 0x24
 8010730:	6a3b      	ldr	r3, [r7, #32]
 8010732:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8010736:	2b00      	cmp	r3, #0
 8010738:	d043      	beq.n	80107c2 <HAL_CAN_IRQHandler+0x346>
 801073a:	68fb      	ldr	r3, [r7, #12]
 801073c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8010740:	2b00      	cmp	r3, #0
 8010742:	d03e      	beq.n	80107c2 <HAL_CAN_IRQHandler+0x346>
 8010744:	68fb      	ldr	r3, [r7, #12]
 8010746:	f003 0370 	and.w	r3, r3, #112	; 0x70
 801074a:	2b60      	cmp	r3, #96	; 0x60
 801074c:	d02b      	beq.n	80107a6 <HAL_CAN_IRQHandler+0x32a>
 801074e:	2b60      	cmp	r3, #96	; 0x60
 8010750:	d82e      	bhi.n	80107b0 <HAL_CAN_IRQHandler+0x334>
 8010752:	2b50      	cmp	r3, #80	; 0x50
 8010754:	d022      	beq.n	801079c <HAL_CAN_IRQHandler+0x320>
 8010756:	2b50      	cmp	r3, #80	; 0x50
 8010758:	d82a      	bhi.n	80107b0 <HAL_CAN_IRQHandler+0x334>
 801075a:	2b40      	cmp	r3, #64	; 0x40
 801075c:	d019      	beq.n	8010792 <HAL_CAN_IRQHandler+0x316>
 801075e:	2b40      	cmp	r3, #64	; 0x40
 8010760:	d826      	bhi.n	80107b0 <HAL_CAN_IRQHandler+0x334>
 8010762:	2b30      	cmp	r3, #48	; 0x30
 8010764:	d010      	beq.n	8010788 <HAL_CAN_IRQHandler+0x30c>
 8010766:	2b30      	cmp	r3, #48	; 0x30
 8010768:	d822      	bhi.n	80107b0 <HAL_CAN_IRQHandler+0x334>
 801076a:	2b10      	cmp	r3, #16
 801076c:	d002      	beq.n	8010774 <HAL_CAN_IRQHandler+0x2f8>
 801076e:	2b20      	cmp	r3, #32
 8010770:	d005      	beq.n	801077e <HAL_CAN_IRQHandler+0x302>
 8010772:	e01d      	b.n	80107b0 <HAL_CAN_IRQHandler+0x334>
 8010774:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010776:	f043 0308 	orr.w	r3, r3, #8
 801077a:	627b      	str	r3, [r7, #36]	; 0x24
 801077c:	e019      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 801077e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010780:	f043 0310 	orr.w	r3, r3, #16
 8010784:	627b      	str	r3, [r7, #36]	; 0x24
 8010786:	e014      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 8010788:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801078a:	f043 0320 	orr.w	r3, r3, #32
 801078e:	627b      	str	r3, [r7, #36]	; 0x24
 8010790:	e00f      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 8010792:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010794:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010798:	627b      	str	r3, [r7, #36]	; 0x24
 801079a:	e00a      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 801079c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801079e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80107a2:	627b      	str	r3, [r7, #36]	; 0x24
 80107a4:	e005      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 80107a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80107a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80107ac:	627b      	str	r3, [r7, #36]	; 0x24
 80107ae:	e000      	b.n	80107b2 <HAL_CAN_IRQHandler+0x336>
 80107b0:	bf00      	nop
 80107b2:	687b      	ldr	r3, [r7, #4]
 80107b4:	681b      	ldr	r3, [r3, #0]
 80107b6:	699a      	ldr	r2, [r3, #24]
 80107b8:	687b      	ldr	r3, [r7, #4]
 80107ba:	681b      	ldr	r3, [r3, #0]
 80107bc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80107c0:	619a      	str	r2, [r3, #24]
 80107c2:	687b      	ldr	r3, [r7, #4]
 80107c4:	681b      	ldr	r3, [r3, #0]
 80107c6:	2204      	movs	r2, #4
 80107c8:	605a      	str	r2, [r3, #4]
 80107ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80107cc:	2b00      	cmp	r3, #0
 80107ce:	d008      	beq.n	80107e2 <HAL_CAN_IRQHandler+0x366>
 80107d0:	687b      	ldr	r3, [r7, #4]
 80107d2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80107d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80107d6:	431a      	orrs	r2, r3
 80107d8:	687b      	ldr	r3, [r7, #4]
 80107da:	625a      	str	r2, [r3, #36]	; 0x24
 80107dc:	6878      	ldr	r0, [r7, #4]
 80107de:	f000 f868 	bl	80108b2 <HAL_CAN_ErrorCallback>
 80107e2:	bf00      	nop
 80107e4:	3728      	adds	r7, #40	; 0x28
 80107e6:	46bd      	mov	sp, r7
 80107e8:	bd80      	pop	{r7, pc}

080107ea <HAL_CAN_TxMailbox0CompleteCallback>:
 80107ea:	b480      	push	{r7}
 80107ec:	b083      	sub	sp, #12
 80107ee:	af00      	add	r7, sp, #0
 80107f0:	6078      	str	r0, [r7, #4]
 80107f2:	bf00      	nop
 80107f4:	370c      	adds	r7, #12
 80107f6:	46bd      	mov	sp, r7
 80107f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107fc:	4770      	bx	lr

080107fe <HAL_CAN_TxMailbox1CompleteCallback>:
 80107fe:	b480      	push	{r7}
 8010800:	b083      	sub	sp, #12
 8010802:	af00      	add	r7, sp, #0
 8010804:	6078      	str	r0, [r7, #4]
 8010806:	bf00      	nop
 8010808:	370c      	adds	r7, #12
 801080a:	46bd      	mov	sp, r7
 801080c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010810:	4770      	bx	lr

08010812 <HAL_CAN_TxMailbox2CompleteCallback>:
 8010812:	b480      	push	{r7}
 8010814:	b083      	sub	sp, #12
 8010816:	af00      	add	r7, sp, #0
 8010818:	6078      	str	r0, [r7, #4]
 801081a:	bf00      	nop
 801081c:	370c      	adds	r7, #12
 801081e:	46bd      	mov	sp, r7
 8010820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010824:	4770      	bx	lr

08010826 <HAL_CAN_TxMailbox0AbortCallback>:
 8010826:	b480      	push	{r7}
 8010828:	b083      	sub	sp, #12
 801082a:	af00      	add	r7, sp, #0
 801082c:	6078      	str	r0, [r7, #4]
 801082e:	bf00      	nop
 8010830:	370c      	adds	r7, #12
 8010832:	46bd      	mov	sp, r7
 8010834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010838:	4770      	bx	lr

0801083a <HAL_CAN_TxMailbox1AbortCallback>:
 801083a:	b480      	push	{r7}
 801083c:	b083      	sub	sp, #12
 801083e:	af00      	add	r7, sp, #0
 8010840:	6078      	str	r0, [r7, #4]
 8010842:	bf00      	nop
 8010844:	370c      	adds	r7, #12
 8010846:	46bd      	mov	sp, r7
 8010848:	f85d 7b04 	ldr.w	r7, [sp], #4
 801084c:	4770      	bx	lr

0801084e <HAL_CAN_TxMailbox2AbortCallback>:
 801084e:	b480      	push	{r7}
 8010850:	b083      	sub	sp, #12
 8010852:	af00      	add	r7, sp, #0
 8010854:	6078      	str	r0, [r7, #4]
 8010856:	bf00      	nop
 8010858:	370c      	adds	r7, #12
 801085a:	46bd      	mov	sp, r7
 801085c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010860:	4770      	bx	lr

08010862 <HAL_CAN_RxFifo0FullCallback>:
 8010862:	b480      	push	{r7}
 8010864:	b083      	sub	sp, #12
 8010866:	af00      	add	r7, sp, #0
 8010868:	6078      	str	r0, [r7, #4]
 801086a:	bf00      	nop
 801086c:	370c      	adds	r7, #12
 801086e:	46bd      	mov	sp, r7
 8010870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010874:	4770      	bx	lr

08010876 <HAL_CAN_RxFifo1FullCallback>:
 8010876:	b480      	push	{r7}
 8010878:	b083      	sub	sp, #12
 801087a:	af00      	add	r7, sp, #0
 801087c:	6078      	str	r0, [r7, #4]
 801087e:	bf00      	nop
 8010880:	370c      	adds	r7, #12
 8010882:	46bd      	mov	sp, r7
 8010884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010888:	4770      	bx	lr

0801088a <HAL_CAN_SleepCallback>:
 801088a:	b480      	push	{r7}
 801088c:	b083      	sub	sp, #12
 801088e:	af00      	add	r7, sp, #0
 8010890:	6078      	str	r0, [r7, #4]
 8010892:	bf00      	nop
 8010894:	370c      	adds	r7, #12
 8010896:	46bd      	mov	sp, r7
 8010898:	f85d 7b04 	ldr.w	r7, [sp], #4
 801089c:	4770      	bx	lr

0801089e <HAL_CAN_WakeUpFromRxMsgCallback>:
 801089e:	b480      	push	{r7}
 80108a0:	b083      	sub	sp, #12
 80108a2:	af00      	add	r7, sp, #0
 80108a4:	6078      	str	r0, [r7, #4]
 80108a6:	bf00      	nop
 80108a8:	370c      	adds	r7, #12
 80108aa:	46bd      	mov	sp, r7
 80108ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108b0:	4770      	bx	lr

080108b2 <HAL_CAN_ErrorCallback>:
 80108b2:	b480      	push	{r7}
 80108b4:	b083      	sub	sp, #12
 80108b6:	af00      	add	r7, sp, #0
 80108b8:	6078      	str	r0, [r7, #4]
 80108ba:	bf00      	nop
 80108bc:	370c      	adds	r7, #12
 80108be:	46bd      	mov	sp, r7
 80108c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108c4:	4770      	bx	lr
	...

080108c8 <__NVIC_SetPriorityGrouping>:
 80108c8:	b480      	push	{r7}
 80108ca:	b085      	sub	sp, #20
 80108cc:	af00      	add	r7, sp, #0
 80108ce:	6078      	str	r0, [r7, #4]
 80108d0:	687b      	ldr	r3, [r7, #4]
 80108d2:	f003 0307 	and.w	r3, r3, #7
 80108d6:	60fb      	str	r3, [r7, #12]
 80108d8:	4b0c      	ldr	r3, [pc, #48]	; (801090c <__NVIC_SetPriorityGrouping+0x44>)
 80108da:	68db      	ldr	r3, [r3, #12]
 80108dc:	60bb      	str	r3, [r7, #8]
 80108de:	68ba      	ldr	r2, [r7, #8]
 80108e0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80108e4:	4013      	ands	r3, r2
 80108e6:	60bb      	str	r3, [r7, #8]
 80108e8:	68fb      	ldr	r3, [r7, #12]
 80108ea:	021a      	lsls	r2, r3, #8
 80108ec:	68bb      	ldr	r3, [r7, #8]
 80108ee:	4313      	orrs	r3, r2
 80108f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80108f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80108f8:	60bb      	str	r3, [r7, #8]
 80108fa:	4a04      	ldr	r2, [pc, #16]	; (801090c <__NVIC_SetPriorityGrouping+0x44>)
 80108fc:	68bb      	ldr	r3, [r7, #8]
 80108fe:	60d3      	str	r3, [r2, #12]
 8010900:	bf00      	nop
 8010902:	3714      	adds	r7, #20
 8010904:	46bd      	mov	sp, r7
 8010906:	f85d 7b04 	ldr.w	r7, [sp], #4
 801090a:	4770      	bx	lr
 801090c:	e000ed00 	.word	0xe000ed00

08010910 <__NVIC_GetPriorityGrouping>:
 8010910:	b480      	push	{r7}
 8010912:	af00      	add	r7, sp, #0
 8010914:	4b04      	ldr	r3, [pc, #16]	; (8010928 <__NVIC_GetPriorityGrouping+0x18>)
 8010916:	68db      	ldr	r3, [r3, #12]
 8010918:	0a1b      	lsrs	r3, r3, #8
 801091a:	f003 0307 	and.w	r3, r3, #7
 801091e:	4618      	mov	r0, r3
 8010920:	46bd      	mov	sp, r7
 8010922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010926:	4770      	bx	lr
 8010928:	e000ed00 	.word	0xe000ed00

0801092c <__NVIC_EnableIRQ>:
 801092c:	b480      	push	{r7}
 801092e:	b083      	sub	sp, #12
 8010930:	af00      	add	r7, sp, #0
 8010932:	4603      	mov	r3, r0
 8010934:	71fb      	strb	r3, [r7, #7]
 8010936:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801093a:	2b00      	cmp	r3, #0
 801093c:	db0b      	blt.n	8010956 <__NVIC_EnableIRQ+0x2a>
 801093e:	79fb      	ldrb	r3, [r7, #7]
 8010940:	f003 021f 	and.w	r2, r3, #31
 8010944:	4907      	ldr	r1, [pc, #28]	; (8010964 <__NVIC_EnableIRQ+0x38>)
 8010946:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801094a:	095b      	lsrs	r3, r3, #5
 801094c:	2001      	movs	r0, #1
 801094e:	fa00 f202 	lsl.w	r2, r0, r2
 8010952:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8010956:	bf00      	nop
 8010958:	370c      	adds	r7, #12
 801095a:	46bd      	mov	sp, r7
 801095c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010960:	4770      	bx	lr
 8010962:	bf00      	nop
 8010964:	e000e100 	.word	0xe000e100

08010968 <__NVIC_SetPriority>:
 8010968:	b480      	push	{r7}
 801096a:	b083      	sub	sp, #12
 801096c:	af00      	add	r7, sp, #0
 801096e:	4603      	mov	r3, r0
 8010970:	6039      	str	r1, [r7, #0]
 8010972:	71fb      	strb	r3, [r7, #7]
 8010974:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010978:	2b00      	cmp	r3, #0
 801097a:	db0a      	blt.n	8010992 <__NVIC_SetPriority+0x2a>
 801097c:	683b      	ldr	r3, [r7, #0]
 801097e:	b2da      	uxtb	r2, r3
 8010980:	490c      	ldr	r1, [pc, #48]	; (80109b4 <__NVIC_SetPriority+0x4c>)
 8010982:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010986:	0112      	lsls	r2, r2, #4
 8010988:	b2d2      	uxtb	r2, r2
 801098a:	440b      	add	r3, r1
 801098c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8010990:	e00a      	b.n	80109a8 <__NVIC_SetPriority+0x40>
 8010992:	683b      	ldr	r3, [r7, #0]
 8010994:	b2da      	uxtb	r2, r3
 8010996:	4908      	ldr	r1, [pc, #32]	; (80109b8 <__NVIC_SetPriority+0x50>)
 8010998:	79fb      	ldrb	r3, [r7, #7]
 801099a:	f003 030f 	and.w	r3, r3, #15
 801099e:	3b04      	subs	r3, #4
 80109a0:	0112      	lsls	r2, r2, #4
 80109a2:	b2d2      	uxtb	r2, r2
 80109a4:	440b      	add	r3, r1
 80109a6:	761a      	strb	r2, [r3, #24]
 80109a8:	bf00      	nop
 80109aa:	370c      	adds	r7, #12
 80109ac:	46bd      	mov	sp, r7
 80109ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109b2:	4770      	bx	lr
 80109b4:	e000e100 	.word	0xe000e100
 80109b8:	e000ed00 	.word	0xe000ed00

080109bc <NVIC_EncodePriority>:
 80109bc:	b480      	push	{r7}
 80109be:	b089      	sub	sp, #36	; 0x24
 80109c0:	af00      	add	r7, sp, #0
 80109c2:	60f8      	str	r0, [r7, #12]
 80109c4:	60b9      	str	r1, [r7, #8]
 80109c6:	607a      	str	r2, [r7, #4]
 80109c8:	68fb      	ldr	r3, [r7, #12]
 80109ca:	f003 0307 	and.w	r3, r3, #7
 80109ce:	61fb      	str	r3, [r7, #28]
 80109d0:	69fb      	ldr	r3, [r7, #28]
 80109d2:	f1c3 0307 	rsb	r3, r3, #7
 80109d6:	2b04      	cmp	r3, #4
 80109d8:	bf28      	it	cs
 80109da:	2304      	movcs	r3, #4
 80109dc:	61bb      	str	r3, [r7, #24]
 80109de:	69fb      	ldr	r3, [r7, #28]
 80109e0:	3304      	adds	r3, #4
 80109e2:	2b06      	cmp	r3, #6
 80109e4:	d902      	bls.n	80109ec <NVIC_EncodePriority+0x30>
 80109e6:	69fb      	ldr	r3, [r7, #28]
 80109e8:	3b03      	subs	r3, #3
 80109ea:	e000      	b.n	80109ee <NVIC_EncodePriority+0x32>
 80109ec:	2300      	movs	r3, #0
 80109ee:	617b      	str	r3, [r7, #20]
 80109f0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80109f4:	69bb      	ldr	r3, [r7, #24]
 80109f6:	fa02 f303 	lsl.w	r3, r2, r3
 80109fa:	43da      	mvns	r2, r3
 80109fc:	68bb      	ldr	r3, [r7, #8]
 80109fe:	401a      	ands	r2, r3
 8010a00:	697b      	ldr	r3, [r7, #20]
 8010a02:	409a      	lsls	r2, r3
 8010a04:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010a08:	697b      	ldr	r3, [r7, #20]
 8010a0a:	fa01 f303 	lsl.w	r3, r1, r3
 8010a0e:	43d9      	mvns	r1, r3
 8010a10:	687b      	ldr	r3, [r7, #4]
 8010a12:	400b      	ands	r3, r1
 8010a14:	4313      	orrs	r3, r2
 8010a16:	4618      	mov	r0, r3
 8010a18:	3724      	adds	r7, #36	; 0x24
 8010a1a:	46bd      	mov	sp, r7
 8010a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a20:	4770      	bx	lr

08010a22 <HAL_NVIC_SetPriorityGrouping>:
 8010a22:	b580      	push	{r7, lr}
 8010a24:	b082      	sub	sp, #8
 8010a26:	af00      	add	r7, sp, #0
 8010a28:	6078      	str	r0, [r7, #4]
 8010a2a:	6878      	ldr	r0, [r7, #4]
 8010a2c:	f7ff ff4c 	bl	80108c8 <__NVIC_SetPriorityGrouping>
 8010a30:	bf00      	nop
 8010a32:	3708      	adds	r7, #8
 8010a34:	46bd      	mov	sp, r7
 8010a36:	bd80      	pop	{r7, pc}

08010a38 <HAL_NVIC_SetPriority>:
 8010a38:	b580      	push	{r7, lr}
 8010a3a:	b086      	sub	sp, #24
 8010a3c:	af00      	add	r7, sp, #0
 8010a3e:	4603      	mov	r3, r0
 8010a40:	60b9      	str	r1, [r7, #8]
 8010a42:	607a      	str	r2, [r7, #4]
 8010a44:	73fb      	strb	r3, [r7, #15]
 8010a46:	2300      	movs	r3, #0
 8010a48:	617b      	str	r3, [r7, #20]
 8010a4a:	f7ff ff61 	bl	8010910 <__NVIC_GetPriorityGrouping>
 8010a4e:	6178      	str	r0, [r7, #20]
 8010a50:	687a      	ldr	r2, [r7, #4]
 8010a52:	68b9      	ldr	r1, [r7, #8]
 8010a54:	6978      	ldr	r0, [r7, #20]
 8010a56:	f7ff ffb1 	bl	80109bc <NVIC_EncodePriority>
 8010a5a:	4602      	mov	r2, r0
 8010a5c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8010a60:	4611      	mov	r1, r2
 8010a62:	4618      	mov	r0, r3
 8010a64:	f7ff ff80 	bl	8010968 <__NVIC_SetPriority>
 8010a68:	bf00      	nop
 8010a6a:	3718      	adds	r7, #24
 8010a6c:	46bd      	mov	sp, r7
 8010a6e:	bd80      	pop	{r7, pc}

08010a70 <HAL_NVIC_EnableIRQ>:
 8010a70:	b580      	push	{r7, lr}
 8010a72:	b082      	sub	sp, #8
 8010a74:	af00      	add	r7, sp, #0
 8010a76:	4603      	mov	r3, r0
 8010a78:	71fb      	strb	r3, [r7, #7]
 8010a7a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010a7e:	4618      	mov	r0, r3
 8010a80:	f7ff ff54 	bl	801092c <__NVIC_EnableIRQ>
 8010a84:	bf00      	nop
 8010a86:	3708      	adds	r7, #8
 8010a88:	46bd      	mov	sp, r7
 8010a8a:	bd80      	pop	{r7, pc}

08010a8c <HAL_DMA_Init>:
 8010a8c:	b580      	push	{r7, lr}
 8010a8e:	b086      	sub	sp, #24
 8010a90:	af00      	add	r7, sp, #0
 8010a92:	6078      	str	r0, [r7, #4]
 8010a94:	2300      	movs	r3, #0
 8010a96:	617b      	str	r3, [r7, #20]
 8010a98:	f7fe fe04 	bl	800f6a4 <HAL_GetTick>
 8010a9c:	6138      	str	r0, [r7, #16]
 8010a9e:	687b      	ldr	r3, [r7, #4]
 8010aa0:	2b00      	cmp	r3, #0
 8010aa2:	d101      	bne.n	8010aa8 <HAL_DMA_Init+0x1c>
 8010aa4:	2301      	movs	r3, #1
 8010aa6:	e099      	b.n	8010bdc <HAL_DMA_Init+0x150>
 8010aa8:	687b      	ldr	r3, [r7, #4]
 8010aaa:	2202      	movs	r2, #2
 8010aac:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010ab0:	687b      	ldr	r3, [r7, #4]
 8010ab2:	2200      	movs	r2, #0
 8010ab4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010ab8:	687b      	ldr	r3, [r7, #4]
 8010aba:	681b      	ldr	r3, [r3, #0]
 8010abc:	681a      	ldr	r2, [r3, #0]
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	681b      	ldr	r3, [r3, #0]
 8010ac2:	f022 0201 	bic.w	r2, r2, #1
 8010ac6:	601a      	str	r2, [r3, #0]
 8010ac8:	e00f      	b.n	8010aea <HAL_DMA_Init+0x5e>
 8010aca:	f7fe fdeb 	bl	800f6a4 <HAL_GetTick>
 8010ace:	4602      	mov	r2, r0
 8010ad0:	693b      	ldr	r3, [r7, #16]
 8010ad2:	1ad3      	subs	r3, r2, r3
 8010ad4:	2b05      	cmp	r3, #5
 8010ad6:	d908      	bls.n	8010aea <HAL_DMA_Init+0x5e>
 8010ad8:	687b      	ldr	r3, [r7, #4]
 8010ada:	2220      	movs	r2, #32
 8010adc:	655a      	str	r2, [r3, #84]	; 0x54
 8010ade:	687b      	ldr	r3, [r7, #4]
 8010ae0:	2203      	movs	r2, #3
 8010ae2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010ae6:	2303      	movs	r3, #3
 8010ae8:	e078      	b.n	8010bdc <HAL_DMA_Init+0x150>
 8010aea:	687b      	ldr	r3, [r7, #4]
 8010aec:	681b      	ldr	r3, [r3, #0]
 8010aee:	681b      	ldr	r3, [r3, #0]
 8010af0:	f003 0301 	and.w	r3, r3, #1
 8010af4:	2b00      	cmp	r3, #0
 8010af6:	d1e8      	bne.n	8010aca <HAL_DMA_Init+0x3e>
 8010af8:	687b      	ldr	r3, [r7, #4]
 8010afa:	681b      	ldr	r3, [r3, #0]
 8010afc:	681b      	ldr	r3, [r3, #0]
 8010afe:	617b      	str	r3, [r7, #20]
 8010b00:	697a      	ldr	r2, [r7, #20]
 8010b02:	4b38      	ldr	r3, [pc, #224]	; (8010be4 <HAL_DMA_Init+0x158>)
 8010b04:	4013      	ands	r3, r2
 8010b06:	617b      	str	r3, [r7, #20]
 8010b08:	687b      	ldr	r3, [r7, #4]
 8010b0a:	685a      	ldr	r2, [r3, #4]
 8010b0c:	687b      	ldr	r3, [r7, #4]
 8010b0e:	689b      	ldr	r3, [r3, #8]
 8010b10:	431a      	orrs	r2, r3
 8010b12:	687b      	ldr	r3, [r7, #4]
 8010b14:	68db      	ldr	r3, [r3, #12]
 8010b16:	431a      	orrs	r2, r3
 8010b18:	687b      	ldr	r3, [r7, #4]
 8010b1a:	691b      	ldr	r3, [r3, #16]
 8010b1c:	431a      	orrs	r2, r3
 8010b1e:	687b      	ldr	r3, [r7, #4]
 8010b20:	695b      	ldr	r3, [r3, #20]
 8010b22:	431a      	orrs	r2, r3
 8010b24:	687b      	ldr	r3, [r7, #4]
 8010b26:	699b      	ldr	r3, [r3, #24]
 8010b28:	431a      	orrs	r2, r3
 8010b2a:	687b      	ldr	r3, [r7, #4]
 8010b2c:	69db      	ldr	r3, [r3, #28]
 8010b2e:	431a      	orrs	r2, r3
 8010b30:	687b      	ldr	r3, [r7, #4]
 8010b32:	6a1b      	ldr	r3, [r3, #32]
 8010b34:	4313      	orrs	r3, r2
 8010b36:	697a      	ldr	r2, [r7, #20]
 8010b38:	4313      	orrs	r3, r2
 8010b3a:	617b      	str	r3, [r7, #20]
 8010b3c:	687b      	ldr	r3, [r7, #4]
 8010b3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010b40:	2b04      	cmp	r3, #4
 8010b42:	d107      	bne.n	8010b54 <HAL_DMA_Init+0xc8>
 8010b44:	687b      	ldr	r3, [r7, #4]
 8010b46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010b48:	687b      	ldr	r3, [r7, #4]
 8010b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b4c:	4313      	orrs	r3, r2
 8010b4e:	697a      	ldr	r2, [r7, #20]
 8010b50:	4313      	orrs	r3, r2
 8010b52:	617b      	str	r3, [r7, #20]
 8010b54:	687b      	ldr	r3, [r7, #4]
 8010b56:	681b      	ldr	r3, [r3, #0]
 8010b58:	697a      	ldr	r2, [r7, #20]
 8010b5a:	601a      	str	r2, [r3, #0]
 8010b5c:	687b      	ldr	r3, [r7, #4]
 8010b5e:	681b      	ldr	r3, [r3, #0]
 8010b60:	695b      	ldr	r3, [r3, #20]
 8010b62:	617b      	str	r3, [r7, #20]
 8010b64:	697b      	ldr	r3, [r7, #20]
 8010b66:	f023 0307 	bic.w	r3, r3, #7
 8010b6a:	617b      	str	r3, [r7, #20]
 8010b6c:	687b      	ldr	r3, [r7, #4]
 8010b6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010b70:	697a      	ldr	r2, [r7, #20]
 8010b72:	4313      	orrs	r3, r2
 8010b74:	617b      	str	r3, [r7, #20]
 8010b76:	687b      	ldr	r3, [r7, #4]
 8010b78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010b7a:	2b04      	cmp	r3, #4
 8010b7c:	d117      	bne.n	8010bae <HAL_DMA_Init+0x122>
 8010b7e:	687b      	ldr	r3, [r7, #4]
 8010b80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b82:	697a      	ldr	r2, [r7, #20]
 8010b84:	4313      	orrs	r3, r2
 8010b86:	617b      	str	r3, [r7, #20]
 8010b88:	687b      	ldr	r3, [r7, #4]
 8010b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b8c:	2b00      	cmp	r3, #0
 8010b8e:	d00e      	beq.n	8010bae <HAL_DMA_Init+0x122>
 8010b90:	6878      	ldr	r0, [r7, #4]
 8010b92:	f000 fb0d 	bl	80111b0 <DMA_CheckFifoParam>
 8010b96:	4603      	mov	r3, r0
 8010b98:	2b00      	cmp	r3, #0
 8010b9a:	d008      	beq.n	8010bae <HAL_DMA_Init+0x122>
 8010b9c:	687b      	ldr	r3, [r7, #4]
 8010b9e:	2240      	movs	r2, #64	; 0x40
 8010ba0:	655a      	str	r2, [r3, #84]	; 0x54
 8010ba2:	687b      	ldr	r3, [r7, #4]
 8010ba4:	2201      	movs	r2, #1
 8010ba6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010baa:	2301      	movs	r3, #1
 8010bac:	e016      	b.n	8010bdc <HAL_DMA_Init+0x150>
 8010bae:	687b      	ldr	r3, [r7, #4]
 8010bb0:	681b      	ldr	r3, [r3, #0]
 8010bb2:	697a      	ldr	r2, [r7, #20]
 8010bb4:	615a      	str	r2, [r3, #20]
 8010bb6:	6878      	ldr	r0, [r7, #4]
 8010bb8:	f000 fac4 	bl	8011144 <DMA_CalcBaseAndBitshift>
 8010bbc:	4603      	mov	r3, r0
 8010bbe:	60fb      	str	r3, [r7, #12]
 8010bc0:	687b      	ldr	r3, [r7, #4]
 8010bc2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010bc4:	223f      	movs	r2, #63	; 0x3f
 8010bc6:	409a      	lsls	r2, r3
 8010bc8:	68fb      	ldr	r3, [r7, #12]
 8010bca:	609a      	str	r2, [r3, #8]
 8010bcc:	687b      	ldr	r3, [r7, #4]
 8010bce:	2200      	movs	r2, #0
 8010bd0:	655a      	str	r2, [r3, #84]	; 0x54
 8010bd2:	687b      	ldr	r3, [r7, #4]
 8010bd4:	2201      	movs	r2, #1
 8010bd6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010bda:	2300      	movs	r3, #0
 8010bdc:	4618      	mov	r0, r3
 8010bde:	3718      	adds	r7, #24
 8010be0:	46bd      	mov	sp, r7
 8010be2:	bd80      	pop	{r7, pc}
 8010be4:	f010803f 	.word	0xf010803f

08010be8 <HAL_DMA_Start_IT>:
 8010be8:	b580      	push	{r7, lr}
 8010bea:	b086      	sub	sp, #24
 8010bec:	af00      	add	r7, sp, #0
 8010bee:	60f8      	str	r0, [r7, #12]
 8010bf0:	60b9      	str	r1, [r7, #8]
 8010bf2:	607a      	str	r2, [r7, #4]
 8010bf4:	603b      	str	r3, [r7, #0]
 8010bf6:	2300      	movs	r3, #0
 8010bf8:	75fb      	strb	r3, [r7, #23]
 8010bfa:	68fb      	ldr	r3, [r7, #12]
 8010bfc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010bfe:	613b      	str	r3, [r7, #16]
 8010c00:	68fb      	ldr	r3, [r7, #12]
 8010c02:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8010c06:	2b01      	cmp	r3, #1
 8010c08:	d101      	bne.n	8010c0e <HAL_DMA_Start_IT+0x26>
 8010c0a:	2302      	movs	r3, #2
 8010c0c:	e040      	b.n	8010c90 <HAL_DMA_Start_IT+0xa8>
 8010c0e:	68fb      	ldr	r3, [r7, #12]
 8010c10:	2201      	movs	r2, #1
 8010c12:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010c16:	68fb      	ldr	r3, [r7, #12]
 8010c18:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010c1c:	b2db      	uxtb	r3, r3
 8010c1e:	2b01      	cmp	r3, #1
 8010c20:	d12f      	bne.n	8010c82 <HAL_DMA_Start_IT+0x9a>
 8010c22:	68fb      	ldr	r3, [r7, #12]
 8010c24:	2202      	movs	r2, #2
 8010c26:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010c2a:	68fb      	ldr	r3, [r7, #12]
 8010c2c:	2200      	movs	r2, #0
 8010c2e:	655a      	str	r2, [r3, #84]	; 0x54
 8010c30:	683b      	ldr	r3, [r7, #0]
 8010c32:	687a      	ldr	r2, [r7, #4]
 8010c34:	68b9      	ldr	r1, [r7, #8]
 8010c36:	68f8      	ldr	r0, [r7, #12]
 8010c38:	f000 fa56 	bl	80110e8 <DMA_SetConfig>
 8010c3c:	68fb      	ldr	r3, [r7, #12]
 8010c3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010c40:	223f      	movs	r2, #63	; 0x3f
 8010c42:	409a      	lsls	r2, r3
 8010c44:	693b      	ldr	r3, [r7, #16]
 8010c46:	609a      	str	r2, [r3, #8]
 8010c48:	68fb      	ldr	r3, [r7, #12]
 8010c4a:	681b      	ldr	r3, [r3, #0]
 8010c4c:	681a      	ldr	r2, [r3, #0]
 8010c4e:	68fb      	ldr	r3, [r7, #12]
 8010c50:	681b      	ldr	r3, [r3, #0]
 8010c52:	f042 0216 	orr.w	r2, r2, #22
 8010c56:	601a      	str	r2, [r3, #0]
 8010c58:	68fb      	ldr	r3, [r7, #12]
 8010c5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010c5c:	2b00      	cmp	r3, #0
 8010c5e:	d007      	beq.n	8010c70 <HAL_DMA_Start_IT+0x88>
 8010c60:	68fb      	ldr	r3, [r7, #12]
 8010c62:	681b      	ldr	r3, [r3, #0]
 8010c64:	681a      	ldr	r2, [r3, #0]
 8010c66:	68fb      	ldr	r3, [r7, #12]
 8010c68:	681b      	ldr	r3, [r3, #0]
 8010c6a:	f042 0208 	orr.w	r2, r2, #8
 8010c6e:	601a      	str	r2, [r3, #0]
 8010c70:	68fb      	ldr	r3, [r7, #12]
 8010c72:	681b      	ldr	r3, [r3, #0]
 8010c74:	681a      	ldr	r2, [r3, #0]
 8010c76:	68fb      	ldr	r3, [r7, #12]
 8010c78:	681b      	ldr	r3, [r3, #0]
 8010c7a:	f042 0201 	orr.w	r2, r2, #1
 8010c7e:	601a      	str	r2, [r3, #0]
 8010c80:	e005      	b.n	8010c8e <HAL_DMA_Start_IT+0xa6>
 8010c82:	68fb      	ldr	r3, [r7, #12]
 8010c84:	2200      	movs	r2, #0
 8010c86:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010c8a:	2302      	movs	r3, #2
 8010c8c:	75fb      	strb	r3, [r7, #23]
 8010c8e:	7dfb      	ldrb	r3, [r7, #23]
 8010c90:	4618      	mov	r0, r3
 8010c92:	3718      	adds	r7, #24
 8010c94:	46bd      	mov	sp, r7
 8010c96:	bd80      	pop	{r7, pc}

08010c98 <HAL_DMA_Abort>:
 8010c98:	b580      	push	{r7, lr}
 8010c9a:	b084      	sub	sp, #16
 8010c9c:	af00      	add	r7, sp, #0
 8010c9e:	6078      	str	r0, [r7, #4]
 8010ca0:	687b      	ldr	r3, [r7, #4]
 8010ca2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010ca4:	60fb      	str	r3, [r7, #12]
 8010ca6:	f7fe fcfd 	bl	800f6a4 <HAL_GetTick>
 8010caa:	60b8      	str	r0, [r7, #8]
 8010cac:	687b      	ldr	r3, [r7, #4]
 8010cae:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010cb2:	b2db      	uxtb	r3, r3
 8010cb4:	2b02      	cmp	r3, #2
 8010cb6:	d008      	beq.n	8010cca <HAL_DMA_Abort+0x32>
 8010cb8:	687b      	ldr	r3, [r7, #4]
 8010cba:	2280      	movs	r2, #128	; 0x80
 8010cbc:	655a      	str	r2, [r3, #84]	; 0x54
 8010cbe:	687b      	ldr	r3, [r7, #4]
 8010cc0:	2200      	movs	r2, #0
 8010cc2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010cc6:	2301      	movs	r3, #1
 8010cc8:	e052      	b.n	8010d70 <HAL_DMA_Abort+0xd8>
 8010cca:	687b      	ldr	r3, [r7, #4]
 8010ccc:	681b      	ldr	r3, [r3, #0]
 8010cce:	681a      	ldr	r2, [r3, #0]
 8010cd0:	687b      	ldr	r3, [r7, #4]
 8010cd2:	681b      	ldr	r3, [r3, #0]
 8010cd4:	f022 0216 	bic.w	r2, r2, #22
 8010cd8:	601a      	str	r2, [r3, #0]
 8010cda:	687b      	ldr	r3, [r7, #4]
 8010cdc:	681b      	ldr	r3, [r3, #0]
 8010cde:	695a      	ldr	r2, [r3, #20]
 8010ce0:	687b      	ldr	r3, [r7, #4]
 8010ce2:	681b      	ldr	r3, [r3, #0]
 8010ce4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8010ce8:	615a      	str	r2, [r3, #20]
 8010cea:	687b      	ldr	r3, [r7, #4]
 8010cec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010cee:	2b00      	cmp	r3, #0
 8010cf0:	d103      	bne.n	8010cfa <HAL_DMA_Abort+0x62>
 8010cf2:	687b      	ldr	r3, [r7, #4]
 8010cf4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010cf6:	2b00      	cmp	r3, #0
 8010cf8:	d007      	beq.n	8010d0a <HAL_DMA_Abort+0x72>
 8010cfa:	687b      	ldr	r3, [r7, #4]
 8010cfc:	681b      	ldr	r3, [r3, #0]
 8010cfe:	681a      	ldr	r2, [r3, #0]
 8010d00:	687b      	ldr	r3, [r7, #4]
 8010d02:	681b      	ldr	r3, [r3, #0]
 8010d04:	f022 0208 	bic.w	r2, r2, #8
 8010d08:	601a      	str	r2, [r3, #0]
 8010d0a:	687b      	ldr	r3, [r7, #4]
 8010d0c:	681b      	ldr	r3, [r3, #0]
 8010d0e:	681a      	ldr	r2, [r3, #0]
 8010d10:	687b      	ldr	r3, [r7, #4]
 8010d12:	681b      	ldr	r3, [r3, #0]
 8010d14:	f022 0201 	bic.w	r2, r2, #1
 8010d18:	601a      	str	r2, [r3, #0]
 8010d1a:	e013      	b.n	8010d44 <HAL_DMA_Abort+0xac>
 8010d1c:	f7fe fcc2 	bl	800f6a4 <HAL_GetTick>
 8010d20:	4602      	mov	r2, r0
 8010d22:	68bb      	ldr	r3, [r7, #8]
 8010d24:	1ad3      	subs	r3, r2, r3
 8010d26:	2b05      	cmp	r3, #5
 8010d28:	d90c      	bls.n	8010d44 <HAL_DMA_Abort+0xac>
 8010d2a:	687b      	ldr	r3, [r7, #4]
 8010d2c:	2220      	movs	r2, #32
 8010d2e:	655a      	str	r2, [r3, #84]	; 0x54
 8010d30:	687b      	ldr	r3, [r7, #4]
 8010d32:	2203      	movs	r2, #3
 8010d34:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010d38:	687b      	ldr	r3, [r7, #4]
 8010d3a:	2200      	movs	r2, #0
 8010d3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010d40:	2303      	movs	r3, #3
 8010d42:	e015      	b.n	8010d70 <HAL_DMA_Abort+0xd8>
 8010d44:	687b      	ldr	r3, [r7, #4]
 8010d46:	681b      	ldr	r3, [r3, #0]
 8010d48:	681b      	ldr	r3, [r3, #0]
 8010d4a:	f003 0301 	and.w	r3, r3, #1
 8010d4e:	2b00      	cmp	r3, #0
 8010d50:	d1e4      	bne.n	8010d1c <HAL_DMA_Abort+0x84>
 8010d52:	687b      	ldr	r3, [r7, #4]
 8010d54:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010d56:	223f      	movs	r2, #63	; 0x3f
 8010d58:	409a      	lsls	r2, r3
 8010d5a:	68fb      	ldr	r3, [r7, #12]
 8010d5c:	609a      	str	r2, [r3, #8]
 8010d5e:	687b      	ldr	r3, [r7, #4]
 8010d60:	2201      	movs	r2, #1
 8010d62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010d66:	687b      	ldr	r3, [r7, #4]
 8010d68:	2200      	movs	r2, #0
 8010d6a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010d6e:	2300      	movs	r3, #0
 8010d70:	4618      	mov	r0, r3
 8010d72:	3710      	adds	r7, #16
 8010d74:	46bd      	mov	sp, r7
 8010d76:	bd80      	pop	{r7, pc}

08010d78 <HAL_DMA_Abort_IT>:
 8010d78:	b480      	push	{r7}
 8010d7a:	b083      	sub	sp, #12
 8010d7c:	af00      	add	r7, sp, #0
 8010d7e:	6078      	str	r0, [r7, #4]
 8010d80:	687b      	ldr	r3, [r7, #4]
 8010d82:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010d86:	b2db      	uxtb	r3, r3
 8010d88:	2b02      	cmp	r3, #2
 8010d8a:	d004      	beq.n	8010d96 <HAL_DMA_Abort_IT+0x1e>
 8010d8c:	687b      	ldr	r3, [r7, #4]
 8010d8e:	2280      	movs	r2, #128	; 0x80
 8010d90:	655a      	str	r2, [r3, #84]	; 0x54
 8010d92:	2301      	movs	r3, #1
 8010d94:	e00c      	b.n	8010db0 <HAL_DMA_Abort_IT+0x38>
 8010d96:	687b      	ldr	r3, [r7, #4]
 8010d98:	2205      	movs	r2, #5
 8010d9a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010d9e:	687b      	ldr	r3, [r7, #4]
 8010da0:	681b      	ldr	r3, [r3, #0]
 8010da2:	681a      	ldr	r2, [r3, #0]
 8010da4:	687b      	ldr	r3, [r7, #4]
 8010da6:	681b      	ldr	r3, [r3, #0]
 8010da8:	f022 0201 	bic.w	r2, r2, #1
 8010dac:	601a      	str	r2, [r3, #0]
 8010dae:	2300      	movs	r3, #0
 8010db0:	4618      	mov	r0, r3
 8010db2:	370c      	adds	r7, #12
 8010db4:	46bd      	mov	sp, r7
 8010db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dba:	4770      	bx	lr

08010dbc <HAL_DMA_IRQHandler>:
 8010dbc:	b580      	push	{r7, lr}
 8010dbe:	b086      	sub	sp, #24
 8010dc0:	af00      	add	r7, sp, #0
 8010dc2:	6078      	str	r0, [r7, #4]
 8010dc4:	2300      	movs	r3, #0
 8010dc6:	60bb      	str	r3, [r7, #8]
 8010dc8:	4b8e      	ldr	r3, [pc, #568]	; (8011004 <HAL_DMA_IRQHandler+0x248>)
 8010dca:	681b      	ldr	r3, [r3, #0]
 8010dcc:	4a8e      	ldr	r2, [pc, #568]	; (8011008 <HAL_DMA_IRQHandler+0x24c>)
 8010dce:	fba2 2303 	umull	r2, r3, r2, r3
 8010dd2:	0a9b      	lsrs	r3, r3, #10
 8010dd4:	617b      	str	r3, [r7, #20]
 8010dd6:	687b      	ldr	r3, [r7, #4]
 8010dd8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8010dda:	613b      	str	r3, [r7, #16]
 8010ddc:	693b      	ldr	r3, [r7, #16]
 8010dde:	681b      	ldr	r3, [r3, #0]
 8010de0:	60fb      	str	r3, [r7, #12]
 8010de2:	687b      	ldr	r3, [r7, #4]
 8010de4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010de6:	2208      	movs	r2, #8
 8010de8:	409a      	lsls	r2, r3
 8010dea:	68fb      	ldr	r3, [r7, #12]
 8010dec:	4013      	ands	r3, r2
 8010dee:	2b00      	cmp	r3, #0
 8010df0:	d01a      	beq.n	8010e28 <HAL_DMA_IRQHandler+0x6c>
 8010df2:	687b      	ldr	r3, [r7, #4]
 8010df4:	681b      	ldr	r3, [r3, #0]
 8010df6:	681b      	ldr	r3, [r3, #0]
 8010df8:	f003 0304 	and.w	r3, r3, #4
 8010dfc:	2b00      	cmp	r3, #0
 8010dfe:	d013      	beq.n	8010e28 <HAL_DMA_IRQHandler+0x6c>
 8010e00:	687b      	ldr	r3, [r7, #4]
 8010e02:	681b      	ldr	r3, [r3, #0]
 8010e04:	681a      	ldr	r2, [r3, #0]
 8010e06:	687b      	ldr	r3, [r7, #4]
 8010e08:	681b      	ldr	r3, [r3, #0]
 8010e0a:	f022 0204 	bic.w	r2, r2, #4
 8010e0e:	601a      	str	r2, [r3, #0]
 8010e10:	687b      	ldr	r3, [r7, #4]
 8010e12:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e14:	2208      	movs	r2, #8
 8010e16:	409a      	lsls	r2, r3
 8010e18:	693b      	ldr	r3, [r7, #16]
 8010e1a:	609a      	str	r2, [r3, #8]
 8010e1c:	687b      	ldr	r3, [r7, #4]
 8010e1e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010e20:	f043 0201 	orr.w	r2, r3, #1
 8010e24:	687b      	ldr	r3, [r7, #4]
 8010e26:	655a      	str	r2, [r3, #84]	; 0x54
 8010e28:	687b      	ldr	r3, [r7, #4]
 8010e2a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e2c:	2201      	movs	r2, #1
 8010e2e:	409a      	lsls	r2, r3
 8010e30:	68fb      	ldr	r3, [r7, #12]
 8010e32:	4013      	ands	r3, r2
 8010e34:	2b00      	cmp	r3, #0
 8010e36:	d012      	beq.n	8010e5e <HAL_DMA_IRQHandler+0xa2>
 8010e38:	687b      	ldr	r3, [r7, #4]
 8010e3a:	681b      	ldr	r3, [r3, #0]
 8010e3c:	695b      	ldr	r3, [r3, #20]
 8010e3e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8010e42:	2b00      	cmp	r3, #0
 8010e44:	d00b      	beq.n	8010e5e <HAL_DMA_IRQHandler+0xa2>
 8010e46:	687b      	ldr	r3, [r7, #4]
 8010e48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e4a:	2201      	movs	r2, #1
 8010e4c:	409a      	lsls	r2, r3
 8010e4e:	693b      	ldr	r3, [r7, #16]
 8010e50:	609a      	str	r2, [r3, #8]
 8010e52:	687b      	ldr	r3, [r7, #4]
 8010e54:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010e56:	f043 0202 	orr.w	r2, r3, #2
 8010e5a:	687b      	ldr	r3, [r7, #4]
 8010e5c:	655a      	str	r2, [r3, #84]	; 0x54
 8010e5e:	687b      	ldr	r3, [r7, #4]
 8010e60:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e62:	2204      	movs	r2, #4
 8010e64:	409a      	lsls	r2, r3
 8010e66:	68fb      	ldr	r3, [r7, #12]
 8010e68:	4013      	ands	r3, r2
 8010e6a:	2b00      	cmp	r3, #0
 8010e6c:	d012      	beq.n	8010e94 <HAL_DMA_IRQHandler+0xd8>
 8010e6e:	687b      	ldr	r3, [r7, #4]
 8010e70:	681b      	ldr	r3, [r3, #0]
 8010e72:	681b      	ldr	r3, [r3, #0]
 8010e74:	f003 0302 	and.w	r3, r3, #2
 8010e78:	2b00      	cmp	r3, #0
 8010e7a:	d00b      	beq.n	8010e94 <HAL_DMA_IRQHandler+0xd8>
 8010e7c:	687b      	ldr	r3, [r7, #4]
 8010e7e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e80:	2204      	movs	r2, #4
 8010e82:	409a      	lsls	r2, r3
 8010e84:	693b      	ldr	r3, [r7, #16]
 8010e86:	609a      	str	r2, [r3, #8]
 8010e88:	687b      	ldr	r3, [r7, #4]
 8010e8a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010e8c:	f043 0204 	orr.w	r2, r3, #4
 8010e90:	687b      	ldr	r3, [r7, #4]
 8010e92:	655a      	str	r2, [r3, #84]	; 0x54
 8010e94:	687b      	ldr	r3, [r7, #4]
 8010e96:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010e98:	2210      	movs	r2, #16
 8010e9a:	409a      	lsls	r2, r3
 8010e9c:	68fb      	ldr	r3, [r7, #12]
 8010e9e:	4013      	ands	r3, r2
 8010ea0:	2b00      	cmp	r3, #0
 8010ea2:	d043      	beq.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010ea4:	687b      	ldr	r3, [r7, #4]
 8010ea6:	681b      	ldr	r3, [r3, #0]
 8010ea8:	681b      	ldr	r3, [r3, #0]
 8010eaa:	f003 0308 	and.w	r3, r3, #8
 8010eae:	2b00      	cmp	r3, #0
 8010eb0:	d03c      	beq.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010eb2:	687b      	ldr	r3, [r7, #4]
 8010eb4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010eb6:	2210      	movs	r2, #16
 8010eb8:	409a      	lsls	r2, r3
 8010eba:	693b      	ldr	r3, [r7, #16]
 8010ebc:	609a      	str	r2, [r3, #8]
 8010ebe:	687b      	ldr	r3, [r7, #4]
 8010ec0:	681b      	ldr	r3, [r3, #0]
 8010ec2:	681b      	ldr	r3, [r3, #0]
 8010ec4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8010ec8:	2b00      	cmp	r3, #0
 8010eca:	d018      	beq.n	8010efe <HAL_DMA_IRQHandler+0x142>
 8010ecc:	687b      	ldr	r3, [r7, #4]
 8010ece:	681b      	ldr	r3, [r3, #0]
 8010ed0:	681b      	ldr	r3, [r3, #0]
 8010ed2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8010ed6:	2b00      	cmp	r3, #0
 8010ed8:	d108      	bne.n	8010eec <HAL_DMA_IRQHandler+0x130>
 8010eda:	687b      	ldr	r3, [r7, #4]
 8010edc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010ede:	2b00      	cmp	r3, #0
 8010ee0:	d024      	beq.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010ee2:	687b      	ldr	r3, [r7, #4]
 8010ee4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010ee6:	6878      	ldr	r0, [r7, #4]
 8010ee8:	4798      	blx	r3
 8010eea:	e01f      	b.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010eec:	687b      	ldr	r3, [r7, #4]
 8010eee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010ef0:	2b00      	cmp	r3, #0
 8010ef2:	d01b      	beq.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010ef4:	687b      	ldr	r3, [r7, #4]
 8010ef6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010ef8:	6878      	ldr	r0, [r7, #4]
 8010efa:	4798      	blx	r3
 8010efc:	e016      	b.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010efe:	687b      	ldr	r3, [r7, #4]
 8010f00:	681b      	ldr	r3, [r3, #0]
 8010f02:	681b      	ldr	r3, [r3, #0]
 8010f04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010f08:	2b00      	cmp	r3, #0
 8010f0a:	d107      	bne.n	8010f1c <HAL_DMA_IRQHandler+0x160>
 8010f0c:	687b      	ldr	r3, [r7, #4]
 8010f0e:	681b      	ldr	r3, [r3, #0]
 8010f10:	681a      	ldr	r2, [r3, #0]
 8010f12:	687b      	ldr	r3, [r7, #4]
 8010f14:	681b      	ldr	r3, [r3, #0]
 8010f16:	f022 0208 	bic.w	r2, r2, #8
 8010f1a:	601a      	str	r2, [r3, #0]
 8010f1c:	687b      	ldr	r3, [r7, #4]
 8010f1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f20:	2b00      	cmp	r3, #0
 8010f22:	d003      	beq.n	8010f2c <HAL_DMA_IRQHandler+0x170>
 8010f24:	687b      	ldr	r3, [r7, #4]
 8010f26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f28:	6878      	ldr	r0, [r7, #4]
 8010f2a:	4798      	blx	r3
 8010f2c:	687b      	ldr	r3, [r7, #4]
 8010f2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010f30:	2220      	movs	r2, #32
 8010f32:	409a      	lsls	r2, r3
 8010f34:	68fb      	ldr	r3, [r7, #12]
 8010f36:	4013      	ands	r3, r2
 8010f38:	2b00      	cmp	r3, #0
 8010f3a:	f000 808f 	beq.w	801105c <HAL_DMA_IRQHandler+0x2a0>
 8010f3e:	687b      	ldr	r3, [r7, #4]
 8010f40:	681b      	ldr	r3, [r3, #0]
 8010f42:	681b      	ldr	r3, [r3, #0]
 8010f44:	f003 0310 	and.w	r3, r3, #16
 8010f48:	2b00      	cmp	r3, #0
 8010f4a:	f000 8087 	beq.w	801105c <HAL_DMA_IRQHandler+0x2a0>
 8010f4e:	687b      	ldr	r3, [r7, #4]
 8010f50:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010f52:	2220      	movs	r2, #32
 8010f54:	409a      	lsls	r2, r3
 8010f56:	693b      	ldr	r3, [r7, #16]
 8010f58:	609a      	str	r2, [r3, #8]
 8010f5a:	687b      	ldr	r3, [r7, #4]
 8010f5c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8010f60:	b2db      	uxtb	r3, r3
 8010f62:	2b05      	cmp	r3, #5
 8010f64:	d136      	bne.n	8010fd4 <HAL_DMA_IRQHandler+0x218>
 8010f66:	687b      	ldr	r3, [r7, #4]
 8010f68:	681b      	ldr	r3, [r3, #0]
 8010f6a:	681a      	ldr	r2, [r3, #0]
 8010f6c:	687b      	ldr	r3, [r7, #4]
 8010f6e:	681b      	ldr	r3, [r3, #0]
 8010f70:	f022 0216 	bic.w	r2, r2, #22
 8010f74:	601a      	str	r2, [r3, #0]
 8010f76:	687b      	ldr	r3, [r7, #4]
 8010f78:	681b      	ldr	r3, [r3, #0]
 8010f7a:	695a      	ldr	r2, [r3, #20]
 8010f7c:	687b      	ldr	r3, [r7, #4]
 8010f7e:	681b      	ldr	r3, [r3, #0]
 8010f80:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8010f84:	615a      	str	r2, [r3, #20]
 8010f86:	687b      	ldr	r3, [r7, #4]
 8010f88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f8a:	2b00      	cmp	r3, #0
 8010f8c:	d103      	bne.n	8010f96 <HAL_DMA_IRQHandler+0x1da>
 8010f8e:	687b      	ldr	r3, [r7, #4]
 8010f90:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010f92:	2b00      	cmp	r3, #0
 8010f94:	d007      	beq.n	8010fa6 <HAL_DMA_IRQHandler+0x1ea>
 8010f96:	687b      	ldr	r3, [r7, #4]
 8010f98:	681b      	ldr	r3, [r3, #0]
 8010f9a:	681a      	ldr	r2, [r3, #0]
 8010f9c:	687b      	ldr	r3, [r7, #4]
 8010f9e:	681b      	ldr	r3, [r3, #0]
 8010fa0:	f022 0208 	bic.w	r2, r2, #8
 8010fa4:	601a      	str	r2, [r3, #0]
 8010fa6:	687b      	ldr	r3, [r7, #4]
 8010fa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010faa:	223f      	movs	r2, #63	; 0x3f
 8010fac:	409a      	lsls	r2, r3
 8010fae:	693b      	ldr	r3, [r7, #16]
 8010fb0:	609a      	str	r2, [r3, #8]
 8010fb2:	687b      	ldr	r3, [r7, #4]
 8010fb4:	2201      	movs	r2, #1
 8010fb6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8010fba:	687b      	ldr	r3, [r7, #4]
 8010fbc:	2200      	movs	r2, #0
 8010fbe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8010fc2:	687b      	ldr	r3, [r7, #4]
 8010fc4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010fc6:	2b00      	cmp	r3, #0
 8010fc8:	d07e      	beq.n	80110c8 <HAL_DMA_IRQHandler+0x30c>
 8010fca:	687b      	ldr	r3, [r7, #4]
 8010fcc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010fce:	6878      	ldr	r0, [r7, #4]
 8010fd0:	4798      	blx	r3
 8010fd2:	e079      	b.n	80110c8 <HAL_DMA_IRQHandler+0x30c>
 8010fd4:	687b      	ldr	r3, [r7, #4]
 8010fd6:	681b      	ldr	r3, [r3, #0]
 8010fd8:	681b      	ldr	r3, [r3, #0]
 8010fda:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8010fde:	2b00      	cmp	r3, #0
 8010fe0:	d01d      	beq.n	801101e <HAL_DMA_IRQHandler+0x262>
 8010fe2:	687b      	ldr	r3, [r7, #4]
 8010fe4:	681b      	ldr	r3, [r3, #0]
 8010fe6:	681b      	ldr	r3, [r3, #0]
 8010fe8:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8010fec:	2b00      	cmp	r3, #0
 8010fee:	d10d      	bne.n	801100c <HAL_DMA_IRQHandler+0x250>
 8010ff0:	687b      	ldr	r3, [r7, #4]
 8010ff2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010ff4:	2b00      	cmp	r3, #0
 8010ff6:	d031      	beq.n	801105c <HAL_DMA_IRQHandler+0x2a0>
 8010ff8:	687b      	ldr	r3, [r7, #4]
 8010ffa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010ffc:	6878      	ldr	r0, [r7, #4]
 8010ffe:	4798      	blx	r3
 8011000:	e02c      	b.n	801105c <HAL_DMA_IRQHandler+0x2a0>
 8011002:	bf00      	nop
 8011004:	20000004 	.word	0x20000004
 8011008:	1b4e81b5 	.word	0x1b4e81b5
 801100c:	687b      	ldr	r3, [r7, #4]
 801100e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011010:	2b00      	cmp	r3, #0
 8011012:	d023      	beq.n	801105c <HAL_DMA_IRQHandler+0x2a0>
 8011014:	687b      	ldr	r3, [r7, #4]
 8011016:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011018:	6878      	ldr	r0, [r7, #4]
 801101a:	4798      	blx	r3
 801101c:	e01e      	b.n	801105c <HAL_DMA_IRQHandler+0x2a0>
 801101e:	687b      	ldr	r3, [r7, #4]
 8011020:	681b      	ldr	r3, [r3, #0]
 8011022:	681b      	ldr	r3, [r3, #0]
 8011024:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011028:	2b00      	cmp	r3, #0
 801102a:	d10f      	bne.n	801104c <HAL_DMA_IRQHandler+0x290>
 801102c:	687b      	ldr	r3, [r7, #4]
 801102e:	681b      	ldr	r3, [r3, #0]
 8011030:	681a      	ldr	r2, [r3, #0]
 8011032:	687b      	ldr	r3, [r7, #4]
 8011034:	681b      	ldr	r3, [r3, #0]
 8011036:	f022 0210 	bic.w	r2, r2, #16
 801103a:	601a      	str	r2, [r3, #0]
 801103c:	687b      	ldr	r3, [r7, #4]
 801103e:	2201      	movs	r2, #1
 8011040:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8011044:	687b      	ldr	r3, [r7, #4]
 8011046:	2200      	movs	r2, #0
 8011048:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 801104c:	687b      	ldr	r3, [r7, #4]
 801104e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011050:	2b00      	cmp	r3, #0
 8011052:	d003      	beq.n	801105c <HAL_DMA_IRQHandler+0x2a0>
 8011054:	687b      	ldr	r3, [r7, #4]
 8011056:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011058:	6878      	ldr	r0, [r7, #4]
 801105a:	4798      	blx	r3
 801105c:	687b      	ldr	r3, [r7, #4]
 801105e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011060:	2b00      	cmp	r3, #0
 8011062:	d032      	beq.n	80110ca <HAL_DMA_IRQHandler+0x30e>
 8011064:	687b      	ldr	r3, [r7, #4]
 8011066:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011068:	f003 0301 	and.w	r3, r3, #1
 801106c:	2b00      	cmp	r3, #0
 801106e:	d022      	beq.n	80110b6 <HAL_DMA_IRQHandler+0x2fa>
 8011070:	687b      	ldr	r3, [r7, #4]
 8011072:	2205      	movs	r2, #5
 8011074:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8011078:	687b      	ldr	r3, [r7, #4]
 801107a:	681b      	ldr	r3, [r3, #0]
 801107c:	681a      	ldr	r2, [r3, #0]
 801107e:	687b      	ldr	r3, [r7, #4]
 8011080:	681b      	ldr	r3, [r3, #0]
 8011082:	f022 0201 	bic.w	r2, r2, #1
 8011086:	601a      	str	r2, [r3, #0]
 8011088:	68bb      	ldr	r3, [r7, #8]
 801108a:	3301      	adds	r3, #1
 801108c:	60bb      	str	r3, [r7, #8]
 801108e:	697a      	ldr	r2, [r7, #20]
 8011090:	429a      	cmp	r2, r3
 8011092:	d307      	bcc.n	80110a4 <HAL_DMA_IRQHandler+0x2e8>
 8011094:	687b      	ldr	r3, [r7, #4]
 8011096:	681b      	ldr	r3, [r3, #0]
 8011098:	681b      	ldr	r3, [r3, #0]
 801109a:	f003 0301 	and.w	r3, r3, #1
 801109e:	2b00      	cmp	r3, #0
 80110a0:	d1f2      	bne.n	8011088 <HAL_DMA_IRQHandler+0x2cc>
 80110a2:	e000      	b.n	80110a6 <HAL_DMA_IRQHandler+0x2ea>
 80110a4:	bf00      	nop
 80110a6:	687b      	ldr	r3, [r7, #4]
 80110a8:	2201      	movs	r2, #1
 80110aa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80110ae:	687b      	ldr	r3, [r7, #4]
 80110b0:	2200      	movs	r2, #0
 80110b2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80110b6:	687b      	ldr	r3, [r7, #4]
 80110b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110ba:	2b00      	cmp	r3, #0
 80110bc:	d005      	beq.n	80110ca <HAL_DMA_IRQHandler+0x30e>
 80110be:	687b      	ldr	r3, [r7, #4]
 80110c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110c2:	6878      	ldr	r0, [r7, #4]
 80110c4:	4798      	blx	r3
 80110c6:	e000      	b.n	80110ca <HAL_DMA_IRQHandler+0x30e>
 80110c8:	bf00      	nop
 80110ca:	3718      	adds	r7, #24
 80110cc:	46bd      	mov	sp, r7
 80110ce:	bd80      	pop	{r7, pc}

080110d0 <HAL_DMA_GetError>:
 80110d0:	b480      	push	{r7}
 80110d2:	b083      	sub	sp, #12
 80110d4:	af00      	add	r7, sp, #0
 80110d6:	6078      	str	r0, [r7, #4]
 80110d8:	687b      	ldr	r3, [r7, #4]
 80110da:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80110dc:	4618      	mov	r0, r3
 80110de:	370c      	adds	r7, #12
 80110e0:	46bd      	mov	sp, r7
 80110e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110e6:	4770      	bx	lr

080110e8 <DMA_SetConfig>:
 80110e8:	b480      	push	{r7}
 80110ea:	b085      	sub	sp, #20
 80110ec:	af00      	add	r7, sp, #0
 80110ee:	60f8      	str	r0, [r7, #12]
 80110f0:	60b9      	str	r1, [r7, #8]
 80110f2:	607a      	str	r2, [r7, #4]
 80110f4:	603b      	str	r3, [r7, #0]
 80110f6:	68fb      	ldr	r3, [r7, #12]
 80110f8:	681b      	ldr	r3, [r3, #0]
 80110fa:	681a      	ldr	r2, [r3, #0]
 80110fc:	68fb      	ldr	r3, [r7, #12]
 80110fe:	681b      	ldr	r3, [r3, #0]
 8011100:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8011104:	601a      	str	r2, [r3, #0]
 8011106:	68fb      	ldr	r3, [r7, #12]
 8011108:	681b      	ldr	r3, [r3, #0]
 801110a:	683a      	ldr	r2, [r7, #0]
 801110c:	605a      	str	r2, [r3, #4]
 801110e:	68fb      	ldr	r3, [r7, #12]
 8011110:	689b      	ldr	r3, [r3, #8]
 8011112:	2b40      	cmp	r3, #64	; 0x40
 8011114:	d108      	bne.n	8011128 <DMA_SetConfig+0x40>
 8011116:	68fb      	ldr	r3, [r7, #12]
 8011118:	681b      	ldr	r3, [r3, #0]
 801111a:	687a      	ldr	r2, [r7, #4]
 801111c:	609a      	str	r2, [r3, #8]
 801111e:	68fb      	ldr	r3, [r7, #12]
 8011120:	681b      	ldr	r3, [r3, #0]
 8011122:	68ba      	ldr	r2, [r7, #8]
 8011124:	60da      	str	r2, [r3, #12]
 8011126:	e007      	b.n	8011138 <DMA_SetConfig+0x50>
 8011128:	68fb      	ldr	r3, [r7, #12]
 801112a:	681b      	ldr	r3, [r3, #0]
 801112c:	68ba      	ldr	r2, [r7, #8]
 801112e:	609a      	str	r2, [r3, #8]
 8011130:	68fb      	ldr	r3, [r7, #12]
 8011132:	681b      	ldr	r3, [r3, #0]
 8011134:	687a      	ldr	r2, [r7, #4]
 8011136:	60da      	str	r2, [r3, #12]
 8011138:	bf00      	nop
 801113a:	3714      	adds	r7, #20
 801113c:	46bd      	mov	sp, r7
 801113e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011142:	4770      	bx	lr

08011144 <DMA_CalcBaseAndBitshift>:
 8011144:	b480      	push	{r7}
 8011146:	b085      	sub	sp, #20
 8011148:	af00      	add	r7, sp, #0
 801114a:	6078      	str	r0, [r7, #4]
 801114c:	687b      	ldr	r3, [r7, #4]
 801114e:	681b      	ldr	r3, [r3, #0]
 8011150:	b2db      	uxtb	r3, r3
 8011152:	3b10      	subs	r3, #16
 8011154:	4a14      	ldr	r2, [pc, #80]	; (80111a8 <DMA_CalcBaseAndBitshift+0x64>)
 8011156:	fba2 2303 	umull	r2, r3, r2, r3
 801115a:	091b      	lsrs	r3, r3, #4
 801115c:	60fb      	str	r3, [r7, #12]
 801115e:	4a13      	ldr	r2, [pc, #76]	; (80111ac <DMA_CalcBaseAndBitshift+0x68>)
 8011160:	68fb      	ldr	r3, [r7, #12]
 8011162:	4413      	add	r3, r2
 8011164:	781b      	ldrb	r3, [r3, #0]
 8011166:	461a      	mov	r2, r3
 8011168:	687b      	ldr	r3, [r7, #4]
 801116a:	65da      	str	r2, [r3, #92]	; 0x5c
 801116c:	68fb      	ldr	r3, [r7, #12]
 801116e:	2b03      	cmp	r3, #3
 8011170:	d909      	bls.n	8011186 <DMA_CalcBaseAndBitshift+0x42>
 8011172:	687b      	ldr	r3, [r7, #4]
 8011174:	681b      	ldr	r3, [r3, #0]
 8011176:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 801117a:	f023 0303 	bic.w	r3, r3, #3
 801117e:	1d1a      	adds	r2, r3, #4
 8011180:	687b      	ldr	r3, [r7, #4]
 8011182:	659a      	str	r2, [r3, #88]	; 0x58
 8011184:	e007      	b.n	8011196 <DMA_CalcBaseAndBitshift+0x52>
 8011186:	687b      	ldr	r3, [r7, #4]
 8011188:	681b      	ldr	r3, [r3, #0]
 801118a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 801118e:	f023 0303 	bic.w	r3, r3, #3
 8011192:	687a      	ldr	r2, [r7, #4]
 8011194:	6593      	str	r3, [r2, #88]	; 0x58
 8011196:	687b      	ldr	r3, [r7, #4]
 8011198:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801119a:	4618      	mov	r0, r3
 801119c:	3714      	adds	r7, #20
 801119e:	46bd      	mov	sp, r7
 80111a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111a4:	4770      	bx	lr
 80111a6:	bf00      	nop
 80111a8:	aaaaaaab 	.word	0xaaaaaaab
 80111ac:	08027020 	.word	0x08027020

080111b0 <DMA_CheckFifoParam>:
 80111b0:	b480      	push	{r7}
 80111b2:	b085      	sub	sp, #20
 80111b4:	af00      	add	r7, sp, #0
 80111b6:	6078      	str	r0, [r7, #4]
 80111b8:	2300      	movs	r3, #0
 80111ba:	73fb      	strb	r3, [r7, #15]
 80111bc:	687b      	ldr	r3, [r7, #4]
 80111be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80111c0:	60bb      	str	r3, [r7, #8]
 80111c2:	687b      	ldr	r3, [r7, #4]
 80111c4:	699b      	ldr	r3, [r3, #24]
 80111c6:	2b00      	cmp	r3, #0
 80111c8:	d11f      	bne.n	801120a <DMA_CheckFifoParam+0x5a>
 80111ca:	68bb      	ldr	r3, [r7, #8]
 80111cc:	2b03      	cmp	r3, #3
 80111ce:	d856      	bhi.n	801127e <DMA_CheckFifoParam+0xce>
 80111d0:	a201      	add	r2, pc, #4	; (adr r2, 80111d8 <DMA_CheckFifoParam+0x28>)
 80111d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80111d6:	bf00      	nop
 80111d8:	080111e9 	.word	0x080111e9
 80111dc:	080111fb 	.word	0x080111fb
 80111e0:	080111e9 	.word	0x080111e9
 80111e4:	0801127f 	.word	0x0801127f
 80111e8:	687b      	ldr	r3, [r7, #4]
 80111ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111ec:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80111f0:	2b00      	cmp	r3, #0
 80111f2:	d046      	beq.n	8011282 <DMA_CheckFifoParam+0xd2>
 80111f4:	2301      	movs	r3, #1
 80111f6:	73fb      	strb	r3, [r7, #15]
 80111f8:	e043      	b.n	8011282 <DMA_CheckFifoParam+0xd2>
 80111fa:	687b      	ldr	r3, [r7, #4]
 80111fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111fe:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8011202:	d140      	bne.n	8011286 <DMA_CheckFifoParam+0xd6>
 8011204:	2301      	movs	r3, #1
 8011206:	73fb      	strb	r3, [r7, #15]
 8011208:	e03d      	b.n	8011286 <DMA_CheckFifoParam+0xd6>
 801120a:	687b      	ldr	r3, [r7, #4]
 801120c:	699b      	ldr	r3, [r3, #24]
 801120e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8011212:	d121      	bne.n	8011258 <DMA_CheckFifoParam+0xa8>
 8011214:	68bb      	ldr	r3, [r7, #8]
 8011216:	2b03      	cmp	r3, #3
 8011218:	d837      	bhi.n	801128a <DMA_CheckFifoParam+0xda>
 801121a:	a201      	add	r2, pc, #4	; (adr r2, 8011220 <DMA_CheckFifoParam+0x70>)
 801121c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011220:	08011231 	.word	0x08011231
 8011224:	08011237 	.word	0x08011237
 8011228:	08011231 	.word	0x08011231
 801122c:	08011249 	.word	0x08011249
 8011230:	2301      	movs	r3, #1
 8011232:	73fb      	strb	r3, [r7, #15]
 8011234:	e030      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011236:	687b      	ldr	r3, [r7, #4]
 8011238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801123a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801123e:	2b00      	cmp	r3, #0
 8011240:	d025      	beq.n	801128e <DMA_CheckFifoParam+0xde>
 8011242:	2301      	movs	r3, #1
 8011244:	73fb      	strb	r3, [r7, #15]
 8011246:	e022      	b.n	801128e <DMA_CheckFifoParam+0xde>
 8011248:	687b      	ldr	r3, [r7, #4]
 801124a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801124c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8011250:	d11f      	bne.n	8011292 <DMA_CheckFifoParam+0xe2>
 8011252:	2301      	movs	r3, #1
 8011254:	73fb      	strb	r3, [r7, #15]
 8011256:	e01c      	b.n	8011292 <DMA_CheckFifoParam+0xe2>
 8011258:	68bb      	ldr	r3, [r7, #8]
 801125a:	2b02      	cmp	r3, #2
 801125c:	d903      	bls.n	8011266 <DMA_CheckFifoParam+0xb6>
 801125e:	68bb      	ldr	r3, [r7, #8]
 8011260:	2b03      	cmp	r3, #3
 8011262:	d003      	beq.n	801126c <DMA_CheckFifoParam+0xbc>
 8011264:	e018      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011266:	2301      	movs	r3, #1
 8011268:	73fb      	strb	r3, [r7, #15]
 801126a:	e015      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 801126c:	687b      	ldr	r3, [r7, #4]
 801126e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011270:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8011274:	2b00      	cmp	r3, #0
 8011276:	d00e      	beq.n	8011296 <DMA_CheckFifoParam+0xe6>
 8011278:	2301      	movs	r3, #1
 801127a:	73fb      	strb	r3, [r7, #15]
 801127c:	e00b      	b.n	8011296 <DMA_CheckFifoParam+0xe6>
 801127e:	bf00      	nop
 8011280:	e00a      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011282:	bf00      	nop
 8011284:	e008      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011286:	bf00      	nop
 8011288:	e006      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 801128a:	bf00      	nop
 801128c:	e004      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 801128e:	bf00      	nop
 8011290:	e002      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011292:	bf00      	nop
 8011294:	e000      	b.n	8011298 <DMA_CheckFifoParam+0xe8>
 8011296:	bf00      	nop
 8011298:	7bfb      	ldrb	r3, [r7, #15]
 801129a:	4618      	mov	r0, r3
 801129c:	3714      	adds	r7, #20
 801129e:	46bd      	mov	sp, r7
 80112a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112a4:	4770      	bx	lr
 80112a6:	bf00      	nop

080112a8 <HAL_GPIO_Init>:
 80112a8:	b480      	push	{r7}
 80112aa:	b089      	sub	sp, #36	; 0x24
 80112ac:	af00      	add	r7, sp, #0
 80112ae:	6078      	str	r0, [r7, #4]
 80112b0:	6039      	str	r1, [r7, #0]
 80112b2:	2300      	movs	r3, #0
 80112b4:	617b      	str	r3, [r7, #20]
 80112b6:	2300      	movs	r3, #0
 80112b8:	613b      	str	r3, [r7, #16]
 80112ba:	2300      	movs	r3, #0
 80112bc:	61bb      	str	r3, [r7, #24]
 80112be:	2300      	movs	r3, #0
 80112c0:	61fb      	str	r3, [r7, #28]
 80112c2:	e16b      	b.n	801159c <HAL_GPIO_Init+0x2f4>
 80112c4:	2201      	movs	r2, #1
 80112c6:	69fb      	ldr	r3, [r7, #28]
 80112c8:	fa02 f303 	lsl.w	r3, r2, r3
 80112cc:	617b      	str	r3, [r7, #20]
 80112ce:	683b      	ldr	r3, [r7, #0]
 80112d0:	681b      	ldr	r3, [r3, #0]
 80112d2:	697a      	ldr	r2, [r7, #20]
 80112d4:	4013      	ands	r3, r2
 80112d6:	613b      	str	r3, [r7, #16]
 80112d8:	693a      	ldr	r2, [r7, #16]
 80112da:	697b      	ldr	r3, [r7, #20]
 80112dc:	429a      	cmp	r2, r3
 80112de:	f040 815a 	bne.w	8011596 <HAL_GPIO_Init+0x2ee>
 80112e2:	683b      	ldr	r3, [r7, #0]
 80112e4:	685b      	ldr	r3, [r3, #4]
 80112e6:	f003 0303 	and.w	r3, r3, #3
 80112ea:	2b01      	cmp	r3, #1
 80112ec:	d005      	beq.n	80112fa <HAL_GPIO_Init+0x52>
 80112ee:	683b      	ldr	r3, [r7, #0]
 80112f0:	685b      	ldr	r3, [r3, #4]
 80112f2:	f003 0303 	and.w	r3, r3, #3
 80112f6:	2b02      	cmp	r3, #2
 80112f8:	d130      	bne.n	801135c <HAL_GPIO_Init+0xb4>
 80112fa:	687b      	ldr	r3, [r7, #4]
 80112fc:	689b      	ldr	r3, [r3, #8]
 80112fe:	61bb      	str	r3, [r7, #24]
 8011300:	69fb      	ldr	r3, [r7, #28]
 8011302:	005b      	lsls	r3, r3, #1
 8011304:	2203      	movs	r2, #3
 8011306:	fa02 f303 	lsl.w	r3, r2, r3
 801130a:	43db      	mvns	r3, r3
 801130c:	69ba      	ldr	r2, [r7, #24]
 801130e:	4013      	ands	r3, r2
 8011310:	61bb      	str	r3, [r7, #24]
 8011312:	683b      	ldr	r3, [r7, #0]
 8011314:	68da      	ldr	r2, [r3, #12]
 8011316:	69fb      	ldr	r3, [r7, #28]
 8011318:	005b      	lsls	r3, r3, #1
 801131a:	fa02 f303 	lsl.w	r3, r2, r3
 801131e:	69ba      	ldr	r2, [r7, #24]
 8011320:	4313      	orrs	r3, r2
 8011322:	61bb      	str	r3, [r7, #24]
 8011324:	687b      	ldr	r3, [r7, #4]
 8011326:	69ba      	ldr	r2, [r7, #24]
 8011328:	609a      	str	r2, [r3, #8]
 801132a:	687b      	ldr	r3, [r7, #4]
 801132c:	685b      	ldr	r3, [r3, #4]
 801132e:	61bb      	str	r3, [r7, #24]
 8011330:	2201      	movs	r2, #1
 8011332:	69fb      	ldr	r3, [r7, #28]
 8011334:	fa02 f303 	lsl.w	r3, r2, r3
 8011338:	43db      	mvns	r3, r3
 801133a:	69ba      	ldr	r2, [r7, #24]
 801133c:	4013      	ands	r3, r2
 801133e:	61bb      	str	r3, [r7, #24]
 8011340:	683b      	ldr	r3, [r7, #0]
 8011342:	685b      	ldr	r3, [r3, #4]
 8011344:	091b      	lsrs	r3, r3, #4
 8011346:	f003 0201 	and.w	r2, r3, #1
 801134a:	69fb      	ldr	r3, [r7, #28]
 801134c:	fa02 f303 	lsl.w	r3, r2, r3
 8011350:	69ba      	ldr	r2, [r7, #24]
 8011352:	4313      	orrs	r3, r2
 8011354:	61bb      	str	r3, [r7, #24]
 8011356:	687b      	ldr	r3, [r7, #4]
 8011358:	69ba      	ldr	r2, [r7, #24]
 801135a:	605a      	str	r2, [r3, #4]
 801135c:	683b      	ldr	r3, [r7, #0]
 801135e:	685b      	ldr	r3, [r3, #4]
 8011360:	f003 0303 	and.w	r3, r3, #3
 8011364:	2b03      	cmp	r3, #3
 8011366:	d017      	beq.n	8011398 <HAL_GPIO_Init+0xf0>
 8011368:	687b      	ldr	r3, [r7, #4]
 801136a:	68db      	ldr	r3, [r3, #12]
 801136c:	61bb      	str	r3, [r7, #24]
 801136e:	69fb      	ldr	r3, [r7, #28]
 8011370:	005b      	lsls	r3, r3, #1
 8011372:	2203      	movs	r2, #3
 8011374:	fa02 f303 	lsl.w	r3, r2, r3
 8011378:	43db      	mvns	r3, r3
 801137a:	69ba      	ldr	r2, [r7, #24]
 801137c:	4013      	ands	r3, r2
 801137e:	61bb      	str	r3, [r7, #24]
 8011380:	683b      	ldr	r3, [r7, #0]
 8011382:	689a      	ldr	r2, [r3, #8]
 8011384:	69fb      	ldr	r3, [r7, #28]
 8011386:	005b      	lsls	r3, r3, #1
 8011388:	fa02 f303 	lsl.w	r3, r2, r3
 801138c:	69ba      	ldr	r2, [r7, #24]
 801138e:	4313      	orrs	r3, r2
 8011390:	61bb      	str	r3, [r7, #24]
 8011392:	687b      	ldr	r3, [r7, #4]
 8011394:	69ba      	ldr	r2, [r7, #24]
 8011396:	60da      	str	r2, [r3, #12]
 8011398:	683b      	ldr	r3, [r7, #0]
 801139a:	685b      	ldr	r3, [r3, #4]
 801139c:	f003 0303 	and.w	r3, r3, #3
 80113a0:	2b02      	cmp	r3, #2
 80113a2:	d123      	bne.n	80113ec <HAL_GPIO_Init+0x144>
 80113a4:	69fb      	ldr	r3, [r7, #28]
 80113a6:	08da      	lsrs	r2, r3, #3
 80113a8:	687b      	ldr	r3, [r7, #4]
 80113aa:	3208      	adds	r2, #8
 80113ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80113b0:	61bb      	str	r3, [r7, #24]
 80113b2:	69fb      	ldr	r3, [r7, #28]
 80113b4:	f003 0307 	and.w	r3, r3, #7
 80113b8:	009b      	lsls	r3, r3, #2
 80113ba:	220f      	movs	r2, #15
 80113bc:	fa02 f303 	lsl.w	r3, r2, r3
 80113c0:	43db      	mvns	r3, r3
 80113c2:	69ba      	ldr	r2, [r7, #24]
 80113c4:	4013      	ands	r3, r2
 80113c6:	61bb      	str	r3, [r7, #24]
 80113c8:	683b      	ldr	r3, [r7, #0]
 80113ca:	691a      	ldr	r2, [r3, #16]
 80113cc:	69fb      	ldr	r3, [r7, #28]
 80113ce:	f003 0307 	and.w	r3, r3, #7
 80113d2:	009b      	lsls	r3, r3, #2
 80113d4:	fa02 f303 	lsl.w	r3, r2, r3
 80113d8:	69ba      	ldr	r2, [r7, #24]
 80113da:	4313      	orrs	r3, r2
 80113dc:	61bb      	str	r3, [r7, #24]
 80113de:	69fb      	ldr	r3, [r7, #28]
 80113e0:	08da      	lsrs	r2, r3, #3
 80113e2:	687b      	ldr	r3, [r7, #4]
 80113e4:	3208      	adds	r2, #8
 80113e6:	69b9      	ldr	r1, [r7, #24]
 80113e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80113ec:	687b      	ldr	r3, [r7, #4]
 80113ee:	681b      	ldr	r3, [r3, #0]
 80113f0:	61bb      	str	r3, [r7, #24]
 80113f2:	69fb      	ldr	r3, [r7, #28]
 80113f4:	005b      	lsls	r3, r3, #1
 80113f6:	2203      	movs	r2, #3
 80113f8:	fa02 f303 	lsl.w	r3, r2, r3
 80113fc:	43db      	mvns	r3, r3
 80113fe:	69ba      	ldr	r2, [r7, #24]
 8011400:	4013      	ands	r3, r2
 8011402:	61bb      	str	r3, [r7, #24]
 8011404:	683b      	ldr	r3, [r7, #0]
 8011406:	685b      	ldr	r3, [r3, #4]
 8011408:	f003 0203 	and.w	r2, r3, #3
 801140c:	69fb      	ldr	r3, [r7, #28]
 801140e:	005b      	lsls	r3, r3, #1
 8011410:	fa02 f303 	lsl.w	r3, r2, r3
 8011414:	69ba      	ldr	r2, [r7, #24]
 8011416:	4313      	orrs	r3, r2
 8011418:	61bb      	str	r3, [r7, #24]
 801141a:	687b      	ldr	r3, [r7, #4]
 801141c:	69ba      	ldr	r2, [r7, #24]
 801141e:	601a      	str	r2, [r3, #0]
 8011420:	683b      	ldr	r3, [r7, #0]
 8011422:	685b      	ldr	r3, [r3, #4]
 8011424:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8011428:	2b00      	cmp	r3, #0
 801142a:	f000 80b4 	beq.w	8011596 <HAL_GPIO_Init+0x2ee>
 801142e:	2300      	movs	r3, #0
 8011430:	60fb      	str	r3, [r7, #12]
 8011432:	4b60      	ldr	r3, [pc, #384]	; (80115b4 <HAL_GPIO_Init+0x30c>)
 8011434:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011436:	4a5f      	ldr	r2, [pc, #380]	; (80115b4 <HAL_GPIO_Init+0x30c>)
 8011438:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801143c:	6453      	str	r3, [r2, #68]	; 0x44
 801143e:	4b5d      	ldr	r3, [pc, #372]	; (80115b4 <HAL_GPIO_Init+0x30c>)
 8011440:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011442:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8011446:	60fb      	str	r3, [r7, #12]
 8011448:	68fb      	ldr	r3, [r7, #12]
 801144a:	4a5b      	ldr	r2, [pc, #364]	; (80115b8 <HAL_GPIO_Init+0x310>)
 801144c:	69fb      	ldr	r3, [r7, #28]
 801144e:	089b      	lsrs	r3, r3, #2
 8011450:	3302      	adds	r3, #2
 8011452:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8011456:	61bb      	str	r3, [r7, #24]
 8011458:	69fb      	ldr	r3, [r7, #28]
 801145a:	f003 0303 	and.w	r3, r3, #3
 801145e:	009b      	lsls	r3, r3, #2
 8011460:	220f      	movs	r2, #15
 8011462:	fa02 f303 	lsl.w	r3, r2, r3
 8011466:	43db      	mvns	r3, r3
 8011468:	69ba      	ldr	r2, [r7, #24]
 801146a:	4013      	ands	r3, r2
 801146c:	61bb      	str	r3, [r7, #24]
 801146e:	687b      	ldr	r3, [r7, #4]
 8011470:	4a52      	ldr	r2, [pc, #328]	; (80115bc <HAL_GPIO_Init+0x314>)
 8011472:	4293      	cmp	r3, r2
 8011474:	d02b      	beq.n	80114ce <HAL_GPIO_Init+0x226>
 8011476:	687b      	ldr	r3, [r7, #4]
 8011478:	4a51      	ldr	r2, [pc, #324]	; (80115c0 <HAL_GPIO_Init+0x318>)
 801147a:	4293      	cmp	r3, r2
 801147c:	d025      	beq.n	80114ca <HAL_GPIO_Init+0x222>
 801147e:	687b      	ldr	r3, [r7, #4]
 8011480:	4a50      	ldr	r2, [pc, #320]	; (80115c4 <HAL_GPIO_Init+0x31c>)
 8011482:	4293      	cmp	r3, r2
 8011484:	d01f      	beq.n	80114c6 <HAL_GPIO_Init+0x21e>
 8011486:	687b      	ldr	r3, [r7, #4]
 8011488:	4a4f      	ldr	r2, [pc, #316]	; (80115c8 <HAL_GPIO_Init+0x320>)
 801148a:	4293      	cmp	r3, r2
 801148c:	d019      	beq.n	80114c2 <HAL_GPIO_Init+0x21a>
 801148e:	687b      	ldr	r3, [r7, #4]
 8011490:	4a4e      	ldr	r2, [pc, #312]	; (80115cc <HAL_GPIO_Init+0x324>)
 8011492:	4293      	cmp	r3, r2
 8011494:	d013      	beq.n	80114be <HAL_GPIO_Init+0x216>
 8011496:	687b      	ldr	r3, [r7, #4]
 8011498:	4a4d      	ldr	r2, [pc, #308]	; (80115d0 <HAL_GPIO_Init+0x328>)
 801149a:	4293      	cmp	r3, r2
 801149c:	d00d      	beq.n	80114ba <HAL_GPIO_Init+0x212>
 801149e:	687b      	ldr	r3, [r7, #4]
 80114a0:	4a4c      	ldr	r2, [pc, #304]	; (80115d4 <HAL_GPIO_Init+0x32c>)
 80114a2:	4293      	cmp	r3, r2
 80114a4:	d007      	beq.n	80114b6 <HAL_GPIO_Init+0x20e>
 80114a6:	687b      	ldr	r3, [r7, #4]
 80114a8:	4a4b      	ldr	r2, [pc, #300]	; (80115d8 <HAL_GPIO_Init+0x330>)
 80114aa:	4293      	cmp	r3, r2
 80114ac:	d101      	bne.n	80114b2 <HAL_GPIO_Init+0x20a>
 80114ae:	2307      	movs	r3, #7
 80114b0:	e00e      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114b2:	2308      	movs	r3, #8
 80114b4:	e00c      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114b6:	2306      	movs	r3, #6
 80114b8:	e00a      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114ba:	2305      	movs	r3, #5
 80114bc:	e008      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114be:	2304      	movs	r3, #4
 80114c0:	e006      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114c2:	2303      	movs	r3, #3
 80114c4:	e004      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114c6:	2302      	movs	r3, #2
 80114c8:	e002      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114ca:	2301      	movs	r3, #1
 80114cc:	e000      	b.n	80114d0 <HAL_GPIO_Init+0x228>
 80114ce:	2300      	movs	r3, #0
 80114d0:	69fa      	ldr	r2, [r7, #28]
 80114d2:	f002 0203 	and.w	r2, r2, #3
 80114d6:	0092      	lsls	r2, r2, #2
 80114d8:	4093      	lsls	r3, r2
 80114da:	69ba      	ldr	r2, [r7, #24]
 80114dc:	4313      	orrs	r3, r2
 80114de:	61bb      	str	r3, [r7, #24]
 80114e0:	4935      	ldr	r1, [pc, #212]	; (80115b8 <HAL_GPIO_Init+0x310>)
 80114e2:	69fb      	ldr	r3, [r7, #28]
 80114e4:	089b      	lsrs	r3, r3, #2
 80114e6:	3302      	adds	r3, #2
 80114e8:	69ba      	ldr	r2, [r7, #24]
 80114ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80114ee:	4b3b      	ldr	r3, [pc, #236]	; (80115dc <HAL_GPIO_Init+0x334>)
 80114f0:	689b      	ldr	r3, [r3, #8]
 80114f2:	61bb      	str	r3, [r7, #24]
 80114f4:	693b      	ldr	r3, [r7, #16]
 80114f6:	43db      	mvns	r3, r3
 80114f8:	69ba      	ldr	r2, [r7, #24]
 80114fa:	4013      	ands	r3, r2
 80114fc:	61bb      	str	r3, [r7, #24]
 80114fe:	683b      	ldr	r3, [r7, #0]
 8011500:	685b      	ldr	r3, [r3, #4]
 8011502:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8011506:	2b00      	cmp	r3, #0
 8011508:	d003      	beq.n	8011512 <HAL_GPIO_Init+0x26a>
 801150a:	69ba      	ldr	r2, [r7, #24]
 801150c:	693b      	ldr	r3, [r7, #16]
 801150e:	4313      	orrs	r3, r2
 8011510:	61bb      	str	r3, [r7, #24]
 8011512:	4a32      	ldr	r2, [pc, #200]	; (80115dc <HAL_GPIO_Init+0x334>)
 8011514:	69bb      	ldr	r3, [r7, #24]
 8011516:	6093      	str	r3, [r2, #8]
 8011518:	4b30      	ldr	r3, [pc, #192]	; (80115dc <HAL_GPIO_Init+0x334>)
 801151a:	68db      	ldr	r3, [r3, #12]
 801151c:	61bb      	str	r3, [r7, #24]
 801151e:	693b      	ldr	r3, [r7, #16]
 8011520:	43db      	mvns	r3, r3
 8011522:	69ba      	ldr	r2, [r7, #24]
 8011524:	4013      	ands	r3, r2
 8011526:	61bb      	str	r3, [r7, #24]
 8011528:	683b      	ldr	r3, [r7, #0]
 801152a:	685b      	ldr	r3, [r3, #4]
 801152c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8011530:	2b00      	cmp	r3, #0
 8011532:	d003      	beq.n	801153c <HAL_GPIO_Init+0x294>
 8011534:	69ba      	ldr	r2, [r7, #24]
 8011536:	693b      	ldr	r3, [r7, #16]
 8011538:	4313      	orrs	r3, r2
 801153a:	61bb      	str	r3, [r7, #24]
 801153c:	4a27      	ldr	r2, [pc, #156]	; (80115dc <HAL_GPIO_Init+0x334>)
 801153e:	69bb      	ldr	r3, [r7, #24]
 8011540:	60d3      	str	r3, [r2, #12]
 8011542:	4b26      	ldr	r3, [pc, #152]	; (80115dc <HAL_GPIO_Init+0x334>)
 8011544:	685b      	ldr	r3, [r3, #4]
 8011546:	61bb      	str	r3, [r7, #24]
 8011548:	693b      	ldr	r3, [r7, #16]
 801154a:	43db      	mvns	r3, r3
 801154c:	69ba      	ldr	r2, [r7, #24]
 801154e:	4013      	ands	r3, r2
 8011550:	61bb      	str	r3, [r7, #24]
 8011552:	683b      	ldr	r3, [r7, #0]
 8011554:	685b      	ldr	r3, [r3, #4]
 8011556:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801155a:	2b00      	cmp	r3, #0
 801155c:	d003      	beq.n	8011566 <HAL_GPIO_Init+0x2be>
 801155e:	69ba      	ldr	r2, [r7, #24]
 8011560:	693b      	ldr	r3, [r7, #16]
 8011562:	4313      	orrs	r3, r2
 8011564:	61bb      	str	r3, [r7, #24]
 8011566:	4a1d      	ldr	r2, [pc, #116]	; (80115dc <HAL_GPIO_Init+0x334>)
 8011568:	69bb      	ldr	r3, [r7, #24]
 801156a:	6053      	str	r3, [r2, #4]
 801156c:	4b1b      	ldr	r3, [pc, #108]	; (80115dc <HAL_GPIO_Init+0x334>)
 801156e:	681b      	ldr	r3, [r3, #0]
 8011570:	61bb      	str	r3, [r7, #24]
 8011572:	693b      	ldr	r3, [r7, #16]
 8011574:	43db      	mvns	r3, r3
 8011576:	69ba      	ldr	r2, [r7, #24]
 8011578:	4013      	ands	r3, r2
 801157a:	61bb      	str	r3, [r7, #24]
 801157c:	683b      	ldr	r3, [r7, #0]
 801157e:	685b      	ldr	r3, [r3, #4]
 8011580:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8011584:	2b00      	cmp	r3, #0
 8011586:	d003      	beq.n	8011590 <HAL_GPIO_Init+0x2e8>
 8011588:	69ba      	ldr	r2, [r7, #24]
 801158a:	693b      	ldr	r3, [r7, #16]
 801158c:	4313      	orrs	r3, r2
 801158e:	61bb      	str	r3, [r7, #24]
 8011590:	4a12      	ldr	r2, [pc, #72]	; (80115dc <HAL_GPIO_Init+0x334>)
 8011592:	69bb      	ldr	r3, [r7, #24]
 8011594:	6013      	str	r3, [r2, #0]
 8011596:	69fb      	ldr	r3, [r7, #28]
 8011598:	3301      	adds	r3, #1
 801159a:	61fb      	str	r3, [r7, #28]
 801159c:	69fb      	ldr	r3, [r7, #28]
 801159e:	2b0f      	cmp	r3, #15
 80115a0:	f67f ae90 	bls.w	80112c4 <HAL_GPIO_Init+0x1c>
 80115a4:	bf00      	nop
 80115a6:	bf00      	nop
 80115a8:	3724      	adds	r7, #36	; 0x24
 80115aa:	46bd      	mov	sp, r7
 80115ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115b0:	4770      	bx	lr
 80115b2:	bf00      	nop
 80115b4:	40023800 	.word	0x40023800
 80115b8:	40013800 	.word	0x40013800
 80115bc:	40020000 	.word	0x40020000
 80115c0:	40020400 	.word	0x40020400
 80115c4:	40020800 	.word	0x40020800
 80115c8:	40020c00 	.word	0x40020c00
 80115cc:	40021000 	.word	0x40021000
 80115d0:	40021400 	.word	0x40021400
 80115d4:	40021800 	.word	0x40021800
 80115d8:	40021c00 	.word	0x40021c00
 80115dc:	40013c00 	.word	0x40013c00

080115e0 <HAL_GPIO_WritePin>:
 80115e0:	b480      	push	{r7}
 80115e2:	b083      	sub	sp, #12
 80115e4:	af00      	add	r7, sp, #0
 80115e6:	6078      	str	r0, [r7, #4]
 80115e8:	460b      	mov	r3, r1
 80115ea:	807b      	strh	r3, [r7, #2]
 80115ec:	4613      	mov	r3, r2
 80115ee:	707b      	strb	r3, [r7, #1]
 80115f0:	787b      	ldrb	r3, [r7, #1]
 80115f2:	2b00      	cmp	r3, #0
 80115f4:	d003      	beq.n	80115fe <HAL_GPIO_WritePin+0x1e>
 80115f6:	887a      	ldrh	r2, [r7, #2]
 80115f8:	687b      	ldr	r3, [r7, #4]
 80115fa:	619a      	str	r2, [r3, #24]
 80115fc:	e003      	b.n	8011606 <HAL_GPIO_WritePin+0x26>
 80115fe:	887b      	ldrh	r3, [r7, #2]
 8011600:	041a      	lsls	r2, r3, #16
 8011602:	687b      	ldr	r3, [r7, #4]
 8011604:	619a      	str	r2, [r3, #24]
 8011606:	bf00      	nop
 8011608:	370c      	adds	r7, #12
 801160a:	46bd      	mov	sp, r7
 801160c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011610:	4770      	bx	lr
	...

08011614 <HAL_GPIO_EXTI_IRQHandler>:
 8011614:	b580      	push	{r7, lr}
 8011616:	b082      	sub	sp, #8
 8011618:	af00      	add	r7, sp, #0
 801161a:	4603      	mov	r3, r0
 801161c:	80fb      	strh	r3, [r7, #6]
 801161e:	4b08      	ldr	r3, [pc, #32]	; (8011640 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8011620:	695a      	ldr	r2, [r3, #20]
 8011622:	88fb      	ldrh	r3, [r7, #6]
 8011624:	4013      	ands	r3, r2
 8011626:	2b00      	cmp	r3, #0
 8011628:	d006      	beq.n	8011638 <HAL_GPIO_EXTI_IRQHandler+0x24>
 801162a:	4a05      	ldr	r2, [pc, #20]	; (8011640 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 801162c:	88fb      	ldrh	r3, [r7, #6]
 801162e:	6153      	str	r3, [r2, #20]
 8011630:	88fb      	ldrh	r3, [r7, #6]
 8011632:	4618      	mov	r0, r3
 8011634:	f7f0 fca2 	bl	8001f7c <HAL_GPIO_EXTI_Callback>
 8011638:	bf00      	nop
 801163a:	3708      	adds	r7, #8
 801163c:	46bd      	mov	sp, r7
 801163e:	bd80      	pop	{r7, pc}
 8011640:	40013c00 	.word	0x40013c00

08011644 <HAL_I2C_Init>:
 8011644:	b580      	push	{r7, lr}
 8011646:	b084      	sub	sp, #16
 8011648:	af00      	add	r7, sp, #0
 801164a:	6078      	str	r0, [r7, #4]
 801164c:	687b      	ldr	r3, [r7, #4]
 801164e:	2b00      	cmp	r3, #0
 8011650:	d101      	bne.n	8011656 <HAL_I2C_Init+0x12>
 8011652:	2301      	movs	r3, #1
 8011654:	e12b      	b.n	80118ae <HAL_I2C_Init+0x26a>
 8011656:	687b      	ldr	r3, [r7, #4]
 8011658:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801165c:	b2db      	uxtb	r3, r3
 801165e:	2b00      	cmp	r3, #0
 8011660:	d106      	bne.n	8011670 <HAL_I2C_Init+0x2c>
 8011662:	687b      	ldr	r3, [r7, #4]
 8011664:	2200      	movs	r2, #0
 8011666:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 801166a:	6878      	ldr	r0, [r7, #4]
 801166c:	f7f2 f928 	bl	80038c0 <HAL_I2C_MspInit>
 8011670:	687b      	ldr	r3, [r7, #4]
 8011672:	2224      	movs	r2, #36	; 0x24
 8011674:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011678:	687b      	ldr	r3, [r7, #4]
 801167a:	681b      	ldr	r3, [r3, #0]
 801167c:	681a      	ldr	r2, [r3, #0]
 801167e:	687b      	ldr	r3, [r7, #4]
 8011680:	681b      	ldr	r3, [r3, #0]
 8011682:	f022 0201 	bic.w	r2, r2, #1
 8011686:	601a      	str	r2, [r3, #0]
 8011688:	687b      	ldr	r3, [r7, #4]
 801168a:	681b      	ldr	r3, [r3, #0]
 801168c:	681a      	ldr	r2, [r3, #0]
 801168e:	687b      	ldr	r3, [r7, #4]
 8011690:	681b      	ldr	r3, [r3, #0]
 8011692:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8011696:	601a      	str	r2, [r3, #0]
 8011698:	687b      	ldr	r3, [r7, #4]
 801169a:	681b      	ldr	r3, [r3, #0]
 801169c:	681a      	ldr	r2, [r3, #0]
 801169e:	687b      	ldr	r3, [r7, #4]
 80116a0:	681b      	ldr	r3, [r3, #0]
 80116a2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80116a6:	601a      	str	r2, [r3, #0]
 80116a8:	f003 fc0c 	bl	8014ec4 <HAL_RCC_GetPCLK1Freq>
 80116ac:	60f8      	str	r0, [r7, #12]
 80116ae:	687b      	ldr	r3, [r7, #4]
 80116b0:	685b      	ldr	r3, [r3, #4]
 80116b2:	4a81      	ldr	r2, [pc, #516]	; (80118b8 <HAL_I2C_Init+0x274>)
 80116b4:	4293      	cmp	r3, r2
 80116b6:	d807      	bhi.n	80116c8 <HAL_I2C_Init+0x84>
 80116b8:	68fb      	ldr	r3, [r7, #12]
 80116ba:	4a80      	ldr	r2, [pc, #512]	; (80118bc <HAL_I2C_Init+0x278>)
 80116bc:	4293      	cmp	r3, r2
 80116be:	bf94      	ite	ls
 80116c0:	2301      	movls	r3, #1
 80116c2:	2300      	movhi	r3, #0
 80116c4:	b2db      	uxtb	r3, r3
 80116c6:	e006      	b.n	80116d6 <HAL_I2C_Init+0x92>
 80116c8:	68fb      	ldr	r3, [r7, #12]
 80116ca:	4a7d      	ldr	r2, [pc, #500]	; (80118c0 <HAL_I2C_Init+0x27c>)
 80116cc:	4293      	cmp	r3, r2
 80116ce:	bf94      	ite	ls
 80116d0:	2301      	movls	r3, #1
 80116d2:	2300      	movhi	r3, #0
 80116d4:	b2db      	uxtb	r3, r3
 80116d6:	2b00      	cmp	r3, #0
 80116d8:	d001      	beq.n	80116de <HAL_I2C_Init+0x9a>
 80116da:	2301      	movs	r3, #1
 80116dc:	e0e7      	b.n	80118ae <HAL_I2C_Init+0x26a>
 80116de:	68fb      	ldr	r3, [r7, #12]
 80116e0:	4a78      	ldr	r2, [pc, #480]	; (80118c4 <HAL_I2C_Init+0x280>)
 80116e2:	fba2 2303 	umull	r2, r3, r2, r3
 80116e6:	0c9b      	lsrs	r3, r3, #18
 80116e8:	60bb      	str	r3, [r7, #8]
 80116ea:	687b      	ldr	r3, [r7, #4]
 80116ec:	681b      	ldr	r3, [r3, #0]
 80116ee:	685b      	ldr	r3, [r3, #4]
 80116f0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80116f4:	687b      	ldr	r3, [r7, #4]
 80116f6:	681b      	ldr	r3, [r3, #0]
 80116f8:	68ba      	ldr	r2, [r7, #8]
 80116fa:	430a      	orrs	r2, r1
 80116fc:	605a      	str	r2, [r3, #4]
 80116fe:	687b      	ldr	r3, [r7, #4]
 8011700:	681b      	ldr	r3, [r3, #0]
 8011702:	6a1b      	ldr	r3, [r3, #32]
 8011704:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8011708:	687b      	ldr	r3, [r7, #4]
 801170a:	685b      	ldr	r3, [r3, #4]
 801170c:	4a6a      	ldr	r2, [pc, #424]	; (80118b8 <HAL_I2C_Init+0x274>)
 801170e:	4293      	cmp	r3, r2
 8011710:	d802      	bhi.n	8011718 <HAL_I2C_Init+0xd4>
 8011712:	68bb      	ldr	r3, [r7, #8]
 8011714:	3301      	adds	r3, #1
 8011716:	e009      	b.n	801172c <HAL_I2C_Init+0xe8>
 8011718:	68bb      	ldr	r3, [r7, #8]
 801171a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801171e:	fb02 f303 	mul.w	r3, r2, r3
 8011722:	4a69      	ldr	r2, [pc, #420]	; (80118c8 <HAL_I2C_Init+0x284>)
 8011724:	fba2 2303 	umull	r2, r3, r2, r3
 8011728:	099b      	lsrs	r3, r3, #6
 801172a:	3301      	adds	r3, #1
 801172c:	687a      	ldr	r2, [r7, #4]
 801172e:	6812      	ldr	r2, [r2, #0]
 8011730:	430b      	orrs	r3, r1
 8011732:	6213      	str	r3, [r2, #32]
 8011734:	687b      	ldr	r3, [r7, #4]
 8011736:	681b      	ldr	r3, [r3, #0]
 8011738:	69db      	ldr	r3, [r3, #28]
 801173a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 801173e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8011742:	687b      	ldr	r3, [r7, #4]
 8011744:	685b      	ldr	r3, [r3, #4]
 8011746:	495c      	ldr	r1, [pc, #368]	; (80118b8 <HAL_I2C_Init+0x274>)
 8011748:	428b      	cmp	r3, r1
 801174a:	d819      	bhi.n	8011780 <HAL_I2C_Init+0x13c>
 801174c:	68fb      	ldr	r3, [r7, #12]
 801174e:	1e59      	subs	r1, r3, #1
 8011750:	687b      	ldr	r3, [r7, #4]
 8011752:	685b      	ldr	r3, [r3, #4]
 8011754:	005b      	lsls	r3, r3, #1
 8011756:	fbb1 f3f3 	udiv	r3, r1, r3
 801175a:	1c59      	adds	r1, r3, #1
 801175c:	f640 73fc 	movw	r3, #4092	; 0xffc
 8011760:	400b      	ands	r3, r1
 8011762:	2b00      	cmp	r3, #0
 8011764:	d00a      	beq.n	801177c <HAL_I2C_Init+0x138>
 8011766:	68fb      	ldr	r3, [r7, #12]
 8011768:	1e59      	subs	r1, r3, #1
 801176a:	687b      	ldr	r3, [r7, #4]
 801176c:	685b      	ldr	r3, [r3, #4]
 801176e:	005b      	lsls	r3, r3, #1
 8011770:	fbb1 f3f3 	udiv	r3, r1, r3
 8011774:	3301      	adds	r3, #1
 8011776:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801177a:	e051      	b.n	8011820 <HAL_I2C_Init+0x1dc>
 801177c:	2304      	movs	r3, #4
 801177e:	e04f      	b.n	8011820 <HAL_I2C_Init+0x1dc>
 8011780:	687b      	ldr	r3, [r7, #4]
 8011782:	689b      	ldr	r3, [r3, #8]
 8011784:	2b00      	cmp	r3, #0
 8011786:	d111      	bne.n	80117ac <HAL_I2C_Init+0x168>
 8011788:	68fb      	ldr	r3, [r7, #12]
 801178a:	1e58      	subs	r0, r3, #1
 801178c:	687b      	ldr	r3, [r7, #4]
 801178e:	6859      	ldr	r1, [r3, #4]
 8011790:	460b      	mov	r3, r1
 8011792:	005b      	lsls	r3, r3, #1
 8011794:	440b      	add	r3, r1
 8011796:	fbb0 f3f3 	udiv	r3, r0, r3
 801179a:	3301      	adds	r3, #1
 801179c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80117a0:	2b00      	cmp	r3, #0
 80117a2:	bf0c      	ite	eq
 80117a4:	2301      	moveq	r3, #1
 80117a6:	2300      	movne	r3, #0
 80117a8:	b2db      	uxtb	r3, r3
 80117aa:	e012      	b.n	80117d2 <HAL_I2C_Init+0x18e>
 80117ac:	68fb      	ldr	r3, [r7, #12]
 80117ae:	1e58      	subs	r0, r3, #1
 80117b0:	687b      	ldr	r3, [r7, #4]
 80117b2:	6859      	ldr	r1, [r3, #4]
 80117b4:	460b      	mov	r3, r1
 80117b6:	009b      	lsls	r3, r3, #2
 80117b8:	440b      	add	r3, r1
 80117ba:	0099      	lsls	r1, r3, #2
 80117bc:	440b      	add	r3, r1
 80117be:	fbb0 f3f3 	udiv	r3, r0, r3
 80117c2:	3301      	adds	r3, #1
 80117c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80117c8:	2b00      	cmp	r3, #0
 80117ca:	bf0c      	ite	eq
 80117cc:	2301      	moveq	r3, #1
 80117ce:	2300      	movne	r3, #0
 80117d0:	b2db      	uxtb	r3, r3
 80117d2:	2b00      	cmp	r3, #0
 80117d4:	d001      	beq.n	80117da <HAL_I2C_Init+0x196>
 80117d6:	2301      	movs	r3, #1
 80117d8:	e022      	b.n	8011820 <HAL_I2C_Init+0x1dc>
 80117da:	687b      	ldr	r3, [r7, #4]
 80117dc:	689b      	ldr	r3, [r3, #8]
 80117de:	2b00      	cmp	r3, #0
 80117e0:	d10e      	bne.n	8011800 <HAL_I2C_Init+0x1bc>
 80117e2:	68fb      	ldr	r3, [r7, #12]
 80117e4:	1e58      	subs	r0, r3, #1
 80117e6:	687b      	ldr	r3, [r7, #4]
 80117e8:	6859      	ldr	r1, [r3, #4]
 80117ea:	460b      	mov	r3, r1
 80117ec:	005b      	lsls	r3, r3, #1
 80117ee:	440b      	add	r3, r1
 80117f0:	fbb0 f3f3 	udiv	r3, r0, r3
 80117f4:	3301      	adds	r3, #1
 80117f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80117fa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80117fe:	e00f      	b.n	8011820 <HAL_I2C_Init+0x1dc>
 8011800:	68fb      	ldr	r3, [r7, #12]
 8011802:	1e58      	subs	r0, r3, #1
 8011804:	687b      	ldr	r3, [r7, #4]
 8011806:	6859      	ldr	r1, [r3, #4]
 8011808:	460b      	mov	r3, r1
 801180a:	009b      	lsls	r3, r3, #2
 801180c:	440b      	add	r3, r1
 801180e:	0099      	lsls	r1, r3, #2
 8011810:	440b      	add	r3, r1
 8011812:	fbb0 f3f3 	udiv	r3, r0, r3
 8011816:	3301      	adds	r3, #1
 8011818:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801181c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8011820:	6879      	ldr	r1, [r7, #4]
 8011822:	6809      	ldr	r1, [r1, #0]
 8011824:	4313      	orrs	r3, r2
 8011826:	61cb      	str	r3, [r1, #28]
 8011828:	687b      	ldr	r3, [r7, #4]
 801182a:	681b      	ldr	r3, [r3, #0]
 801182c:	681b      	ldr	r3, [r3, #0]
 801182e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8011832:	687b      	ldr	r3, [r7, #4]
 8011834:	69da      	ldr	r2, [r3, #28]
 8011836:	687b      	ldr	r3, [r7, #4]
 8011838:	6a1b      	ldr	r3, [r3, #32]
 801183a:	431a      	orrs	r2, r3
 801183c:	687b      	ldr	r3, [r7, #4]
 801183e:	681b      	ldr	r3, [r3, #0]
 8011840:	430a      	orrs	r2, r1
 8011842:	601a      	str	r2, [r3, #0]
 8011844:	687b      	ldr	r3, [r7, #4]
 8011846:	681b      	ldr	r3, [r3, #0]
 8011848:	689b      	ldr	r3, [r3, #8]
 801184a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 801184e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8011852:	687a      	ldr	r2, [r7, #4]
 8011854:	6911      	ldr	r1, [r2, #16]
 8011856:	687a      	ldr	r2, [r7, #4]
 8011858:	68d2      	ldr	r2, [r2, #12]
 801185a:	4311      	orrs	r1, r2
 801185c:	687a      	ldr	r2, [r7, #4]
 801185e:	6812      	ldr	r2, [r2, #0]
 8011860:	430b      	orrs	r3, r1
 8011862:	6093      	str	r3, [r2, #8]
 8011864:	687b      	ldr	r3, [r7, #4]
 8011866:	681b      	ldr	r3, [r3, #0]
 8011868:	68db      	ldr	r3, [r3, #12]
 801186a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 801186e:	687b      	ldr	r3, [r7, #4]
 8011870:	695a      	ldr	r2, [r3, #20]
 8011872:	687b      	ldr	r3, [r7, #4]
 8011874:	699b      	ldr	r3, [r3, #24]
 8011876:	431a      	orrs	r2, r3
 8011878:	687b      	ldr	r3, [r7, #4]
 801187a:	681b      	ldr	r3, [r3, #0]
 801187c:	430a      	orrs	r2, r1
 801187e:	60da      	str	r2, [r3, #12]
 8011880:	687b      	ldr	r3, [r7, #4]
 8011882:	681b      	ldr	r3, [r3, #0]
 8011884:	681a      	ldr	r2, [r3, #0]
 8011886:	687b      	ldr	r3, [r7, #4]
 8011888:	681b      	ldr	r3, [r3, #0]
 801188a:	f042 0201 	orr.w	r2, r2, #1
 801188e:	601a      	str	r2, [r3, #0]
 8011890:	687b      	ldr	r3, [r7, #4]
 8011892:	2200      	movs	r2, #0
 8011894:	641a      	str	r2, [r3, #64]	; 0x40
 8011896:	687b      	ldr	r3, [r7, #4]
 8011898:	2220      	movs	r2, #32
 801189a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801189e:	687b      	ldr	r3, [r7, #4]
 80118a0:	2200      	movs	r2, #0
 80118a2:	631a      	str	r2, [r3, #48]	; 0x30
 80118a4:	687b      	ldr	r3, [r7, #4]
 80118a6:	2200      	movs	r2, #0
 80118a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80118ac:	2300      	movs	r3, #0
 80118ae:	4618      	mov	r0, r3
 80118b0:	3710      	adds	r7, #16
 80118b2:	46bd      	mov	sp, r7
 80118b4:	bd80      	pop	{r7, pc}
 80118b6:	bf00      	nop
 80118b8:	000186a0 	.word	0x000186a0
 80118bc:	001e847f 	.word	0x001e847f
 80118c0:	003d08ff 	.word	0x003d08ff
 80118c4:	431bde83 	.word	0x431bde83
 80118c8:	10624dd3 	.word	0x10624dd3

080118cc <HAL_I2C_Mem_Write>:
 80118cc:	b580      	push	{r7, lr}
 80118ce:	b088      	sub	sp, #32
 80118d0:	af02      	add	r7, sp, #8
 80118d2:	60f8      	str	r0, [r7, #12]
 80118d4:	4608      	mov	r0, r1
 80118d6:	4611      	mov	r1, r2
 80118d8:	461a      	mov	r2, r3
 80118da:	4603      	mov	r3, r0
 80118dc:	817b      	strh	r3, [r7, #10]
 80118de:	460b      	mov	r3, r1
 80118e0:	813b      	strh	r3, [r7, #8]
 80118e2:	4613      	mov	r3, r2
 80118e4:	80fb      	strh	r3, [r7, #6]
 80118e6:	f7fd fedd 	bl	800f6a4 <HAL_GetTick>
 80118ea:	6178      	str	r0, [r7, #20]
 80118ec:	68fb      	ldr	r3, [r7, #12]
 80118ee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80118f2:	b2db      	uxtb	r3, r3
 80118f4:	2b20      	cmp	r3, #32
 80118f6:	f040 80d9 	bne.w	8011aac <HAL_I2C_Mem_Write+0x1e0>
 80118fa:	697b      	ldr	r3, [r7, #20]
 80118fc:	9300      	str	r3, [sp, #0]
 80118fe:	2319      	movs	r3, #25
 8011900:	2201      	movs	r2, #1
 8011902:	496d      	ldr	r1, [pc, #436]	; (8011ab8 <HAL_I2C_Mem_Write+0x1ec>)
 8011904:	68f8      	ldr	r0, [r7, #12]
 8011906:	f001 fa53 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 801190a:	4603      	mov	r3, r0
 801190c:	2b00      	cmp	r3, #0
 801190e:	d001      	beq.n	8011914 <HAL_I2C_Mem_Write+0x48>
 8011910:	2302      	movs	r3, #2
 8011912:	e0cc      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 8011914:	68fb      	ldr	r3, [r7, #12]
 8011916:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801191a:	2b01      	cmp	r3, #1
 801191c:	d101      	bne.n	8011922 <HAL_I2C_Mem_Write+0x56>
 801191e:	2302      	movs	r3, #2
 8011920:	e0c5      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 8011922:	68fb      	ldr	r3, [r7, #12]
 8011924:	2201      	movs	r2, #1
 8011926:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 801192a:	68fb      	ldr	r3, [r7, #12]
 801192c:	681b      	ldr	r3, [r3, #0]
 801192e:	681b      	ldr	r3, [r3, #0]
 8011930:	f003 0301 	and.w	r3, r3, #1
 8011934:	2b01      	cmp	r3, #1
 8011936:	d007      	beq.n	8011948 <HAL_I2C_Mem_Write+0x7c>
 8011938:	68fb      	ldr	r3, [r7, #12]
 801193a:	681b      	ldr	r3, [r3, #0]
 801193c:	681a      	ldr	r2, [r3, #0]
 801193e:	68fb      	ldr	r3, [r7, #12]
 8011940:	681b      	ldr	r3, [r3, #0]
 8011942:	f042 0201 	orr.w	r2, r2, #1
 8011946:	601a      	str	r2, [r3, #0]
 8011948:	68fb      	ldr	r3, [r7, #12]
 801194a:	681b      	ldr	r3, [r3, #0]
 801194c:	681a      	ldr	r2, [r3, #0]
 801194e:	68fb      	ldr	r3, [r7, #12]
 8011950:	681b      	ldr	r3, [r3, #0]
 8011952:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8011956:	601a      	str	r2, [r3, #0]
 8011958:	68fb      	ldr	r3, [r7, #12]
 801195a:	2221      	movs	r2, #33	; 0x21
 801195c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011960:	68fb      	ldr	r3, [r7, #12]
 8011962:	2240      	movs	r2, #64	; 0x40
 8011964:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011968:	68fb      	ldr	r3, [r7, #12]
 801196a:	2200      	movs	r2, #0
 801196c:	641a      	str	r2, [r3, #64]	; 0x40
 801196e:	68fb      	ldr	r3, [r7, #12]
 8011970:	6a3a      	ldr	r2, [r7, #32]
 8011972:	625a      	str	r2, [r3, #36]	; 0x24
 8011974:	68fb      	ldr	r3, [r7, #12]
 8011976:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8011978:	855a      	strh	r2, [r3, #42]	; 0x2a
 801197a:	68fb      	ldr	r3, [r7, #12]
 801197c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 801197e:	b29a      	uxth	r2, r3
 8011980:	68fb      	ldr	r3, [r7, #12]
 8011982:	851a      	strh	r2, [r3, #40]	; 0x28
 8011984:	68fb      	ldr	r3, [r7, #12]
 8011986:	4a4d      	ldr	r2, [pc, #308]	; (8011abc <HAL_I2C_Mem_Write+0x1f0>)
 8011988:	62da      	str	r2, [r3, #44]	; 0x2c
 801198a:	88f8      	ldrh	r0, [r7, #6]
 801198c:	893a      	ldrh	r2, [r7, #8]
 801198e:	8979      	ldrh	r1, [r7, #10]
 8011990:	697b      	ldr	r3, [r7, #20]
 8011992:	9301      	str	r3, [sp, #4]
 8011994:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011996:	9300      	str	r3, [sp, #0]
 8011998:	4603      	mov	r3, r0
 801199a:	68f8      	ldr	r0, [r7, #12]
 801199c:	f000 fed0 	bl	8012740 <I2C_RequestMemoryWrite>
 80119a0:	4603      	mov	r3, r0
 80119a2:	2b00      	cmp	r3, #0
 80119a4:	d052      	beq.n	8011a4c <HAL_I2C_Mem_Write+0x180>
 80119a6:	2301      	movs	r3, #1
 80119a8:	e081      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 80119aa:	697a      	ldr	r2, [r7, #20]
 80119ac:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80119ae:	68f8      	ldr	r0, [r7, #12]
 80119b0:	f001 fad4 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 80119b4:	4603      	mov	r3, r0
 80119b6:	2b00      	cmp	r3, #0
 80119b8:	d00d      	beq.n	80119d6 <HAL_I2C_Mem_Write+0x10a>
 80119ba:	68fb      	ldr	r3, [r7, #12]
 80119bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80119be:	2b04      	cmp	r3, #4
 80119c0:	d107      	bne.n	80119d2 <HAL_I2C_Mem_Write+0x106>
 80119c2:	68fb      	ldr	r3, [r7, #12]
 80119c4:	681b      	ldr	r3, [r3, #0]
 80119c6:	681a      	ldr	r2, [r3, #0]
 80119c8:	68fb      	ldr	r3, [r7, #12]
 80119ca:	681b      	ldr	r3, [r3, #0]
 80119cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80119d0:	601a      	str	r2, [r3, #0]
 80119d2:	2301      	movs	r3, #1
 80119d4:	e06b      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 80119d6:	68fb      	ldr	r3, [r7, #12]
 80119d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119da:	781a      	ldrb	r2, [r3, #0]
 80119dc:	68fb      	ldr	r3, [r7, #12]
 80119de:	681b      	ldr	r3, [r3, #0]
 80119e0:	611a      	str	r2, [r3, #16]
 80119e2:	68fb      	ldr	r3, [r7, #12]
 80119e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119e6:	1c5a      	adds	r2, r3, #1
 80119e8:	68fb      	ldr	r3, [r7, #12]
 80119ea:	625a      	str	r2, [r3, #36]	; 0x24
 80119ec:	68fb      	ldr	r3, [r7, #12]
 80119ee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80119f0:	3b01      	subs	r3, #1
 80119f2:	b29a      	uxth	r2, r3
 80119f4:	68fb      	ldr	r3, [r7, #12]
 80119f6:	851a      	strh	r2, [r3, #40]	; 0x28
 80119f8:	68fb      	ldr	r3, [r7, #12]
 80119fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80119fc:	b29b      	uxth	r3, r3
 80119fe:	3b01      	subs	r3, #1
 8011a00:	b29a      	uxth	r2, r3
 8011a02:	68fb      	ldr	r3, [r7, #12]
 8011a04:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011a06:	68fb      	ldr	r3, [r7, #12]
 8011a08:	681b      	ldr	r3, [r3, #0]
 8011a0a:	695b      	ldr	r3, [r3, #20]
 8011a0c:	f003 0304 	and.w	r3, r3, #4
 8011a10:	2b04      	cmp	r3, #4
 8011a12:	d11b      	bne.n	8011a4c <HAL_I2C_Mem_Write+0x180>
 8011a14:	68fb      	ldr	r3, [r7, #12]
 8011a16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011a18:	2b00      	cmp	r3, #0
 8011a1a:	d017      	beq.n	8011a4c <HAL_I2C_Mem_Write+0x180>
 8011a1c:	68fb      	ldr	r3, [r7, #12]
 8011a1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a20:	781a      	ldrb	r2, [r3, #0]
 8011a22:	68fb      	ldr	r3, [r7, #12]
 8011a24:	681b      	ldr	r3, [r3, #0]
 8011a26:	611a      	str	r2, [r3, #16]
 8011a28:	68fb      	ldr	r3, [r7, #12]
 8011a2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a2c:	1c5a      	adds	r2, r3, #1
 8011a2e:	68fb      	ldr	r3, [r7, #12]
 8011a30:	625a      	str	r2, [r3, #36]	; 0x24
 8011a32:	68fb      	ldr	r3, [r7, #12]
 8011a34:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011a36:	3b01      	subs	r3, #1
 8011a38:	b29a      	uxth	r2, r3
 8011a3a:	68fb      	ldr	r3, [r7, #12]
 8011a3c:	851a      	strh	r2, [r3, #40]	; 0x28
 8011a3e:	68fb      	ldr	r3, [r7, #12]
 8011a40:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011a42:	b29b      	uxth	r3, r3
 8011a44:	3b01      	subs	r3, #1
 8011a46:	b29a      	uxth	r2, r3
 8011a48:	68fb      	ldr	r3, [r7, #12]
 8011a4a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011a4c:	68fb      	ldr	r3, [r7, #12]
 8011a4e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011a50:	2b00      	cmp	r3, #0
 8011a52:	d1aa      	bne.n	80119aa <HAL_I2C_Mem_Write+0xde>
 8011a54:	697a      	ldr	r2, [r7, #20]
 8011a56:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8011a58:	68f8      	ldr	r0, [r7, #12]
 8011a5a:	f001 fac0 	bl	8012fde <I2C_WaitOnBTFFlagUntilTimeout>
 8011a5e:	4603      	mov	r3, r0
 8011a60:	2b00      	cmp	r3, #0
 8011a62:	d00d      	beq.n	8011a80 <HAL_I2C_Mem_Write+0x1b4>
 8011a64:	68fb      	ldr	r3, [r7, #12]
 8011a66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a68:	2b04      	cmp	r3, #4
 8011a6a:	d107      	bne.n	8011a7c <HAL_I2C_Mem_Write+0x1b0>
 8011a6c:	68fb      	ldr	r3, [r7, #12]
 8011a6e:	681b      	ldr	r3, [r3, #0]
 8011a70:	681a      	ldr	r2, [r3, #0]
 8011a72:	68fb      	ldr	r3, [r7, #12]
 8011a74:	681b      	ldr	r3, [r3, #0]
 8011a76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011a7a:	601a      	str	r2, [r3, #0]
 8011a7c:	2301      	movs	r3, #1
 8011a7e:	e016      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 8011a80:	68fb      	ldr	r3, [r7, #12]
 8011a82:	681b      	ldr	r3, [r3, #0]
 8011a84:	681a      	ldr	r2, [r3, #0]
 8011a86:	68fb      	ldr	r3, [r7, #12]
 8011a88:	681b      	ldr	r3, [r3, #0]
 8011a8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011a8e:	601a      	str	r2, [r3, #0]
 8011a90:	68fb      	ldr	r3, [r7, #12]
 8011a92:	2220      	movs	r2, #32
 8011a94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011a98:	68fb      	ldr	r3, [r7, #12]
 8011a9a:	2200      	movs	r2, #0
 8011a9c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011aa0:	68fb      	ldr	r3, [r7, #12]
 8011aa2:	2200      	movs	r2, #0
 8011aa4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011aa8:	2300      	movs	r3, #0
 8011aaa:	e000      	b.n	8011aae <HAL_I2C_Mem_Write+0x1e2>
 8011aac:	2302      	movs	r3, #2
 8011aae:	4618      	mov	r0, r3
 8011ab0:	3718      	adds	r7, #24
 8011ab2:	46bd      	mov	sp, r7
 8011ab4:	bd80      	pop	{r7, pc}
 8011ab6:	bf00      	nop
 8011ab8:	00100002 	.word	0x00100002
 8011abc:	ffff0000 	.word	0xffff0000

08011ac0 <HAL_I2C_Mem_Read>:
 8011ac0:	b580      	push	{r7, lr}
 8011ac2:	b08c      	sub	sp, #48	; 0x30
 8011ac4:	af02      	add	r7, sp, #8
 8011ac6:	60f8      	str	r0, [r7, #12]
 8011ac8:	4608      	mov	r0, r1
 8011aca:	4611      	mov	r1, r2
 8011acc:	461a      	mov	r2, r3
 8011ace:	4603      	mov	r3, r0
 8011ad0:	817b      	strh	r3, [r7, #10]
 8011ad2:	460b      	mov	r3, r1
 8011ad4:	813b      	strh	r3, [r7, #8]
 8011ad6:	4613      	mov	r3, r2
 8011ad8:	80fb      	strh	r3, [r7, #6]
 8011ada:	f7fd fde3 	bl	800f6a4 <HAL_GetTick>
 8011ade:	6278      	str	r0, [r7, #36]	; 0x24
 8011ae0:	68fb      	ldr	r3, [r7, #12]
 8011ae2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8011ae6:	b2db      	uxtb	r3, r3
 8011ae8:	2b20      	cmp	r3, #32
 8011aea:	f040 8208 	bne.w	8011efe <HAL_I2C_Mem_Read+0x43e>
 8011aee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011af0:	9300      	str	r3, [sp, #0]
 8011af2:	2319      	movs	r3, #25
 8011af4:	2201      	movs	r2, #1
 8011af6:	497b      	ldr	r1, [pc, #492]	; (8011ce4 <HAL_I2C_Mem_Read+0x224>)
 8011af8:	68f8      	ldr	r0, [r7, #12]
 8011afa:	f001 f959 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 8011afe:	4603      	mov	r3, r0
 8011b00:	2b00      	cmp	r3, #0
 8011b02:	d001      	beq.n	8011b08 <HAL_I2C_Mem_Read+0x48>
 8011b04:	2302      	movs	r3, #2
 8011b06:	e1fb      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011b08:	68fb      	ldr	r3, [r7, #12]
 8011b0a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8011b0e:	2b01      	cmp	r3, #1
 8011b10:	d101      	bne.n	8011b16 <HAL_I2C_Mem_Read+0x56>
 8011b12:	2302      	movs	r3, #2
 8011b14:	e1f4      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011b16:	68fb      	ldr	r3, [r7, #12]
 8011b18:	2201      	movs	r2, #1
 8011b1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011b1e:	68fb      	ldr	r3, [r7, #12]
 8011b20:	681b      	ldr	r3, [r3, #0]
 8011b22:	681b      	ldr	r3, [r3, #0]
 8011b24:	f003 0301 	and.w	r3, r3, #1
 8011b28:	2b01      	cmp	r3, #1
 8011b2a:	d007      	beq.n	8011b3c <HAL_I2C_Mem_Read+0x7c>
 8011b2c:	68fb      	ldr	r3, [r7, #12]
 8011b2e:	681b      	ldr	r3, [r3, #0]
 8011b30:	681a      	ldr	r2, [r3, #0]
 8011b32:	68fb      	ldr	r3, [r7, #12]
 8011b34:	681b      	ldr	r3, [r3, #0]
 8011b36:	f042 0201 	orr.w	r2, r2, #1
 8011b3a:	601a      	str	r2, [r3, #0]
 8011b3c:	68fb      	ldr	r3, [r7, #12]
 8011b3e:	681b      	ldr	r3, [r3, #0]
 8011b40:	681a      	ldr	r2, [r3, #0]
 8011b42:	68fb      	ldr	r3, [r7, #12]
 8011b44:	681b      	ldr	r3, [r3, #0]
 8011b46:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8011b4a:	601a      	str	r2, [r3, #0]
 8011b4c:	68fb      	ldr	r3, [r7, #12]
 8011b4e:	2222      	movs	r2, #34	; 0x22
 8011b50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011b54:	68fb      	ldr	r3, [r7, #12]
 8011b56:	2240      	movs	r2, #64	; 0x40
 8011b58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011b5c:	68fb      	ldr	r3, [r7, #12]
 8011b5e:	2200      	movs	r2, #0
 8011b60:	641a      	str	r2, [r3, #64]	; 0x40
 8011b62:	68fb      	ldr	r3, [r7, #12]
 8011b64:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8011b66:	625a      	str	r2, [r3, #36]	; 0x24
 8011b68:	68fb      	ldr	r3, [r7, #12]
 8011b6a:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8011b6c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011b6e:	68fb      	ldr	r3, [r7, #12]
 8011b70:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011b72:	b29a      	uxth	r2, r3
 8011b74:	68fb      	ldr	r3, [r7, #12]
 8011b76:	851a      	strh	r2, [r3, #40]	; 0x28
 8011b78:	68fb      	ldr	r3, [r7, #12]
 8011b7a:	4a5b      	ldr	r2, [pc, #364]	; (8011ce8 <HAL_I2C_Mem_Read+0x228>)
 8011b7c:	62da      	str	r2, [r3, #44]	; 0x2c
 8011b7e:	88f8      	ldrh	r0, [r7, #6]
 8011b80:	893a      	ldrh	r2, [r7, #8]
 8011b82:	8979      	ldrh	r1, [r7, #10]
 8011b84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011b86:	9301      	str	r3, [sp, #4]
 8011b88:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011b8a:	9300      	str	r3, [sp, #0]
 8011b8c:	4603      	mov	r3, r0
 8011b8e:	68f8      	ldr	r0, [r7, #12]
 8011b90:	f000 fe6c 	bl	801286c <I2C_RequestMemoryRead>
 8011b94:	4603      	mov	r3, r0
 8011b96:	2b00      	cmp	r3, #0
 8011b98:	d001      	beq.n	8011b9e <HAL_I2C_Mem_Read+0xde>
 8011b9a:	2301      	movs	r3, #1
 8011b9c:	e1b0      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011b9e:	68fb      	ldr	r3, [r7, #12]
 8011ba0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011ba2:	2b00      	cmp	r3, #0
 8011ba4:	d113      	bne.n	8011bce <HAL_I2C_Mem_Read+0x10e>
 8011ba6:	2300      	movs	r3, #0
 8011ba8:	623b      	str	r3, [r7, #32]
 8011baa:	68fb      	ldr	r3, [r7, #12]
 8011bac:	681b      	ldr	r3, [r3, #0]
 8011bae:	695b      	ldr	r3, [r3, #20]
 8011bb0:	623b      	str	r3, [r7, #32]
 8011bb2:	68fb      	ldr	r3, [r7, #12]
 8011bb4:	681b      	ldr	r3, [r3, #0]
 8011bb6:	699b      	ldr	r3, [r3, #24]
 8011bb8:	623b      	str	r3, [r7, #32]
 8011bba:	6a3b      	ldr	r3, [r7, #32]
 8011bbc:	68fb      	ldr	r3, [r7, #12]
 8011bbe:	681b      	ldr	r3, [r3, #0]
 8011bc0:	681a      	ldr	r2, [r3, #0]
 8011bc2:	68fb      	ldr	r3, [r7, #12]
 8011bc4:	681b      	ldr	r3, [r3, #0]
 8011bc6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011bca:	601a      	str	r2, [r3, #0]
 8011bcc:	e184      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011bce:	68fb      	ldr	r3, [r7, #12]
 8011bd0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011bd2:	2b01      	cmp	r3, #1
 8011bd4:	d11b      	bne.n	8011c0e <HAL_I2C_Mem_Read+0x14e>
 8011bd6:	68fb      	ldr	r3, [r7, #12]
 8011bd8:	681b      	ldr	r3, [r3, #0]
 8011bda:	681a      	ldr	r2, [r3, #0]
 8011bdc:	68fb      	ldr	r3, [r7, #12]
 8011bde:	681b      	ldr	r3, [r3, #0]
 8011be0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011be4:	601a      	str	r2, [r3, #0]
 8011be6:	2300      	movs	r3, #0
 8011be8:	61fb      	str	r3, [r7, #28]
 8011bea:	68fb      	ldr	r3, [r7, #12]
 8011bec:	681b      	ldr	r3, [r3, #0]
 8011bee:	695b      	ldr	r3, [r3, #20]
 8011bf0:	61fb      	str	r3, [r7, #28]
 8011bf2:	68fb      	ldr	r3, [r7, #12]
 8011bf4:	681b      	ldr	r3, [r3, #0]
 8011bf6:	699b      	ldr	r3, [r3, #24]
 8011bf8:	61fb      	str	r3, [r7, #28]
 8011bfa:	69fb      	ldr	r3, [r7, #28]
 8011bfc:	68fb      	ldr	r3, [r7, #12]
 8011bfe:	681b      	ldr	r3, [r3, #0]
 8011c00:	681a      	ldr	r2, [r3, #0]
 8011c02:	68fb      	ldr	r3, [r7, #12]
 8011c04:	681b      	ldr	r3, [r3, #0]
 8011c06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011c0a:	601a      	str	r2, [r3, #0]
 8011c0c:	e164      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011c0e:	68fb      	ldr	r3, [r7, #12]
 8011c10:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011c12:	2b02      	cmp	r3, #2
 8011c14:	d11b      	bne.n	8011c4e <HAL_I2C_Mem_Read+0x18e>
 8011c16:	68fb      	ldr	r3, [r7, #12]
 8011c18:	681b      	ldr	r3, [r3, #0]
 8011c1a:	681a      	ldr	r2, [r3, #0]
 8011c1c:	68fb      	ldr	r3, [r7, #12]
 8011c1e:	681b      	ldr	r3, [r3, #0]
 8011c20:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011c24:	601a      	str	r2, [r3, #0]
 8011c26:	68fb      	ldr	r3, [r7, #12]
 8011c28:	681b      	ldr	r3, [r3, #0]
 8011c2a:	681a      	ldr	r2, [r3, #0]
 8011c2c:	68fb      	ldr	r3, [r7, #12]
 8011c2e:	681b      	ldr	r3, [r3, #0]
 8011c30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8011c34:	601a      	str	r2, [r3, #0]
 8011c36:	2300      	movs	r3, #0
 8011c38:	61bb      	str	r3, [r7, #24]
 8011c3a:	68fb      	ldr	r3, [r7, #12]
 8011c3c:	681b      	ldr	r3, [r3, #0]
 8011c3e:	695b      	ldr	r3, [r3, #20]
 8011c40:	61bb      	str	r3, [r7, #24]
 8011c42:	68fb      	ldr	r3, [r7, #12]
 8011c44:	681b      	ldr	r3, [r3, #0]
 8011c46:	699b      	ldr	r3, [r3, #24]
 8011c48:	61bb      	str	r3, [r7, #24]
 8011c4a:	69bb      	ldr	r3, [r7, #24]
 8011c4c:	e144      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011c4e:	2300      	movs	r3, #0
 8011c50:	617b      	str	r3, [r7, #20]
 8011c52:	68fb      	ldr	r3, [r7, #12]
 8011c54:	681b      	ldr	r3, [r3, #0]
 8011c56:	695b      	ldr	r3, [r3, #20]
 8011c58:	617b      	str	r3, [r7, #20]
 8011c5a:	68fb      	ldr	r3, [r7, #12]
 8011c5c:	681b      	ldr	r3, [r3, #0]
 8011c5e:	699b      	ldr	r3, [r3, #24]
 8011c60:	617b      	str	r3, [r7, #20]
 8011c62:	697b      	ldr	r3, [r7, #20]
 8011c64:	e138      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011c66:	68fb      	ldr	r3, [r7, #12]
 8011c68:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011c6a:	2b03      	cmp	r3, #3
 8011c6c:	f200 80f1 	bhi.w	8011e52 <HAL_I2C_Mem_Read+0x392>
 8011c70:	68fb      	ldr	r3, [r7, #12]
 8011c72:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011c74:	2b01      	cmp	r3, #1
 8011c76:	d123      	bne.n	8011cc0 <HAL_I2C_Mem_Read+0x200>
 8011c78:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011c7a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8011c7c:	68f8      	ldr	r0, [r7, #12]
 8011c7e:	f001 f9ef 	bl	8013060 <I2C_WaitOnRXNEFlagUntilTimeout>
 8011c82:	4603      	mov	r3, r0
 8011c84:	2b00      	cmp	r3, #0
 8011c86:	d001      	beq.n	8011c8c <HAL_I2C_Mem_Read+0x1cc>
 8011c88:	2301      	movs	r3, #1
 8011c8a:	e139      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011c8c:	68fb      	ldr	r3, [r7, #12]
 8011c8e:	681b      	ldr	r3, [r3, #0]
 8011c90:	691a      	ldr	r2, [r3, #16]
 8011c92:	68fb      	ldr	r3, [r7, #12]
 8011c94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c96:	b2d2      	uxtb	r2, r2
 8011c98:	701a      	strb	r2, [r3, #0]
 8011c9a:	68fb      	ldr	r3, [r7, #12]
 8011c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c9e:	1c5a      	adds	r2, r3, #1
 8011ca0:	68fb      	ldr	r3, [r7, #12]
 8011ca2:	625a      	str	r2, [r3, #36]	; 0x24
 8011ca4:	68fb      	ldr	r3, [r7, #12]
 8011ca6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011ca8:	3b01      	subs	r3, #1
 8011caa:	b29a      	uxth	r2, r3
 8011cac:	68fb      	ldr	r3, [r7, #12]
 8011cae:	851a      	strh	r2, [r3, #40]	; 0x28
 8011cb0:	68fb      	ldr	r3, [r7, #12]
 8011cb2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011cb4:	b29b      	uxth	r3, r3
 8011cb6:	3b01      	subs	r3, #1
 8011cb8:	b29a      	uxth	r2, r3
 8011cba:	68fb      	ldr	r3, [r7, #12]
 8011cbc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011cbe:	e10b      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011cc0:	68fb      	ldr	r3, [r7, #12]
 8011cc2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011cc4:	2b02      	cmp	r3, #2
 8011cc6:	d14e      	bne.n	8011d66 <HAL_I2C_Mem_Read+0x2a6>
 8011cc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011cca:	9300      	str	r3, [sp, #0]
 8011ccc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011cce:	2200      	movs	r2, #0
 8011cd0:	4906      	ldr	r1, [pc, #24]	; (8011cec <HAL_I2C_Mem_Read+0x22c>)
 8011cd2:	68f8      	ldr	r0, [r7, #12]
 8011cd4:	f001 f86c 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 8011cd8:	4603      	mov	r3, r0
 8011cda:	2b00      	cmp	r3, #0
 8011cdc:	d008      	beq.n	8011cf0 <HAL_I2C_Mem_Read+0x230>
 8011cde:	2301      	movs	r3, #1
 8011ce0:	e10e      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011ce2:	bf00      	nop
 8011ce4:	00100002 	.word	0x00100002
 8011ce8:	ffff0000 	.word	0xffff0000
 8011cec:	00010004 	.word	0x00010004
 8011cf0:	68fb      	ldr	r3, [r7, #12]
 8011cf2:	681b      	ldr	r3, [r3, #0]
 8011cf4:	681a      	ldr	r2, [r3, #0]
 8011cf6:	68fb      	ldr	r3, [r7, #12]
 8011cf8:	681b      	ldr	r3, [r3, #0]
 8011cfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011cfe:	601a      	str	r2, [r3, #0]
 8011d00:	68fb      	ldr	r3, [r7, #12]
 8011d02:	681b      	ldr	r3, [r3, #0]
 8011d04:	691a      	ldr	r2, [r3, #16]
 8011d06:	68fb      	ldr	r3, [r7, #12]
 8011d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d0a:	b2d2      	uxtb	r2, r2
 8011d0c:	701a      	strb	r2, [r3, #0]
 8011d0e:	68fb      	ldr	r3, [r7, #12]
 8011d10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d12:	1c5a      	adds	r2, r3, #1
 8011d14:	68fb      	ldr	r3, [r7, #12]
 8011d16:	625a      	str	r2, [r3, #36]	; 0x24
 8011d18:	68fb      	ldr	r3, [r7, #12]
 8011d1a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011d1c:	3b01      	subs	r3, #1
 8011d1e:	b29a      	uxth	r2, r3
 8011d20:	68fb      	ldr	r3, [r7, #12]
 8011d22:	851a      	strh	r2, [r3, #40]	; 0x28
 8011d24:	68fb      	ldr	r3, [r7, #12]
 8011d26:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011d28:	b29b      	uxth	r3, r3
 8011d2a:	3b01      	subs	r3, #1
 8011d2c:	b29a      	uxth	r2, r3
 8011d2e:	68fb      	ldr	r3, [r7, #12]
 8011d30:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011d32:	68fb      	ldr	r3, [r7, #12]
 8011d34:	681b      	ldr	r3, [r3, #0]
 8011d36:	691a      	ldr	r2, [r3, #16]
 8011d38:	68fb      	ldr	r3, [r7, #12]
 8011d3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d3c:	b2d2      	uxtb	r2, r2
 8011d3e:	701a      	strb	r2, [r3, #0]
 8011d40:	68fb      	ldr	r3, [r7, #12]
 8011d42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d44:	1c5a      	adds	r2, r3, #1
 8011d46:	68fb      	ldr	r3, [r7, #12]
 8011d48:	625a      	str	r2, [r3, #36]	; 0x24
 8011d4a:	68fb      	ldr	r3, [r7, #12]
 8011d4c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011d4e:	3b01      	subs	r3, #1
 8011d50:	b29a      	uxth	r2, r3
 8011d52:	68fb      	ldr	r3, [r7, #12]
 8011d54:	851a      	strh	r2, [r3, #40]	; 0x28
 8011d56:	68fb      	ldr	r3, [r7, #12]
 8011d58:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011d5a:	b29b      	uxth	r3, r3
 8011d5c:	3b01      	subs	r3, #1
 8011d5e:	b29a      	uxth	r2, r3
 8011d60:	68fb      	ldr	r3, [r7, #12]
 8011d62:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011d64:	e0b8      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011d66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011d68:	9300      	str	r3, [sp, #0]
 8011d6a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011d6c:	2200      	movs	r2, #0
 8011d6e:	4966      	ldr	r1, [pc, #408]	; (8011f08 <HAL_I2C_Mem_Read+0x448>)
 8011d70:	68f8      	ldr	r0, [r7, #12]
 8011d72:	f001 f81d 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 8011d76:	4603      	mov	r3, r0
 8011d78:	2b00      	cmp	r3, #0
 8011d7a:	d001      	beq.n	8011d80 <HAL_I2C_Mem_Read+0x2c0>
 8011d7c:	2301      	movs	r3, #1
 8011d7e:	e0bf      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011d80:	68fb      	ldr	r3, [r7, #12]
 8011d82:	681b      	ldr	r3, [r3, #0]
 8011d84:	681a      	ldr	r2, [r3, #0]
 8011d86:	68fb      	ldr	r3, [r7, #12]
 8011d88:	681b      	ldr	r3, [r3, #0]
 8011d8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8011d8e:	601a      	str	r2, [r3, #0]
 8011d90:	68fb      	ldr	r3, [r7, #12]
 8011d92:	681b      	ldr	r3, [r3, #0]
 8011d94:	691a      	ldr	r2, [r3, #16]
 8011d96:	68fb      	ldr	r3, [r7, #12]
 8011d98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d9a:	b2d2      	uxtb	r2, r2
 8011d9c:	701a      	strb	r2, [r3, #0]
 8011d9e:	68fb      	ldr	r3, [r7, #12]
 8011da0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011da2:	1c5a      	adds	r2, r3, #1
 8011da4:	68fb      	ldr	r3, [r7, #12]
 8011da6:	625a      	str	r2, [r3, #36]	; 0x24
 8011da8:	68fb      	ldr	r3, [r7, #12]
 8011daa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011dac:	3b01      	subs	r3, #1
 8011dae:	b29a      	uxth	r2, r3
 8011db0:	68fb      	ldr	r3, [r7, #12]
 8011db2:	851a      	strh	r2, [r3, #40]	; 0x28
 8011db4:	68fb      	ldr	r3, [r7, #12]
 8011db6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011db8:	b29b      	uxth	r3, r3
 8011dba:	3b01      	subs	r3, #1
 8011dbc:	b29a      	uxth	r2, r3
 8011dbe:	68fb      	ldr	r3, [r7, #12]
 8011dc0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011dc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011dc4:	9300      	str	r3, [sp, #0]
 8011dc6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011dc8:	2200      	movs	r2, #0
 8011dca:	494f      	ldr	r1, [pc, #316]	; (8011f08 <HAL_I2C_Mem_Read+0x448>)
 8011dcc:	68f8      	ldr	r0, [r7, #12]
 8011dce:	f000 ffef 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 8011dd2:	4603      	mov	r3, r0
 8011dd4:	2b00      	cmp	r3, #0
 8011dd6:	d001      	beq.n	8011ddc <HAL_I2C_Mem_Read+0x31c>
 8011dd8:	2301      	movs	r3, #1
 8011dda:	e091      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011ddc:	68fb      	ldr	r3, [r7, #12]
 8011dde:	681b      	ldr	r3, [r3, #0]
 8011de0:	681a      	ldr	r2, [r3, #0]
 8011de2:	68fb      	ldr	r3, [r7, #12]
 8011de4:	681b      	ldr	r3, [r3, #0]
 8011de6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8011dea:	601a      	str	r2, [r3, #0]
 8011dec:	68fb      	ldr	r3, [r7, #12]
 8011dee:	681b      	ldr	r3, [r3, #0]
 8011df0:	691a      	ldr	r2, [r3, #16]
 8011df2:	68fb      	ldr	r3, [r7, #12]
 8011df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011df6:	b2d2      	uxtb	r2, r2
 8011df8:	701a      	strb	r2, [r3, #0]
 8011dfa:	68fb      	ldr	r3, [r7, #12]
 8011dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dfe:	1c5a      	adds	r2, r3, #1
 8011e00:	68fb      	ldr	r3, [r7, #12]
 8011e02:	625a      	str	r2, [r3, #36]	; 0x24
 8011e04:	68fb      	ldr	r3, [r7, #12]
 8011e06:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011e08:	3b01      	subs	r3, #1
 8011e0a:	b29a      	uxth	r2, r3
 8011e0c:	68fb      	ldr	r3, [r7, #12]
 8011e0e:	851a      	strh	r2, [r3, #40]	; 0x28
 8011e10:	68fb      	ldr	r3, [r7, #12]
 8011e12:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011e14:	b29b      	uxth	r3, r3
 8011e16:	3b01      	subs	r3, #1
 8011e18:	b29a      	uxth	r2, r3
 8011e1a:	68fb      	ldr	r3, [r7, #12]
 8011e1c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011e1e:	68fb      	ldr	r3, [r7, #12]
 8011e20:	681b      	ldr	r3, [r3, #0]
 8011e22:	691a      	ldr	r2, [r3, #16]
 8011e24:	68fb      	ldr	r3, [r7, #12]
 8011e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e28:	b2d2      	uxtb	r2, r2
 8011e2a:	701a      	strb	r2, [r3, #0]
 8011e2c:	68fb      	ldr	r3, [r7, #12]
 8011e2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e30:	1c5a      	adds	r2, r3, #1
 8011e32:	68fb      	ldr	r3, [r7, #12]
 8011e34:	625a      	str	r2, [r3, #36]	; 0x24
 8011e36:	68fb      	ldr	r3, [r7, #12]
 8011e38:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011e3a:	3b01      	subs	r3, #1
 8011e3c:	b29a      	uxth	r2, r3
 8011e3e:	68fb      	ldr	r3, [r7, #12]
 8011e40:	851a      	strh	r2, [r3, #40]	; 0x28
 8011e42:	68fb      	ldr	r3, [r7, #12]
 8011e44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011e46:	b29b      	uxth	r3, r3
 8011e48:	3b01      	subs	r3, #1
 8011e4a:	b29a      	uxth	r2, r3
 8011e4c:	68fb      	ldr	r3, [r7, #12]
 8011e4e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011e50:	e042      	b.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011e52:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011e54:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8011e56:	68f8      	ldr	r0, [r7, #12]
 8011e58:	f001 f902 	bl	8013060 <I2C_WaitOnRXNEFlagUntilTimeout>
 8011e5c:	4603      	mov	r3, r0
 8011e5e:	2b00      	cmp	r3, #0
 8011e60:	d001      	beq.n	8011e66 <HAL_I2C_Mem_Read+0x3a6>
 8011e62:	2301      	movs	r3, #1
 8011e64:	e04c      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011e66:	68fb      	ldr	r3, [r7, #12]
 8011e68:	681b      	ldr	r3, [r3, #0]
 8011e6a:	691a      	ldr	r2, [r3, #16]
 8011e6c:	68fb      	ldr	r3, [r7, #12]
 8011e6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e70:	b2d2      	uxtb	r2, r2
 8011e72:	701a      	strb	r2, [r3, #0]
 8011e74:	68fb      	ldr	r3, [r7, #12]
 8011e76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e78:	1c5a      	adds	r2, r3, #1
 8011e7a:	68fb      	ldr	r3, [r7, #12]
 8011e7c:	625a      	str	r2, [r3, #36]	; 0x24
 8011e7e:	68fb      	ldr	r3, [r7, #12]
 8011e80:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011e82:	3b01      	subs	r3, #1
 8011e84:	b29a      	uxth	r2, r3
 8011e86:	68fb      	ldr	r3, [r7, #12]
 8011e88:	851a      	strh	r2, [r3, #40]	; 0x28
 8011e8a:	68fb      	ldr	r3, [r7, #12]
 8011e8c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011e8e:	b29b      	uxth	r3, r3
 8011e90:	3b01      	subs	r3, #1
 8011e92:	b29a      	uxth	r2, r3
 8011e94:	68fb      	ldr	r3, [r7, #12]
 8011e96:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011e98:	68fb      	ldr	r3, [r7, #12]
 8011e9a:	681b      	ldr	r3, [r3, #0]
 8011e9c:	695b      	ldr	r3, [r3, #20]
 8011e9e:	f003 0304 	and.w	r3, r3, #4
 8011ea2:	2b04      	cmp	r3, #4
 8011ea4:	d118      	bne.n	8011ed8 <HAL_I2C_Mem_Read+0x418>
 8011ea6:	68fb      	ldr	r3, [r7, #12]
 8011ea8:	681b      	ldr	r3, [r3, #0]
 8011eaa:	691a      	ldr	r2, [r3, #16]
 8011eac:	68fb      	ldr	r3, [r7, #12]
 8011eae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011eb0:	b2d2      	uxtb	r2, r2
 8011eb2:	701a      	strb	r2, [r3, #0]
 8011eb4:	68fb      	ldr	r3, [r7, #12]
 8011eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011eb8:	1c5a      	adds	r2, r3, #1
 8011eba:	68fb      	ldr	r3, [r7, #12]
 8011ebc:	625a      	str	r2, [r3, #36]	; 0x24
 8011ebe:	68fb      	ldr	r3, [r7, #12]
 8011ec0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011ec2:	3b01      	subs	r3, #1
 8011ec4:	b29a      	uxth	r2, r3
 8011ec6:	68fb      	ldr	r3, [r7, #12]
 8011ec8:	851a      	strh	r2, [r3, #40]	; 0x28
 8011eca:	68fb      	ldr	r3, [r7, #12]
 8011ecc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8011ece:	b29b      	uxth	r3, r3
 8011ed0:	3b01      	subs	r3, #1
 8011ed2:	b29a      	uxth	r2, r3
 8011ed4:	68fb      	ldr	r3, [r7, #12]
 8011ed6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8011ed8:	68fb      	ldr	r3, [r7, #12]
 8011eda:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8011edc:	2b00      	cmp	r3, #0
 8011ede:	f47f aec2 	bne.w	8011c66 <HAL_I2C_Mem_Read+0x1a6>
 8011ee2:	68fb      	ldr	r3, [r7, #12]
 8011ee4:	2220      	movs	r2, #32
 8011ee6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011eea:	68fb      	ldr	r3, [r7, #12]
 8011eec:	2200      	movs	r2, #0
 8011eee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011ef2:	68fb      	ldr	r3, [r7, #12]
 8011ef4:	2200      	movs	r2, #0
 8011ef6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011efa:	2300      	movs	r3, #0
 8011efc:	e000      	b.n	8011f00 <HAL_I2C_Mem_Read+0x440>
 8011efe:	2302      	movs	r3, #2
 8011f00:	4618      	mov	r0, r3
 8011f02:	3728      	adds	r7, #40	; 0x28
 8011f04:	46bd      	mov	sp, r7
 8011f06:	bd80      	pop	{r7, pc}
 8011f08:	00010004 	.word	0x00010004

08011f0c <HAL_I2C_Mem_Read_DMA>:
 8011f0c:	b580      	push	{r7, lr}
 8011f0e:	b08c      	sub	sp, #48	; 0x30
 8011f10:	af02      	add	r7, sp, #8
 8011f12:	60f8      	str	r0, [r7, #12]
 8011f14:	4608      	mov	r0, r1
 8011f16:	4611      	mov	r1, r2
 8011f18:	461a      	mov	r2, r3
 8011f1a:	4603      	mov	r3, r0
 8011f1c:	817b      	strh	r3, [r7, #10]
 8011f1e:	460b      	mov	r3, r1
 8011f20:	813b      	strh	r3, [r7, #8]
 8011f22:	4613      	mov	r3, r2
 8011f24:	80fb      	strh	r3, [r7, #6]
 8011f26:	f7fd fbbd 	bl	800f6a4 <HAL_GetTick>
 8011f2a:	6278      	str	r0, [r7, #36]	; 0x24
 8011f2c:	2300      	movs	r3, #0
 8011f2e:	61fb      	str	r3, [r7, #28]
 8011f30:	68fb      	ldr	r3, [r7, #12]
 8011f32:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8011f36:	b2db      	uxtb	r3, r3
 8011f38:	2b20      	cmp	r3, #32
 8011f3a:	f040 8176 	bne.w	801222a <HAL_I2C_Mem_Read_DMA+0x31e>
 8011f3e:	4b95      	ldr	r3, [pc, #596]	; (8012194 <HAL_I2C_Mem_Read_DMA+0x288>)
 8011f40:	681b      	ldr	r3, [r3, #0]
 8011f42:	08db      	lsrs	r3, r3, #3
 8011f44:	4a94      	ldr	r2, [pc, #592]	; (8012198 <HAL_I2C_Mem_Read_DMA+0x28c>)
 8011f46:	fba2 2303 	umull	r2, r3, r2, r3
 8011f4a:	0a1a      	lsrs	r2, r3, #8
 8011f4c:	4613      	mov	r3, r2
 8011f4e:	009b      	lsls	r3, r3, #2
 8011f50:	4413      	add	r3, r2
 8011f52:	009a      	lsls	r2, r3, #2
 8011f54:	4413      	add	r3, r2
 8011f56:	61fb      	str	r3, [r7, #28]
 8011f58:	69fb      	ldr	r3, [r7, #28]
 8011f5a:	3b01      	subs	r3, #1
 8011f5c:	61fb      	str	r3, [r7, #28]
 8011f5e:	69fb      	ldr	r3, [r7, #28]
 8011f60:	2b00      	cmp	r3, #0
 8011f62:	d116      	bne.n	8011f92 <HAL_I2C_Mem_Read_DMA+0x86>
 8011f64:	68fb      	ldr	r3, [r7, #12]
 8011f66:	2200      	movs	r2, #0
 8011f68:	631a      	str	r2, [r3, #48]	; 0x30
 8011f6a:	68fb      	ldr	r3, [r7, #12]
 8011f6c:	2220      	movs	r2, #32
 8011f6e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011f72:	68fb      	ldr	r3, [r7, #12]
 8011f74:	2200      	movs	r2, #0
 8011f76:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011f7a:	68fb      	ldr	r3, [r7, #12]
 8011f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011f7e:	f043 0220 	orr.w	r2, r3, #32
 8011f82:	68fb      	ldr	r3, [r7, #12]
 8011f84:	641a      	str	r2, [r3, #64]	; 0x40
 8011f86:	68fb      	ldr	r3, [r7, #12]
 8011f88:	2200      	movs	r2, #0
 8011f8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011f8e:	2301      	movs	r3, #1
 8011f90:	e14c      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 8011f92:	68fb      	ldr	r3, [r7, #12]
 8011f94:	681b      	ldr	r3, [r3, #0]
 8011f96:	699b      	ldr	r3, [r3, #24]
 8011f98:	f003 0302 	and.w	r3, r3, #2
 8011f9c:	2b02      	cmp	r3, #2
 8011f9e:	d0db      	beq.n	8011f58 <HAL_I2C_Mem_Read_DMA+0x4c>
 8011fa0:	68fb      	ldr	r3, [r7, #12]
 8011fa2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8011fa6:	2b01      	cmp	r3, #1
 8011fa8:	d101      	bne.n	8011fae <HAL_I2C_Mem_Read_DMA+0xa2>
 8011faa:	2302      	movs	r3, #2
 8011fac:	e13e      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 8011fae:	68fb      	ldr	r3, [r7, #12]
 8011fb0:	2201      	movs	r2, #1
 8011fb2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8011fb6:	68fb      	ldr	r3, [r7, #12]
 8011fb8:	681b      	ldr	r3, [r3, #0]
 8011fba:	681b      	ldr	r3, [r3, #0]
 8011fbc:	f003 0301 	and.w	r3, r3, #1
 8011fc0:	2b01      	cmp	r3, #1
 8011fc2:	d007      	beq.n	8011fd4 <HAL_I2C_Mem_Read_DMA+0xc8>
 8011fc4:	68fb      	ldr	r3, [r7, #12]
 8011fc6:	681b      	ldr	r3, [r3, #0]
 8011fc8:	681a      	ldr	r2, [r3, #0]
 8011fca:	68fb      	ldr	r3, [r7, #12]
 8011fcc:	681b      	ldr	r3, [r3, #0]
 8011fce:	f042 0201 	orr.w	r2, r2, #1
 8011fd2:	601a      	str	r2, [r3, #0]
 8011fd4:	68fb      	ldr	r3, [r7, #12]
 8011fd6:	681b      	ldr	r3, [r3, #0]
 8011fd8:	681a      	ldr	r2, [r3, #0]
 8011fda:	68fb      	ldr	r3, [r7, #12]
 8011fdc:	681b      	ldr	r3, [r3, #0]
 8011fde:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8011fe2:	601a      	str	r2, [r3, #0]
 8011fe4:	68fb      	ldr	r3, [r7, #12]
 8011fe6:	2222      	movs	r2, #34	; 0x22
 8011fe8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8011fec:	68fb      	ldr	r3, [r7, #12]
 8011fee:	2240      	movs	r2, #64	; 0x40
 8011ff0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8011ff4:	68fb      	ldr	r3, [r7, #12]
 8011ff6:	2200      	movs	r2, #0
 8011ff8:	641a      	str	r2, [r3, #64]	; 0x40
 8011ffa:	68fb      	ldr	r3, [r7, #12]
 8011ffc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8011ffe:	625a      	str	r2, [r3, #36]	; 0x24
 8012000:	68fb      	ldr	r3, [r7, #12]
 8012002:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8012004:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012006:	68fb      	ldr	r3, [r7, #12]
 8012008:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 801200a:	b29a      	uxth	r2, r3
 801200c:	68fb      	ldr	r3, [r7, #12]
 801200e:	851a      	strh	r2, [r3, #40]	; 0x28
 8012010:	68fb      	ldr	r3, [r7, #12]
 8012012:	4a62      	ldr	r2, [pc, #392]	; (801219c <HAL_I2C_Mem_Read_DMA+0x290>)
 8012014:	62da      	str	r2, [r3, #44]	; 0x2c
 8012016:	897a      	ldrh	r2, [r7, #10]
 8012018:	68fb      	ldr	r3, [r7, #12]
 801201a:	645a      	str	r2, [r3, #68]	; 0x44
 801201c:	893a      	ldrh	r2, [r7, #8]
 801201e:	68fb      	ldr	r3, [r7, #12]
 8012020:	649a      	str	r2, [r3, #72]	; 0x48
 8012022:	88fa      	ldrh	r2, [r7, #6]
 8012024:	68fb      	ldr	r3, [r7, #12]
 8012026:	64da      	str	r2, [r3, #76]	; 0x4c
 8012028:	68fb      	ldr	r3, [r7, #12]
 801202a:	2200      	movs	r2, #0
 801202c:	651a      	str	r2, [r3, #80]	; 0x50
 801202e:	68fb      	ldr	r3, [r7, #12]
 8012030:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8012032:	2b00      	cmp	r3, #0
 8012034:	f000 80cc 	beq.w	80121d0 <HAL_I2C_Mem_Read_DMA+0x2c4>
 8012038:	68fb      	ldr	r3, [r7, #12]
 801203a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801203c:	2b00      	cmp	r3, #0
 801203e:	d02d      	beq.n	801209c <HAL_I2C_Mem_Read_DMA+0x190>
 8012040:	68fb      	ldr	r3, [r7, #12]
 8012042:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012044:	4a56      	ldr	r2, [pc, #344]	; (80121a0 <HAL_I2C_Mem_Read_DMA+0x294>)
 8012046:	63da      	str	r2, [r3, #60]	; 0x3c
 8012048:	68fb      	ldr	r3, [r7, #12]
 801204a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801204c:	4a55      	ldr	r2, [pc, #340]	; (80121a4 <HAL_I2C_Mem_Read_DMA+0x298>)
 801204e:	64da      	str	r2, [r3, #76]	; 0x4c
 8012050:	68fb      	ldr	r3, [r7, #12]
 8012052:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012054:	2200      	movs	r2, #0
 8012056:	641a      	str	r2, [r3, #64]	; 0x40
 8012058:	68fb      	ldr	r3, [r7, #12]
 801205a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801205c:	2200      	movs	r2, #0
 801205e:	645a      	str	r2, [r3, #68]	; 0x44
 8012060:	68fb      	ldr	r3, [r7, #12]
 8012062:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012064:	2200      	movs	r2, #0
 8012066:	649a      	str	r2, [r3, #72]	; 0x48
 8012068:	68fb      	ldr	r3, [r7, #12]
 801206a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801206c:	2200      	movs	r2, #0
 801206e:	651a      	str	r2, [r3, #80]	; 0x50
 8012070:	68fb      	ldr	r3, [r7, #12]
 8012072:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8012074:	68fb      	ldr	r3, [r7, #12]
 8012076:	681b      	ldr	r3, [r3, #0]
 8012078:	3310      	adds	r3, #16
 801207a:	4619      	mov	r1, r3
 801207c:	68fb      	ldr	r3, [r7, #12]
 801207e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012080:	461a      	mov	r2, r3
 8012082:	68fb      	ldr	r3, [r7, #12]
 8012084:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8012086:	f7fe fdaf 	bl	8010be8 <HAL_DMA_Start_IT>
 801208a:	4603      	mov	r3, r0
 801208c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8012090:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8012094:	2b00      	cmp	r3, #0
 8012096:	f040 8087 	bne.w	80121a8 <HAL_I2C_Mem_Read_DMA+0x29c>
 801209a:	e013      	b.n	80120c4 <HAL_I2C_Mem_Read_DMA+0x1b8>
 801209c:	68fb      	ldr	r3, [r7, #12]
 801209e:	2220      	movs	r2, #32
 80120a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80120a4:	68fb      	ldr	r3, [r7, #12]
 80120a6:	2200      	movs	r2, #0
 80120a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80120ac:	68fb      	ldr	r3, [r7, #12]
 80120ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80120b0:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80120b4:	68fb      	ldr	r3, [r7, #12]
 80120b6:	641a      	str	r2, [r3, #64]	; 0x40
 80120b8:	68fb      	ldr	r3, [r7, #12]
 80120ba:	2200      	movs	r2, #0
 80120bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80120c0:	2301      	movs	r3, #1
 80120c2:	e0b3      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 80120c4:	88f8      	ldrh	r0, [r7, #6]
 80120c6:	893a      	ldrh	r2, [r7, #8]
 80120c8:	8979      	ldrh	r1, [r7, #10]
 80120ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80120cc:	9301      	str	r3, [sp, #4]
 80120ce:	2323      	movs	r3, #35	; 0x23
 80120d0:	9300      	str	r3, [sp, #0]
 80120d2:	4603      	mov	r3, r0
 80120d4:	68f8      	ldr	r0, [r7, #12]
 80120d6:	f000 fbc9 	bl	801286c <I2C_RequestMemoryRead>
 80120da:	4603      	mov	r3, r0
 80120dc:	2b00      	cmp	r3, #0
 80120de:	d023      	beq.n	8012128 <HAL_I2C_Mem_Read_DMA+0x21c>
 80120e0:	68fb      	ldr	r3, [r7, #12]
 80120e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120e4:	4618      	mov	r0, r3
 80120e6:	f7fe fe47 	bl	8010d78 <HAL_DMA_Abort_IT>
 80120ea:	4603      	mov	r3, r0
 80120ec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80120f0:	68fb      	ldr	r3, [r7, #12]
 80120f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120f4:	2200      	movs	r2, #0
 80120f6:	63da      	str	r2, [r3, #60]	; 0x3c
 80120f8:	68fb      	ldr	r3, [r7, #12]
 80120fa:	681b      	ldr	r3, [r3, #0]
 80120fc:	681a      	ldr	r2, [r3, #0]
 80120fe:	68fb      	ldr	r3, [r7, #12]
 8012100:	681b      	ldr	r3, [r3, #0]
 8012102:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012106:	601a      	str	r2, [r3, #0]
 8012108:	68fb      	ldr	r3, [r7, #12]
 801210a:	2200      	movs	r2, #0
 801210c:	851a      	strh	r2, [r3, #40]	; 0x28
 801210e:	68fb      	ldr	r3, [r7, #12]
 8012110:	2200      	movs	r2, #0
 8012112:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012114:	68fb      	ldr	r3, [r7, #12]
 8012116:	681b      	ldr	r3, [r3, #0]
 8012118:	681a      	ldr	r2, [r3, #0]
 801211a:	68fb      	ldr	r3, [r7, #12]
 801211c:	681b      	ldr	r3, [r3, #0]
 801211e:	f022 0201 	bic.w	r2, r2, #1
 8012122:	601a      	str	r2, [r3, #0]
 8012124:	2301      	movs	r3, #1
 8012126:	e081      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 8012128:	68fb      	ldr	r3, [r7, #12]
 801212a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 801212c:	2b01      	cmp	r3, #1
 801212e:	d108      	bne.n	8012142 <HAL_I2C_Mem_Read_DMA+0x236>
 8012130:	68fb      	ldr	r3, [r7, #12]
 8012132:	681b      	ldr	r3, [r3, #0]
 8012134:	681a      	ldr	r2, [r3, #0]
 8012136:	68fb      	ldr	r3, [r7, #12]
 8012138:	681b      	ldr	r3, [r3, #0]
 801213a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 801213e:	601a      	str	r2, [r3, #0]
 8012140:	e007      	b.n	8012152 <HAL_I2C_Mem_Read_DMA+0x246>
 8012142:	68fb      	ldr	r3, [r7, #12]
 8012144:	681b      	ldr	r3, [r3, #0]
 8012146:	685a      	ldr	r2, [r3, #4]
 8012148:	68fb      	ldr	r3, [r7, #12]
 801214a:	681b      	ldr	r3, [r3, #0]
 801214c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8012150:	605a      	str	r2, [r3, #4]
 8012152:	2300      	movs	r3, #0
 8012154:	61bb      	str	r3, [r7, #24]
 8012156:	68fb      	ldr	r3, [r7, #12]
 8012158:	681b      	ldr	r3, [r3, #0]
 801215a:	695b      	ldr	r3, [r3, #20]
 801215c:	61bb      	str	r3, [r7, #24]
 801215e:	68fb      	ldr	r3, [r7, #12]
 8012160:	681b      	ldr	r3, [r3, #0]
 8012162:	699b      	ldr	r3, [r3, #24]
 8012164:	61bb      	str	r3, [r7, #24]
 8012166:	69bb      	ldr	r3, [r7, #24]
 8012168:	68fb      	ldr	r3, [r7, #12]
 801216a:	2200      	movs	r2, #0
 801216c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012170:	68fb      	ldr	r3, [r7, #12]
 8012172:	681b      	ldr	r3, [r3, #0]
 8012174:	685a      	ldr	r2, [r3, #4]
 8012176:	68fb      	ldr	r3, [r7, #12]
 8012178:	681b      	ldr	r3, [r3, #0]
 801217a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801217e:	605a      	str	r2, [r3, #4]
 8012180:	68fb      	ldr	r3, [r7, #12]
 8012182:	681b      	ldr	r3, [r3, #0]
 8012184:	685a      	ldr	r2, [r3, #4]
 8012186:	68fb      	ldr	r3, [r7, #12]
 8012188:	681b      	ldr	r3, [r3, #0]
 801218a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 801218e:	605a      	str	r2, [r3, #4]
 8012190:	e049      	b.n	8012226 <HAL_I2C_Mem_Read_DMA+0x31a>
 8012192:	bf00      	nop
 8012194:	20000004 	.word	0x20000004
 8012198:	14f8b589 	.word	0x14f8b589
 801219c:	ffff0000 	.word	0xffff0000
 80121a0:	08012a3d 	.word	0x08012a3d
 80121a4:	08012be7 	.word	0x08012be7
 80121a8:	68fb      	ldr	r3, [r7, #12]
 80121aa:	2220      	movs	r2, #32
 80121ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80121b0:	68fb      	ldr	r3, [r7, #12]
 80121b2:	2200      	movs	r2, #0
 80121b4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80121b8:	68fb      	ldr	r3, [r7, #12]
 80121ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80121bc:	f043 0210 	orr.w	r2, r3, #16
 80121c0:	68fb      	ldr	r3, [r7, #12]
 80121c2:	641a      	str	r2, [r3, #64]	; 0x40
 80121c4:	68fb      	ldr	r3, [r7, #12]
 80121c6:	2200      	movs	r2, #0
 80121c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80121cc:	2301      	movs	r3, #1
 80121ce:	e02d      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 80121d0:	88f8      	ldrh	r0, [r7, #6]
 80121d2:	893a      	ldrh	r2, [r7, #8]
 80121d4:	8979      	ldrh	r1, [r7, #10]
 80121d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80121d8:	9301      	str	r3, [sp, #4]
 80121da:	2323      	movs	r3, #35	; 0x23
 80121dc:	9300      	str	r3, [sp, #0]
 80121de:	4603      	mov	r3, r0
 80121e0:	68f8      	ldr	r0, [r7, #12]
 80121e2:	f000 fb43 	bl	801286c <I2C_RequestMemoryRead>
 80121e6:	4603      	mov	r3, r0
 80121e8:	2b00      	cmp	r3, #0
 80121ea:	d001      	beq.n	80121f0 <HAL_I2C_Mem_Read_DMA+0x2e4>
 80121ec:	2301      	movs	r3, #1
 80121ee:	e01d      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 80121f0:	2300      	movs	r3, #0
 80121f2:	617b      	str	r3, [r7, #20]
 80121f4:	68fb      	ldr	r3, [r7, #12]
 80121f6:	681b      	ldr	r3, [r3, #0]
 80121f8:	695b      	ldr	r3, [r3, #20]
 80121fa:	617b      	str	r3, [r7, #20]
 80121fc:	68fb      	ldr	r3, [r7, #12]
 80121fe:	681b      	ldr	r3, [r3, #0]
 8012200:	699b      	ldr	r3, [r3, #24]
 8012202:	617b      	str	r3, [r7, #20]
 8012204:	697b      	ldr	r3, [r7, #20]
 8012206:	68fb      	ldr	r3, [r7, #12]
 8012208:	681b      	ldr	r3, [r3, #0]
 801220a:	681a      	ldr	r2, [r3, #0]
 801220c:	68fb      	ldr	r3, [r7, #12]
 801220e:	681b      	ldr	r3, [r3, #0]
 8012210:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012214:	601a      	str	r2, [r3, #0]
 8012216:	68fb      	ldr	r3, [r7, #12]
 8012218:	2220      	movs	r2, #32
 801221a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801221e:	68fb      	ldr	r3, [r7, #12]
 8012220:	2200      	movs	r2, #0
 8012222:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012226:	2300      	movs	r3, #0
 8012228:	e000      	b.n	801222c <HAL_I2C_Mem_Read_DMA+0x320>
 801222a:	2302      	movs	r3, #2
 801222c:	4618      	mov	r0, r3
 801222e:	3728      	adds	r7, #40	; 0x28
 8012230:	46bd      	mov	sp, r7
 8012232:	bd80      	pop	{r7, pc}

08012234 <HAL_I2C_ER_IRQHandler>:
 8012234:	b580      	push	{r7, lr}
 8012236:	b08a      	sub	sp, #40	; 0x28
 8012238:	af00      	add	r7, sp, #0
 801223a:	6078      	str	r0, [r7, #4]
 801223c:	687b      	ldr	r3, [r7, #4]
 801223e:	681b      	ldr	r3, [r3, #0]
 8012240:	695b      	ldr	r3, [r3, #20]
 8012242:	623b      	str	r3, [r7, #32]
 8012244:	687b      	ldr	r3, [r7, #4]
 8012246:	681b      	ldr	r3, [r3, #0]
 8012248:	685b      	ldr	r3, [r3, #4]
 801224a:	61fb      	str	r3, [r7, #28]
 801224c:	2300      	movs	r3, #0
 801224e:	627b      	str	r3, [r7, #36]	; 0x24
 8012250:	687b      	ldr	r3, [r7, #4]
 8012252:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8012256:	76fb      	strb	r3, [r7, #27]
 8012258:	6a3b      	ldr	r3, [r7, #32]
 801225a:	0a1b      	lsrs	r3, r3, #8
 801225c:	f003 0301 	and.w	r3, r3, #1
 8012260:	2b00      	cmp	r3, #0
 8012262:	d00e      	beq.n	8012282 <HAL_I2C_ER_IRQHandler+0x4e>
 8012264:	69fb      	ldr	r3, [r7, #28]
 8012266:	0a1b      	lsrs	r3, r3, #8
 8012268:	f003 0301 	and.w	r3, r3, #1
 801226c:	2b00      	cmp	r3, #0
 801226e:	d008      	beq.n	8012282 <HAL_I2C_ER_IRQHandler+0x4e>
 8012270:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012272:	f043 0301 	orr.w	r3, r3, #1
 8012276:	627b      	str	r3, [r7, #36]	; 0x24
 8012278:	687b      	ldr	r3, [r7, #4]
 801227a:	681b      	ldr	r3, [r3, #0]
 801227c:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8012280:	615a      	str	r2, [r3, #20]
 8012282:	6a3b      	ldr	r3, [r7, #32]
 8012284:	0a5b      	lsrs	r3, r3, #9
 8012286:	f003 0301 	and.w	r3, r3, #1
 801228a:	2b00      	cmp	r3, #0
 801228c:	d00e      	beq.n	80122ac <HAL_I2C_ER_IRQHandler+0x78>
 801228e:	69fb      	ldr	r3, [r7, #28]
 8012290:	0a1b      	lsrs	r3, r3, #8
 8012292:	f003 0301 	and.w	r3, r3, #1
 8012296:	2b00      	cmp	r3, #0
 8012298:	d008      	beq.n	80122ac <HAL_I2C_ER_IRQHandler+0x78>
 801229a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801229c:	f043 0302 	orr.w	r3, r3, #2
 80122a0:	627b      	str	r3, [r7, #36]	; 0x24
 80122a2:	687b      	ldr	r3, [r7, #4]
 80122a4:	681b      	ldr	r3, [r3, #0]
 80122a6:	f46f 7200 	mvn.w	r2, #512	; 0x200
 80122aa:	615a      	str	r2, [r3, #20]
 80122ac:	6a3b      	ldr	r3, [r7, #32]
 80122ae:	0a9b      	lsrs	r3, r3, #10
 80122b0:	f003 0301 	and.w	r3, r3, #1
 80122b4:	2b00      	cmp	r3, #0
 80122b6:	d03f      	beq.n	8012338 <HAL_I2C_ER_IRQHandler+0x104>
 80122b8:	69fb      	ldr	r3, [r7, #28]
 80122ba:	0a1b      	lsrs	r3, r3, #8
 80122bc:	f003 0301 	and.w	r3, r3, #1
 80122c0:	2b00      	cmp	r3, #0
 80122c2:	d039      	beq.n	8012338 <HAL_I2C_ER_IRQHandler+0x104>
 80122c4:	7efb      	ldrb	r3, [r7, #27]
 80122c6:	76bb      	strb	r3, [r7, #26]
 80122c8:	687b      	ldr	r3, [r7, #4]
 80122ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80122cc:	b29b      	uxth	r3, r3
 80122ce:	617b      	str	r3, [r7, #20]
 80122d0:	687b      	ldr	r3, [r7, #4]
 80122d2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80122d6:	74fb      	strb	r3, [r7, #19]
 80122d8:	687b      	ldr	r3, [r7, #4]
 80122da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80122dc:	60fb      	str	r3, [r7, #12]
 80122de:	7ebb      	ldrb	r3, [r7, #26]
 80122e0:	2b20      	cmp	r3, #32
 80122e2:	d112      	bne.n	801230a <HAL_I2C_ER_IRQHandler+0xd6>
 80122e4:	697b      	ldr	r3, [r7, #20]
 80122e6:	2b00      	cmp	r3, #0
 80122e8:	d10f      	bne.n	801230a <HAL_I2C_ER_IRQHandler+0xd6>
 80122ea:	7cfb      	ldrb	r3, [r7, #19]
 80122ec:	2b21      	cmp	r3, #33	; 0x21
 80122ee:	d008      	beq.n	8012302 <HAL_I2C_ER_IRQHandler+0xce>
 80122f0:	7cfb      	ldrb	r3, [r7, #19]
 80122f2:	2b29      	cmp	r3, #41	; 0x29
 80122f4:	d005      	beq.n	8012302 <HAL_I2C_ER_IRQHandler+0xce>
 80122f6:	7cfb      	ldrb	r3, [r7, #19]
 80122f8:	2b28      	cmp	r3, #40	; 0x28
 80122fa:	d106      	bne.n	801230a <HAL_I2C_ER_IRQHandler+0xd6>
 80122fc:	68fb      	ldr	r3, [r7, #12]
 80122fe:	2b21      	cmp	r3, #33	; 0x21
 8012300:	d103      	bne.n	801230a <HAL_I2C_ER_IRQHandler+0xd6>
 8012302:	6878      	ldr	r0, [r7, #4]
 8012304:	f000 f87a 	bl	80123fc <I2C_Slave_AF>
 8012308:	e016      	b.n	8012338 <HAL_I2C_ER_IRQHandler+0x104>
 801230a:	687b      	ldr	r3, [r7, #4]
 801230c:	681b      	ldr	r3, [r3, #0]
 801230e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012312:	615a      	str	r2, [r3, #20]
 8012314:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012316:	f043 0304 	orr.w	r3, r3, #4
 801231a:	627b      	str	r3, [r7, #36]	; 0x24
 801231c:	7efb      	ldrb	r3, [r7, #27]
 801231e:	2b10      	cmp	r3, #16
 8012320:	d002      	beq.n	8012328 <HAL_I2C_ER_IRQHandler+0xf4>
 8012322:	7efb      	ldrb	r3, [r7, #27]
 8012324:	2b40      	cmp	r3, #64	; 0x40
 8012326:	d107      	bne.n	8012338 <HAL_I2C_ER_IRQHandler+0x104>
 8012328:	687b      	ldr	r3, [r7, #4]
 801232a:	681b      	ldr	r3, [r3, #0]
 801232c:	681a      	ldr	r2, [r3, #0]
 801232e:	687b      	ldr	r3, [r7, #4]
 8012330:	681b      	ldr	r3, [r3, #0]
 8012332:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012336:	601a      	str	r2, [r3, #0]
 8012338:	6a3b      	ldr	r3, [r7, #32]
 801233a:	0adb      	lsrs	r3, r3, #11
 801233c:	f003 0301 	and.w	r3, r3, #1
 8012340:	2b00      	cmp	r3, #0
 8012342:	d00e      	beq.n	8012362 <HAL_I2C_ER_IRQHandler+0x12e>
 8012344:	69fb      	ldr	r3, [r7, #28]
 8012346:	0a1b      	lsrs	r3, r3, #8
 8012348:	f003 0301 	and.w	r3, r3, #1
 801234c:	2b00      	cmp	r3, #0
 801234e:	d008      	beq.n	8012362 <HAL_I2C_ER_IRQHandler+0x12e>
 8012350:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012352:	f043 0308 	orr.w	r3, r3, #8
 8012356:	627b      	str	r3, [r7, #36]	; 0x24
 8012358:	687b      	ldr	r3, [r7, #4]
 801235a:	681b      	ldr	r3, [r3, #0]
 801235c:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 8012360:	615a      	str	r2, [r3, #20]
 8012362:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012364:	2b00      	cmp	r3, #0
 8012366:	d008      	beq.n	801237a <HAL_I2C_ER_IRQHandler+0x146>
 8012368:	687b      	ldr	r3, [r7, #4]
 801236a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 801236c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801236e:	431a      	orrs	r2, r3
 8012370:	687b      	ldr	r3, [r7, #4]
 8012372:	641a      	str	r2, [r3, #64]	; 0x40
 8012374:	6878      	ldr	r0, [r7, #4]
 8012376:	f000 f8b1 	bl	80124dc <I2C_ITError>
 801237a:	bf00      	nop
 801237c:	3728      	adds	r7, #40	; 0x28
 801237e:	46bd      	mov	sp, r7
 8012380:	bd80      	pop	{r7, pc}

08012382 <HAL_I2C_MasterRxCpltCallback>:
 8012382:	b480      	push	{r7}
 8012384:	b083      	sub	sp, #12
 8012386:	af00      	add	r7, sp, #0
 8012388:	6078      	str	r0, [r7, #4]
 801238a:	bf00      	nop
 801238c:	370c      	adds	r7, #12
 801238e:	46bd      	mov	sp, r7
 8012390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012394:	4770      	bx	lr

08012396 <HAL_I2C_SlaveTxCpltCallback>:
 8012396:	b480      	push	{r7}
 8012398:	b083      	sub	sp, #12
 801239a:	af00      	add	r7, sp, #0
 801239c:	6078      	str	r0, [r7, #4]
 801239e:	bf00      	nop
 80123a0:	370c      	adds	r7, #12
 80123a2:	46bd      	mov	sp, r7
 80123a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123a8:	4770      	bx	lr

080123aa <HAL_I2C_SlaveRxCpltCallback>:
 80123aa:	b480      	push	{r7}
 80123ac:	b083      	sub	sp, #12
 80123ae:	af00      	add	r7, sp, #0
 80123b0:	6078      	str	r0, [r7, #4]
 80123b2:	bf00      	nop
 80123b4:	370c      	adds	r7, #12
 80123b6:	46bd      	mov	sp, r7
 80123b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123bc:	4770      	bx	lr

080123be <HAL_I2C_ListenCpltCallback>:
 80123be:	b480      	push	{r7}
 80123c0:	b083      	sub	sp, #12
 80123c2:	af00      	add	r7, sp, #0
 80123c4:	6078      	str	r0, [r7, #4]
 80123c6:	bf00      	nop
 80123c8:	370c      	adds	r7, #12
 80123ca:	46bd      	mov	sp, r7
 80123cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123d0:	4770      	bx	lr

080123d2 <HAL_I2C_ErrorCallback>:
 80123d2:	b480      	push	{r7}
 80123d4:	b083      	sub	sp, #12
 80123d6:	af00      	add	r7, sp, #0
 80123d8:	6078      	str	r0, [r7, #4]
 80123da:	bf00      	nop
 80123dc:	370c      	adds	r7, #12
 80123de:	46bd      	mov	sp, r7
 80123e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123e4:	4770      	bx	lr

080123e6 <HAL_I2C_AbortCpltCallback>:
 80123e6:	b480      	push	{r7}
 80123e8:	b083      	sub	sp, #12
 80123ea:	af00      	add	r7, sp, #0
 80123ec:	6078      	str	r0, [r7, #4]
 80123ee:	bf00      	nop
 80123f0:	370c      	adds	r7, #12
 80123f2:	46bd      	mov	sp, r7
 80123f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123f8:	4770      	bx	lr
	...

080123fc <I2C_Slave_AF>:
 80123fc:	b580      	push	{r7, lr}
 80123fe:	b084      	sub	sp, #16
 8012400:	af00      	add	r7, sp, #0
 8012402:	6078      	str	r0, [r7, #4]
 8012404:	687b      	ldr	r3, [r7, #4]
 8012406:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801240a:	73fb      	strb	r3, [r7, #15]
 801240c:	687b      	ldr	r3, [r7, #4]
 801240e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012410:	60bb      	str	r3, [r7, #8]
 8012412:	68bb      	ldr	r3, [r7, #8]
 8012414:	2b08      	cmp	r3, #8
 8012416:	d002      	beq.n	801241e <I2C_Slave_AF+0x22>
 8012418:	68bb      	ldr	r3, [r7, #8]
 801241a:	2b20      	cmp	r3, #32
 801241c:	d129      	bne.n	8012472 <I2C_Slave_AF+0x76>
 801241e:	7bfb      	ldrb	r3, [r7, #15]
 8012420:	2b28      	cmp	r3, #40	; 0x28
 8012422:	d126      	bne.n	8012472 <I2C_Slave_AF+0x76>
 8012424:	687b      	ldr	r3, [r7, #4]
 8012426:	4a2c      	ldr	r2, [pc, #176]	; (80124d8 <I2C_Slave_AF+0xdc>)
 8012428:	62da      	str	r2, [r3, #44]	; 0x2c
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	681b      	ldr	r3, [r3, #0]
 801242e:	685a      	ldr	r2, [r3, #4]
 8012430:	687b      	ldr	r3, [r7, #4]
 8012432:	681b      	ldr	r3, [r3, #0]
 8012434:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8012438:	605a      	str	r2, [r3, #4]
 801243a:	687b      	ldr	r3, [r7, #4]
 801243c:	681b      	ldr	r3, [r3, #0]
 801243e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012442:	615a      	str	r2, [r3, #20]
 8012444:	687b      	ldr	r3, [r7, #4]
 8012446:	681b      	ldr	r3, [r3, #0]
 8012448:	681a      	ldr	r2, [r3, #0]
 801244a:	687b      	ldr	r3, [r7, #4]
 801244c:	681b      	ldr	r3, [r3, #0]
 801244e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012452:	601a      	str	r2, [r3, #0]
 8012454:	687b      	ldr	r3, [r7, #4]
 8012456:	2200      	movs	r2, #0
 8012458:	631a      	str	r2, [r3, #48]	; 0x30
 801245a:	687b      	ldr	r3, [r7, #4]
 801245c:	2220      	movs	r2, #32
 801245e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012462:	687b      	ldr	r3, [r7, #4]
 8012464:	2200      	movs	r2, #0
 8012466:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801246a:	6878      	ldr	r0, [r7, #4]
 801246c:	f7ff ffa7 	bl	80123be <HAL_I2C_ListenCpltCallback>
 8012470:	e02e      	b.n	80124d0 <I2C_Slave_AF+0xd4>
 8012472:	7bfb      	ldrb	r3, [r7, #15]
 8012474:	2b21      	cmp	r3, #33	; 0x21
 8012476:	d126      	bne.n	80124c6 <I2C_Slave_AF+0xca>
 8012478:	687b      	ldr	r3, [r7, #4]
 801247a:	4a17      	ldr	r2, [pc, #92]	; (80124d8 <I2C_Slave_AF+0xdc>)
 801247c:	62da      	str	r2, [r3, #44]	; 0x2c
 801247e:	687b      	ldr	r3, [r7, #4]
 8012480:	2221      	movs	r2, #33	; 0x21
 8012482:	631a      	str	r2, [r3, #48]	; 0x30
 8012484:	687b      	ldr	r3, [r7, #4]
 8012486:	2220      	movs	r2, #32
 8012488:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801248c:	687b      	ldr	r3, [r7, #4]
 801248e:	2200      	movs	r2, #0
 8012490:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012494:	687b      	ldr	r3, [r7, #4]
 8012496:	681b      	ldr	r3, [r3, #0]
 8012498:	685a      	ldr	r2, [r3, #4]
 801249a:	687b      	ldr	r3, [r7, #4]
 801249c:	681b      	ldr	r3, [r3, #0]
 801249e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80124a2:	605a      	str	r2, [r3, #4]
 80124a4:	687b      	ldr	r3, [r7, #4]
 80124a6:	681b      	ldr	r3, [r3, #0]
 80124a8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80124ac:	615a      	str	r2, [r3, #20]
 80124ae:	687b      	ldr	r3, [r7, #4]
 80124b0:	681b      	ldr	r3, [r3, #0]
 80124b2:	681a      	ldr	r2, [r3, #0]
 80124b4:	687b      	ldr	r3, [r7, #4]
 80124b6:	681b      	ldr	r3, [r3, #0]
 80124b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80124bc:	601a      	str	r2, [r3, #0]
 80124be:	6878      	ldr	r0, [r7, #4]
 80124c0:	f7ff ff69 	bl	8012396 <HAL_I2C_SlaveTxCpltCallback>
 80124c4:	e004      	b.n	80124d0 <I2C_Slave_AF+0xd4>
 80124c6:	687b      	ldr	r3, [r7, #4]
 80124c8:	681b      	ldr	r3, [r3, #0]
 80124ca:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80124ce:	615a      	str	r2, [r3, #20]
 80124d0:	bf00      	nop
 80124d2:	3710      	adds	r7, #16
 80124d4:	46bd      	mov	sp, r7
 80124d6:	bd80      	pop	{r7, pc}
 80124d8:	ffff0000 	.word	0xffff0000

080124dc <I2C_ITError>:
 80124dc:	b580      	push	{r7, lr}
 80124de:	b084      	sub	sp, #16
 80124e0:	af00      	add	r7, sp, #0
 80124e2:	6078      	str	r0, [r7, #4]
 80124e4:	687b      	ldr	r3, [r7, #4]
 80124e6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80124ea:	73fb      	strb	r3, [r7, #15]
 80124ec:	687b      	ldr	r3, [r7, #4]
 80124ee:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80124f2:	73bb      	strb	r3, [r7, #14]
 80124f4:	7bbb      	ldrb	r3, [r7, #14]
 80124f6:	2b10      	cmp	r3, #16
 80124f8:	d002      	beq.n	8012500 <I2C_ITError+0x24>
 80124fa:	7bbb      	ldrb	r3, [r7, #14]
 80124fc:	2b40      	cmp	r3, #64	; 0x40
 80124fe:	d10a      	bne.n	8012516 <I2C_ITError+0x3a>
 8012500:	7bfb      	ldrb	r3, [r7, #15]
 8012502:	2b22      	cmp	r3, #34	; 0x22
 8012504:	d107      	bne.n	8012516 <I2C_ITError+0x3a>
 8012506:	687b      	ldr	r3, [r7, #4]
 8012508:	681b      	ldr	r3, [r3, #0]
 801250a:	681a      	ldr	r2, [r3, #0]
 801250c:	687b      	ldr	r3, [r7, #4]
 801250e:	681b      	ldr	r3, [r3, #0]
 8012510:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012514:	601a      	str	r2, [r3, #0]
 8012516:	7bfb      	ldrb	r3, [r7, #15]
 8012518:	f003 0328 	and.w	r3, r3, #40	; 0x28
 801251c:	2b28      	cmp	r3, #40	; 0x28
 801251e:	d107      	bne.n	8012530 <I2C_ITError+0x54>
 8012520:	687b      	ldr	r3, [r7, #4]
 8012522:	2200      	movs	r2, #0
 8012524:	631a      	str	r2, [r3, #48]	; 0x30
 8012526:	687b      	ldr	r3, [r7, #4]
 8012528:	2228      	movs	r2, #40	; 0x28
 801252a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801252e:	e015      	b.n	801255c <I2C_ITError+0x80>
 8012530:	687b      	ldr	r3, [r7, #4]
 8012532:	681b      	ldr	r3, [r3, #0]
 8012534:	685b      	ldr	r3, [r3, #4]
 8012536:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 801253a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801253e:	d00a      	beq.n	8012556 <I2C_ITError+0x7a>
 8012540:	7bfb      	ldrb	r3, [r7, #15]
 8012542:	2b60      	cmp	r3, #96	; 0x60
 8012544:	d007      	beq.n	8012556 <I2C_ITError+0x7a>
 8012546:	687b      	ldr	r3, [r7, #4]
 8012548:	2220      	movs	r2, #32
 801254a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801254e:	687b      	ldr	r3, [r7, #4]
 8012550:	2200      	movs	r2, #0
 8012552:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012556:	687b      	ldr	r3, [r7, #4]
 8012558:	2200      	movs	r2, #0
 801255a:	631a      	str	r2, [r3, #48]	; 0x30
 801255c:	687b      	ldr	r3, [r7, #4]
 801255e:	681b      	ldr	r3, [r3, #0]
 8012560:	685b      	ldr	r3, [r3, #4]
 8012562:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8012566:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801256a:	d162      	bne.n	8012632 <I2C_ITError+0x156>
 801256c:	687b      	ldr	r3, [r7, #4]
 801256e:	681b      	ldr	r3, [r3, #0]
 8012570:	685a      	ldr	r2, [r3, #4]
 8012572:	687b      	ldr	r3, [r7, #4]
 8012574:	681b      	ldr	r3, [r3, #0]
 8012576:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801257a:	605a      	str	r2, [r3, #4]
 801257c:	687b      	ldr	r3, [r7, #4]
 801257e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012580:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8012584:	b2db      	uxtb	r3, r3
 8012586:	2b01      	cmp	r3, #1
 8012588:	d020      	beq.n	80125cc <I2C_ITError+0xf0>
 801258a:	687b      	ldr	r3, [r7, #4]
 801258c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801258e:	4a6a      	ldr	r2, [pc, #424]	; (8012738 <I2C_ITError+0x25c>)
 8012590:	651a      	str	r2, [r3, #80]	; 0x50
 8012592:	687b      	ldr	r3, [r7, #4]
 8012594:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012596:	4618      	mov	r0, r3
 8012598:	f7fe fbee 	bl	8010d78 <HAL_DMA_Abort_IT>
 801259c:	4603      	mov	r3, r0
 801259e:	2b00      	cmp	r3, #0
 80125a0:	f000 8089 	beq.w	80126b6 <I2C_ITError+0x1da>
 80125a4:	687b      	ldr	r3, [r7, #4]
 80125a6:	681b      	ldr	r3, [r3, #0]
 80125a8:	681a      	ldr	r2, [r3, #0]
 80125aa:	687b      	ldr	r3, [r7, #4]
 80125ac:	681b      	ldr	r3, [r3, #0]
 80125ae:	f022 0201 	bic.w	r2, r2, #1
 80125b2:	601a      	str	r2, [r3, #0]
 80125b4:	687b      	ldr	r3, [r7, #4]
 80125b6:	2220      	movs	r2, #32
 80125b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80125bc:	687b      	ldr	r3, [r7, #4]
 80125be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80125c2:	687a      	ldr	r2, [r7, #4]
 80125c4:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80125c6:	4610      	mov	r0, r2
 80125c8:	4798      	blx	r3
 80125ca:	e074      	b.n	80126b6 <I2C_ITError+0x1da>
 80125cc:	687b      	ldr	r3, [r7, #4]
 80125ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125d0:	4a59      	ldr	r2, [pc, #356]	; (8012738 <I2C_ITError+0x25c>)
 80125d2:	651a      	str	r2, [r3, #80]	; 0x50
 80125d4:	687b      	ldr	r3, [r7, #4]
 80125d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125d8:	4618      	mov	r0, r3
 80125da:	f7fe fbcd 	bl	8010d78 <HAL_DMA_Abort_IT>
 80125de:	4603      	mov	r3, r0
 80125e0:	2b00      	cmp	r3, #0
 80125e2:	d068      	beq.n	80126b6 <I2C_ITError+0x1da>
 80125e4:	687b      	ldr	r3, [r7, #4]
 80125e6:	681b      	ldr	r3, [r3, #0]
 80125e8:	695b      	ldr	r3, [r3, #20]
 80125ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80125ee:	2b40      	cmp	r3, #64	; 0x40
 80125f0:	d10b      	bne.n	801260a <I2C_ITError+0x12e>
 80125f2:	687b      	ldr	r3, [r7, #4]
 80125f4:	681b      	ldr	r3, [r3, #0]
 80125f6:	691a      	ldr	r2, [r3, #16]
 80125f8:	687b      	ldr	r3, [r7, #4]
 80125fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80125fc:	b2d2      	uxtb	r2, r2
 80125fe:	701a      	strb	r2, [r3, #0]
 8012600:	687b      	ldr	r3, [r7, #4]
 8012602:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012604:	1c5a      	adds	r2, r3, #1
 8012606:	687b      	ldr	r3, [r7, #4]
 8012608:	625a      	str	r2, [r3, #36]	; 0x24
 801260a:	687b      	ldr	r3, [r7, #4]
 801260c:	681b      	ldr	r3, [r3, #0]
 801260e:	681a      	ldr	r2, [r3, #0]
 8012610:	687b      	ldr	r3, [r7, #4]
 8012612:	681b      	ldr	r3, [r3, #0]
 8012614:	f022 0201 	bic.w	r2, r2, #1
 8012618:	601a      	str	r2, [r3, #0]
 801261a:	687b      	ldr	r3, [r7, #4]
 801261c:	2220      	movs	r2, #32
 801261e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012622:	687b      	ldr	r3, [r7, #4]
 8012624:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012626:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012628:	687a      	ldr	r2, [r7, #4]
 801262a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 801262c:	4610      	mov	r0, r2
 801262e:	4798      	blx	r3
 8012630:	e041      	b.n	80126b6 <I2C_ITError+0x1da>
 8012632:	687b      	ldr	r3, [r7, #4]
 8012634:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012638:	b2db      	uxtb	r3, r3
 801263a:	2b60      	cmp	r3, #96	; 0x60
 801263c:	d125      	bne.n	801268a <I2C_ITError+0x1ae>
 801263e:	687b      	ldr	r3, [r7, #4]
 8012640:	2220      	movs	r2, #32
 8012642:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012646:	687b      	ldr	r3, [r7, #4]
 8012648:	2200      	movs	r2, #0
 801264a:	641a      	str	r2, [r3, #64]	; 0x40
 801264c:	687b      	ldr	r3, [r7, #4]
 801264e:	681b      	ldr	r3, [r3, #0]
 8012650:	695b      	ldr	r3, [r3, #20]
 8012652:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012656:	2b40      	cmp	r3, #64	; 0x40
 8012658:	d10b      	bne.n	8012672 <I2C_ITError+0x196>
 801265a:	687b      	ldr	r3, [r7, #4]
 801265c:	681b      	ldr	r3, [r3, #0]
 801265e:	691a      	ldr	r2, [r3, #16]
 8012660:	687b      	ldr	r3, [r7, #4]
 8012662:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012664:	b2d2      	uxtb	r2, r2
 8012666:	701a      	strb	r2, [r3, #0]
 8012668:	687b      	ldr	r3, [r7, #4]
 801266a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801266c:	1c5a      	adds	r2, r3, #1
 801266e:	687b      	ldr	r3, [r7, #4]
 8012670:	625a      	str	r2, [r3, #36]	; 0x24
 8012672:	687b      	ldr	r3, [r7, #4]
 8012674:	681b      	ldr	r3, [r3, #0]
 8012676:	681a      	ldr	r2, [r3, #0]
 8012678:	687b      	ldr	r3, [r7, #4]
 801267a:	681b      	ldr	r3, [r3, #0]
 801267c:	f022 0201 	bic.w	r2, r2, #1
 8012680:	601a      	str	r2, [r3, #0]
 8012682:	6878      	ldr	r0, [r7, #4]
 8012684:	f7ff feaf 	bl	80123e6 <HAL_I2C_AbortCpltCallback>
 8012688:	e015      	b.n	80126b6 <I2C_ITError+0x1da>
 801268a:	687b      	ldr	r3, [r7, #4]
 801268c:	681b      	ldr	r3, [r3, #0]
 801268e:	695b      	ldr	r3, [r3, #20]
 8012690:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8012694:	2b40      	cmp	r3, #64	; 0x40
 8012696:	d10b      	bne.n	80126b0 <I2C_ITError+0x1d4>
 8012698:	687b      	ldr	r3, [r7, #4]
 801269a:	681b      	ldr	r3, [r3, #0]
 801269c:	691a      	ldr	r2, [r3, #16]
 801269e:	687b      	ldr	r3, [r7, #4]
 80126a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126a2:	b2d2      	uxtb	r2, r2
 80126a4:	701a      	strb	r2, [r3, #0]
 80126a6:	687b      	ldr	r3, [r7, #4]
 80126a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126aa:	1c5a      	adds	r2, r3, #1
 80126ac:	687b      	ldr	r3, [r7, #4]
 80126ae:	625a      	str	r2, [r3, #36]	; 0x24
 80126b0:	6878      	ldr	r0, [r7, #4]
 80126b2:	f7ff fe8e 	bl	80123d2 <HAL_I2C_ErrorCallback>
 80126b6:	687b      	ldr	r3, [r7, #4]
 80126b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80126ba:	60bb      	str	r3, [r7, #8]
 80126bc:	68bb      	ldr	r3, [r7, #8]
 80126be:	f003 0301 	and.w	r3, r3, #1
 80126c2:	2b00      	cmp	r3, #0
 80126c4:	d10e      	bne.n	80126e4 <I2C_ITError+0x208>
 80126c6:	68bb      	ldr	r3, [r7, #8]
 80126c8:	f003 0302 	and.w	r3, r3, #2
 80126cc:	2b00      	cmp	r3, #0
 80126ce:	d109      	bne.n	80126e4 <I2C_ITError+0x208>
 80126d0:	68bb      	ldr	r3, [r7, #8]
 80126d2:	f003 0304 	and.w	r3, r3, #4
 80126d6:	2b00      	cmp	r3, #0
 80126d8:	d104      	bne.n	80126e4 <I2C_ITError+0x208>
 80126da:	68bb      	ldr	r3, [r7, #8]
 80126dc:	f003 0308 	and.w	r3, r3, #8
 80126e0:	2b00      	cmp	r3, #0
 80126e2:	d007      	beq.n	80126f4 <I2C_ITError+0x218>
 80126e4:	687b      	ldr	r3, [r7, #4]
 80126e6:	681b      	ldr	r3, [r3, #0]
 80126e8:	685a      	ldr	r2, [r3, #4]
 80126ea:	687b      	ldr	r3, [r7, #4]
 80126ec:	681b      	ldr	r3, [r3, #0]
 80126ee:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80126f2:	605a      	str	r2, [r3, #4]
 80126f4:	687b      	ldr	r3, [r7, #4]
 80126f6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80126fa:	73fb      	strb	r3, [r7, #15]
 80126fc:	687b      	ldr	r3, [r7, #4]
 80126fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012700:	f003 0304 	and.w	r3, r3, #4
 8012704:	2b04      	cmp	r3, #4
 8012706:	d113      	bne.n	8012730 <I2C_ITError+0x254>
 8012708:	7bfb      	ldrb	r3, [r7, #15]
 801270a:	2b28      	cmp	r3, #40	; 0x28
 801270c:	d110      	bne.n	8012730 <I2C_ITError+0x254>
 801270e:	687b      	ldr	r3, [r7, #4]
 8012710:	4a0a      	ldr	r2, [pc, #40]	; (801273c <I2C_ITError+0x260>)
 8012712:	62da      	str	r2, [r3, #44]	; 0x2c
 8012714:	687b      	ldr	r3, [r7, #4]
 8012716:	2200      	movs	r2, #0
 8012718:	631a      	str	r2, [r3, #48]	; 0x30
 801271a:	687b      	ldr	r3, [r7, #4]
 801271c:	2220      	movs	r2, #32
 801271e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012722:	687b      	ldr	r3, [r7, #4]
 8012724:	2200      	movs	r2, #0
 8012726:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801272a:	6878      	ldr	r0, [r7, #4]
 801272c:	f7ff fe47 	bl	80123be <HAL_I2C_ListenCpltCallback>
 8012730:	bf00      	nop
 8012732:	3710      	adds	r7, #16
 8012734:	46bd      	mov	sp, r7
 8012736:	bd80      	pop	{r7, pc}
 8012738:	08012c61 	.word	0x08012c61
 801273c:	ffff0000 	.word	0xffff0000

08012740 <I2C_RequestMemoryWrite>:
 8012740:	b580      	push	{r7, lr}
 8012742:	b088      	sub	sp, #32
 8012744:	af02      	add	r7, sp, #8
 8012746:	60f8      	str	r0, [r7, #12]
 8012748:	4608      	mov	r0, r1
 801274a:	4611      	mov	r1, r2
 801274c:	461a      	mov	r2, r3
 801274e:	4603      	mov	r3, r0
 8012750:	817b      	strh	r3, [r7, #10]
 8012752:	460b      	mov	r3, r1
 8012754:	813b      	strh	r3, [r7, #8]
 8012756:	4613      	mov	r3, r2
 8012758:	80fb      	strh	r3, [r7, #6]
 801275a:	68fb      	ldr	r3, [r7, #12]
 801275c:	681b      	ldr	r3, [r3, #0]
 801275e:	681a      	ldr	r2, [r3, #0]
 8012760:	68fb      	ldr	r3, [r7, #12]
 8012762:	681b      	ldr	r3, [r3, #0]
 8012764:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8012768:	601a      	str	r2, [r3, #0]
 801276a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801276c:	9300      	str	r3, [sp, #0]
 801276e:	6a3b      	ldr	r3, [r7, #32]
 8012770:	2200      	movs	r2, #0
 8012772:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8012776:	68f8      	ldr	r0, [r7, #12]
 8012778:	f000 fb1a 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 801277c:	4603      	mov	r3, r0
 801277e:	2b00      	cmp	r3, #0
 8012780:	d00d      	beq.n	801279e <I2C_RequestMemoryWrite+0x5e>
 8012782:	68fb      	ldr	r3, [r7, #12]
 8012784:	681b      	ldr	r3, [r3, #0]
 8012786:	681b      	ldr	r3, [r3, #0]
 8012788:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801278c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012790:	d103      	bne.n	801279a <I2C_RequestMemoryWrite+0x5a>
 8012792:	68fb      	ldr	r3, [r7, #12]
 8012794:	f44f 7200 	mov.w	r2, #512	; 0x200
 8012798:	641a      	str	r2, [r3, #64]	; 0x40
 801279a:	2303      	movs	r3, #3
 801279c:	e05f      	b.n	801285e <I2C_RequestMemoryWrite+0x11e>
 801279e:	897b      	ldrh	r3, [r7, #10]
 80127a0:	b2db      	uxtb	r3, r3
 80127a2:	461a      	mov	r2, r3
 80127a4:	68fb      	ldr	r3, [r7, #12]
 80127a6:	681b      	ldr	r3, [r3, #0]
 80127a8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80127ac:	611a      	str	r2, [r3, #16]
 80127ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80127b0:	6a3a      	ldr	r2, [r7, #32]
 80127b2:	492d      	ldr	r1, [pc, #180]	; (8012868 <I2C_RequestMemoryWrite+0x128>)
 80127b4:	68f8      	ldr	r0, [r7, #12]
 80127b6:	f000 fb52 	bl	8012e5e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80127ba:	4603      	mov	r3, r0
 80127bc:	2b00      	cmp	r3, #0
 80127be:	d001      	beq.n	80127c4 <I2C_RequestMemoryWrite+0x84>
 80127c0:	2301      	movs	r3, #1
 80127c2:	e04c      	b.n	801285e <I2C_RequestMemoryWrite+0x11e>
 80127c4:	2300      	movs	r3, #0
 80127c6:	617b      	str	r3, [r7, #20]
 80127c8:	68fb      	ldr	r3, [r7, #12]
 80127ca:	681b      	ldr	r3, [r3, #0]
 80127cc:	695b      	ldr	r3, [r3, #20]
 80127ce:	617b      	str	r3, [r7, #20]
 80127d0:	68fb      	ldr	r3, [r7, #12]
 80127d2:	681b      	ldr	r3, [r3, #0]
 80127d4:	699b      	ldr	r3, [r3, #24]
 80127d6:	617b      	str	r3, [r7, #20]
 80127d8:	697b      	ldr	r3, [r7, #20]
 80127da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80127dc:	6a39      	ldr	r1, [r7, #32]
 80127de:	68f8      	ldr	r0, [r7, #12]
 80127e0:	f000 fbbc 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 80127e4:	4603      	mov	r3, r0
 80127e6:	2b00      	cmp	r3, #0
 80127e8:	d00d      	beq.n	8012806 <I2C_RequestMemoryWrite+0xc6>
 80127ea:	68fb      	ldr	r3, [r7, #12]
 80127ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80127ee:	2b04      	cmp	r3, #4
 80127f0:	d107      	bne.n	8012802 <I2C_RequestMemoryWrite+0xc2>
 80127f2:	68fb      	ldr	r3, [r7, #12]
 80127f4:	681b      	ldr	r3, [r3, #0]
 80127f6:	681a      	ldr	r2, [r3, #0]
 80127f8:	68fb      	ldr	r3, [r7, #12]
 80127fa:	681b      	ldr	r3, [r3, #0]
 80127fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012800:	601a      	str	r2, [r3, #0]
 8012802:	2301      	movs	r3, #1
 8012804:	e02b      	b.n	801285e <I2C_RequestMemoryWrite+0x11e>
 8012806:	88fb      	ldrh	r3, [r7, #6]
 8012808:	2b01      	cmp	r3, #1
 801280a:	d105      	bne.n	8012818 <I2C_RequestMemoryWrite+0xd8>
 801280c:	893b      	ldrh	r3, [r7, #8]
 801280e:	b2da      	uxtb	r2, r3
 8012810:	68fb      	ldr	r3, [r7, #12]
 8012812:	681b      	ldr	r3, [r3, #0]
 8012814:	611a      	str	r2, [r3, #16]
 8012816:	e021      	b.n	801285c <I2C_RequestMemoryWrite+0x11c>
 8012818:	893b      	ldrh	r3, [r7, #8]
 801281a:	0a1b      	lsrs	r3, r3, #8
 801281c:	b29b      	uxth	r3, r3
 801281e:	b2da      	uxtb	r2, r3
 8012820:	68fb      	ldr	r3, [r7, #12]
 8012822:	681b      	ldr	r3, [r3, #0]
 8012824:	611a      	str	r2, [r3, #16]
 8012826:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012828:	6a39      	ldr	r1, [r7, #32]
 801282a:	68f8      	ldr	r0, [r7, #12]
 801282c:	f000 fb96 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 8012830:	4603      	mov	r3, r0
 8012832:	2b00      	cmp	r3, #0
 8012834:	d00d      	beq.n	8012852 <I2C_RequestMemoryWrite+0x112>
 8012836:	68fb      	ldr	r3, [r7, #12]
 8012838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801283a:	2b04      	cmp	r3, #4
 801283c:	d107      	bne.n	801284e <I2C_RequestMemoryWrite+0x10e>
 801283e:	68fb      	ldr	r3, [r7, #12]
 8012840:	681b      	ldr	r3, [r3, #0]
 8012842:	681a      	ldr	r2, [r3, #0]
 8012844:	68fb      	ldr	r3, [r7, #12]
 8012846:	681b      	ldr	r3, [r3, #0]
 8012848:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801284c:	601a      	str	r2, [r3, #0]
 801284e:	2301      	movs	r3, #1
 8012850:	e005      	b.n	801285e <I2C_RequestMemoryWrite+0x11e>
 8012852:	893b      	ldrh	r3, [r7, #8]
 8012854:	b2da      	uxtb	r2, r3
 8012856:	68fb      	ldr	r3, [r7, #12]
 8012858:	681b      	ldr	r3, [r3, #0]
 801285a:	611a      	str	r2, [r3, #16]
 801285c:	2300      	movs	r3, #0
 801285e:	4618      	mov	r0, r3
 8012860:	3718      	adds	r7, #24
 8012862:	46bd      	mov	sp, r7
 8012864:	bd80      	pop	{r7, pc}
 8012866:	bf00      	nop
 8012868:	00010002 	.word	0x00010002

0801286c <I2C_RequestMemoryRead>:
 801286c:	b580      	push	{r7, lr}
 801286e:	b088      	sub	sp, #32
 8012870:	af02      	add	r7, sp, #8
 8012872:	60f8      	str	r0, [r7, #12]
 8012874:	4608      	mov	r0, r1
 8012876:	4611      	mov	r1, r2
 8012878:	461a      	mov	r2, r3
 801287a:	4603      	mov	r3, r0
 801287c:	817b      	strh	r3, [r7, #10]
 801287e:	460b      	mov	r3, r1
 8012880:	813b      	strh	r3, [r7, #8]
 8012882:	4613      	mov	r3, r2
 8012884:	80fb      	strh	r3, [r7, #6]
 8012886:	68fb      	ldr	r3, [r7, #12]
 8012888:	681b      	ldr	r3, [r3, #0]
 801288a:	681a      	ldr	r2, [r3, #0]
 801288c:	68fb      	ldr	r3, [r7, #12]
 801288e:	681b      	ldr	r3, [r3, #0]
 8012890:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012894:	601a      	str	r2, [r3, #0]
 8012896:	68fb      	ldr	r3, [r7, #12]
 8012898:	681b      	ldr	r3, [r3, #0]
 801289a:	681a      	ldr	r2, [r3, #0]
 801289c:	68fb      	ldr	r3, [r7, #12]
 801289e:	681b      	ldr	r3, [r3, #0]
 80128a0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80128a4:	601a      	str	r2, [r3, #0]
 80128a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80128a8:	9300      	str	r3, [sp, #0]
 80128aa:	6a3b      	ldr	r3, [r7, #32]
 80128ac:	2200      	movs	r2, #0
 80128ae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80128b2:	68f8      	ldr	r0, [r7, #12]
 80128b4:	f000 fa7c 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 80128b8:	4603      	mov	r3, r0
 80128ba:	2b00      	cmp	r3, #0
 80128bc:	d00d      	beq.n	80128da <I2C_RequestMemoryRead+0x6e>
 80128be:	68fb      	ldr	r3, [r7, #12]
 80128c0:	681b      	ldr	r3, [r3, #0]
 80128c2:	681b      	ldr	r3, [r3, #0]
 80128c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80128c8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80128cc:	d103      	bne.n	80128d6 <I2C_RequestMemoryRead+0x6a>
 80128ce:	68fb      	ldr	r3, [r7, #12]
 80128d0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80128d4:	641a      	str	r2, [r3, #64]	; 0x40
 80128d6:	2303      	movs	r3, #3
 80128d8:	e0aa      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 80128da:	897b      	ldrh	r3, [r7, #10]
 80128dc:	b2db      	uxtb	r3, r3
 80128de:	461a      	mov	r2, r3
 80128e0:	68fb      	ldr	r3, [r7, #12]
 80128e2:	681b      	ldr	r3, [r3, #0]
 80128e4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80128e8:	611a      	str	r2, [r3, #16]
 80128ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80128ec:	6a3a      	ldr	r2, [r7, #32]
 80128ee:	4952      	ldr	r1, [pc, #328]	; (8012a38 <I2C_RequestMemoryRead+0x1cc>)
 80128f0:	68f8      	ldr	r0, [r7, #12]
 80128f2:	f000 fab4 	bl	8012e5e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80128f6:	4603      	mov	r3, r0
 80128f8:	2b00      	cmp	r3, #0
 80128fa:	d001      	beq.n	8012900 <I2C_RequestMemoryRead+0x94>
 80128fc:	2301      	movs	r3, #1
 80128fe:	e097      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 8012900:	2300      	movs	r3, #0
 8012902:	617b      	str	r3, [r7, #20]
 8012904:	68fb      	ldr	r3, [r7, #12]
 8012906:	681b      	ldr	r3, [r3, #0]
 8012908:	695b      	ldr	r3, [r3, #20]
 801290a:	617b      	str	r3, [r7, #20]
 801290c:	68fb      	ldr	r3, [r7, #12]
 801290e:	681b      	ldr	r3, [r3, #0]
 8012910:	699b      	ldr	r3, [r3, #24]
 8012912:	617b      	str	r3, [r7, #20]
 8012914:	697b      	ldr	r3, [r7, #20]
 8012916:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012918:	6a39      	ldr	r1, [r7, #32]
 801291a:	68f8      	ldr	r0, [r7, #12]
 801291c:	f000 fb1e 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 8012920:	4603      	mov	r3, r0
 8012922:	2b00      	cmp	r3, #0
 8012924:	d00d      	beq.n	8012942 <I2C_RequestMemoryRead+0xd6>
 8012926:	68fb      	ldr	r3, [r7, #12]
 8012928:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801292a:	2b04      	cmp	r3, #4
 801292c:	d107      	bne.n	801293e <I2C_RequestMemoryRead+0xd2>
 801292e:	68fb      	ldr	r3, [r7, #12]
 8012930:	681b      	ldr	r3, [r3, #0]
 8012932:	681a      	ldr	r2, [r3, #0]
 8012934:	68fb      	ldr	r3, [r7, #12]
 8012936:	681b      	ldr	r3, [r3, #0]
 8012938:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801293c:	601a      	str	r2, [r3, #0]
 801293e:	2301      	movs	r3, #1
 8012940:	e076      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 8012942:	88fb      	ldrh	r3, [r7, #6]
 8012944:	2b01      	cmp	r3, #1
 8012946:	d105      	bne.n	8012954 <I2C_RequestMemoryRead+0xe8>
 8012948:	893b      	ldrh	r3, [r7, #8]
 801294a:	b2da      	uxtb	r2, r3
 801294c:	68fb      	ldr	r3, [r7, #12]
 801294e:	681b      	ldr	r3, [r3, #0]
 8012950:	611a      	str	r2, [r3, #16]
 8012952:	e021      	b.n	8012998 <I2C_RequestMemoryRead+0x12c>
 8012954:	893b      	ldrh	r3, [r7, #8]
 8012956:	0a1b      	lsrs	r3, r3, #8
 8012958:	b29b      	uxth	r3, r3
 801295a:	b2da      	uxtb	r2, r3
 801295c:	68fb      	ldr	r3, [r7, #12]
 801295e:	681b      	ldr	r3, [r3, #0]
 8012960:	611a      	str	r2, [r3, #16]
 8012962:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012964:	6a39      	ldr	r1, [r7, #32]
 8012966:	68f8      	ldr	r0, [r7, #12]
 8012968:	f000 faf8 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 801296c:	4603      	mov	r3, r0
 801296e:	2b00      	cmp	r3, #0
 8012970:	d00d      	beq.n	801298e <I2C_RequestMemoryRead+0x122>
 8012972:	68fb      	ldr	r3, [r7, #12]
 8012974:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012976:	2b04      	cmp	r3, #4
 8012978:	d107      	bne.n	801298a <I2C_RequestMemoryRead+0x11e>
 801297a:	68fb      	ldr	r3, [r7, #12]
 801297c:	681b      	ldr	r3, [r3, #0]
 801297e:	681a      	ldr	r2, [r3, #0]
 8012980:	68fb      	ldr	r3, [r7, #12]
 8012982:	681b      	ldr	r3, [r3, #0]
 8012984:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012988:	601a      	str	r2, [r3, #0]
 801298a:	2301      	movs	r3, #1
 801298c:	e050      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 801298e:	893b      	ldrh	r3, [r7, #8]
 8012990:	b2da      	uxtb	r2, r3
 8012992:	68fb      	ldr	r3, [r7, #12]
 8012994:	681b      	ldr	r3, [r3, #0]
 8012996:	611a      	str	r2, [r3, #16]
 8012998:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801299a:	6a39      	ldr	r1, [r7, #32]
 801299c:	68f8      	ldr	r0, [r7, #12]
 801299e:	f000 fadd 	bl	8012f5c <I2C_WaitOnTXEFlagUntilTimeout>
 80129a2:	4603      	mov	r3, r0
 80129a4:	2b00      	cmp	r3, #0
 80129a6:	d00d      	beq.n	80129c4 <I2C_RequestMemoryRead+0x158>
 80129a8:	68fb      	ldr	r3, [r7, #12]
 80129aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80129ac:	2b04      	cmp	r3, #4
 80129ae:	d107      	bne.n	80129c0 <I2C_RequestMemoryRead+0x154>
 80129b0:	68fb      	ldr	r3, [r7, #12]
 80129b2:	681b      	ldr	r3, [r3, #0]
 80129b4:	681a      	ldr	r2, [r3, #0]
 80129b6:	68fb      	ldr	r3, [r7, #12]
 80129b8:	681b      	ldr	r3, [r3, #0]
 80129ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80129be:	601a      	str	r2, [r3, #0]
 80129c0:	2301      	movs	r3, #1
 80129c2:	e035      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 80129c4:	68fb      	ldr	r3, [r7, #12]
 80129c6:	681b      	ldr	r3, [r3, #0]
 80129c8:	681a      	ldr	r2, [r3, #0]
 80129ca:	68fb      	ldr	r3, [r7, #12]
 80129cc:	681b      	ldr	r3, [r3, #0]
 80129ce:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80129d2:	601a      	str	r2, [r3, #0]
 80129d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80129d6:	9300      	str	r3, [sp, #0]
 80129d8:	6a3b      	ldr	r3, [r7, #32]
 80129da:	2200      	movs	r2, #0
 80129dc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80129e0:	68f8      	ldr	r0, [r7, #12]
 80129e2:	f000 f9e5 	bl	8012db0 <I2C_WaitOnFlagUntilTimeout>
 80129e6:	4603      	mov	r3, r0
 80129e8:	2b00      	cmp	r3, #0
 80129ea:	d00d      	beq.n	8012a08 <I2C_RequestMemoryRead+0x19c>
 80129ec:	68fb      	ldr	r3, [r7, #12]
 80129ee:	681b      	ldr	r3, [r3, #0]
 80129f0:	681b      	ldr	r3, [r3, #0]
 80129f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80129f6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80129fa:	d103      	bne.n	8012a04 <I2C_RequestMemoryRead+0x198>
 80129fc:	68fb      	ldr	r3, [r7, #12]
 80129fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8012a02:	641a      	str	r2, [r3, #64]	; 0x40
 8012a04:	2303      	movs	r3, #3
 8012a06:	e013      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 8012a08:	897b      	ldrh	r3, [r7, #10]
 8012a0a:	b2db      	uxtb	r3, r3
 8012a0c:	f043 0301 	orr.w	r3, r3, #1
 8012a10:	b2da      	uxtb	r2, r3
 8012a12:	68fb      	ldr	r3, [r7, #12]
 8012a14:	681b      	ldr	r3, [r3, #0]
 8012a16:	611a      	str	r2, [r3, #16]
 8012a18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012a1a:	6a3a      	ldr	r2, [r7, #32]
 8012a1c:	4906      	ldr	r1, [pc, #24]	; (8012a38 <I2C_RequestMemoryRead+0x1cc>)
 8012a1e:	68f8      	ldr	r0, [r7, #12]
 8012a20:	f000 fa1d 	bl	8012e5e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8012a24:	4603      	mov	r3, r0
 8012a26:	2b00      	cmp	r3, #0
 8012a28:	d001      	beq.n	8012a2e <I2C_RequestMemoryRead+0x1c2>
 8012a2a:	2301      	movs	r3, #1
 8012a2c:	e000      	b.n	8012a30 <I2C_RequestMemoryRead+0x1c4>
 8012a2e:	2300      	movs	r3, #0
 8012a30:	4618      	mov	r0, r3
 8012a32:	3718      	adds	r7, #24
 8012a34:	46bd      	mov	sp, r7
 8012a36:	bd80      	pop	{r7, pc}
 8012a38:	00010002 	.word	0x00010002

08012a3c <I2C_DMAXferCplt>:
 8012a3c:	b580      	push	{r7, lr}
 8012a3e:	b086      	sub	sp, #24
 8012a40:	af00      	add	r7, sp, #0
 8012a42:	6078      	str	r0, [r7, #4]
 8012a44:	687b      	ldr	r3, [r7, #4]
 8012a46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a48:	617b      	str	r3, [r7, #20]
 8012a4a:	697b      	ldr	r3, [r7, #20]
 8012a4c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012a50:	74fb      	strb	r3, [r7, #19]
 8012a52:	697b      	ldr	r3, [r7, #20]
 8012a54:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8012a58:	74bb      	strb	r3, [r7, #18]
 8012a5a:	697b      	ldr	r3, [r7, #20]
 8012a5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a5e:	60fb      	str	r3, [r7, #12]
 8012a60:	697b      	ldr	r3, [r7, #20]
 8012a62:	681b      	ldr	r3, [r3, #0]
 8012a64:	685a      	ldr	r2, [r3, #4]
 8012a66:	697b      	ldr	r3, [r7, #20]
 8012a68:	681b      	ldr	r3, [r3, #0]
 8012a6a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8012a6e:	605a      	str	r2, [r3, #4]
 8012a70:	697b      	ldr	r3, [r7, #20]
 8012a72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a74:	2b00      	cmp	r3, #0
 8012a76:	d003      	beq.n	8012a80 <I2C_DMAXferCplt+0x44>
 8012a78:	697b      	ldr	r3, [r7, #20]
 8012a7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a7c:	2200      	movs	r2, #0
 8012a7e:	63da      	str	r2, [r3, #60]	; 0x3c
 8012a80:	697b      	ldr	r3, [r7, #20]
 8012a82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a84:	2b00      	cmp	r3, #0
 8012a86:	d003      	beq.n	8012a90 <I2C_DMAXferCplt+0x54>
 8012a88:	697b      	ldr	r3, [r7, #20]
 8012a8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a8c:	2200      	movs	r2, #0
 8012a8e:	63da      	str	r2, [r3, #60]	; 0x3c
 8012a90:	7cfb      	ldrb	r3, [r7, #19]
 8012a92:	f003 0321 	and.w	r3, r3, #33	; 0x21
 8012a96:	2b21      	cmp	r3, #33	; 0x21
 8012a98:	d007      	beq.n	8012aaa <I2C_DMAXferCplt+0x6e>
 8012a9a:	7cfb      	ldrb	r3, [r7, #19]
 8012a9c:	f003 0322 	and.w	r3, r3, #34	; 0x22
 8012aa0:	2b22      	cmp	r3, #34	; 0x22
 8012aa2:	d131      	bne.n	8012b08 <I2C_DMAXferCplt+0xcc>
 8012aa4:	7cbb      	ldrb	r3, [r7, #18]
 8012aa6:	2b20      	cmp	r3, #32
 8012aa8:	d12e      	bne.n	8012b08 <I2C_DMAXferCplt+0xcc>
 8012aaa:	697b      	ldr	r3, [r7, #20]
 8012aac:	681b      	ldr	r3, [r3, #0]
 8012aae:	685a      	ldr	r2, [r3, #4]
 8012ab0:	697b      	ldr	r3, [r7, #20]
 8012ab2:	681b      	ldr	r3, [r3, #0]
 8012ab4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012ab8:	605a      	str	r2, [r3, #4]
 8012aba:	697b      	ldr	r3, [r7, #20]
 8012abc:	2200      	movs	r2, #0
 8012abe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012ac0:	7cfb      	ldrb	r3, [r7, #19]
 8012ac2:	2b29      	cmp	r3, #41	; 0x29
 8012ac4:	d10a      	bne.n	8012adc <I2C_DMAXferCplt+0xa0>
 8012ac6:	697b      	ldr	r3, [r7, #20]
 8012ac8:	2221      	movs	r2, #33	; 0x21
 8012aca:	631a      	str	r2, [r3, #48]	; 0x30
 8012acc:	697b      	ldr	r3, [r7, #20]
 8012ace:	2228      	movs	r2, #40	; 0x28
 8012ad0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ad4:	6978      	ldr	r0, [r7, #20]
 8012ad6:	f7ff fc5e 	bl	8012396 <HAL_I2C_SlaveTxCpltCallback>
 8012ada:	e00c      	b.n	8012af6 <I2C_DMAXferCplt+0xba>
 8012adc:	7cfb      	ldrb	r3, [r7, #19]
 8012ade:	2b2a      	cmp	r3, #42	; 0x2a
 8012ae0:	d109      	bne.n	8012af6 <I2C_DMAXferCplt+0xba>
 8012ae2:	697b      	ldr	r3, [r7, #20]
 8012ae4:	2222      	movs	r2, #34	; 0x22
 8012ae6:	631a      	str	r2, [r3, #48]	; 0x30
 8012ae8:	697b      	ldr	r3, [r7, #20]
 8012aea:	2228      	movs	r2, #40	; 0x28
 8012aec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012af0:	6978      	ldr	r0, [r7, #20]
 8012af2:	f7ff fc5a 	bl	80123aa <HAL_I2C_SlaveRxCpltCallback>
 8012af6:	697b      	ldr	r3, [r7, #20]
 8012af8:	681b      	ldr	r3, [r3, #0]
 8012afa:	685a      	ldr	r2, [r3, #4]
 8012afc:	697b      	ldr	r3, [r7, #20]
 8012afe:	681b      	ldr	r3, [r3, #0]
 8012b00:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8012b04:	605a      	str	r2, [r3, #4]
 8012b06:	e06a      	b.n	8012bde <I2C_DMAXferCplt+0x1a2>
 8012b08:	697b      	ldr	r3, [r7, #20]
 8012b0a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8012b0e:	b2db      	uxtb	r3, r3
 8012b10:	2b00      	cmp	r3, #0
 8012b12:	d064      	beq.n	8012bde <I2C_DMAXferCplt+0x1a2>
 8012b14:	697b      	ldr	r3, [r7, #20]
 8012b16:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8012b18:	b29b      	uxth	r3, r3
 8012b1a:	2b01      	cmp	r3, #1
 8012b1c:	d107      	bne.n	8012b2e <I2C_DMAXferCplt+0xf2>
 8012b1e:	697b      	ldr	r3, [r7, #20]
 8012b20:	681b      	ldr	r3, [r3, #0]
 8012b22:	681a      	ldr	r2, [r3, #0]
 8012b24:	697b      	ldr	r3, [r7, #20]
 8012b26:	681b      	ldr	r3, [r3, #0]
 8012b28:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012b2c:	601a      	str	r2, [r3, #0]
 8012b2e:	697b      	ldr	r3, [r7, #20]
 8012b30:	681b      	ldr	r3, [r3, #0]
 8012b32:	685a      	ldr	r2, [r3, #4]
 8012b34:	697b      	ldr	r3, [r7, #20]
 8012b36:	681b      	ldr	r3, [r3, #0]
 8012b38:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8012b3c:	605a      	str	r2, [r3, #4]
 8012b3e:	68fb      	ldr	r3, [r7, #12]
 8012b40:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8012b44:	d009      	beq.n	8012b5a <I2C_DMAXferCplt+0x11e>
 8012b46:	68fb      	ldr	r3, [r7, #12]
 8012b48:	2b08      	cmp	r3, #8
 8012b4a:	d006      	beq.n	8012b5a <I2C_DMAXferCplt+0x11e>
 8012b4c:	68fb      	ldr	r3, [r7, #12]
 8012b4e:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8012b52:	d002      	beq.n	8012b5a <I2C_DMAXferCplt+0x11e>
 8012b54:	68fb      	ldr	r3, [r7, #12]
 8012b56:	2b20      	cmp	r3, #32
 8012b58:	d107      	bne.n	8012b6a <I2C_DMAXferCplt+0x12e>
 8012b5a:	697b      	ldr	r3, [r7, #20]
 8012b5c:	681b      	ldr	r3, [r3, #0]
 8012b5e:	681a      	ldr	r2, [r3, #0]
 8012b60:	697b      	ldr	r3, [r7, #20]
 8012b62:	681b      	ldr	r3, [r3, #0]
 8012b64:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012b68:	601a      	str	r2, [r3, #0]
 8012b6a:	697b      	ldr	r3, [r7, #20]
 8012b6c:	681b      	ldr	r3, [r3, #0]
 8012b6e:	685a      	ldr	r2, [r3, #4]
 8012b70:	697b      	ldr	r3, [r7, #20]
 8012b72:	681b      	ldr	r3, [r3, #0]
 8012b74:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8012b78:	605a      	str	r2, [r3, #4]
 8012b7a:	697b      	ldr	r3, [r7, #20]
 8012b7c:	681b      	ldr	r3, [r3, #0]
 8012b7e:	685a      	ldr	r2, [r3, #4]
 8012b80:	697b      	ldr	r3, [r7, #20]
 8012b82:	681b      	ldr	r3, [r3, #0]
 8012b84:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8012b88:	605a      	str	r2, [r3, #4]
 8012b8a:	697b      	ldr	r3, [r7, #20]
 8012b8c:	2200      	movs	r2, #0
 8012b8e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012b90:	697b      	ldr	r3, [r7, #20]
 8012b92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012b94:	2b00      	cmp	r3, #0
 8012b96:	d003      	beq.n	8012ba0 <I2C_DMAXferCplt+0x164>
 8012b98:	6978      	ldr	r0, [r7, #20]
 8012b9a:	f7ff fc1a 	bl	80123d2 <HAL_I2C_ErrorCallback>
 8012b9e:	e01e      	b.n	8012bde <I2C_DMAXferCplt+0x1a2>
 8012ba0:	697b      	ldr	r3, [r7, #20]
 8012ba2:	2220      	movs	r2, #32
 8012ba4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ba8:	697b      	ldr	r3, [r7, #20]
 8012baa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8012bae:	b2db      	uxtb	r3, r3
 8012bb0:	2b40      	cmp	r3, #64	; 0x40
 8012bb2:	d10a      	bne.n	8012bca <I2C_DMAXferCplt+0x18e>
 8012bb4:	697b      	ldr	r3, [r7, #20]
 8012bb6:	2200      	movs	r2, #0
 8012bb8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012bbc:	697b      	ldr	r3, [r7, #20]
 8012bbe:	2200      	movs	r2, #0
 8012bc0:	631a      	str	r2, [r3, #48]	; 0x30
 8012bc2:	6978      	ldr	r0, [r7, #20]
 8012bc4:	f7ef fa0c 	bl	8001fe0 <HAL_I2C_MemRxCpltCallback>
 8012bc8:	e009      	b.n	8012bde <I2C_DMAXferCplt+0x1a2>
 8012bca:	697b      	ldr	r3, [r7, #20]
 8012bcc:	2200      	movs	r2, #0
 8012bce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012bd2:	697b      	ldr	r3, [r7, #20]
 8012bd4:	2212      	movs	r2, #18
 8012bd6:	631a      	str	r2, [r3, #48]	; 0x30
 8012bd8:	6978      	ldr	r0, [r7, #20]
 8012bda:	f7ff fbd2 	bl	8012382 <HAL_I2C_MasterRxCpltCallback>
 8012bde:	bf00      	nop
 8012be0:	3718      	adds	r7, #24
 8012be2:	46bd      	mov	sp, r7
 8012be4:	bd80      	pop	{r7, pc}

08012be6 <I2C_DMAError>:
 8012be6:	b580      	push	{r7, lr}
 8012be8:	b084      	sub	sp, #16
 8012bea:	af00      	add	r7, sp, #0
 8012bec:	6078      	str	r0, [r7, #4]
 8012bee:	687b      	ldr	r3, [r7, #4]
 8012bf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012bf2:	60fb      	str	r3, [r7, #12]
 8012bf4:	68fb      	ldr	r3, [r7, #12]
 8012bf6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012bf8:	2b00      	cmp	r3, #0
 8012bfa:	d003      	beq.n	8012c04 <I2C_DMAError+0x1e>
 8012bfc:	68fb      	ldr	r3, [r7, #12]
 8012bfe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012c00:	2200      	movs	r2, #0
 8012c02:	63da      	str	r2, [r3, #60]	; 0x3c
 8012c04:	68fb      	ldr	r3, [r7, #12]
 8012c06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c08:	2b00      	cmp	r3, #0
 8012c0a:	d003      	beq.n	8012c14 <I2C_DMAError+0x2e>
 8012c0c:	68fb      	ldr	r3, [r7, #12]
 8012c0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c10:	2200      	movs	r2, #0
 8012c12:	63da      	str	r2, [r3, #60]	; 0x3c
 8012c14:	6878      	ldr	r0, [r7, #4]
 8012c16:	f7fe fa5b 	bl	80110d0 <HAL_DMA_GetError>
 8012c1a:	4603      	mov	r3, r0
 8012c1c:	2b02      	cmp	r3, #2
 8012c1e:	d01b      	beq.n	8012c58 <I2C_DMAError+0x72>
 8012c20:	68fb      	ldr	r3, [r7, #12]
 8012c22:	681b      	ldr	r3, [r3, #0]
 8012c24:	681a      	ldr	r2, [r3, #0]
 8012c26:	68fb      	ldr	r3, [r7, #12]
 8012c28:	681b      	ldr	r3, [r3, #0]
 8012c2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012c2e:	601a      	str	r2, [r3, #0]
 8012c30:	68fb      	ldr	r3, [r7, #12]
 8012c32:	2200      	movs	r2, #0
 8012c34:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012c36:	68fb      	ldr	r3, [r7, #12]
 8012c38:	2220      	movs	r2, #32
 8012c3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012c3e:	68fb      	ldr	r3, [r7, #12]
 8012c40:	2200      	movs	r2, #0
 8012c42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012c46:	68fb      	ldr	r3, [r7, #12]
 8012c48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012c4a:	f043 0210 	orr.w	r2, r3, #16
 8012c4e:	68fb      	ldr	r3, [r7, #12]
 8012c50:	641a      	str	r2, [r3, #64]	; 0x40
 8012c52:	68f8      	ldr	r0, [r7, #12]
 8012c54:	f7ff fbbd 	bl	80123d2 <HAL_I2C_ErrorCallback>
 8012c58:	bf00      	nop
 8012c5a:	3710      	adds	r7, #16
 8012c5c:	46bd      	mov	sp, r7
 8012c5e:	bd80      	pop	{r7, pc}

08012c60 <I2C_DMAAbort>:
 8012c60:	b580      	push	{r7, lr}
 8012c62:	b086      	sub	sp, #24
 8012c64:	af00      	add	r7, sp, #0
 8012c66:	6078      	str	r0, [r7, #4]
 8012c68:	2300      	movs	r3, #0
 8012c6a:	60fb      	str	r3, [r7, #12]
 8012c6c:	687b      	ldr	r3, [r7, #4]
 8012c6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c70:	617b      	str	r3, [r7, #20]
 8012c72:	697b      	ldr	r3, [r7, #20]
 8012c74:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012c78:	74fb      	strb	r3, [r7, #19]
 8012c7a:	4b4b      	ldr	r3, [pc, #300]	; (8012da8 <I2C_DMAAbort+0x148>)
 8012c7c:	681b      	ldr	r3, [r3, #0]
 8012c7e:	08db      	lsrs	r3, r3, #3
 8012c80:	4a4a      	ldr	r2, [pc, #296]	; (8012dac <I2C_DMAAbort+0x14c>)
 8012c82:	fba2 2303 	umull	r2, r3, r2, r3
 8012c86:	0a1a      	lsrs	r2, r3, #8
 8012c88:	4613      	mov	r3, r2
 8012c8a:	009b      	lsls	r3, r3, #2
 8012c8c:	4413      	add	r3, r2
 8012c8e:	00da      	lsls	r2, r3, #3
 8012c90:	1ad3      	subs	r3, r2, r3
 8012c92:	60fb      	str	r3, [r7, #12]
 8012c94:	68fb      	ldr	r3, [r7, #12]
 8012c96:	2b00      	cmp	r3, #0
 8012c98:	d106      	bne.n	8012ca8 <I2C_DMAAbort+0x48>
 8012c9a:	697b      	ldr	r3, [r7, #20]
 8012c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012c9e:	f043 0220 	orr.w	r2, r3, #32
 8012ca2:	697b      	ldr	r3, [r7, #20]
 8012ca4:	641a      	str	r2, [r3, #64]	; 0x40
 8012ca6:	e00a      	b.n	8012cbe <I2C_DMAAbort+0x5e>
 8012ca8:	68fb      	ldr	r3, [r7, #12]
 8012caa:	3b01      	subs	r3, #1
 8012cac:	60fb      	str	r3, [r7, #12]
 8012cae:	697b      	ldr	r3, [r7, #20]
 8012cb0:	681b      	ldr	r3, [r3, #0]
 8012cb2:	681b      	ldr	r3, [r3, #0]
 8012cb4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8012cb8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8012cbc:	d0ea      	beq.n	8012c94 <I2C_DMAAbort+0x34>
 8012cbe:	697b      	ldr	r3, [r7, #20]
 8012cc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012cc2:	2b00      	cmp	r3, #0
 8012cc4:	d003      	beq.n	8012cce <I2C_DMAAbort+0x6e>
 8012cc6:	697b      	ldr	r3, [r7, #20]
 8012cc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012cca:	2200      	movs	r2, #0
 8012ccc:	63da      	str	r2, [r3, #60]	; 0x3c
 8012cce:	697b      	ldr	r3, [r7, #20]
 8012cd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012cd2:	2b00      	cmp	r3, #0
 8012cd4:	d003      	beq.n	8012cde <I2C_DMAAbort+0x7e>
 8012cd6:	697b      	ldr	r3, [r7, #20]
 8012cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012cda:	2200      	movs	r2, #0
 8012cdc:	63da      	str	r2, [r3, #60]	; 0x3c
 8012cde:	697b      	ldr	r3, [r7, #20]
 8012ce0:	681b      	ldr	r3, [r3, #0]
 8012ce2:	681a      	ldr	r2, [r3, #0]
 8012ce4:	697b      	ldr	r3, [r7, #20]
 8012ce6:	681b      	ldr	r3, [r3, #0]
 8012ce8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8012cec:	601a      	str	r2, [r3, #0]
 8012cee:	697b      	ldr	r3, [r7, #20]
 8012cf0:	2200      	movs	r2, #0
 8012cf2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8012cf4:	697b      	ldr	r3, [r7, #20]
 8012cf6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012cf8:	2b00      	cmp	r3, #0
 8012cfa:	d003      	beq.n	8012d04 <I2C_DMAAbort+0xa4>
 8012cfc:	697b      	ldr	r3, [r7, #20]
 8012cfe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012d00:	2200      	movs	r2, #0
 8012d02:	651a      	str	r2, [r3, #80]	; 0x50
 8012d04:	697b      	ldr	r3, [r7, #20]
 8012d06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d08:	2b00      	cmp	r3, #0
 8012d0a:	d003      	beq.n	8012d14 <I2C_DMAAbort+0xb4>
 8012d0c:	697b      	ldr	r3, [r7, #20]
 8012d0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d10:	2200      	movs	r2, #0
 8012d12:	651a      	str	r2, [r3, #80]	; 0x50
 8012d14:	697b      	ldr	r3, [r7, #20]
 8012d16:	681b      	ldr	r3, [r3, #0]
 8012d18:	681a      	ldr	r2, [r3, #0]
 8012d1a:	697b      	ldr	r3, [r7, #20]
 8012d1c:	681b      	ldr	r3, [r3, #0]
 8012d1e:	f022 0201 	bic.w	r2, r2, #1
 8012d22:	601a      	str	r2, [r3, #0]
 8012d24:	697b      	ldr	r3, [r7, #20]
 8012d26:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8012d2a:	b2db      	uxtb	r3, r3
 8012d2c:	2b60      	cmp	r3, #96	; 0x60
 8012d2e:	d10e      	bne.n	8012d4e <I2C_DMAAbort+0xee>
 8012d30:	697b      	ldr	r3, [r7, #20]
 8012d32:	2220      	movs	r2, #32
 8012d34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012d38:	697b      	ldr	r3, [r7, #20]
 8012d3a:	2200      	movs	r2, #0
 8012d3c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012d40:	697b      	ldr	r3, [r7, #20]
 8012d42:	2200      	movs	r2, #0
 8012d44:	641a      	str	r2, [r3, #64]	; 0x40
 8012d46:	6978      	ldr	r0, [r7, #20]
 8012d48:	f7ff fb4d 	bl	80123e6 <HAL_I2C_AbortCpltCallback>
 8012d4c:	e027      	b.n	8012d9e <I2C_DMAAbort+0x13e>
 8012d4e:	7cfb      	ldrb	r3, [r7, #19]
 8012d50:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8012d54:	2b28      	cmp	r3, #40	; 0x28
 8012d56:	d117      	bne.n	8012d88 <I2C_DMAAbort+0x128>
 8012d58:	697b      	ldr	r3, [r7, #20]
 8012d5a:	681b      	ldr	r3, [r3, #0]
 8012d5c:	681a      	ldr	r2, [r3, #0]
 8012d5e:	697b      	ldr	r3, [r7, #20]
 8012d60:	681b      	ldr	r3, [r3, #0]
 8012d62:	f042 0201 	orr.w	r2, r2, #1
 8012d66:	601a      	str	r2, [r3, #0]
 8012d68:	697b      	ldr	r3, [r7, #20]
 8012d6a:	681b      	ldr	r3, [r3, #0]
 8012d6c:	681a      	ldr	r2, [r3, #0]
 8012d6e:	697b      	ldr	r3, [r7, #20]
 8012d70:	681b      	ldr	r3, [r3, #0]
 8012d72:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012d76:	601a      	str	r2, [r3, #0]
 8012d78:	697b      	ldr	r3, [r7, #20]
 8012d7a:	2200      	movs	r2, #0
 8012d7c:	631a      	str	r2, [r3, #48]	; 0x30
 8012d7e:	697b      	ldr	r3, [r7, #20]
 8012d80:	2228      	movs	r2, #40	; 0x28
 8012d82:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012d86:	e007      	b.n	8012d98 <I2C_DMAAbort+0x138>
 8012d88:	697b      	ldr	r3, [r7, #20]
 8012d8a:	2220      	movs	r2, #32
 8012d8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012d90:	697b      	ldr	r3, [r7, #20]
 8012d92:	2200      	movs	r2, #0
 8012d94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012d98:	6978      	ldr	r0, [r7, #20]
 8012d9a:	f7ff fb1a 	bl	80123d2 <HAL_I2C_ErrorCallback>
 8012d9e:	bf00      	nop
 8012da0:	3718      	adds	r7, #24
 8012da2:	46bd      	mov	sp, r7
 8012da4:	bd80      	pop	{r7, pc}
 8012da6:	bf00      	nop
 8012da8:	20000004 	.word	0x20000004
 8012dac:	14f8b589 	.word	0x14f8b589

08012db0 <I2C_WaitOnFlagUntilTimeout>:
 8012db0:	b580      	push	{r7, lr}
 8012db2:	b084      	sub	sp, #16
 8012db4:	af00      	add	r7, sp, #0
 8012db6:	60f8      	str	r0, [r7, #12]
 8012db8:	60b9      	str	r1, [r7, #8]
 8012dba:	603b      	str	r3, [r7, #0]
 8012dbc:	4613      	mov	r3, r2
 8012dbe:	71fb      	strb	r3, [r7, #7]
 8012dc0:	e025      	b.n	8012e0e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012dc2:	683b      	ldr	r3, [r7, #0]
 8012dc4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012dc8:	d021      	beq.n	8012e0e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012dca:	f7fc fc6b 	bl	800f6a4 <HAL_GetTick>
 8012dce:	4602      	mov	r2, r0
 8012dd0:	69bb      	ldr	r3, [r7, #24]
 8012dd2:	1ad3      	subs	r3, r2, r3
 8012dd4:	683a      	ldr	r2, [r7, #0]
 8012dd6:	429a      	cmp	r2, r3
 8012dd8:	d302      	bcc.n	8012de0 <I2C_WaitOnFlagUntilTimeout+0x30>
 8012dda:	683b      	ldr	r3, [r7, #0]
 8012ddc:	2b00      	cmp	r3, #0
 8012dde:	d116      	bne.n	8012e0e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8012de0:	68fb      	ldr	r3, [r7, #12]
 8012de2:	2200      	movs	r2, #0
 8012de4:	631a      	str	r2, [r3, #48]	; 0x30
 8012de6:	68fb      	ldr	r3, [r7, #12]
 8012de8:	2220      	movs	r2, #32
 8012dea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012dee:	68fb      	ldr	r3, [r7, #12]
 8012df0:	2200      	movs	r2, #0
 8012df2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012df6:	68fb      	ldr	r3, [r7, #12]
 8012df8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012dfa:	f043 0220 	orr.w	r2, r3, #32
 8012dfe:	68fb      	ldr	r3, [r7, #12]
 8012e00:	641a      	str	r2, [r3, #64]	; 0x40
 8012e02:	68fb      	ldr	r3, [r7, #12]
 8012e04:	2200      	movs	r2, #0
 8012e06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012e0a:	2301      	movs	r3, #1
 8012e0c:	e023      	b.n	8012e56 <I2C_WaitOnFlagUntilTimeout+0xa6>
 8012e0e:	68bb      	ldr	r3, [r7, #8]
 8012e10:	0c1b      	lsrs	r3, r3, #16
 8012e12:	b2db      	uxtb	r3, r3
 8012e14:	2b01      	cmp	r3, #1
 8012e16:	d10d      	bne.n	8012e34 <I2C_WaitOnFlagUntilTimeout+0x84>
 8012e18:	68fb      	ldr	r3, [r7, #12]
 8012e1a:	681b      	ldr	r3, [r3, #0]
 8012e1c:	695b      	ldr	r3, [r3, #20]
 8012e1e:	43da      	mvns	r2, r3
 8012e20:	68bb      	ldr	r3, [r7, #8]
 8012e22:	4013      	ands	r3, r2
 8012e24:	b29b      	uxth	r3, r3
 8012e26:	2b00      	cmp	r3, #0
 8012e28:	bf0c      	ite	eq
 8012e2a:	2301      	moveq	r3, #1
 8012e2c:	2300      	movne	r3, #0
 8012e2e:	b2db      	uxtb	r3, r3
 8012e30:	461a      	mov	r2, r3
 8012e32:	e00c      	b.n	8012e4e <I2C_WaitOnFlagUntilTimeout+0x9e>
 8012e34:	68fb      	ldr	r3, [r7, #12]
 8012e36:	681b      	ldr	r3, [r3, #0]
 8012e38:	699b      	ldr	r3, [r3, #24]
 8012e3a:	43da      	mvns	r2, r3
 8012e3c:	68bb      	ldr	r3, [r7, #8]
 8012e3e:	4013      	ands	r3, r2
 8012e40:	b29b      	uxth	r3, r3
 8012e42:	2b00      	cmp	r3, #0
 8012e44:	bf0c      	ite	eq
 8012e46:	2301      	moveq	r3, #1
 8012e48:	2300      	movne	r3, #0
 8012e4a:	b2db      	uxtb	r3, r3
 8012e4c:	461a      	mov	r2, r3
 8012e4e:	79fb      	ldrb	r3, [r7, #7]
 8012e50:	429a      	cmp	r2, r3
 8012e52:	d0b6      	beq.n	8012dc2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8012e54:	2300      	movs	r3, #0
 8012e56:	4618      	mov	r0, r3
 8012e58:	3710      	adds	r7, #16
 8012e5a:	46bd      	mov	sp, r7
 8012e5c:	bd80      	pop	{r7, pc}

08012e5e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8012e5e:	b580      	push	{r7, lr}
 8012e60:	b084      	sub	sp, #16
 8012e62:	af00      	add	r7, sp, #0
 8012e64:	60f8      	str	r0, [r7, #12]
 8012e66:	60b9      	str	r1, [r7, #8]
 8012e68:	607a      	str	r2, [r7, #4]
 8012e6a:	603b      	str	r3, [r7, #0]
 8012e6c:	e051      	b.n	8012f12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012e6e:	68fb      	ldr	r3, [r7, #12]
 8012e70:	681b      	ldr	r3, [r3, #0]
 8012e72:	695b      	ldr	r3, [r3, #20]
 8012e74:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8012e78:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012e7c:	d123      	bne.n	8012ec6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8012e7e:	68fb      	ldr	r3, [r7, #12]
 8012e80:	681b      	ldr	r3, [r3, #0]
 8012e82:	681a      	ldr	r2, [r3, #0]
 8012e84:	68fb      	ldr	r3, [r7, #12]
 8012e86:	681b      	ldr	r3, [r3, #0]
 8012e88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8012e8c:	601a      	str	r2, [r3, #0]
 8012e8e:	68fb      	ldr	r3, [r7, #12]
 8012e90:	681b      	ldr	r3, [r3, #0]
 8012e92:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8012e96:	615a      	str	r2, [r3, #20]
 8012e98:	68fb      	ldr	r3, [r7, #12]
 8012e9a:	2200      	movs	r2, #0
 8012e9c:	631a      	str	r2, [r3, #48]	; 0x30
 8012e9e:	68fb      	ldr	r3, [r7, #12]
 8012ea0:	2220      	movs	r2, #32
 8012ea2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ea6:	68fb      	ldr	r3, [r7, #12]
 8012ea8:	2200      	movs	r2, #0
 8012eaa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012eae:	68fb      	ldr	r3, [r7, #12]
 8012eb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012eb2:	f043 0204 	orr.w	r2, r3, #4
 8012eb6:	68fb      	ldr	r3, [r7, #12]
 8012eb8:	641a      	str	r2, [r3, #64]	; 0x40
 8012eba:	68fb      	ldr	r3, [r7, #12]
 8012ebc:	2200      	movs	r2, #0
 8012ebe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012ec2:	2301      	movs	r3, #1
 8012ec4:	e046      	b.n	8012f54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8012ec6:	687b      	ldr	r3, [r7, #4]
 8012ec8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012ecc:	d021      	beq.n	8012f12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012ece:	f7fc fbe9 	bl	800f6a4 <HAL_GetTick>
 8012ed2:	4602      	mov	r2, r0
 8012ed4:	683b      	ldr	r3, [r7, #0]
 8012ed6:	1ad3      	subs	r3, r2, r3
 8012ed8:	687a      	ldr	r2, [r7, #4]
 8012eda:	429a      	cmp	r2, r3
 8012edc:	d302      	bcc.n	8012ee4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8012ede:	687b      	ldr	r3, [r7, #4]
 8012ee0:	2b00      	cmp	r3, #0
 8012ee2:	d116      	bne.n	8012f12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8012ee4:	68fb      	ldr	r3, [r7, #12]
 8012ee6:	2200      	movs	r2, #0
 8012ee8:	631a      	str	r2, [r3, #48]	; 0x30
 8012eea:	68fb      	ldr	r3, [r7, #12]
 8012eec:	2220      	movs	r2, #32
 8012eee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012ef2:	68fb      	ldr	r3, [r7, #12]
 8012ef4:	2200      	movs	r2, #0
 8012ef6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012efa:	68fb      	ldr	r3, [r7, #12]
 8012efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012efe:	f043 0220 	orr.w	r2, r3, #32
 8012f02:	68fb      	ldr	r3, [r7, #12]
 8012f04:	641a      	str	r2, [r3, #64]	; 0x40
 8012f06:	68fb      	ldr	r3, [r7, #12]
 8012f08:	2200      	movs	r2, #0
 8012f0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012f0e:	2301      	movs	r3, #1
 8012f10:	e020      	b.n	8012f54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8012f12:	68bb      	ldr	r3, [r7, #8]
 8012f14:	0c1b      	lsrs	r3, r3, #16
 8012f16:	b2db      	uxtb	r3, r3
 8012f18:	2b01      	cmp	r3, #1
 8012f1a:	d10c      	bne.n	8012f36 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8012f1c:	68fb      	ldr	r3, [r7, #12]
 8012f1e:	681b      	ldr	r3, [r3, #0]
 8012f20:	695b      	ldr	r3, [r3, #20]
 8012f22:	43da      	mvns	r2, r3
 8012f24:	68bb      	ldr	r3, [r7, #8]
 8012f26:	4013      	ands	r3, r2
 8012f28:	b29b      	uxth	r3, r3
 8012f2a:	2b00      	cmp	r3, #0
 8012f2c:	bf14      	ite	ne
 8012f2e:	2301      	movne	r3, #1
 8012f30:	2300      	moveq	r3, #0
 8012f32:	b2db      	uxtb	r3, r3
 8012f34:	e00b      	b.n	8012f4e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8012f36:	68fb      	ldr	r3, [r7, #12]
 8012f38:	681b      	ldr	r3, [r3, #0]
 8012f3a:	699b      	ldr	r3, [r3, #24]
 8012f3c:	43da      	mvns	r2, r3
 8012f3e:	68bb      	ldr	r3, [r7, #8]
 8012f40:	4013      	ands	r3, r2
 8012f42:	b29b      	uxth	r3, r3
 8012f44:	2b00      	cmp	r3, #0
 8012f46:	bf14      	ite	ne
 8012f48:	2301      	movne	r3, #1
 8012f4a:	2300      	moveq	r3, #0
 8012f4c:	b2db      	uxtb	r3, r3
 8012f4e:	2b00      	cmp	r3, #0
 8012f50:	d18d      	bne.n	8012e6e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8012f52:	2300      	movs	r3, #0
 8012f54:	4618      	mov	r0, r3
 8012f56:	3710      	adds	r7, #16
 8012f58:	46bd      	mov	sp, r7
 8012f5a:	bd80      	pop	{r7, pc}

08012f5c <I2C_WaitOnTXEFlagUntilTimeout>:
 8012f5c:	b580      	push	{r7, lr}
 8012f5e:	b084      	sub	sp, #16
 8012f60:	af00      	add	r7, sp, #0
 8012f62:	60f8      	str	r0, [r7, #12]
 8012f64:	60b9      	str	r1, [r7, #8]
 8012f66:	607a      	str	r2, [r7, #4]
 8012f68:	e02d      	b.n	8012fc6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012f6a:	68f8      	ldr	r0, [r7, #12]
 8012f6c:	f000 f8ce 	bl	801310c <I2C_IsAcknowledgeFailed>
 8012f70:	4603      	mov	r3, r0
 8012f72:	2b00      	cmp	r3, #0
 8012f74:	d001      	beq.n	8012f7a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8012f76:	2301      	movs	r3, #1
 8012f78:	e02d      	b.n	8012fd6 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8012f7a:	68bb      	ldr	r3, [r7, #8]
 8012f7c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8012f80:	d021      	beq.n	8012fc6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012f82:	f7fc fb8f 	bl	800f6a4 <HAL_GetTick>
 8012f86:	4602      	mov	r2, r0
 8012f88:	687b      	ldr	r3, [r7, #4]
 8012f8a:	1ad3      	subs	r3, r2, r3
 8012f8c:	68ba      	ldr	r2, [r7, #8]
 8012f8e:	429a      	cmp	r2, r3
 8012f90:	d302      	bcc.n	8012f98 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8012f92:	68bb      	ldr	r3, [r7, #8]
 8012f94:	2b00      	cmp	r3, #0
 8012f96:	d116      	bne.n	8012fc6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8012f98:	68fb      	ldr	r3, [r7, #12]
 8012f9a:	2200      	movs	r2, #0
 8012f9c:	631a      	str	r2, [r3, #48]	; 0x30
 8012f9e:	68fb      	ldr	r3, [r7, #12]
 8012fa0:	2220      	movs	r2, #32
 8012fa2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8012fa6:	68fb      	ldr	r3, [r7, #12]
 8012fa8:	2200      	movs	r2, #0
 8012faa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8012fae:	68fb      	ldr	r3, [r7, #12]
 8012fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012fb2:	f043 0220 	orr.w	r2, r3, #32
 8012fb6:	68fb      	ldr	r3, [r7, #12]
 8012fb8:	641a      	str	r2, [r3, #64]	; 0x40
 8012fba:	68fb      	ldr	r3, [r7, #12]
 8012fbc:	2200      	movs	r2, #0
 8012fbe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8012fc2:	2301      	movs	r3, #1
 8012fc4:	e007      	b.n	8012fd6 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8012fc6:	68fb      	ldr	r3, [r7, #12]
 8012fc8:	681b      	ldr	r3, [r3, #0]
 8012fca:	695b      	ldr	r3, [r3, #20]
 8012fcc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8012fd0:	2b80      	cmp	r3, #128	; 0x80
 8012fd2:	d1ca      	bne.n	8012f6a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8012fd4:	2300      	movs	r3, #0
 8012fd6:	4618      	mov	r0, r3
 8012fd8:	3710      	adds	r7, #16
 8012fda:	46bd      	mov	sp, r7
 8012fdc:	bd80      	pop	{r7, pc}

08012fde <I2C_WaitOnBTFFlagUntilTimeout>:
 8012fde:	b580      	push	{r7, lr}
 8012fe0:	b084      	sub	sp, #16
 8012fe2:	af00      	add	r7, sp, #0
 8012fe4:	60f8      	str	r0, [r7, #12]
 8012fe6:	60b9      	str	r1, [r7, #8]
 8012fe8:	607a      	str	r2, [r7, #4]
 8012fea:	e02d      	b.n	8013048 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8012fec:	68f8      	ldr	r0, [r7, #12]
 8012fee:	f000 f88d 	bl	801310c <I2C_IsAcknowledgeFailed>
 8012ff2:	4603      	mov	r3, r0
 8012ff4:	2b00      	cmp	r3, #0
 8012ff6:	d001      	beq.n	8012ffc <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8012ff8:	2301      	movs	r3, #1
 8012ffa:	e02d      	b.n	8013058 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8012ffc:	68bb      	ldr	r3, [r7, #8]
 8012ffe:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8013002:	d021      	beq.n	8013048 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8013004:	f7fc fb4e 	bl	800f6a4 <HAL_GetTick>
 8013008:	4602      	mov	r2, r0
 801300a:	687b      	ldr	r3, [r7, #4]
 801300c:	1ad3      	subs	r3, r2, r3
 801300e:	68ba      	ldr	r2, [r7, #8]
 8013010:	429a      	cmp	r2, r3
 8013012:	d302      	bcc.n	801301a <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8013014:	68bb      	ldr	r3, [r7, #8]
 8013016:	2b00      	cmp	r3, #0
 8013018:	d116      	bne.n	8013048 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 801301a:	68fb      	ldr	r3, [r7, #12]
 801301c:	2200      	movs	r2, #0
 801301e:	631a      	str	r2, [r3, #48]	; 0x30
 8013020:	68fb      	ldr	r3, [r7, #12]
 8013022:	2220      	movs	r2, #32
 8013024:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8013028:	68fb      	ldr	r3, [r7, #12]
 801302a:	2200      	movs	r2, #0
 801302c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8013030:	68fb      	ldr	r3, [r7, #12]
 8013032:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013034:	f043 0220 	orr.w	r2, r3, #32
 8013038:	68fb      	ldr	r3, [r7, #12]
 801303a:	641a      	str	r2, [r3, #64]	; 0x40
 801303c:	68fb      	ldr	r3, [r7, #12]
 801303e:	2200      	movs	r2, #0
 8013040:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8013044:	2301      	movs	r3, #1
 8013046:	e007      	b.n	8013058 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8013048:	68fb      	ldr	r3, [r7, #12]
 801304a:	681b      	ldr	r3, [r3, #0]
 801304c:	695b      	ldr	r3, [r3, #20]
 801304e:	f003 0304 	and.w	r3, r3, #4
 8013052:	2b04      	cmp	r3, #4
 8013054:	d1ca      	bne.n	8012fec <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8013056:	2300      	movs	r3, #0
 8013058:	4618      	mov	r0, r3
 801305a:	3710      	adds	r7, #16
 801305c:	46bd      	mov	sp, r7
 801305e:	bd80      	pop	{r7, pc}

08013060 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8013060:	b580      	push	{r7, lr}
 8013062:	b084      	sub	sp, #16
 8013064:	af00      	add	r7, sp, #0
 8013066:	60f8      	str	r0, [r7, #12]
 8013068:	60b9      	str	r1, [r7, #8]
 801306a:	607a      	str	r2, [r7, #4]
 801306c:	e042      	b.n	80130f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 801306e:	68fb      	ldr	r3, [r7, #12]
 8013070:	681b      	ldr	r3, [r3, #0]
 8013072:	695b      	ldr	r3, [r3, #20]
 8013074:	f003 0310 	and.w	r3, r3, #16
 8013078:	2b10      	cmp	r3, #16
 801307a:	d119      	bne.n	80130b0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 801307c:	68fb      	ldr	r3, [r7, #12]
 801307e:	681b      	ldr	r3, [r3, #0]
 8013080:	f06f 0210 	mvn.w	r2, #16
 8013084:	615a      	str	r2, [r3, #20]
 8013086:	68fb      	ldr	r3, [r7, #12]
 8013088:	2200      	movs	r2, #0
 801308a:	631a      	str	r2, [r3, #48]	; 0x30
 801308c:	68fb      	ldr	r3, [r7, #12]
 801308e:	2220      	movs	r2, #32
 8013090:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8013094:	68fb      	ldr	r3, [r7, #12]
 8013096:	2200      	movs	r2, #0
 8013098:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801309c:	68fb      	ldr	r3, [r7, #12]
 801309e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80130a0:	68fb      	ldr	r3, [r7, #12]
 80130a2:	641a      	str	r2, [r3, #64]	; 0x40
 80130a4:	68fb      	ldr	r3, [r7, #12]
 80130a6:	2200      	movs	r2, #0
 80130a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80130ac:	2301      	movs	r3, #1
 80130ae:	e029      	b.n	8013104 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80130b0:	f7fc faf8 	bl	800f6a4 <HAL_GetTick>
 80130b4:	4602      	mov	r2, r0
 80130b6:	687b      	ldr	r3, [r7, #4]
 80130b8:	1ad3      	subs	r3, r2, r3
 80130ba:	68ba      	ldr	r2, [r7, #8]
 80130bc:	429a      	cmp	r2, r3
 80130be:	d302      	bcc.n	80130c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80130c0:	68bb      	ldr	r3, [r7, #8]
 80130c2:	2b00      	cmp	r3, #0
 80130c4:	d116      	bne.n	80130f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80130c6:	68fb      	ldr	r3, [r7, #12]
 80130c8:	2200      	movs	r2, #0
 80130ca:	631a      	str	r2, [r3, #48]	; 0x30
 80130cc:	68fb      	ldr	r3, [r7, #12]
 80130ce:	2220      	movs	r2, #32
 80130d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80130d4:	68fb      	ldr	r3, [r7, #12]
 80130d6:	2200      	movs	r2, #0
 80130d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80130dc:	68fb      	ldr	r3, [r7, #12]
 80130de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80130e0:	f043 0220 	orr.w	r2, r3, #32
 80130e4:	68fb      	ldr	r3, [r7, #12]
 80130e6:	641a      	str	r2, [r3, #64]	; 0x40
 80130e8:	68fb      	ldr	r3, [r7, #12]
 80130ea:	2200      	movs	r2, #0
 80130ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80130f0:	2301      	movs	r3, #1
 80130f2:	e007      	b.n	8013104 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80130f4:	68fb      	ldr	r3, [r7, #12]
 80130f6:	681b      	ldr	r3, [r3, #0]
 80130f8:	695b      	ldr	r3, [r3, #20]
 80130fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80130fe:	2b40      	cmp	r3, #64	; 0x40
 8013100:	d1b5      	bne.n	801306e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8013102:	2300      	movs	r3, #0
 8013104:	4618      	mov	r0, r3
 8013106:	3710      	adds	r7, #16
 8013108:	46bd      	mov	sp, r7
 801310a:	bd80      	pop	{r7, pc}

0801310c <I2C_IsAcknowledgeFailed>:
 801310c:	b480      	push	{r7}
 801310e:	b083      	sub	sp, #12
 8013110:	af00      	add	r7, sp, #0
 8013112:	6078      	str	r0, [r7, #4]
 8013114:	687b      	ldr	r3, [r7, #4]
 8013116:	681b      	ldr	r3, [r3, #0]
 8013118:	695b      	ldr	r3, [r3, #20]
 801311a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801311e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013122:	d11b      	bne.n	801315c <I2C_IsAcknowledgeFailed+0x50>
 8013124:	687b      	ldr	r3, [r7, #4]
 8013126:	681b      	ldr	r3, [r3, #0]
 8013128:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 801312c:	615a      	str	r2, [r3, #20]
 801312e:	687b      	ldr	r3, [r7, #4]
 8013130:	2200      	movs	r2, #0
 8013132:	631a      	str	r2, [r3, #48]	; 0x30
 8013134:	687b      	ldr	r3, [r7, #4]
 8013136:	2220      	movs	r2, #32
 8013138:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801313c:	687b      	ldr	r3, [r7, #4]
 801313e:	2200      	movs	r2, #0
 8013140:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8013144:	687b      	ldr	r3, [r7, #4]
 8013146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013148:	f043 0204 	orr.w	r2, r3, #4
 801314c:	687b      	ldr	r3, [r7, #4]
 801314e:	641a      	str	r2, [r3, #64]	; 0x40
 8013150:	687b      	ldr	r3, [r7, #4]
 8013152:	2200      	movs	r2, #0
 8013154:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8013158:	2301      	movs	r3, #1
 801315a:	e000      	b.n	801315e <I2C_IsAcknowledgeFailed+0x52>
 801315c:	2300      	movs	r3, #0
 801315e:	4618      	mov	r0, r3
 8013160:	370c      	adds	r7, #12
 8013162:	46bd      	mov	sp, r7
 8013164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013168:	4770      	bx	lr

0801316a <HAL_PCD_Init>:
 801316a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801316c:	b08f      	sub	sp, #60	; 0x3c
 801316e:	af0a      	add	r7, sp, #40	; 0x28
 8013170:	6078      	str	r0, [r7, #4]
 8013172:	687b      	ldr	r3, [r7, #4]
 8013174:	2b00      	cmp	r3, #0
 8013176:	d101      	bne.n	801317c <HAL_PCD_Init+0x12>
 8013178:	2301      	movs	r3, #1
 801317a:	e10f      	b.n	801339c <HAL_PCD_Init+0x232>
 801317c:	687b      	ldr	r3, [r7, #4]
 801317e:	681b      	ldr	r3, [r3, #0]
 8013180:	60bb      	str	r3, [r7, #8]
 8013182:	687b      	ldr	r3, [r7, #4]
 8013184:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 8013188:	b2db      	uxtb	r3, r3
 801318a:	2b00      	cmp	r3, #0
 801318c:	d106      	bne.n	801319c <HAL_PCD_Init+0x32>
 801318e:	687b      	ldr	r3, [r7, #4]
 8013190:	2200      	movs	r2, #0
 8013192:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013196:	6878      	ldr	r0, [r7, #4]
 8013198:	f00b fe50 	bl	801ee3c <HAL_PCD_MspInit>
 801319c:	687b      	ldr	r3, [r7, #4]
 801319e:	2203      	movs	r2, #3
 80131a0:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80131a4:	68bb      	ldr	r3, [r7, #8]
 80131a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80131a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80131ac:	2b00      	cmp	r3, #0
 80131ae:	d102      	bne.n	80131b6 <HAL_PCD_Init+0x4c>
 80131b0:	687b      	ldr	r3, [r7, #4]
 80131b2:	2200      	movs	r2, #0
 80131b4:	611a      	str	r2, [r3, #16]
 80131b6:	687b      	ldr	r3, [r7, #4]
 80131b8:	681b      	ldr	r3, [r3, #0]
 80131ba:	4618      	mov	r0, r3
 80131bc:	f004 ff55 	bl	801806a <USB_DisableGlobalInt>
 80131c0:	687b      	ldr	r3, [r7, #4]
 80131c2:	681b      	ldr	r3, [r3, #0]
 80131c4:	603b      	str	r3, [r7, #0]
 80131c6:	687e      	ldr	r6, [r7, #4]
 80131c8:	466d      	mov	r5, sp
 80131ca:	f106 0410 	add.w	r4, r6, #16
 80131ce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80131d0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80131d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80131d4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80131d6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80131da:	e885 0003 	stmia.w	r5, {r0, r1}
 80131de:	1d33      	adds	r3, r6, #4
 80131e0:	cb0e      	ldmia	r3, {r1, r2, r3}
 80131e2:	6838      	ldr	r0, [r7, #0]
 80131e4:	f004 fe2c 	bl	8017e40 <USB_CoreInit>
 80131e8:	4603      	mov	r3, r0
 80131ea:	2b00      	cmp	r3, #0
 80131ec:	d005      	beq.n	80131fa <HAL_PCD_Init+0x90>
 80131ee:	687b      	ldr	r3, [r7, #4]
 80131f0:	2202      	movs	r2, #2
 80131f2:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80131f6:	2301      	movs	r3, #1
 80131f8:	e0d0      	b.n	801339c <HAL_PCD_Init+0x232>
 80131fa:	687b      	ldr	r3, [r7, #4]
 80131fc:	681b      	ldr	r3, [r3, #0]
 80131fe:	2100      	movs	r1, #0
 8013200:	4618      	mov	r0, r3
 8013202:	f004 ff43 	bl	801808c <USB_SetCurrentMode>
 8013206:	2300      	movs	r3, #0
 8013208:	73fb      	strb	r3, [r7, #15]
 801320a:	e04a      	b.n	80132a2 <HAL_PCD_Init+0x138>
 801320c:	7bfa      	ldrb	r2, [r7, #15]
 801320e:	6879      	ldr	r1, [r7, #4]
 8013210:	4613      	mov	r3, r2
 8013212:	00db      	lsls	r3, r3, #3
 8013214:	4413      	add	r3, r2
 8013216:	009b      	lsls	r3, r3, #2
 8013218:	440b      	add	r3, r1
 801321a:	333d      	adds	r3, #61	; 0x3d
 801321c:	2201      	movs	r2, #1
 801321e:	701a      	strb	r2, [r3, #0]
 8013220:	7bfa      	ldrb	r2, [r7, #15]
 8013222:	6879      	ldr	r1, [r7, #4]
 8013224:	4613      	mov	r3, r2
 8013226:	00db      	lsls	r3, r3, #3
 8013228:	4413      	add	r3, r2
 801322a:	009b      	lsls	r3, r3, #2
 801322c:	440b      	add	r3, r1
 801322e:	333c      	adds	r3, #60	; 0x3c
 8013230:	7bfa      	ldrb	r2, [r7, #15]
 8013232:	701a      	strb	r2, [r3, #0]
 8013234:	7bfa      	ldrb	r2, [r7, #15]
 8013236:	7bfb      	ldrb	r3, [r7, #15]
 8013238:	b298      	uxth	r0, r3
 801323a:	6879      	ldr	r1, [r7, #4]
 801323c:	4613      	mov	r3, r2
 801323e:	00db      	lsls	r3, r3, #3
 8013240:	4413      	add	r3, r2
 8013242:	009b      	lsls	r3, r3, #2
 8013244:	440b      	add	r3, r1
 8013246:	3344      	adds	r3, #68	; 0x44
 8013248:	4602      	mov	r2, r0
 801324a:	801a      	strh	r2, [r3, #0]
 801324c:	7bfa      	ldrb	r2, [r7, #15]
 801324e:	6879      	ldr	r1, [r7, #4]
 8013250:	4613      	mov	r3, r2
 8013252:	00db      	lsls	r3, r3, #3
 8013254:	4413      	add	r3, r2
 8013256:	009b      	lsls	r3, r3, #2
 8013258:	440b      	add	r3, r1
 801325a:	3340      	adds	r3, #64	; 0x40
 801325c:	2200      	movs	r2, #0
 801325e:	701a      	strb	r2, [r3, #0]
 8013260:	7bfa      	ldrb	r2, [r7, #15]
 8013262:	6879      	ldr	r1, [r7, #4]
 8013264:	4613      	mov	r3, r2
 8013266:	00db      	lsls	r3, r3, #3
 8013268:	4413      	add	r3, r2
 801326a:	009b      	lsls	r3, r3, #2
 801326c:	440b      	add	r3, r1
 801326e:	3348      	adds	r3, #72	; 0x48
 8013270:	2200      	movs	r2, #0
 8013272:	601a      	str	r2, [r3, #0]
 8013274:	7bfa      	ldrb	r2, [r7, #15]
 8013276:	6879      	ldr	r1, [r7, #4]
 8013278:	4613      	mov	r3, r2
 801327a:	00db      	lsls	r3, r3, #3
 801327c:	4413      	add	r3, r2
 801327e:	009b      	lsls	r3, r3, #2
 8013280:	440b      	add	r3, r1
 8013282:	334c      	adds	r3, #76	; 0x4c
 8013284:	2200      	movs	r2, #0
 8013286:	601a      	str	r2, [r3, #0]
 8013288:	7bfa      	ldrb	r2, [r7, #15]
 801328a:	6879      	ldr	r1, [r7, #4]
 801328c:	4613      	mov	r3, r2
 801328e:	00db      	lsls	r3, r3, #3
 8013290:	4413      	add	r3, r2
 8013292:	009b      	lsls	r3, r3, #2
 8013294:	440b      	add	r3, r1
 8013296:	3354      	adds	r3, #84	; 0x54
 8013298:	2200      	movs	r2, #0
 801329a:	601a      	str	r2, [r3, #0]
 801329c:	7bfb      	ldrb	r3, [r7, #15]
 801329e:	3301      	adds	r3, #1
 80132a0:	73fb      	strb	r3, [r7, #15]
 80132a2:	7bfa      	ldrb	r2, [r7, #15]
 80132a4:	687b      	ldr	r3, [r7, #4]
 80132a6:	685b      	ldr	r3, [r3, #4]
 80132a8:	429a      	cmp	r2, r3
 80132aa:	d3af      	bcc.n	801320c <HAL_PCD_Init+0xa2>
 80132ac:	2300      	movs	r3, #0
 80132ae:	73fb      	strb	r3, [r7, #15]
 80132b0:	e044      	b.n	801333c <HAL_PCD_Init+0x1d2>
 80132b2:	7bfa      	ldrb	r2, [r7, #15]
 80132b4:	6879      	ldr	r1, [r7, #4]
 80132b6:	4613      	mov	r3, r2
 80132b8:	00db      	lsls	r3, r3, #3
 80132ba:	4413      	add	r3, r2
 80132bc:	009b      	lsls	r3, r3, #2
 80132be:	440b      	add	r3, r1
 80132c0:	f203 237d 	addw	r3, r3, #637	; 0x27d
 80132c4:	2200      	movs	r2, #0
 80132c6:	701a      	strb	r2, [r3, #0]
 80132c8:	7bfa      	ldrb	r2, [r7, #15]
 80132ca:	6879      	ldr	r1, [r7, #4]
 80132cc:	4613      	mov	r3, r2
 80132ce:	00db      	lsls	r3, r3, #3
 80132d0:	4413      	add	r3, r2
 80132d2:	009b      	lsls	r3, r3, #2
 80132d4:	440b      	add	r3, r1
 80132d6:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 80132da:	7bfa      	ldrb	r2, [r7, #15]
 80132dc:	701a      	strb	r2, [r3, #0]
 80132de:	7bfa      	ldrb	r2, [r7, #15]
 80132e0:	6879      	ldr	r1, [r7, #4]
 80132e2:	4613      	mov	r3, r2
 80132e4:	00db      	lsls	r3, r3, #3
 80132e6:	4413      	add	r3, r2
 80132e8:	009b      	lsls	r3, r3, #2
 80132ea:	440b      	add	r3, r1
 80132ec:	f503 7320 	add.w	r3, r3, #640	; 0x280
 80132f0:	2200      	movs	r2, #0
 80132f2:	701a      	strb	r2, [r3, #0]
 80132f4:	7bfa      	ldrb	r2, [r7, #15]
 80132f6:	6879      	ldr	r1, [r7, #4]
 80132f8:	4613      	mov	r3, r2
 80132fa:	00db      	lsls	r3, r3, #3
 80132fc:	4413      	add	r3, r2
 80132fe:	009b      	lsls	r3, r3, #2
 8013300:	440b      	add	r3, r1
 8013302:	f503 7322 	add.w	r3, r3, #648	; 0x288
 8013306:	2200      	movs	r2, #0
 8013308:	601a      	str	r2, [r3, #0]
 801330a:	7bfa      	ldrb	r2, [r7, #15]
 801330c:	6879      	ldr	r1, [r7, #4]
 801330e:	4613      	mov	r3, r2
 8013310:	00db      	lsls	r3, r3, #3
 8013312:	4413      	add	r3, r2
 8013314:	009b      	lsls	r3, r3, #2
 8013316:	440b      	add	r3, r1
 8013318:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 801331c:	2200      	movs	r2, #0
 801331e:	601a      	str	r2, [r3, #0]
 8013320:	7bfa      	ldrb	r2, [r7, #15]
 8013322:	6879      	ldr	r1, [r7, #4]
 8013324:	4613      	mov	r3, r2
 8013326:	00db      	lsls	r3, r3, #3
 8013328:	4413      	add	r3, r2
 801332a:	009b      	lsls	r3, r3, #2
 801332c:	440b      	add	r3, r1
 801332e:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8013332:	2200      	movs	r2, #0
 8013334:	601a      	str	r2, [r3, #0]
 8013336:	7bfb      	ldrb	r3, [r7, #15]
 8013338:	3301      	adds	r3, #1
 801333a:	73fb      	strb	r3, [r7, #15]
 801333c:	7bfa      	ldrb	r2, [r7, #15]
 801333e:	687b      	ldr	r3, [r7, #4]
 8013340:	685b      	ldr	r3, [r3, #4]
 8013342:	429a      	cmp	r2, r3
 8013344:	d3b5      	bcc.n	80132b2 <HAL_PCD_Init+0x148>
 8013346:	687b      	ldr	r3, [r7, #4]
 8013348:	681b      	ldr	r3, [r3, #0]
 801334a:	603b      	str	r3, [r7, #0]
 801334c:	687e      	ldr	r6, [r7, #4]
 801334e:	466d      	mov	r5, sp
 8013350:	f106 0410 	add.w	r4, r6, #16
 8013354:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013356:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8013358:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801335a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801335c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8013360:	e885 0003 	stmia.w	r5, {r0, r1}
 8013364:	1d33      	adds	r3, r6, #4
 8013366:	cb0e      	ldmia	r3, {r1, r2, r3}
 8013368:	6838      	ldr	r0, [r7, #0]
 801336a:	f004 fedb 	bl	8018124 <USB_DevInit>
 801336e:	4603      	mov	r3, r0
 8013370:	2b00      	cmp	r3, #0
 8013372:	d005      	beq.n	8013380 <HAL_PCD_Init+0x216>
 8013374:	687b      	ldr	r3, [r7, #4]
 8013376:	2202      	movs	r2, #2
 8013378:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 801337c:	2301      	movs	r3, #1
 801337e:	e00d      	b.n	801339c <HAL_PCD_Init+0x232>
 8013380:	687b      	ldr	r3, [r7, #4]
 8013382:	2200      	movs	r2, #0
 8013384:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8013388:	687b      	ldr	r3, [r7, #4]
 801338a:	2201      	movs	r2, #1
 801338c:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 8013390:	687b      	ldr	r3, [r7, #4]
 8013392:	681b      	ldr	r3, [r3, #0]
 8013394:	4618      	mov	r0, r3
 8013396:	f006 f82a 	bl	80193ee <USB_DevDisconnect>
 801339a:	2300      	movs	r3, #0
 801339c:	4618      	mov	r0, r3
 801339e:	3714      	adds	r7, #20
 80133a0:	46bd      	mov	sp, r7
 80133a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080133a4 <HAL_PCD_Start>:
 80133a4:	b580      	push	{r7, lr}
 80133a6:	b084      	sub	sp, #16
 80133a8:	af00      	add	r7, sp, #0
 80133aa:	6078      	str	r0, [r7, #4]
 80133ac:	687b      	ldr	r3, [r7, #4]
 80133ae:	681b      	ldr	r3, [r3, #0]
 80133b0:	60fb      	str	r3, [r7, #12]
 80133b2:	687b      	ldr	r3, [r7, #4]
 80133b4:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 80133b8:	2b01      	cmp	r3, #1
 80133ba:	d101      	bne.n	80133c0 <HAL_PCD_Start+0x1c>
 80133bc:	2302      	movs	r3, #2
 80133be:	e020      	b.n	8013402 <HAL_PCD_Start+0x5e>
 80133c0:	687b      	ldr	r3, [r7, #4]
 80133c2:	2201      	movs	r2, #1
 80133c4:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80133c8:	687b      	ldr	r3, [r7, #4]
 80133ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80133cc:	2b01      	cmp	r3, #1
 80133ce:	d109      	bne.n	80133e4 <HAL_PCD_Start+0x40>
 80133d0:	687b      	ldr	r3, [r7, #4]
 80133d2:	699b      	ldr	r3, [r3, #24]
 80133d4:	2b01      	cmp	r3, #1
 80133d6:	d005      	beq.n	80133e4 <HAL_PCD_Start+0x40>
 80133d8:	68fb      	ldr	r3, [r7, #12]
 80133da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80133dc:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80133e0:	68fb      	ldr	r3, [r7, #12]
 80133e2:	639a      	str	r2, [r3, #56]	; 0x38
 80133e4:	687b      	ldr	r3, [r7, #4]
 80133e6:	681b      	ldr	r3, [r3, #0]
 80133e8:	4618      	mov	r0, r3
 80133ea:	f004 fe2d 	bl	8018048 <USB_EnableGlobalInt>
 80133ee:	687b      	ldr	r3, [r7, #4]
 80133f0:	681b      	ldr	r3, [r3, #0]
 80133f2:	4618      	mov	r0, r3
 80133f4:	f005 ffda 	bl	80193ac <USB_DevConnect>
 80133f8:	687b      	ldr	r3, [r7, #4]
 80133fa:	2200      	movs	r2, #0
 80133fc:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013400:	2300      	movs	r3, #0
 8013402:	4618      	mov	r0, r3
 8013404:	3710      	adds	r7, #16
 8013406:	46bd      	mov	sp, r7
 8013408:	bd80      	pop	{r7, pc}

0801340a <HAL_PCD_IRQHandler>:
 801340a:	b590      	push	{r4, r7, lr}
 801340c:	b08d      	sub	sp, #52	; 0x34
 801340e:	af00      	add	r7, sp, #0
 8013410:	6078      	str	r0, [r7, #4]
 8013412:	687b      	ldr	r3, [r7, #4]
 8013414:	681b      	ldr	r3, [r3, #0]
 8013416:	623b      	str	r3, [r7, #32]
 8013418:	6a3b      	ldr	r3, [r7, #32]
 801341a:	61fb      	str	r3, [r7, #28]
 801341c:	687b      	ldr	r3, [r7, #4]
 801341e:	681b      	ldr	r3, [r3, #0]
 8013420:	4618      	mov	r0, r3
 8013422:	f006 f898 	bl	8019556 <USB_GetMode>
 8013426:	4603      	mov	r3, r0
 8013428:	2b00      	cmp	r3, #0
 801342a:	f040 848a 	bne.w	8013d42 <HAL_PCD_IRQHandler+0x938>
 801342e:	687b      	ldr	r3, [r7, #4]
 8013430:	681b      	ldr	r3, [r3, #0]
 8013432:	4618      	mov	r0, r3
 8013434:	f005 fffc 	bl	8019430 <USB_ReadInterrupts>
 8013438:	4603      	mov	r3, r0
 801343a:	2b00      	cmp	r3, #0
 801343c:	f000 8480 	beq.w	8013d40 <HAL_PCD_IRQHandler+0x936>
 8013440:	69fb      	ldr	r3, [r7, #28]
 8013442:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013446:	689b      	ldr	r3, [r3, #8]
 8013448:	0a1b      	lsrs	r3, r3, #8
 801344a:	f3c3 020d 	ubfx	r2, r3, #0, #14
 801344e:	687b      	ldr	r3, [r7, #4]
 8013450:	f8c3 24fc 	str.w	r2, [r3, #1276]	; 0x4fc
 8013454:	687b      	ldr	r3, [r7, #4]
 8013456:	681b      	ldr	r3, [r3, #0]
 8013458:	4618      	mov	r0, r3
 801345a:	f005 ffe9 	bl	8019430 <USB_ReadInterrupts>
 801345e:	4603      	mov	r3, r0
 8013460:	f003 0302 	and.w	r3, r3, #2
 8013464:	2b02      	cmp	r3, #2
 8013466:	d107      	bne.n	8013478 <HAL_PCD_IRQHandler+0x6e>
 8013468:	687b      	ldr	r3, [r7, #4]
 801346a:	681b      	ldr	r3, [r3, #0]
 801346c:	695a      	ldr	r2, [r3, #20]
 801346e:	687b      	ldr	r3, [r7, #4]
 8013470:	681b      	ldr	r3, [r3, #0]
 8013472:	f002 0202 	and.w	r2, r2, #2
 8013476:	615a      	str	r2, [r3, #20]
 8013478:	687b      	ldr	r3, [r7, #4]
 801347a:	681b      	ldr	r3, [r3, #0]
 801347c:	4618      	mov	r0, r3
 801347e:	f005 ffd7 	bl	8019430 <USB_ReadInterrupts>
 8013482:	4603      	mov	r3, r0
 8013484:	f003 0310 	and.w	r3, r3, #16
 8013488:	2b10      	cmp	r3, #16
 801348a:	d161      	bne.n	8013550 <HAL_PCD_IRQHandler+0x146>
 801348c:	687b      	ldr	r3, [r7, #4]
 801348e:	681b      	ldr	r3, [r3, #0]
 8013490:	699a      	ldr	r2, [r3, #24]
 8013492:	687b      	ldr	r3, [r7, #4]
 8013494:	681b      	ldr	r3, [r3, #0]
 8013496:	f022 0210 	bic.w	r2, r2, #16
 801349a:	619a      	str	r2, [r3, #24]
 801349c:	6a3b      	ldr	r3, [r7, #32]
 801349e:	6a1b      	ldr	r3, [r3, #32]
 80134a0:	61bb      	str	r3, [r7, #24]
 80134a2:	69bb      	ldr	r3, [r7, #24]
 80134a4:	f003 020f 	and.w	r2, r3, #15
 80134a8:	4613      	mov	r3, r2
 80134aa:	00db      	lsls	r3, r3, #3
 80134ac:	4413      	add	r3, r2
 80134ae:	009b      	lsls	r3, r3, #2
 80134b0:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80134b4:	687a      	ldr	r2, [r7, #4]
 80134b6:	4413      	add	r3, r2
 80134b8:	3304      	adds	r3, #4
 80134ba:	617b      	str	r3, [r7, #20]
 80134bc:	69bb      	ldr	r3, [r7, #24]
 80134be:	0c5b      	lsrs	r3, r3, #17
 80134c0:	f003 030f 	and.w	r3, r3, #15
 80134c4:	2b02      	cmp	r3, #2
 80134c6:	d124      	bne.n	8013512 <HAL_PCD_IRQHandler+0x108>
 80134c8:	69ba      	ldr	r2, [r7, #24]
 80134ca:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 80134ce:	4013      	ands	r3, r2
 80134d0:	2b00      	cmp	r3, #0
 80134d2:	d035      	beq.n	8013540 <HAL_PCD_IRQHandler+0x136>
 80134d4:	697b      	ldr	r3, [r7, #20]
 80134d6:	6919      	ldr	r1, [r3, #16]
 80134d8:	69bb      	ldr	r3, [r7, #24]
 80134da:	091b      	lsrs	r3, r3, #4
 80134dc:	b29b      	uxth	r3, r3
 80134de:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80134e2:	b29b      	uxth	r3, r3
 80134e4:	461a      	mov	r2, r3
 80134e6:	6a38      	ldr	r0, [r7, #32]
 80134e8:	f005 fe0e 	bl	8019108 <USB_ReadPacket>
 80134ec:	697b      	ldr	r3, [r7, #20]
 80134ee:	691a      	ldr	r2, [r3, #16]
 80134f0:	69bb      	ldr	r3, [r7, #24]
 80134f2:	091b      	lsrs	r3, r3, #4
 80134f4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80134f8:	441a      	add	r2, r3
 80134fa:	697b      	ldr	r3, [r7, #20]
 80134fc:	611a      	str	r2, [r3, #16]
 80134fe:	697b      	ldr	r3, [r7, #20]
 8013500:	6a1a      	ldr	r2, [r3, #32]
 8013502:	69bb      	ldr	r3, [r7, #24]
 8013504:	091b      	lsrs	r3, r3, #4
 8013506:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801350a:	441a      	add	r2, r3
 801350c:	697b      	ldr	r3, [r7, #20]
 801350e:	621a      	str	r2, [r3, #32]
 8013510:	e016      	b.n	8013540 <HAL_PCD_IRQHandler+0x136>
 8013512:	69bb      	ldr	r3, [r7, #24]
 8013514:	0c5b      	lsrs	r3, r3, #17
 8013516:	f003 030f 	and.w	r3, r3, #15
 801351a:	2b06      	cmp	r3, #6
 801351c:	d110      	bne.n	8013540 <HAL_PCD_IRQHandler+0x136>
 801351e:	687b      	ldr	r3, [r7, #4]
 8013520:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8013524:	2208      	movs	r2, #8
 8013526:	4619      	mov	r1, r3
 8013528:	6a38      	ldr	r0, [r7, #32]
 801352a:	f005 fded 	bl	8019108 <USB_ReadPacket>
 801352e:	697b      	ldr	r3, [r7, #20]
 8013530:	6a1a      	ldr	r2, [r3, #32]
 8013532:	69bb      	ldr	r3, [r7, #24]
 8013534:	091b      	lsrs	r3, r3, #4
 8013536:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801353a:	441a      	add	r2, r3
 801353c:	697b      	ldr	r3, [r7, #20]
 801353e:	621a      	str	r2, [r3, #32]
 8013540:	687b      	ldr	r3, [r7, #4]
 8013542:	681b      	ldr	r3, [r3, #0]
 8013544:	699a      	ldr	r2, [r3, #24]
 8013546:	687b      	ldr	r3, [r7, #4]
 8013548:	681b      	ldr	r3, [r3, #0]
 801354a:	f042 0210 	orr.w	r2, r2, #16
 801354e:	619a      	str	r2, [r3, #24]
 8013550:	687b      	ldr	r3, [r7, #4]
 8013552:	681b      	ldr	r3, [r3, #0]
 8013554:	4618      	mov	r0, r3
 8013556:	f005 ff6b 	bl	8019430 <USB_ReadInterrupts>
 801355a:	4603      	mov	r3, r0
 801355c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8013560:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8013564:	f040 80a7 	bne.w	80136b6 <HAL_PCD_IRQHandler+0x2ac>
 8013568:	2300      	movs	r3, #0
 801356a:	627b      	str	r3, [r7, #36]	; 0x24
 801356c:	687b      	ldr	r3, [r7, #4]
 801356e:	681b      	ldr	r3, [r3, #0]
 8013570:	4618      	mov	r0, r3
 8013572:	f005 ff70 	bl	8019456 <USB_ReadDevAllOutEpInterrupt>
 8013576:	62b8      	str	r0, [r7, #40]	; 0x28
 8013578:	e099      	b.n	80136ae <HAL_PCD_IRQHandler+0x2a4>
 801357a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801357c:	f003 0301 	and.w	r3, r3, #1
 8013580:	2b00      	cmp	r3, #0
 8013582:	f000 808e 	beq.w	80136a2 <HAL_PCD_IRQHandler+0x298>
 8013586:	687b      	ldr	r3, [r7, #4]
 8013588:	681b      	ldr	r3, [r3, #0]
 801358a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801358c:	b2d2      	uxtb	r2, r2
 801358e:	4611      	mov	r1, r2
 8013590:	4618      	mov	r0, r3
 8013592:	f005 ff94 	bl	80194be <USB_ReadDevOutEPInterrupt>
 8013596:	6138      	str	r0, [r7, #16]
 8013598:	693b      	ldr	r3, [r7, #16]
 801359a:	f003 0301 	and.w	r3, r3, #1
 801359e:	2b00      	cmp	r3, #0
 80135a0:	d00c      	beq.n	80135bc <HAL_PCD_IRQHandler+0x1b2>
 80135a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80135a4:	015a      	lsls	r2, r3, #5
 80135a6:	69fb      	ldr	r3, [r7, #28]
 80135a8:	4413      	add	r3, r2
 80135aa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80135ae:	461a      	mov	r2, r3
 80135b0:	2301      	movs	r3, #1
 80135b2:	6093      	str	r3, [r2, #8]
 80135b4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80135b6:	6878      	ldr	r0, [r7, #4]
 80135b8:	f000 fec2 	bl	8014340 <PCD_EP_OutXfrComplete_int>
 80135bc:	693b      	ldr	r3, [r7, #16]
 80135be:	f003 0308 	and.w	r3, r3, #8
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	d00c      	beq.n	80135e0 <HAL_PCD_IRQHandler+0x1d6>
 80135c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80135c8:	015a      	lsls	r2, r3, #5
 80135ca:	69fb      	ldr	r3, [r7, #28]
 80135cc:	4413      	add	r3, r2
 80135ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80135d2:	461a      	mov	r2, r3
 80135d4:	2308      	movs	r3, #8
 80135d6:	6093      	str	r3, [r2, #8]
 80135d8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80135da:	6878      	ldr	r0, [r7, #4]
 80135dc:	f000 ff98 	bl	8014510 <PCD_EP_OutSetupPacket_int>
 80135e0:	693b      	ldr	r3, [r7, #16]
 80135e2:	f003 0310 	and.w	r3, r3, #16
 80135e6:	2b00      	cmp	r3, #0
 80135e8:	d008      	beq.n	80135fc <HAL_PCD_IRQHandler+0x1f2>
 80135ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80135ec:	015a      	lsls	r2, r3, #5
 80135ee:	69fb      	ldr	r3, [r7, #28]
 80135f0:	4413      	add	r3, r2
 80135f2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80135f6:	461a      	mov	r2, r3
 80135f8:	2310      	movs	r3, #16
 80135fa:	6093      	str	r3, [r2, #8]
 80135fc:	693b      	ldr	r3, [r7, #16]
 80135fe:	f003 0302 	and.w	r3, r3, #2
 8013602:	2b00      	cmp	r3, #0
 8013604:	d030      	beq.n	8013668 <HAL_PCD_IRQHandler+0x25e>
 8013606:	6a3b      	ldr	r3, [r7, #32]
 8013608:	695b      	ldr	r3, [r3, #20]
 801360a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801360e:	2b80      	cmp	r3, #128	; 0x80
 8013610:	d109      	bne.n	8013626 <HAL_PCD_IRQHandler+0x21c>
 8013612:	69fb      	ldr	r3, [r7, #28]
 8013614:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013618:	685b      	ldr	r3, [r3, #4]
 801361a:	69fa      	ldr	r2, [r7, #28]
 801361c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013620:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8013624:	6053      	str	r3, [r2, #4]
 8013626:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013628:	4613      	mov	r3, r2
 801362a:	00db      	lsls	r3, r3, #3
 801362c:	4413      	add	r3, r2
 801362e:	009b      	lsls	r3, r3, #2
 8013630:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013634:	687a      	ldr	r2, [r7, #4]
 8013636:	4413      	add	r3, r2
 8013638:	3304      	adds	r3, #4
 801363a:	617b      	str	r3, [r7, #20]
 801363c:	697b      	ldr	r3, [r7, #20]
 801363e:	78db      	ldrb	r3, [r3, #3]
 8013640:	2b01      	cmp	r3, #1
 8013642:	d108      	bne.n	8013656 <HAL_PCD_IRQHandler+0x24c>
 8013644:	697b      	ldr	r3, [r7, #20]
 8013646:	2200      	movs	r2, #0
 8013648:	70da      	strb	r2, [r3, #3]
 801364a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801364c:	b2db      	uxtb	r3, r3
 801364e:	4619      	mov	r1, r3
 8013650:	6878      	ldr	r0, [r7, #4]
 8013652:	f00b fd05 	bl	801f060 <HAL_PCD_ISOOUTIncompleteCallback>
 8013656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013658:	015a      	lsls	r2, r3, #5
 801365a:	69fb      	ldr	r3, [r7, #28]
 801365c:	4413      	add	r3, r2
 801365e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013662:	461a      	mov	r2, r3
 8013664:	2302      	movs	r3, #2
 8013666:	6093      	str	r3, [r2, #8]
 8013668:	693b      	ldr	r3, [r7, #16]
 801366a:	f003 0320 	and.w	r3, r3, #32
 801366e:	2b00      	cmp	r3, #0
 8013670:	d008      	beq.n	8013684 <HAL_PCD_IRQHandler+0x27a>
 8013672:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013674:	015a      	lsls	r2, r3, #5
 8013676:	69fb      	ldr	r3, [r7, #28]
 8013678:	4413      	add	r3, r2
 801367a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801367e:	461a      	mov	r2, r3
 8013680:	2320      	movs	r3, #32
 8013682:	6093      	str	r3, [r2, #8]
 8013684:	693b      	ldr	r3, [r7, #16]
 8013686:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 801368a:	2b00      	cmp	r3, #0
 801368c:	d009      	beq.n	80136a2 <HAL_PCD_IRQHandler+0x298>
 801368e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013690:	015a      	lsls	r2, r3, #5
 8013692:	69fb      	ldr	r3, [r7, #28]
 8013694:	4413      	add	r3, r2
 8013696:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801369a:	461a      	mov	r2, r3
 801369c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80136a0:	6093      	str	r3, [r2, #8]
 80136a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80136a4:	3301      	adds	r3, #1
 80136a6:	627b      	str	r3, [r7, #36]	; 0x24
 80136a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80136aa:	085b      	lsrs	r3, r3, #1
 80136ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80136ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80136b0:	2b00      	cmp	r3, #0
 80136b2:	f47f af62 	bne.w	801357a <HAL_PCD_IRQHandler+0x170>
 80136b6:	687b      	ldr	r3, [r7, #4]
 80136b8:	681b      	ldr	r3, [r3, #0]
 80136ba:	4618      	mov	r0, r3
 80136bc:	f005 feb8 	bl	8019430 <USB_ReadInterrupts>
 80136c0:	4603      	mov	r3, r0
 80136c2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80136c6:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80136ca:	f040 80db 	bne.w	8013884 <HAL_PCD_IRQHandler+0x47a>
 80136ce:	687b      	ldr	r3, [r7, #4]
 80136d0:	681b      	ldr	r3, [r3, #0]
 80136d2:	4618      	mov	r0, r3
 80136d4:	f005 fed9 	bl	801948a <USB_ReadDevAllInEpInterrupt>
 80136d8:	62b8      	str	r0, [r7, #40]	; 0x28
 80136da:	2300      	movs	r3, #0
 80136dc:	627b      	str	r3, [r7, #36]	; 0x24
 80136de:	e0cd      	b.n	801387c <HAL_PCD_IRQHandler+0x472>
 80136e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80136e2:	f003 0301 	and.w	r3, r3, #1
 80136e6:	2b00      	cmp	r3, #0
 80136e8:	f000 80c2 	beq.w	8013870 <HAL_PCD_IRQHandler+0x466>
 80136ec:	687b      	ldr	r3, [r7, #4]
 80136ee:	681b      	ldr	r3, [r3, #0]
 80136f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80136f2:	b2d2      	uxtb	r2, r2
 80136f4:	4611      	mov	r1, r2
 80136f6:	4618      	mov	r0, r3
 80136f8:	f005 feff 	bl	80194fa <USB_ReadDevInEPInterrupt>
 80136fc:	6138      	str	r0, [r7, #16]
 80136fe:	693b      	ldr	r3, [r7, #16]
 8013700:	f003 0301 	and.w	r3, r3, #1
 8013704:	2b00      	cmp	r3, #0
 8013706:	d057      	beq.n	80137b8 <HAL_PCD_IRQHandler+0x3ae>
 8013708:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801370a:	f003 030f 	and.w	r3, r3, #15
 801370e:	2201      	movs	r2, #1
 8013710:	fa02 f303 	lsl.w	r3, r2, r3
 8013714:	60fb      	str	r3, [r7, #12]
 8013716:	69fb      	ldr	r3, [r7, #28]
 8013718:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801371c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 801371e:	68fb      	ldr	r3, [r7, #12]
 8013720:	43db      	mvns	r3, r3
 8013722:	69f9      	ldr	r1, [r7, #28]
 8013724:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8013728:	4013      	ands	r3, r2
 801372a:	634b      	str	r3, [r1, #52]	; 0x34
 801372c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801372e:	015a      	lsls	r2, r3, #5
 8013730:	69fb      	ldr	r3, [r7, #28]
 8013732:	4413      	add	r3, r2
 8013734:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013738:	461a      	mov	r2, r3
 801373a:	2301      	movs	r3, #1
 801373c:	6093      	str	r3, [r2, #8]
 801373e:	687b      	ldr	r3, [r7, #4]
 8013740:	691b      	ldr	r3, [r3, #16]
 8013742:	2b01      	cmp	r3, #1
 8013744:	d132      	bne.n	80137ac <HAL_PCD_IRQHandler+0x3a2>
 8013746:	6879      	ldr	r1, [r7, #4]
 8013748:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801374a:	4613      	mov	r3, r2
 801374c:	00db      	lsls	r3, r3, #3
 801374e:	4413      	add	r3, r2
 8013750:	009b      	lsls	r3, r3, #2
 8013752:	440b      	add	r3, r1
 8013754:	334c      	adds	r3, #76	; 0x4c
 8013756:	6819      	ldr	r1, [r3, #0]
 8013758:	6878      	ldr	r0, [r7, #4]
 801375a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801375c:	4613      	mov	r3, r2
 801375e:	00db      	lsls	r3, r3, #3
 8013760:	4413      	add	r3, r2
 8013762:	009b      	lsls	r3, r3, #2
 8013764:	4403      	add	r3, r0
 8013766:	3348      	adds	r3, #72	; 0x48
 8013768:	681b      	ldr	r3, [r3, #0]
 801376a:	4419      	add	r1, r3
 801376c:	6878      	ldr	r0, [r7, #4]
 801376e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013770:	4613      	mov	r3, r2
 8013772:	00db      	lsls	r3, r3, #3
 8013774:	4413      	add	r3, r2
 8013776:	009b      	lsls	r3, r3, #2
 8013778:	4403      	add	r3, r0
 801377a:	334c      	adds	r3, #76	; 0x4c
 801377c:	6019      	str	r1, [r3, #0]
 801377e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013780:	2b00      	cmp	r3, #0
 8013782:	d113      	bne.n	80137ac <HAL_PCD_IRQHandler+0x3a2>
 8013784:	6879      	ldr	r1, [r7, #4]
 8013786:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013788:	4613      	mov	r3, r2
 801378a:	00db      	lsls	r3, r3, #3
 801378c:	4413      	add	r3, r2
 801378e:	009b      	lsls	r3, r3, #2
 8013790:	440b      	add	r3, r1
 8013792:	3354      	adds	r3, #84	; 0x54
 8013794:	681b      	ldr	r3, [r3, #0]
 8013796:	2b00      	cmp	r3, #0
 8013798:	d108      	bne.n	80137ac <HAL_PCD_IRQHandler+0x3a2>
 801379a:	687b      	ldr	r3, [r7, #4]
 801379c:	6818      	ldr	r0, [r3, #0]
 801379e:	687b      	ldr	r3, [r7, #4]
 80137a0:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80137a4:	461a      	mov	r2, r3
 80137a6:	2101      	movs	r1, #1
 80137a8:	f005 ff06 	bl	80195b8 <USB_EP0_OutStart>
 80137ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80137ae:	b2db      	uxtb	r3, r3
 80137b0:	4619      	mov	r1, r3
 80137b2:	6878      	ldr	r0, [r7, #4]
 80137b4:	f00b fbc3 	bl	801ef3e <HAL_PCD_DataInStageCallback>
 80137b8:	693b      	ldr	r3, [r7, #16]
 80137ba:	f003 0308 	and.w	r3, r3, #8
 80137be:	2b00      	cmp	r3, #0
 80137c0:	d008      	beq.n	80137d4 <HAL_PCD_IRQHandler+0x3ca>
 80137c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80137c4:	015a      	lsls	r2, r3, #5
 80137c6:	69fb      	ldr	r3, [r7, #28]
 80137c8:	4413      	add	r3, r2
 80137ca:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80137ce:	461a      	mov	r2, r3
 80137d0:	2308      	movs	r3, #8
 80137d2:	6093      	str	r3, [r2, #8]
 80137d4:	693b      	ldr	r3, [r7, #16]
 80137d6:	f003 0310 	and.w	r3, r3, #16
 80137da:	2b00      	cmp	r3, #0
 80137dc:	d008      	beq.n	80137f0 <HAL_PCD_IRQHandler+0x3e6>
 80137de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80137e0:	015a      	lsls	r2, r3, #5
 80137e2:	69fb      	ldr	r3, [r7, #28]
 80137e4:	4413      	add	r3, r2
 80137e6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80137ea:	461a      	mov	r2, r3
 80137ec:	2310      	movs	r3, #16
 80137ee:	6093      	str	r3, [r2, #8]
 80137f0:	693b      	ldr	r3, [r7, #16]
 80137f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80137f6:	2b00      	cmp	r3, #0
 80137f8:	d008      	beq.n	801380c <HAL_PCD_IRQHandler+0x402>
 80137fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80137fc:	015a      	lsls	r2, r3, #5
 80137fe:	69fb      	ldr	r3, [r7, #28]
 8013800:	4413      	add	r3, r2
 8013802:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013806:	461a      	mov	r2, r3
 8013808:	2340      	movs	r3, #64	; 0x40
 801380a:	6093      	str	r3, [r2, #8]
 801380c:	693b      	ldr	r3, [r7, #16]
 801380e:	f003 0302 	and.w	r3, r3, #2
 8013812:	2b00      	cmp	r3, #0
 8013814:	d023      	beq.n	801385e <HAL_PCD_IRQHandler+0x454>
 8013816:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013818:	6a38      	ldr	r0, [r7, #32]
 801381a:	f004 fde7 	bl	80183ec <USB_FlushTxFifo>
 801381e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013820:	4613      	mov	r3, r2
 8013822:	00db      	lsls	r3, r3, #3
 8013824:	4413      	add	r3, r2
 8013826:	009b      	lsls	r3, r3, #2
 8013828:	3338      	adds	r3, #56	; 0x38
 801382a:	687a      	ldr	r2, [r7, #4]
 801382c:	4413      	add	r3, r2
 801382e:	3304      	adds	r3, #4
 8013830:	617b      	str	r3, [r7, #20]
 8013832:	697b      	ldr	r3, [r7, #20]
 8013834:	78db      	ldrb	r3, [r3, #3]
 8013836:	2b01      	cmp	r3, #1
 8013838:	d108      	bne.n	801384c <HAL_PCD_IRQHandler+0x442>
 801383a:	697b      	ldr	r3, [r7, #20]
 801383c:	2200      	movs	r2, #0
 801383e:	70da      	strb	r2, [r3, #3]
 8013840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013842:	b2db      	uxtb	r3, r3
 8013844:	4619      	mov	r1, r3
 8013846:	6878      	ldr	r0, [r7, #4]
 8013848:	f00b fc1c 	bl	801f084 <HAL_PCD_ISOINIncompleteCallback>
 801384c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801384e:	015a      	lsls	r2, r3, #5
 8013850:	69fb      	ldr	r3, [r7, #28]
 8013852:	4413      	add	r3, r2
 8013854:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013858:	461a      	mov	r2, r3
 801385a:	2302      	movs	r3, #2
 801385c:	6093      	str	r3, [r2, #8]
 801385e:	693b      	ldr	r3, [r7, #16]
 8013860:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013864:	2b00      	cmp	r3, #0
 8013866:	d003      	beq.n	8013870 <HAL_PCD_IRQHandler+0x466>
 8013868:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801386a:	6878      	ldr	r0, [r7, #4]
 801386c:	f000 fcdb 	bl	8014226 <PCD_WriteEmptyTxFifo>
 8013870:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013872:	3301      	adds	r3, #1
 8013874:	627b      	str	r3, [r7, #36]	; 0x24
 8013876:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013878:	085b      	lsrs	r3, r3, #1
 801387a:	62bb      	str	r3, [r7, #40]	; 0x28
 801387c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801387e:	2b00      	cmp	r3, #0
 8013880:	f47f af2e 	bne.w	80136e0 <HAL_PCD_IRQHandler+0x2d6>
 8013884:	687b      	ldr	r3, [r7, #4]
 8013886:	681b      	ldr	r3, [r3, #0]
 8013888:	4618      	mov	r0, r3
 801388a:	f005 fdd1 	bl	8019430 <USB_ReadInterrupts>
 801388e:	4603      	mov	r3, r0
 8013890:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8013894:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8013898:	d122      	bne.n	80138e0 <HAL_PCD_IRQHandler+0x4d6>
 801389a:	69fb      	ldr	r3, [r7, #28]
 801389c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138a0:	685b      	ldr	r3, [r3, #4]
 80138a2:	69fa      	ldr	r2, [r7, #28]
 80138a4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80138a8:	f023 0301 	bic.w	r3, r3, #1
 80138ac:	6053      	str	r3, [r2, #4]
 80138ae:	687b      	ldr	r3, [r7, #4]
 80138b0:	f893 34f4 	ldrb.w	r3, [r3, #1268]	; 0x4f4
 80138b4:	2b01      	cmp	r3, #1
 80138b6:	d108      	bne.n	80138ca <HAL_PCD_IRQHandler+0x4c0>
 80138b8:	687b      	ldr	r3, [r7, #4]
 80138ba:	2200      	movs	r2, #0
 80138bc:	f883 24f4 	strb.w	r2, [r3, #1268]	; 0x4f4
 80138c0:	2100      	movs	r1, #0
 80138c2:	6878      	ldr	r0, [r7, #4]
 80138c4:	f000 fec2 	bl	801464c <HAL_PCDEx_LPM_Callback>
 80138c8:	e002      	b.n	80138d0 <HAL_PCD_IRQHandler+0x4c6>
 80138ca:	6878      	ldr	r0, [r7, #4]
 80138cc:	f00b fbb4 	bl	801f038 <HAL_PCD_ResumeCallback>
 80138d0:	687b      	ldr	r3, [r7, #4]
 80138d2:	681b      	ldr	r3, [r3, #0]
 80138d4:	695a      	ldr	r2, [r3, #20]
 80138d6:	687b      	ldr	r3, [r7, #4]
 80138d8:	681b      	ldr	r3, [r3, #0]
 80138da:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 80138de:	615a      	str	r2, [r3, #20]
 80138e0:	687b      	ldr	r3, [r7, #4]
 80138e2:	681b      	ldr	r3, [r3, #0]
 80138e4:	4618      	mov	r0, r3
 80138e6:	f005 fda3 	bl	8019430 <USB_ReadInterrupts>
 80138ea:	4603      	mov	r3, r0
 80138ec:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80138f0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80138f4:	d112      	bne.n	801391c <HAL_PCD_IRQHandler+0x512>
 80138f6:	69fb      	ldr	r3, [r7, #28]
 80138f8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80138fc:	689b      	ldr	r3, [r3, #8]
 80138fe:	f003 0301 	and.w	r3, r3, #1
 8013902:	2b01      	cmp	r3, #1
 8013904:	d102      	bne.n	801390c <HAL_PCD_IRQHandler+0x502>
 8013906:	6878      	ldr	r0, [r7, #4]
 8013908:	f00b fb6a 	bl	801efe0 <HAL_PCD_SuspendCallback>
 801390c:	687b      	ldr	r3, [r7, #4]
 801390e:	681b      	ldr	r3, [r3, #0]
 8013910:	695a      	ldr	r2, [r3, #20]
 8013912:	687b      	ldr	r3, [r7, #4]
 8013914:	681b      	ldr	r3, [r3, #0]
 8013916:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 801391a:	615a      	str	r2, [r3, #20]
 801391c:	687b      	ldr	r3, [r7, #4]
 801391e:	681b      	ldr	r3, [r3, #0]
 8013920:	4618      	mov	r0, r3
 8013922:	f005 fd85 	bl	8019430 <USB_ReadInterrupts>
 8013926:	4603      	mov	r3, r0
 8013928:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 801392c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8013930:	f040 80b7 	bne.w	8013aa2 <HAL_PCD_IRQHandler+0x698>
 8013934:	69fb      	ldr	r3, [r7, #28]
 8013936:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801393a:	685b      	ldr	r3, [r3, #4]
 801393c:	69fa      	ldr	r2, [r7, #28]
 801393e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013942:	f023 0301 	bic.w	r3, r3, #1
 8013946:	6053      	str	r3, [r2, #4]
 8013948:	687b      	ldr	r3, [r7, #4]
 801394a:	681b      	ldr	r3, [r3, #0]
 801394c:	2110      	movs	r1, #16
 801394e:	4618      	mov	r0, r3
 8013950:	f004 fd4c 	bl	80183ec <USB_FlushTxFifo>
 8013954:	2300      	movs	r3, #0
 8013956:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013958:	e046      	b.n	80139e8 <HAL_PCD_IRQHandler+0x5de>
 801395a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801395c:	015a      	lsls	r2, r3, #5
 801395e:	69fb      	ldr	r3, [r7, #28]
 8013960:	4413      	add	r3, r2
 8013962:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013966:	461a      	mov	r2, r3
 8013968:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 801396c:	6093      	str	r3, [r2, #8]
 801396e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013970:	015a      	lsls	r2, r3, #5
 8013972:	69fb      	ldr	r3, [r7, #28]
 8013974:	4413      	add	r3, r2
 8013976:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801397a:	681b      	ldr	r3, [r3, #0]
 801397c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801397e:	0151      	lsls	r1, r2, #5
 8013980:	69fa      	ldr	r2, [r7, #28]
 8013982:	440a      	add	r2, r1
 8013984:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8013988:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 801398c:	6013      	str	r3, [r2, #0]
 801398e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013990:	015a      	lsls	r2, r3, #5
 8013992:	69fb      	ldr	r3, [r7, #28]
 8013994:	4413      	add	r3, r2
 8013996:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801399a:	461a      	mov	r2, r3
 801399c:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80139a0:	6093      	str	r3, [r2, #8]
 80139a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80139a4:	015a      	lsls	r2, r3, #5
 80139a6:	69fb      	ldr	r3, [r7, #28]
 80139a8:	4413      	add	r3, r2
 80139aa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80139ae:	681b      	ldr	r3, [r3, #0]
 80139b0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80139b2:	0151      	lsls	r1, r2, #5
 80139b4:	69fa      	ldr	r2, [r7, #28]
 80139b6:	440a      	add	r2, r1
 80139b8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80139bc:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80139c0:	6013      	str	r3, [r2, #0]
 80139c2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80139c4:	015a      	lsls	r2, r3, #5
 80139c6:	69fb      	ldr	r3, [r7, #28]
 80139c8:	4413      	add	r3, r2
 80139ca:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80139ce:	681b      	ldr	r3, [r3, #0]
 80139d0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80139d2:	0151      	lsls	r1, r2, #5
 80139d4:	69fa      	ldr	r2, [r7, #28]
 80139d6:	440a      	add	r2, r1
 80139d8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 80139dc:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80139e0:	6013      	str	r3, [r2, #0]
 80139e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80139e4:	3301      	adds	r3, #1
 80139e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80139e8:	687b      	ldr	r3, [r7, #4]
 80139ea:	685b      	ldr	r3, [r3, #4]
 80139ec:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80139ee:	429a      	cmp	r2, r3
 80139f0:	d3b3      	bcc.n	801395a <HAL_PCD_IRQHandler+0x550>
 80139f2:	69fb      	ldr	r3, [r7, #28]
 80139f4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80139f8:	69db      	ldr	r3, [r3, #28]
 80139fa:	69fa      	ldr	r2, [r7, #28]
 80139fc:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a00:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8013a04:	61d3      	str	r3, [r2, #28]
 8013a06:	687b      	ldr	r3, [r7, #4]
 8013a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013a0a:	2b00      	cmp	r3, #0
 8013a0c:	d016      	beq.n	8013a3c <HAL_PCD_IRQHandler+0x632>
 8013a0e:	69fb      	ldr	r3, [r7, #28]
 8013a10:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013a14:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013a18:	69fa      	ldr	r2, [r7, #28]
 8013a1a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a1e:	f043 030b 	orr.w	r3, r3, #11
 8013a22:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8013a26:	69fb      	ldr	r3, [r7, #28]
 8013a28:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013a2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013a2e:	69fa      	ldr	r2, [r7, #28]
 8013a30:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a34:	f043 030b 	orr.w	r3, r3, #11
 8013a38:	6453      	str	r3, [r2, #68]	; 0x44
 8013a3a:	e015      	b.n	8013a68 <HAL_PCD_IRQHandler+0x65e>
 8013a3c:	69fb      	ldr	r3, [r7, #28]
 8013a3e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013a42:	695b      	ldr	r3, [r3, #20]
 8013a44:	69fa      	ldr	r2, [r7, #28]
 8013a46:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a4a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013a4e:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 8013a52:	6153      	str	r3, [r2, #20]
 8013a54:	69fb      	ldr	r3, [r7, #28]
 8013a56:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013a5a:	691b      	ldr	r3, [r3, #16]
 8013a5c:	69fa      	ldr	r2, [r7, #28]
 8013a5e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a62:	f043 030b 	orr.w	r3, r3, #11
 8013a66:	6113      	str	r3, [r2, #16]
 8013a68:	69fb      	ldr	r3, [r7, #28]
 8013a6a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013a6e:	681b      	ldr	r3, [r3, #0]
 8013a70:	69fa      	ldr	r2, [r7, #28]
 8013a72:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013a76:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8013a7a:	6013      	str	r3, [r2, #0]
 8013a7c:	687b      	ldr	r3, [r7, #4]
 8013a7e:	6818      	ldr	r0, [r3, #0]
 8013a80:	687b      	ldr	r3, [r7, #4]
 8013a82:	691b      	ldr	r3, [r3, #16]
 8013a84:	b2d9      	uxtb	r1, r3
 8013a86:	687b      	ldr	r3, [r7, #4]
 8013a88:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8013a8c:	461a      	mov	r2, r3
 8013a8e:	f005 fd93 	bl	80195b8 <USB_EP0_OutStart>
 8013a92:	687b      	ldr	r3, [r7, #4]
 8013a94:	681b      	ldr	r3, [r3, #0]
 8013a96:	695a      	ldr	r2, [r3, #20]
 8013a98:	687b      	ldr	r3, [r7, #4]
 8013a9a:	681b      	ldr	r3, [r3, #0]
 8013a9c:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8013aa0:	615a      	str	r2, [r3, #20]
 8013aa2:	687b      	ldr	r3, [r7, #4]
 8013aa4:	681b      	ldr	r3, [r3, #0]
 8013aa6:	4618      	mov	r0, r3
 8013aa8:	f005 fcc2 	bl	8019430 <USB_ReadInterrupts>
 8013aac:	4603      	mov	r3, r0
 8013aae:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8013ab2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8013ab6:	d124      	bne.n	8013b02 <HAL_PCD_IRQHandler+0x6f8>
 8013ab8:	687b      	ldr	r3, [r7, #4]
 8013aba:	681b      	ldr	r3, [r3, #0]
 8013abc:	4618      	mov	r0, r3
 8013abe:	f005 fd58 	bl	8019572 <USB_ActivateSetup>
 8013ac2:	687b      	ldr	r3, [r7, #4]
 8013ac4:	681b      	ldr	r3, [r3, #0]
 8013ac6:	4618      	mov	r0, r3
 8013ac8:	f004 fd0d 	bl	80184e6 <USB_GetDevSpeed>
 8013acc:	4603      	mov	r3, r0
 8013ace:	461a      	mov	r2, r3
 8013ad0:	687b      	ldr	r3, [r7, #4]
 8013ad2:	60da      	str	r2, [r3, #12]
 8013ad4:	687b      	ldr	r3, [r7, #4]
 8013ad6:	681c      	ldr	r4, [r3, #0]
 8013ad8:	f001 f9e8 	bl	8014eac <HAL_RCC_GetHCLKFreq>
 8013adc:	4601      	mov	r1, r0
 8013ade:	687b      	ldr	r3, [r7, #4]
 8013ae0:	68db      	ldr	r3, [r3, #12]
 8013ae2:	b2db      	uxtb	r3, r3
 8013ae4:	461a      	mov	r2, r3
 8013ae6:	4620      	mov	r0, r4
 8013ae8:	f004 fa0c 	bl	8017f04 <USB_SetTurnaroundTime>
 8013aec:	6878      	ldr	r0, [r7, #4]
 8013aee:	f00b fa4e 	bl	801ef8e <HAL_PCD_ResetCallback>
 8013af2:	687b      	ldr	r3, [r7, #4]
 8013af4:	681b      	ldr	r3, [r3, #0]
 8013af6:	695a      	ldr	r2, [r3, #20]
 8013af8:	687b      	ldr	r3, [r7, #4]
 8013afa:	681b      	ldr	r3, [r3, #0]
 8013afc:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8013b00:	615a      	str	r2, [r3, #20]
 8013b02:	687b      	ldr	r3, [r7, #4]
 8013b04:	681b      	ldr	r3, [r3, #0]
 8013b06:	4618      	mov	r0, r3
 8013b08:	f005 fc92 	bl	8019430 <USB_ReadInterrupts>
 8013b0c:	4603      	mov	r3, r0
 8013b0e:	f003 0308 	and.w	r3, r3, #8
 8013b12:	2b08      	cmp	r3, #8
 8013b14:	d10a      	bne.n	8013b2c <HAL_PCD_IRQHandler+0x722>
 8013b16:	6878      	ldr	r0, [r7, #4]
 8013b18:	f00b fa2b 	bl	801ef72 <HAL_PCD_SOFCallback>
 8013b1c:	687b      	ldr	r3, [r7, #4]
 8013b1e:	681b      	ldr	r3, [r3, #0]
 8013b20:	695a      	ldr	r2, [r3, #20]
 8013b22:	687b      	ldr	r3, [r7, #4]
 8013b24:	681b      	ldr	r3, [r3, #0]
 8013b26:	f002 0208 	and.w	r2, r2, #8
 8013b2a:	615a      	str	r2, [r3, #20]
 8013b2c:	687b      	ldr	r3, [r7, #4]
 8013b2e:	681b      	ldr	r3, [r3, #0]
 8013b30:	4618      	mov	r0, r3
 8013b32:	f005 fc7d 	bl	8019430 <USB_ReadInterrupts>
 8013b36:	4603      	mov	r3, r0
 8013b38:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013b3c:	2b80      	cmp	r3, #128	; 0x80
 8013b3e:	d122      	bne.n	8013b86 <HAL_PCD_IRQHandler+0x77c>
 8013b40:	6a3b      	ldr	r3, [r7, #32]
 8013b42:	699b      	ldr	r3, [r3, #24]
 8013b44:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8013b48:	6a3b      	ldr	r3, [r7, #32]
 8013b4a:	619a      	str	r2, [r3, #24]
 8013b4c:	2301      	movs	r3, #1
 8013b4e:	627b      	str	r3, [r7, #36]	; 0x24
 8013b50:	e014      	b.n	8013b7c <HAL_PCD_IRQHandler+0x772>
 8013b52:	6879      	ldr	r1, [r7, #4]
 8013b54:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013b56:	4613      	mov	r3, r2
 8013b58:	00db      	lsls	r3, r3, #3
 8013b5a:	4413      	add	r3, r2
 8013b5c:	009b      	lsls	r3, r3, #2
 8013b5e:	440b      	add	r3, r1
 8013b60:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8013b64:	781b      	ldrb	r3, [r3, #0]
 8013b66:	2b01      	cmp	r3, #1
 8013b68:	d105      	bne.n	8013b76 <HAL_PCD_IRQHandler+0x76c>
 8013b6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013b6c:	b2db      	uxtb	r3, r3
 8013b6e:	4619      	mov	r1, r3
 8013b70:	6878      	ldr	r0, [r7, #4]
 8013b72:	f000 fb27 	bl	80141c4 <HAL_PCD_EP_Abort>
 8013b76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013b78:	3301      	adds	r3, #1
 8013b7a:	627b      	str	r3, [r7, #36]	; 0x24
 8013b7c:	687b      	ldr	r3, [r7, #4]
 8013b7e:	685b      	ldr	r3, [r3, #4]
 8013b80:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013b82:	429a      	cmp	r2, r3
 8013b84:	d3e5      	bcc.n	8013b52 <HAL_PCD_IRQHandler+0x748>
 8013b86:	687b      	ldr	r3, [r7, #4]
 8013b88:	681b      	ldr	r3, [r3, #0]
 8013b8a:	4618      	mov	r0, r3
 8013b8c:	f005 fc50 	bl	8019430 <USB_ReadInterrupts>
 8013b90:	4603      	mov	r3, r0
 8013b92:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8013b96:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8013b9a:	d13b      	bne.n	8013c14 <HAL_PCD_IRQHandler+0x80a>
 8013b9c:	2301      	movs	r3, #1
 8013b9e:	627b      	str	r3, [r7, #36]	; 0x24
 8013ba0:	e02b      	b.n	8013bfa <HAL_PCD_IRQHandler+0x7f0>
 8013ba2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013ba4:	015a      	lsls	r2, r3, #5
 8013ba6:	69fb      	ldr	r3, [r7, #28]
 8013ba8:	4413      	add	r3, r2
 8013baa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8013bae:	681b      	ldr	r3, [r3, #0]
 8013bb0:	61bb      	str	r3, [r7, #24]
 8013bb2:	6879      	ldr	r1, [r7, #4]
 8013bb4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013bb6:	4613      	mov	r3, r2
 8013bb8:	00db      	lsls	r3, r3, #3
 8013bba:	4413      	add	r3, r2
 8013bbc:	009b      	lsls	r3, r3, #2
 8013bbe:	440b      	add	r3, r1
 8013bc0:	3340      	adds	r3, #64	; 0x40
 8013bc2:	781b      	ldrb	r3, [r3, #0]
 8013bc4:	2b01      	cmp	r3, #1
 8013bc6:	d115      	bne.n	8013bf4 <HAL_PCD_IRQHandler+0x7ea>
 8013bc8:	69bb      	ldr	r3, [r7, #24]
 8013bca:	2b00      	cmp	r3, #0
 8013bcc:	da12      	bge.n	8013bf4 <HAL_PCD_IRQHandler+0x7ea>
 8013bce:	6879      	ldr	r1, [r7, #4]
 8013bd0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013bd2:	4613      	mov	r3, r2
 8013bd4:	00db      	lsls	r3, r3, #3
 8013bd6:	4413      	add	r3, r2
 8013bd8:	009b      	lsls	r3, r3, #2
 8013bda:	440b      	add	r3, r1
 8013bdc:	333f      	adds	r3, #63	; 0x3f
 8013bde:	2201      	movs	r2, #1
 8013be0:	701a      	strb	r2, [r3, #0]
 8013be2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013be4:	b2db      	uxtb	r3, r3
 8013be6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8013bea:	b2db      	uxtb	r3, r3
 8013bec:	4619      	mov	r1, r3
 8013bee:	6878      	ldr	r0, [r7, #4]
 8013bf0:	f000 fae8 	bl	80141c4 <HAL_PCD_EP_Abort>
 8013bf4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013bf6:	3301      	adds	r3, #1
 8013bf8:	627b      	str	r3, [r7, #36]	; 0x24
 8013bfa:	687b      	ldr	r3, [r7, #4]
 8013bfc:	685b      	ldr	r3, [r3, #4]
 8013bfe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013c00:	429a      	cmp	r2, r3
 8013c02:	d3ce      	bcc.n	8013ba2 <HAL_PCD_IRQHandler+0x798>
 8013c04:	687b      	ldr	r3, [r7, #4]
 8013c06:	681b      	ldr	r3, [r3, #0]
 8013c08:	695a      	ldr	r2, [r3, #20]
 8013c0a:	687b      	ldr	r3, [r7, #4]
 8013c0c:	681b      	ldr	r3, [r3, #0]
 8013c0e:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8013c12:	615a      	str	r2, [r3, #20]
 8013c14:	687b      	ldr	r3, [r7, #4]
 8013c16:	681b      	ldr	r3, [r3, #0]
 8013c18:	4618      	mov	r0, r3
 8013c1a:	f005 fc09 	bl	8019430 <USB_ReadInterrupts>
 8013c1e:	4603      	mov	r3, r0
 8013c20:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8013c24:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8013c28:	d155      	bne.n	8013cd6 <HAL_PCD_IRQHandler+0x8cc>
 8013c2a:	2301      	movs	r3, #1
 8013c2c:	627b      	str	r3, [r7, #36]	; 0x24
 8013c2e:	e045      	b.n	8013cbc <HAL_PCD_IRQHandler+0x8b2>
 8013c30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013c32:	015a      	lsls	r2, r3, #5
 8013c34:	69fb      	ldr	r3, [r7, #28]
 8013c36:	4413      	add	r3, r2
 8013c38:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8013c3c:	681b      	ldr	r3, [r3, #0]
 8013c3e:	61bb      	str	r3, [r7, #24]
 8013c40:	6879      	ldr	r1, [r7, #4]
 8013c42:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013c44:	4613      	mov	r3, r2
 8013c46:	00db      	lsls	r3, r3, #3
 8013c48:	4413      	add	r3, r2
 8013c4a:	009b      	lsls	r3, r3, #2
 8013c4c:	440b      	add	r3, r1
 8013c4e:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8013c52:	781b      	ldrb	r3, [r3, #0]
 8013c54:	2b01      	cmp	r3, #1
 8013c56:	d12e      	bne.n	8013cb6 <HAL_PCD_IRQHandler+0x8ac>
 8013c58:	69bb      	ldr	r3, [r7, #24]
 8013c5a:	2b00      	cmp	r3, #0
 8013c5c:	da2b      	bge.n	8013cb6 <HAL_PCD_IRQHandler+0x8ac>
 8013c5e:	69bb      	ldr	r3, [r7, #24]
 8013c60:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8013c64:	687b      	ldr	r3, [r7, #4]
 8013c66:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	; 0x4fc
 8013c6a:	f003 0301 	and.w	r3, r3, #1
 8013c6e:	429a      	cmp	r2, r3
 8013c70:	d121      	bne.n	8013cb6 <HAL_PCD_IRQHandler+0x8ac>
 8013c72:	6879      	ldr	r1, [r7, #4]
 8013c74:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013c76:	4613      	mov	r3, r2
 8013c78:	00db      	lsls	r3, r3, #3
 8013c7a:	4413      	add	r3, r2
 8013c7c:	009b      	lsls	r3, r3, #2
 8013c7e:	440b      	add	r3, r1
 8013c80:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8013c84:	2201      	movs	r2, #1
 8013c86:	701a      	strb	r2, [r3, #0]
 8013c88:	6a3b      	ldr	r3, [r7, #32]
 8013c8a:	699b      	ldr	r3, [r3, #24]
 8013c8c:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8013c90:	6a3b      	ldr	r3, [r7, #32]
 8013c92:	619a      	str	r2, [r3, #24]
 8013c94:	6a3b      	ldr	r3, [r7, #32]
 8013c96:	695b      	ldr	r3, [r3, #20]
 8013c98:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013c9c:	2b00      	cmp	r3, #0
 8013c9e:	d10a      	bne.n	8013cb6 <HAL_PCD_IRQHandler+0x8ac>
 8013ca0:	69fb      	ldr	r3, [r7, #28]
 8013ca2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013ca6:	685b      	ldr	r3, [r3, #4]
 8013ca8:	69fa      	ldr	r2, [r7, #28]
 8013caa:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8013cae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8013cb2:	6053      	str	r3, [r2, #4]
 8013cb4:	e007      	b.n	8013cc6 <HAL_PCD_IRQHandler+0x8bc>
 8013cb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013cb8:	3301      	adds	r3, #1
 8013cba:	627b      	str	r3, [r7, #36]	; 0x24
 8013cbc:	687b      	ldr	r3, [r7, #4]
 8013cbe:	685b      	ldr	r3, [r3, #4]
 8013cc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013cc2:	429a      	cmp	r2, r3
 8013cc4:	d3b4      	bcc.n	8013c30 <HAL_PCD_IRQHandler+0x826>
 8013cc6:	687b      	ldr	r3, [r7, #4]
 8013cc8:	681b      	ldr	r3, [r3, #0]
 8013cca:	695a      	ldr	r2, [r3, #20]
 8013ccc:	687b      	ldr	r3, [r7, #4]
 8013cce:	681b      	ldr	r3, [r3, #0]
 8013cd0:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8013cd4:	615a      	str	r2, [r3, #20]
 8013cd6:	687b      	ldr	r3, [r7, #4]
 8013cd8:	681b      	ldr	r3, [r3, #0]
 8013cda:	4618      	mov	r0, r3
 8013cdc:	f005 fba8 	bl	8019430 <USB_ReadInterrupts>
 8013ce0:	4603      	mov	r3, r0
 8013ce2:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8013ce6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013cea:	d10a      	bne.n	8013d02 <HAL_PCD_IRQHandler+0x8f8>
 8013cec:	6878      	ldr	r0, [r7, #4]
 8013cee:	f00b f9db 	bl	801f0a8 <HAL_PCD_ConnectCallback>
 8013cf2:	687b      	ldr	r3, [r7, #4]
 8013cf4:	681b      	ldr	r3, [r3, #0]
 8013cf6:	695a      	ldr	r2, [r3, #20]
 8013cf8:	687b      	ldr	r3, [r7, #4]
 8013cfa:	681b      	ldr	r3, [r3, #0]
 8013cfc:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8013d00:	615a      	str	r2, [r3, #20]
 8013d02:	687b      	ldr	r3, [r7, #4]
 8013d04:	681b      	ldr	r3, [r3, #0]
 8013d06:	4618      	mov	r0, r3
 8013d08:	f005 fb92 	bl	8019430 <USB_ReadInterrupts>
 8013d0c:	4603      	mov	r3, r0
 8013d0e:	f003 0304 	and.w	r3, r3, #4
 8013d12:	2b04      	cmp	r3, #4
 8013d14:	d115      	bne.n	8013d42 <HAL_PCD_IRQHandler+0x938>
 8013d16:	687b      	ldr	r3, [r7, #4]
 8013d18:	681b      	ldr	r3, [r3, #0]
 8013d1a:	685b      	ldr	r3, [r3, #4]
 8013d1c:	61bb      	str	r3, [r7, #24]
 8013d1e:	69bb      	ldr	r3, [r7, #24]
 8013d20:	f003 0304 	and.w	r3, r3, #4
 8013d24:	2b00      	cmp	r3, #0
 8013d26:	d002      	beq.n	8013d2e <HAL_PCD_IRQHandler+0x924>
 8013d28:	6878      	ldr	r0, [r7, #4]
 8013d2a:	f00b f9cb 	bl	801f0c4 <HAL_PCD_DisconnectCallback>
 8013d2e:	687b      	ldr	r3, [r7, #4]
 8013d30:	681b      	ldr	r3, [r3, #0]
 8013d32:	6859      	ldr	r1, [r3, #4]
 8013d34:	687b      	ldr	r3, [r7, #4]
 8013d36:	681b      	ldr	r3, [r3, #0]
 8013d38:	69ba      	ldr	r2, [r7, #24]
 8013d3a:	430a      	orrs	r2, r1
 8013d3c:	605a      	str	r2, [r3, #4]
 8013d3e:	e000      	b.n	8013d42 <HAL_PCD_IRQHandler+0x938>
 8013d40:	bf00      	nop
 8013d42:	3734      	adds	r7, #52	; 0x34
 8013d44:	46bd      	mov	sp, r7
 8013d46:	bd90      	pop	{r4, r7, pc}

08013d48 <HAL_PCD_SetAddress>:
 8013d48:	b580      	push	{r7, lr}
 8013d4a:	b082      	sub	sp, #8
 8013d4c:	af00      	add	r7, sp, #0
 8013d4e:	6078      	str	r0, [r7, #4]
 8013d50:	460b      	mov	r3, r1
 8013d52:	70fb      	strb	r3, [r7, #3]
 8013d54:	687b      	ldr	r3, [r7, #4]
 8013d56:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013d5a:	2b01      	cmp	r3, #1
 8013d5c:	d101      	bne.n	8013d62 <HAL_PCD_SetAddress+0x1a>
 8013d5e:	2302      	movs	r3, #2
 8013d60:	e013      	b.n	8013d8a <HAL_PCD_SetAddress+0x42>
 8013d62:	687b      	ldr	r3, [r7, #4]
 8013d64:	2201      	movs	r2, #1
 8013d66:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013d6a:	687b      	ldr	r3, [r7, #4]
 8013d6c:	78fa      	ldrb	r2, [r7, #3]
 8013d6e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8013d72:	687b      	ldr	r3, [r7, #4]
 8013d74:	681b      	ldr	r3, [r3, #0]
 8013d76:	78fa      	ldrb	r2, [r7, #3]
 8013d78:	4611      	mov	r1, r2
 8013d7a:	4618      	mov	r0, r3
 8013d7c:	f005 faf0 	bl	8019360 <USB_SetDevAddress>
 8013d80:	687b      	ldr	r3, [r7, #4]
 8013d82:	2200      	movs	r2, #0
 8013d84:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013d88:	2300      	movs	r3, #0
 8013d8a:	4618      	mov	r0, r3
 8013d8c:	3708      	adds	r7, #8
 8013d8e:	46bd      	mov	sp, r7
 8013d90:	bd80      	pop	{r7, pc}

08013d92 <HAL_PCD_EP_Open>:
 8013d92:	b580      	push	{r7, lr}
 8013d94:	b084      	sub	sp, #16
 8013d96:	af00      	add	r7, sp, #0
 8013d98:	6078      	str	r0, [r7, #4]
 8013d9a:	4608      	mov	r0, r1
 8013d9c:	4611      	mov	r1, r2
 8013d9e:	461a      	mov	r2, r3
 8013da0:	4603      	mov	r3, r0
 8013da2:	70fb      	strb	r3, [r7, #3]
 8013da4:	460b      	mov	r3, r1
 8013da6:	803b      	strh	r3, [r7, #0]
 8013da8:	4613      	mov	r3, r2
 8013daa:	70bb      	strb	r3, [r7, #2]
 8013dac:	2300      	movs	r3, #0
 8013dae:	72fb      	strb	r3, [r7, #11]
 8013db0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013db4:	2b00      	cmp	r3, #0
 8013db6:	da0f      	bge.n	8013dd8 <HAL_PCD_EP_Open+0x46>
 8013db8:	78fb      	ldrb	r3, [r7, #3]
 8013dba:	f003 020f 	and.w	r2, r3, #15
 8013dbe:	4613      	mov	r3, r2
 8013dc0:	00db      	lsls	r3, r3, #3
 8013dc2:	4413      	add	r3, r2
 8013dc4:	009b      	lsls	r3, r3, #2
 8013dc6:	3338      	adds	r3, #56	; 0x38
 8013dc8:	687a      	ldr	r2, [r7, #4]
 8013dca:	4413      	add	r3, r2
 8013dcc:	3304      	adds	r3, #4
 8013dce:	60fb      	str	r3, [r7, #12]
 8013dd0:	68fb      	ldr	r3, [r7, #12]
 8013dd2:	2201      	movs	r2, #1
 8013dd4:	705a      	strb	r2, [r3, #1]
 8013dd6:	e00f      	b.n	8013df8 <HAL_PCD_EP_Open+0x66>
 8013dd8:	78fb      	ldrb	r3, [r7, #3]
 8013dda:	f003 020f 	and.w	r2, r3, #15
 8013dde:	4613      	mov	r3, r2
 8013de0:	00db      	lsls	r3, r3, #3
 8013de2:	4413      	add	r3, r2
 8013de4:	009b      	lsls	r3, r3, #2
 8013de6:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013dea:	687a      	ldr	r2, [r7, #4]
 8013dec:	4413      	add	r3, r2
 8013dee:	3304      	adds	r3, #4
 8013df0:	60fb      	str	r3, [r7, #12]
 8013df2:	68fb      	ldr	r3, [r7, #12]
 8013df4:	2200      	movs	r2, #0
 8013df6:	705a      	strb	r2, [r3, #1]
 8013df8:	78fb      	ldrb	r3, [r7, #3]
 8013dfa:	f003 030f 	and.w	r3, r3, #15
 8013dfe:	b2da      	uxtb	r2, r3
 8013e00:	68fb      	ldr	r3, [r7, #12]
 8013e02:	701a      	strb	r2, [r3, #0]
 8013e04:	883a      	ldrh	r2, [r7, #0]
 8013e06:	68fb      	ldr	r3, [r7, #12]
 8013e08:	60da      	str	r2, [r3, #12]
 8013e0a:	68fb      	ldr	r3, [r7, #12]
 8013e0c:	78ba      	ldrb	r2, [r7, #2]
 8013e0e:	711a      	strb	r2, [r3, #4]
 8013e10:	68fb      	ldr	r3, [r7, #12]
 8013e12:	785b      	ldrb	r3, [r3, #1]
 8013e14:	2b00      	cmp	r3, #0
 8013e16:	d004      	beq.n	8013e22 <HAL_PCD_EP_Open+0x90>
 8013e18:	68fb      	ldr	r3, [r7, #12]
 8013e1a:	781b      	ldrb	r3, [r3, #0]
 8013e1c:	b29a      	uxth	r2, r3
 8013e1e:	68fb      	ldr	r3, [r7, #12]
 8013e20:	811a      	strh	r2, [r3, #8]
 8013e22:	78bb      	ldrb	r3, [r7, #2]
 8013e24:	2b02      	cmp	r3, #2
 8013e26:	d102      	bne.n	8013e2e <HAL_PCD_EP_Open+0x9c>
 8013e28:	68fb      	ldr	r3, [r7, #12]
 8013e2a:	2200      	movs	r2, #0
 8013e2c:	715a      	strb	r2, [r3, #5]
 8013e2e:	687b      	ldr	r3, [r7, #4]
 8013e30:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013e34:	2b01      	cmp	r3, #1
 8013e36:	d101      	bne.n	8013e3c <HAL_PCD_EP_Open+0xaa>
 8013e38:	2302      	movs	r3, #2
 8013e3a:	e00e      	b.n	8013e5a <HAL_PCD_EP_Open+0xc8>
 8013e3c:	687b      	ldr	r3, [r7, #4]
 8013e3e:	2201      	movs	r2, #1
 8013e40:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013e44:	687b      	ldr	r3, [r7, #4]
 8013e46:	681b      	ldr	r3, [r3, #0]
 8013e48:	68f9      	ldr	r1, [r7, #12]
 8013e4a:	4618      	mov	r0, r3
 8013e4c:	f004 fb70 	bl	8018530 <USB_ActivateEndpoint>
 8013e50:	687b      	ldr	r3, [r7, #4]
 8013e52:	2200      	movs	r2, #0
 8013e54:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013e58:	7afb      	ldrb	r3, [r7, #11]
 8013e5a:	4618      	mov	r0, r3
 8013e5c:	3710      	adds	r7, #16
 8013e5e:	46bd      	mov	sp, r7
 8013e60:	bd80      	pop	{r7, pc}

08013e62 <HAL_PCD_EP_Close>:
 8013e62:	b580      	push	{r7, lr}
 8013e64:	b084      	sub	sp, #16
 8013e66:	af00      	add	r7, sp, #0
 8013e68:	6078      	str	r0, [r7, #4]
 8013e6a:	460b      	mov	r3, r1
 8013e6c:	70fb      	strb	r3, [r7, #3]
 8013e6e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8013e72:	2b00      	cmp	r3, #0
 8013e74:	da0f      	bge.n	8013e96 <HAL_PCD_EP_Close+0x34>
 8013e76:	78fb      	ldrb	r3, [r7, #3]
 8013e78:	f003 020f 	and.w	r2, r3, #15
 8013e7c:	4613      	mov	r3, r2
 8013e7e:	00db      	lsls	r3, r3, #3
 8013e80:	4413      	add	r3, r2
 8013e82:	009b      	lsls	r3, r3, #2
 8013e84:	3338      	adds	r3, #56	; 0x38
 8013e86:	687a      	ldr	r2, [r7, #4]
 8013e88:	4413      	add	r3, r2
 8013e8a:	3304      	adds	r3, #4
 8013e8c:	60fb      	str	r3, [r7, #12]
 8013e8e:	68fb      	ldr	r3, [r7, #12]
 8013e90:	2201      	movs	r2, #1
 8013e92:	705a      	strb	r2, [r3, #1]
 8013e94:	e00f      	b.n	8013eb6 <HAL_PCD_EP_Close+0x54>
 8013e96:	78fb      	ldrb	r3, [r7, #3]
 8013e98:	f003 020f 	and.w	r2, r3, #15
 8013e9c:	4613      	mov	r3, r2
 8013e9e:	00db      	lsls	r3, r3, #3
 8013ea0:	4413      	add	r3, r2
 8013ea2:	009b      	lsls	r3, r3, #2
 8013ea4:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013ea8:	687a      	ldr	r2, [r7, #4]
 8013eaa:	4413      	add	r3, r2
 8013eac:	3304      	adds	r3, #4
 8013eae:	60fb      	str	r3, [r7, #12]
 8013eb0:	68fb      	ldr	r3, [r7, #12]
 8013eb2:	2200      	movs	r2, #0
 8013eb4:	705a      	strb	r2, [r3, #1]
 8013eb6:	78fb      	ldrb	r3, [r7, #3]
 8013eb8:	f003 030f 	and.w	r3, r3, #15
 8013ebc:	b2da      	uxtb	r2, r3
 8013ebe:	68fb      	ldr	r3, [r7, #12]
 8013ec0:	701a      	strb	r2, [r3, #0]
 8013ec2:	687b      	ldr	r3, [r7, #4]
 8013ec4:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8013ec8:	2b01      	cmp	r3, #1
 8013eca:	d101      	bne.n	8013ed0 <HAL_PCD_EP_Close+0x6e>
 8013ecc:	2302      	movs	r3, #2
 8013ece:	e00e      	b.n	8013eee <HAL_PCD_EP_Close+0x8c>
 8013ed0:	687b      	ldr	r3, [r7, #4]
 8013ed2:	2201      	movs	r2, #1
 8013ed4:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013ed8:	687b      	ldr	r3, [r7, #4]
 8013eda:	681b      	ldr	r3, [r3, #0]
 8013edc:	68f9      	ldr	r1, [r7, #12]
 8013ede:	4618      	mov	r0, r3
 8013ee0:	f004 fbae 	bl	8018640 <USB_DeactivateEndpoint>
 8013ee4:	687b      	ldr	r3, [r7, #4]
 8013ee6:	2200      	movs	r2, #0
 8013ee8:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8013eec:	2300      	movs	r3, #0
 8013eee:	4618      	mov	r0, r3
 8013ef0:	3710      	adds	r7, #16
 8013ef2:	46bd      	mov	sp, r7
 8013ef4:	bd80      	pop	{r7, pc}

08013ef6 <HAL_PCD_EP_Receive>:
 8013ef6:	b580      	push	{r7, lr}
 8013ef8:	b086      	sub	sp, #24
 8013efa:	af00      	add	r7, sp, #0
 8013efc:	60f8      	str	r0, [r7, #12]
 8013efe:	607a      	str	r2, [r7, #4]
 8013f00:	603b      	str	r3, [r7, #0]
 8013f02:	460b      	mov	r3, r1
 8013f04:	72fb      	strb	r3, [r7, #11]
 8013f06:	7afb      	ldrb	r3, [r7, #11]
 8013f08:	f003 020f 	and.w	r2, r3, #15
 8013f0c:	4613      	mov	r3, r2
 8013f0e:	00db      	lsls	r3, r3, #3
 8013f10:	4413      	add	r3, r2
 8013f12:	009b      	lsls	r3, r3, #2
 8013f14:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8013f18:	68fa      	ldr	r2, [r7, #12]
 8013f1a:	4413      	add	r3, r2
 8013f1c:	3304      	adds	r3, #4
 8013f1e:	617b      	str	r3, [r7, #20]
 8013f20:	697b      	ldr	r3, [r7, #20]
 8013f22:	687a      	ldr	r2, [r7, #4]
 8013f24:	611a      	str	r2, [r3, #16]
 8013f26:	697b      	ldr	r3, [r7, #20]
 8013f28:	683a      	ldr	r2, [r7, #0]
 8013f2a:	619a      	str	r2, [r3, #24]
 8013f2c:	697b      	ldr	r3, [r7, #20]
 8013f2e:	2200      	movs	r2, #0
 8013f30:	621a      	str	r2, [r3, #32]
 8013f32:	697b      	ldr	r3, [r7, #20]
 8013f34:	2200      	movs	r2, #0
 8013f36:	705a      	strb	r2, [r3, #1]
 8013f38:	7afb      	ldrb	r3, [r7, #11]
 8013f3a:	f003 030f 	and.w	r3, r3, #15
 8013f3e:	b2da      	uxtb	r2, r3
 8013f40:	697b      	ldr	r3, [r7, #20]
 8013f42:	701a      	strb	r2, [r3, #0]
 8013f44:	68fb      	ldr	r3, [r7, #12]
 8013f46:	691b      	ldr	r3, [r3, #16]
 8013f48:	2b01      	cmp	r3, #1
 8013f4a:	d102      	bne.n	8013f52 <HAL_PCD_EP_Receive+0x5c>
 8013f4c:	687a      	ldr	r2, [r7, #4]
 8013f4e:	697b      	ldr	r3, [r7, #20]
 8013f50:	615a      	str	r2, [r3, #20]
 8013f52:	7afb      	ldrb	r3, [r7, #11]
 8013f54:	f003 030f 	and.w	r3, r3, #15
 8013f58:	2b00      	cmp	r3, #0
 8013f5a:	d109      	bne.n	8013f70 <HAL_PCD_EP_Receive+0x7a>
 8013f5c:	68fb      	ldr	r3, [r7, #12]
 8013f5e:	6818      	ldr	r0, [r3, #0]
 8013f60:	68fb      	ldr	r3, [r7, #12]
 8013f62:	691b      	ldr	r3, [r3, #16]
 8013f64:	b2db      	uxtb	r3, r3
 8013f66:	461a      	mov	r2, r3
 8013f68:	6979      	ldr	r1, [r7, #20]
 8013f6a:	f004 fe8d 	bl	8018c88 <USB_EP0StartXfer>
 8013f6e:	e008      	b.n	8013f82 <HAL_PCD_EP_Receive+0x8c>
 8013f70:	68fb      	ldr	r3, [r7, #12]
 8013f72:	6818      	ldr	r0, [r3, #0]
 8013f74:	68fb      	ldr	r3, [r7, #12]
 8013f76:	691b      	ldr	r3, [r3, #16]
 8013f78:	b2db      	uxtb	r3, r3
 8013f7a:	461a      	mov	r2, r3
 8013f7c:	6979      	ldr	r1, [r7, #20]
 8013f7e:	f004 fc3b 	bl	80187f8 <USB_EPStartXfer>
 8013f82:	2300      	movs	r3, #0
 8013f84:	4618      	mov	r0, r3
 8013f86:	3718      	adds	r7, #24
 8013f88:	46bd      	mov	sp, r7
 8013f8a:	bd80      	pop	{r7, pc}

08013f8c <HAL_PCD_EP_GetRxCount>:
 8013f8c:	b480      	push	{r7}
 8013f8e:	b083      	sub	sp, #12
 8013f90:	af00      	add	r7, sp, #0
 8013f92:	6078      	str	r0, [r7, #4]
 8013f94:	460b      	mov	r3, r1
 8013f96:	70fb      	strb	r3, [r7, #3]
 8013f98:	78fb      	ldrb	r3, [r7, #3]
 8013f9a:	f003 020f 	and.w	r2, r3, #15
 8013f9e:	6879      	ldr	r1, [r7, #4]
 8013fa0:	4613      	mov	r3, r2
 8013fa2:	00db      	lsls	r3, r3, #3
 8013fa4:	4413      	add	r3, r2
 8013fa6:	009b      	lsls	r3, r3, #2
 8013fa8:	440b      	add	r3, r1
 8013faa:	f503 7327 	add.w	r3, r3, #668	; 0x29c
 8013fae:	681b      	ldr	r3, [r3, #0]
 8013fb0:	4618      	mov	r0, r3
 8013fb2:	370c      	adds	r7, #12
 8013fb4:	46bd      	mov	sp, r7
 8013fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013fba:	4770      	bx	lr

08013fbc <HAL_PCD_EP_Transmit>:
 8013fbc:	b580      	push	{r7, lr}
 8013fbe:	b086      	sub	sp, #24
 8013fc0:	af00      	add	r7, sp, #0
 8013fc2:	60f8      	str	r0, [r7, #12]
 8013fc4:	607a      	str	r2, [r7, #4]
 8013fc6:	603b      	str	r3, [r7, #0]
 8013fc8:	460b      	mov	r3, r1
 8013fca:	72fb      	strb	r3, [r7, #11]
 8013fcc:	7afb      	ldrb	r3, [r7, #11]
 8013fce:	f003 020f 	and.w	r2, r3, #15
 8013fd2:	4613      	mov	r3, r2
 8013fd4:	00db      	lsls	r3, r3, #3
 8013fd6:	4413      	add	r3, r2
 8013fd8:	009b      	lsls	r3, r3, #2
 8013fda:	3338      	adds	r3, #56	; 0x38
 8013fdc:	68fa      	ldr	r2, [r7, #12]
 8013fde:	4413      	add	r3, r2
 8013fe0:	3304      	adds	r3, #4
 8013fe2:	617b      	str	r3, [r7, #20]
 8013fe4:	697b      	ldr	r3, [r7, #20]
 8013fe6:	687a      	ldr	r2, [r7, #4]
 8013fe8:	611a      	str	r2, [r3, #16]
 8013fea:	697b      	ldr	r3, [r7, #20]
 8013fec:	683a      	ldr	r2, [r7, #0]
 8013fee:	619a      	str	r2, [r3, #24]
 8013ff0:	697b      	ldr	r3, [r7, #20]
 8013ff2:	2200      	movs	r2, #0
 8013ff4:	621a      	str	r2, [r3, #32]
 8013ff6:	697b      	ldr	r3, [r7, #20]
 8013ff8:	2201      	movs	r2, #1
 8013ffa:	705a      	strb	r2, [r3, #1]
 8013ffc:	7afb      	ldrb	r3, [r7, #11]
 8013ffe:	f003 030f 	and.w	r3, r3, #15
 8014002:	b2da      	uxtb	r2, r3
 8014004:	697b      	ldr	r3, [r7, #20]
 8014006:	701a      	strb	r2, [r3, #0]
 8014008:	68fb      	ldr	r3, [r7, #12]
 801400a:	691b      	ldr	r3, [r3, #16]
 801400c:	2b01      	cmp	r3, #1
 801400e:	d102      	bne.n	8014016 <HAL_PCD_EP_Transmit+0x5a>
 8014010:	687a      	ldr	r2, [r7, #4]
 8014012:	697b      	ldr	r3, [r7, #20]
 8014014:	615a      	str	r2, [r3, #20]
 8014016:	7afb      	ldrb	r3, [r7, #11]
 8014018:	f003 030f 	and.w	r3, r3, #15
 801401c:	2b00      	cmp	r3, #0
 801401e:	d109      	bne.n	8014034 <HAL_PCD_EP_Transmit+0x78>
 8014020:	68fb      	ldr	r3, [r7, #12]
 8014022:	6818      	ldr	r0, [r3, #0]
 8014024:	68fb      	ldr	r3, [r7, #12]
 8014026:	691b      	ldr	r3, [r3, #16]
 8014028:	b2db      	uxtb	r3, r3
 801402a:	461a      	mov	r2, r3
 801402c:	6979      	ldr	r1, [r7, #20]
 801402e:	f004 fe2b 	bl	8018c88 <USB_EP0StartXfer>
 8014032:	e008      	b.n	8014046 <HAL_PCD_EP_Transmit+0x8a>
 8014034:	68fb      	ldr	r3, [r7, #12]
 8014036:	6818      	ldr	r0, [r3, #0]
 8014038:	68fb      	ldr	r3, [r7, #12]
 801403a:	691b      	ldr	r3, [r3, #16]
 801403c:	b2db      	uxtb	r3, r3
 801403e:	461a      	mov	r2, r3
 8014040:	6979      	ldr	r1, [r7, #20]
 8014042:	f004 fbd9 	bl	80187f8 <USB_EPStartXfer>
 8014046:	2300      	movs	r3, #0
 8014048:	4618      	mov	r0, r3
 801404a:	3718      	adds	r7, #24
 801404c:	46bd      	mov	sp, r7
 801404e:	bd80      	pop	{r7, pc}

08014050 <HAL_PCD_EP_SetStall>:
 8014050:	b580      	push	{r7, lr}
 8014052:	b084      	sub	sp, #16
 8014054:	af00      	add	r7, sp, #0
 8014056:	6078      	str	r0, [r7, #4]
 8014058:	460b      	mov	r3, r1
 801405a:	70fb      	strb	r3, [r7, #3]
 801405c:	78fb      	ldrb	r3, [r7, #3]
 801405e:	f003 020f 	and.w	r2, r3, #15
 8014062:	687b      	ldr	r3, [r7, #4]
 8014064:	685b      	ldr	r3, [r3, #4]
 8014066:	429a      	cmp	r2, r3
 8014068:	d901      	bls.n	801406e <HAL_PCD_EP_SetStall+0x1e>
 801406a:	2301      	movs	r3, #1
 801406c:	e050      	b.n	8014110 <HAL_PCD_EP_SetStall+0xc0>
 801406e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8014072:	2b00      	cmp	r3, #0
 8014074:	da0f      	bge.n	8014096 <HAL_PCD_EP_SetStall+0x46>
 8014076:	78fb      	ldrb	r3, [r7, #3]
 8014078:	f003 020f 	and.w	r2, r3, #15
 801407c:	4613      	mov	r3, r2
 801407e:	00db      	lsls	r3, r3, #3
 8014080:	4413      	add	r3, r2
 8014082:	009b      	lsls	r3, r3, #2
 8014084:	3338      	adds	r3, #56	; 0x38
 8014086:	687a      	ldr	r2, [r7, #4]
 8014088:	4413      	add	r3, r2
 801408a:	3304      	adds	r3, #4
 801408c:	60fb      	str	r3, [r7, #12]
 801408e:	68fb      	ldr	r3, [r7, #12]
 8014090:	2201      	movs	r2, #1
 8014092:	705a      	strb	r2, [r3, #1]
 8014094:	e00d      	b.n	80140b2 <HAL_PCD_EP_SetStall+0x62>
 8014096:	78fa      	ldrb	r2, [r7, #3]
 8014098:	4613      	mov	r3, r2
 801409a:	00db      	lsls	r3, r3, #3
 801409c:	4413      	add	r3, r2
 801409e:	009b      	lsls	r3, r3, #2
 80140a0:	f503 731e 	add.w	r3, r3, #632	; 0x278
 80140a4:	687a      	ldr	r2, [r7, #4]
 80140a6:	4413      	add	r3, r2
 80140a8:	3304      	adds	r3, #4
 80140aa:	60fb      	str	r3, [r7, #12]
 80140ac:	68fb      	ldr	r3, [r7, #12]
 80140ae:	2200      	movs	r2, #0
 80140b0:	705a      	strb	r2, [r3, #1]
 80140b2:	68fb      	ldr	r3, [r7, #12]
 80140b4:	2201      	movs	r2, #1
 80140b6:	709a      	strb	r2, [r3, #2]
 80140b8:	78fb      	ldrb	r3, [r7, #3]
 80140ba:	f003 030f 	and.w	r3, r3, #15
 80140be:	b2da      	uxtb	r2, r3
 80140c0:	68fb      	ldr	r3, [r7, #12]
 80140c2:	701a      	strb	r2, [r3, #0]
 80140c4:	687b      	ldr	r3, [r7, #4]
 80140c6:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 80140ca:	2b01      	cmp	r3, #1
 80140cc:	d101      	bne.n	80140d2 <HAL_PCD_EP_SetStall+0x82>
 80140ce:	2302      	movs	r3, #2
 80140d0:	e01e      	b.n	8014110 <HAL_PCD_EP_SetStall+0xc0>
 80140d2:	687b      	ldr	r3, [r7, #4]
 80140d4:	2201      	movs	r2, #1
 80140d6:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80140da:	687b      	ldr	r3, [r7, #4]
 80140dc:	681b      	ldr	r3, [r3, #0]
 80140de:	68f9      	ldr	r1, [r7, #12]
 80140e0:	4618      	mov	r0, r3
 80140e2:	f005 f869 	bl	80191b8 <USB_EPSetStall>
 80140e6:	78fb      	ldrb	r3, [r7, #3]
 80140e8:	f003 030f 	and.w	r3, r3, #15
 80140ec:	2b00      	cmp	r3, #0
 80140ee:	d10a      	bne.n	8014106 <HAL_PCD_EP_SetStall+0xb6>
 80140f0:	687b      	ldr	r3, [r7, #4]
 80140f2:	6818      	ldr	r0, [r3, #0]
 80140f4:	687b      	ldr	r3, [r7, #4]
 80140f6:	691b      	ldr	r3, [r3, #16]
 80140f8:	b2d9      	uxtb	r1, r3
 80140fa:	687b      	ldr	r3, [r7, #4]
 80140fc:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8014100:	461a      	mov	r2, r3
 8014102:	f005 fa59 	bl	80195b8 <USB_EP0_OutStart>
 8014106:	687b      	ldr	r3, [r7, #4]
 8014108:	2200      	movs	r2, #0
 801410a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 801410e:	2300      	movs	r3, #0
 8014110:	4618      	mov	r0, r3
 8014112:	3710      	adds	r7, #16
 8014114:	46bd      	mov	sp, r7
 8014116:	bd80      	pop	{r7, pc}

08014118 <HAL_PCD_EP_ClrStall>:
 8014118:	b580      	push	{r7, lr}
 801411a:	b084      	sub	sp, #16
 801411c:	af00      	add	r7, sp, #0
 801411e:	6078      	str	r0, [r7, #4]
 8014120:	460b      	mov	r3, r1
 8014122:	70fb      	strb	r3, [r7, #3]
 8014124:	78fb      	ldrb	r3, [r7, #3]
 8014126:	f003 020f 	and.w	r2, r3, #15
 801412a:	687b      	ldr	r3, [r7, #4]
 801412c:	685b      	ldr	r3, [r3, #4]
 801412e:	429a      	cmp	r2, r3
 8014130:	d901      	bls.n	8014136 <HAL_PCD_EP_ClrStall+0x1e>
 8014132:	2301      	movs	r3, #1
 8014134:	e042      	b.n	80141bc <HAL_PCD_EP_ClrStall+0xa4>
 8014136:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801413a:	2b00      	cmp	r3, #0
 801413c:	da0f      	bge.n	801415e <HAL_PCD_EP_ClrStall+0x46>
 801413e:	78fb      	ldrb	r3, [r7, #3]
 8014140:	f003 020f 	and.w	r2, r3, #15
 8014144:	4613      	mov	r3, r2
 8014146:	00db      	lsls	r3, r3, #3
 8014148:	4413      	add	r3, r2
 801414a:	009b      	lsls	r3, r3, #2
 801414c:	3338      	adds	r3, #56	; 0x38
 801414e:	687a      	ldr	r2, [r7, #4]
 8014150:	4413      	add	r3, r2
 8014152:	3304      	adds	r3, #4
 8014154:	60fb      	str	r3, [r7, #12]
 8014156:	68fb      	ldr	r3, [r7, #12]
 8014158:	2201      	movs	r2, #1
 801415a:	705a      	strb	r2, [r3, #1]
 801415c:	e00f      	b.n	801417e <HAL_PCD_EP_ClrStall+0x66>
 801415e:	78fb      	ldrb	r3, [r7, #3]
 8014160:	f003 020f 	and.w	r2, r3, #15
 8014164:	4613      	mov	r3, r2
 8014166:	00db      	lsls	r3, r3, #3
 8014168:	4413      	add	r3, r2
 801416a:	009b      	lsls	r3, r3, #2
 801416c:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8014170:	687a      	ldr	r2, [r7, #4]
 8014172:	4413      	add	r3, r2
 8014174:	3304      	adds	r3, #4
 8014176:	60fb      	str	r3, [r7, #12]
 8014178:	68fb      	ldr	r3, [r7, #12]
 801417a:	2200      	movs	r2, #0
 801417c:	705a      	strb	r2, [r3, #1]
 801417e:	68fb      	ldr	r3, [r7, #12]
 8014180:	2200      	movs	r2, #0
 8014182:	709a      	strb	r2, [r3, #2]
 8014184:	78fb      	ldrb	r3, [r7, #3]
 8014186:	f003 030f 	and.w	r3, r3, #15
 801418a:	b2da      	uxtb	r2, r3
 801418c:	68fb      	ldr	r3, [r7, #12]
 801418e:	701a      	strb	r2, [r3, #0]
 8014190:	687b      	ldr	r3, [r7, #4]
 8014192:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 8014196:	2b01      	cmp	r3, #1
 8014198:	d101      	bne.n	801419e <HAL_PCD_EP_ClrStall+0x86>
 801419a:	2302      	movs	r3, #2
 801419c:	e00e      	b.n	80141bc <HAL_PCD_EP_ClrStall+0xa4>
 801419e:	687b      	ldr	r3, [r7, #4]
 80141a0:	2201      	movs	r2, #1
 80141a2:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80141a6:	687b      	ldr	r3, [r7, #4]
 80141a8:	681b      	ldr	r3, [r3, #0]
 80141aa:	68f9      	ldr	r1, [r7, #12]
 80141ac:	4618      	mov	r0, r3
 80141ae:	f005 f871 	bl	8019294 <USB_EPClearStall>
 80141b2:	687b      	ldr	r3, [r7, #4]
 80141b4:	2200      	movs	r2, #0
 80141b6:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80141ba:	2300      	movs	r3, #0
 80141bc:	4618      	mov	r0, r3
 80141be:	3710      	adds	r7, #16
 80141c0:	46bd      	mov	sp, r7
 80141c2:	bd80      	pop	{r7, pc}

080141c4 <HAL_PCD_EP_Abort>:
 80141c4:	b580      	push	{r7, lr}
 80141c6:	b084      	sub	sp, #16
 80141c8:	af00      	add	r7, sp, #0
 80141ca:	6078      	str	r0, [r7, #4]
 80141cc:	460b      	mov	r3, r1
 80141ce:	70fb      	strb	r3, [r7, #3]
 80141d0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80141d4:	2b00      	cmp	r3, #0
 80141d6:	da0c      	bge.n	80141f2 <HAL_PCD_EP_Abort+0x2e>
 80141d8:	78fb      	ldrb	r3, [r7, #3]
 80141da:	f003 020f 	and.w	r2, r3, #15
 80141de:	4613      	mov	r3, r2
 80141e0:	00db      	lsls	r3, r3, #3
 80141e2:	4413      	add	r3, r2
 80141e4:	009b      	lsls	r3, r3, #2
 80141e6:	3338      	adds	r3, #56	; 0x38
 80141e8:	687a      	ldr	r2, [r7, #4]
 80141ea:	4413      	add	r3, r2
 80141ec:	3304      	adds	r3, #4
 80141ee:	60fb      	str	r3, [r7, #12]
 80141f0:	e00c      	b.n	801420c <HAL_PCD_EP_Abort+0x48>
 80141f2:	78fb      	ldrb	r3, [r7, #3]
 80141f4:	f003 020f 	and.w	r2, r3, #15
 80141f8:	4613      	mov	r3, r2
 80141fa:	00db      	lsls	r3, r3, #3
 80141fc:	4413      	add	r3, r2
 80141fe:	009b      	lsls	r3, r3, #2
 8014200:	f503 731e 	add.w	r3, r3, #632	; 0x278
 8014204:	687a      	ldr	r2, [r7, #4]
 8014206:	4413      	add	r3, r2
 8014208:	3304      	adds	r3, #4
 801420a:	60fb      	str	r3, [r7, #12]
 801420c:	687b      	ldr	r3, [r7, #4]
 801420e:	681b      	ldr	r3, [r3, #0]
 8014210:	68f9      	ldr	r1, [r7, #12]
 8014212:	4618      	mov	r0, r3
 8014214:	f004 fe90 	bl	8018f38 <USB_EPStopXfer>
 8014218:	4603      	mov	r3, r0
 801421a:	72fb      	strb	r3, [r7, #11]
 801421c:	7afb      	ldrb	r3, [r7, #11]
 801421e:	4618      	mov	r0, r3
 8014220:	3710      	adds	r7, #16
 8014222:	46bd      	mov	sp, r7
 8014224:	bd80      	pop	{r7, pc}

08014226 <PCD_WriteEmptyTxFifo>:
 8014226:	b580      	push	{r7, lr}
 8014228:	b08a      	sub	sp, #40	; 0x28
 801422a:	af02      	add	r7, sp, #8
 801422c:	6078      	str	r0, [r7, #4]
 801422e:	6039      	str	r1, [r7, #0]
 8014230:	687b      	ldr	r3, [r7, #4]
 8014232:	681b      	ldr	r3, [r3, #0]
 8014234:	617b      	str	r3, [r7, #20]
 8014236:	697b      	ldr	r3, [r7, #20]
 8014238:	613b      	str	r3, [r7, #16]
 801423a:	683a      	ldr	r2, [r7, #0]
 801423c:	4613      	mov	r3, r2
 801423e:	00db      	lsls	r3, r3, #3
 8014240:	4413      	add	r3, r2
 8014242:	009b      	lsls	r3, r3, #2
 8014244:	3338      	adds	r3, #56	; 0x38
 8014246:	687a      	ldr	r2, [r7, #4]
 8014248:	4413      	add	r3, r2
 801424a:	3304      	adds	r3, #4
 801424c:	60fb      	str	r3, [r7, #12]
 801424e:	68fb      	ldr	r3, [r7, #12]
 8014250:	6a1a      	ldr	r2, [r3, #32]
 8014252:	68fb      	ldr	r3, [r7, #12]
 8014254:	699b      	ldr	r3, [r3, #24]
 8014256:	429a      	cmp	r2, r3
 8014258:	d901      	bls.n	801425e <PCD_WriteEmptyTxFifo+0x38>
 801425a:	2301      	movs	r3, #1
 801425c:	e06c      	b.n	8014338 <PCD_WriteEmptyTxFifo+0x112>
 801425e:	68fb      	ldr	r3, [r7, #12]
 8014260:	699a      	ldr	r2, [r3, #24]
 8014262:	68fb      	ldr	r3, [r7, #12]
 8014264:	6a1b      	ldr	r3, [r3, #32]
 8014266:	1ad3      	subs	r3, r2, r3
 8014268:	61fb      	str	r3, [r7, #28]
 801426a:	68fb      	ldr	r3, [r7, #12]
 801426c:	68db      	ldr	r3, [r3, #12]
 801426e:	69fa      	ldr	r2, [r7, #28]
 8014270:	429a      	cmp	r2, r3
 8014272:	d902      	bls.n	801427a <PCD_WriteEmptyTxFifo+0x54>
 8014274:	68fb      	ldr	r3, [r7, #12]
 8014276:	68db      	ldr	r3, [r3, #12]
 8014278:	61fb      	str	r3, [r7, #28]
 801427a:	69fb      	ldr	r3, [r7, #28]
 801427c:	3303      	adds	r3, #3
 801427e:	089b      	lsrs	r3, r3, #2
 8014280:	61bb      	str	r3, [r7, #24]
 8014282:	e02b      	b.n	80142dc <PCD_WriteEmptyTxFifo+0xb6>
 8014284:	68fb      	ldr	r3, [r7, #12]
 8014286:	699a      	ldr	r2, [r3, #24]
 8014288:	68fb      	ldr	r3, [r7, #12]
 801428a:	6a1b      	ldr	r3, [r3, #32]
 801428c:	1ad3      	subs	r3, r2, r3
 801428e:	61fb      	str	r3, [r7, #28]
 8014290:	68fb      	ldr	r3, [r7, #12]
 8014292:	68db      	ldr	r3, [r3, #12]
 8014294:	69fa      	ldr	r2, [r7, #28]
 8014296:	429a      	cmp	r2, r3
 8014298:	d902      	bls.n	80142a0 <PCD_WriteEmptyTxFifo+0x7a>
 801429a:	68fb      	ldr	r3, [r7, #12]
 801429c:	68db      	ldr	r3, [r3, #12]
 801429e:	61fb      	str	r3, [r7, #28]
 80142a0:	69fb      	ldr	r3, [r7, #28]
 80142a2:	3303      	adds	r3, #3
 80142a4:	089b      	lsrs	r3, r3, #2
 80142a6:	61bb      	str	r3, [r7, #24]
 80142a8:	68fb      	ldr	r3, [r7, #12]
 80142aa:	6919      	ldr	r1, [r3, #16]
 80142ac:	683b      	ldr	r3, [r7, #0]
 80142ae:	b2da      	uxtb	r2, r3
 80142b0:	69fb      	ldr	r3, [r7, #28]
 80142b2:	b298      	uxth	r0, r3
 80142b4:	687b      	ldr	r3, [r7, #4]
 80142b6:	691b      	ldr	r3, [r3, #16]
 80142b8:	b2db      	uxtb	r3, r3
 80142ba:	9300      	str	r3, [sp, #0]
 80142bc:	4603      	mov	r3, r0
 80142be:	6978      	ldr	r0, [r7, #20]
 80142c0:	f004 fee4 	bl	801908c <USB_WritePacket>
 80142c4:	68fb      	ldr	r3, [r7, #12]
 80142c6:	691a      	ldr	r2, [r3, #16]
 80142c8:	69fb      	ldr	r3, [r7, #28]
 80142ca:	441a      	add	r2, r3
 80142cc:	68fb      	ldr	r3, [r7, #12]
 80142ce:	611a      	str	r2, [r3, #16]
 80142d0:	68fb      	ldr	r3, [r7, #12]
 80142d2:	6a1a      	ldr	r2, [r3, #32]
 80142d4:	69fb      	ldr	r3, [r7, #28]
 80142d6:	441a      	add	r2, r3
 80142d8:	68fb      	ldr	r3, [r7, #12]
 80142da:	621a      	str	r2, [r3, #32]
 80142dc:	683b      	ldr	r3, [r7, #0]
 80142de:	015a      	lsls	r2, r3, #5
 80142e0:	693b      	ldr	r3, [r7, #16]
 80142e2:	4413      	add	r3, r2
 80142e4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80142e8:	699b      	ldr	r3, [r3, #24]
 80142ea:	b29b      	uxth	r3, r3
 80142ec:	69ba      	ldr	r2, [r7, #24]
 80142ee:	429a      	cmp	r2, r3
 80142f0:	d809      	bhi.n	8014306 <PCD_WriteEmptyTxFifo+0xe0>
 80142f2:	68fb      	ldr	r3, [r7, #12]
 80142f4:	6a1a      	ldr	r2, [r3, #32]
 80142f6:	68fb      	ldr	r3, [r7, #12]
 80142f8:	699b      	ldr	r3, [r3, #24]
 80142fa:	429a      	cmp	r2, r3
 80142fc:	d203      	bcs.n	8014306 <PCD_WriteEmptyTxFifo+0xe0>
 80142fe:	68fb      	ldr	r3, [r7, #12]
 8014300:	699b      	ldr	r3, [r3, #24]
 8014302:	2b00      	cmp	r3, #0
 8014304:	d1be      	bne.n	8014284 <PCD_WriteEmptyTxFifo+0x5e>
 8014306:	68fb      	ldr	r3, [r7, #12]
 8014308:	699a      	ldr	r2, [r3, #24]
 801430a:	68fb      	ldr	r3, [r7, #12]
 801430c:	6a1b      	ldr	r3, [r3, #32]
 801430e:	429a      	cmp	r2, r3
 8014310:	d811      	bhi.n	8014336 <PCD_WriteEmptyTxFifo+0x110>
 8014312:	683b      	ldr	r3, [r7, #0]
 8014314:	f003 030f 	and.w	r3, r3, #15
 8014318:	2201      	movs	r2, #1
 801431a:	fa02 f303 	lsl.w	r3, r2, r3
 801431e:	60bb      	str	r3, [r7, #8]
 8014320:	693b      	ldr	r3, [r7, #16]
 8014322:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8014326:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014328:	68bb      	ldr	r3, [r7, #8]
 801432a:	43db      	mvns	r3, r3
 801432c:	6939      	ldr	r1, [r7, #16]
 801432e:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8014332:	4013      	ands	r3, r2
 8014334:	634b      	str	r3, [r1, #52]	; 0x34
 8014336:	2300      	movs	r3, #0
 8014338:	4618      	mov	r0, r3
 801433a:	3720      	adds	r7, #32
 801433c:	46bd      	mov	sp, r7
 801433e:	bd80      	pop	{r7, pc}

08014340 <PCD_EP_OutXfrComplete_int>:
 8014340:	b580      	push	{r7, lr}
 8014342:	b088      	sub	sp, #32
 8014344:	af00      	add	r7, sp, #0
 8014346:	6078      	str	r0, [r7, #4]
 8014348:	6039      	str	r1, [r7, #0]
 801434a:	687b      	ldr	r3, [r7, #4]
 801434c:	681b      	ldr	r3, [r3, #0]
 801434e:	61fb      	str	r3, [r7, #28]
 8014350:	69fb      	ldr	r3, [r7, #28]
 8014352:	61bb      	str	r3, [r7, #24]
 8014354:	69fb      	ldr	r3, [r7, #28]
 8014356:	333c      	adds	r3, #60	; 0x3c
 8014358:	3304      	adds	r3, #4
 801435a:	681b      	ldr	r3, [r3, #0]
 801435c:	617b      	str	r3, [r7, #20]
 801435e:	683b      	ldr	r3, [r7, #0]
 8014360:	015a      	lsls	r2, r3, #5
 8014362:	69bb      	ldr	r3, [r7, #24]
 8014364:	4413      	add	r3, r2
 8014366:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801436a:	689b      	ldr	r3, [r3, #8]
 801436c:	613b      	str	r3, [r7, #16]
 801436e:	687b      	ldr	r3, [r7, #4]
 8014370:	691b      	ldr	r3, [r3, #16]
 8014372:	2b01      	cmp	r3, #1
 8014374:	d17b      	bne.n	801446e <PCD_EP_OutXfrComplete_int+0x12e>
 8014376:	693b      	ldr	r3, [r7, #16]
 8014378:	f003 0308 	and.w	r3, r3, #8
 801437c:	2b00      	cmp	r3, #0
 801437e:	d015      	beq.n	80143ac <PCD_EP_OutXfrComplete_int+0x6c>
 8014380:	697b      	ldr	r3, [r7, #20]
 8014382:	4a61      	ldr	r2, [pc, #388]	; (8014508 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8014384:	4293      	cmp	r3, r2
 8014386:	f240 80b9 	bls.w	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 801438a:	693b      	ldr	r3, [r7, #16]
 801438c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8014390:	2b00      	cmp	r3, #0
 8014392:	f000 80b3 	beq.w	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 8014396:	683b      	ldr	r3, [r7, #0]
 8014398:	015a      	lsls	r2, r3, #5
 801439a:	69bb      	ldr	r3, [r7, #24]
 801439c:	4413      	add	r3, r2
 801439e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80143a2:	461a      	mov	r2, r3
 80143a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80143a8:	6093      	str	r3, [r2, #8]
 80143aa:	e0a7      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 80143ac:	693b      	ldr	r3, [r7, #16]
 80143ae:	f003 0320 	and.w	r3, r3, #32
 80143b2:	2b00      	cmp	r3, #0
 80143b4:	d009      	beq.n	80143ca <PCD_EP_OutXfrComplete_int+0x8a>
 80143b6:	683b      	ldr	r3, [r7, #0]
 80143b8:	015a      	lsls	r2, r3, #5
 80143ba:	69bb      	ldr	r3, [r7, #24]
 80143bc:	4413      	add	r3, r2
 80143be:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80143c2:	461a      	mov	r2, r3
 80143c4:	2320      	movs	r3, #32
 80143c6:	6093      	str	r3, [r2, #8]
 80143c8:	e098      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 80143ca:	693b      	ldr	r3, [r7, #16]
 80143cc:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80143d0:	2b00      	cmp	r3, #0
 80143d2:	f040 8093 	bne.w	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 80143d6:	697b      	ldr	r3, [r7, #20]
 80143d8:	4a4b      	ldr	r2, [pc, #300]	; (8014508 <PCD_EP_OutXfrComplete_int+0x1c8>)
 80143da:	4293      	cmp	r3, r2
 80143dc:	d90f      	bls.n	80143fe <PCD_EP_OutXfrComplete_int+0xbe>
 80143de:	693b      	ldr	r3, [r7, #16]
 80143e0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80143e4:	2b00      	cmp	r3, #0
 80143e6:	d00a      	beq.n	80143fe <PCD_EP_OutXfrComplete_int+0xbe>
 80143e8:	683b      	ldr	r3, [r7, #0]
 80143ea:	015a      	lsls	r2, r3, #5
 80143ec:	69bb      	ldr	r3, [r7, #24]
 80143ee:	4413      	add	r3, r2
 80143f0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80143f4:	461a      	mov	r2, r3
 80143f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80143fa:	6093      	str	r3, [r2, #8]
 80143fc:	e07e      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 80143fe:	683a      	ldr	r2, [r7, #0]
 8014400:	4613      	mov	r3, r2
 8014402:	00db      	lsls	r3, r3, #3
 8014404:	4413      	add	r3, r2
 8014406:	009b      	lsls	r3, r3, #2
 8014408:	f503 731e 	add.w	r3, r3, #632	; 0x278
 801440c:	687a      	ldr	r2, [r7, #4]
 801440e:	4413      	add	r3, r2
 8014410:	3304      	adds	r3, #4
 8014412:	60fb      	str	r3, [r7, #12]
 8014414:	68fb      	ldr	r3, [r7, #12]
 8014416:	69da      	ldr	r2, [r3, #28]
 8014418:	683b      	ldr	r3, [r7, #0]
 801441a:	0159      	lsls	r1, r3, #5
 801441c:	69bb      	ldr	r3, [r7, #24]
 801441e:	440b      	add	r3, r1
 8014420:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8014424:	691b      	ldr	r3, [r3, #16]
 8014426:	f3c3 0312 	ubfx	r3, r3, #0, #19
 801442a:	1ad2      	subs	r2, r2, r3
 801442c:	68fb      	ldr	r3, [r7, #12]
 801442e:	621a      	str	r2, [r3, #32]
 8014430:	683b      	ldr	r3, [r7, #0]
 8014432:	2b00      	cmp	r3, #0
 8014434:	d114      	bne.n	8014460 <PCD_EP_OutXfrComplete_int+0x120>
 8014436:	68fb      	ldr	r3, [r7, #12]
 8014438:	699b      	ldr	r3, [r3, #24]
 801443a:	2b00      	cmp	r3, #0
 801443c:	d109      	bne.n	8014452 <PCD_EP_OutXfrComplete_int+0x112>
 801443e:	687b      	ldr	r3, [r7, #4]
 8014440:	6818      	ldr	r0, [r3, #0]
 8014442:	687b      	ldr	r3, [r7, #4]
 8014444:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8014448:	461a      	mov	r2, r3
 801444a:	2101      	movs	r1, #1
 801444c:	f005 f8b4 	bl	80195b8 <USB_EP0_OutStart>
 8014450:	e006      	b.n	8014460 <PCD_EP_OutXfrComplete_int+0x120>
 8014452:	68fb      	ldr	r3, [r7, #12]
 8014454:	691a      	ldr	r2, [r3, #16]
 8014456:	68fb      	ldr	r3, [r7, #12]
 8014458:	6a1b      	ldr	r3, [r3, #32]
 801445a:	441a      	add	r2, r3
 801445c:	68fb      	ldr	r3, [r7, #12]
 801445e:	611a      	str	r2, [r3, #16]
 8014460:	683b      	ldr	r3, [r7, #0]
 8014462:	b2db      	uxtb	r3, r3
 8014464:	4619      	mov	r1, r3
 8014466:	6878      	ldr	r0, [r7, #4]
 8014468:	f00a fd4e 	bl	801ef08 <HAL_PCD_DataOutStageCallback>
 801446c:	e046      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 801446e:	697b      	ldr	r3, [r7, #20]
 8014470:	4a26      	ldr	r2, [pc, #152]	; (801450c <PCD_EP_OutXfrComplete_int+0x1cc>)
 8014472:	4293      	cmp	r3, r2
 8014474:	d124      	bne.n	80144c0 <PCD_EP_OutXfrComplete_int+0x180>
 8014476:	693b      	ldr	r3, [r7, #16]
 8014478:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 801447c:	2b00      	cmp	r3, #0
 801447e:	d00a      	beq.n	8014496 <PCD_EP_OutXfrComplete_int+0x156>
 8014480:	683b      	ldr	r3, [r7, #0]
 8014482:	015a      	lsls	r2, r3, #5
 8014484:	69bb      	ldr	r3, [r7, #24]
 8014486:	4413      	add	r3, r2
 8014488:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801448c:	461a      	mov	r2, r3
 801448e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014492:	6093      	str	r3, [r2, #8]
 8014494:	e032      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 8014496:	693b      	ldr	r3, [r7, #16]
 8014498:	f003 0320 	and.w	r3, r3, #32
 801449c:	2b00      	cmp	r3, #0
 801449e:	d008      	beq.n	80144b2 <PCD_EP_OutXfrComplete_int+0x172>
 80144a0:	683b      	ldr	r3, [r7, #0]
 80144a2:	015a      	lsls	r2, r3, #5
 80144a4:	69bb      	ldr	r3, [r7, #24]
 80144a6:	4413      	add	r3, r2
 80144a8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80144ac:	461a      	mov	r2, r3
 80144ae:	2320      	movs	r3, #32
 80144b0:	6093      	str	r3, [r2, #8]
 80144b2:	683b      	ldr	r3, [r7, #0]
 80144b4:	b2db      	uxtb	r3, r3
 80144b6:	4619      	mov	r1, r3
 80144b8:	6878      	ldr	r0, [r7, #4]
 80144ba:	f00a fd25 	bl	801ef08 <HAL_PCD_DataOutStageCallback>
 80144be:	e01d      	b.n	80144fc <PCD_EP_OutXfrComplete_int+0x1bc>
 80144c0:	683b      	ldr	r3, [r7, #0]
 80144c2:	2b00      	cmp	r3, #0
 80144c4:	d114      	bne.n	80144f0 <PCD_EP_OutXfrComplete_int+0x1b0>
 80144c6:	6879      	ldr	r1, [r7, #4]
 80144c8:	683a      	ldr	r2, [r7, #0]
 80144ca:	4613      	mov	r3, r2
 80144cc:	00db      	lsls	r3, r3, #3
 80144ce:	4413      	add	r3, r2
 80144d0:	009b      	lsls	r3, r3, #2
 80144d2:	440b      	add	r3, r1
 80144d4:	f503 7325 	add.w	r3, r3, #660	; 0x294
 80144d8:	681b      	ldr	r3, [r3, #0]
 80144da:	2b00      	cmp	r3, #0
 80144dc:	d108      	bne.n	80144f0 <PCD_EP_OutXfrComplete_int+0x1b0>
 80144de:	687b      	ldr	r3, [r7, #4]
 80144e0:	6818      	ldr	r0, [r3, #0]
 80144e2:	687b      	ldr	r3, [r7, #4]
 80144e4:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 80144e8:	461a      	mov	r2, r3
 80144ea:	2100      	movs	r1, #0
 80144ec:	f005 f864 	bl	80195b8 <USB_EP0_OutStart>
 80144f0:	683b      	ldr	r3, [r7, #0]
 80144f2:	b2db      	uxtb	r3, r3
 80144f4:	4619      	mov	r1, r3
 80144f6:	6878      	ldr	r0, [r7, #4]
 80144f8:	f00a fd06 	bl	801ef08 <HAL_PCD_DataOutStageCallback>
 80144fc:	2300      	movs	r3, #0
 80144fe:	4618      	mov	r0, r3
 8014500:	3720      	adds	r7, #32
 8014502:	46bd      	mov	sp, r7
 8014504:	bd80      	pop	{r7, pc}
 8014506:	bf00      	nop
 8014508:	4f54300a 	.word	0x4f54300a
 801450c:	4f54310a 	.word	0x4f54310a

08014510 <PCD_EP_OutSetupPacket_int>:
 8014510:	b580      	push	{r7, lr}
 8014512:	b086      	sub	sp, #24
 8014514:	af00      	add	r7, sp, #0
 8014516:	6078      	str	r0, [r7, #4]
 8014518:	6039      	str	r1, [r7, #0]
 801451a:	687b      	ldr	r3, [r7, #4]
 801451c:	681b      	ldr	r3, [r3, #0]
 801451e:	617b      	str	r3, [r7, #20]
 8014520:	697b      	ldr	r3, [r7, #20]
 8014522:	613b      	str	r3, [r7, #16]
 8014524:	697b      	ldr	r3, [r7, #20]
 8014526:	333c      	adds	r3, #60	; 0x3c
 8014528:	3304      	adds	r3, #4
 801452a:	681b      	ldr	r3, [r3, #0]
 801452c:	60fb      	str	r3, [r7, #12]
 801452e:	683b      	ldr	r3, [r7, #0]
 8014530:	015a      	lsls	r2, r3, #5
 8014532:	693b      	ldr	r3, [r7, #16]
 8014534:	4413      	add	r3, r2
 8014536:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801453a:	689b      	ldr	r3, [r3, #8]
 801453c:	60bb      	str	r3, [r7, #8]
 801453e:	68fb      	ldr	r3, [r7, #12]
 8014540:	4a15      	ldr	r2, [pc, #84]	; (8014598 <PCD_EP_OutSetupPacket_int+0x88>)
 8014542:	4293      	cmp	r3, r2
 8014544:	d90e      	bls.n	8014564 <PCD_EP_OutSetupPacket_int+0x54>
 8014546:	68bb      	ldr	r3, [r7, #8]
 8014548:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 801454c:	2b00      	cmp	r3, #0
 801454e:	d009      	beq.n	8014564 <PCD_EP_OutSetupPacket_int+0x54>
 8014550:	683b      	ldr	r3, [r7, #0]
 8014552:	015a      	lsls	r2, r3, #5
 8014554:	693b      	ldr	r3, [r7, #16]
 8014556:	4413      	add	r3, r2
 8014558:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801455c:	461a      	mov	r2, r3
 801455e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014562:	6093      	str	r3, [r2, #8]
 8014564:	6878      	ldr	r0, [r7, #4]
 8014566:	f00a fcbd 	bl	801eee4 <HAL_PCD_SetupStageCallback>
 801456a:	68fb      	ldr	r3, [r7, #12]
 801456c:	4a0a      	ldr	r2, [pc, #40]	; (8014598 <PCD_EP_OutSetupPacket_int+0x88>)
 801456e:	4293      	cmp	r3, r2
 8014570:	d90c      	bls.n	801458c <PCD_EP_OutSetupPacket_int+0x7c>
 8014572:	687b      	ldr	r3, [r7, #4]
 8014574:	691b      	ldr	r3, [r3, #16]
 8014576:	2b01      	cmp	r3, #1
 8014578:	d108      	bne.n	801458c <PCD_EP_OutSetupPacket_int+0x7c>
 801457a:	687b      	ldr	r3, [r7, #4]
 801457c:	6818      	ldr	r0, [r3, #0]
 801457e:	687b      	ldr	r3, [r7, #4]
 8014580:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8014584:	461a      	mov	r2, r3
 8014586:	2101      	movs	r1, #1
 8014588:	f005 f816 	bl	80195b8 <USB_EP0_OutStart>
 801458c:	2300      	movs	r3, #0
 801458e:	4618      	mov	r0, r3
 8014590:	3718      	adds	r7, #24
 8014592:	46bd      	mov	sp, r7
 8014594:	bd80      	pop	{r7, pc}
 8014596:	bf00      	nop
 8014598:	4f54300a 	.word	0x4f54300a

0801459c <HAL_PCDEx_SetTxFiFo>:
 801459c:	b480      	push	{r7}
 801459e:	b085      	sub	sp, #20
 80145a0:	af00      	add	r7, sp, #0
 80145a2:	6078      	str	r0, [r7, #4]
 80145a4:	460b      	mov	r3, r1
 80145a6:	70fb      	strb	r3, [r7, #3]
 80145a8:	4613      	mov	r3, r2
 80145aa:	803b      	strh	r3, [r7, #0]
 80145ac:	687b      	ldr	r3, [r7, #4]
 80145ae:	681b      	ldr	r3, [r3, #0]
 80145b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80145b2:	60bb      	str	r3, [r7, #8]
 80145b4:	78fb      	ldrb	r3, [r7, #3]
 80145b6:	2b00      	cmp	r3, #0
 80145b8:	d107      	bne.n	80145ca <HAL_PCDEx_SetTxFiFo+0x2e>
 80145ba:	883b      	ldrh	r3, [r7, #0]
 80145bc:	0419      	lsls	r1, r3, #16
 80145be:	687b      	ldr	r3, [r7, #4]
 80145c0:	681b      	ldr	r3, [r3, #0]
 80145c2:	68ba      	ldr	r2, [r7, #8]
 80145c4:	430a      	orrs	r2, r1
 80145c6:	629a      	str	r2, [r3, #40]	; 0x28
 80145c8:	e028      	b.n	801461c <HAL_PCDEx_SetTxFiFo+0x80>
 80145ca:	687b      	ldr	r3, [r7, #4]
 80145cc:	681b      	ldr	r3, [r3, #0]
 80145ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80145d0:	0c1b      	lsrs	r3, r3, #16
 80145d2:	68ba      	ldr	r2, [r7, #8]
 80145d4:	4413      	add	r3, r2
 80145d6:	60bb      	str	r3, [r7, #8]
 80145d8:	2300      	movs	r3, #0
 80145da:	73fb      	strb	r3, [r7, #15]
 80145dc:	e00d      	b.n	80145fa <HAL_PCDEx_SetTxFiFo+0x5e>
 80145de:	687b      	ldr	r3, [r7, #4]
 80145e0:	681a      	ldr	r2, [r3, #0]
 80145e2:	7bfb      	ldrb	r3, [r7, #15]
 80145e4:	3340      	adds	r3, #64	; 0x40
 80145e6:	009b      	lsls	r3, r3, #2
 80145e8:	4413      	add	r3, r2
 80145ea:	685b      	ldr	r3, [r3, #4]
 80145ec:	0c1b      	lsrs	r3, r3, #16
 80145ee:	68ba      	ldr	r2, [r7, #8]
 80145f0:	4413      	add	r3, r2
 80145f2:	60bb      	str	r3, [r7, #8]
 80145f4:	7bfb      	ldrb	r3, [r7, #15]
 80145f6:	3301      	adds	r3, #1
 80145f8:	73fb      	strb	r3, [r7, #15]
 80145fa:	7bfa      	ldrb	r2, [r7, #15]
 80145fc:	78fb      	ldrb	r3, [r7, #3]
 80145fe:	3b01      	subs	r3, #1
 8014600:	429a      	cmp	r2, r3
 8014602:	d3ec      	bcc.n	80145de <HAL_PCDEx_SetTxFiFo+0x42>
 8014604:	883b      	ldrh	r3, [r7, #0]
 8014606:	0418      	lsls	r0, r3, #16
 8014608:	687b      	ldr	r3, [r7, #4]
 801460a:	6819      	ldr	r1, [r3, #0]
 801460c:	78fb      	ldrb	r3, [r7, #3]
 801460e:	3b01      	subs	r3, #1
 8014610:	68ba      	ldr	r2, [r7, #8]
 8014612:	4302      	orrs	r2, r0
 8014614:	3340      	adds	r3, #64	; 0x40
 8014616:	009b      	lsls	r3, r3, #2
 8014618:	440b      	add	r3, r1
 801461a:	605a      	str	r2, [r3, #4]
 801461c:	2300      	movs	r3, #0
 801461e:	4618      	mov	r0, r3
 8014620:	3714      	adds	r7, #20
 8014622:	46bd      	mov	sp, r7
 8014624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014628:	4770      	bx	lr

0801462a <HAL_PCDEx_SetRxFiFo>:
 801462a:	b480      	push	{r7}
 801462c:	b083      	sub	sp, #12
 801462e:	af00      	add	r7, sp, #0
 8014630:	6078      	str	r0, [r7, #4]
 8014632:	460b      	mov	r3, r1
 8014634:	807b      	strh	r3, [r7, #2]
 8014636:	687b      	ldr	r3, [r7, #4]
 8014638:	681b      	ldr	r3, [r3, #0]
 801463a:	887a      	ldrh	r2, [r7, #2]
 801463c:	625a      	str	r2, [r3, #36]	; 0x24
 801463e:	2300      	movs	r3, #0
 8014640:	4618      	mov	r0, r3
 8014642:	370c      	adds	r7, #12
 8014644:	46bd      	mov	sp, r7
 8014646:	f85d 7b04 	ldr.w	r7, [sp], #4
 801464a:	4770      	bx	lr

0801464c <HAL_PCDEx_LPM_Callback>:
 801464c:	b480      	push	{r7}
 801464e:	b083      	sub	sp, #12
 8014650:	af00      	add	r7, sp, #0
 8014652:	6078      	str	r0, [r7, #4]
 8014654:	460b      	mov	r3, r1
 8014656:	70fb      	strb	r3, [r7, #3]
 8014658:	bf00      	nop
 801465a:	370c      	adds	r7, #12
 801465c:	46bd      	mov	sp, r7
 801465e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014662:	4770      	bx	lr

08014664 <HAL_RCC_OscConfig>:
 8014664:	b580      	push	{r7, lr}
 8014666:	b086      	sub	sp, #24
 8014668:	af00      	add	r7, sp, #0
 801466a:	6078      	str	r0, [r7, #4]
 801466c:	687b      	ldr	r3, [r7, #4]
 801466e:	2b00      	cmp	r3, #0
 8014670:	d101      	bne.n	8014676 <HAL_RCC_OscConfig+0x12>
 8014672:	2301      	movs	r3, #1
 8014674:	e267      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014676:	687b      	ldr	r3, [r7, #4]
 8014678:	681b      	ldr	r3, [r3, #0]
 801467a:	f003 0301 	and.w	r3, r3, #1
 801467e:	2b00      	cmp	r3, #0
 8014680:	d075      	beq.n	801476e <HAL_RCC_OscConfig+0x10a>
 8014682:	4b88      	ldr	r3, [pc, #544]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014684:	689b      	ldr	r3, [r3, #8]
 8014686:	f003 030c 	and.w	r3, r3, #12
 801468a:	2b04      	cmp	r3, #4
 801468c:	d00c      	beq.n	80146a8 <HAL_RCC_OscConfig+0x44>
 801468e:	4b85      	ldr	r3, [pc, #532]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014690:	689b      	ldr	r3, [r3, #8]
 8014692:	f003 030c 	and.w	r3, r3, #12
 8014696:	2b08      	cmp	r3, #8
 8014698:	d112      	bne.n	80146c0 <HAL_RCC_OscConfig+0x5c>
 801469a:	4b82      	ldr	r3, [pc, #520]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 801469c:	685b      	ldr	r3, [r3, #4]
 801469e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80146a2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80146a6:	d10b      	bne.n	80146c0 <HAL_RCC_OscConfig+0x5c>
 80146a8:	4b7e      	ldr	r3, [pc, #504]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146aa:	681b      	ldr	r3, [r3, #0]
 80146ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80146b0:	2b00      	cmp	r3, #0
 80146b2:	d05b      	beq.n	801476c <HAL_RCC_OscConfig+0x108>
 80146b4:	687b      	ldr	r3, [r7, #4]
 80146b6:	685b      	ldr	r3, [r3, #4]
 80146b8:	2b00      	cmp	r3, #0
 80146ba:	d157      	bne.n	801476c <HAL_RCC_OscConfig+0x108>
 80146bc:	2301      	movs	r3, #1
 80146be:	e242      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80146c0:	687b      	ldr	r3, [r7, #4]
 80146c2:	685b      	ldr	r3, [r3, #4]
 80146c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80146c8:	d106      	bne.n	80146d8 <HAL_RCC_OscConfig+0x74>
 80146ca:	4b76      	ldr	r3, [pc, #472]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146cc:	681b      	ldr	r3, [r3, #0]
 80146ce:	4a75      	ldr	r2, [pc, #468]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146d0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80146d4:	6013      	str	r3, [r2, #0]
 80146d6:	e01d      	b.n	8014714 <HAL_RCC_OscConfig+0xb0>
 80146d8:	687b      	ldr	r3, [r7, #4]
 80146da:	685b      	ldr	r3, [r3, #4]
 80146dc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80146e0:	d10c      	bne.n	80146fc <HAL_RCC_OscConfig+0x98>
 80146e2:	4b70      	ldr	r3, [pc, #448]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146e4:	681b      	ldr	r3, [r3, #0]
 80146e6:	4a6f      	ldr	r2, [pc, #444]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80146ec:	6013      	str	r3, [r2, #0]
 80146ee:	4b6d      	ldr	r3, [pc, #436]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146f0:	681b      	ldr	r3, [r3, #0]
 80146f2:	4a6c      	ldr	r2, [pc, #432]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80146f8:	6013      	str	r3, [r2, #0]
 80146fa:	e00b      	b.n	8014714 <HAL_RCC_OscConfig+0xb0>
 80146fc:	4b69      	ldr	r3, [pc, #420]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80146fe:	681b      	ldr	r3, [r3, #0]
 8014700:	4a68      	ldr	r2, [pc, #416]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014702:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8014706:	6013      	str	r3, [r2, #0]
 8014708:	4b66      	ldr	r3, [pc, #408]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 801470a:	681b      	ldr	r3, [r3, #0]
 801470c:	4a65      	ldr	r2, [pc, #404]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 801470e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8014712:	6013      	str	r3, [r2, #0]
 8014714:	687b      	ldr	r3, [r7, #4]
 8014716:	685b      	ldr	r3, [r3, #4]
 8014718:	2b00      	cmp	r3, #0
 801471a:	d013      	beq.n	8014744 <HAL_RCC_OscConfig+0xe0>
 801471c:	f7fa ffc2 	bl	800f6a4 <HAL_GetTick>
 8014720:	6138      	str	r0, [r7, #16]
 8014722:	e008      	b.n	8014736 <HAL_RCC_OscConfig+0xd2>
 8014724:	f7fa ffbe 	bl	800f6a4 <HAL_GetTick>
 8014728:	4602      	mov	r2, r0
 801472a:	693b      	ldr	r3, [r7, #16]
 801472c:	1ad3      	subs	r3, r2, r3
 801472e:	2b64      	cmp	r3, #100	; 0x64
 8014730:	d901      	bls.n	8014736 <HAL_RCC_OscConfig+0xd2>
 8014732:	2303      	movs	r3, #3
 8014734:	e207      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014736:	4b5b      	ldr	r3, [pc, #364]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014738:	681b      	ldr	r3, [r3, #0]
 801473a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801473e:	2b00      	cmp	r3, #0
 8014740:	d0f0      	beq.n	8014724 <HAL_RCC_OscConfig+0xc0>
 8014742:	e014      	b.n	801476e <HAL_RCC_OscConfig+0x10a>
 8014744:	f7fa ffae 	bl	800f6a4 <HAL_GetTick>
 8014748:	6138      	str	r0, [r7, #16]
 801474a:	e008      	b.n	801475e <HAL_RCC_OscConfig+0xfa>
 801474c:	f7fa ffaa 	bl	800f6a4 <HAL_GetTick>
 8014750:	4602      	mov	r2, r0
 8014752:	693b      	ldr	r3, [r7, #16]
 8014754:	1ad3      	subs	r3, r2, r3
 8014756:	2b64      	cmp	r3, #100	; 0x64
 8014758:	d901      	bls.n	801475e <HAL_RCC_OscConfig+0xfa>
 801475a:	2303      	movs	r3, #3
 801475c:	e1f3      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 801475e:	4b51      	ldr	r3, [pc, #324]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014760:	681b      	ldr	r3, [r3, #0]
 8014762:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8014766:	2b00      	cmp	r3, #0
 8014768:	d1f0      	bne.n	801474c <HAL_RCC_OscConfig+0xe8>
 801476a:	e000      	b.n	801476e <HAL_RCC_OscConfig+0x10a>
 801476c:	bf00      	nop
 801476e:	687b      	ldr	r3, [r7, #4]
 8014770:	681b      	ldr	r3, [r3, #0]
 8014772:	f003 0302 	and.w	r3, r3, #2
 8014776:	2b00      	cmp	r3, #0
 8014778:	d063      	beq.n	8014842 <HAL_RCC_OscConfig+0x1de>
 801477a:	4b4a      	ldr	r3, [pc, #296]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 801477c:	689b      	ldr	r3, [r3, #8]
 801477e:	f003 030c 	and.w	r3, r3, #12
 8014782:	2b00      	cmp	r3, #0
 8014784:	d00b      	beq.n	801479e <HAL_RCC_OscConfig+0x13a>
 8014786:	4b47      	ldr	r3, [pc, #284]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014788:	689b      	ldr	r3, [r3, #8]
 801478a:	f003 030c 	and.w	r3, r3, #12
 801478e:	2b08      	cmp	r3, #8
 8014790:	d11c      	bne.n	80147cc <HAL_RCC_OscConfig+0x168>
 8014792:	4b44      	ldr	r3, [pc, #272]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014794:	685b      	ldr	r3, [r3, #4]
 8014796:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801479a:	2b00      	cmp	r3, #0
 801479c:	d116      	bne.n	80147cc <HAL_RCC_OscConfig+0x168>
 801479e:	4b41      	ldr	r3, [pc, #260]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80147a0:	681b      	ldr	r3, [r3, #0]
 80147a2:	f003 0302 	and.w	r3, r3, #2
 80147a6:	2b00      	cmp	r3, #0
 80147a8:	d005      	beq.n	80147b6 <HAL_RCC_OscConfig+0x152>
 80147aa:	687b      	ldr	r3, [r7, #4]
 80147ac:	68db      	ldr	r3, [r3, #12]
 80147ae:	2b01      	cmp	r3, #1
 80147b0:	d001      	beq.n	80147b6 <HAL_RCC_OscConfig+0x152>
 80147b2:	2301      	movs	r3, #1
 80147b4:	e1c7      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80147b6:	4b3b      	ldr	r3, [pc, #236]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80147b8:	681b      	ldr	r3, [r3, #0]
 80147ba:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80147be:	687b      	ldr	r3, [r7, #4]
 80147c0:	691b      	ldr	r3, [r3, #16]
 80147c2:	00db      	lsls	r3, r3, #3
 80147c4:	4937      	ldr	r1, [pc, #220]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80147c6:	4313      	orrs	r3, r2
 80147c8:	600b      	str	r3, [r1, #0]
 80147ca:	e03a      	b.n	8014842 <HAL_RCC_OscConfig+0x1de>
 80147cc:	687b      	ldr	r3, [r7, #4]
 80147ce:	68db      	ldr	r3, [r3, #12]
 80147d0:	2b00      	cmp	r3, #0
 80147d2:	d020      	beq.n	8014816 <HAL_RCC_OscConfig+0x1b2>
 80147d4:	4b34      	ldr	r3, [pc, #208]	; (80148a8 <HAL_RCC_OscConfig+0x244>)
 80147d6:	2201      	movs	r2, #1
 80147d8:	601a      	str	r2, [r3, #0]
 80147da:	f7fa ff63 	bl	800f6a4 <HAL_GetTick>
 80147de:	6138      	str	r0, [r7, #16]
 80147e0:	e008      	b.n	80147f4 <HAL_RCC_OscConfig+0x190>
 80147e2:	f7fa ff5f 	bl	800f6a4 <HAL_GetTick>
 80147e6:	4602      	mov	r2, r0
 80147e8:	693b      	ldr	r3, [r7, #16]
 80147ea:	1ad3      	subs	r3, r2, r3
 80147ec:	2b02      	cmp	r3, #2
 80147ee:	d901      	bls.n	80147f4 <HAL_RCC_OscConfig+0x190>
 80147f0:	2303      	movs	r3, #3
 80147f2:	e1a8      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80147f4:	4b2b      	ldr	r3, [pc, #172]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 80147f6:	681b      	ldr	r3, [r3, #0]
 80147f8:	f003 0302 	and.w	r3, r3, #2
 80147fc:	2b00      	cmp	r3, #0
 80147fe:	d0f0      	beq.n	80147e2 <HAL_RCC_OscConfig+0x17e>
 8014800:	4b28      	ldr	r3, [pc, #160]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014802:	681b      	ldr	r3, [r3, #0]
 8014804:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8014808:	687b      	ldr	r3, [r7, #4]
 801480a:	691b      	ldr	r3, [r3, #16]
 801480c:	00db      	lsls	r3, r3, #3
 801480e:	4925      	ldr	r1, [pc, #148]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014810:	4313      	orrs	r3, r2
 8014812:	600b      	str	r3, [r1, #0]
 8014814:	e015      	b.n	8014842 <HAL_RCC_OscConfig+0x1de>
 8014816:	4b24      	ldr	r3, [pc, #144]	; (80148a8 <HAL_RCC_OscConfig+0x244>)
 8014818:	2200      	movs	r2, #0
 801481a:	601a      	str	r2, [r3, #0]
 801481c:	f7fa ff42 	bl	800f6a4 <HAL_GetTick>
 8014820:	6138      	str	r0, [r7, #16]
 8014822:	e008      	b.n	8014836 <HAL_RCC_OscConfig+0x1d2>
 8014824:	f7fa ff3e 	bl	800f6a4 <HAL_GetTick>
 8014828:	4602      	mov	r2, r0
 801482a:	693b      	ldr	r3, [r7, #16]
 801482c:	1ad3      	subs	r3, r2, r3
 801482e:	2b02      	cmp	r3, #2
 8014830:	d901      	bls.n	8014836 <HAL_RCC_OscConfig+0x1d2>
 8014832:	2303      	movs	r3, #3
 8014834:	e187      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014836:	4b1b      	ldr	r3, [pc, #108]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014838:	681b      	ldr	r3, [r3, #0]
 801483a:	f003 0302 	and.w	r3, r3, #2
 801483e:	2b00      	cmp	r3, #0
 8014840:	d1f0      	bne.n	8014824 <HAL_RCC_OscConfig+0x1c0>
 8014842:	687b      	ldr	r3, [r7, #4]
 8014844:	681b      	ldr	r3, [r3, #0]
 8014846:	f003 0308 	and.w	r3, r3, #8
 801484a:	2b00      	cmp	r3, #0
 801484c:	d036      	beq.n	80148bc <HAL_RCC_OscConfig+0x258>
 801484e:	687b      	ldr	r3, [r7, #4]
 8014850:	695b      	ldr	r3, [r3, #20]
 8014852:	2b00      	cmp	r3, #0
 8014854:	d016      	beq.n	8014884 <HAL_RCC_OscConfig+0x220>
 8014856:	4b15      	ldr	r3, [pc, #84]	; (80148ac <HAL_RCC_OscConfig+0x248>)
 8014858:	2201      	movs	r2, #1
 801485a:	601a      	str	r2, [r3, #0]
 801485c:	f7fa ff22 	bl	800f6a4 <HAL_GetTick>
 8014860:	6138      	str	r0, [r7, #16]
 8014862:	e008      	b.n	8014876 <HAL_RCC_OscConfig+0x212>
 8014864:	f7fa ff1e 	bl	800f6a4 <HAL_GetTick>
 8014868:	4602      	mov	r2, r0
 801486a:	693b      	ldr	r3, [r7, #16]
 801486c:	1ad3      	subs	r3, r2, r3
 801486e:	2b02      	cmp	r3, #2
 8014870:	d901      	bls.n	8014876 <HAL_RCC_OscConfig+0x212>
 8014872:	2303      	movs	r3, #3
 8014874:	e167      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014876:	4b0b      	ldr	r3, [pc, #44]	; (80148a4 <HAL_RCC_OscConfig+0x240>)
 8014878:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801487a:	f003 0302 	and.w	r3, r3, #2
 801487e:	2b00      	cmp	r3, #0
 8014880:	d0f0      	beq.n	8014864 <HAL_RCC_OscConfig+0x200>
 8014882:	e01b      	b.n	80148bc <HAL_RCC_OscConfig+0x258>
 8014884:	4b09      	ldr	r3, [pc, #36]	; (80148ac <HAL_RCC_OscConfig+0x248>)
 8014886:	2200      	movs	r2, #0
 8014888:	601a      	str	r2, [r3, #0]
 801488a:	f7fa ff0b 	bl	800f6a4 <HAL_GetTick>
 801488e:	6138      	str	r0, [r7, #16]
 8014890:	e00e      	b.n	80148b0 <HAL_RCC_OscConfig+0x24c>
 8014892:	f7fa ff07 	bl	800f6a4 <HAL_GetTick>
 8014896:	4602      	mov	r2, r0
 8014898:	693b      	ldr	r3, [r7, #16]
 801489a:	1ad3      	subs	r3, r2, r3
 801489c:	2b02      	cmp	r3, #2
 801489e:	d907      	bls.n	80148b0 <HAL_RCC_OscConfig+0x24c>
 80148a0:	2303      	movs	r3, #3
 80148a2:	e150      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80148a4:	40023800 	.word	0x40023800
 80148a8:	42470000 	.word	0x42470000
 80148ac:	42470e80 	.word	0x42470e80
 80148b0:	4b88      	ldr	r3, [pc, #544]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80148b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80148b4:	f003 0302 	and.w	r3, r3, #2
 80148b8:	2b00      	cmp	r3, #0
 80148ba:	d1ea      	bne.n	8014892 <HAL_RCC_OscConfig+0x22e>
 80148bc:	687b      	ldr	r3, [r7, #4]
 80148be:	681b      	ldr	r3, [r3, #0]
 80148c0:	f003 0304 	and.w	r3, r3, #4
 80148c4:	2b00      	cmp	r3, #0
 80148c6:	f000 8097 	beq.w	80149f8 <HAL_RCC_OscConfig+0x394>
 80148ca:	2300      	movs	r3, #0
 80148cc:	75fb      	strb	r3, [r7, #23]
 80148ce:	4b81      	ldr	r3, [pc, #516]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80148d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80148d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80148d6:	2b00      	cmp	r3, #0
 80148d8:	d10f      	bne.n	80148fa <HAL_RCC_OscConfig+0x296>
 80148da:	2300      	movs	r3, #0
 80148dc:	60bb      	str	r3, [r7, #8]
 80148de:	4b7d      	ldr	r3, [pc, #500]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80148e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80148e2:	4a7c      	ldr	r2, [pc, #496]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80148e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80148e8:	6413      	str	r3, [r2, #64]	; 0x40
 80148ea:	4b7a      	ldr	r3, [pc, #488]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80148ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80148ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80148f2:	60bb      	str	r3, [r7, #8]
 80148f4:	68bb      	ldr	r3, [r7, #8]
 80148f6:	2301      	movs	r3, #1
 80148f8:	75fb      	strb	r3, [r7, #23]
 80148fa:	4b77      	ldr	r3, [pc, #476]	; (8014ad8 <HAL_RCC_OscConfig+0x474>)
 80148fc:	681b      	ldr	r3, [r3, #0]
 80148fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014902:	2b00      	cmp	r3, #0
 8014904:	d118      	bne.n	8014938 <HAL_RCC_OscConfig+0x2d4>
 8014906:	4b74      	ldr	r3, [pc, #464]	; (8014ad8 <HAL_RCC_OscConfig+0x474>)
 8014908:	681b      	ldr	r3, [r3, #0]
 801490a:	4a73      	ldr	r2, [pc, #460]	; (8014ad8 <HAL_RCC_OscConfig+0x474>)
 801490c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014910:	6013      	str	r3, [r2, #0]
 8014912:	f7fa fec7 	bl	800f6a4 <HAL_GetTick>
 8014916:	6138      	str	r0, [r7, #16]
 8014918:	e008      	b.n	801492c <HAL_RCC_OscConfig+0x2c8>
 801491a:	f7fa fec3 	bl	800f6a4 <HAL_GetTick>
 801491e:	4602      	mov	r2, r0
 8014920:	693b      	ldr	r3, [r7, #16]
 8014922:	1ad3      	subs	r3, r2, r3
 8014924:	2b02      	cmp	r3, #2
 8014926:	d901      	bls.n	801492c <HAL_RCC_OscConfig+0x2c8>
 8014928:	2303      	movs	r3, #3
 801492a:	e10c      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 801492c:	4b6a      	ldr	r3, [pc, #424]	; (8014ad8 <HAL_RCC_OscConfig+0x474>)
 801492e:	681b      	ldr	r3, [r3, #0]
 8014930:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014934:	2b00      	cmp	r3, #0
 8014936:	d0f0      	beq.n	801491a <HAL_RCC_OscConfig+0x2b6>
 8014938:	687b      	ldr	r3, [r7, #4]
 801493a:	689b      	ldr	r3, [r3, #8]
 801493c:	2b01      	cmp	r3, #1
 801493e:	d106      	bne.n	801494e <HAL_RCC_OscConfig+0x2ea>
 8014940:	4b64      	ldr	r3, [pc, #400]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014942:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014944:	4a63      	ldr	r2, [pc, #396]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014946:	f043 0301 	orr.w	r3, r3, #1
 801494a:	6713      	str	r3, [r2, #112]	; 0x70
 801494c:	e01c      	b.n	8014988 <HAL_RCC_OscConfig+0x324>
 801494e:	687b      	ldr	r3, [r7, #4]
 8014950:	689b      	ldr	r3, [r3, #8]
 8014952:	2b05      	cmp	r3, #5
 8014954:	d10c      	bne.n	8014970 <HAL_RCC_OscConfig+0x30c>
 8014956:	4b5f      	ldr	r3, [pc, #380]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014958:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801495a:	4a5e      	ldr	r2, [pc, #376]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 801495c:	f043 0304 	orr.w	r3, r3, #4
 8014960:	6713      	str	r3, [r2, #112]	; 0x70
 8014962:	4b5c      	ldr	r3, [pc, #368]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014964:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014966:	4a5b      	ldr	r2, [pc, #364]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014968:	f043 0301 	orr.w	r3, r3, #1
 801496c:	6713      	str	r3, [r2, #112]	; 0x70
 801496e:	e00b      	b.n	8014988 <HAL_RCC_OscConfig+0x324>
 8014970:	4b58      	ldr	r3, [pc, #352]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014972:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014974:	4a57      	ldr	r2, [pc, #348]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014976:	f023 0301 	bic.w	r3, r3, #1
 801497a:	6713      	str	r3, [r2, #112]	; 0x70
 801497c:	4b55      	ldr	r3, [pc, #340]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 801497e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014980:	4a54      	ldr	r2, [pc, #336]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014982:	f023 0304 	bic.w	r3, r3, #4
 8014986:	6713      	str	r3, [r2, #112]	; 0x70
 8014988:	687b      	ldr	r3, [r7, #4]
 801498a:	689b      	ldr	r3, [r3, #8]
 801498c:	2b00      	cmp	r3, #0
 801498e:	d015      	beq.n	80149bc <HAL_RCC_OscConfig+0x358>
 8014990:	f7fa fe88 	bl	800f6a4 <HAL_GetTick>
 8014994:	6138      	str	r0, [r7, #16]
 8014996:	e00a      	b.n	80149ae <HAL_RCC_OscConfig+0x34a>
 8014998:	f7fa fe84 	bl	800f6a4 <HAL_GetTick>
 801499c:	4602      	mov	r2, r0
 801499e:	693b      	ldr	r3, [r7, #16]
 80149a0:	1ad3      	subs	r3, r2, r3
 80149a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80149a6:	4293      	cmp	r3, r2
 80149a8:	d901      	bls.n	80149ae <HAL_RCC_OscConfig+0x34a>
 80149aa:	2303      	movs	r3, #3
 80149ac:	e0cb      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80149ae:	4b49      	ldr	r3, [pc, #292]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80149b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80149b2:	f003 0302 	and.w	r3, r3, #2
 80149b6:	2b00      	cmp	r3, #0
 80149b8:	d0ee      	beq.n	8014998 <HAL_RCC_OscConfig+0x334>
 80149ba:	e014      	b.n	80149e6 <HAL_RCC_OscConfig+0x382>
 80149bc:	f7fa fe72 	bl	800f6a4 <HAL_GetTick>
 80149c0:	6138      	str	r0, [r7, #16]
 80149c2:	e00a      	b.n	80149da <HAL_RCC_OscConfig+0x376>
 80149c4:	f7fa fe6e 	bl	800f6a4 <HAL_GetTick>
 80149c8:	4602      	mov	r2, r0
 80149ca:	693b      	ldr	r3, [r7, #16]
 80149cc:	1ad3      	subs	r3, r2, r3
 80149ce:	f241 3288 	movw	r2, #5000	; 0x1388
 80149d2:	4293      	cmp	r3, r2
 80149d4:	d901      	bls.n	80149da <HAL_RCC_OscConfig+0x376>
 80149d6:	2303      	movs	r3, #3
 80149d8:	e0b5      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 80149da:	4b3e      	ldr	r3, [pc, #248]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80149dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80149de:	f003 0302 	and.w	r3, r3, #2
 80149e2:	2b00      	cmp	r3, #0
 80149e4:	d1ee      	bne.n	80149c4 <HAL_RCC_OscConfig+0x360>
 80149e6:	7dfb      	ldrb	r3, [r7, #23]
 80149e8:	2b01      	cmp	r3, #1
 80149ea:	d105      	bne.n	80149f8 <HAL_RCC_OscConfig+0x394>
 80149ec:	4b39      	ldr	r3, [pc, #228]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80149ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80149f0:	4a38      	ldr	r2, [pc, #224]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 80149f2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80149f6:	6413      	str	r3, [r2, #64]	; 0x40
 80149f8:	687b      	ldr	r3, [r7, #4]
 80149fa:	699b      	ldr	r3, [r3, #24]
 80149fc:	2b00      	cmp	r3, #0
 80149fe:	f000 80a1 	beq.w	8014b44 <HAL_RCC_OscConfig+0x4e0>
 8014a02:	4b34      	ldr	r3, [pc, #208]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014a04:	689b      	ldr	r3, [r3, #8]
 8014a06:	f003 030c 	and.w	r3, r3, #12
 8014a0a:	2b08      	cmp	r3, #8
 8014a0c:	d05c      	beq.n	8014ac8 <HAL_RCC_OscConfig+0x464>
 8014a0e:	687b      	ldr	r3, [r7, #4]
 8014a10:	699b      	ldr	r3, [r3, #24]
 8014a12:	2b02      	cmp	r3, #2
 8014a14:	d141      	bne.n	8014a9a <HAL_RCC_OscConfig+0x436>
 8014a16:	4b31      	ldr	r3, [pc, #196]	; (8014adc <HAL_RCC_OscConfig+0x478>)
 8014a18:	2200      	movs	r2, #0
 8014a1a:	601a      	str	r2, [r3, #0]
 8014a1c:	f7fa fe42 	bl	800f6a4 <HAL_GetTick>
 8014a20:	6138      	str	r0, [r7, #16]
 8014a22:	e008      	b.n	8014a36 <HAL_RCC_OscConfig+0x3d2>
 8014a24:	f7fa fe3e 	bl	800f6a4 <HAL_GetTick>
 8014a28:	4602      	mov	r2, r0
 8014a2a:	693b      	ldr	r3, [r7, #16]
 8014a2c:	1ad3      	subs	r3, r2, r3
 8014a2e:	2b02      	cmp	r3, #2
 8014a30:	d901      	bls.n	8014a36 <HAL_RCC_OscConfig+0x3d2>
 8014a32:	2303      	movs	r3, #3
 8014a34:	e087      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014a36:	4b27      	ldr	r3, [pc, #156]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014a38:	681b      	ldr	r3, [r3, #0]
 8014a3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8014a3e:	2b00      	cmp	r3, #0
 8014a40:	d1f0      	bne.n	8014a24 <HAL_RCC_OscConfig+0x3c0>
 8014a42:	687b      	ldr	r3, [r7, #4]
 8014a44:	69da      	ldr	r2, [r3, #28]
 8014a46:	687b      	ldr	r3, [r7, #4]
 8014a48:	6a1b      	ldr	r3, [r3, #32]
 8014a4a:	431a      	orrs	r2, r3
 8014a4c:	687b      	ldr	r3, [r7, #4]
 8014a4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014a50:	019b      	lsls	r3, r3, #6
 8014a52:	431a      	orrs	r2, r3
 8014a54:	687b      	ldr	r3, [r7, #4]
 8014a56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014a58:	085b      	lsrs	r3, r3, #1
 8014a5a:	3b01      	subs	r3, #1
 8014a5c:	041b      	lsls	r3, r3, #16
 8014a5e:	431a      	orrs	r2, r3
 8014a60:	687b      	ldr	r3, [r7, #4]
 8014a62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014a64:	061b      	lsls	r3, r3, #24
 8014a66:	491b      	ldr	r1, [pc, #108]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014a68:	4313      	orrs	r3, r2
 8014a6a:	604b      	str	r3, [r1, #4]
 8014a6c:	4b1b      	ldr	r3, [pc, #108]	; (8014adc <HAL_RCC_OscConfig+0x478>)
 8014a6e:	2201      	movs	r2, #1
 8014a70:	601a      	str	r2, [r3, #0]
 8014a72:	f7fa fe17 	bl	800f6a4 <HAL_GetTick>
 8014a76:	6138      	str	r0, [r7, #16]
 8014a78:	e008      	b.n	8014a8c <HAL_RCC_OscConfig+0x428>
 8014a7a:	f7fa fe13 	bl	800f6a4 <HAL_GetTick>
 8014a7e:	4602      	mov	r2, r0
 8014a80:	693b      	ldr	r3, [r7, #16]
 8014a82:	1ad3      	subs	r3, r2, r3
 8014a84:	2b02      	cmp	r3, #2
 8014a86:	d901      	bls.n	8014a8c <HAL_RCC_OscConfig+0x428>
 8014a88:	2303      	movs	r3, #3
 8014a8a:	e05c      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014a8c:	4b11      	ldr	r3, [pc, #68]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014a8e:	681b      	ldr	r3, [r3, #0]
 8014a90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8014a94:	2b00      	cmp	r3, #0
 8014a96:	d0f0      	beq.n	8014a7a <HAL_RCC_OscConfig+0x416>
 8014a98:	e054      	b.n	8014b44 <HAL_RCC_OscConfig+0x4e0>
 8014a9a:	4b10      	ldr	r3, [pc, #64]	; (8014adc <HAL_RCC_OscConfig+0x478>)
 8014a9c:	2200      	movs	r2, #0
 8014a9e:	601a      	str	r2, [r3, #0]
 8014aa0:	f7fa fe00 	bl	800f6a4 <HAL_GetTick>
 8014aa4:	6138      	str	r0, [r7, #16]
 8014aa6:	e008      	b.n	8014aba <HAL_RCC_OscConfig+0x456>
 8014aa8:	f7fa fdfc 	bl	800f6a4 <HAL_GetTick>
 8014aac:	4602      	mov	r2, r0
 8014aae:	693b      	ldr	r3, [r7, #16]
 8014ab0:	1ad3      	subs	r3, r2, r3
 8014ab2:	2b02      	cmp	r3, #2
 8014ab4:	d901      	bls.n	8014aba <HAL_RCC_OscConfig+0x456>
 8014ab6:	2303      	movs	r3, #3
 8014ab8:	e045      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014aba:	4b06      	ldr	r3, [pc, #24]	; (8014ad4 <HAL_RCC_OscConfig+0x470>)
 8014abc:	681b      	ldr	r3, [r3, #0]
 8014abe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8014ac2:	2b00      	cmp	r3, #0
 8014ac4:	d1f0      	bne.n	8014aa8 <HAL_RCC_OscConfig+0x444>
 8014ac6:	e03d      	b.n	8014b44 <HAL_RCC_OscConfig+0x4e0>
 8014ac8:	687b      	ldr	r3, [r7, #4]
 8014aca:	699b      	ldr	r3, [r3, #24]
 8014acc:	2b01      	cmp	r3, #1
 8014ace:	d107      	bne.n	8014ae0 <HAL_RCC_OscConfig+0x47c>
 8014ad0:	2301      	movs	r3, #1
 8014ad2:	e038      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014ad4:	40023800 	.word	0x40023800
 8014ad8:	40007000 	.word	0x40007000
 8014adc:	42470060 	.word	0x42470060
 8014ae0:	4b1b      	ldr	r3, [pc, #108]	; (8014b50 <HAL_RCC_OscConfig+0x4ec>)
 8014ae2:	685b      	ldr	r3, [r3, #4]
 8014ae4:	60fb      	str	r3, [r7, #12]
 8014ae6:	687b      	ldr	r3, [r7, #4]
 8014ae8:	699b      	ldr	r3, [r3, #24]
 8014aea:	2b01      	cmp	r3, #1
 8014aec:	d028      	beq.n	8014b40 <HAL_RCC_OscConfig+0x4dc>
 8014aee:	68fb      	ldr	r3, [r7, #12]
 8014af0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8014af4:	687b      	ldr	r3, [r7, #4]
 8014af6:	69db      	ldr	r3, [r3, #28]
 8014af8:	429a      	cmp	r2, r3
 8014afa:	d121      	bne.n	8014b40 <HAL_RCC_OscConfig+0x4dc>
 8014afc:	68fb      	ldr	r3, [r7, #12]
 8014afe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8014b02:	687b      	ldr	r3, [r7, #4]
 8014b04:	6a1b      	ldr	r3, [r3, #32]
 8014b06:	429a      	cmp	r2, r3
 8014b08:	d11a      	bne.n	8014b40 <HAL_RCC_OscConfig+0x4dc>
 8014b0a:	68fa      	ldr	r2, [r7, #12]
 8014b0c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8014b10:	4013      	ands	r3, r2
 8014b12:	687a      	ldr	r2, [r7, #4]
 8014b14:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8014b16:	0192      	lsls	r2, r2, #6
 8014b18:	4293      	cmp	r3, r2
 8014b1a:	d111      	bne.n	8014b40 <HAL_RCC_OscConfig+0x4dc>
 8014b1c:	68fb      	ldr	r3, [r7, #12]
 8014b1e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8014b22:	687b      	ldr	r3, [r7, #4]
 8014b24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014b26:	085b      	lsrs	r3, r3, #1
 8014b28:	3b01      	subs	r3, #1
 8014b2a:	041b      	lsls	r3, r3, #16
 8014b2c:	429a      	cmp	r2, r3
 8014b2e:	d107      	bne.n	8014b40 <HAL_RCC_OscConfig+0x4dc>
 8014b30:	68fb      	ldr	r3, [r7, #12]
 8014b32:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8014b36:	687b      	ldr	r3, [r7, #4]
 8014b38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b3a:	061b      	lsls	r3, r3, #24
 8014b3c:	429a      	cmp	r2, r3
 8014b3e:	d001      	beq.n	8014b44 <HAL_RCC_OscConfig+0x4e0>
 8014b40:	2301      	movs	r3, #1
 8014b42:	e000      	b.n	8014b46 <HAL_RCC_OscConfig+0x4e2>
 8014b44:	2300      	movs	r3, #0
 8014b46:	4618      	mov	r0, r3
 8014b48:	3718      	adds	r7, #24
 8014b4a:	46bd      	mov	sp, r7
 8014b4c:	bd80      	pop	{r7, pc}
 8014b4e:	bf00      	nop
 8014b50:	40023800 	.word	0x40023800

08014b54 <HAL_RCC_ClockConfig>:
 8014b54:	b580      	push	{r7, lr}
 8014b56:	b084      	sub	sp, #16
 8014b58:	af00      	add	r7, sp, #0
 8014b5a:	6078      	str	r0, [r7, #4]
 8014b5c:	6039      	str	r1, [r7, #0]
 8014b5e:	687b      	ldr	r3, [r7, #4]
 8014b60:	2b00      	cmp	r3, #0
 8014b62:	d101      	bne.n	8014b68 <HAL_RCC_ClockConfig+0x14>
 8014b64:	2301      	movs	r3, #1
 8014b66:	e0cc      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014b68:	4b68      	ldr	r3, [pc, #416]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014b6a:	681b      	ldr	r3, [r3, #0]
 8014b6c:	f003 0307 	and.w	r3, r3, #7
 8014b70:	683a      	ldr	r2, [r7, #0]
 8014b72:	429a      	cmp	r2, r3
 8014b74:	d90c      	bls.n	8014b90 <HAL_RCC_ClockConfig+0x3c>
 8014b76:	4b65      	ldr	r3, [pc, #404]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014b78:	683a      	ldr	r2, [r7, #0]
 8014b7a:	b2d2      	uxtb	r2, r2
 8014b7c:	701a      	strb	r2, [r3, #0]
 8014b7e:	4b63      	ldr	r3, [pc, #396]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014b80:	681b      	ldr	r3, [r3, #0]
 8014b82:	f003 0307 	and.w	r3, r3, #7
 8014b86:	683a      	ldr	r2, [r7, #0]
 8014b88:	429a      	cmp	r2, r3
 8014b8a:	d001      	beq.n	8014b90 <HAL_RCC_ClockConfig+0x3c>
 8014b8c:	2301      	movs	r3, #1
 8014b8e:	e0b8      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014b90:	687b      	ldr	r3, [r7, #4]
 8014b92:	681b      	ldr	r3, [r3, #0]
 8014b94:	f003 0302 	and.w	r3, r3, #2
 8014b98:	2b00      	cmp	r3, #0
 8014b9a:	d020      	beq.n	8014bde <HAL_RCC_ClockConfig+0x8a>
 8014b9c:	687b      	ldr	r3, [r7, #4]
 8014b9e:	681b      	ldr	r3, [r3, #0]
 8014ba0:	f003 0304 	and.w	r3, r3, #4
 8014ba4:	2b00      	cmp	r3, #0
 8014ba6:	d005      	beq.n	8014bb4 <HAL_RCC_ClockConfig+0x60>
 8014ba8:	4b59      	ldr	r3, [pc, #356]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014baa:	689b      	ldr	r3, [r3, #8]
 8014bac:	4a58      	ldr	r2, [pc, #352]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bae:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8014bb2:	6093      	str	r3, [r2, #8]
 8014bb4:	687b      	ldr	r3, [r7, #4]
 8014bb6:	681b      	ldr	r3, [r3, #0]
 8014bb8:	f003 0308 	and.w	r3, r3, #8
 8014bbc:	2b00      	cmp	r3, #0
 8014bbe:	d005      	beq.n	8014bcc <HAL_RCC_ClockConfig+0x78>
 8014bc0:	4b53      	ldr	r3, [pc, #332]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bc2:	689b      	ldr	r3, [r3, #8]
 8014bc4:	4a52      	ldr	r2, [pc, #328]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bc6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8014bca:	6093      	str	r3, [r2, #8]
 8014bcc:	4b50      	ldr	r3, [pc, #320]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bce:	689b      	ldr	r3, [r3, #8]
 8014bd0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8014bd4:	687b      	ldr	r3, [r7, #4]
 8014bd6:	689b      	ldr	r3, [r3, #8]
 8014bd8:	494d      	ldr	r1, [pc, #308]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bda:	4313      	orrs	r3, r2
 8014bdc:	608b      	str	r3, [r1, #8]
 8014bde:	687b      	ldr	r3, [r7, #4]
 8014be0:	681b      	ldr	r3, [r3, #0]
 8014be2:	f003 0301 	and.w	r3, r3, #1
 8014be6:	2b00      	cmp	r3, #0
 8014be8:	d044      	beq.n	8014c74 <HAL_RCC_ClockConfig+0x120>
 8014bea:	687b      	ldr	r3, [r7, #4]
 8014bec:	685b      	ldr	r3, [r3, #4]
 8014bee:	2b01      	cmp	r3, #1
 8014bf0:	d107      	bne.n	8014c02 <HAL_RCC_ClockConfig+0xae>
 8014bf2:	4b47      	ldr	r3, [pc, #284]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014bf4:	681b      	ldr	r3, [r3, #0]
 8014bf6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8014bfa:	2b00      	cmp	r3, #0
 8014bfc:	d119      	bne.n	8014c32 <HAL_RCC_ClockConfig+0xde>
 8014bfe:	2301      	movs	r3, #1
 8014c00:	e07f      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014c02:	687b      	ldr	r3, [r7, #4]
 8014c04:	685b      	ldr	r3, [r3, #4]
 8014c06:	2b02      	cmp	r3, #2
 8014c08:	d003      	beq.n	8014c12 <HAL_RCC_ClockConfig+0xbe>
 8014c0a:	687b      	ldr	r3, [r7, #4]
 8014c0c:	685b      	ldr	r3, [r3, #4]
 8014c0e:	2b03      	cmp	r3, #3
 8014c10:	d107      	bne.n	8014c22 <HAL_RCC_ClockConfig+0xce>
 8014c12:	4b3f      	ldr	r3, [pc, #252]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014c14:	681b      	ldr	r3, [r3, #0]
 8014c16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8014c1a:	2b00      	cmp	r3, #0
 8014c1c:	d109      	bne.n	8014c32 <HAL_RCC_ClockConfig+0xde>
 8014c1e:	2301      	movs	r3, #1
 8014c20:	e06f      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014c22:	4b3b      	ldr	r3, [pc, #236]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014c24:	681b      	ldr	r3, [r3, #0]
 8014c26:	f003 0302 	and.w	r3, r3, #2
 8014c2a:	2b00      	cmp	r3, #0
 8014c2c:	d101      	bne.n	8014c32 <HAL_RCC_ClockConfig+0xde>
 8014c2e:	2301      	movs	r3, #1
 8014c30:	e067      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014c32:	4b37      	ldr	r3, [pc, #220]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014c34:	689b      	ldr	r3, [r3, #8]
 8014c36:	f023 0203 	bic.w	r2, r3, #3
 8014c3a:	687b      	ldr	r3, [r7, #4]
 8014c3c:	685b      	ldr	r3, [r3, #4]
 8014c3e:	4934      	ldr	r1, [pc, #208]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014c40:	4313      	orrs	r3, r2
 8014c42:	608b      	str	r3, [r1, #8]
 8014c44:	f7fa fd2e 	bl	800f6a4 <HAL_GetTick>
 8014c48:	60f8      	str	r0, [r7, #12]
 8014c4a:	e00a      	b.n	8014c62 <HAL_RCC_ClockConfig+0x10e>
 8014c4c:	f7fa fd2a 	bl	800f6a4 <HAL_GetTick>
 8014c50:	4602      	mov	r2, r0
 8014c52:	68fb      	ldr	r3, [r7, #12]
 8014c54:	1ad3      	subs	r3, r2, r3
 8014c56:	f241 3288 	movw	r2, #5000	; 0x1388
 8014c5a:	4293      	cmp	r3, r2
 8014c5c:	d901      	bls.n	8014c62 <HAL_RCC_ClockConfig+0x10e>
 8014c5e:	2303      	movs	r3, #3
 8014c60:	e04f      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014c62:	4b2b      	ldr	r3, [pc, #172]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014c64:	689b      	ldr	r3, [r3, #8]
 8014c66:	f003 020c 	and.w	r2, r3, #12
 8014c6a:	687b      	ldr	r3, [r7, #4]
 8014c6c:	685b      	ldr	r3, [r3, #4]
 8014c6e:	009b      	lsls	r3, r3, #2
 8014c70:	429a      	cmp	r2, r3
 8014c72:	d1eb      	bne.n	8014c4c <HAL_RCC_ClockConfig+0xf8>
 8014c74:	4b25      	ldr	r3, [pc, #148]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014c76:	681b      	ldr	r3, [r3, #0]
 8014c78:	f003 0307 	and.w	r3, r3, #7
 8014c7c:	683a      	ldr	r2, [r7, #0]
 8014c7e:	429a      	cmp	r2, r3
 8014c80:	d20c      	bcs.n	8014c9c <HAL_RCC_ClockConfig+0x148>
 8014c82:	4b22      	ldr	r3, [pc, #136]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014c84:	683a      	ldr	r2, [r7, #0]
 8014c86:	b2d2      	uxtb	r2, r2
 8014c88:	701a      	strb	r2, [r3, #0]
 8014c8a:	4b20      	ldr	r3, [pc, #128]	; (8014d0c <HAL_RCC_ClockConfig+0x1b8>)
 8014c8c:	681b      	ldr	r3, [r3, #0]
 8014c8e:	f003 0307 	and.w	r3, r3, #7
 8014c92:	683a      	ldr	r2, [r7, #0]
 8014c94:	429a      	cmp	r2, r3
 8014c96:	d001      	beq.n	8014c9c <HAL_RCC_ClockConfig+0x148>
 8014c98:	2301      	movs	r3, #1
 8014c9a:	e032      	b.n	8014d02 <HAL_RCC_ClockConfig+0x1ae>
 8014c9c:	687b      	ldr	r3, [r7, #4]
 8014c9e:	681b      	ldr	r3, [r3, #0]
 8014ca0:	f003 0304 	and.w	r3, r3, #4
 8014ca4:	2b00      	cmp	r3, #0
 8014ca6:	d008      	beq.n	8014cba <HAL_RCC_ClockConfig+0x166>
 8014ca8:	4b19      	ldr	r3, [pc, #100]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014caa:	689b      	ldr	r3, [r3, #8]
 8014cac:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8014cb0:	687b      	ldr	r3, [r7, #4]
 8014cb2:	68db      	ldr	r3, [r3, #12]
 8014cb4:	4916      	ldr	r1, [pc, #88]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014cb6:	4313      	orrs	r3, r2
 8014cb8:	608b      	str	r3, [r1, #8]
 8014cba:	687b      	ldr	r3, [r7, #4]
 8014cbc:	681b      	ldr	r3, [r3, #0]
 8014cbe:	f003 0308 	and.w	r3, r3, #8
 8014cc2:	2b00      	cmp	r3, #0
 8014cc4:	d009      	beq.n	8014cda <HAL_RCC_ClockConfig+0x186>
 8014cc6:	4b12      	ldr	r3, [pc, #72]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014cc8:	689b      	ldr	r3, [r3, #8]
 8014cca:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8014cce:	687b      	ldr	r3, [r7, #4]
 8014cd0:	691b      	ldr	r3, [r3, #16]
 8014cd2:	00db      	lsls	r3, r3, #3
 8014cd4:	490e      	ldr	r1, [pc, #56]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014cd6:	4313      	orrs	r3, r2
 8014cd8:	608b      	str	r3, [r1, #8]
 8014cda:	f000 f821 	bl	8014d20 <HAL_RCC_GetSysClockFreq>
 8014cde:	4602      	mov	r2, r0
 8014ce0:	4b0b      	ldr	r3, [pc, #44]	; (8014d10 <HAL_RCC_ClockConfig+0x1bc>)
 8014ce2:	689b      	ldr	r3, [r3, #8]
 8014ce4:	091b      	lsrs	r3, r3, #4
 8014ce6:	f003 030f 	and.w	r3, r3, #15
 8014cea:	490a      	ldr	r1, [pc, #40]	; (8014d14 <HAL_RCC_ClockConfig+0x1c0>)
 8014cec:	5ccb      	ldrb	r3, [r1, r3]
 8014cee:	fa22 f303 	lsr.w	r3, r2, r3
 8014cf2:	4a09      	ldr	r2, [pc, #36]	; (8014d18 <HAL_RCC_ClockConfig+0x1c4>)
 8014cf4:	6013      	str	r3, [r2, #0]
 8014cf6:	4b09      	ldr	r3, [pc, #36]	; (8014d1c <HAL_RCC_ClockConfig+0x1c8>)
 8014cf8:	681b      	ldr	r3, [r3, #0]
 8014cfa:	4618      	mov	r0, r3
 8014cfc:	f7ef f8ca 	bl	8003e94 <HAL_InitTick>
 8014d00:	2300      	movs	r3, #0
 8014d02:	4618      	mov	r0, r3
 8014d04:	3710      	adds	r7, #16
 8014d06:	46bd      	mov	sp, r7
 8014d08:	bd80      	pop	{r7, pc}
 8014d0a:	bf00      	nop
 8014d0c:	40023c00 	.word	0x40023c00
 8014d10:	40023800 	.word	0x40023800
 8014d14:	08026d18 	.word	0x08026d18
 8014d18:	20000004 	.word	0x20000004
 8014d1c:	20000054 	.word	0x20000054

08014d20 <HAL_RCC_GetSysClockFreq>:
 8014d20:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8014d24:	b090      	sub	sp, #64	; 0x40
 8014d26:	af00      	add	r7, sp, #0
 8014d28:	2300      	movs	r3, #0
 8014d2a:	637b      	str	r3, [r7, #52]	; 0x34
 8014d2c:	2300      	movs	r3, #0
 8014d2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014d30:	2300      	movs	r3, #0
 8014d32:	633b      	str	r3, [r7, #48]	; 0x30
 8014d34:	2300      	movs	r3, #0
 8014d36:	63bb      	str	r3, [r7, #56]	; 0x38
 8014d38:	4b59      	ldr	r3, [pc, #356]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014d3a:	689b      	ldr	r3, [r3, #8]
 8014d3c:	f003 030c 	and.w	r3, r3, #12
 8014d40:	2b08      	cmp	r3, #8
 8014d42:	d00d      	beq.n	8014d60 <HAL_RCC_GetSysClockFreq+0x40>
 8014d44:	2b08      	cmp	r3, #8
 8014d46:	f200 80a1 	bhi.w	8014e8c <HAL_RCC_GetSysClockFreq+0x16c>
 8014d4a:	2b00      	cmp	r3, #0
 8014d4c:	d002      	beq.n	8014d54 <HAL_RCC_GetSysClockFreq+0x34>
 8014d4e:	2b04      	cmp	r3, #4
 8014d50:	d003      	beq.n	8014d5a <HAL_RCC_GetSysClockFreq+0x3a>
 8014d52:	e09b      	b.n	8014e8c <HAL_RCC_GetSysClockFreq+0x16c>
 8014d54:	4b53      	ldr	r3, [pc, #332]	; (8014ea4 <HAL_RCC_GetSysClockFreq+0x184>)
 8014d56:	63bb      	str	r3, [r7, #56]	; 0x38
 8014d58:	e09b      	b.n	8014e92 <HAL_RCC_GetSysClockFreq+0x172>
 8014d5a:	4b53      	ldr	r3, [pc, #332]	; (8014ea8 <HAL_RCC_GetSysClockFreq+0x188>)
 8014d5c:	63bb      	str	r3, [r7, #56]	; 0x38
 8014d5e:	e098      	b.n	8014e92 <HAL_RCC_GetSysClockFreq+0x172>
 8014d60:	4b4f      	ldr	r3, [pc, #316]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014d62:	685b      	ldr	r3, [r3, #4]
 8014d64:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8014d68:	637b      	str	r3, [r7, #52]	; 0x34
 8014d6a:	4b4d      	ldr	r3, [pc, #308]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014d6c:	685b      	ldr	r3, [r3, #4]
 8014d6e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8014d72:	2b00      	cmp	r3, #0
 8014d74:	d028      	beq.n	8014dc8 <HAL_RCC_GetSysClockFreq+0xa8>
 8014d76:	4b4a      	ldr	r3, [pc, #296]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014d78:	685b      	ldr	r3, [r3, #4]
 8014d7a:	099b      	lsrs	r3, r3, #6
 8014d7c:	2200      	movs	r2, #0
 8014d7e:	623b      	str	r3, [r7, #32]
 8014d80:	627a      	str	r2, [r7, #36]	; 0x24
 8014d82:	6a3b      	ldr	r3, [r7, #32]
 8014d84:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8014d88:	2100      	movs	r1, #0
 8014d8a:	4b47      	ldr	r3, [pc, #284]	; (8014ea8 <HAL_RCC_GetSysClockFreq+0x188>)
 8014d8c:	fb03 f201 	mul.w	r2, r3, r1
 8014d90:	2300      	movs	r3, #0
 8014d92:	fb00 f303 	mul.w	r3, r0, r3
 8014d96:	4413      	add	r3, r2
 8014d98:	4a43      	ldr	r2, [pc, #268]	; (8014ea8 <HAL_RCC_GetSysClockFreq+0x188>)
 8014d9a:	fba0 1202 	umull	r1, r2, r0, r2
 8014d9e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8014da0:	460a      	mov	r2, r1
 8014da2:	62ba      	str	r2, [r7, #40]	; 0x28
 8014da4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8014da6:	4413      	add	r3, r2
 8014da8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8014daa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014dac:	2200      	movs	r2, #0
 8014dae:	61bb      	str	r3, [r7, #24]
 8014db0:	61fa      	str	r2, [r7, #28]
 8014db2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8014db6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8014dba:	f7eb ff65 	bl	8000c88 <__aeabi_uldivmod>
 8014dbe:	4602      	mov	r2, r0
 8014dc0:	460b      	mov	r3, r1
 8014dc2:	4613      	mov	r3, r2
 8014dc4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014dc6:	e053      	b.n	8014e70 <HAL_RCC_GetSysClockFreq+0x150>
 8014dc8:	4b35      	ldr	r3, [pc, #212]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014dca:	685b      	ldr	r3, [r3, #4]
 8014dcc:	099b      	lsrs	r3, r3, #6
 8014dce:	2200      	movs	r2, #0
 8014dd0:	613b      	str	r3, [r7, #16]
 8014dd2:	617a      	str	r2, [r7, #20]
 8014dd4:	693b      	ldr	r3, [r7, #16]
 8014dd6:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8014dda:	f04f 0b00 	mov.w	fp, #0
 8014dde:	4652      	mov	r2, sl
 8014de0:	465b      	mov	r3, fp
 8014de2:	f04f 0000 	mov.w	r0, #0
 8014de6:	f04f 0100 	mov.w	r1, #0
 8014dea:	0159      	lsls	r1, r3, #5
 8014dec:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8014df0:	0150      	lsls	r0, r2, #5
 8014df2:	4602      	mov	r2, r0
 8014df4:	460b      	mov	r3, r1
 8014df6:	ebb2 080a 	subs.w	r8, r2, sl
 8014dfa:	eb63 090b 	sbc.w	r9, r3, fp
 8014dfe:	f04f 0200 	mov.w	r2, #0
 8014e02:	f04f 0300 	mov.w	r3, #0
 8014e06:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8014e0a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8014e0e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8014e12:	ebb2 0408 	subs.w	r4, r2, r8
 8014e16:	eb63 0509 	sbc.w	r5, r3, r9
 8014e1a:	f04f 0200 	mov.w	r2, #0
 8014e1e:	f04f 0300 	mov.w	r3, #0
 8014e22:	00eb      	lsls	r3, r5, #3
 8014e24:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8014e28:	00e2      	lsls	r2, r4, #3
 8014e2a:	4614      	mov	r4, r2
 8014e2c:	461d      	mov	r5, r3
 8014e2e:	eb14 030a 	adds.w	r3, r4, sl
 8014e32:	603b      	str	r3, [r7, #0]
 8014e34:	eb45 030b 	adc.w	r3, r5, fp
 8014e38:	607b      	str	r3, [r7, #4]
 8014e3a:	f04f 0200 	mov.w	r2, #0
 8014e3e:	f04f 0300 	mov.w	r3, #0
 8014e42:	e9d7 4500 	ldrd	r4, r5, [r7]
 8014e46:	4629      	mov	r1, r5
 8014e48:	028b      	lsls	r3, r1, #10
 8014e4a:	4621      	mov	r1, r4
 8014e4c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8014e50:	4621      	mov	r1, r4
 8014e52:	028a      	lsls	r2, r1, #10
 8014e54:	4610      	mov	r0, r2
 8014e56:	4619      	mov	r1, r3
 8014e58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014e5a:	2200      	movs	r2, #0
 8014e5c:	60bb      	str	r3, [r7, #8]
 8014e5e:	60fa      	str	r2, [r7, #12]
 8014e60:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8014e64:	f7eb ff10 	bl	8000c88 <__aeabi_uldivmod>
 8014e68:	4602      	mov	r2, r0
 8014e6a:	460b      	mov	r3, r1
 8014e6c:	4613      	mov	r3, r2
 8014e6e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014e70:	4b0b      	ldr	r3, [pc, #44]	; (8014ea0 <HAL_RCC_GetSysClockFreq+0x180>)
 8014e72:	685b      	ldr	r3, [r3, #4]
 8014e74:	0c1b      	lsrs	r3, r3, #16
 8014e76:	f003 0303 	and.w	r3, r3, #3
 8014e7a:	3301      	adds	r3, #1
 8014e7c:	005b      	lsls	r3, r3, #1
 8014e7e:	633b      	str	r3, [r7, #48]	; 0x30
 8014e80:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8014e82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8014e84:	fbb2 f3f3 	udiv	r3, r2, r3
 8014e88:	63bb      	str	r3, [r7, #56]	; 0x38
 8014e8a:	e002      	b.n	8014e92 <HAL_RCC_GetSysClockFreq+0x172>
 8014e8c:	4b05      	ldr	r3, [pc, #20]	; (8014ea4 <HAL_RCC_GetSysClockFreq+0x184>)
 8014e8e:	63bb      	str	r3, [r7, #56]	; 0x38
 8014e90:	bf00      	nop
 8014e92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8014e94:	4618      	mov	r0, r3
 8014e96:	3740      	adds	r7, #64	; 0x40
 8014e98:	46bd      	mov	sp, r7
 8014e9a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8014e9e:	bf00      	nop
 8014ea0:	40023800 	.word	0x40023800
 8014ea4:	00f42400 	.word	0x00f42400
 8014ea8:	00b71b00 	.word	0x00b71b00

08014eac <HAL_RCC_GetHCLKFreq>:
 8014eac:	b480      	push	{r7}
 8014eae:	af00      	add	r7, sp, #0
 8014eb0:	4b03      	ldr	r3, [pc, #12]	; (8014ec0 <HAL_RCC_GetHCLKFreq+0x14>)
 8014eb2:	681b      	ldr	r3, [r3, #0]
 8014eb4:	4618      	mov	r0, r3
 8014eb6:	46bd      	mov	sp, r7
 8014eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ebc:	4770      	bx	lr
 8014ebe:	bf00      	nop
 8014ec0:	20000004 	.word	0x20000004

08014ec4 <HAL_RCC_GetPCLK1Freq>:
 8014ec4:	b580      	push	{r7, lr}
 8014ec6:	af00      	add	r7, sp, #0
 8014ec8:	f7ff fff0 	bl	8014eac <HAL_RCC_GetHCLKFreq>
 8014ecc:	4602      	mov	r2, r0
 8014ece:	4b05      	ldr	r3, [pc, #20]	; (8014ee4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8014ed0:	689b      	ldr	r3, [r3, #8]
 8014ed2:	0a9b      	lsrs	r3, r3, #10
 8014ed4:	f003 0307 	and.w	r3, r3, #7
 8014ed8:	4903      	ldr	r1, [pc, #12]	; (8014ee8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8014eda:	5ccb      	ldrb	r3, [r1, r3]
 8014edc:	fa22 f303 	lsr.w	r3, r2, r3
 8014ee0:	4618      	mov	r0, r3
 8014ee2:	bd80      	pop	{r7, pc}
 8014ee4:	40023800 	.word	0x40023800
 8014ee8:	08026d28 	.word	0x08026d28

08014eec <HAL_RCC_GetPCLK2Freq>:
 8014eec:	b580      	push	{r7, lr}
 8014eee:	af00      	add	r7, sp, #0
 8014ef0:	f7ff ffdc 	bl	8014eac <HAL_RCC_GetHCLKFreq>
 8014ef4:	4602      	mov	r2, r0
 8014ef6:	4b05      	ldr	r3, [pc, #20]	; (8014f0c <HAL_RCC_GetPCLK2Freq+0x20>)
 8014ef8:	689b      	ldr	r3, [r3, #8]
 8014efa:	0b5b      	lsrs	r3, r3, #13
 8014efc:	f003 0307 	and.w	r3, r3, #7
 8014f00:	4903      	ldr	r1, [pc, #12]	; (8014f10 <HAL_RCC_GetPCLK2Freq+0x24>)
 8014f02:	5ccb      	ldrb	r3, [r1, r3]
 8014f04:	fa22 f303 	lsr.w	r3, r2, r3
 8014f08:	4618      	mov	r0, r3
 8014f0a:	bd80      	pop	{r7, pc}
 8014f0c:	40023800 	.word	0x40023800
 8014f10:	08026d28 	.word	0x08026d28

08014f14 <HAL_RCC_GetClockConfig>:
 8014f14:	b480      	push	{r7}
 8014f16:	b083      	sub	sp, #12
 8014f18:	af00      	add	r7, sp, #0
 8014f1a:	6078      	str	r0, [r7, #4]
 8014f1c:	6039      	str	r1, [r7, #0]
 8014f1e:	687b      	ldr	r3, [r7, #4]
 8014f20:	220f      	movs	r2, #15
 8014f22:	601a      	str	r2, [r3, #0]
 8014f24:	4b12      	ldr	r3, [pc, #72]	; (8014f70 <HAL_RCC_GetClockConfig+0x5c>)
 8014f26:	689b      	ldr	r3, [r3, #8]
 8014f28:	f003 0203 	and.w	r2, r3, #3
 8014f2c:	687b      	ldr	r3, [r7, #4]
 8014f2e:	605a      	str	r2, [r3, #4]
 8014f30:	4b0f      	ldr	r3, [pc, #60]	; (8014f70 <HAL_RCC_GetClockConfig+0x5c>)
 8014f32:	689b      	ldr	r3, [r3, #8]
 8014f34:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8014f38:	687b      	ldr	r3, [r7, #4]
 8014f3a:	609a      	str	r2, [r3, #8]
 8014f3c:	4b0c      	ldr	r3, [pc, #48]	; (8014f70 <HAL_RCC_GetClockConfig+0x5c>)
 8014f3e:	689b      	ldr	r3, [r3, #8]
 8014f40:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8014f44:	687b      	ldr	r3, [r7, #4]
 8014f46:	60da      	str	r2, [r3, #12]
 8014f48:	4b09      	ldr	r3, [pc, #36]	; (8014f70 <HAL_RCC_GetClockConfig+0x5c>)
 8014f4a:	689b      	ldr	r3, [r3, #8]
 8014f4c:	08db      	lsrs	r3, r3, #3
 8014f4e:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8014f52:	687b      	ldr	r3, [r7, #4]
 8014f54:	611a      	str	r2, [r3, #16]
 8014f56:	4b07      	ldr	r3, [pc, #28]	; (8014f74 <HAL_RCC_GetClockConfig+0x60>)
 8014f58:	681b      	ldr	r3, [r3, #0]
 8014f5a:	f003 0207 	and.w	r2, r3, #7
 8014f5e:	683b      	ldr	r3, [r7, #0]
 8014f60:	601a      	str	r2, [r3, #0]
 8014f62:	bf00      	nop
 8014f64:	370c      	adds	r7, #12
 8014f66:	46bd      	mov	sp, r7
 8014f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f6c:	4770      	bx	lr
 8014f6e:	bf00      	nop
 8014f70:	40023800 	.word	0x40023800
 8014f74:	40023c00 	.word	0x40023c00

08014f78 <HAL_RNG_Init>:
 8014f78:	b580      	push	{r7, lr}
 8014f7a:	b082      	sub	sp, #8
 8014f7c:	af00      	add	r7, sp, #0
 8014f7e:	6078      	str	r0, [r7, #4]
 8014f80:	687b      	ldr	r3, [r7, #4]
 8014f82:	2b00      	cmp	r3, #0
 8014f84:	d101      	bne.n	8014f8a <HAL_RNG_Init+0x12>
 8014f86:	2301      	movs	r3, #1
 8014f88:	e01c      	b.n	8014fc4 <HAL_RNG_Init+0x4c>
 8014f8a:	687b      	ldr	r3, [r7, #4]
 8014f8c:	795b      	ldrb	r3, [r3, #5]
 8014f8e:	b2db      	uxtb	r3, r3
 8014f90:	2b00      	cmp	r3, #0
 8014f92:	d105      	bne.n	8014fa0 <HAL_RNG_Init+0x28>
 8014f94:	687b      	ldr	r3, [r7, #4]
 8014f96:	2200      	movs	r2, #0
 8014f98:	711a      	strb	r2, [r3, #4]
 8014f9a:	6878      	ldr	r0, [r7, #4]
 8014f9c:	f7ee fe2a 	bl	8003bf4 <HAL_RNG_MspInit>
 8014fa0:	687b      	ldr	r3, [r7, #4]
 8014fa2:	2202      	movs	r2, #2
 8014fa4:	715a      	strb	r2, [r3, #5]
 8014fa6:	687b      	ldr	r3, [r7, #4]
 8014fa8:	681b      	ldr	r3, [r3, #0]
 8014faa:	681a      	ldr	r2, [r3, #0]
 8014fac:	687b      	ldr	r3, [r7, #4]
 8014fae:	681b      	ldr	r3, [r3, #0]
 8014fb0:	f042 0204 	orr.w	r2, r2, #4
 8014fb4:	601a      	str	r2, [r3, #0]
 8014fb6:	687b      	ldr	r3, [r7, #4]
 8014fb8:	2201      	movs	r2, #1
 8014fba:	715a      	strb	r2, [r3, #5]
 8014fbc:	687b      	ldr	r3, [r7, #4]
 8014fbe:	2200      	movs	r2, #0
 8014fc0:	609a      	str	r2, [r3, #8]
 8014fc2:	2300      	movs	r3, #0
 8014fc4:	4618      	mov	r0, r3
 8014fc6:	3708      	adds	r7, #8
 8014fc8:	46bd      	mov	sp, r7
 8014fca:	bd80      	pop	{r7, pc}

08014fcc <HAL_SPI_Init>:
 8014fcc:	b580      	push	{r7, lr}
 8014fce:	b082      	sub	sp, #8
 8014fd0:	af00      	add	r7, sp, #0
 8014fd2:	6078      	str	r0, [r7, #4]
 8014fd4:	687b      	ldr	r3, [r7, #4]
 8014fd6:	2b00      	cmp	r3, #0
 8014fd8:	d101      	bne.n	8014fde <HAL_SPI_Init+0x12>
 8014fda:	2301      	movs	r3, #1
 8014fdc:	e07b      	b.n	80150d6 <HAL_SPI_Init+0x10a>
 8014fde:	687b      	ldr	r3, [r7, #4]
 8014fe0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014fe2:	2b00      	cmp	r3, #0
 8014fe4:	d108      	bne.n	8014ff8 <HAL_SPI_Init+0x2c>
 8014fe6:	687b      	ldr	r3, [r7, #4]
 8014fe8:	685b      	ldr	r3, [r3, #4]
 8014fea:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8014fee:	d009      	beq.n	8015004 <HAL_SPI_Init+0x38>
 8014ff0:	687b      	ldr	r3, [r7, #4]
 8014ff2:	2200      	movs	r2, #0
 8014ff4:	61da      	str	r2, [r3, #28]
 8014ff6:	e005      	b.n	8015004 <HAL_SPI_Init+0x38>
 8014ff8:	687b      	ldr	r3, [r7, #4]
 8014ffa:	2200      	movs	r2, #0
 8014ffc:	611a      	str	r2, [r3, #16]
 8014ffe:	687b      	ldr	r3, [r7, #4]
 8015000:	2200      	movs	r2, #0
 8015002:	615a      	str	r2, [r3, #20]
 8015004:	687b      	ldr	r3, [r7, #4]
 8015006:	2200      	movs	r2, #0
 8015008:	629a      	str	r2, [r3, #40]	; 0x28
 801500a:	687b      	ldr	r3, [r7, #4]
 801500c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8015010:	b2db      	uxtb	r3, r3
 8015012:	2b00      	cmp	r3, #0
 8015014:	d106      	bne.n	8015024 <HAL_SPI_Init+0x58>
 8015016:	687b      	ldr	r3, [r7, #4]
 8015018:	2200      	movs	r2, #0
 801501a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801501e:	6878      	ldr	r0, [r7, #4]
 8015020:	f7ee fe40 	bl	8003ca4 <HAL_SPI_MspInit>
 8015024:	687b      	ldr	r3, [r7, #4]
 8015026:	2202      	movs	r2, #2
 8015028:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801502c:	687b      	ldr	r3, [r7, #4]
 801502e:	681b      	ldr	r3, [r3, #0]
 8015030:	681a      	ldr	r2, [r3, #0]
 8015032:	687b      	ldr	r3, [r7, #4]
 8015034:	681b      	ldr	r3, [r3, #0]
 8015036:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801503a:	601a      	str	r2, [r3, #0]
 801503c:	687b      	ldr	r3, [r7, #4]
 801503e:	685b      	ldr	r3, [r3, #4]
 8015040:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8015044:	687b      	ldr	r3, [r7, #4]
 8015046:	689b      	ldr	r3, [r3, #8]
 8015048:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 801504c:	431a      	orrs	r2, r3
 801504e:	687b      	ldr	r3, [r7, #4]
 8015050:	68db      	ldr	r3, [r3, #12]
 8015052:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8015056:	431a      	orrs	r2, r3
 8015058:	687b      	ldr	r3, [r7, #4]
 801505a:	691b      	ldr	r3, [r3, #16]
 801505c:	f003 0302 	and.w	r3, r3, #2
 8015060:	431a      	orrs	r2, r3
 8015062:	687b      	ldr	r3, [r7, #4]
 8015064:	695b      	ldr	r3, [r3, #20]
 8015066:	f003 0301 	and.w	r3, r3, #1
 801506a:	431a      	orrs	r2, r3
 801506c:	687b      	ldr	r3, [r7, #4]
 801506e:	699b      	ldr	r3, [r3, #24]
 8015070:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8015074:	431a      	orrs	r2, r3
 8015076:	687b      	ldr	r3, [r7, #4]
 8015078:	69db      	ldr	r3, [r3, #28]
 801507a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 801507e:	431a      	orrs	r2, r3
 8015080:	687b      	ldr	r3, [r7, #4]
 8015082:	6a1b      	ldr	r3, [r3, #32]
 8015084:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015088:	ea42 0103 	orr.w	r1, r2, r3
 801508c:	687b      	ldr	r3, [r7, #4]
 801508e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015090:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8015094:	687b      	ldr	r3, [r7, #4]
 8015096:	681b      	ldr	r3, [r3, #0]
 8015098:	430a      	orrs	r2, r1
 801509a:	601a      	str	r2, [r3, #0]
 801509c:	687b      	ldr	r3, [r7, #4]
 801509e:	699b      	ldr	r3, [r3, #24]
 80150a0:	0c1b      	lsrs	r3, r3, #16
 80150a2:	f003 0104 	and.w	r1, r3, #4
 80150a6:	687b      	ldr	r3, [r7, #4]
 80150a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80150aa:	f003 0210 	and.w	r2, r3, #16
 80150ae:	687b      	ldr	r3, [r7, #4]
 80150b0:	681b      	ldr	r3, [r3, #0]
 80150b2:	430a      	orrs	r2, r1
 80150b4:	605a      	str	r2, [r3, #4]
 80150b6:	687b      	ldr	r3, [r7, #4]
 80150b8:	681b      	ldr	r3, [r3, #0]
 80150ba:	69da      	ldr	r2, [r3, #28]
 80150bc:	687b      	ldr	r3, [r7, #4]
 80150be:	681b      	ldr	r3, [r3, #0]
 80150c0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80150c4:	61da      	str	r2, [r3, #28]
 80150c6:	687b      	ldr	r3, [r7, #4]
 80150c8:	2200      	movs	r2, #0
 80150ca:	655a      	str	r2, [r3, #84]	; 0x54
 80150cc:	687b      	ldr	r3, [r7, #4]
 80150ce:	2201      	movs	r2, #1
 80150d0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80150d4:	2300      	movs	r3, #0
 80150d6:	4618      	mov	r0, r3
 80150d8:	3708      	adds	r7, #8
 80150da:	46bd      	mov	sp, r7
 80150dc:	bd80      	pop	{r7, pc}

080150de <HAL_SPI_Receive>:
 80150de:	b580      	push	{r7, lr}
 80150e0:	b088      	sub	sp, #32
 80150e2:	af02      	add	r7, sp, #8
 80150e4:	60f8      	str	r0, [r7, #12]
 80150e6:	60b9      	str	r1, [r7, #8]
 80150e8:	603b      	str	r3, [r7, #0]
 80150ea:	4613      	mov	r3, r2
 80150ec:	80fb      	strh	r3, [r7, #6]
 80150ee:	2300      	movs	r3, #0
 80150f0:	75fb      	strb	r3, [r7, #23]
 80150f2:	68fb      	ldr	r3, [r7, #12]
 80150f4:	685b      	ldr	r3, [r3, #4]
 80150f6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80150fa:	d112      	bne.n	8015122 <HAL_SPI_Receive+0x44>
 80150fc:	68fb      	ldr	r3, [r7, #12]
 80150fe:	689b      	ldr	r3, [r3, #8]
 8015100:	2b00      	cmp	r3, #0
 8015102:	d10e      	bne.n	8015122 <HAL_SPI_Receive+0x44>
 8015104:	68fb      	ldr	r3, [r7, #12]
 8015106:	2204      	movs	r2, #4
 8015108:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801510c:	88fa      	ldrh	r2, [r7, #6]
 801510e:	683b      	ldr	r3, [r7, #0]
 8015110:	9300      	str	r3, [sp, #0]
 8015112:	4613      	mov	r3, r2
 8015114:	68ba      	ldr	r2, [r7, #8]
 8015116:	68b9      	ldr	r1, [r7, #8]
 8015118:	68f8      	ldr	r0, [r7, #12]
 801511a:	f000 f8f1 	bl	8015300 <HAL_SPI_TransmitReceive>
 801511e:	4603      	mov	r3, r0
 8015120:	e0ea      	b.n	80152f8 <HAL_SPI_Receive+0x21a>
 8015122:	68fb      	ldr	r3, [r7, #12]
 8015124:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8015128:	2b01      	cmp	r3, #1
 801512a:	d101      	bne.n	8015130 <HAL_SPI_Receive+0x52>
 801512c:	2302      	movs	r3, #2
 801512e:	e0e3      	b.n	80152f8 <HAL_SPI_Receive+0x21a>
 8015130:	68fb      	ldr	r3, [r7, #12]
 8015132:	2201      	movs	r2, #1
 8015134:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8015138:	f7fa fab4 	bl	800f6a4 <HAL_GetTick>
 801513c:	6138      	str	r0, [r7, #16]
 801513e:	68fb      	ldr	r3, [r7, #12]
 8015140:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8015144:	b2db      	uxtb	r3, r3
 8015146:	2b01      	cmp	r3, #1
 8015148:	d002      	beq.n	8015150 <HAL_SPI_Receive+0x72>
 801514a:	2302      	movs	r3, #2
 801514c:	75fb      	strb	r3, [r7, #23]
 801514e:	e0ca      	b.n	80152e6 <HAL_SPI_Receive+0x208>
 8015150:	68bb      	ldr	r3, [r7, #8]
 8015152:	2b00      	cmp	r3, #0
 8015154:	d002      	beq.n	801515c <HAL_SPI_Receive+0x7e>
 8015156:	88fb      	ldrh	r3, [r7, #6]
 8015158:	2b00      	cmp	r3, #0
 801515a:	d102      	bne.n	8015162 <HAL_SPI_Receive+0x84>
 801515c:	2301      	movs	r3, #1
 801515e:	75fb      	strb	r3, [r7, #23]
 8015160:	e0c1      	b.n	80152e6 <HAL_SPI_Receive+0x208>
 8015162:	68fb      	ldr	r3, [r7, #12]
 8015164:	2204      	movs	r2, #4
 8015166:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801516a:	68fb      	ldr	r3, [r7, #12]
 801516c:	2200      	movs	r2, #0
 801516e:	655a      	str	r2, [r3, #84]	; 0x54
 8015170:	68fb      	ldr	r3, [r7, #12]
 8015172:	68ba      	ldr	r2, [r7, #8]
 8015174:	639a      	str	r2, [r3, #56]	; 0x38
 8015176:	68fb      	ldr	r3, [r7, #12]
 8015178:	88fa      	ldrh	r2, [r7, #6]
 801517a:	879a      	strh	r2, [r3, #60]	; 0x3c
 801517c:	68fb      	ldr	r3, [r7, #12]
 801517e:	88fa      	ldrh	r2, [r7, #6]
 8015180:	87da      	strh	r2, [r3, #62]	; 0x3e
 8015182:	68fb      	ldr	r3, [r7, #12]
 8015184:	2200      	movs	r2, #0
 8015186:	631a      	str	r2, [r3, #48]	; 0x30
 8015188:	68fb      	ldr	r3, [r7, #12]
 801518a:	2200      	movs	r2, #0
 801518c:	869a      	strh	r2, [r3, #52]	; 0x34
 801518e:	68fb      	ldr	r3, [r7, #12]
 8015190:	2200      	movs	r2, #0
 8015192:	86da      	strh	r2, [r3, #54]	; 0x36
 8015194:	68fb      	ldr	r3, [r7, #12]
 8015196:	2200      	movs	r2, #0
 8015198:	641a      	str	r2, [r3, #64]	; 0x40
 801519a:	68fb      	ldr	r3, [r7, #12]
 801519c:	2200      	movs	r2, #0
 801519e:	645a      	str	r2, [r3, #68]	; 0x44
 80151a0:	68fb      	ldr	r3, [r7, #12]
 80151a2:	689b      	ldr	r3, [r3, #8]
 80151a4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80151a8:	d10f      	bne.n	80151ca <HAL_SPI_Receive+0xec>
 80151aa:	68fb      	ldr	r3, [r7, #12]
 80151ac:	681b      	ldr	r3, [r3, #0]
 80151ae:	681a      	ldr	r2, [r3, #0]
 80151b0:	68fb      	ldr	r3, [r7, #12]
 80151b2:	681b      	ldr	r3, [r3, #0]
 80151b4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80151b8:	601a      	str	r2, [r3, #0]
 80151ba:	68fb      	ldr	r3, [r7, #12]
 80151bc:	681b      	ldr	r3, [r3, #0]
 80151be:	681a      	ldr	r2, [r3, #0]
 80151c0:	68fb      	ldr	r3, [r7, #12]
 80151c2:	681b      	ldr	r3, [r3, #0]
 80151c4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80151c8:	601a      	str	r2, [r3, #0]
 80151ca:	68fb      	ldr	r3, [r7, #12]
 80151cc:	681b      	ldr	r3, [r3, #0]
 80151ce:	681b      	ldr	r3, [r3, #0]
 80151d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80151d4:	2b40      	cmp	r3, #64	; 0x40
 80151d6:	d007      	beq.n	80151e8 <HAL_SPI_Receive+0x10a>
 80151d8:	68fb      	ldr	r3, [r7, #12]
 80151da:	681b      	ldr	r3, [r3, #0]
 80151dc:	681a      	ldr	r2, [r3, #0]
 80151de:	68fb      	ldr	r3, [r7, #12]
 80151e0:	681b      	ldr	r3, [r3, #0]
 80151e2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80151e6:	601a      	str	r2, [r3, #0]
 80151e8:	68fb      	ldr	r3, [r7, #12]
 80151ea:	68db      	ldr	r3, [r3, #12]
 80151ec:	2b00      	cmp	r3, #0
 80151ee:	d162      	bne.n	80152b6 <HAL_SPI_Receive+0x1d8>
 80151f0:	e02e      	b.n	8015250 <HAL_SPI_Receive+0x172>
 80151f2:	68fb      	ldr	r3, [r7, #12]
 80151f4:	681b      	ldr	r3, [r3, #0]
 80151f6:	689b      	ldr	r3, [r3, #8]
 80151f8:	f003 0301 	and.w	r3, r3, #1
 80151fc:	2b01      	cmp	r3, #1
 80151fe:	d115      	bne.n	801522c <HAL_SPI_Receive+0x14e>
 8015200:	68fb      	ldr	r3, [r7, #12]
 8015202:	681b      	ldr	r3, [r3, #0]
 8015204:	f103 020c 	add.w	r2, r3, #12
 8015208:	68fb      	ldr	r3, [r7, #12]
 801520a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801520c:	7812      	ldrb	r2, [r2, #0]
 801520e:	b2d2      	uxtb	r2, r2
 8015210:	701a      	strb	r2, [r3, #0]
 8015212:	68fb      	ldr	r3, [r7, #12]
 8015214:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015216:	1c5a      	adds	r2, r3, #1
 8015218:	68fb      	ldr	r3, [r7, #12]
 801521a:	639a      	str	r2, [r3, #56]	; 0x38
 801521c:	68fb      	ldr	r3, [r7, #12]
 801521e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015220:	b29b      	uxth	r3, r3
 8015222:	3b01      	subs	r3, #1
 8015224:	b29a      	uxth	r2, r3
 8015226:	68fb      	ldr	r3, [r7, #12]
 8015228:	87da      	strh	r2, [r3, #62]	; 0x3e
 801522a:	e011      	b.n	8015250 <HAL_SPI_Receive+0x172>
 801522c:	f7fa fa3a 	bl	800f6a4 <HAL_GetTick>
 8015230:	4602      	mov	r2, r0
 8015232:	693b      	ldr	r3, [r7, #16]
 8015234:	1ad3      	subs	r3, r2, r3
 8015236:	683a      	ldr	r2, [r7, #0]
 8015238:	429a      	cmp	r2, r3
 801523a:	d803      	bhi.n	8015244 <HAL_SPI_Receive+0x166>
 801523c:	683b      	ldr	r3, [r7, #0]
 801523e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8015242:	d102      	bne.n	801524a <HAL_SPI_Receive+0x16c>
 8015244:	683b      	ldr	r3, [r7, #0]
 8015246:	2b00      	cmp	r3, #0
 8015248:	d102      	bne.n	8015250 <HAL_SPI_Receive+0x172>
 801524a:	2303      	movs	r3, #3
 801524c:	75fb      	strb	r3, [r7, #23]
 801524e:	e04a      	b.n	80152e6 <HAL_SPI_Receive+0x208>
 8015250:	68fb      	ldr	r3, [r7, #12]
 8015252:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015254:	b29b      	uxth	r3, r3
 8015256:	2b00      	cmp	r3, #0
 8015258:	d1cb      	bne.n	80151f2 <HAL_SPI_Receive+0x114>
 801525a:	e031      	b.n	80152c0 <HAL_SPI_Receive+0x1e2>
 801525c:	68fb      	ldr	r3, [r7, #12]
 801525e:	681b      	ldr	r3, [r3, #0]
 8015260:	689b      	ldr	r3, [r3, #8]
 8015262:	f003 0301 	and.w	r3, r3, #1
 8015266:	2b01      	cmp	r3, #1
 8015268:	d113      	bne.n	8015292 <HAL_SPI_Receive+0x1b4>
 801526a:	68fb      	ldr	r3, [r7, #12]
 801526c:	681b      	ldr	r3, [r3, #0]
 801526e:	68da      	ldr	r2, [r3, #12]
 8015270:	68fb      	ldr	r3, [r7, #12]
 8015272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015274:	b292      	uxth	r2, r2
 8015276:	801a      	strh	r2, [r3, #0]
 8015278:	68fb      	ldr	r3, [r7, #12]
 801527a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801527c:	1c9a      	adds	r2, r3, #2
 801527e:	68fb      	ldr	r3, [r7, #12]
 8015280:	639a      	str	r2, [r3, #56]	; 0x38
 8015282:	68fb      	ldr	r3, [r7, #12]
 8015284:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015286:	b29b      	uxth	r3, r3
 8015288:	3b01      	subs	r3, #1
 801528a:	b29a      	uxth	r2, r3
 801528c:	68fb      	ldr	r3, [r7, #12]
 801528e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8015290:	e011      	b.n	80152b6 <HAL_SPI_Receive+0x1d8>
 8015292:	f7fa fa07 	bl	800f6a4 <HAL_GetTick>
 8015296:	4602      	mov	r2, r0
 8015298:	693b      	ldr	r3, [r7, #16]
 801529a:	1ad3      	subs	r3, r2, r3
 801529c:	683a      	ldr	r2, [r7, #0]
 801529e:	429a      	cmp	r2, r3
 80152a0:	d803      	bhi.n	80152aa <HAL_SPI_Receive+0x1cc>
 80152a2:	683b      	ldr	r3, [r7, #0]
 80152a4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80152a8:	d102      	bne.n	80152b0 <HAL_SPI_Receive+0x1d2>
 80152aa:	683b      	ldr	r3, [r7, #0]
 80152ac:	2b00      	cmp	r3, #0
 80152ae:	d102      	bne.n	80152b6 <HAL_SPI_Receive+0x1d8>
 80152b0:	2303      	movs	r3, #3
 80152b2:	75fb      	strb	r3, [r7, #23]
 80152b4:	e017      	b.n	80152e6 <HAL_SPI_Receive+0x208>
 80152b6:	68fb      	ldr	r3, [r7, #12]
 80152b8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80152ba:	b29b      	uxth	r3, r3
 80152bc:	2b00      	cmp	r3, #0
 80152be:	d1cd      	bne.n	801525c <HAL_SPI_Receive+0x17e>
 80152c0:	693a      	ldr	r2, [r7, #16]
 80152c2:	6839      	ldr	r1, [r7, #0]
 80152c4:	68f8      	ldr	r0, [r7, #12]
 80152c6:	f000 fa45 	bl	8015754 <SPI_EndRxTransaction>
 80152ca:	4603      	mov	r3, r0
 80152cc:	2b00      	cmp	r3, #0
 80152ce:	d002      	beq.n	80152d6 <HAL_SPI_Receive+0x1f8>
 80152d0:	68fb      	ldr	r3, [r7, #12]
 80152d2:	2220      	movs	r2, #32
 80152d4:	655a      	str	r2, [r3, #84]	; 0x54
 80152d6:	68fb      	ldr	r3, [r7, #12]
 80152d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80152da:	2b00      	cmp	r3, #0
 80152dc:	d002      	beq.n	80152e4 <HAL_SPI_Receive+0x206>
 80152de:	2301      	movs	r3, #1
 80152e0:	75fb      	strb	r3, [r7, #23]
 80152e2:	e000      	b.n	80152e6 <HAL_SPI_Receive+0x208>
 80152e4:	bf00      	nop
 80152e6:	68fb      	ldr	r3, [r7, #12]
 80152e8:	2201      	movs	r2, #1
 80152ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80152ee:	68fb      	ldr	r3, [r7, #12]
 80152f0:	2200      	movs	r2, #0
 80152f2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80152f6:	7dfb      	ldrb	r3, [r7, #23]
 80152f8:	4618      	mov	r0, r3
 80152fa:	3718      	adds	r7, #24
 80152fc:	46bd      	mov	sp, r7
 80152fe:	bd80      	pop	{r7, pc}

08015300 <HAL_SPI_TransmitReceive>:
 8015300:	b580      	push	{r7, lr}
 8015302:	b08c      	sub	sp, #48	; 0x30
 8015304:	af00      	add	r7, sp, #0
 8015306:	60f8      	str	r0, [r7, #12]
 8015308:	60b9      	str	r1, [r7, #8]
 801530a:	607a      	str	r2, [r7, #4]
 801530c:	807b      	strh	r3, [r7, #2]
 801530e:	2301      	movs	r3, #1
 8015310:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015312:	2300      	movs	r3, #0
 8015314:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8015318:	68fb      	ldr	r3, [r7, #12]
 801531a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 801531e:	2b01      	cmp	r3, #1
 8015320:	d101      	bne.n	8015326 <HAL_SPI_TransmitReceive+0x26>
 8015322:	2302      	movs	r3, #2
 8015324:	e18a      	b.n	801563c <HAL_SPI_TransmitReceive+0x33c>
 8015326:	68fb      	ldr	r3, [r7, #12]
 8015328:	2201      	movs	r2, #1
 801532a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801532e:	f7fa f9b9 	bl	800f6a4 <HAL_GetTick>
 8015332:	6278      	str	r0, [r7, #36]	; 0x24
 8015334:	68fb      	ldr	r3, [r7, #12]
 8015336:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 801533a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 801533e:	68fb      	ldr	r3, [r7, #12]
 8015340:	685b      	ldr	r3, [r3, #4]
 8015342:	61fb      	str	r3, [r7, #28]
 8015344:	887b      	ldrh	r3, [r7, #2]
 8015346:	837b      	strh	r3, [r7, #26]
 8015348:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 801534c:	2b01      	cmp	r3, #1
 801534e:	d00f      	beq.n	8015370 <HAL_SPI_TransmitReceive+0x70>
 8015350:	69fb      	ldr	r3, [r7, #28]
 8015352:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8015356:	d107      	bne.n	8015368 <HAL_SPI_TransmitReceive+0x68>
 8015358:	68fb      	ldr	r3, [r7, #12]
 801535a:	689b      	ldr	r3, [r3, #8]
 801535c:	2b00      	cmp	r3, #0
 801535e:	d103      	bne.n	8015368 <HAL_SPI_TransmitReceive+0x68>
 8015360:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8015364:	2b04      	cmp	r3, #4
 8015366:	d003      	beq.n	8015370 <HAL_SPI_TransmitReceive+0x70>
 8015368:	2302      	movs	r3, #2
 801536a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801536e:	e15b      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 8015370:	68bb      	ldr	r3, [r7, #8]
 8015372:	2b00      	cmp	r3, #0
 8015374:	d005      	beq.n	8015382 <HAL_SPI_TransmitReceive+0x82>
 8015376:	687b      	ldr	r3, [r7, #4]
 8015378:	2b00      	cmp	r3, #0
 801537a:	d002      	beq.n	8015382 <HAL_SPI_TransmitReceive+0x82>
 801537c:	887b      	ldrh	r3, [r7, #2]
 801537e:	2b00      	cmp	r3, #0
 8015380:	d103      	bne.n	801538a <HAL_SPI_TransmitReceive+0x8a>
 8015382:	2301      	movs	r3, #1
 8015384:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8015388:	e14e      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 801538a:	68fb      	ldr	r3, [r7, #12]
 801538c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8015390:	b2db      	uxtb	r3, r3
 8015392:	2b04      	cmp	r3, #4
 8015394:	d003      	beq.n	801539e <HAL_SPI_TransmitReceive+0x9e>
 8015396:	68fb      	ldr	r3, [r7, #12]
 8015398:	2205      	movs	r2, #5
 801539a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801539e:	68fb      	ldr	r3, [r7, #12]
 80153a0:	2200      	movs	r2, #0
 80153a2:	655a      	str	r2, [r3, #84]	; 0x54
 80153a4:	68fb      	ldr	r3, [r7, #12]
 80153a6:	687a      	ldr	r2, [r7, #4]
 80153a8:	639a      	str	r2, [r3, #56]	; 0x38
 80153aa:	68fb      	ldr	r3, [r7, #12]
 80153ac:	887a      	ldrh	r2, [r7, #2]
 80153ae:	87da      	strh	r2, [r3, #62]	; 0x3e
 80153b0:	68fb      	ldr	r3, [r7, #12]
 80153b2:	887a      	ldrh	r2, [r7, #2]
 80153b4:	879a      	strh	r2, [r3, #60]	; 0x3c
 80153b6:	68fb      	ldr	r3, [r7, #12]
 80153b8:	68ba      	ldr	r2, [r7, #8]
 80153ba:	631a      	str	r2, [r3, #48]	; 0x30
 80153bc:	68fb      	ldr	r3, [r7, #12]
 80153be:	887a      	ldrh	r2, [r7, #2]
 80153c0:	86da      	strh	r2, [r3, #54]	; 0x36
 80153c2:	68fb      	ldr	r3, [r7, #12]
 80153c4:	887a      	ldrh	r2, [r7, #2]
 80153c6:	869a      	strh	r2, [r3, #52]	; 0x34
 80153c8:	68fb      	ldr	r3, [r7, #12]
 80153ca:	2200      	movs	r2, #0
 80153cc:	641a      	str	r2, [r3, #64]	; 0x40
 80153ce:	68fb      	ldr	r3, [r7, #12]
 80153d0:	2200      	movs	r2, #0
 80153d2:	645a      	str	r2, [r3, #68]	; 0x44
 80153d4:	68fb      	ldr	r3, [r7, #12]
 80153d6:	681b      	ldr	r3, [r3, #0]
 80153d8:	681b      	ldr	r3, [r3, #0]
 80153da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80153de:	2b40      	cmp	r3, #64	; 0x40
 80153e0:	d007      	beq.n	80153f2 <HAL_SPI_TransmitReceive+0xf2>
 80153e2:	68fb      	ldr	r3, [r7, #12]
 80153e4:	681b      	ldr	r3, [r3, #0]
 80153e6:	681a      	ldr	r2, [r3, #0]
 80153e8:	68fb      	ldr	r3, [r7, #12]
 80153ea:	681b      	ldr	r3, [r3, #0]
 80153ec:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80153f0:	601a      	str	r2, [r3, #0]
 80153f2:	68fb      	ldr	r3, [r7, #12]
 80153f4:	68db      	ldr	r3, [r3, #12]
 80153f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80153fa:	d178      	bne.n	80154ee <HAL_SPI_TransmitReceive+0x1ee>
 80153fc:	68fb      	ldr	r3, [r7, #12]
 80153fe:	685b      	ldr	r3, [r3, #4]
 8015400:	2b00      	cmp	r3, #0
 8015402:	d002      	beq.n	801540a <HAL_SPI_TransmitReceive+0x10a>
 8015404:	8b7b      	ldrh	r3, [r7, #26]
 8015406:	2b01      	cmp	r3, #1
 8015408:	d166      	bne.n	80154d8 <HAL_SPI_TransmitReceive+0x1d8>
 801540a:	68fb      	ldr	r3, [r7, #12]
 801540c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801540e:	881a      	ldrh	r2, [r3, #0]
 8015410:	68fb      	ldr	r3, [r7, #12]
 8015412:	681b      	ldr	r3, [r3, #0]
 8015414:	60da      	str	r2, [r3, #12]
 8015416:	68fb      	ldr	r3, [r7, #12]
 8015418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801541a:	1c9a      	adds	r2, r3, #2
 801541c:	68fb      	ldr	r3, [r7, #12]
 801541e:	631a      	str	r2, [r3, #48]	; 0x30
 8015420:	68fb      	ldr	r3, [r7, #12]
 8015422:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015424:	b29b      	uxth	r3, r3
 8015426:	3b01      	subs	r3, #1
 8015428:	b29a      	uxth	r2, r3
 801542a:	68fb      	ldr	r3, [r7, #12]
 801542c:	86da      	strh	r2, [r3, #54]	; 0x36
 801542e:	e053      	b.n	80154d8 <HAL_SPI_TransmitReceive+0x1d8>
 8015430:	68fb      	ldr	r3, [r7, #12]
 8015432:	681b      	ldr	r3, [r3, #0]
 8015434:	689b      	ldr	r3, [r3, #8]
 8015436:	f003 0302 	and.w	r3, r3, #2
 801543a:	2b02      	cmp	r3, #2
 801543c:	d11b      	bne.n	8015476 <HAL_SPI_TransmitReceive+0x176>
 801543e:	68fb      	ldr	r3, [r7, #12]
 8015440:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015442:	b29b      	uxth	r3, r3
 8015444:	2b00      	cmp	r3, #0
 8015446:	d016      	beq.n	8015476 <HAL_SPI_TransmitReceive+0x176>
 8015448:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801544a:	2b01      	cmp	r3, #1
 801544c:	d113      	bne.n	8015476 <HAL_SPI_TransmitReceive+0x176>
 801544e:	68fb      	ldr	r3, [r7, #12]
 8015450:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015452:	881a      	ldrh	r2, [r3, #0]
 8015454:	68fb      	ldr	r3, [r7, #12]
 8015456:	681b      	ldr	r3, [r3, #0]
 8015458:	60da      	str	r2, [r3, #12]
 801545a:	68fb      	ldr	r3, [r7, #12]
 801545c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801545e:	1c9a      	adds	r2, r3, #2
 8015460:	68fb      	ldr	r3, [r7, #12]
 8015462:	631a      	str	r2, [r3, #48]	; 0x30
 8015464:	68fb      	ldr	r3, [r7, #12]
 8015466:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015468:	b29b      	uxth	r3, r3
 801546a:	3b01      	subs	r3, #1
 801546c:	b29a      	uxth	r2, r3
 801546e:	68fb      	ldr	r3, [r7, #12]
 8015470:	86da      	strh	r2, [r3, #54]	; 0x36
 8015472:	2300      	movs	r3, #0
 8015474:	62fb      	str	r3, [r7, #44]	; 0x2c
 8015476:	68fb      	ldr	r3, [r7, #12]
 8015478:	681b      	ldr	r3, [r3, #0]
 801547a:	689b      	ldr	r3, [r3, #8]
 801547c:	f003 0301 	and.w	r3, r3, #1
 8015480:	2b01      	cmp	r3, #1
 8015482:	d119      	bne.n	80154b8 <HAL_SPI_TransmitReceive+0x1b8>
 8015484:	68fb      	ldr	r3, [r7, #12]
 8015486:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8015488:	b29b      	uxth	r3, r3
 801548a:	2b00      	cmp	r3, #0
 801548c:	d014      	beq.n	80154b8 <HAL_SPI_TransmitReceive+0x1b8>
 801548e:	68fb      	ldr	r3, [r7, #12]
 8015490:	681b      	ldr	r3, [r3, #0]
 8015492:	68da      	ldr	r2, [r3, #12]
 8015494:	68fb      	ldr	r3, [r7, #12]
 8015496:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015498:	b292      	uxth	r2, r2
 801549a:	801a      	strh	r2, [r3, #0]
 801549c:	68fb      	ldr	r3, [r7, #12]
 801549e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80154a0:	1c9a      	adds	r2, r3, #2
 80154a2:	68fb      	ldr	r3, [r7, #12]
 80154a4:	639a      	str	r2, [r3, #56]	; 0x38
 80154a6:	68fb      	ldr	r3, [r7, #12]
 80154a8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80154aa:	b29b      	uxth	r3, r3
 80154ac:	3b01      	subs	r3, #1
 80154ae:	b29a      	uxth	r2, r3
 80154b0:	68fb      	ldr	r3, [r7, #12]
 80154b2:	87da      	strh	r2, [r3, #62]	; 0x3e
 80154b4:	2301      	movs	r3, #1
 80154b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80154b8:	f7fa f8f4 	bl	800f6a4 <HAL_GetTick>
 80154bc:	4602      	mov	r2, r0
 80154be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80154c0:	1ad3      	subs	r3, r2, r3
 80154c2:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80154c4:	429a      	cmp	r2, r3
 80154c6:	d807      	bhi.n	80154d8 <HAL_SPI_TransmitReceive+0x1d8>
 80154c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80154ca:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80154ce:	d003      	beq.n	80154d8 <HAL_SPI_TransmitReceive+0x1d8>
 80154d0:	2303      	movs	r3, #3
 80154d2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80154d6:	e0a7      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 80154d8:	68fb      	ldr	r3, [r7, #12]
 80154da:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80154dc:	b29b      	uxth	r3, r3
 80154de:	2b00      	cmp	r3, #0
 80154e0:	d1a6      	bne.n	8015430 <HAL_SPI_TransmitReceive+0x130>
 80154e2:	68fb      	ldr	r3, [r7, #12]
 80154e4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80154e6:	b29b      	uxth	r3, r3
 80154e8:	2b00      	cmp	r3, #0
 80154ea:	d1a1      	bne.n	8015430 <HAL_SPI_TransmitReceive+0x130>
 80154ec:	e07c      	b.n	80155e8 <HAL_SPI_TransmitReceive+0x2e8>
 80154ee:	68fb      	ldr	r3, [r7, #12]
 80154f0:	685b      	ldr	r3, [r3, #4]
 80154f2:	2b00      	cmp	r3, #0
 80154f4:	d002      	beq.n	80154fc <HAL_SPI_TransmitReceive+0x1fc>
 80154f6:	8b7b      	ldrh	r3, [r7, #26]
 80154f8:	2b01      	cmp	r3, #1
 80154fa:	d16b      	bne.n	80155d4 <HAL_SPI_TransmitReceive+0x2d4>
 80154fc:	68fb      	ldr	r3, [r7, #12]
 80154fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8015500:	68fb      	ldr	r3, [r7, #12]
 8015502:	681b      	ldr	r3, [r3, #0]
 8015504:	330c      	adds	r3, #12
 8015506:	7812      	ldrb	r2, [r2, #0]
 8015508:	701a      	strb	r2, [r3, #0]
 801550a:	68fb      	ldr	r3, [r7, #12]
 801550c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801550e:	1c5a      	adds	r2, r3, #1
 8015510:	68fb      	ldr	r3, [r7, #12]
 8015512:	631a      	str	r2, [r3, #48]	; 0x30
 8015514:	68fb      	ldr	r3, [r7, #12]
 8015516:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015518:	b29b      	uxth	r3, r3
 801551a:	3b01      	subs	r3, #1
 801551c:	b29a      	uxth	r2, r3
 801551e:	68fb      	ldr	r3, [r7, #12]
 8015520:	86da      	strh	r2, [r3, #54]	; 0x36
 8015522:	e057      	b.n	80155d4 <HAL_SPI_TransmitReceive+0x2d4>
 8015524:	68fb      	ldr	r3, [r7, #12]
 8015526:	681b      	ldr	r3, [r3, #0]
 8015528:	689b      	ldr	r3, [r3, #8]
 801552a:	f003 0302 	and.w	r3, r3, #2
 801552e:	2b02      	cmp	r3, #2
 8015530:	d11c      	bne.n	801556c <HAL_SPI_TransmitReceive+0x26c>
 8015532:	68fb      	ldr	r3, [r7, #12]
 8015534:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8015536:	b29b      	uxth	r3, r3
 8015538:	2b00      	cmp	r3, #0
 801553a:	d017      	beq.n	801556c <HAL_SPI_TransmitReceive+0x26c>
 801553c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801553e:	2b01      	cmp	r3, #1
 8015540:	d114      	bne.n	801556c <HAL_SPI_TransmitReceive+0x26c>
 8015542:	68fb      	ldr	r3, [r7, #12]
 8015544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8015546:	68fb      	ldr	r3, [r7, #12]
 8015548:	681b      	ldr	r3, [r3, #0]
 801554a:	330c      	adds	r3, #12
 801554c:	7812      	ldrb	r2, [r2, #0]
 801554e:	701a      	strb	r2, [r3, #0]
 8015550:	68fb      	ldr	r3, [r7, #12]
 8015552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015554:	1c5a      	adds	r2, r3, #1
 8015556:	68fb      	ldr	r3, [r7, #12]
 8015558:	631a      	str	r2, [r3, #48]	; 0x30
 801555a:	68fb      	ldr	r3, [r7, #12]
 801555c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801555e:	b29b      	uxth	r3, r3
 8015560:	3b01      	subs	r3, #1
 8015562:	b29a      	uxth	r2, r3
 8015564:	68fb      	ldr	r3, [r7, #12]
 8015566:	86da      	strh	r2, [r3, #54]	; 0x36
 8015568:	2300      	movs	r3, #0
 801556a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801556c:	68fb      	ldr	r3, [r7, #12]
 801556e:	681b      	ldr	r3, [r3, #0]
 8015570:	689b      	ldr	r3, [r3, #8]
 8015572:	f003 0301 	and.w	r3, r3, #1
 8015576:	2b01      	cmp	r3, #1
 8015578:	d119      	bne.n	80155ae <HAL_SPI_TransmitReceive+0x2ae>
 801557a:	68fb      	ldr	r3, [r7, #12]
 801557c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 801557e:	b29b      	uxth	r3, r3
 8015580:	2b00      	cmp	r3, #0
 8015582:	d014      	beq.n	80155ae <HAL_SPI_TransmitReceive+0x2ae>
 8015584:	68fb      	ldr	r3, [r7, #12]
 8015586:	681b      	ldr	r3, [r3, #0]
 8015588:	68da      	ldr	r2, [r3, #12]
 801558a:	68fb      	ldr	r3, [r7, #12]
 801558c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801558e:	b2d2      	uxtb	r2, r2
 8015590:	701a      	strb	r2, [r3, #0]
 8015592:	68fb      	ldr	r3, [r7, #12]
 8015594:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015596:	1c5a      	adds	r2, r3, #1
 8015598:	68fb      	ldr	r3, [r7, #12]
 801559a:	639a      	str	r2, [r3, #56]	; 0x38
 801559c:	68fb      	ldr	r3, [r7, #12]
 801559e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80155a0:	b29b      	uxth	r3, r3
 80155a2:	3b01      	subs	r3, #1
 80155a4:	b29a      	uxth	r2, r3
 80155a6:	68fb      	ldr	r3, [r7, #12]
 80155a8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80155aa:	2301      	movs	r3, #1
 80155ac:	62fb      	str	r3, [r7, #44]	; 0x2c
 80155ae:	f7fa f879 	bl	800f6a4 <HAL_GetTick>
 80155b2:	4602      	mov	r2, r0
 80155b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80155b6:	1ad3      	subs	r3, r2, r3
 80155b8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80155ba:	429a      	cmp	r2, r3
 80155bc:	d803      	bhi.n	80155c6 <HAL_SPI_TransmitReceive+0x2c6>
 80155be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80155c0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80155c4:	d102      	bne.n	80155cc <HAL_SPI_TransmitReceive+0x2cc>
 80155c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80155c8:	2b00      	cmp	r3, #0
 80155ca:	d103      	bne.n	80155d4 <HAL_SPI_TransmitReceive+0x2d4>
 80155cc:	2303      	movs	r3, #3
 80155ce:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80155d2:	e029      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 80155d4:	68fb      	ldr	r3, [r7, #12]
 80155d6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80155d8:	b29b      	uxth	r3, r3
 80155da:	2b00      	cmp	r3, #0
 80155dc:	d1a2      	bne.n	8015524 <HAL_SPI_TransmitReceive+0x224>
 80155de:	68fb      	ldr	r3, [r7, #12]
 80155e0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80155e2:	b29b      	uxth	r3, r3
 80155e4:	2b00      	cmp	r3, #0
 80155e6:	d19d      	bne.n	8015524 <HAL_SPI_TransmitReceive+0x224>
 80155e8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80155ea:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80155ec:	68f8      	ldr	r0, [r7, #12]
 80155ee:	f000 f917 	bl	8015820 <SPI_EndRxTxTransaction>
 80155f2:	4603      	mov	r3, r0
 80155f4:	2b00      	cmp	r3, #0
 80155f6:	d006      	beq.n	8015606 <HAL_SPI_TransmitReceive+0x306>
 80155f8:	2301      	movs	r3, #1
 80155fa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80155fe:	68fb      	ldr	r3, [r7, #12]
 8015600:	2220      	movs	r2, #32
 8015602:	655a      	str	r2, [r3, #84]	; 0x54
 8015604:	e010      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 8015606:	68fb      	ldr	r3, [r7, #12]
 8015608:	689b      	ldr	r3, [r3, #8]
 801560a:	2b00      	cmp	r3, #0
 801560c:	d10b      	bne.n	8015626 <HAL_SPI_TransmitReceive+0x326>
 801560e:	2300      	movs	r3, #0
 8015610:	617b      	str	r3, [r7, #20]
 8015612:	68fb      	ldr	r3, [r7, #12]
 8015614:	681b      	ldr	r3, [r3, #0]
 8015616:	68db      	ldr	r3, [r3, #12]
 8015618:	617b      	str	r3, [r7, #20]
 801561a:	68fb      	ldr	r3, [r7, #12]
 801561c:	681b      	ldr	r3, [r3, #0]
 801561e:	689b      	ldr	r3, [r3, #8]
 8015620:	617b      	str	r3, [r7, #20]
 8015622:	697b      	ldr	r3, [r7, #20]
 8015624:	e000      	b.n	8015628 <HAL_SPI_TransmitReceive+0x328>
 8015626:	bf00      	nop
 8015628:	68fb      	ldr	r3, [r7, #12]
 801562a:	2201      	movs	r2, #1
 801562c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8015630:	68fb      	ldr	r3, [r7, #12]
 8015632:	2200      	movs	r2, #0
 8015634:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8015638:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 801563c:	4618      	mov	r0, r3
 801563e:	3730      	adds	r7, #48	; 0x30
 8015640:	46bd      	mov	sp, r7
 8015642:	bd80      	pop	{r7, pc}

08015644 <SPI_WaitFlagStateUntilTimeout>:
 8015644:	b580      	push	{r7, lr}
 8015646:	b088      	sub	sp, #32
 8015648:	af00      	add	r7, sp, #0
 801564a:	60f8      	str	r0, [r7, #12]
 801564c:	60b9      	str	r1, [r7, #8]
 801564e:	603b      	str	r3, [r7, #0]
 8015650:	4613      	mov	r3, r2
 8015652:	71fb      	strb	r3, [r7, #7]
 8015654:	f7fa f826 	bl	800f6a4 <HAL_GetTick>
 8015658:	4602      	mov	r2, r0
 801565a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801565c:	1a9b      	subs	r3, r3, r2
 801565e:	683a      	ldr	r2, [r7, #0]
 8015660:	4413      	add	r3, r2
 8015662:	61fb      	str	r3, [r7, #28]
 8015664:	f7fa f81e 	bl	800f6a4 <HAL_GetTick>
 8015668:	61b8      	str	r0, [r7, #24]
 801566a:	4b39      	ldr	r3, [pc, #228]	; (8015750 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 801566c:	681b      	ldr	r3, [r3, #0]
 801566e:	015b      	lsls	r3, r3, #5
 8015670:	0d1b      	lsrs	r3, r3, #20
 8015672:	69fa      	ldr	r2, [r7, #28]
 8015674:	fb02 f303 	mul.w	r3, r2, r3
 8015678:	617b      	str	r3, [r7, #20]
 801567a:	e054      	b.n	8015726 <SPI_WaitFlagStateUntilTimeout+0xe2>
 801567c:	683b      	ldr	r3, [r7, #0]
 801567e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8015682:	d050      	beq.n	8015726 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8015684:	f7fa f80e 	bl	800f6a4 <HAL_GetTick>
 8015688:	4602      	mov	r2, r0
 801568a:	69bb      	ldr	r3, [r7, #24]
 801568c:	1ad3      	subs	r3, r2, r3
 801568e:	69fa      	ldr	r2, [r7, #28]
 8015690:	429a      	cmp	r2, r3
 8015692:	d902      	bls.n	801569a <SPI_WaitFlagStateUntilTimeout+0x56>
 8015694:	69fb      	ldr	r3, [r7, #28]
 8015696:	2b00      	cmp	r3, #0
 8015698:	d13d      	bne.n	8015716 <SPI_WaitFlagStateUntilTimeout+0xd2>
 801569a:	68fb      	ldr	r3, [r7, #12]
 801569c:	681b      	ldr	r3, [r3, #0]
 801569e:	685a      	ldr	r2, [r3, #4]
 80156a0:	68fb      	ldr	r3, [r7, #12]
 80156a2:	681b      	ldr	r3, [r3, #0]
 80156a4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80156a8:	605a      	str	r2, [r3, #4]
 80156aa:	68fb      	ldr	r3, [r7, #12]
 80156ac:	685b      	ldr	r3, [r3, #4]
 80156ae:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80156b2:	d111      	bne.n	80156d8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80156b4:	68fb      	ldr	r3, [r7, #12]
 80156b6:	689b      	ldr	r3, [r3, #8]
 80156b8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80156bc:	d004      	beq.n	80156c8 <SPI_WaitFlagStateUntilTimeout+0x84>
 80156be:	68fb      	ldr	r3, [r7, #12]
 80156c0:	689b      	ldr	r3, [r3, #8]
 80156c2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80156c6:	d107      	bne.n	80156d8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80156c8:	68fb      	ldr	r3, [r7, #12]
 80156ca:	681b      	ldr	r3, [r3, #0]
 80156cc:	681a      	ldr	r2, [r3, #0]
 80156ce:	68fb      	ldr	r3, [r7, #12]
 80156d0:	681b      	ldr	r3, [r3, #0]
 80156d2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80156d6:	601a      	str	r2, [r3, #0]
 80156d8:	68fb      	ldr	r3, [r7, #12]
 80156da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156dc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80156e0:	d10f      	bne.n	8015702 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80156e2:	68fb      	ldr	r3, [r7, #12]
 80156e4:	681b      	ldr	r3, [r3, #0]
 80156e6:	681a      	ldr	r2, [r3, #0]
 80156e8:	68fb      	ldr	r3, [r7, #12]
 80156ea:	681b      	ldr	r3, [r3, #0]
 80156ec:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80156f0:	601a      	str	r2, [r3, #0]
 80156f2:	68fb      	ldr	r3, [r7, #12]
 80156f4:	681b      	ldr	r3, [r3, #0]
 80156f6:	681a      	ldr	r2, [r3, #0]
 80156f8:	68fb      	ldr	r3, [r7, #12]
 80156fa:	681b      	ldr	r3, [r3, #0]
 80156fc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8015700:	601a      	str	r2, [r3, #0]
 8015702:	68fb      	ldr	r3, [r7, #12]
 8015704:	2201      	movs	r2, #1
 8015706:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801570a:	68fb      	ldr	r3, [r7, #12]
 801570c:	2200      	movs	r2, #0
 801570e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8015712:	2303      	movs	r3, #3
 8015714:	e017      	b.n	8015746 <SPI_WaitFlagStateUntilTimeout+0x102>
 8015716:	697b      	ldr	r3, [r7, #20]
 8015718:	2b00      	cmp	r3, #0
 801571a:	d101      	bne.n	8015720 <SPI_WaitFlagStateUntilTimeout+0xdc>
 801571c:	2300      	movs	r3, #0
 801571e:	61fb      	str	r3, [r7, #28]
 8015720:	697b      	ldr	r3, [r7, #20]
 8015722:	3b01      	subs	r3, #1
 8015724:	617b      	str	r3, [r7, #20]
 8015726:	68fb      	ldr	r3, [r7, #12]
 8015728:	681b      	ldr	r3, [r3, #0]
 801572a:	689a      	ldr	r2, [r3, #8]
 801572c:	68bb      	ldr	r3, [r7, #8]
 801572e:	4013      	ands	r3, r2
 8015730:	68ba      	ldr	r2, [r7, #8]
 8015732:	429a      	cmp	r2, r3
 8015734:	bf0c      	ite	eq
 8015736:	2301      	moveq	r3, #1
 8015738:	2300      	movne	r3, #0
 801573a:	b2db      	uxtb	r3, r3
 801573c:	461a      	mov	r2, r3
 801573e:	79fb      	ldrb	r3, [r7, #7]
 8015740:	429a      	cmp	r2, r3
 8015742:	d19b      	bne.n	801567c <SPI_WaitFlagStateUntilTimeout+0x38>
 8015744:	2300      	movs	r3, #0
 8015746:	4618      	mov	r0, r3
 8015748:	3720      	adds	r7, #32
 801574a:	46bd      	mov	sp, r7
 801574c:	bd80      	pop	{r7, pc}
 801574e:	bf00      	nop
 8015750:	20000004 	.word	0x20000004

08015754 <SPI_EndRxTransaction>:
 8015754:	b580      	push	{r7, lr}
 8015756:	b086      	sub	sp, #24
 8015758:	af02      	add	r7, sp, #8
 801575a:	60f8      	str	r0, [r7, #12]
 801575c:	60b9      	str	r1, [r7, #8]
 801575e:	607a      	str	r2, [r7, #4]
 8015760:	68fb      	ldr	r3, [r7, #12]
 8015762:	685b      	ldr	r3, [r3, #4]
 8015764:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8015768:	d111      	bne.n	801578e <SPI_EndRxTransaction+0x3a>
 801576a:	68fb      	ldr	r3, [r7, #12]
 801576c:	689b      	ldr	r3, [r3, #8]
 801576e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8015772:	d004      	beq.n	801577e <SPI_EndRxTransaction+0x2a>
 8015774:	68fb      	ldr	r3, [r7, #12]
 8015776:	689b      	ldr	r3, [r3, #8]
 8015778:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801577c:	d107      	bne.n	801578e <SPI_EndRxTransaction+0x3a>
 801577e:	68fb      	ldr	r3, [r7, #12]
 8015780:	681b      	ldr	r3, [r3, #0]
 8015782:	681a      	ldr	r2, [r3, #0]
 8015784:	68fb      	ldr	r3, [r7, #12]
 8015786:	681b      	ldr	r3, [r3, #0]
 8015788:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801578c:	601a      	str	r2, [r3, #0]
 801578e:	68fb      	ldr	r3, [r7, #12]
 8015790:	685b      	ldr	r3, [r3, #4]
 8015792:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8015796:	d12a      	bne.n	80157ee <SPI_EndRxTransaction+0x9a>
 8015798:	68fb      	ldr	r3, [r7, #12]
 801579a:	689b      	ldr	r3, [r3, #8]
 801579c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80157a0:	d012      	beq.n	80157c8 <SPI_EndRxTransaction+0x74>
 80157a2:	687b      	ldr	r3, [r7, #4]
 80157a4:	9300      	str	r3, [sp, #0]
 80157a6:	68bb      	ldr	r3, [r7, #8]
 80157a8:	2200      	movs	r2, #0
 80157aa:	2180      	movs	r1, #128	; 0x80
 80157ac:	68f8      	ldr	r0, [r7, #12]
 80157ae:	f7ff ff49 	bl	8015644 <SPI_WaitFlagStateUntilTimeout>
 80157b2:	4603      	mov	r3, r0
 80157b4:	2b00      	cmp	r3, #0
 80157b6:	d02d      	beq.n	8015814 <SPI_EndRxTransaction+0xc0>
 80157b8:	68fb      	ldr	r3, [r7, #12]
 80157ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80157bc:	f043 0220 	orr.w	r2, r3, #32
 80157c0:	68fb      	ldr	r3, [r7, #12]
 80157c2:	655a      	str	r2, [r3, #84]	; 0x54
 80157c4:	2303      	movs	r3, #3
 80157c6:	e026      	b.n	8015816 <SPI_EndRxTransaction+0xc2>
 80157c8:	687b      	ldr	r3, [r7, #4]
 80157ca:	9300      	str	r3, [sp, #0]
 80157cc:	68bb      	ldr	r3, [r7, #8]
 80157ce:	2200      	movs	r2, #0
 80157d0:	2101      	movs	r1, #1
 80157d2:	68f8      	ldr	r0, [r7, #12]
 80157d4:	f7ff ff36 	bl	8015644 <SPI_WaitFlagStateUntilTimeout>
 80157d8:	4603      	mov	r3, r0
 80157da:	2b00      	cmp	r3, #0
 80157dc:	d01a      	beq.n	8015814 <SPI_EndRxTransaction+0xc0>
 80157de:	68fb      	ldr	r3, [r7, #12]
 80157e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80157e2:	f043 0220 	orr.w	r2, r3, #32
 80157e6:	68fb      	ldr	r3, [r7, #12]
 80157e8:	655a      	str	r2, [r3, #84]	; 0x54
 80157ea:	2303      	movs	r3, #3
 80157ec:	e013      	b.n	8015816 <SPI_EndRxTransaction+0xc2>
 80157ee:	687b      	ldr	r3, [r7, #4]
 80157f0:	9300      	str	r3, [sp, #0]
 80157f2:	68bb      	ldr	r3, [r7, #8]
 80157f4:	2200      	movs	r2, #0
 80157f6:	2101      	movs	r1, #1
 80157f8:	68f8      	ldr	r0, [r7, #12]
 80157fa:	f7ff ff23 	bl	8015644 <SPI_WaitFlagStateUntilTimeout>
 80157fe:	4603      	mov	r3, r0
 8015800:	2b00      	cmp	r3, #0
 8015802:	d007      	beq.n	8015814 <SPI_EndRxTransaction+0xc0>
 8015804:	68fb      	ldr	r3, [r7, #12]
 8015806:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015808:	f043 0220 	orr.w	r2, r3, #32
 801580c:	68fb      	ldr	r3, [r7, #12]
 801580e:	655a      	str	r2, [r3, #84]	; 0x54
 8015810:	2303      	movs	r3, #3
 8015812:	e000      	b.n	8015816 <SPI_EndRxTransaction+0xc2>
 8015814:	2300      	movs	r3, #0
 8015816:	4618      	mov	r0, r3
 8015818:	3710      	adds	r7, #16
 801581a:	46bd      	mov	sp, r7
 801581c:	bd80      	pop	{r7, pc}
	...

08015820 <SPI_EndRxTxTransaction>:
 8015820:	b580      	push	{r7, lr}
 8015822:	b088      	sub	sp, #32
 8015824:	af02      	add	r7, sp, #8
 8015826:	60f8      	str	r0, [r7, #12]
 8015828:	60b9      	str	r1, [r7, #8]
 801582a:	607a      	str	r2, [r7, #4]
 801582c:	4b1b      	ldr	r3, [pc, #108]	; (801589c <SPI_EndRxTxTransaction+0x7c>)
 801582e:	681b      	ldr	r3, [r3, #0]
 8015830:	4a1b      	ldr	r2, [pc, #108]	; (80158a0 <SPI_EndRxTxTransaction+0x80>)
 8015832:	fba2 2303 	umull	r2, r3, r2, r3
 8015836:	0d5b      	lsrs	r3, r3, #21
 8015838:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801583c:	fb02 f303 	mul.w	r3, r2, r3
 8015840:	617b      	str	r3, [r7, #20]
 8015842:	68fb      	ldr	r3, [r7, #12]
 8015844:	685b      	ldr	r3, [r3, #4]
 8015846:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 801584a:	d112      	bne.n	8015872 <SPI_EndRxTxTransaction+0x52>
 801584c:	687b      	ldr	r3, [r7, #4]
 801584e:	9300      	str	r3, [sp, #0]
 8015850:	68bb      	ldr	r3, [r7, #8]
 8015852:	2200      	movs	r2, #0
 8015854:	2180      	movs	r1, #128	; 0x80
 8015856:	68f8      	ldr	r0, [r7, #12]
 8015858:	f7ff fef4 	bl	8015644 <SPI_WaitFlagStateUntilTimeout>
 801585c:	4603      	mov	r3, r0
 801585e:	2b00      	cmp	r3, #0
 8015860:	d016      	beq.n	8015890 <SPI_EndRxTxTransaction+0x70>
 8015862:	68fb      	ldr	r3, [r7, #12]
 8015864:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015866:	f043 0220 	orr.w	r2, r3, #32
 801586a:	68fb      	ldr	r3, [r7, #12]
 801586c:	655a      	str	r2, [r3, #84]	; 0x54
 801586e:	2303      	movs	r3, #3
 8015870:	e00f      	b.n	8015892 <SPI_EndRxTxTransaction+0x72>
 8015872:	697b      	ldr	r3, [r7, #20]
 8015874:	2b00      	cmp	r3, #0
 8015876:	d00a      	beq.n	801588e <SPI_EndRxTxTransaction+0x6e>
 8015878:	697b      	ldr	r3, [r7, #20]
 801587a:	3b01      	subs	r3, #1
 801587c:	617b      	str	r3, [r7, #20]
 801587e:	68fb      	ldr	r3, [r7, #12]
 8015880:	681b      	ldr	r3, [r3, #0]
 8015882:	689b      	ldr	r3, [r3, #8]
 8015884:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015888:	2b80      	cmp	r3, #128	; 0x80
 801588a:	d0f2      	beq.n	8015872 <SPI_EndRxTxTransaction+0x52>
 801588c:	e000      	b.n	8015890 <SPI_EndRxTxTransaction+0x70>
 801588e:	bf00      	nop
 8015890:	2300      	movs	r3, #0
 8015892:	4618      	mov	r0, r3
 8015894:	3718      	adds	r7, #24
 8015896:	46bd      	mov	sp, r7
 8015898:	bd80      	pop	{r7, pc}
 801589a:	bf00      	nop
 801589c:	20000004 	.word	0x20000004
 80158a0:	165e9f81 	.word	0x165e9f81

080158a4 <HAL_TIM_Base_Init>:
 80158a4:	b580      	push	{r7, lr}
 80158a6:	b082      	sub	sp, #8
 80158a8:	af00      	add	r7, sp, #0
 80158aa:	6078      	str	r0, [r7, #4]
 80158ac:	687b      	ldr	r3, [r7, #4]
 80158ae:	2b00      	cmp	r3, #0
 80158b0:	d101      	bne.n	80158b6 <HAL_TIM_Base_Init+0x12>
 80158b2:	2301      	movs	r3, #1
 80158b4:	e041      	b.n	801593a <HAL_TIM_Base_Init+0x96>
 80158b6:	687b      	ldr	r3, [r7, #4]
 80158b8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80158bc:	b2db      	uxtb	r3, r3
 80158be:	2b00      	cmp	r3, #0
 80158c0:	d106      	bne.n	80158d0 <HAL_TIM_Base_Init+0x2c>
 80158c2:	687b      	ldr	r3, [r7, #4]
 80158c4:	2200      	movs	r2, #0
 80158c6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80158ca:	6878      	ldr	r0, [r7, #4]
 80158cc:	f7ee fec8 	bl	8004660 <HAL_TIM_Base_MspInit>
 80158d0:	687b      	ldr	r3, [r7, #4]
 80158d2:	2202      	movs	r2, #2
 80158d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80158d8:	687b      	ldr	r3, [r7, #4]
 80158da:	681a      	ldr	r2, [r3, #0]
 80158dc:	687b      	ldr	r3, [r7, #4]
 80158de:	3304      	adds	r3, #4
 80158e0:	4619      	mov	r1, r3
 80158e2:	4610      	mov	r0, r2
 80158e4:	f000 fd8c 	bl	8016400 <TIM_Base_SetConfig>
 80158e8:	687b      	ldr	r3, [r7, #4]
 80158ea:	2201      	movs	r2, #1
 80158ec:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80158f0:	687b      	ldr	r3, [r7, #4]
 80158f2:	2201      	movs	r2, #1
 80158f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80158f8:	687b      	ldr	r3, [r7, #4]
 80158fa:	2201      	movs	r2, #1
 80158fc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015900:	687b      	ldr	r3, [r7, #4]
 8015902:	2201      	movs	r2, #1
 8015904:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015908:	687b      	ldr	r3, [r7, #4]
 801590a:	2201      	movs	r2, #1
 801590c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015910:	687b      	ldr	r3, [r7, #4]
 8015912:	2201      	movs	r2, #1
 8015914:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8015918:	687b      	ldr	r3, [r7, #4]
 801591a:	2201      	movs	r2, #1
 801591c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8015920:	687b      	ldr	r3, [r7, #4]
 8015922:	2201      	movs	r2, #1
 8015924:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8015928:	687b      	ldr	r3, [r7, #4]
 801592a:	2201      	movs	r2, #1
 801592c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8015930:	687b      	ldr	r3, [r7, #4]
 8015932:	2201      	movs	r2, #1
 8015934:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015938:	2300      	movs	r3, #0
 801593a:	4618      	mov	r0, r3
 801593c:	3708      	adds	r7, #8
 801593e:	46bd      	mov	sp, r7
 8015940:	bd80      	pop	{r7, pc}
	...

08015944 <HAL_TIM_Base_Start>:
 8015944:	b480      	push	{r7}
 8015946:	b085      	sub	sp, #20
 8015948:	af00      	add	r7, sp, #0
 801594a:	6078      	str	r0, [r7, #4]
 801594c:	687b      	ldr	r3, [r7, #4]
 801594e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015952:	b2db      	uxtb	r3, r3
 8015954:	2b01      	cmp	r3, #1
 8015956:	d001      	beq.n	801595c <HAL_TIM_Base_Start+0x18>
 8015958:	2301      	movs	r3, #1
 801595a:	e046      	b.n	80159ea <HAL_TIM_Base_Start+0xa6>
 801595c:	687b      	ldr	r3, [r7, #4]
 801595e:	2202      	movs	r2, #2
 8015960:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015964:	687b      	ldr	r3, [r7, #4]
 8015966:	681b      	ldr	r3, [r3, #0]
 8015968:	4a23      	ldr	r2, [pc, #140]	; (80159f8 <HAL_TIM_Base_Start+0xb4>)
 801596a:	4293      	cmp	r3, r2
 801596c:	d022      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 801596e:	687b      	ldr	r3, [r7, #4]
 8015970:	681b      	ldr	r3, [r3, #0]
 8015972:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015976:	d01d      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 8015978:	687b      	ldr	r3, [r7, #4]
 801597a:	681b      	ldr	r3, [r3, #0]
 801597c:	4a1f      	ldr	r2, [pc, #124]	; (80159fc <HAL_TIM_Base_Start+0xb8>)
 801597e:	4293      	cmp	r3, r2
 8015980:	d018      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 8015982:	687b      	ldr	r3, [r7, #4]
 8015984:	681b      	ldr	r3, [r3, #0]
 8015986:	4a1e      	ldr	r2, [pc, #120]	; (8015a00 <HAL_TIM_Base_Start+0xbc>)
 8015988:	4293      	cmp	r3, r2
 801598a:	d013      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 801598c:	687b      	ldr	r3, [r7, #4]
 801598e:	681b      	ldr	r3, [r3, #0]
 8015990:	4a1c      	ldr	r2, [pc, #112]	; (8015a04 <HAL_TIM_Base_Start+0xc0>)
 8015992:	4293      	cmp	r3, r2
 8015994:	d00e      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 8015996:	687b      	ldr	r3, [r7, #4]
 8015998:	681b      	ldr	r3, [r3, #0]
 801599a:	4a1b      	ldr	r2, [pc, #108]	; (8015a08 <HAL_TIM_Base_Start+0xc4>)
 801599c:	4293      	cmp	r3, r2
 801599e:	d009      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 80159a0:	687b      	ldr	r3, [r7, #4]
 80159a2:	681b      	ldr	r3, [r3, #0]
 80159a4:	4a19      	ldr	r2, [pc, #100]	; (8015a0c <HAL_TIM_Base_Start+0xc8>)
 80159a6:	4293      	cmp	r3, r2
 80159a8:	d004      	beq.n	80159b4 <HAL_TIM_Base_Start+0x70>
 80159aa:	687b      	ldr	r3, [r7, #4]
 80159ac:	681b      	ldr	r3, [r3, #0]
 80159ae:	4a18      	ldr	r2, [pc, #96]	; (8015a10 <HAL_TIM_Base_Start+0xcc>)
 80159b0:	4293      	cmp	r3, r2
 80159b2:	d111      	bne.n	80159d8 <HAL_TIM_Base_Start+0x94>
 80159b4:	687b      	ldr	r3, [r7, #4]
 80159b6:	681b      	ldr	r3, [r3, #0]
 80159b8:	689b      	ldr	r3, [r3, #8]
 80159ba:	f003 0307 	and.w	r3, r3, #7
 80159be:	60fb      	str	r3, [r7, #12]
 80159c0:	68fb      	ldr	r3, [r7, #12]
 80159c2:	2b06      	cmp	r3, #6
 80159c4:	d010      	beq.n	80159e8 <HAL_TIM_Base_Start+0xa4>
 80159c6:	687b      	ldr	r3, [r7, #4]
 80159c8:	681b      	ldr	r3, [r3, #0]
 80159ca:	681a      	ldr	r2, [r3, #0]
 80159cc:	687b      	ldr	r3, [r7, #4]
 80159ce:	681b      	ldr	r3, [r3, #0]
 80159d0:	f042 0201 	orr.w	r2, r2, #1
 80159d4:	601a      	str	r2, [r3, #0]
 80159d6:	e007      	b.n	80159e8 <HAL_TIM_Base_Start+0xa4>
 80159d8:	687b      	ldr	r3, [r7, #4]
 80159da:	681b      	ldr	r3, [r3, #0]
 80159dc:	681a      	ldr	r2, [r3, #0]
 80159de:	687b      	ldr	r3, [r7, #4]
 80159e0:	681b      	ldr	r3, [r3, #0]
 80159e2:	f042 0201 	orr.w	r2, r2, #1
 80159e6:	601a      	str	r2, [r3, #0]
 80159e8:	2300      	movs	r3, #0
 80159ea:	4618      	mov	r0, r3
 80159ec:	3714      	adds	r7, #20
 80159ee:	46bd      	mov	sp, r7
 80159f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80159f4:	4770      	bx	lr
 80159f6:	bf00      	nop
 80159f8:	40010000 	.word	0x40010000
 80159fc:	40000400 	.word	0x40000400
 8015a00:	40000800 	.word	0x40000800
 8015a04:	40000c00 	.word	0x40000c00
 8015a08:	40010400 	.word	0x40010400
 8015a0c:	40014000 	.word	0x40014000
 8015a10:	40001800 	.word	0x40001800

08015a14 <HAL_TIM_Base_Start_IT>:
 8015a14:	b480      	push	{r7}
 8015a16:	b085      	sub	sp, #20
 8015a18:	af00      	add	r7, sp, #0
 8015a1a:	6078      	str	r0, [r7, #4]
 8015a1c:	687b      	ldr	r3, [r7, #4]
 8015a1e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015a22:	b2db      	uxtb	r3, r3
 8015a24:	2b01      	cmp	r3, #1
 8015a26:	d001      	beq.n	8015a2c <HAL_TIM_Base_Start_IT+0x18>
 8015a28:	2301      	movs	r3, #1
 8015a2a:	e04e      	b.n	8015aca <HAL_TIM_Base_Start_IT+0xb6>
 8015a2c:	687b      	ldr	r3, [r7, #4]
 8015a2e:	2202      	movs	r2, #2
 8015a30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015a34:	687b      	ldr	r3, [r7, #4]
 8015a36:	681b      	ldr	r3, [r3, #0]
 8015a38:	68da      	ldr	r2, [r3, #12]
 8015a3a:	687b      	ldr	r3, [r7, #4]
 8015a3c:	681b      	ldr	r3, [r3, #0]
 8015a3e:	f042 0201 	orr.w	r2, r2, #1
 8015a42:	60da      	str	r2, [r3, #12]
 8015a44:	687b      	ldr	r3, [r7, #4]
 8015a46:	681b      	ldr	r3, [r3, #0]
 8015a48:	4a23      	ldr	r2, [pc, #140]	; (8015ad8 <HAL_TIM_Base_Start_IT+0xc4>)
 8015a4a:	4293      	cmp	r3, r2
 8015a4c:	d022      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a4e:	687b      	ldr	r3, [r7, #4]
 8015a50:	681b      	ldr	r3, [r3, #0]
 8015a52:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015a56:	d01d      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a58:	687b      	ldr	r3, [r7, #4]
 8015a5a:	681b      	ldr	r3, [r3, #0]
 8015a5c:	4a1f      	ldr	r2, [pc, #124]	; (8015adc <HAL_TIM_Base_Start_IT+0xc8>)
 8015a5e:	4293      	cmp	r3, r2
 8015a60:	d018      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a62:	687b      	ldr	r3, [r7, #4]
 8015a64:	681b      	ldr	r3, [r3, #0]
 8015a66:	4a1e      	ldr	r2, [pc, #120]	; (8015ae0 <HAL_TIM_Base_Start_IT+0xcc>)
 8015a68:	4293      	cmp	r3, r2
 8015a6a:	d013      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a6c:	687b      	ldr	r3, [r7, #4]
 8015a6e:	681b      	ldr	r3, [r3, #0]
 8015a70:	4a1c      	ldr	r2, [pc, #112]	; (8015ae4 <HAL_TIM_Base_Start_IT+0xd0>)
 8015a72:	4293      	cmp	r3, r2
 8015a74:	d00e      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a76:	687b      	ldr	r3, [r7, #4]
 8015a78:	681b      	ldr	r3, [r3, #0]
 8015a7a:	4a1b      	ldr	r2, [pc, #108]	; (8015ae8 <HAL_TIM_Base_Start_IT+0xd4>)
 8015a7c:	4293      	cmp	r3, r2
 8015a7e:	d009      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a80:	687b      	ldr	r3, [r7, #4]
 8015a82:	681b      	ldr	r3, [r3, #0]
 8015a84:	4a19      	ldr	r2, [pc, #100]	; (8015aec <HAL_TIM_Base_Start_IT+0xd8>)
 8015a86:	4293      	cmp	r3, r2
 8015a88:	d004      	beq.n	8015a94 <HAL_TIM_Base_Start_IT+0x80>
 8015a8a:	687b      	ldr	r3, [r7, #4]
 8015a8c:	681b      	ldr	r3, [r3, #0]
 8015a8e:	4a18      	ldr	r2, [pc, #96]	; (8015af0 <HAL_TIM_Base_Start_IT+0xdc>)
 8015a90:	4293      	cmp	r3, r2
 8015a92:	d111      	bne.n	8015ab8 <HAL_TIM_Base_Start_IT+0xa4>
 8015a94:	687b      	ldr	r3, [r7, #4]
 8015a96:	681b      	ldr	r3, [r3, #0]
 8015a98:	689b      	ldr	r3, [r3, #8]
 8015a9a:	f003 0307 	and.w	r3, r3, #7
 8015a9e:	60fb      	str	r3, [r7, #12]
 8015aa0:	68fb      	ldr	r3, [r7, #12]
 8015aa2:	2b06      	cmp	r3, #6
 8015aa4:	d010      	beq.n	8015ac8 <HAL_TIM_Base_Start_IT+0xb4>
 8015aa6:	687b      	ldr	r3, [r7, #4]
 8015aa8:	681b      	ldr	r3, [r3, #0]
 8015aaa:	681a      	ldr	r2, [r3, #0]
 8015aac:	687b      	ldr	r3, [r7, #4]
 8015aae:	681b      	ldr	r3, [r3, #0]
 8015ab0:	f042 0201 	orr.w	r2, r2, #1
 8015ab4:	601a      	str	r2, [r3, #0]
 8015ab6:	e007      	b.n	8015ac8 <HAL_TIM_Base_Start_IT+0xb4>
 8015ab8:	687b      	ldr	r3, [r7, #4]
 8015aba:	681b      	ldr	r3, [r3, #0]
 8015abc:	681a      	ldr	r2, [r3, #0]
 8015abe:	687b      	ldr	r3, [r7, #4]
 8015ac0:	681b      	ldr	r3, [r3, #0]
 8015ac2:	f042 0201 	orr.w	r2, r2, #1
 8015ac6:	601a      	str	r2, [r3, #0]
 8015ac8:	2300      	movs	r3, #0
 8015aca:	4618      	mov	r0, r3
 8015acc:	3714      	adds	r7, #20
 8015ace:	46bd      	mov	sp, r7
 8015ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ad4:	4770      	bx	lr
 8015ad6:	bf00      	nop
 8015ad8:	40010000 	.word	0x40010000
 8015adc:	40000400 	.word	0x40000400
 8015ae0:	40000800 	.word	0x40000800
 8015ae4:	40000c00 	.word	0x40000c00
 8015ae8:	40010400 	.word	0x40010400
 8015aec:	40014000 	.word	0x40014000
 8015af0:	40001800 	.word	0x40001800

08015af4 <HAL_TIM_OC_Init>:
 8015af4:	b580      	push	{r7, lr}
 8015af6:	b082      	sub	sp, #8
 8015af8:	af00      	add	r7, sp, #0
 8015afa:	6078      	str	r0, [r7, #4]
 8015afc:	687b      	ldr	r3, [r7, #4]
 8015afe:	2b00      	cmp	r3, #0
 8015b00:	d101      	bne.n	8015b06 <HAL_TIM_OC_Init+0x12>
 8015b02:	2301      	movs	r3, #1
 8015b04:	e041      	b.n	8015b8a <HAL_TIM_OC_Init+0x96>
 8015b06:	687b      	ldr	r3, [r7, #4]
 8015b08:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015b0c:	b2db      	uxtb	r3, r3
 8015b0e:	2b00      	cmp	r3, #0
 8015b10:	d106      	bne.n	8015b20 <HAL_TIM_OC_Init+0x2c>
 8015b12:	687b      	ldr	r3, [r7, #4]
 8015b14:	2200      	movs	r2, #0
 8015b16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015b1a:	6878      	ldr	r0, [r7, #4]
 8015b1c:	f000 f839 	bl	8015b92 <HAL_TIM_OC_MspInit>
 8015b20:	687b      	ldr	r3, [r7, #4]
 8015b22:	2202      	movs	r2, #2
 8015b24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015b28:	687b      	ldr	r3, [r7, #4]
 8015b2a:	681a      	ldr	r2, [r3, #0]
 8015b2c:	687b      	ldr	r3, [r7, #4]
 8015b2e:	3304      	adds	r3, #4
 8015b30:	4619      	mov	r1, r3
 8015b32:	4610      	mov	r0, r2
 8015b34:	f000 fc64 	bl	8016400 <TIM_Base_SetConfig>
 8015b38:	687b      	ldr	r3, [r7, #4]
 8015b3a:	2201      	movs	r2, #1
 8015b3c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8015b40:	687b      	ldr	r3, [r7, #4]
 8015b42:	2201      	movs	r2, #1
 8015b44:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015b48:	687b      	ldr	r3, [r7, #4]
 8015b4a:	2201      	movs	r2, #1
 8015b4c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015b50:	687b      	ldr	r3, [r7, #4]
 8015b52:	2201      	movs	r2, #1
 8015b54:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015b58:	687b      	ldr	r3, [r7, #4]
 8015b5a:	2201      	movs	r2, #1
 8015b5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015b60:	687b      	ldr	r3, [r7, #4]
 8015b62:	2201      	movs	r2, #1
 8015b64:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8015b68:	687b      	ldr	r3, [r7, #4]
 8015b6a:	2201      	movs	r2, #1
 8015b6c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8015b70:	687b      	ldr	r3, [r7, #4]
 8015b72:	2201      	movs	r2, #1
 8015b74:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8015b78:	687b      	ldr	r3, [r7, #4]
 8015b7a:	2201      	movs	r2, #1
 8015b7c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8015b80:	687b      	ldr	r3, [r7, #4]
 8015b82:	2201      	movs	r2, #1
 8015b84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015b88:	2300      	movs	r3, #0
 8015b8a:	4618      	mov	r0, r3
 8015b8c:	3708      	adds	r7, #8
 8015b8e:	46bd      	mov	sp, r7
 8015b90:	bd80      	pop	{r7, pc}

08015b92 <HAL_TIM_OC_MspInit>:
 8015b92:	b480      	push	{r7}
 8015b94:	b083      	sub	sp, #12
 8015b96:	af00      	add	r7, sp, #0
 8015b98:	6078      	str	r0, [r7, #4]
 8015b9a:	bf00      	nop
 8015b9c:	370c      	adds	r7, #12
 8015b9e:	46bd      	mov	sp, r7
 8015ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ba4:	4770      	bx	lr

08015ba6 <HAL_TIM_PWM_Init>:
 8015ba6:	b580      	push	{r7, lr}
 8015ba8:	b082      	sub	sp, #8
 8015baa:	af00      	add	r7, sp, #0
 8015bac:	6078      	str	r0, [r7, #4]
 8015bae:	687b      	ldr	r3, [r7, #4]
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	d101      	bne.n	8015bb8 <HAL_TIM_PWM_Init+0x12>
 8015bb4:	2301      	movs	r3, #1
 8015bb6:	e041      	b.n	8015c3c <HAL_TIM_PWM_Init+0x96>
 8015bb8:	687b      	ldr	r3, [r7, #4]
 8015bba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8015bbe:	b2db      	uxtb	r3, r3
 8015bc0:	2b00      	cmp	r3, #0
 8015bc2:	d106      	bne.n	8015bd2 <HAL_TIM_PWM_Init+0x2c>
 8015bc4:	687b      	ldr	r3, [r7, #4]
 8015bc6:	2200      	movs	r2, #0
 8015bc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8015bcc:	6878      	ldr	r0, [r7, #4]
 8015bce:	f7ee fcf9 	bl	80045c4 <HAL_TIM_PWM_MspInit>
 8015bd2:	687b      	ldr	r3, [r7, #4]
 8015bd4:	2202      	movs	r2, #2
 8015bd6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015bda:	687b      	ldr	r3, [r7, #4]
 8015bdc:	681a      	ldr	r2, [r3, #0]
 8015bde:	687b      	ldr	r3, [r7, #4]
 8015be0:	3304      	adds	r3, #4
 8015be2:	4619      	mov	r1, r3
 8015be4:	4610      	mov	r0, r2
 8015be6:	f000 fc0b 	bl	8016400 <TIM_Base_SetConfig>
 8015bea:	687b      	ldr	r3, [r7, #4]
 8015bec:	2201      	movs	r2, #1
 8015bee:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8015bf2:	687b      	ldr	r3, [r7, #4]
 8015bf4:	2201      	movs	r2, #1
 8015bf6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015bfa:	687b      	ldr	r3, [r7, #4]
 8015bfc:	2201      	movs	r2, #1
 8015bfe:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015c02:	687b      	ldr	r3, [r7, #4]
 8015c04:	2201      	movs	r2, #1
 8015c06:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015c0a:	687b      	ldr	r3, [r7, #4]
 8015c0c:	2201      	movs	r2, #1
 8015c0e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015c12:	687b      	ldr	r3, [r7, #4]
 8015c14:	2201      	movs	r2, #1
 8015c16:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8015c1a:	687b      	ldr	r3, [r7, #4]
 8015c1c:	2201      	movs	r2, #1
 8015c1e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8015c22:	687b      	ldr	r3, [r7, #4]
 8015c24:	2201      	movs	r2, #1
 8015c26:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8015c2a:	687b      	ldr	r3, [r7, #4]
 8015c2c:	2201      	movs	r2, #1
 8015c2e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8015c32:	687b      	ldr	r3, [r7, #4]
 8015c34:	2201      	movs	r2, #1
 8015c36:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8015c3a:	2300      	movs	r3, #0
 8015c3c:	4618      	mov	r0, r3
 8015c3e:	3708      	adds	r7, #8
 8015c40:	46bd      	mov	sp, r7
 8015c42:	bd80      	pop	{r7, pc}

08015c44 <HAL_TIM_PWM_Start>:
 8015c44:	b580      	push	{r7, lr}
 8015c46:	b084      	sub	sp, #16
 8015c48:	af00      	add	r7, sp, #0
 8015c4a:	6078      	str	r0, [r7, #4]
 8015c4c:	6039      	str	r1, [r7, #0]
 8015c4e:	683b      	ldr	r3, [r7, #0]
 8015c50:	2b00      	cmp	r3, #0
 8015c52:	d109      	bne.n	8015c68 <HAL_TIM_PWM_Start+0x24>
 8015c54:	687b      	ldr	r3, [r7, #4]
 8015c56:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8015c5a:	b2db      	uxtb	r3, r3
 8015c5c:	2b01      	cmp	r3, #1
 8015c5e:	bf14      	ite	ne
 8015c60:	2301      	movne	r3, #1
 8015c62:	2300      	moveq	r3, #0
 8015c64:	b2db      	uxtb	r3, r3
 8015c66:	e022      	b.n	8015cae <HAL_TIM_PWM_Start+0x6a>
 8015c68:	683b      	ldr	r3, [r7, #0]
 8015c6a:	2b04      	cmp	r3, #4
 8015c6c:	d109      	bne.n	8015c82 <HAL_TIM_PWM_Start+0x3e>
 8015c6e:	687b      	ldr	r3, [r7, #4]
 8015c70:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8015c74:	b2db      	uxtb	r3, r3
 8015c76:	2b01      	cmp	r3, #1
 8015c78:	bf14      	ite	ne
 8015c7a:	2301      	movne	r3, #1
 8015c7c:	2300      	moveq	r3, #0
 8015c7e:	b2db      	uxtb	r3, r3
 8015c80:	e015      	b.n	8015cae <HAL_TIM_PWM_Start+0x6a>
 8015c82:	683b      	ldr	r3, [r7, #0]
 8015c84:	2b08      	cmp	r3, #8
 8015c86:	d109      	bne.n	8015c9c <HAL_TIM_PWM_Start+0x58>
 8015c88:	687b      	ldr	r3, [r7, #4]
 8015c8a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8015c8e:	b2db      	uxtb	r3, r3
 8015c90:	2b01      	cmp	r3, #1
 8015c92:	bf14      	ite	ne
 8015c94:	2301      	movne	r3, #1
 8015c96:	2300      	moveq	r3, #0
 8015c98:	b2db      	uxtb	r3, r3
 8015c9a:	e008      	b.n	8015cae <HAL_TIM_PWM_Start+0x6a>
 8015c9c:	687b      	ldr	r3, [r7, #4]
 8015c9e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8015ca2:	b2db      	uxtb	r3, r3
 8015ca4:	2b01      	cmp	r3, #1
 8015ca6:	bf14      	ite	ne
 8015ca8:	2301      	movne	r3, #1
 8015caa:	2300      	moveq	r3, #0
 8015cac:	b2db      	uxtb	r3, r3
 8015cae:	2b00      	cmp	r3, #0
 8015cb0:	d001      	beq.n	8015cb6 <HAL_TIM_PWM_Start+0x72>
 8015cb2:	2301      	movs	r3, #1
 8015cb4:	e07c      	b.n	8015db0 <HAL_TIM_PWM_Start+0x16c>
 8015cb6:	683b      	ldr	r3, [r7, #0]
 8015cb8:	2b00      	cmp	r3, #0
 8015cba:	d104      	bne.n	8015cc6 <HAL_TIM_PWM_Start+0x82>
 8015cbc:	687b      	ldr	r3, [r7, #4]
 8015cbe:	2202      	movs	r2, #2
 8015cc0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8015cc4:	e013      	b.n	8015cee <HAL_TIM_PWM_Start+0xaa>
 8015cc6:	683b      	ldr	r3, [r7, #0]
 8015cc8:	2b04      	cmp	r3, #4
 8015cca:	d104      	bne.n	8015cd6 <HAL_TIM_PWM_Start+0x92>
 8015ccc:	687b      	ldr	r3, [r7, #4]
 8015cce:	2202      	movs	r2, #2
 8015cd0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8015cd4:	e00b      	b.n	8015cee <HAL_TIM_PWM_Start+0xaa>
 8015cd6:	683b      	ldr	r3, [r7, #0]
 8015cd8:	2b08      	cmp	r3, #8
 8015cda:	d104      	bne.n	8015ce6 <HAL_TIM_PWM_Start+0xa2>
 8015cdc:	687b      	ldr	r3, [r7, #4]
 8015cde:	2202      	movs	r2, #2
 8015ce0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8015ce4:	e003      	b.n	8015cee <HAL_TIM_PWM_Start+0xaa>
 8015ce6:	687b      	ldr	r3, [r7, #4]
 8015ce8:	2202      	movs	r2, #2
 8015cea:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8015cee:	687b      	ldr	r3, [r7, #4]
 8015cf0:	681b      	ldr	r3, [r3, #0]
 8015cf2:	2201      	movs	r2, #1
 8015cf4:	6839      	ldr	r1, [r7, #0]
 8015cf6:	4618      	mov	r0, r3
 8015cf8:	f000 fe6c 	bl	80169d4 <TIM_CCxChannelCmd>
 8015cfc:	687b      	ldr	r3, [r7, #4]
 8015cfe:	681b      	ldr	r3, [r3, #0]
 8015d00:	4a2d      	ldr	r2, [pc, #180]	; (8015db8 <HAL_TIM_PWM_Start+0x174>)
 8015d02:	4293      	cmp	r3, r2
 8015d04:	d004      	beq.n	8015d10 <HAL_TIM_PWM_Start+0xcc>
 8015d06:	687b      	ldr	r3, [r7, #4]
 8015d08:	681b      	ldr	r3, [r3, #0]
 8015d0a:	4a2c      	ldr	r2, [pc, #176]	; (8015dbc <HAL_TIM_PWM_Start+0x178>)
 8015d0c:	4293      	cmp	r3, r2
 8015d0e:	d101      	bne.n	8015d14 <HAL_TIM_PWM_Start+0xd0>
 8015d10:	2301      	movs	r3, #1
 8015d12:	e000      	b.n	8015d16 <HAL_TIM_PWM_Start+0xd2>
 8015d14:	2300      	movs	r3, #0
 8015d16:	2b00      	cmp	r3, #0
 8015d18:	d007      	beq.n	8015d2a <HAL_TIM_PWM_Start+0xe6>
 8015d1a:	687b      	ldr	r3, [r7, #4]
 8015d1c:	681b      	ldr	r3, [r3, #0]
 8015d1e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8015d20:	687b      	ldr	r3, [r7, #4]
 8015d22:	681b      	ldr	r3, [r3, #0]
 8015d24:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8015d28:	645a      	str	r2, [r3, #68]	; 0x44
 8015d2a:	687b      	ldr	r3, [r7, #4]
 8015d2c:	681b      	ldr	r3, [r3, #0]
 8015d2e:	4a22      	ldr	r2, [pc, #136]	; (8015db8 <HAL_TIM_PWM_Start+0x174>)
 8015d30:	4293      	cmp	r3, r2
 8015d32:	d022      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d34:	687b      	ldr	r3, [r7, #4]
 8015d36:	681b      	ldr	r3, [r3, #0]
 8015d38:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015d3c:	d01d      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d3e:	687b      	ldr	r3, [r7, #4]
 8015d40:	681b      	ldr	r3, [r3, #0]
 8015d42:	4a1f      	ldr	r2, [pc, #124]	; (8015dc0 <HAL_TIM_PWM_Start+0x17c>)
 8015d44:	4293      	cmp	r3, r2
 8015d46:	d018      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d48:	687b      	ldr	r3, [r7, #4]
 8015d4a:	681b      	ldr	r3, [r3, #0]
 8015d4c:	4a1d      	ldr	r2, [pc, #116]	; (8015dc4 <HAL_TIM_PWM_Start+0x180>)
 8015d4e:	4293      	cmp	r3, r2
 8015d50:	d013      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d52:	687b      	ldr	r3, [r7, #4]
 8015d54:	681b      	ldr	r3, [r3, #0]
 8015d56:	4a1c      	ldr	r2, [pc, #112]	; (8015dc8 <HAL_TIM_PWM_Start+0x184>)
 8015d58:	4293      	cmp	r3, r2
 8015d5a:	d00e      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d5c:	687b      	ldr	r3, [r7, #4]
 8015d5e:	681b      	ldr	r3, [r3, #0]
 8015d60:	4a16      	ldr	r2, [pc, #88]	; (8015dbc <HAL_TIM_PWM_Start+0x178>)
 8015d62:	4293      	cmp	r3, r2
 8015d64:	d009      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d66:	687b      	ldr	r3, [r7, #4]
 8015d68:	681b      	ldr	r3, [r3, #0]
 8015d6a:	4a18      	ldr	r2, [pc, #96]	; (8015dcc <HAL_TIM_PWM_Start+0x188>)
 8015d6c:	4293      	cmp	r3, r2
 8015d6e:	d004      	beq.n	8015d7a <HAL_TIM_PWM_Start+0x136>
 8015d70:	687b      	ldr	r3, [r7, #4]
 8015d72:	681b      	ldr	r3, [r3, #0]
 8015d74:	4a16      	ldr	r2, [pc, #88]	; (8015dd0 <HAL_TIM_PWM_Start+0x18c>)
 8015d76:	4293      	cmp	r3, r2
 8015d78:	d111      	bne.n	8015d9e <HAL_TIM_PWM_Start+0x15a>
 8015d7a:	687b      	ldr	r3, [r7, #4]
 8015d7c:	681b      	ldr	r3, [r3, #0]
 8015d7e:	689b      	ldr	r3, [r3, #8]
 8015d80:	f003 0307 	and.w	r3, r3, #7
 8015d84:	60fb      	str	r3, [r7, #12]
 8015d86:	68fb      	ldr	r3, [r7, #12]
 8015d88:	2b06      	cmp	r3, #6
 8015d8a:	d010      	beq.n	8015dae <HAL_TIM_PWM_Start+0x16a>
 8015d8c:	687b      	ldr	r3, [r7, #4]
 8015d8e:	681b      	ldr	r3, [r3, #0]
 8015d90:	681a      	ldr	r2, [r3, #0]
 8015d92:	687b      	ldr	r3, [r7, #4]
 8015d94:	681b      	ldr	r3, [r3, #0]
 8015d96:	f042 0201 	orr.w	r2, r2, #1
 8015d9a:	601a      	str	r2, [r3, #0]
 8015d9c:	e007      	b.n	8015dae <HAL_TIM_PWM_Start+0x16a>
 8015d9e:	687b      	ldr	r3, [r7, #4]
 8015da0:	681b      	ldr	r3, [r3, #0]
 8015da2:	681a      	ldr	r2, [r3, #0]
 8015da4:	687b      	ldr	r3, [r7, #4]
 8015da6:	681b      	ldr	r3, [r3, #0]
 8015da8:	f042 0201 	orr.w	r2, r2, #1
 8015dac:	601a      	str	r2, [r3, #0]
 8015dae:	2300      	movs	r3, #0
 8015db0:	4618      	mov	r0, r3
 8015db2:	3710      	adds	r7, #16
 8015db4:	46bd      	mov	sp, r7
 8015db6:	bd80      	pop	{r7, pc}
 8015db8:	40010000 	.word	0x40010000
 8015dbc:	40010400 	.word	0x40010400
 8015dc0:	40000400 	.word	0x40000400
 8015dc4:	40000800 	.word	0x40000800
 8015dc8:	40000c00 	.word	0x40000c00
 8015dcc:	40014000 	.word	0x40014000
 8015dd0:	40001800 	.word	0x40001800

08015dd4 <HAL_TIM_IRQHandler>:
 8015dd4:	b580      	push	{r7, lr}
 8015dd6:	b082      	sub	sp, #8
 8015dd8:	af00      	add	r7, sp, #0
 8015dda:	6078      	str	r0, [r7, #4]
 8015ddc:	687b      	ldr	r3, [r7, #4]
 8015dde:	681b      	ldr	r3, [r3, #0]
 8015de0:	691b      	ldr	r3, [r3, #16]
 8015de2:	f003 0302 	and.w	r3, r3, #2
 8015de6:	2b02      	cmp	r3, #2
 8015de8:	d122      	bne.n	8015e30 <HAL_TIM_IRQHandler+0x5c>
 8015dea:	687b      	ldr	r3, [r7, #4]
 8015dec:	681b      	ldr	r3, [r3, #0]
 8015dee:	68db      	ldr	r3, [r3, #12]
 8015df0:	f003 0302 	and.w	r3, r3, #2
 8015df4:	2b02      	cmp	r3, #2
 8015df6:	d11b      	bne.n	8015e30 <HAL_TIM_IRQHandler+0x5c>
 8015df8:	687b      	ldr	r3, [r7, #4]
 8015dfa:	681b      	ldr	r3, [r3, #0]
 8015dfc:	f06f 0202 	mvn.w	r2, #2
 8015e00:	611a      	str	r2, [r3, #16]
 8015e02:	687b      	ldr	r3, [r7, #4]
 8015e04:	2201      	movs	r2, #1
 8015e06:	771a      	strb	r2, [r3, #28]
 8015e08:	687b      	ldr	r3, [r7, #4]
 8015e0a:	681b      	ldr	r3, [r3, #0]
 8015e0c:	699b      	ldr	r3, [r3, #24]
 8015e0e:	f003 0303 	and.w	r3, r3, #3
 8015e12:	2b00      	cmp	r3, #0
 8015e14:	d003      	beq.n	8015e1e <HAL_TIM_IRQHandler+0x4a>
 8015e16:	6878      	ldr	r0, [r7, #4]
 8015e18:	f000 fad3 	bl	80163c2 <HAL_TIM_IC_CaptureCallback>
 8015e1c:	e005      	b.n	8015e2a <HAL_TIM_IRQHandler+0x56>
 8015e1e:	6878      	ldr	r0, [r7, #4]
 8015e20:	f000 fac5 	bl	80163ae <HAL_TIM_OC_DelayElapsedCallback>
 8015e24:	6878      	ldr	r0, [r7, #4]
 8015e26:	f000 fad6 	bl	80163d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8015e2a:	687b      	ldr	r3, [r7, #4]
 8015e2c:	2200      	movs	r2, #0
 8015e2e:	771a      	strb	r2, [r3, #28]
 8015e30:	687b      	ldr	r3, [r7, #4]
 8015e32:	681b      	ldr	r3, [r3, #0]
 8015e34:	691b      	ldr	r3, [r3, #16]
 8015e36:	f003 0304 	and.w	r3, r3, #4
 8015e3a:	2b04      	cmp	r3, #4
 8015e3c:	d122      	bne.n	8015e84 <HAL_TIM_IRQHandler+0xb0>
 8015e3e:	687b      	ldr	r3, [r7, #4]
 8015e40:	681b      	ldr	r3, [r3, #0]
 8015e42:	68db      	ldr	r3, [r3, #12]
 8015e44:	f003 0304 	and.w	r3, r3, #4
 8015e48:	2b04      	cmp	r3, #4
 8015e4a:	d11b      	bne.n	8015e84 <HAL_TIM_IRQHandler+0xb0>
 8015e4c:	687b      	ldr	r3, [r7, #4]
 8015e4e:	681b      	ldr	r3, [r3, #0]
 8015e50:	f06f 0204 	mvn.w	r2, #4
 8015e54:	611a      	str	r2, [r3, #16]
 8015e56:	687b      	ldr	r3, [r7, #4]
 8015e58:	2202      	movs	r2, #2
 8015e5a:	771a      	strb	r2, [r3, #28]
 8015e5c:	687b      	ldr	r3, [r7, #4]
 8015e5e:	681b      	ldr	r3, [r3, #0]
 8015e60:	699b      	ldr	r3, [r3, #24]
 8015e62:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8015e66:	2b00      	cmp	r3, #0
 8015e68:	d003      	beq.n	8015e72 <HAL_TIM_IRQHandler+0x9e>
 8015e6a:	6878      	ldr	r0, [r7, #4]
 8015e6c:	f000 faa9 	bl	80163c2 <HAL_TIM_IC_CaptureCallback>
 8015e70:	e005      	b.n	8015e7e <HAL_TIM_IRQHandler+0xaa>
 8015e72:	6878      	ldr	r0, [r7, #4]
 8015e74:	f000 fa9b 	bl	80163ae <HAL_TIM_OC_DelayElapsedCallback>
 8015e78:	6878      	ldr	r0, [r7, #4]
 8015e7a:	f000 faac 	bl	80163d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8015e7e:	687b      	ldr	r3, [r7, #4]
 8015e80:	2200      	movs	r2, #0
 8015e82:	771a      	strb	r2, [r3, #28]
 8015e84:	687b      	ldr	r3, [r7, #4]
 8015e86:	681b      	ldr	r3, [r3, #0]
 8015e88:	691b      	ldr	r3, [r3, #16]
 8015e8a:	f003 0308 	and.w	r3, r3, #8
 8015e8e:	2b08      	cmp	r3, #8
 8015e90:	d122      	bne.n	8015ed8 <HAL_TIM_IRQHandler+0x104>
 8015e92:	687b      	ldr	r3, [r7, #4]
 8015e94:	681b      	ldr	r3, [r3, #0]
 8015e96:	68db      	ldr	r3, [r3, #12]
 8015e98:	f003 0308 	and.w	r3, r3, #8
 8015e9c:	2b08      	cmp	r3, #8
 8015e9e:	d11b      	bne.n	8015ed8 <HAL_TIM_IRQHandler+0x104>
 8015ea0:	687b      	ldr	r3, [r7, #4]
 8015ea2:	681b      	ldr	r3, [r3, #0]
 8015ea4:	f06f 0208 	mvn.w	r2, #8
 8015ea8:	611a      	str	r2, [r3, #16]
 8015eaa:	687b      	ldr	r3, [r7, #4]
 8015eac:	2204      	movs	r2, #4
 8015eae:	771a      	strb	r2, [r3, #28]
 8015eb0:	687b      	ldr	r3, [r7, #4]
 8015eb2:	681b      	ldr	r3, [r3, #0]
 8015eb4:	69db      	ldr	r3, [r3, #28]
 8015eb6:	f003 0303 	and.w	r3, r3, #3
 8015eba:	2b00      	cmp	r3, #0
 8015ebc:	d003      	beq.n	8015ec6 <HAL_TIM_IRQHandler+0xf2>
 8015ebe:	6878      	ldr	r0, [r7, #4]
 8015ec0:	f000 fa7f 	bl	80163c2 <HAL_TIM_IC_CaptureCallback>
 8015ec4:	e005      	b.n	8015ed2 <HAL_TIM_IRQHandler+0xfe>
 8015ec6:	6878      	ldr	r0, [r7, #4]
 8015ec8:	f000 fa71 	bl	80163ae <HAL_TIM_OC_DelayElapsedCallback>
 8015ecc:	6878      	ldr	r0, [r7, #4]
 8015ece:	f000 fa82 	bl	80163d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8015ed2:	687b      	ldr	r3, [r7, #4]
 8015ed4:	2200      	movs	r2, #0
 8015ed6:	771a      	strb	r2, [r3, #28]
 8015ed8:	687b      	ldr	r3, [r7, #4]
 8015eda:	681b      	ldr	r3, [r3, #0]
 8015edc:	691b      	ldr	r3, [r3, #16]
 8015ede:	f003 0310 	and.w	r3, r3, #16
 8015ee2:	2b10      	cmp	r3, #16
 8015ee4:	d122      	bne.n	8015f2c <HAL_TIM_IRQHandler+0x158>
 8015ee6:	687b      	ldr	r3, [r7, #4]
 8015ee8:	681b      	ldr	r3, [r3, #0]
 8015eea:	68db      	ldr	r3, [r3, #12]
 8015eec:	f003 0310 	and.w	r3, r3, #16
 8015ef0:	2b10      	cmp	r3, #16
 8015ef2:	d11b      	bne.n	8015f2c <HAL_TIM_IRQHandler+0x158>
 8015ef4:	687b      	ldr	r3, [r7, #4]
 8015ef6:	681b      	ldr	r3, [r3, #0]
 8015ef8:	f06f 0210 	mvn.w	r2, #16
 8015efc:	611a      	str	r2, [r3, #16]
 8015efe:	687b      	ldr	r3, [r7, #4]
 8015f00:	2208      	movs	r2, #8
 8015f02:	771a      	strb	r2, [r3, #28]
 8015f04:	687b      	ldr	r3, [r7, #4]
 8015f06:	681b      	ldr	r3, [r3, #0]
 8015f08:	69db      	ldr	r3, [r3, #28]
 8015f0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8015f0e:	2b00      	cmp	r3, #0
 8015f10:	d003      	beq.n	8015f1a <HAL_TIM_IRQHandler+0x146>
 8015f12:	6878      	ldr	r0, [r7, #4]
 8015f14:	f000 fa55 	bl	80163c2 <HAL_TIM_IC_CaptureCallback>
 8015f18:	e005      	b.n	8015f26 <HAL_TIM_IRQHandler+0x152>
 8015f1a:	6878      	ldr	r0, [r7, #4]
 8015f1c:	f000 fa47 	bl	80163ae <HAL_TIM_OC_DelayElapsedCallback>
 8015f20:	6878      	ldr	r0, [r7, #4]
 8015f22:	f000 fa58 	bl	80163d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8015f26:	687b      	ldr	r3, [r7, #4]
 8015f28:	2200      	movs	r2, #0
 8015f2a:	771a      	strb	r2, [r3, #28]
 8015f2c:	687b      	ldr	r3, [r7, #4]
 8015f2e:	681b      	ldr	r3, [r3, #0]
 8015f30:	691b      	ldr	r3, [r3, #16]
 8015f32:	f003 0301 	and.w	r3, r3, #1
 8015f36:	2b01      	cmp	r3, #1
 8015f38:	d10e      	bne.n	8015f58 <HAL_TIM_IRQHandler+0x184>
 8015f3a:	687b      	ldr	r3, [r7, #4]
 8015f3c:	681b      	ldr	r3, [r3, #0]
 8015f3e:	68db      	ldr	r3, [r3, #12]
 8015f40:	f003 0301 	and.w	r3, r3, #1
 8015f44:	2b01      	cmp	r3, #1
 8015f46:	d107      	bne.n	8015f58 <HAL_TIM_IRQHandler+0x184>
 8015f48:	687b      	ldr	r3, [r7, #4]
 8015f4a:	681b      	ldr	r3, [r3, #0]
 8015f4c:	f06f 0201 	mvn.w	r2, #1
 8015f50:	611a      	str	r2, [r3, #16]
 8015f52:	6878      	ldr	r0, [r7, #4]
 8015f54:	f7ed fe26 	bl	8003ba4 <HAL_TIM_PeriodElapsedCallback>
 8015f58:	687b      	ldr	r3, [r7, #4]
 8015f5a:	681b      	ldr	r3, [r3, #0]
 8015f5c:	691b      	ldr	r3, [r3, #16]
 8015f5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015f62:	2b80      	cmp	r3, #128	; 0x80
 8015f64:	d10e      	bne.n	8015f84 <HAL_TIM_IRQHandler+0x1b0>
 8015f66:	687b      	ldr	r3, [r7, #4]
 8015f68:	681b      	ldr	r3, [r3, #0]
 8015f6a:	68db      	ldr	r3, [r3, #12]
 8015f6c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8015f70:	2b80      	cmp	r3, #128	; 0x80
 8015f72:	d107      	bne.n	8015f84 <HAL_TIM_IRQHandler+0x1b0>
 8015f74:	687b      	ldr	r3, [r7, #4]
 8015f76:	681b      	ldr	r3, [r3, #0]
 8015f78:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8015f7c:	611a      	str	r2, [r3, #16]
 8015f7e:	6878      	ldr	r0, [r7, #4]
 8015f80:	f000 fe26 	bl	8016bd0 <HAL_TIMEx_BreakCallback>
 8015f84:	687b      	ldr	r3, [r7, #4]
 8015f86:	681b      	ldr	r3, [r3, #0]
 8015f88:	691b      	ldr	r3, [r3, #16]
 8015f8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015f8e:	2b40      	cmp	r3, #64	; 0x40
 8015f90:	d10e      	bne.n	8015fb0 <HAL_TIM_IRQHandler+0x1dc>
 8015f92:	687b      	ldr	r3, [r7, #4]
 8015f94:	681b      	ldr	r3, [r3, #0]
 8015f96:	68db      	ldr	r3, [r3, #12]
 8015f98:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8015f9c:	2b40      	cmp	r3, #64	; 0x40
 8015f9e:	d107      	bne.n	8015fb0 <HAL_TIM_IRQHandler+0x1dc>
 8015fa0:	687b      	ldr	r3, [r7, #4]
 8015fa2:	681b      	ldr	r3, [r3, #0]
 8015fa4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8015fa8:	611a      	str	r2, [r3, #16]
 8015faa:	6878      	ldr	r0, [r7, #4]
 8015fac:	f000 fa1d 	bl	80163ea <HAL_TIM_TriggerCallback>
 8015fb0:	687b      	ldr	r3, [r7, #4]
 8015fb2:	681b      	ldr	r3, [r3, #0]
 8015fb4:	691b      	ldr	r3, [r3, #16]
 8015fb6:	f003 0320 	and.w	r3, r3, #32
 8015fba:	2b20      	cmp	r3, #32
 8015fbc:	d10e      	bne.n	8015fdc <HAL_TIM_IRQHandler+0x208>
 8015fbe:	687b      	ldr	r3, [r7, #4]
 8015fc0:	681b      	ldr	r3, [r3, #0]
 8015fc2:	68db      	ldr	r3, [r3, #12]
 8015fc4:	f003 0320 	and.w	r3, r3, #32
 8015fc8:	2b20      	cmp	r3, #32
 8015fca:	d107      	bne.n	8015fdc <HAL_TIM_IRQHandler+0x208>
 8015fcc:	687b      	ldr	r3, [r7, #4]
 8015fce:	681b      	ldr	r3, [r3, #0]
 8015fd0:	f06f 0220 	mvn.w	r2, #32
 8015fd4:	611a      	str	r2, [r3, #16]
 8015fd6:	6878      	ldr	r0, [r7, #4]
 8015fd8:	f000 fdf0 	bl	8016bbc <HAL_TIMEx_CommutCallback>
 8015fdc:	bf00      	nop
 8015fde:	3708      	adds	r7, #8
 8015fe0:	46bd      	mov	sp, r7
 8015fe2:	bd80      	pop	{r7, pc}

08015fe4 <HAL_TIM_OC_ConfigChannel>:
 8015fe4:	b580      	push	{r7, lr}
 8015fe6:	b086      	sub	sp, #24
 8015fe8:	af00      	add	r7, sp, #0
 8015fea:	60f8      	str	r0, [r7, #12]
 8015fec:	60b9      	str	r1, [r7, #8]
 8015fee:	607a      	str	r2, [r7, #4]
 8015ff0:	2300      	movs	r3, #0
 8015ff2:	75fb      	strb	r3, [r7, #23]
 8015ff4:	68fb      	ldr	r3, [r7, #12]
 8015ff6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8015ffa:	2b01      	cmp	r3, #1
 8015ffc:	d101      	bne.n	8016002 <HAL_TIM_OC_ConfigChannel+0x1e>
 8015ffe:	2302      	movs	r3, #2
 8016000:	e048      	b.n	8016094 <HAL_TIM_OC_ConfigChannel+0xb0>
 8016002:	68fb      	ldr	r3, [r7, #12]
 8016004:	2201      	movs	r2, #1
 8016006:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 801600a:	687b      	ldr	r3, [r7, #4]
 801600c:	2b0c      	cmp	r3, #12
 801600e:	d839      	bhi.n	8016084 <HAL_TIM_OC_ConfigChannel+0xa0>
 8016010:	a201      	add	r2, pc, #4	; (adr r2, 8016018 <HAL_TIM_OC_ConfigChannel+0x34>)
 8016012:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016016:	bf00      	nop
 8016018:	0801604d 	.word	0x0801604d
 801601c:	08016085 	.word	0x08016085
 8016020:	08016085 	.word	0x08016085
 8016024:	08016085 	.word	0x08016085
 8016028:	0801605b 	.word	0x0801605b
 801602c:	08016085 	.word	0x08016085
 8016030:	08016085 	.word	0x08016085
 8016034:	08016085 	.word	0x08016085
 8016038:	08016069 	.word	0x08016069
 801603c:	08016085 	.word	0x08016085
 8016040:	08016085 	.word	0x08016085
 8016044:	08016085 	.word	0x08016085
 8016048:	08016077 	.word	0x08016077
 801604c:	68fb      	ldr	r3, [r7, #12]
 801604e:	681b      	ldr	r3, [r3, #0]
 8016050:	68b9      	ldr	r1, [r7, #8]
 8016052:	4618      	mov	r0, r3
 8016054:	f000 fa74 	bl	8016540 <TIM_OC1_SetConfig>
 8016058:	e017      	b.n	801608a <HAL_TIM_OC_ConfigChannel+0xa6>
 801605a:	68fb      	ldr	r3, [r7, #12]
 801605c:	681b      	ldr	r3, [r3, #0]
 801605e:	68b9      	ldr	r1, [r7, #8]
 8016060:	4618      	mov	r0, r3
 8016062:	f000 fadd 	bl	8016620 <TIM_OC2_SetConfig>
 8016066:	e010      	b.n	801608a <HAL_TIM_OC_ConfigChannel+0xa6>
 8016068:	68fb      	ldr	r3, [r7, #12]
 801606a:	681b      	ldr	r3, [r3, #0]
 801606c:	68b9      	ldr	r1, [r7, #8]
 801606e:	4618      	mov	r0, r3
 8016070:	f000 fb4c 	bl	801670c <TIM_OC3_SetConfig>
 8016074:	e009      	b.n	801608a <HAL_TIM_OC_ConfigChannel+0xa6>
 8016076:	68fb      	ldr	r3, [r7, #12]
 8016078:	681b      	ldr	r3, [r3, #0]
 801607a:	68b9      	ldr	r1, [r7, #8]
 801607c:	4618      	mov	r0, r3
 801607e:	f000 fbb9 	bl	80167f4 <TIM_OC4_SetConfig>
 8016082:	e002      	b.n	801608a <HAL_TIM_OC_ConfigChannel+0xa6>
 8016084:	2301      	movs	r3, #1
 8016086:	75fb      	strb	r3, [r7, #23]
 8016088:	bf00      	nop
 801608a:	68fb      	ldr	r3, [r7, #12]
 801608c:	2200      	movs	r2, #0
 801608e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016092:	7dfb      	ldrb	r3, [r7, #23]
 8016094:	4618      	mov	r0, r3
 8016096:	3718      	adds	r7, #24
 8016098:	46bd      	mov	sp, r7
 801609a:	bd80      	pop	{r7, pc}

0801609c <HAL_TIM_PWM_ConfigChannel>:
 801609c:	b580      	push	{r7, lr}
 801609e:	b086      	sub	sp, #24
 80160a0:	af00      	add	r7, sp, #0
 80160a2:	60f8      	str	r0, [r7, #12]
 80160a4:	60b9      	str	r1, [r7, #8]
 80160a6:	607a      	str	r2, [r7, #4]
 80160a8:	2300      	movs	r3, #0
 80160aa:	75fb      	strb	r3, [r7, #23]
 80160ac:	68fb      	ldr	r3, [r7, #12]
 80160ae:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80160b2:	2b01      	cmp	r3, #1
 80160b4:	d101      	bne.n	80160ba <HAL_TIM_PWM_ConfigChannel+0x1e>
 80160b6:	2302      	movs	r3, #2
 80160b8:	e0ae      	b.n	8016218 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80160ba:	68fb      	ldr	r3, [r7, #12]
 80160bc:	2201      	movs	r2, #1
 80160be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80160c2:	687b      	ldr	r3, [r7, #4]
 80160c4:	2b0c      	cmp	r3, #12
 80160c6:	f200 809f 	bhi.w	8016208 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80160ca:	a201      	add	r2, pc, #4	; (adr r2, 80160d0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80160cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80160d0:	08016105 	.word	0x08016105
 80160d4:	08016209 	.word	0x08016209
 80160d8:	08016209 	.word	0x08016209
 80160dc:	08016209 	.word	0x08016209
 80160e0:	08016145 	.word	0x08016145
 80160e4:	08016209 	.word	0x08016209
 80160e8:	08016209 	.word	0x08016209
 80160ec:	08016209 	.word	0x08016209
 80160f0:	08016187 	.word	0x08016187
 80160f4:	08016209 	.word	0x08016209
 80160f8:	08016209 	.word	0x08016209
 80160fc:	08016209 	.word	0x08016209
 8016100:	080161c7 	.word	0x080161c7
 8016104:	68fb      	ldr	r3, [r7, #12]
 8016106:	681b      	ldr	r3, [r3, #0]
 8016108:	68b9      	ldr	r1, [r7, #8]
 801610a:	4618      	mov	r0, r3
 801610c:	f000 fa18 	bl	8016540 <TIM_OC1_SetConfig>
 8016110:	68fb      	ldr	r3, [r7, #12]
 8016112:	681b      	ldr	r3, [r3, #0]
 8016114:	699a      	ldr	r2, [r3, #24]
 8016116:	68fb      	ldr	r3, [r7, #12]
 8016118:	681b      	ldr	r3, [r3, #0]
 801611a:	f042 0208 	orr.w	r2, r2, #8
 801611e:	619a      	str	r2, [r3, #24]
 8016120:	68fb      	ldr	r3, [r7, #12]
 8016122:	681b      	ldr	r3, [r3, #0]
 8016124:	699a      	ldr	r2, [r3, #24]
 8016126:	68fb      	ldr	r3, [r7, #12]
 8016128:	681b      	ldr	r3, [r3, #0]
 801612a:	f022 0204 	bic.w	r2, r2, #4
 801612e:	619a      	str	r2, [r3, #24]
 8016130:	68fb      	ldr	r3, [r7, #12]
 8016132:	681b      	ldr	r3, [r3, #0]
 8016134:	6999      	ldr	r1, [r3, #24]
 8016136:	68bb      	ldr	r3, [r7, #8]
 8016138:	691a      	ldr	r2, [r3, #16]
 801613a:	68fb      	ldr	r3, [r7, #12]
 801613c:	681b      	ldr	r3, [r3, #0]
 801613e:	430a      	orrs	r2, r1
 8016140:	619a      	str	r2, [r3, #24]
 8016142:	e064      	b.n	801620e <HAL_TIM_PWM_ConfigChannel+0x172>
 8016144:	68fb      	ldr	r3, [r7, #12]
 8016146:	681b      	ldr	r3, [r3, #0]
 8016148:	68b9      	ldr	r1, [r7, #8]
 801614a:	4618      	mov	r0, r3
 801614c:	f000 fa68 	bl	8016620 <TIM_OC2_SetConfig>
 8016150:	68fb      	ldr	r3, [r7, #12]
 8016152:	681b      	ldr	r3, [r3, #0]
 8016154:	699a      	ldr	r2, [r3, #24]
 8016156:	68fb      	ldr	r3, [r7, #12]
 8016158:	681b      	ldr	r3, [r3, #0]
 801615a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 801615e:	619a      	str	r2, [r3, #24]
 8016160:	68fb      	ldr	r3, [r7, #12]
 8016162:	681b      	ldr	r3, [r3, #0]
 8016164:	699a      	ldr	r2, [r3, #24]
 8016166:	68fb      	ldr	r3, [r7, #12]
 8016168:	681b      	ldr	r3, [r3, #0]
 801616a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 801616e:	619a      	str	r2, [r3, #24]
 8016170:	68fb      	ldr	r3, [r7, #12]
 8016172:	681b      	ldr	r3, [r3, #0]
 8016174:	6999      	ldr	r1, [r3, #24]
 8016176:	68bb      	ldr	r3, [r7, #8]
 8016178:	691b      	ldr	r3, [r3, #16]
 801617a:	021a      	lsls	r2, r3, #8
 801617c:	68fb      	ldr	r3, [r7, #12]
 801617e:	681b      	ldr	r3, [r3, #0]
 8016180:	430a      	orrs	r2, r1
 8016182:	619a      	str	r2, [r3, #24]
 8016184:	e043      	b.n	801620e <HAL_TIM_PWM_ConfigChannel+0x172>
 8016186:	68fb      	ldr	r3, [r7, #12]
 8016188:	681b      	ldr	r3, [r3, #0]
 801618a:	68b9      	ldr	r1, [r7, #8]
 801618c:	4618      	mov	r0, r3
 801618e:	f000 fabd 	bl	801670c <TIM_OC3_SetConfig>
 8016192:	68fb      	ldr	r3, [r7, #12]
 8016194:	681b      	ldr	r3, [r3, #0]
 8016196:	69da      	ldr	r2, [r3, #28]
 8016198:	68fb      	ldr	r3, [r7, #12]
 801619a:	681b      	ldr	r3, [r3, #0]
 801619c:	f042 0208 	orr.w	r2, r2, #8
 80161a0:	61da      	str	r2, [r3, #28]
 80161a2:	68fb      	ldr	r3, [r7, #12]
 80161a4:	681b      	ldr	r3, [r3, #0]
 80161a6:	69da      	ldr	r2, [r3, #28]
 80161a8:	68fb      	ldr	r3, [r7, #12]
 80161aa:	681b      	ldr	r3, [r3, #0]
 80161ac:	f022 0204 	bic.w	r2, r2, #4
 80161b0:	61da      	str	r2, [r3, #28]
 80161b2:	68fb      	ldr	r3, [r7, #12]
 80161b4:	681b      	ldr	r3, [r3, #0]
 80161b6:	69d9      	ldr	r1, [r3, #28]
 80161b8:	68bb      	ldr	r3, [r7, #8]
 80161ba:	691a      	ldr	r2, [r3, #16]
 80161bc:	68fb      	ldr	r3, [r7, #12]
 80161be:	681b      	ldr	r3, [r3, #0]
 80161c0:	430a      	orrs	r2, r1
 80161c2:	61da      	str	r2, [r3, #28]
 80161c4:	e023      	b.n	801620e <HAL_TIM_PWM_ConfigChannel+0x172>
 80161c6:	68fb      	ldr	r3, [r7, #12]
 80161c8:	681b      	ldr	r3, [r3, #0]
 80161ca:	68b9      	ldr	r1, [r7, #8]
 80161cc:	4618      	mov	r0, r3
 80161ce:	f000 fb11 	bl	80167f4 <TIM_OC4_SetConfig>
 80161d2:	68fb      	ldr	r3, [r7, #12]
 80161d4:	681b      	ldr	r3, [r3, #0]
 80161d6:	69da      	ldr	r2, [r3, #28]
 80161d8:	68fb      	ldr	r3, [r7, #12]
 80161da:	681b      	ldr	r3, [r3, #0]
 80161dc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80161e0:	61da      	str	r2, [r3, #28]
 80161e2:	68fb      	ldr	r3, [r7, #12]
 80161e4:	681b      	ldr	r3, [r3, #0]
 80161e6:	69da      	ldr	r2, [r3, #28]
 80161e8:	68fb      	ldr	r3, [r7, #12]
 80161ea:	681b      	ldr	r3, [r3, #0]
 80161ec:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80161f0:	61da      	str	r2, [r3, #28]
 80161f2:	68fb      	ldr	r3, [r7, #12]
 80161f4:	681b      	ldr	r3, [r3, #0]
 80161f6:	69d9      	ldr	r1, [r3, #28]
 80161f8:	68bb      	ldr	r3, [r7, #8]
 80161fa:	691b      	ldr	r3, [r3, #16]
 80161fc:	021a      	lsls	r2, r3, #8
 80161fe:	68fb      	ldr	r3, [r7, #12]
 8016200:	681b      	ldr	r3, [r3, #0]
 8016202:	430a      	orrs	r2, r1
 8016204:	61da      	str	r2, [r3, #28]
 8016206:	e002      	b.n	801620e <HAL_TIM_PWM_ConfigChannel+0x172>
 8016208:	2301      	movs	r3, #1
 801620a:	75fb      	strb	r3, [r7, #23]
 801620c:	bf00      	nop
 801620e:	68fb      	ldr	r3, [r7, #12]
 8016210:	2200      	movs	r2, #0
 8016212:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016216:	7dfb      	ldrb	r3, [r7, #23]
 8016218:	4618      	mov	r0, r3
 801621a:	3718      	adds	r7, #24
 801621c:	46bd      	mov	sp, r7
 801621e:	bd80      	pop	{r7, pc}

08016220 <HAL_TIM_ConfigClockSource>:
 8016220:	b580      	push	{r7, lr}
 8016222:	b084      	sub	sp, #16
 8016224:	af00      	add	r7, sp, #0
 8016226:	6078      	str	r0, [r7, #4]
 8016228:	6039      	str	r1, [r7, #0]
 801622a:	2300      	movs	r3, #0
 801622c:	73fb      	strb	r3, [r7, #15]
 801622e:	687b      	ldr	r3, [r7, #4]
 8016230:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016234:	2b01      	cmp	r3, #1
 8016236:	d101      	bne.n	801623c <HAL_TIM_ConfigClockSource+0x1c>
 8016238:	2302      	movs	r3, #2
 801623a:	e0b4      	b.n	80163a6 <HAL_TIM_ConfigClockSource+0x186>
 801623c:	687b      	ldr	r3, [r7, #4]
 801623e:	2201      	movs	r2, #1
 8016240:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016244:	687b      	ldr	r3, [r7, #4]
 8016246:	2202      	movs	r2, #2
 8016248:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801624c:	687b      	ldr	r3, [r7, #4]
 801624e:	681b      	ldr	r3, [r3, #0]
 8016250:	689b      	ldr	r3, [r3, #8]
 8016252:	60bb      	str	r3, [r7, #8]
 8016254:	68bb      	ldr	r3, [r7, #8]
 8016256:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 801625a:	60bb      	str	r3, [r7, #8]
 801625c:	68bb      	ldr	r3, [r7, #8]
 801625e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8016262:	60bb      	str	r3, [r7, #8]
 8016264:	687b      	ldr	r3, [r7, #4]
 8016266:	681b      	ldr	r3, [r3, #0]
 8016268:	68ba      	ldr	r2, [r7, #8]
 801626a:	609a      	str	r2, [r3, #8]
 801626c:	683b      	ldr	r3, [r7, #0]
 801626e:	681b      	ldr	r3, [r3, #0]
 8016270:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8016274:	d03e      	beq.n	80162f4 <HAL_TIM_ConfigClockSource+0xd4>
 8016276:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801627a:	f200 8087 	bhi.w	801638c <HAL_TIM_ConfigClockSource+0x16c>
 801627e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8016282:	f000 8086 	beq.w	8016392 <HAL_TIM_ConfigClockSource+0x172>
 8016286:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801628a:	d87f      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 801628c:	2b70      	cmp	r3, #112	; 0x70
 801628e:	d01a      	beq.n	80162c6 <HAL_TIM_ConfigClockSource+0xa6>
 8016290:	2b70      	cmp	r3, #112	; 0x70
 8016292:	d87b      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 8016294:	2b60      	cmp	r3, #96	; 0x60
 8016296:	d050      	beq.n	801633a <HAL_TIM_ConfigClockSource+0x11a>
 8016298:	2b60      	cmp	r3, #96	; 0x60
 801629a:	d877      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 801629c:	2b50      	cmp	r3, #80	; 0x50
 801629e:	d03c      	beq.n	801631a <HAL_TIM_ConfigClockSource+0xfa>
 80162a0:	2b50      	cmp	r3, #80	; 0x50
 80162a2:	d873      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 80162a4:	2b40      	cmp	r3, #64	; 0x40
 80162a6:	d058      	beq.n	801635a <HAL_TIM_ConfigClockSource+0x13a>
 80162a8:	2b40      	cmp	r3, #64	; 0x40
 80162aa:	d86f      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 80162ac:	2b30      	cmp	r3, #48	; 0x30
 80162ae:	d064      	beq.n	801637a <HAL_TIM_ConfigClockSource+0x15a>
 80162b0:	2b30      	cmp	r3, #48	; 0x30
 80162b2:	d86b      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 80162b4:	2b20      	cmp	r3, #32
 80162b6:	d060      	beq.n	801637a <HAL_TIM_ConfigClockSource+0x15a>
 80162b8:	2b20      	cmp	r3, #32
 80162ba:	d867      	bhi.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 80162bc:	2b00      	cmp	r3, #0
 80162be:	d05c      	beq.n	801637a <HAL_TIM_ConfigClockSource+0x15a>
 80162c0:	2b10      	cmp	r3, #16
 80162c2:	d05a      	beq.n	801637a <HAL_TIM_ConfigClockSource+0x15a>
 80162c4:	e062      	b.n	801638c <HAL_TIM_ConfigClockSource+0x16c>
 80162c6:	687b      	ldr	r3, [r7, #4]
 80162c8:	6818      	ldr	r0, [r3, #0]
 80162ca:	683b      	ldr	r3, [r7, #0]
 80162cc:	6899      	ldr	r1, [r3, #8]
 80162ce:	683b      	ldr	r3, [r7, #0]
 80162d0:	685a      	ldr	r2, [r3, #4]
 80162d2:	683b      	ldr	r3, [r7, #0]
 80162d4:	68db      	ldr	r3, [r3, #12]
 80162d6:	f000 fb5d 	bl	8016994 <TIM_ETR_SetConfig>
 80162da:	687b      	ldr	r3, [r7, #4]
 80162dc:	681b      	ldr	r3, [r3, #0]
 80162de:	689b      	ldr	r3, [r3, #8]
 80162e0:	60bb      	str	r3, [r7, #8]
 80162e2:	68bb      	ldr	r3, [r7, #8]
 80162e4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80162e8:	60bb      	str	r3, [r7, #8]
 80162ea:	687b      	ldr	r3, [r7, #4]
 80162ec:	681b      	ldr	r3, [r3, #0]
 80162ee:	68ba      	ldr	r2, [r7, #8]
 80162f0:	609a      	str	r2, [r3, #8]
 80162f2:	e04f      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 80162f4:	687b      	ldr	r3, [r7, #4]
 80162f6:	6818      	ldr	r0, [r3, #0]
 80162f8:	683b      	ldr	r3, [r7, #0]
 80162fa:	6899      	ldr	r1, [r3, #8]
 80162fc:	683b      	ldr	r3, [r7, #0]
 80162fe:	685a      	ldr	r2, [r3, #4]
 8016300:	683b      	ldr	r3, [r7, #0]
 8016302:	68db      	ldr	r3, [r3, #12]
 8016304:	f000 fb46 	bl	8016994 <TIM_ETR_SetConfig>
 8016308:	687b      	ldr	r3, [r7, #4]
 801630a:	681b      	ldr	r3, [r3, #0]
 801630c:	689a      	ldr	r2, [r3, #8]
 801630e:	687b      	ldr	r3, [r7, #4]
 8016310:	681b      	ldr	r3, [r3, #0]
 8016312:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8016316:	609a      	str	r2, [r3, #8]
 8016318:	e03c      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 801631a:	687b      	ldr	r3, [r7, #4]
 801631c:	6818      	ldr	r0, [r3, #0]
 801631e:	683b      	ldr	r3, [r7, #0]
 8016320:	6859      	ldr	r1, [r3, #4]
 8016322:	683b      	ldr	r3, [r7, #0]
 8016324:	68db      	ldr	r3, [r3, #12]
 8016326:	461a      	mov	r2, r3
 8016328:	f000 faba 	bl	80168a0 <TIM_TI1_ConfigInputStage>
 801632c:	687b      	ldr	r3, [r7, #4]
 801632e:	681b      	ldr	r3, [r3, #0]
 8016330:	2150      	movs	r1, #80	; 0x50
 8016332:	4618      	mov	r0, r3
 8016334:	f000 fb13 	bl	801695e <TIM_ITRx_SetConfig>
 8016338:	e02c      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 801633a:	687b      	ldr	r3, [r7, #4]
 801633c:	6818      	ldr	r0, [r3, #0]
 801633e:	683b      	ldr	r3, [r7, #0]
 8016340:	6859      	ldr	r1, [r3, #4]
 8016342:	683b      	ldr	r3, [r7, #0]
 8016344:	68db      	ldr	r3, [r3, #12]
 8016346:	461a      	mov	r2, r3
 8016348:	f000 fad9 	bl	80168fe <TIM_TI2_ConfigInputStage>
 801634c:	687b      	ldr	r3, [r7, #4]
 801634e:	681b      	ldr	r3, [r3, #0]
 8016350:	2160      	movs	r1, #96	; 0x60
 8016352:	4618      	mov	r0, r3
 8016354:	f000 fb03 	bl	801695e <TIM_ITRx_SetConfig>
 8016358:	e01c      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 801635a:	687b      	ldr	r3, [r7, #4]
 801635c:	6818      	ldr	r0, [r3, #0]
 801635e:	683b      	ldr	r3, [r7, #0]
 8016360:	6859      	ldr	r1, [r3, #4]
 8016362:	683b      	ldr	r3, [r7, #0]
 8016364:	68db      	ldr	r3, [r3, #12]
 8016366:	461a      	mov	r2, r3
 8016368:	f000 fa9a 	bl	80168a0 <TIM_TI1_ConfigInputStage>
 801636c:	687b      	ldr	r3, [r7, #4]
 801636e:	681b      	ldr	r3, [r3, #0]
 8016370:	2140      	movs	r1, #64	; 0x40
 8016372:	4618      	mov	r0, r3
 8016374:	f000 faf3 	bl	801695e <TIM_ITRx_SetConfig>
 8016378:	e00c      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 801637a:	687b      	ldr	r3, [r7, #4]
 801637c:	681a      	ldr	r2, [r3, #0]
 801637e:	683b      	ldr	r3, [r7, #0]
 8016380:	681b      	ldr	r3, [r3, #0]
 8016382:	4619      	mov	r1, r3
 8016384:	4610      	mov	r0, r2
 8016386:	f000 faea 	bl	801695e <TIM_ITRx_SetConfig>
 801638a:	e003      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 801638c:	2301      	movs	r3, #1
 801638e:	73fb      	strb	r3, [r7, #15]
 8016390:	e000      	b.n	8016394 <HAL_TIM_ConfigClockSource+0x174>
 8016392:	bf00      	nop
 8016394:	687b      	ldr	r3, [r7, #4]
 8016396:	2201      	movs	r2, #1
 8016398:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 801639c:	687b      	ldr	r3, [r7, #4]
 801639e:	2200      	movs	r2, #0
 80163a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80163a4:	7bfb      	ldrb	r3, [r7, #15]
 80163a6:	4618      	mov	r0, r3
 80163a8:	3710      	adds	r7, #16
 80163aa:	46bd      	mov	sp, r7
 80163ac:	bd80      	pop	{r7, pc}

080163ae <HAL_TIM_OC_DelayElapsedCallback>:
 80163ae:	b480      	push	{r7}
 80163b0:	b083      	sub	sp, #12
 80163b2:	af00      	add	r7, sp, #0
 80163b4:	6078      	str	r0, [r7, #4]
 80163b6:	bf00      	nop
 80163b8:	370c      	adds	r7, #12
 80163ba:	46bd      	mov	sp, r7
 80163bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163c0:	4770      	bx	lr

080163c2 <HAL_TIM_IC_CaptureCallback>:
 80163c2:	b480      	push	{r7}
 80163c4:	b083      	sub	sp, #12
 80163c6:	af00      	add	r7, sp, #0
 80163c8:	6078      	str	r0, [r7, #4]
 80163ca:	bf00      	nop
 80163cc:	370c      	adds	r7, #12
 80163ce:	46bd      	mov	sp, r7
 80163d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163d4:	4770      	bx	lr

080163d6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80163d6:	b480      	push	{r7}
 80163d8:	b083      	sub	sp, #12
 80163da:	af00      	add	r7, sp, #0
 80163dc:	6078      	str	r0, [r7, #4]
 80163de:	bf00      	nop
 80163e0:	370c      	adds	r7, #12
 80163e2:	46bd      	mov	sp, r7
 80163e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163e8:	4770      	bx	lr

080163ea <HAL_TIM_TriggerCallback>:
 80163ea:	b480      	push	{r7}
 80163ec:	b083      	sub	sp, #12
 80163ee:	af00      	add	r7, sp, #0
 80163f0:	6078      	str	r0, [r7, #4]
 80163f2:	bf00      	nop
 80163f4:	370c      	adds	r7, #12
 80163f6:	46bd      	mov	sp, r7
 80163f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163fc:	4770      	bx	lr
	...

08016400 <TIM_Base_SetConfig>:
 8016400:	b480      	push	{r7}
 8016402:	b085      	sub	sp, #20
 8016404:	af00      	add	r7, sp, #0
 8016406:	6078      	str	r0, [r7, #4]
 8016408:	6039      	str	r1, [r7, #0]
 801640a:	687b      	ldr	r3, [r7, #4]
 801640c:	681b      	ldr	r3, [r3, #0]
 801640e:	60fb      	str	r3, [r7, #12]
 8016410:	687b      	ldr	r3, [r7, #4]
 8016412:	4a40      	ldr	r2, [pc, #256]	; (8016514 <TIM_Base_SetConfig+0x114>)
 8016414:	4293      	cmp	r3, r2
 8016416:	d013      	beq.n	8016440 <TIM_Base_SetConfig+0x40>
 8016418:	687b      	ldr	r3, [r7, #4]
 801641a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801641e:	d00f      	beq.n	8016440 <TIM_Base_SetConfig+0x40>
 8016420:	687b      	ldr	r3, [r7, #4]
 8016422:	4a3d      	ldr	r2, [pc, #244]	; (8016518 <TIM_Base_SetConfig+0x118>)
 8016424:	4293      	cmp	r3, r2
 8016426:	d00b      	beq.n	8016440 <TIM_Base_SetConfig+0x40>
 8016428:	687b      	ldr	r3, [r7, #4]
 801642a:	4a3c      	ldr	r2, [pc, #240]	; (801651c <TIM_Base_SetConfig+0x11c>)
 801642c:	4293      	cmp	r3, r2
 801642e:	d007      	beq.n	8016440 <TIM_Base_SetConfig+0x40>
 8016430:	687b      	ldr	r3, [r7, #4]
 8016432:	4a3b      	ldr	r2, [pc, #236]	; (8016520 <TIM_Base_SetConfig+0x120>)
 8016434:	4293      	cmp	r3, r2
 8016436:	d003      	beq.n	8016440 <TIM_Base_SetConfig+0x40>
 8016438:	687b      	ldr	r3, [r7, #4]
 801643a:	4a3a      	ldr	r2, [pc, #232]	; (8016524 <TIM_Base_SetConfig+0x124>)
 801643c:	4293      	cmp	r3, r2
 801643e:	d108      	bne.n	8016452 <TIM_Base_SetConfig+0x52>
 8016440:	68fb      	ldr	r3, [r7, #12]
 8016442:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016446:	60fb      	str	r3, [r7, #12]
 8016448:	683b      	ldr	r3, [r7, #0]
 801644a:	685b      	ldr	r3, [r3, #4]
 801644c:	68fa      	ldr	r2, [r7, #12]
 801644e:	4313      	orrs	r3, r2
 8016450:	60fb      	str	r3, [r7, #12]
 8016452:	687b      	ldr	r3, [r7, #4]
 8016454:	4a2f      	ldr	r2, [pc, #188]	; (8016514 <TIM_Base_SetConfig+0x114>)
 8016456:	4293      	cmp	r3, r2
 8016458:	d02b      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 801645a:	687b      	ldr	r3, [r7, #4]
 801645c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8016460:	d027      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 8016462:	687b      	ldr	r3, [r7, #4]
 8016464:	4a2c      	ldr	r2, [pc, #176]	; (8016518 <TIM_Base_SetConfig+0x118>)
 8016466:	4293      	cmp	r3, r2
 8016468:	d023      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 801646a:	687b      	ldr	r3, [r7, #4]
 801646c:	4a2b      	ldr	r2, [pc, #172]	; (801651c <TIM_Base_SetConfig+0x11c>)
 801646e:	4293      	cmp	r3, r2
 8016470:	d01f      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 8016472:	687b      	ldr	r3, [r7, #4]
 8016474:	4a2a      	ldr	r2, [pc, #168]	; (8016520 <TIM_Base_SetConfig+0x120>)
 8016476:	4293      	cmp	r3, r2
 8016478:	d01b      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 801647a:	687b      	ldr	r3, [r7, #4]
 801647c:	4a29      	ldr	r2, [pc, #164]	; (8016524 <TIM_Base_SetConfig+0x124>)
 801647e:	4293      	cmp	r3, r2
 8016480:	d017      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 8016482:	687b      	ldr	r3, [r7, #4]
 8016484:	4a28      	ldr	r2, [pc, #160]	; (8016528 <TIM_Base_SetConfig+0x128>)
 8016486:	4293      	cmp	r3, r2
 8016488:	d013      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 801648a:	687b      	ldr	r3, [r7, #4]
 801648c:	4a27      	ldr	r2, [pc, #156]	; (801652c <TIM_Base_SetConfig+0x12c>)
 801648e:	4293      	cmp	r3, r2
 8016490:	d00f      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 8016492:	687b      	ldr	r3, [r7, #4]
 8016494:	4a26      	ldr	r2, [pc, #152]	; (8016530 <TIM_Base_SetConfig+0x130>)
 8016496:	4293      	cmp	r3, r2
 8016498:	d00b      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 801649a:	687b      	ldr	r3, [r7, #4]
 801649c:	4a25      	ldr	r2, [pc, #148]	; (8016534 <TIM_Base_SetConfig+0x134>)
 801649e:	4293      	cmp	r3, r2
 80164a0:	d007      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 80164a2:	687b      	ldr	r3, [r7, #4]
 80164a4:	4a24      	ldr	r2, [pc, #144]	; (8016538 <TIM_Base_SetConfig+0x138>)
 80164a6:	4293      	cmp	r3, r2
 80164a8:	d003      	beq.n	80164b2 <TIM_Base_SetConfig+0xb2>
 80164aa:	687b      	ldr	r3, [r7, #4]
 80164ac:	4a23      	ldr	r2, [pc, #140]	; (801653c <TIM_Base_SetConfig+0x13c>)
 80164ae:	4293      	cmp	r3, r2
 80164b0:	d108      	bne.n	80164c4 <TIM_Base_SetConfig+0xc4>
 80164b2:	68fb      	ldr	r3, [r7, #12]
 80164b4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80164b8:	60fb      	str	r3, [r7, #12]
 80164ba:	683b      	ldr	r3, [r7, #0]
 80164bc:	68db      	ldr	r3, [r3, #12]
 80164be:	68fa      	ldr	r2, [r7, #12]
 80164c0:	4313      	orrs	r3, r2
 80164c2:	60fb      	str	r3, [r7, #12]
 80164c4:	68fb      	ldr	r3, [r7, #12]
 80164c6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80164ca:	683b      	ldr	r3, [r7, #0]
 80164cc:	695b      	ldr	r3, [r3, #20]
 80164ce:	4313      	orrs	r3, r2
 80164d0:	60fb      	str	r3, [r7, #12]
 80164d2:	687b      	ldr	r3, [r7, #4]
 80164d4:	68fa      	ldr	r2, [r7, #12]
 80164d6:	601a      	str	r2, [r3, #0]
 80164d8:	683b      	ldr	r3, [r7, #0]
 80164da:	689a      	ldr	r2, [r3, #8]
 80164dc:	687b      	ldr	r3, [r7, #4]
 80164de:	62da      	str	r2, [r3, #44]	; 0x2c
 80164e0:	683b      	ldr	r3, [r7, #0]
 80164e2:	681a      	ldr	r2, [r3, #0]
 80164e4:	687b      	ldr	r3, [r7, #4]
 80164e6:	629a      	str	r2, [r3, #40]	; 0x28
 80164e8:	687b      	ldr	r3, [r7, #4]
 80164ea:	4a0a      	ldr	r2, [pc, #40]	; (8016514 <TIM_Base_SetConfig+0x114>)
 80164ec:	4293      	cmp	r3, r2
 80164ee:	d003      	beq.n	80164f8 <TIM_Base_SetConfig+0xf8>
 80164f0:	687b      	ldr	r3, [r7, #4]
 80164f2:	4a0c      	ldr	r2, [pc, #48]	; (8016524 <TIM_Base_SetConfig+0x124>)
 80164f4:	4293      	cmp	r3, r2
 80164f6:	d103      	bne.n	8016500 <TIM_Base_SetConfig+0x100>
 80164f8:	683b      	ldr	r3, [r7, #0]
 80164fa:	691a      	ldr	r2, [r3, #16]
 80164fc:	687b      	ldr	r3, [r7, #4]
 80164fe:	631a      	str	r2, [r3, #48]	; 0x30
 8016500:	687b      	ldr	r3, [r7, #4]
 8016502:	2201      	movs	r2, #1
 8016504:	615a      	str	r2, [r3, #20]
 8016506:	bf00      	nop
 8016508:	3714      	adds	r7, #20
 801650a:	46bd      	mov	sp, r7
 801650c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016510:	4770      	bx	lr
 8016512:	bf00      	nop
 8016514:	40010000 	.word	0x40010000
 8016518:	40000400 	.word	0x40000400
 801651c:	40000800 	.word	0x40000800
 8016520:	40000c00 	.word	0x40000c00
 8016524:	40010400 	.word	0x40010400
 8016528:	40014000 	.word	0x40014000
 801652c:	40014400 	.word	0x40014400
 8016530:	40014800 	.word	0x40014800
 8016534:	40001800 	.word	0x40001800
 8016538:	40001c00 	.word	0x40001c00
 801653c:	40002000 	.word	0x40002000

08016540 <TIM_OC1_SetConfig>:
 8016540:	b480      	push	{r7}
 8016542:	b087      	sub	sp, #28
 8016544:	af00      	add	r7, sp, #0
 8016546:	6078      	str	r0, [r7, #4]
 8016548:	6039      	str	r1, [r7, #0]
 801654a:	687b      	ldr	r3, [r7, #4]
 801654c:	6a1b      	ldr	r3, [r3, #32]
 801654e:	f023 0201 	bic.w	r2, r3, #1
 8016552:	687b      	ldr	r3, [r7, #4]
 8016554:	621a      	str	r2, [r3, #32]
 8016556:	687b      	ldr	r3, [r7, #4]
 8016558:	6a1b      	ldr	r3, [r3, #32]
 801655a:	617b      	str	r3, [r7, #20]
 801655c:	687b      	ldr	r3, [r7, #4]
 801655e:	685b      	ldr	r3, [r3, #4]
 8016560:	613b      	str	r3, [r7, #16]
 8016562:	687b      	ldr	r3, [r7, #4]
 8016564:	699b      	ldr	r3, [r3, #24]
 8016566:	60fb      	str	r3, [r7, #12]
 8016568:	68fb      	ldr	r3, [r7, #12]
 801656a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801656e:	60fb      	str	r3, [r7, #12]
 8016570:	68fb      	ldr	r3, [r7, #12]
 8016572:	f023 0303 	bic.w	r3, r3, #3
 8016576:	60fb      	str	r3, [r7, #12]
 8016578:	683b      	ldr	r3, [r7, #0]
 801657a:	681b      	ldr	r3, [r3, #0]
 801657c:	68fa      	ldr	r2, [r7, #12]
 801657e:	4313      	orrs	r3, r2
 8016580:	60fb      	str	r3, [r7, #12]
 8016582:	697b      	ldr	r3, [r7, #20]
 8016584:	f023 0302 	bic.w	r3, r3, #2
 8016588:	617b      	str	r3, [r7, #20]
 801658a:	683b      	ldr	r3, [r7, #0]
 801658c:	689b      	ldr	r3, [r3, #8]
 801658e:	697a      	ldr	r2, [r7, #20]
 8016590:	4313      	orrs	r3, r2
 8016592:	617b      	str	r3, [r7, #20]
 8016594:	687b      	ldr	r3, [r7, #4]
 8016596:	4a20      	ldr	r2, [pc, #128]	; (8016618 <TIM_OC1_SetConfig+0xd8>)
 8016598:	4293      	cmp	r3, r2
 801659a:	d003      	beq.n	80165a4 <TIM_OC1_SetConfig+0x64>
 801659c:	687b      	ldr	r3, [r7, #4]
 801659e:	4a1f      	ldr	r2, [pc, #124]	; (801661c <TIM_OC1_SetConfig+0xdc>)
 80165a0:	4293      	cmp	r3, r2
 80165a2:	d10c      	bne.n	80165be <TIM_OC1_SetConfig+0x7e>
 80165a4:	697b      	ldr	r3, [r7, #20]
 80165a6:	f023 0308 	bic.w	r3, r3, #8
 80165aa:	617b      	str	r3, [r7, #20]
 80165ac:	683b      	ldr	r3, [r7, #0]
 80165ae:	68db      	ldr	r3, [r3, #12]
 80165b0:	697a      	ldr	r2, [r7, #20]
 80165b2:	4313      	orrs	r3, r2
 80165b4:	617b      	str	r3, [r7, #20]
 80165b6:	697b      	ldr	r3, [r7, #20]
 80165b8:	f023 0304 	bic.w	r3, r3, #4
 80165bc:	617b      	str	r3, [r7, #20]
 80165be:	687b      	ldr	r3, [r7, #4]
 80165c0:	4a15      	ldr	r2, [pc, #84]	; (8016618 <TIM_OC1_SetConfig+0xd8>)
 80165c2:	4293      	cmp	r3, r2
 80165c4:	d003      	beq.n	80165ce <TIM_OC1_SetConfig+0x8e>
 80165c6:	687b      	ldr	r3, [r7, #4]
 80165c8:	4a14      	ldr	r2, [pc, #80]	; (801661c <TIM_OC1_SetConfig+0xdc>)
 80165ca:	4293      	cmp	r3, r2
 80165cc:	d111      	bne.n	80165f2 <TIM_OC1_SetConfig+0xb2>
 80165ce:	693b      	ldr	r3, [r7, #16]
 80165d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80165d4:	613b      	str	r3, [r7, #16]
 80165d6:	693b      	ldr	r3, [r7, #16]
 80165d8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80165dc:	613b      	str	r3, [r7, #16]
 80165de:	683b      	ldr	r3, [r7, #0]
 80165e0:	695b      	ldr	r3, [r3, #20]
 80165e2:	693a      	ldr	r2, [r7, #16]
 80165e4:	4313      	orrs	r3, r2
 80165e6:	613b      	str	r3, [r7, #16]
 80165e8:	683b      	ldr	r3, [r7, #0]
 80165ea:	699b      	ldr	r3, [r3, #24]
 80165ec:	693a      	ldr	r2, [r7, #16]
 80165ee:	4313      	orrs	r3, r2
 80165f0:	613b      	str	r3, [r7, #16]
 80165f2:	687b      	ldr	r3, [r7, #4]
 80165f4:	693a      	ldr	r2, [r7, #16]
 80165f6:	605a      	str	r2, [r3, #4]
 80165f8:	687b      	ldr	r3, [r7, #4]
 80165fa:	68fa      	ldr	r2, [r7, #12]
 80165fc:	619a      	str	r2, [r3, #24]
 80165fe:	683b      	ldr	r3, [r7, #0]
 8016600:	685a      	ldr	r2, [r3, #4]
 8016602:	687b      	ldr	r3, [r7, #4]
 8016604:	635a      	str	r2, [r3, #52]	; 0x34
 8016606:	687b      	ldr	r3, [r7, #4]
 8016608:	697a      	ldr	r2, [r7, #20]
 801660a:	621a      	str	r2, [r3, #32]
 801660c:	bf00      	nop
 801660e:	371c      	adds	r7, #28
 8016610:	46bd      	mov	sp, r7
 8016612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016616:	4770      	bx	lr
 8016618:	40010000 	.word	0x40010000
 801661c:	40010400 	.word	0x40010400

08016620 <TIM_OC2_SetConfig>:
 8016620:	b480      	push	{r7}
 8016622:	b087      	sub	sp, #28
 8016624:	af00      	add	r7, sp, #0
 8016626:	6078      	str	r0, [r7, #4]
 8016628:	6039      	str	r1, [r7, #0]
 801662a:	687b      	ldr	r3, [r7, #4]
 801662c:	6a1b      	ldr	r3, [r3, #32]
 801662e:	f023 0210 	bic.w	r2, r3, #16
 8016632:	687b      	ldr	r3, [r7, #4]
 8016634:	621a      	str	r2, [r3, #32]
 8016636:	687b      	ldr	r3, [r7, #4]
 8016638:	6a1b      	ldr	r3, [r3, #32]
 801663a:	617b      	str	r3, [r7, #20]
 801663c:	687b      	ldr	r3, [r7, #4]
 801663e:	685b      	ldr	r3, [r3, #4]
 8016640:	613b      	str	r3, [r7, #16]
 8016642:	687b      	ldr	r3, [r7, #4]
 8016644:	699b      	ldr	r3, [r3, #24]
 8016646:	60fb      	str	r3, [r7, #12]
 8016648:	68fb      	ldr	r3, [r7, #12]
 801664a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801664e:	60fb      	str	r3, [r7, #12]
 8016650:	68fb      	ldr	r3, [r7, #12]
 8016652:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016656:	60fb      	str	r3, [r7, #12]
 8016658:	683b      	ldr	r3, [r7, #0]
 801665a:	681b      	ldr	r3, [r3, #0]
 801665c:	021b      	lsls	r3, r3, #8
 801665e:	68fa      	ldr	r2, [r7, #12]
 8016660:	4313      	orrs	r3, r2
 8016662:	60fb      	str	r3, [r7, #12]
 8016664:	697b      	ldr	r3, [r7, #20]
 8016666:	f023 0320 	bic.w	r3, r3, #32
 801666a:	617b      	str	r3, [r7, #20]
 801666c:	683b      	ldr	r3, [r7, #0]
 801666e:	689b      	ldr	r3, [r3, #8]
 8016670:	011b      	lsls	r3, r3, #4
 8016672:	697a      	ldr	r2, [r7, #20]
 8016674:	4313      	orrs	r3, r2
 8016676:	617b      	str	r3, [r7, #20]
 8016678:	687b      	ldr	r3, [r7, #4]
 801667a:	4a22      	ldr	r2, [pc, #136]	; (8016704 <TIM_OC2_SetConfig+0xe4>)
 801667c:	4293      	cmp	r3, r2
 801667e:	d003      	beq.n	8016688 <TIM_OC2_SetConfig+0x68>
 8016680:	687b      	ldr	r3, [r7, #4]
 8016682:	4a21      	ldr	r2, [pc, #132]	; (8016708 <TIM_OC2_SetConfig+0xe8>)
 8016684:	4293      	cmp	r3, r2
 8016686:	d10d      	bne.n	80166a4 <TIM_OC2_SetConfig+0x84>
 8016688:	697b      	ldr	r3, [r7, #20]
 801668a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801668e:	617b      	str	r3, [r7, #20]
 8016690:	683b      	ldr	r3, [r7, #0]
 8016692:	68db      	ldr	r3, [r3, #12]
 8016694:	011b      	lsls	r3, r3, #4
 8016696:	697a      	ldr	r2, [r7, #20]
 8016698:	4313      	orrs	r3, r2
 801669a:	617b      	str	r3, [r7, #20]
 801669c:	697b      	ldr	r3, [r7, #20]
 801669e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80166a2:	617b      	str	r3, [r7, #20]
 80166a4:	687b      	ldr	r3, [r7, #4]
 80166a6:	4a17      	ldr	r2, [pc, #92]	; (8016704 <TIM_OC2_SetConfig+0xe4>)
 80166a8:	4293      	cmp	r3, r2
 80166aa:	d003      	beq.n	80166b4 <TIM_OC2_SetConfig+0x94>
 80166ac:	687b      	ldr	r3, [r7, #4]
 80166ae:	4a16      	ldr	r2, [pc, #88]	; (8016708 <TIM_OC2_SetConfig+0xe8>)
 80166b0:	4293      	cmp	r3, r2
 80166b2:	d113      	bne.n	80166dc <TIM_OC2_SetConfig+0xbc>
 80166b4:	693b      	ldr	r3, [r7, #16]
 80166b6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80166ba:	613b      	str	r3, [r7, #16]
 80166bc:	693b      	ldr	r3, [r7, #16]
 80166be:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80166c2:	613b      	str	r3, [r7, #16]
 80166c4:	683b      	ldr	r3, [r7, #0]
 80166c6:	695b      	ldr	r3, [r3, #20]
 80166c8:	009b      	lsls	r3, r3, #2
 80166ca:	693a      	ldr	r2, [r7, #16]
 80166cc:	4313      	orrs	r3, r2
 80166ce:	613b      	str	r3, [r7, #16]
 80166d0:	683b      	ldr	r3, [r7, #0]
 80166d2:	699b      	ldr	r3, [r3, #24]
 80166d4:	009b      	lsls	r3, r3, #2
 80166d6:	693a      	ldr	r2, [r7, #16]
 80166d8:	4313      	orrs	r3, r2
 80166da:	613b      	str	r3, [r7, #16]
 80166dc:	687b      	ldr	r3, [r7, #4]
 80166de:	693a      	ldr	r2, [r7, #16]
 80166e0:	605a      	str	r2, [r3, #4]
 80166e2:	687b      	ldr	r3, [r7, #4]
 80166e4:	68fa      	ldr	r2, [r7, #12]
 80166e6:	619a      	str	r2, [r3, #24]
 80166e8:	683b      	ldr	r3, [r7, #0]
 80166ea:	685a      	ldr	r2, [r3, #4]
 80166ec:	687b      	ldr	r3, [r7, #4]
 80166ee:	639a      	str	r2, [r3, #56]	; 0x38
 80166f0:	687b      	ldr	r3, [r7, #4]
 80166f2:	697a      	ldr	r2, [r7, #20]
 80166f4:	621a      	str	r2, [r3, #32]
 80166f6:	bf00      	nop
 80166f8:	371c      	adds	r7, #28
 80166fa:	46bd      	mov	sp, r7
 80166fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016700:	4770      	bx	lr
 8016702:	bf00      	nop
 8016704:	40010000 	.word	0x40010000
 8016708:	40010400 	.word	0x40010400

0801670c <TIM_OC3_SetConfig>:
 801670c:	b480      	push	{r7}
 801670e:	b087      	sub	sp, #28
 8016710:	af00      	add	r7, sp, #0
 8016712:	6078      	str	r0, [r7, #4]
 8016714:	6039      	str	r1, [r7, #0]
 8016716:	687b      	ldr	r3, [r7, #4]
 8016718:	6a1b      	ldr	r3, [r3, #32]
 801671a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 801671e:	687b      	ldr	r3, [r7, #4]
 8016720:	621a      	str	r2, [r3, #32]
 8016722:	687b      	ldr	r3, [r7, #4]
 8016724:	6a1b      	ldr	r3, [r3, #32]
 8016726:	617b      	str	r3, [r7, #20]
 8016728:	687b      	ldr	r3, [r7, #4]
 801672a:	685b      	ldr	r3, [r3, #4]
 801672c:	613b      	str	r3, [r7, #16]
 801672e:	687b      	ldr	r3, [r7, #4]
 8016730:	69db      	ldr	r3, [r3, #28]
 8016732:	60fb      	str	r3, [r7, #12]
 8016734:	68fb      	ldr	r3, [r7, #12]
 8016736:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801673a:	60fb      	str	r3, [r7, #12]
 801673c:	68fb      	ldr	r3, [r7, #12]
 801673e:	f023 0303 	bic.w	r3, r3, #3
 8016742:	60fb      	str	r3, [r7, #12]
 8016744:	683b      	ldr	r3, [r7, #0]
 8016746:	681b      	ldr	r3, [r3, #0]
 8016748:	68fa      	ldr	r2, [r7, #12]
 801674a:	4313      	orrs	r3, r2
 801674c:	60fb      	str	r3, [r7, #12]
 801674e:	697b      	ldr	r3, [r7, #20]
 8016750:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016754:	617b      	str	r3, [r7, #20]
 8016756:	683b      	ldr	r3, [r7, #0]
 8016758:	689b      	ldr	r3, [r3, #8]
 801675a:	021b      	lsls	r3, r3, #8
 801675c:	697a      	ldr	r2, [r7, #20]
 801675e:	4313      	orrs	r3, r2
 8016760:	617b      	str	r3, [r7, #20]
 8016762:	687b      	ldr	r3, [r7, #4]
 8016764:	4a21      	ldr	r2, [pc, #132]	; (80167ec <TIM_OC3_SetConfig+0xe0>)
 8016766:	4293      	cmp	r3, r2
 8016768:	d003      	beq.n	8016772 <TIM_OC3_SetConfig+0x66>
 801676a:	687b      	ldr	r3, [r7, #4]
 801676c:	4a20      	ldr	r2, [pc, #128]	; (80167f0 <TIM_OC3_SetConfig+0xe4>)
 801676e:	4293      	cmp	r3, r2
 8016770:	d10d      	bne.n	801678e <TIM_OC3_SetConfig+0x82>
 8016772:	697b      	ldr	r3, [r7, #20]
 8016774:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016778:	617b      	str	r3, [r7, #20]
 801677a:	683b      	ldr	r3, [r7, #0]
 801677c:	68db      	ldr	r3, [r3, #12]
 801677e:	021b      	lsls	r3, r3, #8
 8016780:	697a      	ldr	r2, [r7, #20]
 8016782:	4313      	orrs	r3, r2
 8016784:	617b      	str	r3, [r7, #20]
 8016786:	697b      	ldr	r3, [r7, #20]
 8016788:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801678c:	617b      	str	r3, [r7, #20]
 801678e:	687b      	ldr	r3, [r7, #4]
 8016790:	4a16      	ldr	r2, [pc, #88]	; (80167ec <TIM_OC3_SetConfig+0xe0>)
 8016792:	4293      	cmp	r3, r2
 8016794:	d003      	beq.n	801679e <TIM_OC3_SetConfig+0x92>
 8016796:	687b      	ldr	r3, [r7, #4]
 8016798:	4a15      	ldr	r2, [pc, #84]	; (80167f0 <TIM_OC3_SetConfig+0xe4>)
 801679a:	4293      	cmp	r3, r2
 801679c:	d113      	bne.n	80167c6 <TIM_OC3_SetConfig+0xba>
 801679e:	693b      	ldr	r3, [r7, #16]
 80167a0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80167a4:	613b      	str	r3, [r7, #16]
 80167a6:	693b      	ldr	r3, [r7, #16]
 80167a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80167ac:	613b      	str	r3, [r7, #16]
 80167ae:	683b      	ldr	r3, [r7, #0]
 80167b0:	695b      	ldr	r3, [r3, #20]
 80167b2:	011b      	lsls	r3, r3, #4
 80167b4:	693a      	ldr	r2, [r7, #16]
 80167b6:	4313      	orrs	r3, r2
 80167b8:	613b      	str	r3, [r7, #16]
 80167ba:	683b      	ldr	r3, [r7, #0]
 80167bc:	699b      	ldr	r3, [r3, #24]
 80167be:	011b      	lsls	r3, r3, #4
 80167c0:	693a      	ldr	r2, [r7, #16]
 80167c2:	4313      	orrs	r3, r2
 80167c4:	613b      	str	r3, [r7, #16]
 80167c6:	687b      	ldr	r3, [r7, #4]
 80167c8:	693a      	ldr	r2, [r7, #16]
 80167ca:	605a      	str	r2, [r3, #4]
 80167cc:	687b      	ldr	r3, [r7, #4]
 80167ce:	68fa      	ldr	r2, [r7, #12]
 80167d0:	61da      	str	r2, [r3, #28]
 80167d2:	683b      	ldr	r3, [r7, #0]
 80167d4:	685a      	ldr	r2, [r3, #4]
 80167d6:	687b      	ldr	r3, [r7, #4]
 80167d8:	63da      	str	r2, [r3, #60]	; 0x3c
 80167da:	687b      	ldr	r3, [r7, #4]
 80167dc:	697a      	ldr	r2, [r7, #20]
 80167de:	621a      	str	r2, [r3, #32]
 80167e0:	bf00      	nop
 80167e2:	371c      	adds	r7, #28
 80167e4:	46bd      	mov	sp, r7
 80167e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80167ea:	4770      	bx	lr
 80167ec:	40010000 	.word	0x40010000
 80167f0:	40010400 	.word	0x40010400

080167f4 <TIM_OC4_SetConfig>:
 80167f4:	b480      	push	{r7}
 80167f6:	b087      	sub	sp, #28
 80167f8:	af00      	add	r7, sp, #0
 80167fa:	6078      	str	r0, [r7, #4]
 80167fc:	6039      	str	r1, [r7, #0]
 80167fe:	687b      	ldr	r3, [r7, #4]
 8016800:	6a1b      	ldr	r3, [r3, #32]
 8016802:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8016806:	687b      	ldr	r3, [r7, #4]
 8016808:	621a      	str	r2, [r3, #32]
 801680a:	687b      	ldr	r3, [r7, #4]
 801680c:	6a1b      	ldr	r3, [r3, #32]
 801680e:	613b      	str	r3, [r7, #16]
 8016810:	687b      	ldr	r3, [r7, #4]
 8016812:	685b      	ldr	r3, [r3, #4]
 8016814:	617b      	str	r3, [r7, #20]
 8016816:	687b      	ldr	r3, [r7, #4]
 8016818:	69db      	ldr	r3, [r3, #28]
 801681a:	60fb      	str	r3, [r7, #12]
 801681c:	68fb      	ldr	r3, [r7, #12]
 801681e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016822:	60fb      	str	r3, [r7, #12]
 8016824:	68fb      	ldr	r3, [r7, #12]
 8016826:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801682a:	60fb      	str	r3, [r7, #12]
 801682c:	683b      	ldr	r3, [r7, #0]
 801682e:	681b      	ldr	r3, [r3, #0]
 8016830:	021b      	lsls	r3, r3, #8
 8016832:	68fa      	ldr	r2, [r7, #12]
 8016834:	4313      	orrs	r3, r2
 8016836:	60fb      	str	r3, [r7, #12]
 8016838:	693b      	ldr	r3, [r7, #16]
 801683a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801683e:	613b      	str	r3, [r7, #16]
 8016840:	683b      	ldr	r3, [r7, #0]
 8016842:	689b      	ldr	r3, [r3, #8]
 8016844:	031b      	lsls	r3, r3, #12
 8016846:	693a      	ldr	r2, [r7, #16]
 8016848:	4313      	orrs	r3, r2
 801684a:	613b      	str	r3, [r7, #16]
 801684c:	687b      	ldr	r3, [r7, #4]
 801684e:	4a12      	ldr	r2, [pc, #72]	; (8016898 <TIM_OC4_SetConfig+0xa4>)
 8016850:	4293      	cmp	r3, r2
 8016852:	d003      	beq.n	801685c <TIM_OC4_SetConfig+0x68>
 8016854:	687b      	ldr	r3, [r7, #4]
 8016856:	4a11      	ldr	r2, [pc, #68]	; (801689c <TIM_OC4_SetConfig+0xa8>)
 8016858:	4293      	cmp	r3, r2
 801685a:	d109      	bne.n	8016870 <TIM_OC4_SetConfig+0x7c>
 801685c:	697b      	ldr	r3, [r7, #20]
 801685e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016862:	617b      	str	r3, [r7, #20]
 8016864:	683b      	ldr	r3, [r7, #0]
 8016866:	695b      	ldr	r3, [r3, #20]
 8016868:	019b      	lsls	r3, r3, #6
 801686a:	697a      	ldr	r2, [r7, #20]
 801686c:	4313      	orrs	r3, r2
 801686e:	617b      	str	r3, [r7, #20]
 8016870:	687b      	ldr	r3, [r7, #4]
 8016872:	697a      	ldr	r2, [r7, #20]
 8016874:	605a      	str	r2, [r3, #4]
 8016876:	687b      	ldr	r3, [r7, #4]
 8016878:	68fa      	ldr	r2, [r7, #12]
 801687a:	61da      	str	r2, [r3, #28]
 801687c:	683b      	ldr	r3, [r7, #0]
 801687e:	685a      	ldr	r2, [r3, #4]
 8016880:	687b      	ldr	r3, [r7, #4]
 8016882:	641a      	str	r2, [r3, #64]	; 0x40
 8016884:	687b      	ldr	r3, [r7, #4]
 8016886:	693a      	ldr	r2, [r7, #16]
 8016888:	621a      	str	r2, [r3, #32]
 801688a:	bf00      	nop
 801688c:	371c      	adds	r7, #28
 801688e:	46bd      	mov	sp, r7
 8016890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016894:	4770      	bx	lr
 8016896:	bf00      	nop
 8016898:	40010000 	.word	0x40010000
 801689c:	40010400 	.word	0x40010400

080168a0 <TIM_TI1_ConfigInputStage>:
 80168a0:	b480      	push	{r7}
 80168a2:	b087      	sub	sp, #28
 80168a4:	af00      	add	r7, sp, #0
 80168a6:	60f8      	str	r0, [r7, #12]
 80168a8:	60b9      	str	r1, [r7, #8]
 80168aa:	607a      	str	r2, [r7, #4]
 80168ac:	68fb      	ldr	r3, [r7, #12]
 80168ae:	6a1b      	ldr	r3, [r3, #32]
 80168b0:	617b      	str	r3, [r7, #20]
 80168b2:	68fb      	ldr	r3, [r7, #12]
 80168b4:	6a1b      	ldr	r3, [r3, #32]
 80168b6:	f023 0201 	bic.w	r2, r3, #1
 80168ba:	68fb      	ldr	r3, [r7, #12]
 80168bc:	621a      	str	r2, [r3, #32]
 80168be:	68fb      	ldr	r3, [r7, #12]
 80168c0:	699b      	ldr	r3, [r3, #24]
 80168c2:	613b      	str	r3, [r7, #16]
 80168c4:	693b      	ldr	r3, [r7, #16]
 80168c6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80168ca:	613b      	str	r3, [r7, #16]
 80168cc:	687b      	ldr	r3, [r7, #4]
 80168ce:	011b      	lsls	r3, r3, #4
 80168d0:	693a      	ldr	r2, [r7, #16]
 80168d2:	4313      	orrs	r3, r2
 80168d4:	613b      	str	r3, [r7, #16]
 80168d6:	697b      	ldr	r3, [r7, #20]
 80168d8:	f023 030a 	bic.w	r3, r3, #10
 80168dc:	617b      	str	r3, [r7, #20]
 80168de:	697a      	ldr	r2, [r7, #20]
 80168e0:	68bb      	ldr	r3, [r7, #8]
 80168e2:	4313      	orrs	r3, r2
 80168e4:	617b      	str	r3, [r7, #20]
 80168e6:	68fb      	ldr	r3, [r7, #12]
 80168e8:	693a      	ldr	r2, [r7, #16]
 80168ea:	619a      	str	r2, [r3, #24]
 80168ec:	68fb      	ldr	r3, [r7, #12]
 80168ee:	697a      	ldr	r2, [r7, #20]
 80168f0:	621a      	str	r2, [r3, #32]
 80168f2:	bf00      	nop
 80168f4:	371c      	adds	r7, #28
 80168f6:	46bd      	mov	sp, r7
 80168f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80168fc:	4770      	bx	lr

080168fe <TIM_TI2_ConfigInputStage>:
 80168fe:	b480      	push	{r7}
 8016900:	b087      	sub	sp, #28
 8016902:	af00      	add	r7, sp, #0
 8016904:	60f8      	str	r0, [r7, #12]
 8016906:	60b9      	str	r1, [r7, #8]
 8016908:	607a      	str	r2, [r7, #4]
 801690a:	68fb      	ldr	r3, [r7, #12]
 801690c:	6a1b      	ldr	r3, [r3, #32]
 801690e:	f023 0210 	bic.w	r2, r3, #16
 8016912:	68fb      	ldr	r3, [r7, #12]
 8016914:	621a      	str	r2, [r3, #32]
 8016916:	68fb      	ldr	r3, [r7, #12]
 8016918:	699b      	ldr	r3, [r3, #24]
 801691a:	617b      	str	r3, [r7, #20]
 801691c:	68fb      	ldr	r3, [r7, #12]
 801691e:	6a1b      	ldr	r3, [r3, #32]
 8016920:	613b      	str	r3, [r7, #16]
 8016922:	697b      	ldr	r3, [r7, #20]
 8016924:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8016928:	617b      	str	r3, [r7, #20]
 801692a:	687b      	ldr	r3, [r7, #4]
 801692c:	031b      	lsls	r3, r3, #12
 801692e:	697a      	ldr	r2, [r7, #20]
 8016930:	4313      	orrs	r3, r2
 8016932:	617b      	str	r3, [r7, #20]
 8016934:	693b      	ldr	r3, [r7, #16]
 8016936:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 801693a:	613b      	str	r3, [r7, #16]
 801693c:	68bb      	ldr	r3, [r7, #8]
 801693e:	011b      	lsls	r3, r3, #4
 8016940:	693a      	ldr	r2, [r7, #16]
 8016942:	4313      	orrs	r3, r2
 8016944:	613b      	str	r3, [r7, #16]
 8016946:	68fb      	ldr	r3, [r7, #12]
 8016948:	697a      	ldr	r2, [r7, #20]
 801694a:	619a      	str	r2, [r3, #24]
 801694c:	68fb      	ldr	r3, [r7, #12]
 801694e:	693a      	ldr	r2, [r7, #16]
 8016950:	621a      	str	r2, [r3, #32]
 8016952:	bf00      	nop
 8016954:	371c      	adds	r7, #28
 8016956:	46bd      	mov	sp, r7
 8016958:	f85d 7b04 	ldr.w	r7, [sp], #4
 801695c:	4770      	bx	lr

0801695e <TIM_ITRx_SetConfig>:
 801695e:	b480      	push	{r7}
 8016960:	b085      	sub	sp, #20
 8016962:	af00      	add	r7, sp, #0
 8016964:	6078      	str	r0, [r7, #4]
 8016966:	6039      	str	r1, [r7, #0]
 8016968:	687b      	ldr	r3, [r7, #4]
 801696a:	689b      	ldr	r3, [r3, #8]
 801696c:	60fb      	str	r3, [r7, #12]
 801696e:	68fb      	ldr	r3, [r7, #12]
 8016970:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016974:	60fb      	str	r3, [r7, #12]
 8016976:	683a      	ldr	r2, [r7, #0]
 8016978:	68fb      	ldr	r3, [r7, #12]
 801697a:	4313      	orrs	r3, r2
 801697c:	f043 0307 	orr.w	r3, r3, #7
 8016980:	60fb      	str	r3, [r7, #12]
 8016982:	687b      	ldr	r3, [r7, #4]
 8016984:	68fa      	ldr	r2, [r7, #12]
 8016986:	609a      	str	r2, [r3, #8]
 8016988:	bf00      	nop
 801698a:	3714      	adds	r7, #20
 801698c:	46bd      	mov	sp, r7
 801698e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016992:	4770      	bx	lr

08016994 <TIM_ETR_SetConfig>:
 8016994:	b480      	push	{r7}
 8016996:	b087      	sub	sp, #28
 8016998:	af00      	add	r7, sp, #0
 801699a:	60f8      	str	r0, [r7, #12]
 801699c:	60b9      	str	r1, [r7, #8]
 801699e:	607a      	str	r2, [r7, #4]
 80169a0:	603b      	str	r3, [r7, #0]
 80169a2:	68fb      	ldr	r3, [r7, #12]
 80169a4:	689b      	ldr	r3, [r3, #8]
 80169a6:	617b      	str	r3, [r7, #20]
 80169a8:	697b      	ldr	r3, [r7, #20]
 80169aa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80169ae:	617b      	str	r3, [r7, #20]
 80169b0:	683b      	ldr	r3, [r7, #0]
 80169b2:	021a      	lsls	r2, r3, #8
 80169b4:	687b      	ldr	r3, [r7, #4]
 80169b6:	431a      	orrs	r2, r3
 80169b8:	68bb      	ldr	r3, [r7, #8]
 80169ba:	4313      	orrs	r3, r2
 80169bc:	697a      	ldr	r2, [r7, #20]
 80169be:	4313      	orrs	r3, r2
 80169c0:	617b      	str	r3, [r7, #20]
 80169c2:	68fb      	ldr	r3, [r7, #12]
 80169c4:	697a      	ldr	r2, [r7, #20]
 80169c6:	609a      	str	r2, [r3, #8]
 80169c8:	bf00      	nop
 80169ca:	371c      	adds	r7, #28
 80169cc:	46bd      	mov	sp, r7
 80169ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80169d2:	4770      	bx	lr

080169d4 <TIM_CCxChannelCmd>:
 80169d4:	b480      	push	{r7}
 80169d6:	b087      	sub	sp, #28
 80169d8:	af00      	add	r7, sp, #0
 80169da:	60f8      	str	r0, [r7, #12]
 80169dc:	60b9      	str	r1, [r7, #8]
 80169de:	607a      	str	r2, [r7, #4]
 80169e0:	68bb      	ldr	r3, [r7, #8]
 80169e2:	f003 031f 	and.w	r3, r3, #31
 80169e6:	2201      	movs	r2, #1
 80169e8:	fa02 f303 	lsl.w	r3, r2, r3
 80169ec:	617b      	str	r3, [r7, #20]
 80169ee:	68fb      	ldr	r3, [r7, #12]
 80169f0:	6a1a      	ldr	r2, [r3, #32]
 80169f2:	697b      	ldr	r3, [r7, #20]
 80169f4:	43db      	mvns	r3, r3
 80169f6:	401a      	ands	r2, r3
 80169f8:	68fb      	ldr	r3, [r7, #12]
 80169fa:	621a      	str	r2, [r3, #32]
 80169fc:	68fb      	ldr	r3, [r7, #12]
 80169fe:	6a1a      	ldr	r2, [r3, #32]
 8016a00:	68bb      	ldr	r3, [r7, #8]
 8016a02:	f003 031f 	and.w	r3, r3, #31
 8016a06:	6879      	ldr	r1, [r7, #4]
 8016a08:	fa01 f303 	lsl.w	r3, r1, r3
 8016a0c:	431a      	orrs	r2, r3
 8016a0e:	68fb      	ldr	r3, [r7, #12]
 8016a10:	621a      	str	r2, [r3, #32]
 8016a12:	bf00      	nop
 8016a14:	371c      	adds	r7, #28
 8016a16:	46bd      	mov	sp, r7
 8016a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016a1c:	4770      	bx	lr
	...

08016a20 <HAL_TIMEx_MasterConfigSynchronization>:
 8016a20:	b480      	push	{r7}
 8016a22:	b085      	sub	sp, #20
 8016a24:	af00      	add	r7, sp, #0
 8016a26:	6078      	str	r0, [r7, #4]
 8016a28:	6039      	str	r1, [r7, #0]
 8016a2a:	687b      	ldr	r3, [r7, #4]
 8016a2c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016a30:	2b01      	cmp	r3, #1
 8016a32:	d101      	bne.n	8016a38 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8016a34:	2302      	movs	r3, #2
 8016a36:	e05a      	b.n	8016aee <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8016a38:	687b      	ldr	r3, [r7, #4]
 8016a3a:	2201      	movs	r2, #1
 8016a3c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016a40:	687b      	ldr	r3, [r7, #4]
 8016a42:	2202      	movs	r2, #2
 8016a44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016a48:	687b      	ldr	r3, [r7, #4]
 8016a4a:	681b      	ldr	r3, [r3, #0]
 8016a4c:	685b      	ldr	r3, [r3, #4]
 8016a4e:	60fb      	str	r3, [r7, #12]
 8016a50:	687b      	ldr	r3, [r7, #4]
 8016a52:	681b      	ldr	r3, [r3, #0]
 8016a54:	689b      	ldr	r3, [r3, #8]
 8016a56:	60bb      	str	r3, [r7, #8]
 8016a58:	68fb      	ldr	r3, [r7, #12]
 8016a5a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016a5e:	60fb      	str	r3, [r7, #12]
 8016a60:	683b      	ldr	r3, [r7, #0]
 8016a62:	681b      	ldr	r3, [r3, #0]
 8016a64:	68fa      	ldr	r2, [r7, #12]
 8016a66:	4313      	orrs	r3, r2
 8016a68:	60fb      	str	r3, [r7, #12]
 8016a6a:	687b      	ldr	r3, [r7, #4]
 8016a6c:	681b      	ldr	r3, [r3, #0]
 8016a6e:	68fa      	ldr	r2, [r7, #12]
 8016a70:	605a      	str	r2, [r3, #4]
 8016a72:	687b      	ldr	r3, [r7, #4]
 8016a74:	681b      	ldr	r3, [r3, #0]
 8016a76:	4a21      	ldr	r2, [pc, #132]	; (8016afc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8016a78:	4293      	cmp	r3, r2
 8016a7a:	d022      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016a7c:	687b      	ldr	r3, [r7, #4]
 8016a7e:	681b      	ldr	r3, [r3, #0]
 8016a80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8016a84:	d01d      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016a86:	687b      	ldr	r3, [r7, #4]
 8016a88:	681b      	ldr	r3, [r3, #0]
 8016a8a:	4a1d      	ldr	r2, [pc, #116]	; (8016b00 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8016a8c:	4293      	cmp	r3, r2
 8016a8e:	d018      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016a90:	687b      	ldr	r3, [r7, #4]
 8016a92:	681b      	ldr	r3, [r3, #0]
 8016a94:	4a1b      	ldr	r2, [pc, #108]	; (8016b04 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8016a96:	4293      	cmp	r3, r2
 8016a98:	d013      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016a9a:	687b      	ldr	r3, [r7, #4]
 8016a9c:	681b      	ldr	r3, [r3, #0]
 8016a9e:	4a1a      	ldr	r2, [pc, #104]	; (8016b08 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8016aa0:	4293      	cmp	r3, r2
 8016aa2:	d00e      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016aa4:	687b      	ldr	r3, [r7, #4]
 8016aa6:	681b      	ldr	r3, [r3, #0]
 8016aa8:	4a18      	ldr	r2, [pc, #96]	; (8016b0c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8016aaa:	4293      	cmp	r3, r2
 8016aac:	d009      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016aae:	687b      	ldr	r3, [r7, #4]
 8016ab0:	681b      	ldr	r3, [r3, #0]
 8016ab2:	4a17      	ldr	r2, [pc, #92]	; (8016b10 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8016ab4:	4293      	cmp	r3, r2
 8016ab6:	d004      	beq.n	8016ac2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8016ab8:	687b      	ldr	r3, [r7, #4]
 8016aba:	681b      	ldr	r3, [r3, #0]
 8016abc:	4a15      	ldr	r2, [pc, #84]	; (8016b14 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8016abe:	4293      	cmp	r3, r2
 8016ac0:	d10c      	bne.n	8016adc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8016ac2:	68bb      	ldr	r3, [r7, #8]
 8016ac4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016ac8:	60bb      	str	r3, [r7, #8]
 8016aca:	683b      	ldr	r3, [r7, #0]
 8016acc:	685b      	ldr	r3, [r3, #4]
 8016ace:	68ba      	ldr	r2, [r7, #8]
 8016ad0:	4313      	orrs	r3, r2
 8016ad2:	60bb      	str	r3, [r7, #8]
 8016ad4:	687b      	ldr	r3, [r7, #4]
 8016ad6:	681b      	ldr	r3, [r3, #0]
 8016ad8:	68ba      	ldr	r2, [r7, #8]
 8016ada:	609a      	str	r2, [r3, #8]
 8016adc:	687b      	ldr	r3, [r7, #4]
 8016ade:	2201      	movs	r2, #1
 8016ae0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016ae4:	687b      	ldr	r3, [r7, #4]
 8016ae6:	2200      	movs	r2, #0
 8016ae8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016aec:	2300      	movs	r3, #0
 8016aee:	4618      	mov	r0, r3
 8016af0:	3714      	adds	r7, #20
 8016af2:	46bd      	mov	sp, r7
 8016af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016af8:	4770      	bx	lr
 8016afa:	bf00      	nop
 8016afc:	40010000 	.word	0x40010000
 8016b00:	40000400 	.word	0x40000400
 8016b04:	40000800 	.word	0x40000800
 8016b08:	40000c00 	.word	0x40000c00
 8016b0c:	40010400 	.word	0x40010400
 8016b10:	40014000 	.word	0x40014000
 8016b14:	40001800 	.word	0x40001800

08016b18 <HAL_TIMEx_ConfigBreakDeadTime>:
 8016b18:	b480      	push	{r7}
 8016b1a:	b085      	sub	sp, #20
 8016b1c:	af00      	add	r7, sp, #0
 8016b1e:	6078      	str	r0, [r7, #4]
 8016b20:	6039      	str	r1, [r7, #0]
 8016b22:	2300      	movs	r3, #0
 8016b24:	60fb      	str	r3, [r7, #12]
 8016b26:	687b      	ldr	r3, [r7, #4]
 8016b28:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016b2c:	2b01      	cmp	r3, #1
 8016b2e:	d101      	bne.n	8016b34 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8016b30:	2302      	movs	r3, #2
 8016b32:	e03d      	b.n	8016bb0 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8016b34:	687b      	ldr	r3, [r7, #4]
 8016b36:	2201      	movs	r2, #1
 8016b38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016b3c:	68fb      	ldr	r3, [r7, #12]
 8016b3e:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8016b42:	683b      	ldr	r3, [r7, #0]
 8016b44:	68db      	ldr	r3, [r3, #12]
 8016b46:	4313      	orrs	r3, r2
 8016b48:	60fb      	str	r3, [r7, #12]
 8016b4a:	68fb      	ldr	r3, [r7, #12]
 8016b4c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8016b50:	683b      	ldr	r3, [r7, #0]
 8016b52:	689b      	ldr	r3, [r3, #8]
 8016b54:	4313      	orrs	r3, r2
 8016b56:	60fb      	str	r3, [r7, #12]
 8016b58:	68fb      	ldr	r3, [r7, #12]
 8016b5a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8016b5e:	683b      	ldr	r3, [r7, #0]
 8016b60:	685b      	ldr	r3, [r3, #4]
 8016b62:	4313      	orrs	r3, r2
 8016b64:	60fb      	str	r3, [r7, #12]
 8016b66:	68fb      	ldr	r3, [r7, #12]
 8016b68:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8016b6c:	683b      	ldr	r3, [r7, #0]
 8016b6e:	681b      	ldr	r3, [r3, #0]
 8016b70:	4313      	orrs	r3, r2
 8016b72:	60fb      	str	r3, [r7, #12]
 8016b74:	68fb      	ldr	r3, [r7, #12]
 8016b76:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8016b7a:	683b      	ldr	r3, [r7, #0]
 8016b7c:	691b      	ldr	r3, [r3, #16]
 8016b7e:	4313      	orrs	r3, r2
 8016b80:	60fb      	str	r3, [r7, #12]
 8016b82:	68fb      	ldr	r3, [r7, #12]
 8016b84:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8016b88:	683b      	ldr	r3, [r7, #0]
 8016b8a:	695b      	ldr	r3, [r3, #20]
 8016b8c:	4313      	orrs	r3, r2
 8016b8e:	60fb      	str	r3, [r7, #12]
 8016b90:	68fb      	ldr	r3, [r7, #12]
 8016b92:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8016b96:	683b      	ldr	r3, [r7, #0]
 8016b98:	69db      	ldr	r3, [r3, #28]
 8016b9a:	4313      	orrs	r3, r2
 8016b9c:	60fb      	str	r3, [r7, #12]
 8016b9e:	687b      	ldr	r3, [r7, #4]
 8016ba0:	681b      	ldr	r3, [r3, #0]
 8016ba2:	68fa      	ldr	r2, [r7, #12]
 8016ba4:	645a      	str	r2, [r3, #68]	; 0x44
 8016ba6:	687b      	ldr	r3, [r7, #4]
 8016ba8:	2200      	movs	r2, #0
 8016baa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016bae:	2300      	movs	r3, #0
 8016bb0:	4618      	mov	r0, r3
 8016bb2:	3714      	adds	r7, #20
 8016bb4:	46bd      	mov	sp, r7
 8016bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016bba:	4770      	bx	lr

08016bbc <HAL_TIMEx_CommutCallback>:
 8016bbc:	b480      	push	{r7}
 8016bbe:	b083      	sub	sp, #12
 8016bc0:	af00      	add	r7, sp, #0
 8016bc2:	6078      	str	r0, [r7, #4]
 8016bc4:	bf00      	nop
 8016bc6:	370c      	adds	r7, #12
 8016bc8:	46bd      	mov	sp, r7
 8016bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016bce:	4770      	bx	lr

08016bd0 <HAL_TIMEx_BreakCallback>:
 8016bd0:	b480      	push	{r7}
 8016bd2:	b083      	sub	sp, #12
 8016bd4:	af00      	add	r7, sp, #0
 8016bd6:	6078      	str	r0, [r7, #4]
 8016bd8:	bf00      	nop
 8016bda:	370c      	adds	r7, #12
 8016bdc:	46bd      	mov	sp, r7
 8016bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016be2:	4770      	bx	lr

08016be4 <HAL_UART_Init>:
 8016be4:	b580      	push	{r7, lr}
 8016be6:	b082      	sub	sp, #8
 8016be8:	af00      	add	r7, sp, #0
 8016bea:	6078      	str	r0, [r7, #4]
 8016bec:	687b      	ldr	r3, [r7, #4]
 8016bee:	2b00      	cmp	r3, #0
 8016bf0:	d101      	bne.n	8016bf6 <HAL_UART_Init+0x12>
 8016bf2:	2301      	movs	r3, #1
 8016bf4:	e03f      	b.n	8016c76 <HAL_UART_Init+0x92>
 8016bf6:	687b      	ldr	r3, [r7, #4]
 8016bf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016bfc:	b2db      	uxtb	r3, r3
 8016bfe:	2b00      	cmp	r3, #0
 8016c00:	d106      	bne.n	8016c10 <HAL_UART_Init+0x2c>
 8016c02:	687b      	ldr	r3, [r7, #4]
 8016c04:	2200      	movs	r2, #0
 8016c06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016c0a:	6878      	ldr	r0, [r7, #4]
 8016c0c:	f7ed fe9a 	bl	8004944 <HAL_UART_MspInit>
 8016c10:	687b      	ldr	r3, [r7, #4]
 8016c12:	2224      	movs	r2, #36	; 0x24
 8016c14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016c18:	687b      	ldr	r3, [r7, #4]
 8016c1a:	681b      	ldr	r3, [r3, #0]
 8016c1c:	68da      	ldr	r2, [r3, #12]
 8016c1e:	687b      	ldr	r3, [r7, #4]
 8016c20:	681b      	ldr	r3, [r3, #0]
 8016c22:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8016c26:	60da      	str	r2, [r3, #12]
 8016c28:	6878      	ldr	r0, [r7, #4]
 8016c2a:	f000 fe95 	bl	8017958 <UART_SetConfig>
 8016c2e:	687b      	ldr	r3, [r7, #4]
 8016c30:	681b      	ldr	r3, [r3, #0]
 8016c32:	691a      	ldr	r2, [r3, #16]
 8016c34:	687b      	ldr	r3, [r7, #4]
 8016c36:	681b      	ldr	r3, [r3, #0]
 8016c38:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8016c3c:	611a      	str	r2, [r3, #16]
 8016c3e:	687b      	ldr	r3, [r7, #4]
 8016c40:	681b      	ldr	r3, [r3, #0]
 8016c42:	695a      	ldr	r2, [r3, #20]
 8016c44:	687b      	ldr	r3, [r7, #4]
 8016c46:	681b      	ldr	r3, [r3, #0]
 8016c48:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8016c4c:	615a      	str	r2, [r3, #20]
 8016c4e:	687b      	ldr	r3, [r7, #4]
 8016c50:	681b      	ldr	r3, [r3, #0]
 8016c52:	68da      	ldr	r2, [r3, #12]
 8016c54:	687b      	ldr	r3, [r7, #4]
 8016c56:	681b      	ldr	r3, [r3, #0]
 8016c58:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8016c5c:	60da      	str	r2, [r3, #12]
 8016c5e:	687b      	ldr	r3, [r7, #4]
 8016c60:	2200      	movs	r2, #0
 8016c62:	641a      	str	r2, [r3, #64]	; 0x40
 8016c64:	687b      	ldr	r3, [r7, #4]
 8016c66:	2220      	movs	r2, #32
 8016c68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016c6c:	687b      	ldr	r3, [r7, #4]
 8016c6e:	2220      	movs	r2, #32
 8016c70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8016c74:	2300      	movs	r3, #0
 8016c76:	4618      	mov	r0, r3
 8016c78:	3708      	adds	r7, #8
 8016c7a:	46bd      	mov	sp, r7
 8016c7c:	bd80      	pop	{r7, pc}

08016c7e <HAL_UART_Transmit_IT>:
 8016c7e:	b480      	push	{r7}
 8016c80:	b085      	sub	sp, #20
 8016c82:	af00      	add	r7, sp, #0
 8016c84:	60f8      	str	r0, [r7, #12]
 8016c86:	60b9      	str	r1, [r7, #8]
 8016c88:	4613      	mov	r3, r2
 8016c8a:	80fb      	strh	r3, [r7, #6]
 8016c8c:	68fb      	ldr	r3, [r7, #12]
 8016c8e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016c92:	b2db      	uxtb	r3, r3
 8016c94:	2b20      	cmp	r3, #32
 8016c96:	d130      	bne.n	8016cfa <HAL_UART_Transmit_IT+0x7c>
 8016c98:	68bb      	ldr	r3, [r7, #8]
 8016c9a:	2b00      	cmp	r3, #0
 8016c9c:	d002      	beq.n	8016ca4 <HAL_UART_Transmit_IT+0x26>
 8016c9e:	88fb      	ldrh	r3, [r7, #6]
 8016ca0:	2b00      	cmp	r3, #0
 8016ca2:	d101      	bne.n	8016ca8 <HAL_UART_Transmit_IT+0x2a>
 8016ca4:	2301      	movs	r3, #1
 8016ca6:	e029      	b.n	8016cfc <HAL_UART_Transmit_IT+0x7e>
 8016ca8:	68fb      	ldr	r3, [r7, #12]
 8016caa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016cae:	2b01      	cmp	r3, #1
 8016cb0:	d101      	bne.n	8016cb6 <HAL_UART_Transmit_IT+0x38>
 8016cb2:	2302      	movs	r3, #2
 8016cb4:	e022      	b.n	8016cfc <HAL_UART_Transmit_IT+0x7e>
 8016cb6:	68fb      	ldr	r3, [r7, #12]
 8016cb8:	2201      	movs	r2, #1
 8016cba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016cbe:	68fb      	ldr	r3, [r7, #12]
 8016cc0:	68ba      	ldr	r2, [r7, #8]
 8016cc2:	621a      	str	r2, [r3, #32]
 8016cc4:	68fb      	ldr	r3, [r7, #12]
 8016cc6:	88fa      	ldrh	r2, [r7, #6]
 8016cc8:	849a      	strh	r2, [r3, #36]	; 0x24
 8016cca:	68fb      	ldr	r3, [r7, #12]
 8016ccc:	88fa      	ldrh	r2, [r7, #6]
 8016cce:	84da      	strh	r2, [r3, #38]	; 0x26
 8016cd0:	68fb      	ldr	r3, [r7, #12]
 8016cd2:	2200      	movs	r2, #0
 8016cd4:	641a      	str	r2, [r3, #64]	; 0x40
 8016cd6:	68fb      	ldr	r3, [r7, #12]
 8016cd8:	2221      	movs	r2, #33	; 0x21
 8016cda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016cde:	68fb      	ldr	r3, [r7, #12]
 8016ce0:	2200      	movs	r2, #0
 8016ce2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016ce6:	68fb      	ldr	r3, [r7, #12]
 8016ce8:	681b      	ldr	r3, [r3, #0]
 8016cea:	68da      	ldr	r2, [r3, #12]
 8016cec:	68fb      	ldr	r3, [r7, #12]
 8016cee:	681b      	ldr	r3, [r3, #0]
 8016cf0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8016cf4:	60da      	str	r2, [r3, #12]
 8016cf6:	2300      	movs	r3, #0
 8016cf8:	e000      	b.n	8016cfc <HAL_UART_Transmit_IT+0x7e>
 8016cfa:	2302      	movs	r3, #2
 8016cfc:	4618      	mov	r0, r3
 8016cfe:	3714      	adds	r7, #20
 8016d00:	46bd      	mov	sp, r7
 8016d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016d06:	4770      	bx	lr

08016d08 <HAL_UART_Transmit_DMA>:
 8016d08:	b580      	push	{r7, lr}
 8016d0a:	b08c      	sub	sp, #48	; 0x30
 8016d0c:	af00      	add	r7, sp, #0
 8016d0e:	60f8      	str	r0, [r7, #12]
 8016d10:	60b9      	str	r1, [r7, #8]
 8016d12:	4613      	mov	r3, r2
 8016d14:	80fb      	strh	r3, [r7, #6]
 8016d16:	68fb      	ldr	r3, [r7, #12]
 8016d18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016d1c:	b2db      	uxtb	r3, r3
 8016d1e:	2b20      	cmp	r3, #32
 8016d20:	d165      	bne.n	8016dee <HAL_UART_Transmit_DMA+0xe6>
 8016d22:	68bb      	ldr	r3, [r7, #8]
 8016d24:	2b00      	cmp	r3, #0
 8016d26:	d002      	beq.n	8016d2e <HAL_UART_Transmit_DMA+0x26>
 8016d28:	88fb      	ldrh	r3, [r7, #6]
 8016d2a:	2b00      	cmp	r3, #0
 8016d2c:	d101      	bne.n	8016d32 <HAL_UART_Transmit_DMA+0x2a>
 8016d2e:	2301      	movs	r3, #1
 8016d30:	e05e      	b.n	8016df0 <HAL_UART_Transmit_DMA+0xe8>
 8016d32:	68fb      	ldr	r3, [r7, #12]
 8016d34:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8016d38:	2b01      	cmp	r3, #1
 8016d3a:	d101      	bne.n	8016d40 <HAL_UART_Transmit_DMA+0x38>
 8016d3c:	2302      	movs	r3, #2
 8016d3e:	e057      	b.n	8016df0 <HAL_UART_Transmit_DMA+0xe8>
 8016d40:	68fb      	ldr	r3, [r7, #12]
 8016d42:	2201      	movs	r2, #1
 8016d44:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016d48:	68ba      	ldr	r2, [r7, #8]
 8016d4a:	68fb      	ldr	r3, [r7, #12]
 8016d4c:	621a      	str	r2, [r3, #32]
 8016d4e:	68fb      	ldr	r3, [r7, #12]
 8016d50:	88fa      	ldrh	r2, [r7, #6]
 8016d52:	849a      	strh	r2, [r3, #36]	; 0x24
 8016d54:	68fb      	ldr	r3, [r7, #12]
 8016d56:	88fa      	ldrh	r2, [r7, #6]
 8016d58:	84da      	strh	r2, [r3, #38]	; 0x26
 8016d5a:	68fb      	ldr	r3, [r7, #12]
 8016d5c:	2200      	movs	r2, #0
 8016d5e:	641a      	str	r2, [r3, #64]	; 0x40
 8016d60:	68fb      	ldr	r3, [r7, #12]
 8016d62:	2221      	movs	r2, #33	; 0x21
 8016d64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8016d68:	68fb      	ldr	r3, [r7, #12]
 8016d6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d6c:	4a22      	ldr	r2, [pc, #136]	; (8016df8 <HAL_UART_Transmit_DMA+0xf0>)
 8016d6e:	63da      	str	r2, [r3, #60]	; 0x3c
 8016d70:	68fb      	ldr	r3, [r7, #12]
 8016d72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d74:	4a21      	ldr	r2, [pc, #132]	; (8016dfc <HAL_UART_Transmit_DMA+0xf4>)
 8016d76:	641a      	str	r2, [r3, #64]	; 0x40
 8016d78:	68fb      	ldr	r3, [r7, #12]
 8016d7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d7c:	4a20      	ldr	r2, [pc, #128]	; (8016e00 <HAL_UART_Transmit_DMA+0xf8>)
 8016d7e:	64da      	str	r2, [r3, #76]	; 0x4c
 8016d80:	68fb      	ldr	r3, [r7, #12]
 8016d82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d84:	2200      	movs	r2, #0
 8016d86:	651a      	str	r2, [r3, #80]	; 0x50
 8016d88:	f107 0308 	add.w	r3, r7, #8
 8016d8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016d8e:	68fb      	ldr	r3, [r7, #12]
 8016d90:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8016d92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8016d94:	6819      	ldr	r1, [r3, #0]
 8016d96:	68fb      	ldr	r3, [r7, #12]
 8016d98:	681b      	ldr	r3, [r3, #0]
 8016d9a:	3304      	adds	r3, #4
 8016d9c:	461a      	mov	r2, r3
 8016d9e:	88fb      	ldrh	r3, [r7, #6]
 8016da0:	f7f9 ff22 	bl	8010be8 <HAL_DMA_Start_IT>
 8016da4:	68fb      	ldr	r3, [r7, #12]
 8016da6:	681b      	ldr	r3, [r3, #0]
 8016da8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8016dac:	601a      	str	r2, [r3, #0]
 8016dae:	68fb      	ldr	r3, [r7, #12]
 8016db0:	2200      	movs	r2, #0
 8016db2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8016db6:	68fb      	ldr	r3, [r7, #12]
 8016db8:	681b      	ldr	r3, [r3, #0]
 8016dba:	3314      	adds	r3, #20
 8016dbc:	61bb      	str	r3, [r7, #24]
 8016dbe:	69bb      	ldr	r3, [r7, #24]
 8016dc0:	e853 3f00 	ldrex	r3, [r3]
 8016dc4:	617b      	str	r3, [r7, #20]
 8016dc6:	697b      	ldr	r3, [r7, #20]
 8016dc8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016dcc:	62bb      	str	r3, [r7, #40]	; 0x28
 8016dce:	68fb      	ldr	r3, [r7, #12]
 8016dd0:	681b      	ldr	r3, [r3, #0]
 8016dd2:	3314      	adds	r3, #20
 8016dd4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8016dd6:	627a      	str	r2, [r7, #36]	; 0x24
 8016dd8:	623b      	str	r3, [r7, #32]
 8016dda:	6a39      	ldr	r1, [r7, #32]
 8016ddc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8016dde:	e841 2300 	strex	r3, r2, [r1]
 8016de2:	61fb      	str	r3, [r7, #28]
 8016de4:	69fb      	ldr	r3, [r7, #28]
 8016de6:	2b00      	cmp	r3, #0
 8016de8:	d1e5      	bne.n	8016db6 <HAL_UART_Transmit_DMA+0xae>
 8016dea:	2300      	movs	r3, #0
 8016dec:	e000      	b.n	8016df0 <HAL_UART_Transmit_DMA+0xe8>
 8016dee:	2302      	movs	r3, #2
 8016df0:	4618      	mov	r0, r3
 8016df2:	3730      	adds	r7, #48	; 0x30
 8016df4:	46bd      	mov	sp, r7
 8016df6:	bd80      	pop	{r7, pc}
 8016df8:	08017489 	.word	0x08017489
 8016dfc:	08017523 	.word	0x08017523
 8016e00:	0801753f 	.word	0x0801753f

08016e04 <HAL_UART_DMAStop>:
 8016e04:	b580      	push	{r7, lr}
 8016e06:	b090      	sub	sp, #64	; 0x40
 8016e08:	af00      	add	r7, sp, #0
 8016e0a:	6078      	str	r0, [r7, #4]
 8016e0c:	2300      	movs	r3, #0
 8016e0e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016e10:	687b      	ldr	r3, [r7, #4]
 8016e12:	681b      	ldr	r3, [r3, #0]
 8016e14:	695b      	ldr	r3, [r3, #20]
 8016e16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8016e1a:	2b80      	cmp	r3, #128	; 0x80
 8016e1c:	bf0c      	ite	eq
 8016e1e:	2301      	moveq	r3, #1
 8016e20:	2300      	movne	r3, #0
 8016e22:	b2db      	uxtb	r3, r3
 8016e24:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016e26:	687b      	ldr	r3, [r7, #4]
 8016e28:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8016e2c:	b2db      	uxtb	r3, r3
 8016e2e:	2b21      	cmp	r3, #33	; 0x21
 8016e30:	d128      	bne.n	8016e84 <HAL_UART_DMAStop+0x80>
 8016e32:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016e34:	2b00      	cmp	r3, #0
 8016e36:	d025      	beq.n	8016e84 <HAL_UART_DMAStop+0x80>
 8016e38:	687b      	ldr	r3, [r7, #4]
 8016e3a:	681b      	ldr	r3, [r3, #0]
 8016e3c:	3314      	adds	r3, #20
 8016e3e:	627b      	str	r3, [r7, #36]	; 0x24
 8016e40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016e42:	e853 3f00 	ldrex	r3, [r3]
 8016e46:	623b      	str	r3, [r7, #32]
 8016e48:	6a3b      	ldr	r3, [r7, #32]
 8016e4a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016e4e:	63bb      	str	r3, [r7, #56]	; 0x38
 8016e50:	687b      	ldr	r3, [r7, #4]
 8016e52:	681b      	ldr	r3, [r3, #0]
 8016e54:	3314      	adds	r3, #20
 8016e56:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8016e58:	633a      	str	r2, [r7, #48]	; 0x30
 8016e5a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8016e5c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8016e5e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8016e60:	e841 2300 	strex	r3, r2, [r1]
 8016e64:	62bb      	str	r3, [r7, #40]	; 0x28
 8016e66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8016e68:	2b00      	cmp	r3, #0
 8016e6a:	d1e5      	bne.n	8016e38 <HAL_UART_DMAStop+0x34>
 8016e6c:	687b      	ldr	r3, [r7, #4]
 8016e6e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016e70:	2b00      	cmp	r3, #0
 8016e72:	d004      	beq.n	8016e7e <HAL_UART_DMAStop+0x7a>
 8016e74:	687b      	ldr	r3, [r7, #4]
 8016e76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016e78:	4618      	mov	r0, r3
 8016e7a:	f7f9 ff0d 	bl	8010c98 <HAL_DMA_Abort>
 8016e7e:	6878      	ldr	r0, [r7, #4]
 8016e80:	f000 fba7 	bl	80175d2 <UART_EndTxTransfer>
 8016e84:	687b      	ldr	r3, [r7, #4]
 8016e86:	681b      	ldr	r3, [r3, #0]
 8016e88:	695b      	ldr	r3, [r3, #20]
 8016e8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8016e8e:	2b40      	cmp	r3, #64	; 0x40
 8016e90:	bf0c      	ite	eq
 8016e92:	2301      	moveq	r3, #1
 8016e94:	2300      	movne	r3, #0
 8016e96:	b2db      	uxtb	r3, r3
 8016e98:	63fb      	str	r3, [r7, #60]	; 0x3c
 8016e9a:	687b      	ldr	r3, [r7, #4]
 8016e9c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8016ea0:	b2db      	uxtb	r3, r3
 8016ea2:	2b22      	cmp	r3, #34	; 0x22
 8016ea4:	d128      	bne.n	8016ef8 <HAL_UART_DMAStop+0xf4>
 8016ea6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016ea8:	2b00      	cmp	r3, #0
 8016eaa:	d025      	beq.n	8016ef8 <HAL_UART_DMAStop+0xf4>
 8016eac:	687b      	ldr	r3, [r7, #4]
 8016eae:	681b      	ldr	r3, [r3, #0]
 8016eb0:	3314      	adds	r3, #20
 8016eb2:	613b      	str	r3, [r7, #16]
 8016eb4:	693b      	ldr	r3, [r7, #16]
 8016eb6:	e853 3f00 	ldrex	r3, [r3]
 8016eba:	60fb      	str	r3, [r7, #12]
 8016ebc:	68fb      	ldr	r3, [r7, #12]
 8016ebe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8016ec2:	637b      	str	r3, [r7, #52]	; 0x34
 8016ec4:	687b      	ldr	r3, [r7, #4]
 8016ec6:	681b      	ldr	r3, [r3, #0]
 8016ec8:	3314      	adds	r3, #20
 8016eca:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8016ecc:	61fa      	str	r2, [r7, #28]
 8016ece:	61bb      	str	r3, [r7, #24]
 8016ed0:	69b9      	ldr	r1, [r7, #24]
 8016ed2:	69fa      	ldr	r2, [r7, #28]
 8016ed4:	e841 2300 	strex	r3, r2, [r1]
 8016ed8:	617b      	str	r3, [r7, #20]
 8016eda:	697b      	ldr	r3, [r7, #20]
 8016edc:	2b00      	cmp	r3, #0
 8016ede:	d1e5      	bne.n	8016eac <HAL_UART_DMAStop+0xa8>
 8016ee0:	687b      	ldr	r3, [r7, #4]
 8016ee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016ee4:	2b00      	cmp	r3, #0
 8016ee6:	d004      	beq.n	8016ef2 <HAL_UART_DMAStop+0xee>
 8016ee8:	687b      	ldr	r3, [r7, #4]
 8016eea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016eec:	4618      	mov	r0, r3
 8016eee:	f7f9 fed3 	bl	8010c98 <HAL_DMA_Abort>
 8016ef2:	6878      	ldr	r0, [r7, #4]
 8016ef4:	f000 fb95 	bl	8017622 <UART_EndRxTransfer>
 8016ef8:	2300      	movs	r3, #0
 8016efa:	4618      	mov	r0, r3
 8016efc:	3740      	adds	r7, #64	; 0x40
 8016efe:	46bd      	mov	sp, r7
 8016f00:	bd80      	pop	{r7, pc}
	...

08016f04 <HAL_UART_IRQHandler>:
 8016f04:	b580      	push	{r7, lr}
 8016f06:	b0ba      	sub	sp, #232	; 0xe8
 8016f08:	af00      	add	r7, sp, #0
 8016f0a:	6078      	str	r0, [r7, #4]
 8016f0c:	687b      	ldr	r3, [r7, #4]
 8016f0e:	681b      	ldr	r3, [r3, #0]
 8016f10:	681b      	ldr	r3, [r3, #0]
 8016f12:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8016f16:	687b      	ldr	r3, [r7, #4]
 8016f18:	681b      	ldr	r3, [r3, #0]
 8016f1a:	68db      	ldr	r3, [r3, #12]
 8016f1c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8016f20:	687b      	ldr	r3, [r7, #4]
 8016f22:	681b      	ldr	r3, [r3, #0]
 8016f24:	695b      	ldr	r3, [r3, #20]
 8016f26:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8016f2a:	2300      	movs	r3, #0
 8016f2c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8016f30:	2300      	movs	r3, #0
 8016f32:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8016f36:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016f3a:	f003 030f 	and.w	r3, r3, #15
 8016f3e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8016f42:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8016f46:	2b00      	cmp	r3, #0
 8016f48:	d10f      	bne.n	8016f6a <HAL_UART_IRQHandler+0x66>
 8016f4a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016f4e:	f003 0320 	and.w	r3, r3, #32
 8016f52:	2b00      	cmp	r3, #0
 8016f54:	d009      	beq.n	8016f6a <HAL_UART_IRQHandler+0x66>
 8016f56:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016f5a:	f003 0320 	and.w	r3, r3, #32
 8016f5e:	2b00      	cmp	r3, #0
 8016f60:	d003      	beq.n	8016f6a <HAL_UART_IRQHandler+0x66>
 8016f62:	6878      	ldr	r0, [r7, #4]
 8016f64:	f000 fc3c 	bl	80177e0 <UART_Receive_IT>
 8016f68:	e256      	b.n	8017418 <HAL_UART_IRQHandler+0x514>
 8016f6a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8016f6e:	2b00      	cmp	r3, #0
 8016f70:	f000 80de 	beq.w	8017130 <HAL_UART_IRQHandler+0x22c>
 8016f74:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016f78:	f003 0301 	and.w	r3, r3, #1
 8016f7c:	2b00      	cmp	r3, #0
 8016f7e:	d106      	bne.n	8016f8e <HAL_UART_IRQHandler+0x8a>
 8016f80:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016f84:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8016f88:	2b00      	cmp	r3, #0
 8016f8a:	f000 80d1 	beq.w	8017130 <HAL_UART_IRQHandler+0x22c>
 8016f8e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016f92:	f003 0301 	and.w	r3, r3, #1
 8016f96:	2b00      	cmp	r3, #0
 8016f98:	d00b      	beq.n	8016fb2 <HAL_UART_IRQHandler+0xae>
 8016f9a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8016f9e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016fa2:	2b00      	cmp	r3, #0
 8016fa4:	d005      	beq.n	8016fb2 <HAL_UART_IRQHandler+0xae>
 8016fa6:	687b      	ldr	r3, [r7, #4]
 8016fa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016faa:	f043 0201 	orr.w	r2, r3, #1
 8016fae:	687b      	ldr	r3, [r7, #4]
 8016fb0:	641a      	str	r2, [r3, #64]	; 0x40
 8016fb2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016fb6:	f003 0304 	and.w	r3, r3, #4
 8016fba:	2b00      	cmp	r3, #0
 8016fbc:	d00b      	beq.n	8016fd6 <HAL_UART_IRQHandler+0xd2>
 8016fbe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016fc2:	f003 0301 	and.w	r3, r3, #1
 8016fc6:	2b00      	cmp	r3, #0
 8016fc8:	d005      	beq.n	8016fd6 <HAL_UART_IRQHandler+0xd2>
 8016fca:	687b      	ldr	r3, [r7, #4]
 8016fcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016fce:	f043 0202 	orr.w	r2, r3, #2
 8016fd2:	687b      	ldr	r3, [r7, #4]
 8016fd4:	641a      	str	r2, [r3, #64]	; 0x40
 8016fd6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016fda:	f003 0302 	and.w	r3, r3, #2
 8016fde:	2b00      	cmp	r3, #0
 8016fe0:	d00b      	beq.n	8016ffa <HAL_UART_IRQHandler+0xf6>
 8016fe2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8016fe6:	f003 0301 	and.w	r3, r3, #1
 8016fea:	2b00      	cmp	r3, #0
 8016fec:	d005      	beq.n	8016ffa <HAL_UART_IRQHandler+0xf6>
 8016fee:	687b      	ldr	r3, [r7, #4]
 8016ff0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ff2:	f043 0204 	orr.w	r2, r3, #4
 8016ff6:	687b      	ldr	r3, [r7, #4]
 8016ff8:	641a      	str	r2, [r3, #64]	; 0x40
 8016ffa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8016ffe:	f003 0308 	and.w	r3, r3, #8
 8017002:	2b00      	cmp	r3, #0
 8017004:	d011      	beq.n	801702a <HAL_UART_IRQHandler+0x126>
 8017006:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 801700a:	f003 0320 	and.w	r3, r3, #32
 801700e:	2b00      	cmp	r3, #0
 8017010:	d105      	bne.n	801701e <HAL_UART_IRQHandler+0x11a>
 8017012:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8017016:	f003 0301 	and.w	r3, r3, #1
 801701a:	2b00      	cmp	r3, #0
 801701c:	d005      	beq.n	801702a <HAL_UART_IRQHandler+0x126>
 801701e:	687b      	ldr	r3, [r7, #4]
 8017020:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017022:	f043 0208 	orr.w	r2, r3, #8
 8017026:	687b      	ldr	r3, [r7, #4]
 8017028:	641a      	str	r2, [r3, #64]	; 0x40
 801702a:	687b      	ldr	r3, [r7, #4]
 801702c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801702e:	2b00      	cmp	r3, #0
 8017030:	f000 81ed 	beq.w	801740e <HAL_UART_IRQHandler+0x50a>
 8017034:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8017038:	f003 0320 	and.w	r3, r3, #32
 801703c:	2b00      	cmp	r3, #0
 801703e:	d008      	beq.n	8017052 <HAL_UART_IRQHandler+0x14e>
 8017040:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8017044:	f003 0320 	and.w	r3, r3, #32
 8017048:	2b00      	cmp	r3, #0
 801704a:	d002      	beq.n	8017052 <HAL_UART_IRQHandler+0x14e>
 801704c:	6878      	ldr	r0, [r7, #4]
 801704e:	f000 fbc7 	bl	80177e0 <UART_Receive_IT>
 8017052:	687b      	ldr	r3, [r7, #4]
 8017054:	681b      	ldr	r3, [r3, #0]
 8017056:	695b      	ldr	r3, [r3, #20]
 8017058:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801705c:	2b40      	cmp	r3, #64	; 0x40
 801705e:	bf0c      	ite	eq
 8017060:	2301      	moveq	r3, #1
 8017062:	2300      	movne	r3, #0
 8017064:	b2db      	uxtb	r3, r3
 8017066:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 801706a:	687b      	ldr	r3, [r7, #4]
 801706c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801706e:	f003 0308 	and.w	r3, r3, #8
 8017072:	2b00      	cmp	r3, #0
 8017074:	d103      	bne.n	801707e <HAL_UART_IRQHandler+0x17a>
 8017076:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 801707a:	2b00      	cmp	r3, #0
 801707c:	d04f      	beq.n	801711e <HAL_UART_IRQHandler+0x21a>
 801707e:	6878      	ldr	r0, [r7, #4]
 8017080:	f000 facf 	bl	8017622 <UART_EndRxTransfer>
 8017084:	687b      	ldr	r3, [r7, #4]
 8017086:	681b      	ldr	r3, [r3, #0]
 8017088:	695b      	ldr	r3, [r3, #20]
 801708a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801708e:	2b40      	cmp	r3, #64	; 0x40
 8017090:	d141      	bne.n	8017116 <HAL_UART_IRQHandler+0x212>
 8017092:	687b      	ldr	r3, [r7, #4]
 8017094:	681b      	ldr	r3, [r3, #0]
 8017096:	3314      	adds	r3, #20
 8017098:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 801709c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80170a0:	e853 3f00 	ldrex	r3, [r3]
 80170a4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80170a8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80170ac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80170b0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80170b4:	687b      	ldr	r3, [r7, #4]
 80170b6:	681b      	ldr	r3, [r3, #0]
 80170b8:	3314      	adds	r3, #20
 80170ba:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80170be:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80170c2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80170c6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80170ca:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80170ce:	e841 2300 	strex	r3, r2, [r1]
 80170d2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80170d6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80170da:	2b00      	cmp	r3, #0
 80170dc:	d1d9      	bne.n	8017092 <HAL_UART_IRQHandler+0x18e>
 80170de:	687b      	ldr	r3, [r7, #4]
 80170e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170e2:	2b00      	cmp	r3, #0
 80170e4:	d013      	beq.n	801710e <HAL_UART_IRQHandler+0x20a>
 80170e6:	687b      	ldr	r3, [r7, #4]
 80170e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170ea:	4a7d      	ldr	r2, [pc, #500]	; (80172e0 <HAL_UART_IRQHandler+0x3dc>)
 80170ec:	651a      	str	r2, [r3, #80]	; 0x50
 80170ee:	687b      	ldr	r3, [r7, #4]
 80170f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170f2:	4618      	mov	r0, r3
 80170f4:	f7f9 fe40 	bl	8010d78 <HAL_DMA_Abort_IT>
 80170f8:	4603      	mov	r3, r0
 80170fa:	2b00      	cmp	r3, #0
 80170fc:	d016      	beq.n	801712c <HAL_UART_IRQHandler+0x228>
 80170fe:	687b      	ldr	r3, [r7, #4]
 8017100:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017102:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017104:	687a      	ldr	r2, [r7, #4]
 8017106:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8017108:	4610      	mov	r0, r2
 801710a:	4798      	blx	r3
 801710c:	e00e      	b.n	801712c <HAL_UART_IRQHandler+0x228>
 801710e:	6878      	ldr	r0, [r7, #4]
 8017110:	f000 f9a4 	bl	801745c <HAL_UART_ErrorCallback>
 8017114:	e00a      	b.n	801712c <HAL_UART_IRQHandler+0x228>
 8017116:	6878      	ldr	r0, [r7, #4]
 8017118:	f000 f9a0 	bl	801745c <HAL_UART_ErrorCallback>
 801711c:	e006      	b.n	801712c <HAL_UART_IRQHandler+0x228>
 801711e:	6878      	ldr	r0, [r7, #4]
 8017120:	f000 f99c 	bl	801745c <HAL_UART_ErrorCallback>
 8017124:	687b      	ldr	r3, [r7, #4]
 8017126:	2200      	movs	r2, #0
 8017128:	641a      	str	r2, [r3, #64]	; 0x40
 801712a:	e170      	b.n	801740e <HAL_UART_IRQHandler+0x50a>
 801712c:	bf00      	nop
 801712e:	e16e      	b.n	801740e <HAL_UART_IRQHandler+0x50a>
 8017130:	687b      	ldr	r3, [r7, #4]
 8017132:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017134:	2b01      	cmp	r3, #1
 8017136:	f040 814a 	bne.w	80173ce <HAL_UART_IRQHandler+0x4ca>
 801713a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 801713e:	f003 0310 	and.w	r3, r3, #16
 8017142:	2b00      	cmp	r3, #0
 8017144:	f000 8143 	beq.w	80173ce <HAL_UART_IRQHandler+0x4ca>
 8017148:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 801714c:	f003 0310 	and.w	r3, r3, #16
 8017150:	2b00      	cmp	r3, #0
 8017152:	f000 813c 	beq.w	80173ce <HAL_UART_IRQHandler+0x4ca>
 8017156:	2300      	movs	r3, #0
 8017158:	60bb      	str	r3, [r7, #8]
 801715a:	687b      	ldr	r3, [r7, #4]
 801715c:	681b      	ldr	r3, [r3, #0]
 801715e:	681b      	ldr	r3, [r3, #0]
 8017160:	60bb      	str	r3, [r7, #8]
 8017162:	687b      	ldr	r3, [r7, #4]
 8017164:	681b      	ldr	r3, [r3, #0]
 8017166:	685b      	ldr	r3, [r3, #4]
 8017168:	60bb      	str	r3, [r7, #8]
 801716a:	68bb      	ldr	r3, [r7, #8]
 801716c:	687b      	ldr	r3, [r7, #4]
 801716e:	681b      	ldr	r3, [r3, #0]
 8017170:	695b      	ldr	r3, [r3, #20]
 8017172:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8017176:	2b40      	cmp	r3, #64	; 0x40
 8017178:	f040 80b4 	bne.w	80172e4 <HAL_UART_IRQHandler+0x3e0>
 801717c:	687b      	ldr	r3, [r7, #4]
 801717e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017180:	681b      	ldr	r3, [r3, #0]
 8017182:	685b      	ldr	r3, [r3, #4]
 8017184:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8017188:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 801718c:	2b00      	cmp	r3, #0
 801718e:	f000 8140 	beq.w	8017412 <HAL_UART_IRQHandler+0x50e>
 8017192:	687b      	ldr	r3, [r7, #4]
 8017194:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8017196:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 801719a:	429a      	cmp	r2, r3
 801719c:	f080 8139 	bcs.w	8017412 <HAL_UART_IRQHandler+0x50e>
 80171a0:	687b      	ldr	r3, [r7, #4]
 80171a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80171a6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80171a8:	687b      	ldr	r3, [r7, #4]
 80171aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80171ac:	69db      	ldr	r3, [r3, #28]
 80171ae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80171b2:	f000 8088 	beq.w	80172c6 <HAL_UART_IRQHandler+0x3c2>
 80171b6:	687b      	ldr	r3, [r7, #4]
 80171b8:	681b      	ldr	r3, [r3, #0]
 80171ba:	330c      	adds	r3, #12
 80171bc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80171c0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80171c4:	e853 3f00 	ldrex	r3, [r3]
 80171c8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80171cc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80171d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80171d4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80171d8:	687b      	ldr	r3, [r7, #4]
 80171da:	681b      	ldr	r3, [r3, #0]
 80171dc:	330c      	adds	r3, #12
 80171de:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 80171e2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80171e6:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80171ea:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80171ee:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80171f2:	e841 2300 	strex	r3, r2, [r1]
 80171f6:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80171fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80171fe:	2b00      	cmp	r3, #0
 8017200:	d1d9      	bne.n	80171b6 <HAL_UART_IRQHandler+0x2b2>
 8017202:	687b      	ldr	r3, [r7, #4]
 8017204:	681b      	ldr	r3, [r3, #0]
 8017206:	3314      	adds	r3, #20
 8017208:	677b      	str	r3, [r7, #116]	; 0x74
 801720a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801720c:	e853 3f00 	ldrex	r3, [r3]
 8017210:	673b      	str	r3, [r7, #112]	; 0x70
 8017212:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8017214:	f023 0301 	bic.w	r3, r3, #1
 8017218:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 801721c:	687b      	ldr	r3, [r7, #4]
 801721e:	681b      	ldr	r3, [r3, #0]
 8017220:	3314      	adds	r3, #20
 8017222:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8017226:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 801722a:	67fb      	str	r3, [r7, #124]	; 0x7c
 801722c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 801722e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8017232:	e841 2300 	strex	r3, r2, [r1]
 8017236:	67bb      	str	r3, [r7, #120]	; 0x78
 8017238:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 801723a:	2b00      	cmp	r3, #0
 801723c:	d1e1      	bne.n	8017202 <HAL_UART_IRQHandler+0x2fe>
 801723e:	687b      	ldr	r3, [r7, #4]
 8017240:	681b      	ldr	r3, [r3, #0]
 8017242:	3314      	adds	r3, #20
 8017244:	663b      	str	r3, [r7, #96]	; 0x60
 8017246:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8017248:	e853 3f00 	ldrex	r3, [r3]
 801724c:	65fb      	str	r3, [r7, #92]	; 0x5c
 801724e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8017250:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8017254:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8017258:	687b      	ldr	r3, [r7, #4]
 801725a:	681b      	ldr	r3, [r3, #0]
 801725c:	3314      	adds	r3, #20
 801725e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8017262:	66fa      	str	r2, [r7, #108]	; 0x6c
 8017264:	66bb      	str	r3, [r7, #104]	; 0x68
 8017266:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8017268:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 801726a:	e841 2300 	strex	r3, r2, [r1]
 801726e:	667b      	str	r3, [r7, #100]	; 0x64
 8017270:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8017272:	2b00      	cmp	r3, #0
 8017274:	d1e3      	bne.n	801723e <HAL_UART_IRQHandler+0x33a>
 8017276:	687b      	ldr	r3, [r7, #4]
 8017278:	2220      	movs	r2, #32
 801727a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 801727e:	687b      	ldr	r3, [r7, #4]
 8017280:	2200      	movs	r2, #0
 8017282:	631a      	str	r2, [r3, #48]	; 0x30
 8017284:	687b      	ldr	r3, [r7, #4]
 8017286:	681b      	ldr	r3, [r3, #0]
 8017288:	330c      	adds	r3, #12
 801728a:	64fb      	str	r3, [r7, #76]	; 0x4c
 801728c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801728e:	e853 3f00 	ldrex	r3, [r3]
 8017292:	64bb      	str	r3, [r7, #72]	; 0x48
 8017294:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8017296:	f023 0310 	bic.w	r3, r3, #16
 801729a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 801729e:	687b      	ldr	r3, [r7, #4]
 80172a0:	681b      	ldr	r3, [r3, #0]
 80172a2:	330c      	adds	r3, #12
 80172a4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80172a8:	65ba      	str	r2, [r7, #88]	; 0x58
 80172aa:	657b      	str	r3, [r7, #84]	; 0x54
 80172ac:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80172ae:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80172b0:	e841 2300 	strex	r3, r2, [r1]
 80172b4:	653b      	str	r3, [r7, #80]	; 0x50
 80172b6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80172b8:	2b00      	cmp	r3, #0
 80172ba:	d1e3      	bne.n	8017284 <HAL_UART_IRQHandler+0x380>
 80172bc:	687b      	ldr	r3, [r7, #4]
 80172be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172c0:	4618      	mov	r0, r3
 80172c2:	f7f9 fce9 	bl	8010c98 <HAL_DMA_Abort>
 80172c6:	687b      	ldr	r3, [r7, #4]
 80172c8:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80172ca:	687b      	ldr	r3, [r7, #4]
 80172cc:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80172ce:	b29b      	uxth	r3, r3
 80172d0:	1ad3      	subs	r3, r2, r3
 80172d2:	b29b      	uxth	r3, r3
 80172d4:	4619      	mov	r1, r3
 80172d6:	6878      	ldr	r0, [r7, #4]
 80172d8:	f000 f8ca 	bl	8017470 <HAL_UARTEx_RxEventCallback>
 80172dc:	e099      	b.n	8017412 <HAL_UART_IRQHandler+0x50e>
 80172de:	bf00      	nop
 80172e0:	080176e9 	.word	0x080176e9
 80172e4:	687b      	ldr	r3, [r7, #4]
 80172e6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80172e8:	687b      	ldr	r3, [r7, #4]
 80172ea:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80172ec:	b29b      	uxth	r3, r3
 80172ee:	1ad3      	subs	r3, r2, r3
 80172f0:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80172f4:	687b      	ldr	r3, [r7, #4]
 80172f6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80172f8:	b29b      	uxth	r3, r3
 80172fa:	2b00      	cmp	r3, #0
 80172fc:	f000 808b 	beq.w	8017416 <HAL_UART_IRQHandler+0x512>
 8017300:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8017304:	2b00      	cmp	r3, #0
 8017306:	f000 8086 	beq.w	8017416 <HAL_UART_IRQHandler+0x512>
 801730a:	687b      	ldr	r3, [r7, #4]
 801730c:	681b      	ldr	r3, [r3, #0]
 801730e:	330c      	adds	r3, #12
 8017310:	63bb      	str	r3, [r7, #56]	; 0x38
 8017312:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8017314:	e853 3f00 	ldrex	r3, [r3]
 8017318:	637b      	str	r3, [r7, #52]	; 0x34
 801731a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801731c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8017320:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8017324:	687b      	ldr	r3, [r7, #4]
 8017326:	681b      	ldr	r3, [r3, #0]
 8017328:	330c      	adds	r3, #12
 801732a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 801732e:	647a      	str	r2, [r7, #68]	; 0x44
 8017330:	643b      	str	r3, [r7, #64]	; 0x40
 8017332:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8017334:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8017336:	e841 2300 	strex	r3, r2, [r1]
 801733a:	63fb      	str	r3, [r7, #60]	; 0x3c
 801733c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801733e:	2b00      	cmp	r3, #0
 8017340:	d1e3      	bne.n	801730a <HAL_UART_IRQHandler+0x406>
 8017342:	687b      	ldr	r3, [r7, #4]
 8017344:	681b      	ldr	r3, [r3, #0]
 8017346:	3314      	adds	r3, #20
 8017348:	627b      	str	r3, [r7, #36]	; 0x24
 801734a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801734c:	e853 3f00 	ldrex	r3, [r3]
 8017350:	623b      	str	r3, [r7, #32]
 8017352:	6a3b      	ldr	r3, [r7, #32]
 8017354:	f023 0301 	bic.w	r3, r3, #1
 8017358:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 801735c:	687b      	ldr	r3, [r7, #4]
 801735e:	681b      	ldr	r3, [r3, #0]
 8017360:	3314      	adds	r3, #20
 8017362:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8017366:	633a      	str	r2, [r7, #48]	; 0x30
 8017368:	62fb      	str	r3, [r7, #44]	; 0x2c
 801736a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801736c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801736e:	e841 2300 	strex	r3, r2, [r1]
 8017372:	62bb      	str	r3, [r7, #40]	; 0x28
 8017374:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017376:	2b00      	cmp	r3, #0
 8017378:	d1e3      	bne.n	8017342 <HAL_UART_IRQHandler+0x43e>
 801737a:	687b      	ldr	r3, [r7, #4]
 801737c:	2220      	movs	r2, #32
 801737e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8017382:	687b      	ldr	r3, [r7, #4]
 8017384:	2200      	movs	r2, #0
 8017386:	631a      	str	r2, [r3, #48]	; 0x30
 8017388:	687b      	ldr	r3, [r7, #4]
 801738a:	681b      	ldr	r3, [r3, #0]
 801738c:	330c      	adds	r3, #12
 801738e:	613b      	str	r3, [r7, #16]
 8017390:	693b      	ldr	r3, [r7, #16]
 8017392:	e853 3f00 	ldrex	r3, [r3]
 8017396:	60fb      	str	r3, [r7, #12]
 8017398:	68fb      	ldr	r3, [r7, #12]
 801739a:	f023 0310 	bic.w	r3, r3, #16
 801739e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80173a2:	687b      	ldr	r3, [r7, #4]
 80173a4:	681b      	ldr	r3, [r3, #0]
 80173a6:	330c      	adds	r3, #12
 80173a8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 80173ac:	61fa      	str	r2, [r7, #28]
 80173ae:	61bb      	str	r3, [r7, #24]
 80173b0:	69b9      	ldr	r1, [r7, #24]
 80173b2:	69fa      	ldr	r2, [r7, #28]
 80173b4:	e841 2300 	strex	r3, r2, [r1]
 80173b8:	617b      	str	r3, [r7, #20]
 80173ba:	697b      	ldr	r3, [r7, #20]
 80173bc:	2b00      	cmp	r3, #0
 80173be:	d1e3      	bne.n	8017388 <HAL_UART_IRQHandler+0x484>
 80173c0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80173c4:	4619      	mov	r1, r3
 80173c6:	6878      	ldr	r0, [r7, #4]
 80173c8:	f000 f852 	bl	8017470 <HAL_UARTEx_RxEventCallback>
 80173cc:	e023      	b.n	8017416 <HAL_UART_IRQHandler+0x512>
 80173ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80173d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80173d6:	2b00      	cmp	r3, #0
 80173d8:	d009      	beq.n	80173ee <HAL_UART_IRQHandler+0x4ea>
 80173da:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80173de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80173e2:	2b00      	cmp	r3, #0
 80173e4:	d003      	beq.n	80173ee <HAL_UART_IRQHandler+0x4ea>
 80173e6:	6878      	ldr	r0, [r7, #4]
 80173e8:	f000 f992 	bl	8017710 <UART_Transmit_IT>
 80173ec:	e014      	b.n	8017418 <HAL_UART_IRQHandler+0x514>
 80173ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80173f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80173f6:	2b00      	cmp	r3, #0
 80173f8:	d00e      	beq.n	8017418 <HAL_UART_IRQHandler+0x514>
 80173fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80173fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8017402:	2b00      	cmp	r3, #0
 8017404:	d008      	beq.n	8017418 <HAL_UART_IRQHandler+0x514>
 8017406:	6878      	ldr	r0, [r7, #4]
 8017408:	f000 f9d2 	bl	80177b0 <UART_EndTransmit_IT>
 801740c:	e004      	b.n	8017418 <HAL_UART_IRQHandler+0x514>
 801740e:	bf00      	nop
 8017410:	e002      	b.n	8017418 <HAL_UART_IRQHandler+0x514>
 8017412:	bf00      	nop
 8017414:	e000      	b.n	8017418 <HAL_UART_IRQHandler+0x514>
 8017416:	bf00      	nop
 8017418:	37e8      	adds	r7, #232	; 0xe8
 801741a:	46bd      	mov	sp, r7
 801741c:	bd80      	pop	{r7, pc}
 801741e:	bf00      	nop

08017420 <HAL_UART_TxCpltCallback>:
 8017420:	b480      	push	{r7}
 8017422:	b083      	sub	sp, #12
 8017424:	af00      	add	r7, sp, #0
 8017426:	6078      	str	r0, [r7, #4]
 8017428:	bf00      	nop
 801742a:	370c      	adds	r7, #12
 801742c:	46bd      	mov	sp, r7
 801742e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017432:	4770      	bx	lr

08017434 <HAL_UART_TxHalfCpltCallback>:
 8017434:	b480      	push	{r7}
 8017436:	b083      	sub	sp, #12
 8017438:	af00      	add	r7, sp, #0
 801743a:	6078      	str	r0, [r7, #4]
 801743c:	bf00      	nop
 801743e:	370c      	adds	r7, #12
 8017440:	46bd      	mov	sp, r7
 8017442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017446:	4770      	bx	lr

08017448 <HAL_UART_RxCpltCallback>:
 8017448:	b480      	push	{r7}
 801744a:	b083      	sub	sp, #12
 801744c:	af00      	add	r7, sp, #0
 801744e:	6078      	str	r0, [r7, #4]
 8017450:	bf00      	nop
 8017452:	370c      	adds	r7, #12
 8017454:	46bd      	mov	sp, r7
 8017456:	f85d 7b04 	ldr.w	r7, [sp], #4
 801745a:	4770      	bx	lr

0801745c <HAL_UART_ErrorCallback>:
 801745c:	b480      	push	{r7}
 801745e:	b083      	sub	sp, #12
 8017460:	af00      	add	r7, sp, #0
 8017462:	6078      	str	r0, [r7, #4]
 8017464:	bf00      	nop
 8017466:	370c      	adds	r7, #12
 8017468:	46bd      	mov	sp, r7
 801746a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801746e:	4770      	bx	lr

08017470 <HAL_UARTEx_RxEventCallback>:
 8017470:	b480      	push	{r7}
 8017472:	b083      	sub	sp, #12
 8017474:	af00      	add	r7, sp, #0
 8017476:	6078      	str	r0, [r7, #4]
 8017478:	460b      	mov	r3, r1
 801747a:	807b      	strh	r3, [r7, #2]
 801747c:	bf00      	nop
 801747e:	370c      	adds	r7, #12
 8017480:	46bd      	mov	sp, r7
 8017482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017486:	4770      	bx	lr

08017488 <UART_DMATransmitCplt>:
 8017488:	b580      	push	{r7, lr}
 801748a:	b090      	sub	sp, #64	; 0x40
 801748c:	af00      	add	r7, sp, #0
 801748e:	6078      	str	r0, [r7, #4]
 8017490:	687b      	ldr	r3, [r7, #4]
 8017492:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017494:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017496:	687b      	ldr	r3, [r7, #4]
 8017498:	681b      	ldr	r3, [r3, #0]
 801749a:	681b      	ldr	r3, [r3, #0]
 801749c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80174a0:	2b00      	cmp	r3, #0
 80174a2:	d137      	bne.n	8017514 <UART_DMATransmitCplt+0x8c>
 80174a4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80174a6:	2200      	movs	r2, #0
 80174a8:	84da      	strh	r2, [r3, #38]	; 0x26
 80174aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80174ac:	681b      	ldr	r3, [r3, #0]
 80174ae:	3314      	adds	r3, #20
 80174b0:	627b      	str	r3, [r7, #36]	; 0x24
 80174b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80174b4:	e853 3f00 	ldrex	r3, [r3]
 80174b8:	623b      	str	r3, [r7, #32]
 80174ba:	6a3b      	ldr	r3, [r7, #32]
 80174bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80174c0:	63bb      	str	r3, [r7, #56]	; 0x38
 80174c2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80174c4:	681b      	ldr	r3, [r3, #0]
 80174c6:	3314      	adds	r3, #20
 80174c8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80174ca:	633a      	str	r2, [r7, #48]	; 0x30
 80174cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80174ce:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80174d0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80174d2:	e841 2300 	strex	r3, r2, [r1]
 80174d6:	62bb      	str	r3, [r7, #40]	; 0x28
 80174d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80174da:	2b00      	cmp	r3, #0
 80174dc:	d1e5      	bne.n	80174aa <UART_DMATransmitCplt+0x22>
 80174de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80174e0:	681b      	ldr	r3, [r3, #0]
 80174e2:	330c      	adds	r3, #12
 80174e4:	613b      	str	r3, [r7, #16]
 80174e6:	693b      	ldr	r3, [r7, #16]
 80174e8:	e853 3f00 	ldrex	r3, [r3]
 80174ec:	60fb      	str	r3, [r7, #12]
 80174ee:	68fb      	ldr	r3, [r7, #12]
 80174f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80174f4:	637b      	str	r3, [r7, #52]	; 0x34
 80174f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80174f8:	681b      	ldr	r3, [r3, #0]
 80174fa:	330c      	adds	r3, #12
 80174fc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80174fe:	61fa      	str	r2, [r7, #28]
 8017500:	61bb      	str	r3, [r7, #24]
 8017502:	69b9      	ldr	r1, [r7, #24]
 8017504:	69fa      	ldr	r2, [r7, #28]
 8017506:	e841 2300 	strex	r3, r2, [r1]
 801750a:	617b      	str	r3, [r7, #20]
 801750c:	697b      	ldr	r3, [r7, #20]
 801750e:	2b00      	cmp	r3, #0
 8017510:	d1e5      	bne.n	80174de <UART_DMATransmitCplt+0x56>
 8017512:	e002      	b.n	801751a <UART_DMATransmitCplt+0x92>
 8017514:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8017516:	f7ff ff83 	bl	8017420 <HAL_UART_TxCpltCallback>
 801751a:	bf00      	nop
 801751c:	3740      	adds	r7, #64	; 0x40
 801751e:	46bd      	mov	sp, r7
 8017520:	bd80      	pop	{r7, pc}

08017522 <UART_DMATxHalfCplt>:
 8017522:	b580      	push	{r7, lr}
 8017524:	b084      	sub	sp, #16
 8017526:	af00      	add	r7, sp, #0
 8017528:	6078      	str	r0, [r7, #4]
 801752a:	687b      	ldr	r3, [r7, #4]
 801752c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801752e:	60fb      	str	r3, [r7, #12]
 8017530:	68f8      	ldr	r0, [r7, #12]
 8017532:	f7ff ff7f 	bl	8017434 <HAL_UART_TxHalfCpltCallback>
 8017536:	bf00      	nop
 8017538:	3710      	adds	r7, #16
 801753a:	46bd      	mov	sp, r7
 801753c:	bd80      	pop	{r7, pc}

0801753e <UART_DMAError>:
 801753e:	b580      	push	{r7, lr}
 8017540:	b084      	sub	sp, #16
 8017542:	af00      	add	r7, sp, #0
 8017544:	6078      	str	r0, [r7, #4]
 8017546:	2300      	movs	r3, #0
 8017548:	60fb      	str	r3, [r7, #12]
 801754a:	687b      	ldr	r3, [r7, #4]
 801754c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801754e:	60bb      	str	r3, [r7, #8]
 8017550:	68bb      	ldr	r3, [r7, #8]
 8017552:	681b      	ldr	r3, [r3, #0]
 8017554:	695b      	ldr	r3, [r3, #20]
 8017556:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801755a:	2b80      	cmp	r3, #128	; 0x80
 801755c:	bf0c      	ite	eq
 801755e:	2301      	moveq	r3, #1
 8017560:	2300      	movne	r3, #0
 8017562:	b2db      	uxtb	r3, r3
 8017564:	60fb      	str	r3, [r7, #12]
 8017566:	68bb      	ldr	r3, [r7, #8]
 8017568:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801756c:	b2db      	uxtb	r3, r3
 801756e:	2b21      	cmp	r3, #33	; 0x21
 8017570:	d108      	bne.n	8017584 <UART_DMAError+0x46>
 8017572:	68fb      	ldr	r3, [r7, #12]
 8017574:	2b00      	cmp	r3, #0
 8017576:	d005      	beq.n	8017584 <UART_DMAError+0x46>
 8017578:	68bb      	ldr	r3, [r7, #8]
 801757a:	2200      	movs	r2, #0
 801757c:	84da      	strh	r2, [r3, #38]	; 0x26
 801757e:	68b8      	ldr	r0, [r7, #8]
 8017580:	f000 f827 	bl	80175d2 <UART_EndTxTransfer>
 8017584:	68bb      	ldr	r3, [r7, #8]
 8017586:	681b      	ldr	r3, [r3, #0]
 8017588:	695b      	ldr	r3, [r3, #20]
 801758a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801758e:	2b40      	cmp	r3, #64	; 0x40
 8017590:	bf0c      	ite	eq
 8017592:	2301      	moveq	r3, #1
 8017594:	2300      	movne	r3, #0
 8017596:	b2db      	uxtb	r3, r3
 8017598:	60fb      	str	r3, [r7, #12]
 801759a:	68bb      	ldr	r3, [r7, #8]
 801759c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80175a0:	b2db      	uxtb	r3, r3
 80175a2:	2b22      	cmp	r3, #34	; 0x22
 80175a4:	d108      	bne.n	80175b8 <UART_DMAError+0x7a>
 80175a6:	68fb      	ldr	r3, [r7, #12]
 80175a8:	2b00      	cmp	r3, #0
 80175aa:	d005      	beq.n	80175b8 <UART_DMAError+0x7a>
 80175ac:	68bb      	ldr	r3, [r7, #8]
 80175ae:	2200      	movs	r2, #0
 80175b0:	85da      	strh	r2, [r3, #46]	; 0x2e
 80175b2:	68b8      	ldr	r0, [r7, #8]
 80175b4:	f000 f835 	bl	8017622 <UART_EndRxTransfer>
 80175b8:	68bb      	ldr	r3, [r7, #8]
 80175ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80175bc:	f043 0210 	orr.w	r2, r3, #16
 80175c0:	68bb      	ldr	r3, [r7, #8]
 80175c2:	641a      	str	r2, [r3, #64]	; 0x40
 80175c4:	68b8      	ldr	r0, [r7, #8]
 80175c6:	f7ff ff49 	bl	801745c <HAL_UART_ErrorCallback>
 80175ca:	bf00      	nop
 80175cc:	3710      	adds	r7, #16
 80175ce:	46bd      	mov	sp, r7
 80175d0:	bd80      	pop	{r7, pc}

080175d2 <UART_EndTxTransfer>:
 80175d2:	b480      	push	{r7}
 80175d4:	b089      	sub	sp, #36	; 0x24
 80175d6:	af00      	add	r7, sp, #0
 80175d8:	6078      	str	r0, [r7, #4]
 80175da:	687b      	ldr	r3, [r7, #4]
 80175dc:	681b      	ldr	r3, [r3, #0]
 80175de:	330c      	adds	r3, #12
 80175e0:	60fb      	str	r3, [r7, #12]
 80175e2:	68fb      	ldr	r3, [r7, #12]
 80175e4:	e853 3f00 	ldrex	r3, [r3]
 80175e8:	60bb      	str	r3, [r7, #8]
 80175ea:	68bb      	ldr	r3, [r7, #8]
 80175ec:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80175f0:	61fb      	str	r3, [r7, #28]
 80175f2:	687b      	ldr	r3, [r7, #4]
 80175f4:	681b      	ldr	r3, [r3, #0]
 80175f6:	330c      	adds	r3, #12
 80175f8:	69fa      	ldr	r2, [r7, #28]
 80175fa:	61ba      	str	r2, [r7, #24]
 80175fc:	617b      	str	r3, [r7, #20]
 80175fe:	6979      	ldr	r1, [r7, #20]
 8017600:	69ba      	ldr	r2, [r7, #24]
 8017602:	e841 2300 	strex	r3, r2, [r1]
 8017606:	613b      	str	r3, [r7, #16]
 8017608:	693b      	ldr	r3, [r7, #16]
 801760a:	2b00      	cmp	r3, #0
 801760c:	d1e5      	bne.n	80175da <UART_EndTxTransfer+0x8>
 801760e:	687b      	ldr	r3, [r7, #4]
 8017610:	2220      	movs	r2, #32
 8017612:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8017616:	bf00      	nop
 8017618:	3724      	adds	r7, #36	; 0x24
 801761a:	46bd      	mov	sp, r7
 801761c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017620:	4770      	bx	lr

08017622 <UART_EndRxTransfer>:
 8017622:	b480      	push	{r7}
 8017624:	b095      	sub	sp, #84	; 0x54
 8017626:	af00      	add	r7, sp, #0
 8017628:	6078      	str	r0, [r7, #4]
 801762a:	687b      	ldr	r3, [r7, #4]
 801762c:	681b      	ldr	r3, [r3, #0]
 801762e:	330c      	adds	r3, #12
 8017630:	637b      	str	r3, [r7, #52]	; 0x34
 8017632:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8017634:	e853 3f00 	ldrex	r3, [r3]
 8017638:	633b      	str	r3, [r7, #48]	; 0x30
 801763a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801763c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8017640:	64fb      	str	r3, [r7, #76]	; 0x4c
 8017642:	687b      	ldr	r3, [r7, #4]
 8017644:	681b      	ldr	r3, [r3, #0]
 8017646:	330c      	adds	r3, #12
 8017648:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801764a:	643a      	str	r2, [r7, #64]	; 0x40
 801764c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801764e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8017650:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8017652:	e841 2300 	strex	r3, r2, [r1]
 8017656:	63bb      	str	r3, [r7, #56]	; 0x38
 8017658:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801765a:	2b00      	cmp	r3, #0
 801765c:	d1e5      	bne.n	801762a <UART_EndRxTransfer+0x8>
 801765e:	687b      	ldr	r3, [r7, #4]
 8017660:	681b      	ldr	r3, [r3, #0]
 8017662:	3314      	adds	r3, #20
 8017664:	623b      	str	r3, [r7, #32]
 8017666:	6a3b      	ldr	r3, [r7, #32]
 8017668:	e853 3f00 	ldrex	r3, [r3]
 801766c:	61fb      	str	r3, [r7, #28]
 801766e:	69fb      	ldr	r3, [r7, #28]
 8017670:	f023 0301 	bic.w	r3, r3, #1
 8017674:	64bb      	str	r3, [r7, #72]	; 0x48
 8017676:	687b      	ldr	r3, [r7, #4]
 8017678:	681b      	ldr	r3, [r3, #0]
 801767a:	3314      	adds	r3, #20
 801767c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801767e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8017680:	62bb      	str	r3, [r7, #40]	; 0x28
 8017682:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8017684:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8017686:	e841 2300 	strex	r3, r2, [r1]
 801768a:	627b      	str	r3, [r7, #36]	; 0x24
 801768c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801768e:	2b00      	cmp	r3, #0
 8017690:	d1e5      	bne.n	801765e <UART_EndRxTransfer+0x3c>
 8017692:	687b      	ldr	r3, [r7, #4]
 8017694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017696:	2b01      	cmp	r3, #1
 8017698:	d119      	bne.n	80176ce <UART_EndRxTransfer+0xac>
 801769a:	687b      	ldr	r3, [r7, #4]
 801769c:	681b      	ldr	r3, [r3, #0]
 801769e:	330c      	adds	r3, #12
 80176a0:	60fb      	str	r3, [r7, #12]
 80176a2:	68fb      	ldr	r3, [r7, #12]
 80176a4:	e853 3f00 	ldrex	r3, [r3]
 80176a8:	60bb      	str	r3, [r7, #8]
 80176aa:	68bb      	ldr	r3, [r7, #8]
 80176ac:	f023 0310 	bic.w	r3, r3, #16
 80176b0:	647b      	str	r3, [r7, #68]	; 0x44
 80176b2:	687b      	ldr	r3, [r7, #4]
 80176b4:	681b      	ldr	r3, [r3, #0]
 80176b6:	330c      	adds	r3, #12
 80176b8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80176ba:	61ba      	str	r2, [r7, #24]
 80176bc:	617b      	str	r3, [r7, #20]
 80176be:	6979      	ldr	r1, [r7, #20]
 80176c0:	69ba      	ldr	r2, [r7, #24]
 80176c2:	e841 2300 	strex	r3, r2, [r1]
 80176c6:	613b      	str	r3, [r7, #16]
 80176c8:	693b      	ldr	r3, [r7, #16]
 80176ca:	2b00      	cmp	r3, #0
 80176cc:	d1e5      	bne.n	801769a <UART_EndRxTransfer+0x78>
 80176ce:	687b      	ldr	r3, [r7, #4]
 80176d0:	2220      	movs	r2, #32
 80176d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80176d6:	687b      	ldr	r3, [r7, #4]
 80176d8:	2200      	movs	r2, #0
 80176da:	631a      	str	r2, [r3, #48]	; 0x30
 80176dc:	bf00      	nop
 80176de:	3754      	adds	r7, #84	; 0x54
 80176e0:	46bd      	mov	sp, r7
 80176e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80176e6:	4770      	bx	lr

080176e8 <UART_DMAAbortOnError>:
 80176e8:	b580      	push	{r7, lr}
 80176ea:	b084      	sub	sp, #16
 80176ec:	af00      	add	r7, sp, #0
 80176ee:	6078      	str	r0, [r7, #4]
 80176f0:	687b      	ldr	r3, [r7, #4]
 80176f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80176f4:	60fb      	str	r3, [r7, #12]
 80176f6:	68fb      	ldr	r3, [r7, #12]
 80176f8:	2200      	movs	r2, #0
 80176fa:	85da      	strh	r2, [r3, #46]	; 0x2e
 80176fc:	68fb      	ldr	r3, [r7, #12]
 80176fe:	2200      	movs	r2, #0
 8017700:	84da      	strh	r2, [r3, #38]	; 0x26
 8017702:	68f8      	ldr	r0, [r7, #12]
 8017704:	f7ff feaa 	bl	801745c <HAL_UART_ErrorCallback>
 8017708:	bf00      	nop
 801770a:	3710      	adds	r7, #16
 801770c:	46bd      	mov	sp, r7
 801770e:	bd80      	pop	{r7, pc}

08017710 <UART_Transmit_IT>:
 8017710:	b480      	push	{r7}
 8017712:	b085      	sub	sp, #20
 8017714:	af00      	add	r7, sp, #0
 8017716:	6078      	str	r0, [r7, #4]
 8017718:	687b      	ldr	r3, [r7, #4]
 801771a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801771e:	b2db      	uxtb	r3, r3
 8017720:	2b21      	cmp	r3, #33	; 0x21
 8017722:	d13e      	bne.n	80177a2 <UART_Transmit_IT+0x92>
 8017724:	687b      	ldr	r3, [r7, #4]
 8017726:	689b      	ldr	r3, [r3, #8]
 8017728:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801772c:	d114      	bne.n	8017758 <UART_Transmit_IT+0x48>
 801772e:	687b      	ldr	r3, [r7, #4]
 8017730:	691b      	ldr	r3, [r3, #16]
 8017732:	2b00      	cmp	r3, #0
 8017734:	d110      	bne.n	8017758 <UART_Transmit_IT+0x48>
 8017736:	687b      	ldr	r3, [r7, #4]
 8017738:	6a1b      	ldr	r3, [r3, #32]
 801773a:	60fb      	str	r3, [r7, #12]
 801773c:	68fb      	ldr	r3, [r7, #12]
 801773e:	881b      	ldrh	r3, [r3, #0]
 8017740:	461a      	mov	r2, r3
 8017742:	687b      	ldr	r3, [r7, #4]
 8017744:	681b      	ldr	r3, [r3, #0]
 8017746:	f3c2 0208 	ubfx	r2, r2, #0, #9
 801774a:	605a      	str	r2, [r3, #4]
 801774c:	687b      	ldr	r3, [r7, #4]
 801774e:	6a1b      	ldr	r3, [r3, #32]
 8017750:	1c9a      	adds	r2, r3, #2
 8017752:	687b      	ldr	r3, [r7, #4]
 8017754:	621a      	str	r2, [r3, #32]
 8017756:	e008      	b.n	801776a <UART_Transmit_IT+0x5a>
 8017758:	687b      	ldr	r3, [r7, #4]
 801775a:	6a1b      	ldr	r3, [r3, #32]
 801775c:	1c59      	adds	r1, r3, #1
 801775e:	687a      	ldr	r2, [r7, #4]
 8017760:	6211      	str	r1, [r2, #32]
 8017762:	781a      	ldrb	r2, [r3, #0]
 8017764:	687b      	ldr	r3, [r7, #4]
 8017766:	681b      	ldr	r3, [r3, #0]
 8017768:	605a      	str	r2, [r3, #4]
 801776a:	687b      	ldr	r3, [r7, #4]
 801776c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801776e:	b29b      	uxth	r3, r3
 8017770:	3b01      	subs	r3, #1
 8017772:	b29b      	uxth	r3, r3
 8017774:	687a      	ldr	r2, [r7, #4]
 8017776:	4619      	mov	r1, r3
 8017778:	84d1      	strh	r1, [r2, #38]	; 0x26
 801777a:	2b00      	cmp	r3, #0
 801777c:	d10f      	bne.n	801779e <UART_Transmit_IT+0x8e>
 801777e:	687b      	ldr	r3, [r7, #4]
 8017780:	681b      	ldr	r3, [r3, #0]
 8017782:	68da      	ldr	r2, [r3, #12]
 8017784:	687b      	ldr	r3, [r7, #4]
 8017786:	681b      	ldr	r3, [r3, #0]
 8017788:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801778c:	60da      	str	r2, [r3, #12]
 801778e:	687b      	ldr	r3, [r7, #4]
 8017790:	681b      	ldr	r3, [r3, #0]
 8017792:	68da      	ldr	r2, [r3, #12]
 8017794:	687b      	ldr	r3, [r7, #4]
 8017796:	681b      	ldr	r3, [r3, #0]
 8017798:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801779c:	60da      	str	r2, [r3, #12]
 801779e:	2300      	movs	r3, #0
 80177a0:	e000      	b.n	80177a4 <UART_Transmit_IT+0x94>
 80177a2:	2302      	movs	r3, #2
 80177a4:	4618      	mov	r0, r3
 80177a6:	3714      	adds	r7, #20
 80177a8:	46bd      	mov	sp, r7
 80177aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80177ae:	4770      	bx	lr

080177b0 <UART_EndTransmit_IT>:
 80177b0:	b580      	push	{r7, lr}
 80177b2:	b082      	sub	sp, #8
 80177b4:	af00      	add	r7, sp, #0
 80177b6:	6078      	str	r0, [r7, #4]
 80177b8:	687b      	ldr	r3, [r7, #4]
 80177ba:	681b      	ldr	r3, [r3, #0]
 80177bc:	68da      	ldr	r2, [r3, #12]
 80177be:	687b      	ldr	r3, [r7, #4]
 80177c0:	681b      	ldr	r3, [r3, #0]
 80177c2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80177c6:	60da      	str	r2, [r3, #12]
 80177c8:	687b      	ldr	r3, [r7, #4]
 80177ca:	2220      	movs	r2, #32
 80177cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80177d0:	6878      	ldr	r0, [r7, #4]
 80177d2:	f7ff fe25 	bl	8017420 <HAL_UART_TxCpltCallback>
 80177d6:	2300      	movs	r3, #0
 80177d8:	4618      	mov	r0, r3
 80177da:	3708      	adds	r7, #8
 80177dc:	46bd      	mov	sp, r7
 80177de:	bd80      	pop	{r7, pc}

080177e0 <UART_Receive_IT>:
 80177e0:	b580      	push	{r7, lr}
 80177e2:	b08c      	sub	sp, #48	; 0x30
 80177e4:	af00      	add	r7, sp, #0
 80177e6:	6078      	str	r0, [r7, #4]
 80177e8:	687b      	ldr	r3, [r7, #4]
 80177ea:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80177ee:	b2db      	uxtb	r3, r3
 80177f0:	2b22      	cmp	r3, #34	; 0x22
 80177f2:	f040 80ab 	bne.w	801794c <UART_Receive_IT+0x16c>
 80177f6:	687b      	ldr	r3, [r7, #4]
 80177f8:	689b      	ldr	r3, [r3, #8]
 80177fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80177fe:	d117      	bne.n	8017830 <UART_Receive_IT+0x50>
 8017800:	687b      	ldr	r3, [r7, #4]
 8017802:	691b      	ldr	r3, [r3, #16]
 8017804:	2b00      	cmp	r3, #0
 8017806:	d113      	bne.n	8017830 <UART_Receive_IT+0x50>
 8017808:	2300      	movs	r3, #0
 801780a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801780c:	687b      	ldr	r3, [r7, #4]
 801780e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017810:	62bb      	str	r3, [r7, #40]	; 0x28
 8017812:	687b      	ldr	r3, [r7, #4]
 8017814:	681b      	ldr	r3, [r3, #0]
 8017816:	685b      	ldr	r3, [r3, #4]
 8017818:	b29b      	uxth	r3, r3
 801781a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 801781e:	b29a      	uxth	r2, r3
 8017820:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017822:	801a      	strh	r2, [r3, #0]
 8017824:	687b      	ldr	r3, [r7, #4]
 8017826:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017828:	1c9a      	adds	r2, r3, #2
 801782a:	687b      	ldr	r3, [r7, #4]
 801782c:	629a      	str	r2, [r3, #40]	; 0x28
 801782e:	e026      	b.n	801787e <UART_Receive_IT+0x9e>
 8017830:	687b      	ldr	r3, [r7, #4]
 8017832:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017834:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017836:	2300      	movs	r3, #0
 8017838:	62bb      	str	r3, [r7, #40]	; 0x28
 801783a:	687b      	ldr	r3, [r7, #4]
 801783c:	689b      	ldr	r3, [r3, #8]
 801783e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8017842:	d007      	beq.n	8017854 <UART_Receive_IT+0x74>
 8017844:	687b      	ldr	r3, [r7, #4]
 8017846:	689b      	ldr	r3, [r3, #8]
 8017848:	2b00      	cmp	r3, #0
 801784a:	d10a      	bne.n	8017862 <UART_Receive_IT+0x82>
 801784c:	687b      	ldr	r3, [r7, #4]
 801784e:	691b      	ldr	r3, [r3, #16]
 8017850:	2b00      	cmp	r3, #0
 8017852:	d106      	bne.n	8017862 <UART_Receive_IT+0x82>
 8017854:	687b      	ldr	r3, [r7, #4]
 8017856:	681b      	ldr	r3, [r3, #0]
 8017858:	685b      	ldr	r3, [r3, #4]
 801785a:	b2da      	uxtb	r2, r3
 801785c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801785e:	701a      	strb	r2, [r3, #0]
 8017860:	e008      	b.n	8017874 <UART_Receive_IT+0x94>
 8017862:	687b      	ldr	r3, [r7, #4]
 8017864:	681b      	ldr	r3, [r3, #0]
 8017866:	685b      	ldr	r3, [r3, #4]
 8017868:	b2db      	uxtb	r3, r3
 801786a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801786e:	b2da      	uxtb	r2, r3
 8017870:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017872:	701a      	strb	r2, [r3, #0]
 8017874:	687b      	ldr	r3, [r7, #4]
 8017876:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017878:	1c5a      	adds	r2, r3, #1
 801787a:	687b      	ldr	r3, [r7, #4]
 801787c:	629a      	str	r2, [r3, #40]	; 0x28
 801787e:	687b      	ldr	r3, [r7, #4]
 8017880:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8017882:	b29b      	uxth	r3, r3
 8017884:	3b01      	subs	r3, #1
 8017886:	b29b      	uxth	r3, r3
 8017888:	687a      	ldr	r2, [r7, #4]
 801788a:	4619      	mov	r1, r3
 801788c:	85d1      	strh	r1, [r2, #46]	; 0x2e
 801788e:	2b00      	cmp	r3, #0
 8017890:	d15a      	bne.n	8017948 <UART_Receive_IT+0x168>
 8017892:	687b      	ldr	r3, [r7, #4]
 8017894:	681b      	ldr	r3, [r3, #0]
 8017896:	68da      	ldr	r2, [r3, #12]
 8017898:	687b      	ldr	r3, [r7, #4]
 801789a:	681b      	ldr	r3, [r3, #0]
 801789c:	f022 0220 	bic.w	r2, r2, #32
 80178a0:	60da      	str	r2, [r3, #12]
 80178a2:	687b      	ldr	r3, [r7, #4]
 80178a4:	681b      	ldr	r3, [r3, #0]
 80178a6:	68da      	ldr	r2, [r3, #12]
 80178a8:	687b      	ldr	r3, [r7, #4]
 80178aa:	681b      	ldr	r3, [r3, #0]
 80178ac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80178b0:	60da      	str	r2, [r3, #12]
 80178b2:	687b      	ldr	r3, [r7, #4]
 80178b4:	681b      	ldr	r3, [r3, #0]
 80178b6:	695a      	ldr	r2, [r3, #20]
 80178b8:	687b      	ldr	r3, [r7, #4]
 80178ba:	681b      	ldr	r3, [r3, #0]
 80178bc:	f022 0201 	bic.w	r2, r2, #1
 80178c0:	615a      	str	r2, [r3, #20]
 80178c2:	687b      	ldr	r3, [r7, #4]
 80178c4:	2220      	movs	r2, #32
 80178c6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80178ca:	687b      	ldr	r3, [r7, #4]
 80178cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80178ce:	2b01      	cmp	r3, #1
 80178d0:	d135      	bne.n	801793e <UART_Receive_IT+0x15e>
 80178d2:	687b      	ldr	r3, [r7, #4]
 80178d4:	2200      	movs	r2, #0
 80178d6:	631a      	str	r2, [r3, #48]	; 0x30
 80178d8:	687b      	ldr	r3, [r7, #4]
 80178da:	681b      	ldr	r3, [r3, #0]
 80178dc:	330c      	adds	r3, #12
 80178de:	617b      	str	r3, [r7, #20]
 80178e0:	697b      	ldr	r3, [r7, #20]
 80178e2:	e853 3f00 	ldrex	r3, [r3]
 80178e6:	613b      	str	r3, [r7, #16]
 80178e8:	693b      	ldr	r3, [r7, #16]
 80178ea:	f023 0310 	bic.w	r3, r3, #16
 80178ee:	627b      	str	r3, [r7, #36]	; 0x24
 80178f0:	687b      	ldr	r3, [r7, #4]
 80178f2:	681b      	ldr	r3, [r3, #0]
 80178f4:	330c      	adds	r3, #12
 80178f6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80178f8:	623a      	str	r2, [r7, #32]
 80178fa:	61fb      	str	r3, [r7, #28]
 80178fc:	69f9      	ldr	r1, [r7, #28]
 80178fe:	6a3a      	ldr	r2, [r7, #32]
 8017900:	e841 2300 	strex	r3, r2, [r1]
 8017904:	61bb      	str	r3, [r7, #24]
 8017906:	69bb      	ldr	r3, [r7, #24]
 8017908:	2b00      	cmp	r3, #0
 801790a:	d1e5      	bne.n	80178d8 <UART_Receive_IT+0xf8>
 801790c:	687b      	ldr	r3, [r7, #4]
 801790e:	681b      	ldr	r3, [r3, #0]
 8017910:	681b      	ldr	r3, [r3, #0]
 8017912:	f003 0310 	and.w	r3, r3, #16
 8017916:	2b10      	cmp	r3, #16
 8017918:	d10a      	bne.n	8017930 <UART_Receive_IT+0x150>
 801791a:	2300      	movs	r3, #0
 801791c:	60fb      	str	r3, [r7, #12]
 801791e:	687b      	ldr	r3, [r7, #4]
 8017920:	681b      	ldr	r3, [r3, #0]
 8017922:	681b      	ldr	r3, [r3, #0]
 8017924:	60fb      	str	r3, [r7, #12]
 8017926:	687b      	ldr	r3, [r7, #4]
 8017928:	681b      	ldr	r3, [r3, #0]
 801792a:	685b      	ldr	r3, [r3, #4]
 801792c:	60fb      	str	r3, [r7, #12]
 801792e:	68fb      	ldr	r3, [r7, #12]
 8017930:	687b      	ldr	r3, [r7, #4]
 8017932:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8017934:	4619      	mov	r1, r3
 8017936:	6878      	ldr	r0, [r7, #4]
 8017938:	f7ff fd9a 	bl	8017470 <HAL_UARTEx_RxEventCallback>
 801793c:	e002      	b.n	8017944 <UART_Receive_IT+0x164>
 801793e:	6878      	ldr	r0, [r7, #4]
 8017940:	f7ff fd82 	bl	8017448 <HAL_UART_RxCpltCallback>
 8017944:	2300      	movs	r3, #0
 8017946:	e002      	b.n	801794e <UART_Receive_IT+0x16e>
 8017948:	2300      	movs	r3, #0
 801794a:	e000      	b.n	801794e <UART_Receive_IT+0x16e>
 801794c:	2302      	movs	r3, #2
 801794e:	4618      	mov	r0, r3
 8017950:	3730      	adds	r7, #48	; 0x30
 8017952:	46bd      	mov	sp, r7
 8017954:	bd80      	pop	{r7, pc}
	...

08017958 <UART_SetConfig>:
 8017958:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801795c:	b0c0      	sub	sp, #256	; 0x100
 801795e:	af00      	add	r7, sp, #0
 8017960:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8017964:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017968:	681b      	ldr	r3, [r3, #0]
 801796a:	691b      	ldr	r3, [r3, #16]
 801796c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8017970:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017974:	68d9      	ldr	r1, [r3, #12]
 8017976:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801797a:	681a      	ldr	r2, [r3, #0]
 801797c:	ea40 0301 	orr.w	r3, r0, r1
 8017980:	6113      	str	r3, [r2, #16]
 8017982:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017986:	689a      	ldr	r2, [r3, #8]
 8017988:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801798c:	691b      	ldr	r3, [r3, #16]
 801798e:	431a      	orrs	r2, r3
 8017990:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017994:	695b      	ldr	r3, [r3, #20]
 8017996:	431a      	orrs	r2, r3
 8017998:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 801799c:	69db      	ldr	r3, [r3, #28]
 801799e:	4313      	orrs	r3, r2
 80179a0:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80179a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179a8:	681b      	ldr	r3, [r3, #0]
 80179aa:	68db      	ldr	r3, [r3, #12]
 80179ac:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80179b0:	f021 010c 	bic.w	r1, r1, #12
 80179b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179b8:	681a      	ldr	r2, [r3, #0]
 80179ba:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80179be:	430b      	orrs	r3, r1
 80179c0:	60d3      	str	r3, [r2, #12]
 80179c2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179c6:	681b      	ldr	r3, [r3, #0]
 80179c8:	695b      	ldr	r3, [r3, #20]
 80179ca:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 80179ce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179d2:	6999      	ldr	r1, [r3, #24]
 80179d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179d8:	681a      	ldr	r2, [r3, #0]
 80179da:	ea40 0301 	orr.w	r3, r0, r1
 80179de:	6153      	str	r3, [r2, #20]
 80179e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179e4:	681a      	ldr	r2, [r3, #0]
 80179e6:	4b8f      	ldr	r3, [pc, #572]	; (8017c24 <UART_SetConfig+0x2cc>)
 80179e8:	429a      	cmp	r2, r3
 80179ea:	d005      	beq.n	80179f8 <UART_SetConfig+0xa0>
 80179ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80179f0:	681a      	ldr	r2, [r3, #0]
 80179f2:	4b8d      	ldr	r3, [pc, #564]	; (8017c28 <UART_SetConfig+0x2d0>)
 80179f4:	429a      	cmp	r2, r3
 80179f6:	d104      	bne.n	8017a02 <UART_SetConfig+0xaa>
 80179f8:	f7fd fa78 	bl	8014eec <HAL_RCC_GetPCLK2Freq>
 80179fc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8017a00:	e003      	b.n	8017a0a <UART_SetConfig+0xb2>
 8017a02:	f7fd fa5f 	bl	8014ec4 <HAL_RCC_GetPCLK1Freq>
 8017a06:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8017a0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017a0e:	69db      	ldr	r3, [r3, #28]
 8017a10:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8017a14:	f040 810c 	bne.w	8017c30 <UART_SetConfig+0x2d8>
 8017a18:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017a1c:	2200      	movs	r2, #0
 8017a1e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8017a22:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8017a26:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8017a2a:	4622      	mov	r2, r4
 8017a2c:	462b      	mov	r3, r5
 8017a2e:	1891      	adds	r1, r2, r2
 8017a30:	65b9      	str	r1, [r7, #88]	; 0x58
 8017a32:	415b      	adcs	r3, r3
 8017a34:	65fb      	str	r3, [r7, #92]	; 0x5c
 8017a36:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8017a3a:	4621      	mov	r1, r4
 8017a3c:	eb12 0801 	adds.w	r8, r2, r1
 8017a40:	4629      	mov	r1, r5
 8017a42:	eb43 0901 	adc.w	r9, r3, r1
 8017a46:	f04f 0200 	mov.w	r2, #0
 8017a4a:	f04f 0300 	mov.w	r3, #0
 8017a4e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8017a52:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8017a56:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8017a5a:	4690      	mov	r8, r2
 8017a5c:	4699      	mov	r9, r3
 8017a5e:	4623      	mov	r3, r4
 8017a60:	eb18 0303 	adds.w	r3, r8, r3
 8017a64:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8017a68:	462b      	mov	r3, r5
 8017a6a:	eb49 0303 	adc.w	r3, r9, r3
 8017a6e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8017a72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017a76:	685b      	ldr	r3, [r3, #4]
 8017a78:	2200      	movs	r2, #0
 8017a7a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8017a7e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8017a82:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8017a86:	460b      	mov	r3, r1
 8017a88:	18db      	adds	r3, r3, r3
 8017a8a:	653b      	str	r3, [r7, #80]	; 0x50
 8017a8c:	4613      	mov	r3, r2
 8017a8e:	eb42 0303 	adc.w	r3, r2, r3
 8017a92:	657b      	str	r3, [r7, #84]	; 0x54
 8017a94:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8017a98:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8017a9c:	f7e9 f8f4 	bl	8000c88 <__aeabi_uldivmod>
 8017aa0:	4602      	mov	r2, r0
 8017aa2:	460b      	mov	r3, r1
 8017aa4:	4b61      	ldr	r3, [pc, #388]	; (8017c2c <UART_SetConfig+0x2d4>)
 8017aa6:	fba3 2302 	umull	r2, r3, r3, r2
 8017aaa:	095b      	lsrs	r3, r3, #5
 8017aac:	011c      	lsls	r4, r3, #4
 8017aae:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017ab2:	2200      	movs	r2, #0
 8017ab4:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8017ab8:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8017abc:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8017ac0:	4642      	mov	r2, r8
 8017ac2:	464b      	mov	r3, r9
 8017ac4:	1891      	adds	r1, r2, r2
 8017ac6:	64b9      	str	r1, [r7, #72]	; 0x48
 8017ac8:	415b      	adcs	r3, r3
 8017aca:	64fb      	str	r3, [r7, #76]	; 0x4c
 8017acc:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8017ad0:	4641      	mov	r1, r8
 8017ad2:	eb12 0a01 	adds.w	sl, r2, r1
 8017ad6:	4649      	mov	r1, r9
 8017ad8:	eb43 0b01 	adc.w	fp, r3, r1
 8017adc:	f04f 0200 	mov.w	r2, #0
 8017ae0:	f04f 0300 	mov.w	r3, #0
 8017ae4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8017ae8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8017aec:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8017af0:	4692      	mov	sl, r2
 8017af2:	469b      	mov	fp, r3
 8017af4:	4643      	mov	r3, r8
 8017af6:	eb1a 0303 	adds.w	r3, sl, r3
 8017afa:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8017afe:	464b      	mov	r3, r9
 8017b00:	eb4b 0303 	adc.w	r3, fp, r3
 8017b04:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8017b08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017b0c:	685b      	ldr	r3, [r3, #4]
 8017b0e:	2200      	movs	r2, #0
 8017b10:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8017b14:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8017b18:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8017b1c:	460b      	mov	r3, r1
 8017b1e:	18db      	adds	r3, r3, r3
 8017b20:	643b      	str	r3, [r7, #64]	; 0x40
 8017b22:	4613      	mov	r3, r2
 8017b24:	eb42 0303 	adc.w	r3, r2, r3
 8017b28:	647b      	str	r3, [r7, #68]	; 0x44
 8017b2a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8017b2e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8017b32:	f7e9 f8a9 	bl	8000c88 <__aeabi_uldivmod>
 8017b36:	4602      	mov	r2, r0
 8017b38:	460b      	mov	r3, r1
 8017b3a:	4611      	mov	r1, r2
 8017b3c:	4b3b      	ldr	r3, [pc, #236]	; (8017c2c <UART_SetConfig+0x2d4>)
 8017b3e:	fba3 2301 	umull	r2, r3, r3, r1
 8017b42:	095b      	lsrs	r3, r3, #5
 8017b44:	2264      	movs	r2, #100	; 0x64
 8017b46:	fb02 f303 	mul.w	r3, r2, r3
 8017b4a:	1acb      	subs	r3, r1, r3
 8017b4c:	00db      	lsls	r3, r3, #3
 8017b4e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8017b52:	4b36      	ldr	r3, [pc, #216]	; (8017c2c <UART_SetConfig+0x2d4>)
 8017b54:	fba3 2302 	umull	r2, r3, r3, r2
 8017b58:	095b      	lsrs	r3, r3, #5
 8017b5a:	005b      	lsls	r3, r3, #1
 8017b5c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8017b60:	441c      	add	r4, r3
 8017b62:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017b66:	2200      	movs	r2, #0
 8017b68:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8017b6c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8017b70:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8017b74:	4642      	mov	r2, r8
 8017b76:	464b      	mov	r3, r9
 8017b78:	1891      	adds	r1, r2, r2
 8017b7a:	63b9      	str	r1, [r7, #56]	; 0x38
 8017b7c:	415b      	adcs	r3, r3
 8017b7e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8017b80:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8017b84:	4641      	mov	r1, r8
 8017b86:	1851      	adds	r1, r2, r1
 8017b88:	6339      	str	r1, [r7, #48]	; 0x30
 8017b8a:	4649      	mov	r1, r9
 8017b8c:	414b      	adcs	r3, r1
 8017b8e:	637b      	str	r3, [r7, #52]	; 0x34
 8017b90:	f04f 0200 	mov.w	r2, #0
 8017b94:	f04f 0300 	mov.w	r3, #0
 8017b98:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8017b9c:	4659      	mov	r1, fp
 8017b9e:	00cb      	lsls	r3, r1, #3
 8017ba0:	4651      	mov	r1, sl
 8017ba2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017ba6:	4651      	mov	r1, sl
 8017ba8:	00ca      	lsls	r2, r1, #3
 8017baa:	4610      	mov	r0, r2
 8017bac:	4619      	mov	r1, r3
 8017bae:	4603      	mov	r3, r0
 8017bb0:	4642      	mov	r2, r8
 8017bb2:	189b      	adds	r3, r3, r2
 8017bb4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8017bb8:	464b      	mov	r3, r9
 8017bba:	460a      	mov	r2, r1
 8017bbc:	eb42 0303 	adc.w	r3, r2, r3
 8017bc0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8017bc4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017bc8:	685b      	ldr	r3, [r3, #4]
 8017bca:	2200      	movs	r2, #0
 8017bcc:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8017bd0:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8017bd4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8017bd8:	460b      	mov	r3, r1
 8017bda:	18db      	adds	r3, r3, r3
 8017bdc:	62bb      	str	r3, [r7, #40]	; 0x28
 8017bde:	4613      	mov	r3, r2
 8017be0:	eb42 0303 	adc.w	r3, r2, r3
 8017be4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017be6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8017bea:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8017bee:	f7e9 f84b 	bl	8000c88 <__aeabi_uldivmod>
 8017bf2:	4602      	mov	r2, r0
 8017bf4:	460b      	mov	r3, r1
 8017bf6:	4b0d      	ldr	r3, [pc, #52]	; (8017c2c <UART_SetConfig+0x2d4>)
 8017bf8:	fba3 1302 	umull	r1, r3, r3, r2
 8017bfc:	095b      	lsrs	r3, r3, #5
 8017bfe:	2164      	movs	r1, #100	; 0x64
 8017c00:	fb01 f303 	mul.w	r3, r1, r3
 8017c04:	1ad3      	subs	r3, r2, r3
 8017c06:	00db      	lsls	r3, r3, #3
 8017c08:	3332      	adds	r3, #50	; 0x32
 8017c0a:	4a08      	ldr	r2, [pc, #32]	; (8017c2c <UART_SetConfig+0x2d4>)
 8017c0c:	fba2 2303 	umull	r2, r3, r2, r3
 8017c10:	095b      	lsrs	r3, r3, #5
 8017c12:	f003 0207 	and.w	r2, r3, #7
 8017c16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017c1a:	681b      	ldr	r3, [r3, #0]
 8017c1c:	4422      	add	r2, r4
 8017c1e:	609a      	str	r2, [r3, #8]
 8017c20:	e105      	b.n	8017e2e <UART_SetConfig+0x4d6>
 8017c22:	bf00      	nop
 8017c24:	40011000 	.word	0x40011000
 8017c28:	40011400 	.word	0x40011400
 8017c2c:	51eb851f 	.word	0x51eb851f
 8017c30:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017c34:	2200      	movs	r2, #0
 8017c36:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8017c3a:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8017c3e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8017c42:	4642      	mov	r2, r8
 8017c44:	464b      	mov	r3, r9
 8017c46:	1891      	adds	r1, r2, r2
 8017c48:	6239      	str	r1, [r7, #32]
 8017c4a:	415b      	adcs	r3, r3
 8017c4c:	627b      	str	r3, [r7, #36]	; 0x24
 8017c4e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8017c52:	4641      	mov	r1, r8
 8017c54:	1854      	adds	r4, r2, r1
 8017c56:	4649      	mov	r1, r9
 8017c58:	eb43 0501 	adc.w	r5, r3, r1
 8017c5c:	f04f 0200 	mov.w	r2, #0
 8017c60:	f04f 0300 	mov.w	r3, #0
 8017c64:	00eb      	lsls	r3, r5, #3
 8017c66:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8017c6a:	00e2      	lsls	r2, r4, #3
 8017c6c:	4614      	mov	r4, r2
 8017c6e:	461d      	mov	r5, r3
 8017c70:	4643      	mov	r3, r8
 8017c72:	18e3      	adds	r3, r4, r3
 8017c74:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8017c78:	464b      	mov	r3, r9
 8017c7a:	eb45 0303 	adc.w	r3, r5, r3
 8017c7e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8017c82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017c86:	685b      	ldr	r3, [r3, #4]
 8017c88:	2200      	movs	r2, #0
 8017c8a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8017c8e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8017c92:	f04f 0200 	mov.w	r2, #0
 8017c96:	f04f 0300 	mov.w	r3, #0
 8017c9a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8017c9e:	4629      	mov	r1, r5
 8017ca0:	008b      	lsls	r3, r1, #2
 8017ca2:	4621      	mov	r1, r4
 8017ca4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017ca8:	4621      	mov	r1, r4
 8017caa:	008a      	lsls	r2, r1, #2
 8017cac:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8017cb0:	f7e8 ffea 	bl	8000c88 <__aeabi_uldivmod>
 8017cb4:	4602      	mov	r2, r0
 8017cb6:	460b      	mov	r3, r1
 8017cb8:	4b60      	ldr	r3, [pc, #384]	; (8017e3c <UART_SetConfig+0x4e4>)
 8017cba:	fba3 2302 	umull	r2, r3, r3, r2
 8017cbe:	095b      	lsrs	r3, r3, #5
 8017cc0:	011c      	lsls	r4, r3, #4
 8017cc2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017cc6:	2200      	movs	r2, #0
 8017cc8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8017ccc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8017cd0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8017cd4:	4642      	mov	r2, r8
 8017cd6:	464b      	mov	r3, r9
 8017cd8:	1891      	adds	r1, r2, r2
 8017cda:	61b9      	str	r1, [r7, #24]
 8017cdc:	415b      	adcs	r3, r3
 8017cde:	61fb      	str	r3, [r7, #28]
 8017ce0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8017ce4:	4641      	mov	r1, r8
 8017ce6:	1851      	adds	r1, r2, r1
 8017ce8:	6139      	str	r1, [r7, #16]
 8017cea:	4649      	mov	r1, r9
 8017cec:	414b      	adcs	r3, r1
 8017cee:	617b      	str	r3, [r7, #20]
 8017cf0:	f04f 0200 	mov.w	r2, #0
 8017cf4:	f04f 0300 	mov.w	r3, #0
 8017cf8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8017cfc:	4659      	mov	r1, fp
 8017cfe:	00cb      	lsls	r3, r1, #3
 8017d00:	4651      	mov	r1, sl
 8017d02:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017d06:	4651      	mov	r1, sl
 8017d08:	00ca      	lsls	r2, r1, #3
 8017d0a:	4610      	mov	r0, r2
 8017d0c:	4619      	mov	r1, r3
 8017d0e:	4603      	mov	r3, r0
 8017d10:	4642      	mov	r2, r8
 8017d12:	189b      	adds	r3, r3, r2
 8017d14:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8017d18:	464b      	mov	r3, r9
 8017d1a:	460a      	mov	r2, r1
 8017d1c:	eb42 0303 	adc.w	r3, r2, r3
 8017d20:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8017d24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017d28:	685b      	ldr	r3, [r3, #4]
 8017d2a:	2200      	movs	r2, #0
 8017d2c:	67bb      	str	r3, [r7, #120]	; 0x78
 8017d2e:	67fa      	str	r2, [r7, #124]	; 0x7c
 8017d30:	f04f 0200 	mov.w	r2, #0
 8017d34:	f04f 0300 	mov.w	r3, #0
 8017d38:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8017d3c:	4649      	mov	r1, r9
 8017d3e:	008b      	lsls	r3, r1, #2
 8017d40:	4641      	mov	r1, r8
 8017d42:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017d46:	4641      	mov	r1, r8
 8017d48:	008a      	lsls	r2, r1, #2
 8017d4a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8017d4e:	f7e8 ff9b 	bl	8000c88 <__aeabi_uldivmod>
 8017d52:	4602      	mov	r2, r0
 8017d54:	460b      	mov	r3, r1
 8017d56:	4b39      	ldr	r3, [pc, #228]	; (8017e3c <UART_SetConfig+0x4e4>)
 8017d58:	fba3 1302 	umull	r1, r3, r3, r2
 8017d5c:	095b      	lsrs	r3, r3, #5
 8017d5e:	2164      	movs	r1, #100	; 0x64
 8017d60:	fb01 f303 	mul.w	r3, r1, r3
 8017d64:	1ad3      	subs	r3, r2, r3
 8017d66:	011b      	lsls	r3, r3, #4
 8017d68:	3332      	adds	r3, #50	; 0x32
 8017d6a:	4a34      	ldr	r2, [pc, #208]	; (8017e3c <UART_SetConfig+0x4e4>)
 8017d6c:	fba2 2303 	umull	r2, r3, r2, r3
 8017d70:	095b      	lsrs	r3, r3, #5
 8017d72:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8017d76:	441c      	add	r4, r3
 8017d78:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8017d7c:	2200      	movs	r2, #0
 8017d7e:	673b      	str	r3, [r7, #112]	; 0x70
 8017d80:	677a      	str	r2, [r7, #116]	; 0x74
 8017d82:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8017d86:	4642      	mov	r2, r8
 8017d88:	464b      	mov	r3, r9
 8017d8a:	1891      	adds	r1, r2, r2
 8017d8c:	60b9      	str	r1, [r7, #8]
 8017d8e:	415b      	adcs	r3, r3
 8017d90:	60fb      	str	r3, [r7, #12]
 8017d92:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8017d96:	4641      	mov	r1, r8
 8017d98:	1851      	adds	r1, r2, r1
 8017d9a:	6039      	str	r1, [r7, #0]
 8017d9c:	4649      	mov	r1, r9
 8017d9e:	414b      	adcs	r3, r1
 8017da0:	607b      	str	r3, [r7, #4]
 8017da2:	f04f 0200 	mov.w	r2, #0
 8017da6:	f04f 0300 	mov.w	r3, #0
 8017daa:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8017dae:	4659      	mov	r1, fp
 8017db0:	00cb      	lsls	r3, r1, #3
 8017db2:	4651      	mov	r1, sl
 8017db4:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8017db8:	4651      	mov	r1, sl
 8017dba:	00ca      	lsls	r2, r1, #3
 8017dbc:	4610      	mov	r0, r2
 8017dbe:	4619      	mov	r1, r3
 8017dc0:	4603      	mov	r3, r0
 8017dc2:	4642      	mov	r2, r8
 8017dc4:	189b      	adds	r3, r3, r2
 8017dc6:	66bb      	str	r3, [r7, #104]	; 0x68
 8017dc8:	464b      	mov	r3, r9
 8017dca:	460a      	mov	r2, r1
 8017dcc:	eb42 0303 	adc.w	r3, r2, r3
 8017dd0:	66fb      	str	r3, [r7, #108]	; 0x6c
 8017dd2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017dd6:	685b      	ldr	r3, [r3, #4]
 8017dd8:	2200      	movs	r2, #0
 8017dda:	663b      	str	r3, [r7, #96]	; 0x60
 8017ddc:	667a      	str	r2, [r7, #100]	; 0x64
 8017dde:	f04f 0200 	mov.w	r2, #0
 8017de2:	f04f 0300 	mov.w	r3, #0
 8017de6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8017dea:	4649      	mov	r1, r9
 8017dec:	008b      	lsls	r3, r1, #2
 8017dee:	4641      	mov	r1, r8
 8017df0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8017df4:	4641      	mov	r1, r8
 8017df6:	008a      	lsls	r2, r1, #2
 8017df8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8017dfc:	f7e8 ff44 	bl	8000c88 <__aeabi_uldivmod>
 8017e00:	4602      	mov	r2, r0
 8017e02:	460b      	mov	r3, r1
 8017e04:	4b0d      	ldr	r3, [pc, #52]	; (8017e3c <UART_SetConfig+0x4e4>)
 8017e06:	fba3 1302 	umull	r1, r3, r3, r2
 8017e0a:	095b      	lsrs	r3, r3, #5
 8017e0c:	2164      	movs	r1, #100	; 0x64
 8017e0e:	fb01 f303 	mul.w	r3, r1, r3
 8017e12:	1ad3      	subs	r3, r2, r3
 8017e14:	011b      	lsls	r3, r3, #4
 8017e16:	3332      	adds	r3, #50	; 0x32
 8017e18:	4a08      	ldr	r2, [pc, #32]	; (8017e3c <UART_SetConfig+0x4e4>)
 8017e1a:	fba2 2303 	umull	r2, r3, r2, r3
 8017e1e:	095b      	lsrs	r3, r3, #5
 8017e20:	f003 020f 	and.w	r2, r3, #15
 8017e24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8017e28:	681b      	ldr	r3, [r3, #0]
 8017e2a:	4422      	add	r2, r4
 8017e2c:	609a      	str	r2, [r3, #8]
 8017e2e:	bf00      	nop
 8017e30:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8017e34:	46bd      	mov	sp, r7
 8017e36:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8017e3a:	bf00      	nop
 8017e3c:	51eb851f 	.word	0x51eb851f

08017e40 <USB_CoreInit>:
 8017e40:	b084      	sub	sp, #16
 8017e42:	b580      	push	{r7, lr}
 8017e44:	b084      	sub	sp, #16
 8017e46:	af00      	add	r7, sp, #0
 8017e48:	6078      	str	r0, [r7, #4]
 8017e4a:	f107 001c 	add.w	r0, r7, #28
 8017e4e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8017e52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017e54:	2b01      	cmp	r3, #1
 8017e56:	d122      	bne.n	8017e9e <USB_CoreInit+0x5e>
 8017e58:	687b      	ldr	r3, [r7, #4]
 8017e5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e5c:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8017e60:	687b      	ldr	r3, [r7, #4]
 8017e62:	639a      	str	r2, [r3, #56]	; 0x38
 8017e64:	687b      	ldr	r3, [r7, #4]
 8017e66:	68db      	ldr	r3, [r3, #12]
 8017e68:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8017e6c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8017e70:	687a      	ldr	r2, [r7, #4]
 8017e72:	60d3      	str	r3, [r2, #12]
 8017e74:	687b      	ldr	r3, [r7, #4]
 8017e76:	68db      	ldr	r3, [r3, #12]
 8017e78:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8017e7c:	687b      	ldr	r3, [r7, #4]
 8017e7e:	60da      	str	r2, [r3, #12]
 8017e80:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017e82:	2b01      	cmp	r3, #1
 8017e84:	d105      	bne.n	8017e92 <USB_CoreInit+0x52>
 8017e86:	687b      	ldr	r3, [r7, #4]
 8017e88:	68db      	ldr	r3, [r3, #12]
 8017e8a:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8017e8e:	687b      	ldr	r3, [r7, #4]
 8017e90:	60da      	str	r2, [r3, #12]
 8017e92:	6878      	ldr	r0, [r7, #4]
 8017e94:	f001 fbee 	bl	8019674 <USB_CoreReset>
 8017e98:	4603      	mov	r3, r0
 8017e9a:	73fb      	strb	r3, [r7, #15]
 8017e9c:	e01a      	b.n	8017ed4 <USB_CoreInit+0x94>
 8017e9e:	687b      	ldr	r3, [r7, #4]
 8017ea0:	68db      	ldr	r3, [r3, #12]
 8017ea2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8017ea6:	687b      	ldr	r3, [r7, #4]
 8017ea8:	60da      	str	r2, [r3, #12]
 8017eaa:	6878      	ldr	r0, [r7, #4]
 8017eac:	f001 fbe2 	bl	8019674 <USB_CoreReset>
 8017eb0:	4603      	mov	r3, r0
 8017eb2:	73fb      	strb	r3, [r7, #15]
 8017eb4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8017eb6:	2b00      	cmp	r3, #0
 8017eb8:	d106      	bne.n	8017ec8 <USB_CoreInit+0x88>
 8017eba:	687b      	ldr	r3, [r7, #4]
 8017ebc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ebe:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8017ec2:	687b      	ldr	r3, [r7, #4]
 8017ec4:	639a      	str	r2, [r3, #56]	; 0x38
 8017ec6:	e005      	b.n	8017ed4 <USB_CoreInit+0x94>
 8017ec8:	687b      	ldr	r3, [r7, #4]
 8017eca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ecc:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8017ed0:	687b      	ldr	r3, [r7, #4]
 8017ed2:	639a      	str	r2, [r3, #56]	; 0x38
 8017ed4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017ed6:	2b01      	cmp	r3, #1
 8017ed8:	d10b      	bne.n	8017ef2 <USB_CoreInit+0xb2>
 8017eda:	687b      	ldr	r3, [r7, #4]
 8017edc:	689b      	ldr	r3, [r3, #8]
 8017ede:	f043 0206 	orr.w	r2, r3, #6
 8017ee2:	687b      	ldr	r3, [r7, #4]
 8017ee4:	609a      	str	r2, [r3, #8]
 8017ee6:	687b      	ldr	r3, [r7, #4]
 8017ee8:	689b      	ldr	r3, [r3, #8]
 8017eea:	f043 0220 	orr.w	r2, r3, #32
 8017eee:	687b      	ldr	r3, [r7, #4]
 8017ef0:	609a      	str	r2, [r3, #8]
 8017ef2:	7bfb      	ldrb	r3, [r7, #15]
 8017ef4:	4618      	mov	r0, r3
 8017ef6:	3710      	adds	r7, #16
 8017ef8:	46bd      	mov	sp, r7
 8017efa:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8017efe:	b004      	add	sp, #16
 8017f00:	4770      	bx	lr
	...

08017f04 <USB_SetTurnaroundTime>:
 8017f04:	b480      	push	{r7}
 8017f06:	b087      	sub	sp, #28
 8017f08:	af00      	add	r7, sp, #0
 8017f0a:	60f8      	str	r0, [r7, #12]
 8017f0c:	60b9      	str	r1, [r7, #8]
 8017f0e:	4613      	mov	r3, r2
 8017f10:	71fb      	strb	r3, [r7, #7]
 8017f12:	79fb      	ldrb	r3, [r7, #7]
 8017f14:	2b02      	cmp	r3, #2
 8017f16:	d165      	bne.n	8017fe4 <USB_SetTurnaroundTime+0xe0>
 8017f18:	68bb      	ldr	r3, [r7, #8]
 8017f1a:	4a41      	ldr	r2, [pc, #260]	; (8018020 <USB_SetTurnaroundTime+0x11c>)
 8017f1c:	4293      	cmp	r3, r2
 8017f1e:	d906      	bls.n	8017f2e <USB_SetTurnaroundTime+0x2a>
 8017f20:	68bb      	ldr	r3, [r7, #8]
 8017f22:	4a40      	ldr	r2, [pc, #256]	; (8018024 <USB_SetTurnaroundTime+0x120>)
 8017f24:	4293      	cmp	r3, r2
 8017f26:	d202      	bcs.n	8017f2e <USB_SetTurnaroundTime+0x2a>
 8017f28:	230f      	movs	r3, #15
 8017f2a:	617b      	str	r3, [r7, #20]
 8017f2c:	e062      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f2e:	68bb      	ldr	r3, [r7, #8]
 8017f30:	4a3c      	ldr	r2, [pc, #240]	; (8018024 <USB_SetTurnaroundTime+0x120>)
 8017f32:	4293      	cmp	r3, r2
 8017f34:	d306      	bcc.n	8017f44 <USB_SetTurnaroundTime+0x40>
 8017f36:	68bb      	ldr	r3, [r7, #8]
 8017f38:	4a3b      	ldr	r2, [pc, #236]	; (8018028 <USB_SetTurnaroundTime+0x124>)
 8017f3a:	4293      	cmp	r3, r2
 8017f3c:	d202      	bcs.n	8017f44 <USB_SetTurnaroundTime+0x40>
 8017f3e:	230e      	movs	r3, #14
 8017f40:	617b      	str	r3, [r7, #20]
 8017f42:	e057      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f44:	68bb      	ldr	r3, [r7, #8]
 8017f46:	4a38      	ldr	r2, [pc, #224]	; (8018028 <USB_SetTurnaroundTime+0x124>)
 8017f48:	4293      	cmp	r3, r2
 8017f4a:	d306      	bcc.n	8017f5a <USB_SetTurnaroundTime+0x56>
 8017f4c:	68bb      	ldr	r3, [r7, #8]
 8017f4e:	4a37      	ldr	r2, [pc, #220]	; (801802c <USB_SetTurnaroundTime+0x128>)
 8017f50:	4293      	cmp	r3, r2
 8017f52:	d202      	bcs.n	8017f5a <USB_SetTurnaroundTime+0x56>
 8017f54:	230d      	movs	r3, #13
 8017f56:	617b      	str	r3, [r7, #20]
 8017f58:	e04c      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f5a:	68bb      	ldr	r3, [r7, #8]
 8017f5c:	4a33      	ldr	r2, [pc, #204]	; (801802c <USB_SetTurnaroundTime+0x128>)
 8017f5e:	4293      	cmp	r3, r2
 8017f60:	d306      	bcc.n	8017f70 <USB_SetTurnaroundTime+0x6c>
 8017f62:	68bb      	ldr	r3, [r7, #8]
 8017f64:	4a32      	ldr	r2, [pc, #200]	; (8018030 <USB_SetTurnaroundTime+0x12c>)
 8017f66:	4293      	cmp	r3, r2
 8017f68:	d802      	bhi.n	8017f70 <USB_SetTurnaroundTime+0x6c>
 8017f6a:	230c      	movs	r3, #12
 8017f6c:	617b      	str	r3, [r7, #20]
 8017f6e:	e041      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f70:	68bb      	ldr	r3, [r7, #8]
 8017f72:	4a2f      	ldr	r2, [pc, #188]	; (8018030 <USB_SetTurnaroundTime+0x12c>)
 8017f74:	4293      	cmp	r3, r2
 8017f76:	d906      	bls.n	8017f86 <USB_SetTurnaroundTime+0x82>
 8017f78:	68bb      	ldr	r3, [r7, #8]
 8017f7a:	4a2e      	ldr	r2, [pc, #184]	; (8018034 <USB_SetTurnaroundTime+0x130>)
 8017f7c:	4293      	cmp	r3, r2
 8017f7e:	d802      	bhi.n	8017f86 <USB_SetTurnaroundTime+0x82>
 8017f80:	230b      	movs	r3, #11
 8017f82:	617b      	str	r3, [r7, #20]
 8017f84:	e036      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f86:	68bb      	ldr	r3, [r7, #8]
 8017f88:	4a2a      	ldr	r2, [pc, #168]	; (8018034 <USB_SetTurnaroundTime+0x130>)
 8017f8a:	4293      	cmp	r3, r2
 8017f8c:	d906      	bls.n	8017f9c <USB_SetTurnaroundTime+0x98>
 8017f8e:	68bb      	ldr	r3, [r7, #8]
 8017f90:	4a29      	ldr	r2, [pc, #164]	; (8018038 <USB_SetTurnaroundTime+0x134>)
 8017f92:	4293      	cmp	r3, r2
 8017f94:	d802      	bhi.n	8017f9c <USB_SetTurnaroundTime+0x98>
 8017f96:	230a      	movs	r3, #10
 8017f98:	617b      	str	r3, [r7, #20]
 8017f9a:	e02b      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017f9c:	68bb      	ldr	r3, [r7, #8]
 8017f9e:	4a26      	ldr	r2, [pc, #152]	; (8018038 <USB_SetTurnaroundTime+0x134>)
 8017fa0:	4293      	cmp	r3, r2
 8017fa2:	d906      	bls.n	8017fb2 <USB_SetTurnaroundTime+0xae>
 8017fa4:	68bb      	ldr	r3, [r7, #8]
 8017fa6:	4a25      	ldr	r2, [pc, #148]	; (801803c <USB_SetTurnaroundTime+0x138>)
 8017fa8:	4293      	cmp	r3, r2
 8017faa:	d202      	bcs.n	8017fb2 <USB_SetTurnaroundTime+0xae>
 8017fac:	2309      	movs	r3, #9
 8017fae:	617b      	str	r3, [r7, #20]
 8017fb0:	e020      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017fb2:	68bb      	ldr	r3, [r7, #8]
 8017fb4:	4a21      	ldr	r2, [pc, #132]	; (801803c <USB_SetTurnaroundTime+0x138>)
 8017fb6:	4293      	cmp	r3, r2
 8017fb8:	d306      	bcc.n	8017fc8 <USB_SetTurnaroundTime+0xc4>
 8017fba:	68bb      	ldr	r3, [r7, #8]
 8017fbc:	4a20      	ldr	r2, [pc, #128]	; (8018040 <USB_SetTurnaroundTime+0x13c>)
 8017fbe:	4293      	cmp	r3, r2
 8017fc0:	d802      	bhi.n	8017fc8 <USB_SetTurnaroundTime+0xc4>
 8017fc2:	2308      	movs	r3, #8
 8017fc4:	617b      	str	r3, [r7, #20]
 8017fc6:	e015      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017fc8:	68bb      	ldr	r3, [r7, #8]
 8017fca:	4a1d      	ldr	r2, [pc, #116]	; (8018040 <USB_SetTurnaroundTime+0x13c>)
 8017fcc:	4293      	cmp	r3, r2
 8017fce:	d906      	bls.n	8017fde <USB_SetTurnaroundTime+0xda>
 8017fd0:	68bb      	ldr	r3, [r7, #8]
 8017fd2:	4a1c      	ldr	r2, [pc, #112]	; (8018044 <USB_SetTurnaroundTime+0x140>)
 8017fd4:	4293      	cmp	r3, r2
 8017fd6:	d202      	bcs.n	8017fde <USB_SetTurnaroundTime+0xda>
 8017fd8:	2307      	movs	r3, #7
 8017fda:	617b      	str	r3, [r7, #20]
 8017fdc:	e00a      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017fde:	2306      	movs	r3, #6
 8017fe0:	617b      	str	r3, [r7, #20]
 8017fe2:	e007      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017fe4:	79fb      	ldrb	r3, [r7, #7]
 8017fe6:	2b00      	cmp	r3, #0
 8017fe8:	d102      	bne.n	8017ff0 <USB_SetTurnaroundTime+0xec>
 8017fea:	2309      	movs	r3, #9
 8017fec:	617b      	str	r3, [r7, #20]
 8017fee:	e001      	b.n	8017ff4 <USB_SetTurnaroundTime+0xf0>
 8017ff0:	2309      	movs	r3, #9
 8017ff2:	617b      	str	r3, [r7, #20]
 8017ff4:	68fb      	ldr	r3, [r7, #12]
 8017ff6:	68db      	ldr	r3, [r3, #12]
 8017ff8:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 8017ffc:	68fb      	ldr	r3, [r7, #12]
 8017ffe:	60da      	str	r2, [r3, #12]
 8018000:	68fb      	ldr	r3, [r7, #12]
 8018002:	68da      	ldr	r2, [r3, #12]
 8018004:	697b      	ldr	r3, [r7, #20]
 8018006:	029b      	lsls	r3, r3, #10
 8018008:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 801800c:	431a      	orrs	r2, r3
 801800e:	68fb      	ldr	r3, [r7, #12]
 8018010:	60da      	str	r2, [r3, #12]
 8018012:	2300      	movs	r3, #0
 8018014:	4618      	mov	r0, r3
 8018016:	371c      	adds	r7, #28
 8018018:	46bd      	mov	sp, r7
 801801a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801801e:	4770      	bx	lr
 8018020:	00d8acbf 	.word	0x00d8acbf
 8018024:	00e4e1c0 	.word	0x00e4e1c0
 8018028:	00f42400 	.word	0x00f42400
 801802c:	01067380 	.word	0x01067380
 8018030:	011a499f 	.word	0x011a499f
 8018034:	01312cff 	.word	0x01312cff
 8018038:	014ca43f 	.word	0x014ca43f
 801803c:	016e3600 	.word	0x016e3600
 8018040:	01a6ab1f 	.word	0x01a6ab1f
 8018044:	01e84800 	.word	0x01e84800

08018048 <USB_EnableGlobalInt>:
 8018048:	b480      	push	{r7}
 801804a:	b083      	sub	sp, #12
 801804c:	af00      	add	r7, sp, #0
 801804e:	6078      	str	r0, [r7, #4]
 8018050:	687b      	ldr	r3, [r7, #4]
 8018052:	689b      	ldr	r3, [r3, #8]
 8018054:	f043 0201 	orr.w	r2, r3, #1
 8018058:	687b      	ldr	r3, [r7, #4]
 801805a:	609a      	str	r2, [r3, #8]
 801805c:	2300      	movs	r3, #0
 801805e:	4618      	mov	r0, r3
 8018060:	370c      	adds	r7, #12
 8018062:	46bd      	mov	sp, r7
 8018064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018068:	4770      	bx	lr

0801806a <USB_DisableGlobalInt>:
 801806a:	b480      	push	{r7}
 801806c:	b083      	sub	sp, #12
 801806e:	af00      	add	r7, sp, #0
 8018070:	6078      	str	r0, [r7, #4]
 8018072:	687b      	ldr	r3, [r7, #4]
 8018074:	689b      	ldr	r3, [r3, #8]
 8018076:	f023 0201 	bic.w	r2, r3, #1
 801807a:	687b      	ldr	r3, [r7, #4]
 801807c:	609a      	str	r2, [r3, #8]
 801807e:	2300      	movs	r3, #0
 8018080:	4618      	mov	r0, r3
 8018082:	370c      	adds	r7, #12
 8018084:	46bd      	mov	sp, r7
 8018086:	f85d 7b04 	ldr.w	r7, [sp], #4
 801808a:	4770      	bx	lr

0801808c <USB_SetCurrentMode>:
 801808c:	b580      	push	{r7, lr}
 801808e:	b084      	sub	sp, #16
 8018090:	af00      	add	r7, sp, #0
 8018092:	6078      	str	r0, [r7, #4]
 8018094:	460b      	mov	r3, r1
 8018096:	70fb      	strb	r3, [r7, #3]
 8018098:	2300      	movs	r3, #0
 801809a:	60fb      	str	r3, [r7, #12]
 801809c:	687b      	ldr	r3, [r7, #4]
 801809e:	68db      	ldr	r3, [r3, #12]
 80180a0:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 80180a4:	687b      	ldr	r3, [r7, #4]
 80180a6:	60da      	str	r2, [r3, #12]
 80180a8:	78fb      	ldrb	r3, [r7, #3]
 80180aa:	2b01      	cmp	r3, #1
 80180ac:	d115      	bne.n	80180da <USB_SetCurrentMode+0x4e>
 80180ae:	687b      	ldr	r3, [r7, #4]
 80180b0:	68db      	ldr	r3, [r3, #12]
 80180b2:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 80180b6:	687b      	ldr	r3, [r7, #4]
 80180b8:	60da      	str	r2, [r3, #12]
 80180ba:	2001      	movs	r0, #1
 80180bc:	f7f7 fafe 	bl	800f6bc <HAL_Delay>
 80180c0:	68fb      	ldr	r3, [r7, #12]
 80180c2:	3301      	adds	r3, #1
 80180c4:	60fb      	str	r3, [r7, #12]
 80180c6:	6878      	ldr	r0, [r7, #4]
 80180c8:	f001 fa45 	bl	8019556 <USB_GetMode>
 80180cc:	4603      	mov	r3, r0
 80180ce:	2b01      	cmp	r3, #1
 80180d0:	d01e      	beq.n	8018110 <USB_SetCurrentMode+0x84>
 80180d2:	68fb      	ldr	r3, [r7, #12]
 80180d4:	2b31      	cmp	r3, #49	; 0x31
 80180d6:	d9f0      	bls.n	80180ba <USB_SetCurrentMode+0x2e>
 80180d8:	e01a      	b.n	8018110 <USB_SetCurrentMode+0x84>
 80180da:	78fb      	ldrb	r3, [r7, #3]
 80180dc:	2b00      	cmp	r3, #0
 80180de:	d115      	bne.n	801810c <USB_SetCurrentMode+0x80>
 80180e0:	687b      	ldr	r3, [r7, #4]
 80180e2:	68db      	ldr	r3, [r3, #12]
 80180e4:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80180e8:	687b      	ldr	r3, [r7, #4]
 80180ea:	60da      	str	r2, [r3, #12]
 80180ec:	2001      	movs	r0, #1
 80180ee:	f7f7 fae5 	bl	800f6bc <HAL_Delay>
 80180f2:	68fb      	ldr	r3, [r7, #12]
 80180f4:	3301      	adds	r3, #1
 80180f6:	60fb      	str	r3, [r7, #12]
 80180f8:	6878      	ldr	r0, [r7, #4]
 80180fa:	f001 fa2c 	bl	8019556 <USB_GetMode>
 80180fe:	4603      	mov	r3, r0
 8018100:	2b00      	cmp	r3, #0
 8018102:	d005      	beq.n	8018110 <USB_SetCurrentMode+0x84>
 8018104:	68fb      	ldr	r3, [r7, #12]
 8018106:	2b31      	cmp	r3, #49	; 0x31
 8018108:	d9f0      	bls.n	80180ec <USB_SetCurrentMode+0x60>
 801810a:	e001      	b.n	8018110 <USB_SetCurrentMode+0x84>
 801810c:	2301      	movs	r3, #1
 801810e:	e005      	b.n	801811c <USB_SetCurrentMode+0x90>
 8018110:	68fb      	ldr	r3, [r7, #12]
 8018112:	2b32      	cmp	r3, #50	; 0x32
 8018114:	d101      	bne.n	801811a <USB_SetCurrentMode+0x8e>
 8018116:	2301      	movs	r3, #1
 8018118:	e000      	b.n	801811c <USB_SetCurrentMode+0x90>
 801811a:	2300      	movs	r3, #0
 801811c:	4618      	mov	r0, r3
 801811e:	3710      	adds	r7, #16
 8018120:	46bd      	mov	sp, r7
 8018122:	bd80      	pop	{r7, pc}

08018124 <USB_DevInit>:
 8018124:	b084      	sub	sp, #16
 8018126:	b580      	push	{r7, lr}
 8018128:	b086      	sub	sp, #24
 801812a:	af00      	add	r7, sp, #0
 801812c:	6078      	str	r0, [r7, #4]
 801812e:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8018132:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8018136:	2300      	movs	r3, #0
 8018138:	75fb      	strb	r3, [r7, #23]
 801813a:	687b      	ldr	r3, [r7, #4]
 801813c:	60fb      	str	r3, [r7, #12]
 801813e:	2300      	movs	r3, #0
 8018140:	613b      	str	r3, [r7, #16]
 8018142:	e009      	b.n	8018158 <USB_DevInit+0x34>
 8018144:	687a      	ldr	r2, [r7, #4]
 8018146:	693b      	ldr	r3, [r7, #16]
 8018148:	3340      	adds	r3, #64	; 0x40
 801814a:	009b      	lsls	r3, r3, #2
 801814c:	4413      	add	r3, r2
 801814e:	2200      	movs	r2, #0
 8018150:	605a      	str	r2, [r3, #4]
 8018152:	693b      	ldr	r3, [r7, #16]
 8018154:	3301      	adds	r3, #1
 8018156:	613b      	str	r3, [r7, #16]
 8018158:	693b      	ldr	r3, [r7, #16]
 801815a:	2b0e      	cmp	r3, #14
 801815c:	d9f2      	bls.n	8018144 <USB_DevInit+0x20>
 801815e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8018160:	2b00      	cmp	r3, #0
 8018162:	d11c      	bne.n	801819e <USB_DevInit+0x7a>
 8018164:	68fb      	ldr	r3, [r7, #12]
 8018166:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801816a:	685b      	ldr	r3, [r3, #4]
 801816c:	68fa      	ldr	r2, [r7, #12]
 801816e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8018172:	f043 0302 	orr.w	r3, r3, #2
 8018176:	6053      	str	r3, [r2, #4]
 8018178:	687b      	ldr	r3, [r7, #4]
 801817a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801817c:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8018180:	687b      	ldr	r3, [r7, #4]
 8018182:	639a      	str	r2, [r3, #56]	; 0x38
 8018184:	687b      	ldr	r3, [r7, #4]
 8018186:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018188:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 801818c:	687b      	ldr	r3, [r7, #4]
 801818e:	639a      	str	r2, [r3, #56]	; 0x38
 8018190:	687b      	ldr	r3, [r7, #4]
 8018192:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018194:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8018198:	687b      	ldr	r3, [r7, #4]
 801819a:	639a      	str	r2, [r3, #56]	; 0x38
 801819c:	e00b      	b.n	80181b6 <USB_DevInit+0x92>
 801819e:	687b      	ldr	r3, [r7, #4]
 80181a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80181a2:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 80181a6:	687b      	ldr	r3, [r7, #4]
 80181a8:	639a      	str	r2, [r3, #56]	; 0x38
 80181aa:	687b      	ldr	r3, [r7, #4]
 80181ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80181ae:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 80181b2:	687b      	ldr	r3, [r7, #4]
 80181b4:	639a      	str	r2, [r3, #56]	; 0x38
 80181b6:	68fb      	ldr	r3, [r7, #12]
 80181b8:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80181bc:	461a      	mov	r2, r3
 80181be:	2300      	movs	r3, #0
 80181c0:	6013      	str	r3, [r2, #0]
 80181c2:	68fb      	ldr	r3, [r7, #12]
 80181c4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80181c8:	4619      	mov	r1, r3
 80181ca:	68fb      	ldr	r3, [r7, #12]
 80181cc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80181d0:	461a      	mov	r2, r3
 80181d2:	680b      	ldr	r3, [r1, #0]
 80181d4:	6013      	str	r3, [r2, #0]
 80181d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80181d8:	2b01      	cmp	r3, #1
 80181da:	d10c      	bne.n	80181f6 <USB_DevInit+0xd2>
 80181dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80181de:	2b00      	cmp	r3, #0
 80181e0:	d104      	bne.n	80181ec <USB_DevInit+0xc8>
 80181e2:	2100      	movs	r1, #0
 80181e4:	6878      	ldr	r0, [r7, #4]
 80181e6:	f000 f965 	bl	80184b4 <USB_SetDevSpeed>
 80181ea:	e008      	b.n	80181fe <USB_DevInit+0xda>
 80181ec:	2101      	movs	r1, #1
 80181ee:	6878      	ldr	r0, [r7, #4]
 80181f0:	f000 f960 	bl	80184b4 <USB_SetDevSpeed>
 80181f4:	e003      	b.n	80181fe <USB_DevInit+0xda>
 80181f6:	2103      	movs	r1, #3
 80181f8:	6878      	ldr	r0, [r7, #4]
 80181fa:	f000 f95b 	bl	80184b4 <USB_SetDevSpeed>
 80181fe:	2110      	movs	r1, #16
 8018200:	6878      	ldr	r0, [r7, #4]
 8018202:	f000 f8f3 	bl	80183ec <USB_FlushTxFifo>
 8018206:	4603      	mov	r3, r0
 8018208:	2b00      	cmp	r3, #0
 801820a:	d001      	beq.n	8018210 <USB_DevInit+0xec>
 801820c:	2301      	movs	r3, #1
 801820e:	75fb      	strb	r3, [r7, #23]
 8018210:	6878      	ldr	r0, [r7, #4]
 8018212:	f000 f91f 	bl	8018454 <USB_FlushRxFifo>
 8018216:	4603      	mov	r3, r0
 8018218:	2b00      	cmp	r3, #0
 801821a:	d001      	beq.n	8018220 <USB_DevInit+0xfc>
 801821c:	2301      	movs	r3, #1
 801821e:	75fb      	strb	r3, [r7, #23]
 8018220:	68fb      	ldr	r3, [r7, #12]
 8018222:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018226:	461a      	mov	r2, r3
 8018228:	2300      	movs	r3, #0
 801822a:	6113      	str	r3, [r2, #16]
 801822c:	68fb      	ldr	r3, [r7, #12]
 801822e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018232:	461a      	mov	r2, r3
 8018234:	2300      	movs	r3, #0
 8018236:	6153      	str	r3, [r2, #20]
 8018238:	68fb      	ldr	r3, [r7, #12]
 801823a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801823e:	461a      	mov	r2, r3
 8018240:	2300      	movs	r3, #0
 8018242:	61d3      	str	r3, [r2, #28]
 8018244:	2300      	movs	r3, #0
 8018246:	613b      	str	r3, [r7, #16]
 8018248:	e043      	b.n	80182d2 <USB_DevInit+0x1ae>
 801824a:	693b      	ldr	r3, [r7, #16]
 801824c:	015a      	lsls	r2, r3, #5
 801824e:	68fb      	ldr	r3, [r7, #12]
 8018250:	4413      	add	r3, r2
 8018252:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018256:	681b      	ldr	r3, [r3, #0]
 8018258:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801825c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018260:	d118      	bne.n	8018294 <USB_DevInit+0x170>
 8018262:	693b      	ldr	r3, [r7, #16]
 8018264:	2b00      	cmp	r3, #0
 8018266:	d10a      	bne.n	801827e <USB_DevInit+0x15a>
 8018268:	693b      	ldr	r3, [r7, #16]
 801826a:	015a      	lsls	r2, r3, #5
 801826c:	68fb      	ldr	r3, [r7, #12]
 801826e:	4413      	add	r3, r2
 8018270:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018274:	461a      	mov	r2, r3
 8018276:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 801827a:	6013      	str	r3, [r2, #0]
 801827c:	e013      	b.n	80182a6 <USB_DevInit+0x182>
 801827e:	693b      	ldr	r3, [r7, #16]
 8018280:	015a      	lsls	r2, r3, #5
 8018282:	68fb      	ldr	r3, [r7, #12]
 8018284:	4413      	add	r3, r2
 8018286:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801828a:	461a      	mov	r2, r3
 801828c:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8018290:	6013      	str	r3, [r2, #0]
 8018292:	e008      	b.n	80182a6 <USB_DevInit+0x182>
 8018294:	693b      	ldr	r3, [r7, #16]
 8018296:	015a      	lsls	r2, r3, #5
 8018298:	68fb      	ldr	r3, [r7, #12]
 801829a:	4413      	add	r3, r2
 801829c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80182a0:	461a      	mov	r2, r3
 80182a2:	2300      	movs	r3, #0
 80182a4:	6013      	str	r3, [r2, #0]
 80182a6:	693b      	ldr	r3, [r7, #16]
 80182a8:	015a      	lsls	r2, r3, #5
 80182aa:	68fb      	ldr	r3, [r7, #12]
 80182ac:	4413      	add	r3, r2
 80182ae:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80182b2:	461a      	mov	r2, r3
 80182b4:	2300      	movs	r3, #0
 80182b6:	6113      	str	r3, [r2, #16]
 80182b8:	693b      	ldr	r3, [r7, #16]
 80182ba:	015a      	lsls	r2, r3, #5
 80182bc:	68fb      	ldr	r3, [r7, #12]
 80182be:	4413      	add	r3, r2
 80182c0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80182c4:	461a      	mov	r2, r3
 80182c6:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80182ca:	6093      	str	r3, [r2, #8]
 80182cc:	693b      	ldr	r3, [r7, #16]
 80182ce:	3301      	adds	r3, #1
 80182d0:	613b      	str	r3, [r7, #16]
 80182d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80182d4:	693a      	ldr	r2, [r7, #16]
 80182d6:	429a      	cmp	r2, r3
 80182d8:	d3b7      	bcc.n	801824a <USB_DevInit+0x126>
 80182da:	2300      	movs	r3, #0
 80182dc:	613b      	str	r3, [r7, #16]
 80182de:	e043      	b.n	8018368 <USB_DevInit+0x244>
 80182e0:	693b      	ldr	r3, [r7, #16]
 80182e2:	015a      	lsls	r2, r3, #5
 80182e4:	68fb      	ldr	r3, [r7, #12]
 80182e6:	4413      	add	r3, r2
 80182e8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80182ec:	681b      	ldr	r3, [r3, #0]
 80182ee:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80182f2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80182f6:	d118      	bne.n	801832a <USB_DevInit+0x206>
 80182f8:	693b      	ldr	r3, [r7, #16]
 80182fa:	2b00      	cmp	r3, #0
 80182fc:	d10a      	bne.n	8018314 <USB_DevInit+0x1f0>
 80182fe:	693b      	ldr	r3, [r7, #16]
 8018300:	015a      	lsls	r2, r3, #5
 8018302:	68fb      	ldr	r3, [r7, #12]
 8018304:	4413      	add	r3, r2
 8018306:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801830a:	461a      	mov	r2, r3
 801830c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8018310:	6013      	str	r3, [r2, #0]
 8018312:	e013      	b.n	801833c <USB_DevInit+0x218>
 8018314:	693b      	ldr	r3, [r7, #16]
 8018316:	015a      	lsls	r2, r3, #5
 8018318:	68fb      	ldr	r3, [r7, #12]
 801831a:	4413      	add	r3, r2
 801831c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018320:	461a      	mov	r2, r3
 8018322:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8018326:	6013      	str	r3, [r2, #0]
 8018328:	e008      	b.n	801833c <USB_DevInit+0x218>
 801832a:	693b      	ldr	r3, [r7, #16]
 801832c:	015a      	lsls	r2, r3, #5
 801832e:	68fb      	ldr	r3, [r7, #12]
 8018330:	4413      	add	r3, r2
 8018332:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018336:	461a      	mov	r2, r3
 8018338:	2300      	movs	r3, #0
 801833a:	6013      	str	r3, [r2, #0]
 801833c:	693b      	ldr	r3, [r7, #16]
 801833e:	015a      	lsls	r2, r3, #5
 8018340:	68fb      	ldr	r3, [r7, #12]
 8018342:	4413      	add	r3, r2
 8018344:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018348:	461a      	mov	r2, r3
 801834a:	2300      	movs	r3, #0
 801834c:	6113      	str	r3, [r2, #16]
 801834e:	693b      	ldr	r3, [r7, #16]
 8018350:	015a      	lsls	r2, r3, #5
 8018352:	68fb      	ldr	r3, [r7, #12]
 8018354:	4413      	add	r3, r2
 8018356:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801835a:	461a      	mov	r2, r3
 801835c:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8018360:	6093      	str	r3, [r2, #8]
 8018362:	693b      	ldr	r3, [r7, #16]
 8018364:	3301      	adds	r3, #1
 8018366:	613b      	str	r3, [r7, #16]
 8018368:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801836a:	693a      	ldr	r2, [r7, #16]
 801836c:	429a      	cmp	r2, r3
 801836e:	d3b7      	bcc.n	80182e0 <USB_DevInit+0x1bc>
 8018370:	68fb      	ldr	r3, [r7, #12]
 8018372:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018376:	691b      	ldr	r3, [r3, #16]
 8018378:	68fa      	ldr	r2, [r7, #12]
 801837a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801837e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8018382:	6113      	str	r3, [r2, #16]
 8018384:	687b      	ldr	r3, [r7, #4]
 8018386:	2200      	movs	r2, #0
 8018388:	619a      	str	r2, [r3, #24]
 801838a:	687b      	ldr	r3, [r7, #4]
 801838c:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 8018390:	615a      	str	r2, [r3, #20]
 8018392:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018394:	2b00      	cmp	r3, #0
 8018396:	d105      	bne.n	80183a4 <USB_DevInit+0x280>
 8018398:	687b      	ldr	r3, [r7, #4]
 801839a:	699b      	ldr	r3, [r3, #24]
 801839c:	f043 0210 	orr.w	r2, r3, #16
 80183a0:	687b      	ldr	r3, [r7, #4]
 80183a2:	619a      	str	r2, [r3, #24]
 80183a4:	687b      	ldr	r3, [r7, #4]
 80183a6:	699a      	ldr	r2, [r3, #24]
 80183a8:	4b0f      	ldr	r3, [pc, #60]	; (80183e8 <USB_DevInit+0x2c4>)
 80183aa:	4313      	orrs	r3, r2
 80183ac:	687a      	ldr	r2, [r7, #4]
 80183ae:	6193      	str	r3, [r2, #24]
 80183b0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80183b2:	2b00      	cmp	r3, #0
 80183b4:	d005      	beq.n	80183c2 <USB_DevInit+0x29e>
 80183b6:	687b      	ldr	r3, [r7, #4]
 80183b8:	699b      	ldr	r3, [r3, #24]
 80183ba:	f043 0208 	orr.w	r2, r3, #8
 80183be:	687b      	ldr	r3, [r7, #4]
 80183c0:	619a      	str	r2, [r3, #24]
 80183c2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80183c4:	2b01      	cmp	r3, #1
 80183c6:	d107      	bne.n	80183d8 <USB_DevInit+0x2b4>
 80183c8:	687b      	ldr	r3, [r7, #4]
 80183ca:	699b      	ldr	r3, [r3, #24]
 80183cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80183d0:	f043 0304 	orr.w	r3, r3, #4
 80183d4:	687a      	ldr	r2, [r7, #4]
 80183d6:	6193      	str	r3, [r2, #24]
 80183d8:	7dfb      	ldrb	r3, [r7, #23]
 80183da:	4618      	mov	r0, r3
 80183dc:	3718      	adds	r7, #24
 80183de:	46bd      	mov	sp, r7
 80183e0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80183e4:	b004      	add	sp, #16
 80183e6:	4770      	bx	lr
 80183e8:	803c3800 	.word	0x803c3800

080183ec <USB_FlushTxFifo>:
 80183ec:	b480      	push	{r7}
 80183ee:	b085      	sub	sp, #20
 80183f0:	af00      	add	r7, sp, #0
 80183f2:	6078      	str	r0, [r7, #4]
 80183f4:	6039      	str	r1, [r7, #0]
 80183f6:	2300      	movs	r3, #0
 80183f8:	60fb      	str	r3, [r7, #12]
 80183fa:	68fb      	ldr	r3, [r7, #12]
 80183fc:	3301      	adds	r3, #1
 80183fe:	60fb      	str	r3, [r7, #12]
 8018400:	68fb      	ldr	r3, [r7, #12]
 8018402:	4a13      	ldr	r2, [pc, #76]	; (8018450 <USB_FlushTxFifo+0x64>)
 8018404:	4293      	cmp	r3, r2
 8018406:	d901      	bls.n	801840c <USB_FlushTxFifo+0x20>
 8018408:	2303      	movs	r3, #3
 801840a:	e01b      	b.n	8018444 <USB_FlushTxFifo+0x58>
 801840c:	687b      	ldr	r3, [r7, #4]
 801840e:	691b      	ldr	r3, [r3, #16]
 8018410:	2b00      	cmp	r3, #0
 8018412:	daf2      	bge.n	80183fa <USB_FlushTxFifo+0xe>
 8018414:	2300      	movs	r3, #0
 8018416:	60fb      	str	r3, [r7, #12]
 8018418:	683b      	ldr	r3, [r7, #0]
 801841a:	019b      	lsls	r3, r3, #6
 801841c:	f043 0220 	orr.w	r2, r3, #32
 8018420:	687b      	ldr	r3, [r7, #4]
 8018422:	611a      	str	r2, [r3, #16]
 8018424:	68fb      	ldr	r3, [r7, #12]
 8018426:	3301      	adds	r3, #1
 8018428:	60fb      	str	r3, [r7, #12]
 801842a:	68fb      	ldr	r3, [r7, #12]
 801842c:	4a08      	ldr	r2, [pc, #32]	; (8018450 <USB_FlushTxFifo+0x64>)
 801842e:	4293      	cmp	r3, r2
 8018430:	d901      	bls.n	8018436 <USB_FlushTxFifo+0x4a>
 8018432:	2303      	movs	r3, #3
 8018434:	e006      	b.n	8018444 <USB_FlushTxFifo+0x58>
 8018436:	687b      	ldr	r3, [r7, #4]
 8018438:	691b      	ldr	r3, [r3, #16]
 801843a:	f003 0320 	and.w	r3, r3, #32
 801843e:	2b20      	cmp	r3, #32
 8018440:	d0f0      	beq.n	8018424 <USB_FlushTxFifo+0x38>
 8018442:	2300      	movs	r3, #0
 8018444:	4618      	mov	r0, r3
 8018446:	3714      	adds	r7, #20
 8018448:	46bd      	mov	sp, r7
 801844a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801844e:	4770      	bx	lr
 8018450:	00030d40 	.word	0x00030d40

08018454 <USB_FlushRxFifo>:
 8018454:	b480      	push	{r7}
 8018456:	b085      	sub	sp, #20
 8018458:	af00      	add	r7, sp, #0
 801845a:	6078      	str	r0, [r7, #4]
 801845c:	2300      	movs	r3, #0
 801845e:	60fb      	str	r3, [r7, #12]
 8018460:	68fb      	ldr	r3, [r7, #12]
 8018462:	3301      	adds	r3, #1
 8018464:	60fb      	str	r3, [r7, #12]
 8018466:	68fb      	ldr	r3, [r7, #12]
 8018468:	4a11      	ldr	r2, [pc, #68]	; (80184b0 <USB_FlushRxFifo+0x5c>)
 801846a:	4293      	cmp	r3, r2
 801846c:	d901      	bls.n	8018472 <USB_FlushRxFifo+0x1e>
 801846e:	2303      	movs	r3, #3
 8018470:	e018      	b.n	80184a4 <USB_FlushRxFifo+0x50>
 8018472:	687b      	ldr	r3, [r7, #4]
 8018474:	691b      	ldr	r3, [r3, #16]
 8018476:	2b00      	cmp	r3, #0
 8018478:	daf2      	bge.n	8018460 <USB_FlushRxFifo+0xc>
 801847a:	2300      	movs	r3, #0
 801847c:	60fb      	str	r3, [r7, #12]
 801847e:	687b      	ldr	r3, [r7, #4]
 8018480:	2210      	movs	r2, #16
 8018482:	611a      	str	r2, [r3, #16]
 8018484:	68fb      	ldr	r3, [r7, #12]
 8018486:	3301      	adds	r3, #1
 8018488:	60fb      	str	r3, [r7, #12]
 801848a:	68fb      	ldr	r3, [r7, #12]
 801848c:	4a08      	ldr	r2, [pc, #32]	; (80184b0 <USB_FlushRxFifo+0x5c>)
 801848e:	4293      	cmp	r3, r2
 8018490:	d901      	bls.n	8018496 <USB_FlushRxFifo+0x42>
 8018492:	2303      	movs	r3, #3
 8018494:	e006      	b.n	80184a4 <USB_FlushRxFifo+0x50>
 8018496:	687b      	ldr	r3, [r7, #4]
 8018498:	691b      	ldr	r3, [r3, #16]
 801849a:	f003 0310 	and.w	r3, r3, #16
 801849e:	2b10      	cmp	r3, #16
 80184a0:	d0f0      	beq.n	8018484 <USB_FlushRxFifo+0x30>
 80184a2:	2300      	movs	r3, #0
 80184a4:	4618      	mov	r0, r3
 80184a6:	3714      	adds	r7, #20
 80184a8:	46bd      	mov	sp, r7
 80184aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184ae:	4770      	bx	lr
 80184b0:	00030d40 	.word	0x00030d40

080184b4 <USB_SetDevSpeed>:
 80184b4:	b480      	push	{r7}
 80184b6:	b085      	sub	sp, #20
 80184b8:	af00      	add	r7, sp, #0
 80184ba:	6078      	str	r0, [r7, #4]
 80184bc:	460b      	mov	r3, r1
 80184be:	70fb      	strb	r3, [r7, #3]
 80184c0:	687b      	ldr	r3, [r7, #4]
 80184c2:	60fb      	str	r3, [r7, #12]
 80184c4:	68fb      	ldr	r3, [r7, #12]
 80184c6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80184ca:	681a      	ldr	r2, [r3, #0]
 80184cc:	78fb      	ldrb	r3, [r7, #3]
 80184ce:	68f9      	ldr	r1, [r7, #12]
 80184d0:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80184d4:	4313      	orrs	r3, r2
 80184d6:	600b      	str	r3, [r1, #0]
 80184d8:	2300      	movs	r3, #0
 80184da:	4618      	mov	r0, r3
 80184dc:	3714      	adds	r7, #20
 80184de:	46bd      	mov	sp, r7
 80184e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184e4:	4770      	bx	lr

080184e6 <USB_GetDevSpeed>:
 80184e6:	b480      	push	{r7}
 80184e8:	b087      	sub	sp, #28
 80184ea:	af00      	add	r7, sp, #0
 80184ec:	6078      	str	r0, [r7, #4]
 80184ee:	687b      	ldr	r3, [r7, #4]
 80184f0:	613b      	str	r3, [r7, #16]
 80184f2:	693b      	ldr	r3, [r7, #16]
 80184f4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80184f8:	689b      	ldr	r3, [r3, #8]
 80184fa:	f003 0306 	and.w	r3, r3, #6
 80184fe:	60fb      	str	r3, [r7, #12]
 8018500:	68fb      	ldr	r3, [r7, #12]
 8018502:	2b00      	cmp	r3, #0
 8018504:	d102      	bne.n	801850c <USB_GetDevSpeed+0x26>
 8018506:	2300      	movs	r3, #0
 8018508:	75fb      	strb	r3, [r7, #23]
 801850a:	e00a      	b.n	8018522 <USB_GetDevSpeed+0x3c>
 801850c:	68fb      	ldr	r3, [r7, #12]
 801850e:	2b02      	cmp	r3, #2
 8018510:	d002      	beq.n	8018518 <USB_GetDevSpeed+0x32>
 8018512:	68fb      	ldr	r3, [r7, #12]
 8018514:	2b06      	cmp	r3, #6
 8018516:	d102      	bne.n	801851e <USB_GetDevSpeed+0x38>
 8018518:	2302      	movs	r3, #2
 801851a:	75fb      	strb	r3, [r7, #23]
 801851c:	e001      	b.n	8018522 <USB_GetDevSpeed+0x3c>
 801851e:	230f      	movs	r3, #15
 8018520:	75fb      	strb	r3, [r7, #23]
 8018522:	7dfb      	ldrb	r3, [r7, #23]
 8018524:	4618      	mov	r0, r3
 8018526:	371c      	adds	r7, #28
 8018528:	46bd      	mov	sp, r7
 801852a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801852e:	4770      	bx	lr

08018530 <USB_ActivateEndpoint>:
 8018530:	b480      	push	{r7}
 8018532:	b085      	sub	sp, #20
 8018534:	af00      	add	r7, sp, #0
 8018536:	6078      	str	r0, [r7, #4]
 8018538:	6039      	str	r1, [r7, #0]
 801853a:	687b      	ldr	r3, [r7, #4]
 801853c:	60fb      	str	r3, [r7, #12]
 801853e:	683b      	ldr	r3, [r7, #0]
 8018540:	781b      	ldrb	r3, [r3, #0]
 8018542:	60bb      	str	r3, [r7, #8]
 8018544:	683b      	ldr	r3, [r7, #0]
 8018546:	785b      	ldrb	r3, [r3, #1]
 8018548:	2b01      	cmp	r3, #1
 801854a:	d13a      	bne.n	80185c2 <USB_ActivateEndpoint+0x92>
 801854c:	68fb      	ldr	r3, [r7, #12]
 801854e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018552:	69da      	ldr	r2, [r3, #28]
 8018554:	683b      	ldr	r3, [r7, #0]
 8018556:	781b      	ldrb	r3, [r3, #0]
 8018558:	f003 030f 	and.w	r3, r3, #15
 801855c:	2101      	movs	r1, #1
 801855e:	fa01 f303 	lsl.w	r3, r1, r3
 8018562:	b29b      	uxth	r3, r3
 8018564:	68f9      	ldr	r1, [r7, #12]
 8018566:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 801856a:	4313      	orrs	r3, r2
 801856c:	61cb      	str	r3, [r1, #28]
 801856e:	68bb      	ldr	r3, [r7, #8]
 8018570:	015a      	lsls	r2, r3, #5
 8018572:	68fb      	ldr	r3, [r7, #12]
 8018574:	4413      	add	r3, r2
 8018576:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801857a:	681b      	ldr	r3, [r3, #0]
 801857c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8018580:	2b00      	cmp	r3, #0
 8018582:	d155      	bne.n	8018630 <USB_ActivateEndpoint+0x100>
 8018584:	68bb      	ldr	r3, [r7, #8]
 8018586:	015a      	lsls	r2, r3, #5
 8018588:	68fb      	ldr	r3, [r7, #12]
 801858a:	4413      	add	r3, r2
 801858c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018590:	681a      	ldr	r2, [r3, #0]
 8018592:	683b      	ldr	r3, [r7, #0]
 8018594:	68db      	ldr	r3, [r3, #12]
 8018596:	f3c3 010a 	ubfx	r1, r3, #0, #11
 801859a:	683b      	ldr	r3, [r7, #0]
 801859c:	791b      	ldrb	r3, [r3, #4]
 801859e:	049b      	lsls	r3, r3, #18
 80185a0:	4319      	orrs	r1, r3
 80185a2:	68bb      	ldr	r3, [r7, #8]
 80185a4:	059b      	lsls	r3, r3, #22
 80185a6:	430b      	orrs	r3, r1
 80185a8:	4313      	orrs	r3, r2
 80185aa:	68ba      	ldr	r2, [r7, #8]
 80185ac:	0151      	lsls	r1, r2, #5
 80185ae:	68fa      	ldr	r2, [r7, #12]
 80185b0:	440a      	add	r2, r1
 80185b2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80185b6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80185ba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80185be:	6013      	str	r3, [r2, #0]
 80185c0:	e036      	b.n	8018630 <USB_ActivateEndpoint+0x100>
 80185c2:	68fb      	ldr	r3, [r7, #12]
 80185c4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80185c8:	69da      	ldr	r2, [r3, #28]
 80185ca:	683b      	ldr	r3, [r7, #0]
 80185cc:	781b      	ldrb	r3, [r3, #0]
 80185ce:	f003 030f 	and.w	r3, r3, #15
 80185d2:	2101      	movs	r1, #1
 80185d4:	fa01 f303 	lsl.w	r3, r1, r3
 80185d8:	041b      	lsls	r3, r3, #16
 80185da:	68f9      	ldr	r1, [r7, #12]
 80185dc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80185e0:	4313      	orrs	r3, r2
 80185e2:	61cb      	str	r3, [r1, #28]
 80185e4:	68bb      	ldr	r3, [r7, #8]
 80185e6:	015a      	lsls	r2, r3, #5
 80185e8:	68fb      	ldr	r3, [r7, #12]
 80185ea:	4413      	add	r3, r2
 80185ec:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80185f0:	681b      	ldr	r3, [r3, #0]
 80185f2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80185f6:	2b00      	cmp	r3, #0
 80185f8:	d11a      	bne.n	8018630 <USB_ActivateEndpoint+0x100>
 80185fa:	68bb      	ldr	r3, [r7, #8]
 80185fc:	015a      	lsls	r2, r3, #5
 80185fe:	68fb      	ldr	r3, [r7, #12]
 8018600:	4413      	add	r3, r2
 8018602:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018606:	681a      	ldr	r2, [r3, #0]
 8018608:	683b      	ldr	r3, [r7, #0]
 801860a:	68db      	ldr	r3, [r3, #12]
 801860c:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8018610:	683b      	ldr	r3, [r7, #0]
 8018612:	791b      	ldrb	r3, [r3, #4]
 8018614:	049b      	lsls	r3, r3, #18
 8018616:	430b      	orrs	r3, r1
 8018618:	4313      	orrs	r3, r2
 801861a:	68ba      	ldr	r2, [r7, #8]
 801861c:	0151      	lsls	r1, r2, #5
 801861e:	68fa      	ldr	r2, [r7, #12]
 8018620:	440a      	add	r2, r1
 8018622:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018626:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801862a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801862e:	6013      	str	r3, [r2, #0]
 8018630:	2300      	movs	r3, #0
 8018632:	4618      	mov	r0, r3
 8018634:	3714      	adds	r7, #20
 8018636:	46bd      	mov	sp, r7
 8018638:	f85d 7b04 	ldr.w	r7, [sp], #4
 801863c:	4770      	bx	lr
	...

08018640 <USB_DeactivateEndpoint>:
 8018640:	b480      	push	{r7}
 8018642:	b085      	sub	sp, #20
 8018644:	af00      	add	r7, sp, #0
 8018646:	6078      	str	r0, [r7, #4]
 8018648:	6039      	str	r1, [r7, #0]
 801864a:	687b      	ldr	r3, [r7, #4]
 801864c:	60fb      	str	r3, [r7, #12]
 801864e:	683b      	ldr	r3, [r7, #0]
 8018650:	781b      	ldrb	r3, [r3, #0]
 8018652:	60bb      	str	r3, [r7, #8]
 8018654:	683b      	ldr	r3, [r7, #0]
 8018656:	785b      	ldrb	r3, [r3, #1]
 8018658:	2b01      	cmp	r3, #1
 801865a:	d161      	bne.n	8018720 <USB_DeactivateEndpoint+0xe0>
 801865c:	68bb      	ldr	r3, [r7, #8]
 801865e:	015a      	lsls	r2, r3, #5
 8018660:	68fb      	ldr	r3, [r7, #12]
 8018662:	4413      	add	r3, r2
 8018664:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018668:	681b      	ldr	r3, [r3, #0]
 801866a:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801866e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018672:	d11f      	bne.n	80186b4 <USB_DeactivateEndpoint+0x74>
 8018674:	68bb      	ldr	r3, [r7, #8]
 8018676:	015a      	lsls	r2, r3, #5
 8018678:	68fb      	ldr	r3, [r7, #12]
 801867a:	4413      	add	r3, r2
 801867c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018680:	681b      	ldr	r3, [r3, #0]
 8018682:	68ba      	ldr	r2, [r7, #8]
 8018684:	0151      	lsls	r1, r2, #5
 8018686:	68fa      	ldr	r2, [r7, #12]
 8018688:	440a      	add	r2, r1
 801868a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801868e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8018692:	6013      	str	r3, [r2, #0]
 8018694:	68bb      	ldr	r3, [r7, #8]
 8018696:	015a      	lsls	r2, r3, #5
 8018698:	68fb      	ldr	r3, [r7, #12]
 801869a:	4413      	add	r3, r2
 801869c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80186a0:	681b      	ldr	r3, [r3, #0]
 80186a2:	68ba      	ldr	r2, [r7, #8]
 80186a4:	0151      	lsls	r1, r2, #5
 80186a6:	68fa      	ldr	r2, [r7, #12]
 80186a8:	440a      	add	r2, r1
 80186aa:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80186ae:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80186b2:	6013      	str	r3, [r2, #0]
 80186b4:	68fb      	ldr	r3, [r7, #12]
 80186b6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80186ba:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80186bc:	683b      	ldr	r3, [r7, #0]
 80186be:	781b      	ldrb	r3, [r3, #0]
 80186c0:	f003 030f 	and.w	r3, r3, #15
 80186c4:	2101      	movs	r1, #1
 80186c6:	fa01 f303 	lsl.w	r3, r1, r3
 80186ca:	b29b      	uxth	r3, r3
 80186cc:	43db      	mvns	r3, r3
 80186ce:	68f9      	ldr	r1, [r7, #12]
 80186d0:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80186d4:	4013      	ands	r3, r2
 80186d6:	63cb      	str	r3, [r1, #60]	; 0x3c
 80186d8:	68fb      	ldr	r3, [r7, #12]
 80186da:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80186de:	69da      	ldr	r2, [r3, #28]
 80186e0:	683b      	ldr	r3, [r7, #0]
 80186e2:	781b      	ldrb	r3, [r3, #0]
 80186e4:	f003 030f 	and.w	r3, r3, #15
 80186e8:	2101      	movs	r1, #1
 80186ea:	fa01 f303 	lsl.w	r3, r1, r3
 80186ee:	b29b      	uxth	r3, r3
 80186f0:	43db      	mvns	r3, r3
 80186f2:	68f9      	ldr	r1, [r7, #12]
 80186f4:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80186f8:	4013      	ands	r3, r2
 80186fa:	61cb      	str	r3, [r1, #28]
 80186fc:	68bb      	ldr	r3, [r7, #8]
 80186fe:	015a      	lsls	r2, r3, #5
 8018700:	68fb      	ldr	r3, [r7, #12]
 8018702:	4413      	add	r3, r2
 8018704:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018708:	681a      	ldr	r2, [r3, #0]
 801870a:	68bb      	ldr	r3, [r7, #8]
 801870c:	0159      	lsls	r1, r3, #5
 801870e:	68fb      	ldr	r3, [r7, #12]
 8018710:	440b      	add	r3, r1
 8018712:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018716:	4619      	mov	r1, r3
 8018718:	4b35      	ldr	r3, [pc, #212]	; (80187f0 <USB_DeactivateEndpoint+0x1b0>)
 801871a:	4013      	ands	r3, r2
 801871c:	600b      	str	r3, [r1, #0]
 801871e:	e060      	b.n	80187e2 <USB_DeactivateEndpoint+0x1a2>
 8018720:	68bb      	ldr	r3, [r7, #8]
 8018722:	015a      	lsls	r2, r3, #5
 8018724:	68fb      	ldr	r3, [r7, #12]
 8018726:	4413      	add	r3, r2
 8018728:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801872c:	681b      	ldr	r3, [r3, #0]
 801872e:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018732:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018736:	d11f      	bne.n	8018778 <USB_DeactivateEndpoint+0x138>
 8018738:	68bb      	ldr	r3, [r7, #8]
 801873a:	015a      	lsls	r2, r3, #5
 801873c:	68fb      	ldr	r3, [r7, #12]
 801873e:	4413      	add	r3, r2
 8018740:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018744:	681b      	ldr	r3, [r3, #0]
 8018746:	68ba      	ldr	r2, [r7, #8]
 8018748:	0151      	lsls	r1, r2, #5
 801874a:	68fa      	ldr	r2, [r7, #12]
 801874c:	440a      	add	r2, r1
 801874e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018752:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8018756:	6013      	str	r3, [r2, #0]
 8018758:	68bb      	ldr	r3, [r7, #8]
 801875a:	015a      	lsls	r2, r3, #5
 801875c:	68fb      	ldr	r3, [r7, #12]
 801875e:	4413      	add	r3, r2
 8018760:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018764:	681b      	ldr	r3, [r3, #0]
 8018766:	68ba      	ldr	r2, [r7, #8]
 8018768:	0151      	lsls	r1, r2, #5
 801876a:	68fa      	ldr	r2, [r7, #12]
 801876c:	440a      	add	r2, r1
 801876e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018772:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018776:	6013      	str	r3, [r2, #0]
 8018778:	68fb      	ldr	r3, [r7, #12]
 801877a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801877e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8018780:	683b      	ldr	r3, [r7, #0]
 8018782:	781b      	ldrb	r3, [r3, #0]
 8018784:	f003 030f 	and.w	r3, r3, #15
 8018788:	2101      	movs	r1, #1
 801878a:	fa01 f303 	lsl.w	r3, r1, r3
 801878e:	041b      	lsls	r3, r3, #16
 8018790:	43db      	mvns	r3, r3
 8018792:	68f9      	ldr	r1, [r7, #12]
 8018794:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018798:	4013      	ands	r3, r2
 801879a:	63cb      	str	r3, [r1, #60]	; 0x3c
 801879c:	68fb      	ldr	r3, [r7, #12]
 801879e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80187a2:	69da      	ldr	r2, [r3, #28]
 80187a4:	683b      	ldr	r3, [r7, #0]
 80187a6:	781b      	ldrb	r3, [r3, #0]
 80187a8:	f003 030f 	and.w	r3, r3, #15
 80187ac:	2101      	movs	r1, #1
 80187ae:	fa01 f303 	lsl.w	r3, r1, r3
 80187b2:	041b      	lsls	r3, r3, #16
 80187b4:	43db      	mvns	r3, r3
 80187b6:	68f9      	ldr	r1, [r7, #12]
 80187b8:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80187bc:	4013      	ands	r3, r2
 80187be:	61cb      	str	r3, [r1, #28]
 80187c0:	68bb      	ldr	r3, [r7, #8]
 80187c2:	015a      	lsls	r2, r3, #5
 80187c4:	68fb      	ldr	r3, [r7, #12]
 80187c6:	4413      	add	r3, r2
 80187c8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80187cc:	681a      	ldr	r2, [r3, #0]
 80187ce:	68bb      	ldr	r3, [r7, #8]
 80187d0:	0159      	lsls	r1, r3, #5
 80187d2:	68fb      	ldr	r3, [r7, #12]
 80187d4:	440b      	add	r3, r1
 80187d6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80187da:	4619      	mov	r1, r3
 80187dc:	4b05      	ldr	r3, [pc, #20]	; (80187f4 <USB_DeactivateEndpoint+0x1b4>)
 80187de:	4013      	ands	r3, r2
 80187e0:	600b      	str	r3, [r1, #0]
 80187e2:	2300      	movs	r3, #0
 80187e4:	4618      	mov	r0, r3
 80187e6:	3714      	adds	r7, #20
 80187e8:	46bd      	mov	sp, r7
 80187ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80187ee:	4770      	bx	lr
 80187f0:	ec337800 	.word	0xec337800
 80187f4:	eff37800 	.word	0xeff37800

080187f8 <USB_EPStartXfer>:
 80187f8:	b580      	push	{r7, lr}
 80187fa:	b08a      	sub	sp, #40	; 0x28
 80187fc:	af02      	add	r7, sp, #8
 80187fe:	60f8      	str	r0, [r7, #12]
 8018800:	60b9      	str	r1, [r7, #8]
 8018802:	4613      	mov	r3, r2
 8018804:	71fb      	strb	r3, [r7, #7]
 8018806:	68fb      	ldr	r3, [r7, #12]
 8018808:	61fb      	str	r3, [r7, #28]
 801880a:	68bb      	ldr	r3, [r7, #8]
 801880c:	781b      	ldrb	r3, [r3, #0]
 801880e:	61bb      	str	r3, [r7, #24]
 8018810:	68bb      	ldr	r3, [r7, #8]
 8018812:	785b      	ldrb	r3, [r3, #1]
 8018814:	2b01      	cmp	r3, #1
 8018816:	f040 815c 	bne.w	8018ad2 <USB_EPStartXfer+0x2da>
 801881a:	68bb      	ldr	r3, [r7, #8]
 801881c:	699b      	ldr	r3, [r3, #24]
 801881e:	2b00      	cmp	r3, #0
 8018820:	d132      	bne.n	8018888 <USB_EPStartXfer+0x90>
 8018822:	69bb      	ldr	r3, [r7, #24]
 8018824:	015a      	lsls	r2, r3, #5
 8018826:	69fb      	ldr	r3, [r7, #28]
 8018828:	4413      	add	r3, r2
 801882a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801882e:	691b      	ldr	r3, [r3, #16]
 8018830:	69ba      	ldr	r2, [r7, #24]
 8018832:	0151      	lsls	r1, r2, #5
 8018834:	69fa      	ldr	r2, [r7, #28]
 8018836:	440a      	add	r2, r1
 8018838:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801883c:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018840:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018844:	6113      	str	r3, [r2, #16]
 8018846:	69bb      	ldr	r3, [r7, #24]
 8018848:	015a      	lsls	r2, r3, #5
 801884a:	69fb      	ldr	r3, [r7, #28]
 801884c:	4413      	add	r3, r2
 801884e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018852:	691b      	ldr	r3, [r3, #16]
 8018854:	69ba      	ldr	r2, [r7, #24]
 8018856:	0151      	lsls	r1, r2, #5
 8018858:	69fa      	ldr	r2, [r7, #28]
 801885a:	440a      	add	r2, r1
 801885c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018860:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018864:	6113      	str	r3, [r2, #16]
 8018866:	69bb      	ldr	r3, [r7, #24]
 8018868:	015a      	lsls	r2, r3, #5
 801886a:	69fb      	ldr	r3, [r7, #28]
 801886c:	4413      	add	r3, r2
 801886e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018872:	691b      	ldr	r3, [r3, #16]
 8018874:	69ba      	ldr	r2, [r7, #24]
 8018876:	0151      	lsls	r1, r2, #5
 8018878:	69fa      	ldr	r2, [r7, #28]
 801887a:	440a      	add	r2, r1
 801887c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018880:	0cdb      	lsrs	r3, r3, #19
 8018882:	04db      	lsls	r3, r3, #19
 8018884:	6113      	str	r3, [r2, #16]
 8018886:	e074      	b.n	8018972 <USB_EPStartXfer+0x17a>
 8018888:	69bb      	ldr	r3, [r7, #24]
 801888a:	015a      	lsls	r2, r3, #5
 801888c:	69fb      	ldr	r3, [r7, #28]
 801888e:	4413      	add	r3, r2
 8018890:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018894:	691b      	ldr	r3, [r3, #16]
 8018896:	69ba      	ldr	r2, [r7, #24]
 8018898:	0151      	lsls	r1, r2, #5
 801889a:	69fa      	ldr	r2, [r7, #28]
 801889c:	440a      	add	r2, r1
 801889e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80188a2:	0cdb      	lsrs	r3, r3, #19
 80188a4:	04db      	lsls	r3, r3, #19
 80188a6:	6113      	str	r3, [r2, #16]
 80188a8:	69bb      	ldr	r3, [r7, #24]
 80188aa:	015a      	lsls	r2, r3, #5
 80188ac:	69fb      	ldr	r3, [r7, #28]
 80188ae:	4413      	add	r3, r2
 80188b0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80188b4:	691b      	ldr	r3, [r3, #16]
 80188b6:	69ba      	ldr	r2, [r7, #24]
 80188b8:	0151      	lsls	r1, r2, #5
 80188ba:	69fa      	ldr	r2, [r7, #28]
 80188bc:	440a      	add	r2, r1
 80188be:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80188c2:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 80188c6:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 80188ca:	6113      	str	r3, [r2, #16]
 80188cc:	69bb      	ldr	r3, [r7, #24]
 80188ce:	015a      	lsls	r2, r3, #5
 80188d0:	69fb      	ldr	r3, [r7, #28]
 80188d2:	4413      	add	r3, r2
 80188d4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80188d8:	691a      	ldr	r2, [r3, #16]
 80188da:	68bb      	ldr	r3, [r7, #8]
 80188dc:	6999      	ldr	r1, [r3, #24]
 80188de:	68bb      	ldr	r3, [r7, #8]
 80188e0:	68db      	ldr	r3, [r3, #12]
 80188e2:	440b      	add	r3, r1
 80188e4:	1e59      	subs	r1, r3, #1
 80188e6:	68bb      	ldr	r3, [r7, #8]
 80188e8:	68db      	ldr	r3, [r3, #12]
 80188ea:	fbb1 f3f3 	udiv	r3, r1, r3
 80188ee:	04d9      	lsls	r1, r3, #19
 80188f0:	4b9d      	ldr	r3, [pc, #628]	; (8018b68 <USB_EPStartXfer+0x370>)
 80188f2:	400b      	ands	r3, r1
 80188f4:	69b9      	ldr	r1, [r7, #24]
 80188f6:	0148      	lsls	r0, r1, #5
 80188f8:	69f9      	ldr	r1, [r7, #28]
 80188fa:	4401      	add	r1, r0
 80188fc:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8018900:	4313      	orrs	r3, r2
 8018902:	610b      	str	r3, [r1, #16]
 8018904:	69bb      	ldr	r3, [r7, #24]
 8018906:	015a      	lsls	r2, r3, #5
 8018908:	69fb      	ldr	r3, [r7, #28]
 801890a:	4413      	add	r3, r2
 801890c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018910:	691a      	ldr	r2, [r3, #16]
 8018912:	68bb      	ldr	r3, [r7, #8]
 8018914:	699b      	ldr	r3, [r3, #24]
 8018916:	f3c3 0312 	ubfx	r3, r3, #0, #19
 801891a:	69b9      	ldr	r1, [r7, #24]
 801891c:	0148      	lsls	r0, r1, #5
 801891e:	69f9      	ldr	r1, [r7, #28]
 8018920:	4401      	add	r1, r0
 8018922:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8018926:	4313      	orrs	r3, r2
 8018928:	610b      	str	r3, [r1, #16]
 801892a:	68bb      	ldr	r3, [r7, #8]
 801892c:	791b      	ldrb	r3, [r3, #4]
 801892e:	2b01      	cmp	r3, #1
 8018930:	d11f      	bne.n	8018972 <USB_EPStartXfer+0x17a>
 8018932:	69bb      	ldr	r3, [r7, #24]
 8018934:	015a      	lsls	r2, r3, #5
 8018936:	69fb      	ldr	r3, [r7, #28]
 8018938:	4413      	add	r3, r2
 801893a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801893e:	691b      	ldr	r3, [r3, #16]
 8018940:	69ba      	ldr	r2, [r7, #24]
 8018942:	0151      	lsls	r1, r2, #5
 8018944:	69fa      	ldr	r2, [r7, #28]
 8018946:	440a      	add	r2, r1
 8018948:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801894c:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 8018950:	6113      	str	r3, [r2, #16]
 8018952:	69bb      	ldr	r3, [r7, #24]
 8018954:	015a      	lsls	r2, r3, #5
 8018956:	69fb      	ldr	r3, [r7, #28]
 8018958:	4413      	add	r3, r2
 801895a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801895e:	691b      	ldr	r3, [r3, #16]
 8018960:	69ba      	ldr	r2, [r7, #24]
 8018962:	0151      	lsls	r1, r2, #5
 8018964:	69fa      	ldr	r2, [r7, #28]
 8018966:	440a      	add	r2, r1
 8018968:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801896c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018970:	6113      	str	r3, [r2, #16]
 8018972:	79fb      	ldrb	r3, [r7, #7]
 8018974:	2b01      	cmp	r3, #1
 8018976:	d14b      	bne.n	8018a10 <USB_EPStartXfer+0x218>
 8018978:	68bb      	ldr	r3, [r7, #8]
 801897a:	695b      	ldr	r3, [r3, #20]
 801897c:	2b00      	cmp	r3, #0
 801897e:	d009      	beq.n	8018994 <USB_EPStartXfer+0x19c>
 8018980:	69bb      	ldr	r3, [r7, #24]
 8018982:	015a      	lsls	r2, r3, #5
 8018984:	69fb      	ldr	r3, [r7, #28]
 8018986:	4413      	add	r3, r2
 8018988:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 801898c:	461a      	mov	r2, r3
 801898e:	68bb      	ldr	r3, [r7, #8]
 8018990:	695b      	ldr	r3, [r3, #20]
 8018992:	6153      	str	r3, [r2, #20]
 8018994:	68bb      	ldr	r3, [r7, #8]
 8018996:	791b      	ldrb	r3, [r3, #4]
 8018998:	2b01      	cmp	r3, #1
 801899a:	d128      	bne.n	80189ee <USB_EPStartXfer+0x1f6>
 801899c:	69fb      	ldr	r3, [r7, #28]
 801899e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80189a2:	689b      	ldr	r3, [r3, #8]
 80189a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80189a8:	2b00      	cmp	r3, #0
 80189aa:	d110      	bne.n	80189ce <USB_EPStartXfer+0x1d6>
 80189ac:	69bb      	ldr	r3, [r7, #24]
 80189ae:	015a      	lsls	r2, r3, #5
 80189b0:	69fb      	ldr	r3, [r7, #28]
 80189b2:	4413      	add	r3, r2
 80189b4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80189b8:	681b      	ldr	r3, [r3, #0]
 80189ba:	69ba      	ldr	r2, [r7, #24]
 80189bc:	0151      	lsls	r1, r2, #5
 80189be:	69fa      	ldr	r2, [r7, #28]
 80189c0:	440a      	add	r2, r1
 80189c2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80189c6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80189ca:	6013      	str	r3, [r2, #0]
 80189cc:	e00f      	b.n	80189ee <USB_EPStartXfer+0x1f6>
 80189ce:	69bb      	ldr	r3, [r7, #24]
 80189d0:	015a      	lsls	r2, r3, #5
 80189d2:	69fb      	ldr	r3, [r7, #28]
 80189d4:	4413      	add	r3, r2
 80189d6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80189da:	681b      	ldr	r3, [r3, #0]
 80189dc:	69ba      	ldr	r2, [r7, #24]
 80189de:	0151      	lsls	r1, r2, #5
 80189e0:	69fa      	ldr	r2, [r7, #28]
 80189e2:	440a      	add	r2, r1
 80189e4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80189e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80189ec:	6013      	str	r3, [r2, #0]
 80189ee:	69bb      	ldr	r3, [r7, #24]
 80189f0:	015a      	lsls	r2, r3, #5
 80189f2:	69fb      	ldr	r3, [r7, #28]
 80189f4:	4413      	add	r3, r2
 80189f6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80189fa:	681b      	ldr	r3, [r3, #0]
 80189fc:	69ba      	ldr	r2, [r7, #24]
 80189fe:	0151      	lsls	r1, r2, #5
 8018a00:	69fa      	ldr	r2, [r7, #28]
 8018a02:	440a      	add	r2, r1
 8018a04:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018a08:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018a0c:	6013      	str	r3, [r2, #0]
 8018a0e:	e133      	b.n	8018c78 <USB_EPStartXfer+0x480>
 8018a10:	69bb      	ldr	r3, [r7, #24]
 8018a12:	015a      	lsls	r2, r3, #5
 8018a14:	69fb      	ldr	r3, [r7, #28]
 8018a16:	4413      	add	r3, r2
 8018a18:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018a1c:	681b      	ldr	r3, [r3, #0]
 8018a1e:	69ba      	ldr	r2, [r7, #24]
 8018a20:	0151      	lsls	r1, r2, #5
 8018a22:	69fa      	ldr	r2, [r7, #28]
 8018a24:	440a      	add	r2, r1
 8018a26:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018a2a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018a2e:	6013      	str	r3, [r2, #0]
 8018a30:	68bb      	ldr	r3, [r7, #8]
 8018a32:	791b      	ldrb	r3, [r3, #4]
 8018a34:	2b01      	cmp	r3, #1
 8018a36:	d015      	beq.n	8018a64 <USB_EPStartXfer+0x26c>
 8018a38:	68bb      	ldr	r3, [r7, #8]
 8018a3a:	699b      	ldr	r3, [r3, #24]
 8018a3c:	2b00      	cmp	r3, #0
 8018a3e:	f000 811b 	beq.w	8018c78 <USB_EPStartXfer+0x480>
 8018a42:	69fb      	ldr	r3, [r7, #28]
 8018a44:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018a48:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8018a4a:	68bb      	ldr	r3, [r7, #8]
 8018a4c:	781b      	ldrb	r3, [r3, #0]
 8018a4e:	f003 030f 	and.w	r3, r3, #15
 8018a52:	2101      	movs	r1, #1
 8018a54:	fa01 f303 	lsl.w	r3, r1, r3
 8018a58:	69f9      	ldr	r1, [r7, #28]
 8018a5a:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018a5e:	4313      	orrs	r3, r2
 8018a60:	634b      	str	r3, [r1, #52]	; 0x34
 8018a62:	e109      	b.n	8018c78 <USB_EPStartXfer+0x480>
 8018a64:	69fb      	ldr	r3, [r7, #28]
 8018a66:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018a6a:	689b      	ldr	r3, [r3, #8]
 8018a6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018a70:	2b00      	cmp	r3, #0
 8018a72:	d110      	bne.n	8018a96 <USB_EPStartXfer+0x29e>
 8018a74:	69bb      	ldr	r3, [r7, #24]
 8018a76:	015a      	lsls	r2, r3, #5
 8018a78:	69fb      	ldr	r3, [r7, #28]
 8018a7a:	4413      	add	r3, r2
 8018a7c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018a80:	681b      	ldr	r3, [r3, #0]
 8018a82:	69ba      	ldr	r2, [r7, #24]
 8018a84:	0151      	lsls	r1, r2, #5
 8018a86:	69fa      	ldr	r2, [r7, #28]
 8018a88:	440a      	add	r2, r1
 8018a8a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018a8e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018a92:	6013      	str	r3, [r2, #0]
 8018a94:	e00f      	b.n	8018ab6 <USB_EPStartXfer+0x2be>
 8018a96:	69bb      	ldr	r3, [r7, #24]
 8018a98:	015a      	lsls	r2, r3, #5
 8018a9a:	69fb      	ldr	r3, [r7, #28]
 8018a9c:	4413      	add	r3, r2
 8018a9e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018aa2:	681b      	ldr	r3, [r3, #0]
 8018aa4:	69ba      	ldr	r2, [r7, #24]
 8018aa6:	0151      	lsls	r1, r2, #5
 8018aa8:	69fa      	ldr	r2, [r7, #28]
 8018aaa:	440a      	add	r2, r1
 8018aac:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018ab0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8018ab4:	6013      	str	r3, [r2, #0]
 8018ab6:	68bb      	ldr	r3, [r7, #8]
 8018ab8:	6919      	ldr	r1, [r3, #16]
 8018aba:	68bb      	ldr	r3, [r7, #8]
 8018abc:	781a      	ldrb	r2, [r3, #0]
 8018abe:	68bb      	ldr	r3, [r7, #8]
 8018ac0:	699b      	ldr	r3, [r3, #24]
 8018ac2:	b298      	uxth	r0, r3
 8018ac4:	79fb      	ldrb	r3, [r7, #7]
 8018ac6:	9300      	str	r3, [sp, #0]
 8018ac8:	4603      	mov	r3, r0
 8018aca:	68f8      	ldr	r0, [r7, #12]
 8018acc:	f000 fade 	bl	801908c <USB_WritePacket>
 8018ad0:	e0d2      	b.n	8018c78 <USB_EPStartXfer+0x480>
 8018ad2:	69bb      	ldr	r3, [r7, #24]
 8018ad4:	015a      	lsls	r2, r3, #5
 8018ad6:	69fb      	ldr	r3, [r7, #28]
 8018ad8:	4413      	add	r3, r2
 8018ada:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018ade:	691b      	ldr	r3, [r3, #16]
 8018ae0:	69ba      	ldr	r2, [r7, #24]
 8018ae2:	0151      	lsls	r1, r2, #5
 8018ae4:	69fa      	ldr	r2, [r7, #28]
 8018ae6:	440a      	add	r2, r1
 8018ae8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018aec:	0cdb      	lsrs	r3, r3, #19
 8018aee:	04db      	lsls	r3, r3, #19
 8018af0:	6113      	str	r3, [r2, #16]
 8018af2:	69bb      	ldr	r3, [r7, #24]
 8018af4:	015a      	lsls	r2, r3, #5
 8018af6:	69fb      	ldr	r3, [r7, #28]
 8018af8:	4413      	add	r3, r2
 8018afa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018afe:	691b      	ldr	r3, [r3, #16]
 8018b00:	69ba      	ldr	r2, [r7, #24]
 8018b02:	0151      	lsls	r1, r2, #5
 8018b04:	69fa      	ldr	r2, [r7, #28]
 8018b06:	440a      	add	r2, r1
 8018b08:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018b0c:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018b10:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018b14:	6113      	str	r3, [r2, #16]
 8018b16:	68bb      	ldr	r3, [r7, #8]
 8018b18:	699b      	ldr	r3, [r3, #24]
 8018b1a:	2b00      	cmp	r3, #0
 8018b1c:	d126      	bne.n	8018b6c <USB_EPStartXfer+0x374>
 8018b1e:	69bb      	ldr	r3, [r7, #24]
 8018b20:	015a      	lsls	r2, r3, #5
 8018b22:	69fb      	ldr	r3, [r7, #28]
 8018b24:	4413      	add	r3, r2
 8018b26:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018b2a:	691a      	ldr	r2, [r3, #16]
 8018b2c:	68bb      	ldr	r3, [r7, #8]
 8018b2e:	68db      	ldr	r3, [r3, #12]
 8018b30:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018b34:	69b9      	ldr	r1, [r7, #24]
 8018b36:	0148      	lsls	r0, r1, #5
 8018b38:	69f9      	ldr	r1, [r7, #28]
 8018b3a:	4401      	add	r1, r0
 8018b3c:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018b40:	4313      	orrs	r3, r2
 8018b42:	610b      	str	r3, [r1, #16]
 8018b44:	69bb      	ldr	r3, [r7, #24]
 8018b46:	015a      	lsls	r2, r3, #5
 8018b48:	69fb      	ldr	r3, [r7, #28]
 8018b4a:	4413      	add	r3, r2
 8018b4c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018b50:	691b      	ldr	r3, [r3, #16]
 8018b52:	69ba      	ldr	r2, [r7, #24]
 8018b54:	0151      	lsls	r1, r2, #5
 8018b56:	69fa      	ldr	r2, [r7, #28]
 8018b58:	440a      	add	r2, r1
 8018b5a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018b5e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018b62:	6113      	str	r3, [r2, #16]
 8018b64:	e03a      	b.n	8018bdc <USB_EPStartXfer+0x3e4>
 8018b66:	bf00      	nop
 8018b68:	1ff80000 	.word	0x1ff80000
 8018b6c:	68bb      	ldr	r3, [r7, #8]
 8018b6e:	699a      	ldr	r2, [r3, #24]
 8018b70:	68bb      	ldr	r3, [r7, #8]
 8018b72:	68db      	ldr	r3, [r3, #12]
 8018b74:	4413      	add	r3, r2
 8018b76:	1e5a      	subs	r2, r3, #1
 8018b78:	68bb      	ldr	r3, [r7, #8]
 8018b7a:	68db      	ldr	r3, [r3, #12]
 8018b7c:	fbb2 f3f3 	udiv	r3, r2, r3
 8018b80:	82fb      	strh	r3, [r7, #22]
 8018b82:	68bb      	ldr	r3, [r7, #8]
 8018b84:	68db      	ldr	r3, [r3, #12]
 8018b86:	8afa      	ldrh	r2, [r7, #22]
 8018b88:	fb03 f202 	mul.w	r2, r3, r2
 8018b8c:	68bb      	ldr	r3, [r7, #8]
 8018b8e:	61da      	str	r2, [r3, #28]
 8018b90:	69bb      	ldr	r3, [r7, #24]
 8018b92:	015a      	lsls	r2, r3, #5
 8018b94:	69fb      	ldr	r3, [r7, #28]
 8018b96:	4413      	add	r3, r2
 8018b98:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018b9c:	691a      	ldr	r2, [r3, #16]
 8018b9e:	8afb      	ldrh	r3, [r7, #22]
 8018ba0:	04d9      	lsls	r1, r3, #19
 8018ba2:	4b38      	ldr	r3, [pc, #224]	; (8018c84 <USB_EPStartXfer+0x48c>)
 8018ba4:	400b      	ands	r3, r1
 8018ba6:	69b9      	ldr	r1, [r7, #24]
 8018ba8:	0148      	lsls	r0, r1, #5
 8018baa:	69f9      	ldr	r1, [r7, #28]
 8018bac:	4401      	add	r1, r0
 8018bae:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018bb2:	4313      	orrs	r3, r2
 8018bb4:	610b      	str	r3, [r1, #16]
 8018bb6:	69bb      	ldr	r3, [r7, #24]
 8018bb8:	015a      	lsls	r2, r3, #5
 8018bba:	69fb      	ldr	r3, [r7, #28]
 8018bbc:	4413      	add	r3, r2
 8018bbe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018bc2:	691a      	ldr	r2, [r3, #16]
 8018bc4:	68bb      	ldr	r3, [r7, #8]
 8018bc6:	69db      	ldr	r3, [r3, #28]
 8018bc8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018bcc:	69b9      	ldr	r1, [r7, #24]
 8018bce:	0148      	lsls	r0, r1, #5
 8018bd0:	69f9      	ldr	r1, [r7, #28]
 8018bd2:	4401      	add	r1, r0
 8018bd4:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018bd8:	4313      	orrs	r3, r2
 8018bda:	610b      	str	r3, [r1, #16]
 8018bdc:	79fb      	ldrb	r3, [r7, #7]
 8018bde:	2b01      	cmp	r3, #1
 8018be0:	d10d      	bne.n	8018bfe <USB_EPStartXfer+0x406>
 8018be2:	68bb      	ldr	r3, [r7, #8]
 8018be4:	691b      	ldr	r3, [r3, #16]
 8018be6:	2b00      	cmp	r3, #0
 8018be8:	d009      	beq.n	8018bfe <USB_EPStartXfer+0x406>
 8018bea:	68bb      	ldr	r3, [r7, #8]
 8018bec:	6919      	ldr	r1, [r3, #16]
 8018bee:	69bb      	ldr	r3, [r7, #24]
 8018bf0:	015a      	lsls	r2, r3, #5
 8018bf2:	69fb      	ldr	r3, [r7, #28]
 8018bf4:	4413      	add	r3, r2
 8018bf6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018bfa:	460a      	mov	r2, r1
 8018bfc:	615a      	str	r2, [r3, #20]
 8018bfe:	68bb      	ldr	r3, [r7, #8]
 8018c00:	791b      	ldrb	r3, [r3, #4]
 8018c02:	2b01      	cmp	r3, #1
 8018c04:	d128      	bne.n	8018c58 <USB_EPStartXfer+0x460>
 8018c06:	69fb      	ldr	r3, [r7, #28]
 8018c08:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018c0c:	689b      	ldr	r3, [r3, #8]
 8018c0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018c12:	2b00      	cmp	r3, #0
 8018c14:	d110      	bne.n	8018c38 <USB_EPStartXfer+0x440>
 8018c16:	69bb      	ldr	r3, [r7, #24]
 8018c18:	015a      	lsls	r2, r3, #5
 8018c1a:	69fb      	ldr	r3, [r7, #28]
 8018c1c:	4413      	add	r3, r2
 8018c1e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018c22:	681b      	ldr	r3, [r3, #0]
 8018c24:	69ba      	ldr	r2, [r7, #24]
 8018c26:	0151      	lsls	r1, r2, #5
 8018c28:	69fa      	ldr	r2, [r7, #28]
 8018c2a:	440a      	add	r2, r1
 8018c2c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018c30:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8018c34:	6013      	str	r3, [r2, #0]
 8018c36:	e00f      	b.n	8018c58 <USB_EPStartXfer+0x460>
 8018c38:	69bb      	ldr	r3, [r7, #24]
 8018c3a:	015a      	lsls	r2, r3, #5
 8018c3c:	69fb      	ldr	r3, [r7, #28]
 8018c3e:	4413      	add	r3, r2
 8018c40:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018c44:	681b      	ldr	r3, [r3, #0]
 8018c46:	69ba      	ldr	r2, [r7, #24]
 8018c48:	0151      	lsls	r1, r2, #5
 8018c4a:	69fa      	ldr	r2, [r7, #28]
 8018c4c:	440a      	add	r2, r1
 8018c4e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018c52:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8018c56:	6013      	str	r3, [r2, #0]
 8018c58:	69bb      	ldr	r3, [r7, #24]
 8018c5a:	015a      	lsls	r2, r3, #5
 8018c5c:	69fb      	ldr	r3, [r7, #28]
 8018c5e:	4413      	add	r3, r2
 8018c60:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018c64:	681b      	ldr	r3, [r3, #0]
 8018c66:	69ba      	ldr	r2, [r7, #24]
 8018c68:	0151      	lsls	r1, r2, #5
 8018c6a:	69fa      	ldr	r2, [r7, #28]
 8018c6c:	440a      	add	r2, r1
 8018c6e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018c72:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018c76:	6013      	str	r3, [r2, #0]
 8018c78:	2300      	movs	r3, #0
 8018c7a:	4618      	mov	r0, r3
 8018c7c:	3720      	adds	r7, #32
 8018c7e:	46bd      	mov	sp, r7
 8018c80:	bd80      	pop	{r7, pc}
 8018c82:	bf00      	nop
 8018c84:	1ff80000 	.word	0x1ff80000

08018c88 <USB_EP0StartXfer>:
 8018c88:	b480      	push	{r7}
 8018c8a:	b087      	sub	sp, #28
 8018c8c:	af00      	add	r7, sp, #0
 8018c8e:	60f8      	str	r0, [r7, #12]
 8018c90:	60b9      	str	r1, [r7, #8]
 8018c92:	4613      	mov	r3, r2
 8018c94:	71fb      	strb	r3, [r7, #7]
 8018c96:	68fb      	ldr	r3, [r7, #12]
 8018c98:	617b      	str	r3, [r7, #20]
 8018c9a:	68bb      	ldr	r3, [r7, #8]
 8018c9c:	781b      	ldrb	r3, [r3, #0]
 8018c9e:	613b      	str	r3, [r7, #16]
 8018ca0:	68bb      	ldr	r3, [r7, #8]
 8018ca2:	785b      	ldrb	r3, [r3, #1]
 8018ca4:	2b01      	cmp	r3, #1
 8018ca6:	f040 80ce 	bne.w	8018e46 <USB_EP0StartXfer+0x1be>
 8018caa:	68bb      	ldr	r3, [r7, #8]
 8018cac:	699b      	ldr	r3, [r3, #24]
 8018cae:	2b00      	cmp	r3, #0
 8018cb0:	d132      	bne.n	8018d18 <USB_EP0StartXfer+0x90>
 8018cb2:	693b      	ldr	r3, [r7, #16]
 8018cb4:	015a      	lsls	r2, r3, #5
 8018cb6:	697b      	ldr	r3, [r7, #20]
 8018cb8:	4413      	add	r3, r2
 8018cba:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018cbe:	691b      	ldr	r3, [r3, #16]
 8018cc0:	693a      	ldr	r2, [r7, #16]
 8018cc2:	0151      	lsls	r1, r2, #5
 8018cc4:	697a      	ldr	r2, [r7, #20]
 8018cc6:	440a      	add	r2, r1
 8018cc8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018ccc:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018cd0:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018cd4:	6113      	str	r3, [r2, #16]
 8018cd6:	693b      	ldr	r3, [r7, #16]
 8018cd8:	015a      	lsls	r2, r3, #5
 8018cda:	697b      	ldr	r3, [r7, #20]
 8018cdc:	4413      	add	r3, r2
 8018cde:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018ce2:	691b      	ldr	r3, [r3, #16]
 8018ce4:	693a      	ldr	r2, [r7, #16]
 8018ce6:	0151      	lsls	r1, r2, #5
 8018ce8:	697a      	ldr	r2, [r7, #20]
 8018cea:	440a      	add	r2, r1
 8018cec:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018cf0:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018cf4:	6113      	str	r3, [r2, #16]
 8018cf6:	693b      	ldr	r3, [r7, #16]
 8018cf8:	015a      	lsls	r2, r3, #5
 8018cfa:	697b      	ldr	r3, [r7, #20]
 8018cfc:	4413      	add	r3, r2
 8018cfe:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018d02:	691b      	ldr	r3, [r3, #16]
 8018d04:	693a      	ldr	r2, [r7, #16]
 8018d06:	0151      	lsls	r1, r2, #5
 8018d08:	697a      	ldr	r2, [r7, #20]
 8018d0a:	440a      	add	r2, r1
 8018d0c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018d10:	0cdb      	lsrs	r3, r3, #19
 8018d12:	04db      	lsls	r3, r3, #19
 8018d14:	6113      	str	r3, [r2, #16]
 8018d16:	e04e      	b.n	8018db6 <USB_EP0StartXfer+0x12e>
 8018d18:	693b      	ldr	r3, [r7, #16]
 8018d1a:	015a      	lsls	r2, r3, #5
 8018d1c:	697b      	ldr	r3, [r7, #20]
 8018d1e:	4413      	add	r3, r2
 8018d20:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018d24:	691b      	ldr	r3, [r3, #16]
 8018d26:	693a      	ldr	r2, [r7, #16]
 8018d28:	0151      	lsls	r1, r2, #5
 8018d2a:	697a      	ldr	r2, [r7, #20]
 8018d2c:	440a      	add	r2, r1
 8018d2e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018d32:	0cdb      	lsrs	r3, r3, #19
 8018d34:	04db      	lsls	r3, r3, #19
 8018d36:	6113      	str	r3, [r2, #16]
 8018d38:	693b      	ldr	r3, [r7, #16]
 8018d3a:	015a      	lsls	r2, r3, #5
 8018d3c:	697b      	ldr	r3, [r7, #20]
 8018d3e:	4413      	add	r3, r2
 8018d40:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018d44:	691b      	ldr	r3, [r3, #16]
 8018d46:	693a      	ldr	r2, [r7, #16]
 8018d48:	0151      	lsls	r1, r2, #5
 8018d4a:	697a      	ldr	r2, [r7, #20]
 8018d4c:	440a      	add	r2, r1
 8018d4e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018d52:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018d56:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018d5a:	6113      	str	r3, [r2, #16]
 8018d5c:	68bb      	ldr	r3, [r7, #8]
 8018d5e:	699a      	ldr	r2, [r3, #24]
 8018d60:	68bb      	ldr	r3, [r7, #8]
 8018d62:	68db      	ldr	r3, [r3, #12]
 8018d64:	429a      	cmp	r2, r3
 8018d66:	d903      	bls.n	8018d70 <USB_EP0StartXfer+0xe8>
 8018d68:	68bb      	ldr	r3, [r7, #8]
 8018d6a:	68da      	ldr	r2, [r3, #12]
 8018d6c:	68bb      	ldr	r3, [r7, #8]
 8018d6e:	619a      	str	r2, [r3, #24]
 8018d70:	693b      	ldr	r3, [r7, #16]
 8018d72:	015a      	lsls	r2, r3, #5
 8018d74:	697b      	ldr	r3, [r7, #20]
 8018d76:	4413      	add	r3, r2
 8018d78:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018d7c:	691b      	ldr	r3, [r3, #16]
 8018d7e:	693a      	ldr	r2, [r7, #16]
 8018d80:	0151      	lsls	r1, r2, #5
 8018d82:	697a      	ldr	r2, [r7, #20]
 8018d84:	440a      	add	r2, r1
 8018d86:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018d8a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018d8e:	6113      	str	r3, [r2, #16]
 8018d90:	693b      	ldr	r3, [r7, #16]
 8018d92:	015a      	lsls	r2, r3, #5
 8018d94:	697b      	ldr	r3, [r7, #20]
 8018d96:	4413      	add	r3, r2
 8018d98:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018d9c:	691a      	ldr	r2, [r3, #16]
 8018d9e:	68bb      	ldr	r3, [r7, #8]
 8018da0:	699b      	ldr	r3, [r3, #24]
 8018da2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018da6:	6939      	ldr	r1, [r7, #16]
 8018da8:	0148      	lsls	r0, r1, #5
 8018daa:	6979      	ldr	r1, [r7, #20]
 8018dac:	4401      	add	r1, r0
 8018dae:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 8018db2:	4313      	orrs	r3, r2
 8018db4:	610b      	str	r3, [r1, #16]
 8018db6:	79fb      	ldrb	r3, [r7, #7]
 8018db8:	2b01      	cmp	r3, #1
 8018dba:	d11e      	bne.n	8018dfa <USB_EP0StartXfer+0x172>
 8018dbc:	68bb      	ldr	r3, [r7, #8]
 8018dbe:	695b      	ldr	r3, [r3, #20]
 8018dc0:	2b00      	cmp	r3, #0
 8018dc2:	d009      	beq.n	8018dd8 <USB_EP0StartXfer+0x150>
 8018dc4:	693b      	ldr	r3, [r7, #16]
 8018dc6:	015a      	lsls	r2, r3, #5
 8018dc8:	697b      	ldr	r3, [r7, #20]
 8018dca:	4413      	add	r3, r2
 8018dcc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018dd0:	461a      	mov	r2, r3
 8018dd2:	68bb      	ldr	r3, [r7, #8]
 8018dd4:	695b      	ldr	r3, [r3, #20]
 8018dd6:	6153      	str	r3, [r2, #20]
 8018dd8:	693b      	ldr	r3, [r7, #16]
 8018dda:	015a      	lsls	r2, r3, #5
 8018ddc:	697b      	ldr	r3, [r7, #20]
 8018dde:	4413      	add	r3, r2
 8018de0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018de4:	681b      	ldr	r3, [r3, #0]
 8018de6:	693a      	ldr	r2, [r7, #16]
 8018de8:	0151      	lsls	r1, r2, #5
 8018dea:	697a      	ldr	r2, [r7, #20]
 8018dec:	440a      	add	r2, r1
 8018dee:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018df2:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018df6:	6013      	str	r3, [r2, #0]
 8018df8:	e097      	b.n	8018f2a <USB_EP0StartXfer+0x2a2>
 8018dfa:	693b      	ldr	r3, [r7, #16]
 8018dfc:	015a      	lsls	r2, r3, #5
 8018dfe:	697b      	ldr	r3, [r7, #20]
 8018e00:	4413      	add	r3, r2
 8018e02:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018e06:	681b      	ldr	r3, [r3, #0]
 8018e08:	693a      	ldr	r2, [r7, #16]
 8018e0a:	0151      	lsls	r1, r2, #5
 8018e0c:	697a      	ldr	r2, [r7, #20]
 8018e0e:	440a      	add	r2, r1
 8018e10:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018e14:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018e18:	6013      	str	r3, [r2, #0]
 8018e1a:	68bb      	ldr	r3, [r7, #8]
 8018e1c:	699b      	ldr	r3, [r3, #24]
 8018e1e:	2b00      	cmp	r3, #0
 8018e20:	f000 8083 	beq.w	8018f2a <USB_EP0StartXfer+0x2a2>
 8018e24:	697b      	ldr	r3, [r7, #20]
 8018e26:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8018e2a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8018e2c:	68bb      	ldr	r3, [r7, #8]
 8018e2e:	781b      	ldrb	r3, [r3, #0]
 8018e30:	f003 030f 	and.w	r3, r3, #15
 8018e34:	2101      	movs	r1, #1
 8018e36:	fa01 f303 	lsl.w	r3, r1, r3
 8018e3a:	6979      	ldr	r1, [r7, #20]
 8018e3c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8018e40:	4313      	orrs	r3, r2
 8018e42:	634b      	str	r3, [r1, #52]	; 0x34
 8018e44:	e071      	b.n	8018f2a <USB_EP0StartXfer+0x2a2>
 8018e46:	693b      	ldr	r3, [r7, #16]
 8018e48:	015a      	lsls	r2, r3, #5
 8018e4a:	697b      	ldr	r3, [r7, #20]
 8018e4c:	4413      	add	r3, r2
 8018e4e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018e52:	691b      	ldr	r3, [r3, #16]
 8018e54:	693a      	ldr	r2, [r7, #16]
 8018e56:	0151      	lsls	r1, r2, #5
 8018e58:	697a      	ldr	r2, [r7, #20]
 8018e5a:	440a      	add	r2, r1
 8018e5c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018e60:	0cdb      	lsrs	r3, r3, #19
 8018e62:	04db      	lsls	r3, r3, #19
 8018e64:	6113      	str	r3, [r2, #16]
 8018e66:	693b      	ldr	r3, [r7, #16]
 8018e68:	015a      	lsls	r2, r3, #5
 8018e6a:	697b      	ldr	r3, [r7, #20]
 8018e6c:	4413      	add	r3, r2
 8018e6e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018e72:	691b      	ldr	r3, [r3, #16]
 8018e74:	693a      	ldr	r2, [r7, #16]
 8018e76:	0151      	lsls	r1, r2, #5
 8018e78:	697a      	ldr	r2, [r7, #20]
 8018e7a:	440a      	add	r2, r1
 8018e7c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018e80:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 8018e84:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 8018e88:	6113      	str	r3, [r2, #16]
 8018e8a:	68bb      	ldr	r3, [r7, #8]
 8018e8c:	699b      	ldr	r3, [r3, #24]
 8018e8e:	2b00      	cmp	r3, #0
 8018e90:	d003      	beq.n	8018e9a <USB_EP0StartXfer+0x212>
 8018e92:	68bb      	ldr	r3, [r7, #8]
 8018e94:	68da      	ldr	r2, [r3, #12]
 8018e96:	68bb      	ldr	r3, [r7, #8]
 8018e98:	619a      	str	r2, [r3, #24]
 8018e9a:	68bb      	ldr	r3, [r7, #8]
 8018e9c:	68da      	ldr	r2, [r3, #12]
 8018e9e:	68bb      	ldr	r3, [r7, #8]
 8018ea0:	61da      	str	r2, [r3, #28]
 8018ea2:	693b      	ldr	r3, [r7, #16]
 8018ea4:	015a      	lsls	r2, r3, #5
 8018ea6:	697b      	ldr	r3, [r7, #20]
 8018ea8:	4413      	add	r3, r2
 8018eaa:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018eae:	691b      	ldr	r3, [r3, #16]
 8018eb0:	693a      	ldr	r2, [r7, #16]
 8018eb2:	0151      	lsls	r1, r2, #5
 8018eb4:	697a      	ldr	r2, [r7, #20]
 8018eb6:	440a      	add	r2, r1
 8018eb8:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018ebc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8018ec0:	6113      	str	r3, [r2, #16]
 8018ec2:	693b      	ldr	r3, [r7, #16]
 8018ec4:	015a      	lsls	r2, r3, #5
 8018ec6:	697b      	ldr	r3, [r7, #20]
 8018ec8:	4413      	add	r3, r2
 8018eca:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018ece:	691a      	ldr	r2, [r3, #16]
 8018ed0:	68bb      	ldr	r3, [r7, #8]
 8018ed2:	69db      	ldr	r3, [r3, #28]
 8018ed4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8018ed8:	6939      	ldr	r1, [r7, #16]
 8018eda:	0148      	lsls	r0, r1, #5
 8018edc:	6979      	ldr	r1, [r7, #20]
 8018ede:	4401      	add	r1, r0
 8018ee0:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8018ee4:	4313      	orrs	r3, r2
 8018ee6:	610b      	str	r3, [r1, #16]
 8018ee8:	79fb      	ldrb	r3, [r7, #7]
 8018eea:	2b01      	cmp	r3, #1
 8018eec:	d10d      	bne.n	8018f0a <USB_EP0StartXfer+0x282>
 8018eee:	68bb      	ldr	r3, [r7, #8]
 8018ef0:	691b      	ldr	r3, [r3, #16]
 8018ef2:	2b00      	cmp	r3, #0
 8018ef4:	d009      	beq.n	8018f0a <USB_EP0StartXfer+0x282>
 8018ef6:	68bb      	ldr	r3, [r7, #8]
 8018ef8:	6919      	ldr	r1, [r3, #16]
 8018efa:	693b      	ldr	r3, [r7, #16]
 8018efc:	015a      	lsls	r2, r3, #5
 8018efe:	697b      	ldr	r3, [r7, #20]
 8018f00:	4413      	add	r3, r2
 8018f02:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018f06:	460a      	mov	r2, r1
 8018f08:	615a      	str	r2, [r3, #20]
 8018f0a:	693b      	ldr	r3, [r7, #16]
 8018f0c:	015a      	lsls	r2, r3, #5
 8018f0e:	697b      	ldr	r3, [r7, #20]
 8018f10:	4413      	add	r3, r2
 8018f12:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018f16:	681b      	ldr	r3, [r3, #0]
 8018f18:	693a      	ldr	r2, [r7, #16]
 8018f1a:	0151      	lsls	r1, r2, #5
 8018f1c:	697a      	ldr	r2, [r7, #20]
 8018f1e:	440a      	add	r2, r1
 8018f20:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8018f24:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8018f28:	6013      	str	r3, [r2, #0]
 8018f2a:	2300      	movs	r3, #0
 8018f2c:	4618      	mov	r0, r3
 8018f2e:	371c      	adds	r7, #28
 8018f30:	46bd      	mov	sp, r7
 8018f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f36:	4770      	bx	lr

08018f38 <USB_EPStopXfer>:
 8018f38:	b480      	push	{r7}
 8018f3a:	b087      	sub	sp, #28
 8018f3c:	af00      	add	r7, sp, #0
 8018f3e:	6078      	str	r0, [r7, #4]
 8018f40:	6039      	str	r1, [r7, #0]
 8018f42:	2300      	movs	r3, #0
 8018f44:	60fb      	str	r3, [r7, #12]
 8018f46:	2300      	movs	r3, #0
 8018f48:	75fb      	strb	r3, [r7, #23]
 8018f4a:	687b      	ldr	r3, [r7, #4]
 8018f4c:	613b      	str	r3, [r7, #16]
 8018f4e:	683b      	ldr	r3, [r7, #0]
 8018f50:	785b      	ldrb	r3, [r3, #1]
 8018f52:	2b01      	cmp	r3, #1
 8018f54:	d14a      	bne.n	8018fec <USB_EPStopXfer+0xb4>
 8018f56:	683b      	ldr	r3, [r7, #0]
 8018f58:	781b      	ldrb	r3, [r3, #0]
 8018f5a:	015a      	lsls	r2, r3, #5
 8018f5c:	693b      	ldr	r3, [r7, #16]
 8018f5e:	4413      	add	r3, r2
 8018f60:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018f64:	681b      	ldr	r3, [r3, #0]
 8018f66:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018f6a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018f6e:	f040 8086 	bne.w	801907e <USB_EPStopXfer+0x146>
 8018f72:	683b      	ldr	r3, [r7, #0]
 8018f74:	781b      	ldrb	r3, [r3, #0]
 8018f76:	015a      	lsls	r2, r3, #5
 8018f78:	693b      	ldr	r3, [r7, #16]
 8018f7a:	4413      	add	r3, r2
 8018f7c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018f80:	681b      	ldr	r3, [r3, #0]
 8018f82:	683a      	ldr	r2, [r7, #0]
 8018f84:	7812      	ldrb	r2, [r2, #0]
 8018f86:	0151      	lsls	r1, r2, #5
 8018f88:	693a      	ldr	r2, [r7, #16]
 8018f8a:	440a      	add	r2, r1
 8018f8c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018f90:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8018f94:	6013      	str	r3, [r2, #0]
 8018f96:	683b      	ldr	r3, [r7, #0]
 8018f98:	781b      	ldrb	r3, [r3, #0]
 8018f9a:	015a      	lsls	r2, r3, #5
 8018f9c:	693b      	ldr	r3, [r7, #16]
 8018f9e:	4413      	add	r3, r2
 8018fa0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018fa4:	681b      	ldr	r3, [r3, #0]
 8018fa6:	683a      	ldr	r2, [r7, #0]
 8018fa8:	7812      	ldrb	r2, [r2, #0]
 8018faa:	0151      	lsls	r1, r2, #5
 8018fac:	693a      	ldr	r2, [r7, #16]
 8018fae:	440a      	add	r2, r1
 8018fb0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8018fb4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8018fb8:	6013      	str	r3, [r2, #0]
 8018fba:	68fb      	ldr	r3, [r7, #12]
 8018fbc:	3301      	adds	r3, #1
 8018fbe:	60fb      	str	r3, [r7, #12]
 8018fc0:	68fb      	ldr	r3, [r7, #12]
 8018fc2:	f242 7210 	movw	r2, #10000	; 0x2710
 8018fc6:	4293      	cmp	r3, r2
 8018fc8:	d902      	bls.n	8018fd0 <USB_EPStopXfer+0x98>
 8018fca:	2301      	movs	r3, #1
 8018fcc:	75fb      	strb	r3, [r7, #23]
 8018fce:	e056      	b.n	801907e <USB_EPStopXfer+0x146>
 8018fd0:	683b      	ldr	r3, [r7, #0]
 8018fd2:	781b      	ldrb	r3, [r3, #0]
 8018fd4:	015a      	lsls	r2, r3, #5
 8018fd6:	693b      	ldr	r3, [r7, #16]
 8018fd8:	4413      	add	r3, r2
 8018fda:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8018fde:	681b      	ldr	r3, [r3, #0]
 8018fe0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8018fe4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8018fe8:	d0e7      	beq.n	8018fba <USB_EPStopXfer+0x82>
 8018fea:	e048      	b.n	801907e <USB_EPStopXfer+0x146>
 8018fec:	683b      	ldr	r3, [r7, #0]
 8018fee:	781b      	ldrb	r3, [r3, #0]
 8018ff0:	015a      	lsls	r2, r3, #5
 8018ff2:	693b      	ldr	r3, [r7, #16]
 8018ff4:	4413      	add	r3, r2
 8018ff6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8018ffa:	681b      	ldr	r3, [r3, #0]
 8018ffc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8019000:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8019004:	d13b      	bne.n	801907e <USB_EPStopXfer+0x146>
 8019006:	683b      	ldr	r3, [r7, #0]
 8019008:	781b      	ldrb	r3, [r3, #0]
 801900a:	015a      	lsls	r2, r3, #5
 801900c:	693b      	ldr	r3, [r7, #16]
 801900e:	4413      	add	r3, r2
 8019010:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019014:	681b      	ldr	r3, [r3, #0]
 8019016:	683a      	ldr	r2, [r7, #0]
 8019018:	7812      	ldrb	r2, [r2, #0]
 801901a:	0151      	lsls	r1, r2, #5
 801901c:	693a      	ldr	r2, [r7, #16]
 801901e:	440a      	add	r2, r1
 8019020:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019024:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8019028:	6013      	str	r3, [r2, #0]
 801902a:	683b      	ldr	r3, [r7, #0]
 801902c:	781b      	ldrb	r3, [r3, #0]
 801902e:	015a      	lsls	r2, r3, #5
 8019030:	693b      	ldr	r3, [r7, #16]
 8019032:	4413      	add	r3, r2
 8019034:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019038:	681b      	ldr	r3, [r3, #0]
 801903a:	683a      	ldr	r2, [r7, #0]
 801903c:	7812      	ldrb	r2, [r2, #0]
 801903e:	0151      	lsls	r1, r2, #5
 8019040:	693a      	ldr	r2, [r7, #16]
 8019042:	440a      	add	r2, r1
 8019044:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019048:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 801904c:	6013      	str	r3, [r2, #0]
 801904e:	68fb      	ldr	r3, [r7, #12]
 8019050:	3301      	adds	r3, #1
 8019052:	60fb      	str	r3, [r7, #12]
 8019054:	68fb      	ldr	r3, [r7, #12]
 8019056:	f242 7210 	movw	r2, #10000	; 0x2710
 801905a:	4293      	cmp	r3, r2
 801905c:	d902      	bls.n	8019064 <USB_EPStopXfer+0x12c>
 801905e:	2301      	movs	r3, #1
 8019060:	75fb      	strb	r3, [r7, #23]
 8019062:	e00c      	b.n	801907e <USB_EPStopXfer+0x146>
 8019064:	683b      	ldr	r3, [r7, #0]
 8019066:	781b      	ldrb	r3, [r3, #0]
 8019068:	015a      	lsls	r2, r3, #5
 801906a:	693b      	ldr	r3, [r7, #16]
 801906c:	4413      	add	r3, r2
 801906e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019072:	681b      	ldr	r3, [r3, #0]
 8019074:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8019078:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 801907c:	d0e7      	beq.n	801904e <USB_EPStopXfer+0x116>
 801907e:	7dfb      	ldrb	r3, [r7, #23]
 8019080:	4618      	mov	r0, r3
 8019082:	371c      	adds	r7, #28
 8019084:	46bd      	mov	sp, r7
 8019086:	f85d 7b04 	ldr.w	r7, [sp], #4
 801908a:	4770      	bx	lr

0801908c <USB_WritePacket>:
 801908c:	b480      	push	{r7}
 801908e:	b089      	sub	sp, #36	; 0x24
 8019090:	af00      	add	r7, sp, #0
 8019092:	60f8      	str	r0, [r7, #12]
 8019094:	60b9      	str	r1, [r7, #8]
 8019096:	4611      	mov	r1, r2
 8019098:	461a      	mov	r2, r3
 801909a:	460b      	mov	r3, r1
 801909c:	71fb      	strb	r3, [r7, #7]
 801909e:	4613      	mov	r3, r2
 80190a0:	80bb      	strh	r3, [r7, #4]
 80190a2:	68fb      	ldr	r3, [r7, #12]
 80190a4:	617b      	str	r3, [r7, #20]
 80190a6:	68bb      	ldr	r3, [r7, #8]
 80190a8:	61fb      	str	r3, [r7, #28]
 80190aa:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80190ae:	2b00      	cmp	r3, #0
 80190b0:	d123      	bne.n	80190fa <USB_WritePacket+0x6e>
 80190b2:	88bb      	ldrh	r3, [r7, #4]
 80190b4:	3303      	adds	r3, #3
 80190b6:	089b      	lsrs	r3, r3, #2
 80190b8:	613b      	str	r3, [r7, #16]
 80190ba:	2300      	movs	r3, #0
 80190bc:	61bb      	str	r3, [r7, #24]
 80190be:	e018      	b.n	80190f2 <USB_WritePacket+0x66>
 80190c0:	79fb      	ldrb	r3, [r7, #7]
 80190c2:	031a      	lsls	r2, r3, #12
 80190c4:	697b      	ldr	r3, [r7, #20]
 80190c6:	4413      	add	r3, r2
 80190c8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80190cc:	461a      	mov	r2, r3
 80190ce:	69fb      	ldr	r3, [r7, #28]
 80190d0:	681b      	ldr	r3, [r3, #0]
 80190d2:	6013      	str	r3, [r2, #0]
 80190d4:	69fb      	ldr	r3, [r7, #28]
 80190d6:	3301      	adds	r3, #1
 80190d8:	61fb      	str	r3, [r7, #28]
 80190da:	69fb      	ldr	r3, [r7, #28]
 80190dc:	3301      	adds	r3, #1
 80190de:	61fb      	str	r3, [r7, #28]
 80190e0:	69fb      	ldr	r3, [r7, #28]
 80190e2:	3301      	adds	r3, #1
 80190e4:	61fb      	str	r3, [r7, #28]
 80190e6:	69fb      	ldr	r3, [r7, #28]
 80190e8:	3301      	adds	r3, #1
 80190ea:	61fb      	str	r3, [r7, #28]
 80190ec:	69bb      	ldr	r3, [r7, #24]
 80190ee:	3301      	adds	r3, #1
 80190f0:	61bb      	str	r3, [r7, #24]
 80190f2:	69ba      	ldr	r2, [r7, #24]
 80190f4:	693b      	ldr	r3, [r7, #16]
 80190f6:	429a      	cmp	r2, r3
 80190f8:	d3e2      	bcc.n	80190c0 <USB_WritePacket+0x34>
 80190fa:	2300      	movs	r3, #0
 80190fc:	4618      	mov	r0, r3
 80190fe:	3724      	adds	r7, #36	; 0x24
 8019100:	46bd      	mov	sp, r7
 8019102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019106:	4770      	bx	lr

08019108 <USB_ReadPacket>:
 8019108:	b480      	push	{r7}
 801910a:	b08b      	sub	sp, #44	; 0x2c
 801910c:	af00      	add	r7, sp, #0
 801910e:	60f8      	str	r0, [r7, #12]
 8019110:	60b9      	str	r1, [r7, #8]
 8019112:	4613      	mov	r3, r2
 8019114:	80fb      	strh	r3, [r7, #6]
 8019116:	68fb      	ldr	r3, [r7, #12]
 8019118:	61bb      	str	r3, [r7, #24]
 801911a:	68bb      	ldr	r3, [r7, #8]
 801911c:	627b      	str	r3, [r7, #36]	; 0x24
 801911e:	88fb      	ldrh	r3, [r7, #6]
 8019120:	089b      	lsrs	r3, r3, #2
 8019122:	b29b      	uxth	r3, r3
 8019124:	617b      	str	r3, [r7, #20]
 8019126:	88fb      	ldrh	r3, [r7, #6]
 8019128:	f003 0303 	and.w	r3, r3, #3
 801912c:	83fb      	strh	r3, [r7, #30]
 801912e:	2300      	movs	r3, #0
 8019130:	623b      	str	r3, [r7, #32]
 8019132:	e014      	b.n	801915e <USB_ReadPacket+0x56>
 8019134:	69bb      	ldr	r3, [r7, #24]
 8019136:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801913a:	681a      	ldr	r2, [r3, #0]
 801913c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801913e:	601a      	str	r2, [r3, #0]
 8019140:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019142:	3301      	adds	r3, #1
 8019144:	627b      	str	r3, [r7, #36]	; 0x24
 8019146:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019148:	3301      	adds	r3, #1
 801914a:	627b      	str	r3, [r7, #36]	; 0x24
 801914c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801914e:	3301      	adds	r3, #1
 8019150:	627b      	str	r3, [r7, #36]	; 0x24
 8019152:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019154:	3301      	adds	r3, #1
 8019156:	627b      	str	r3, [r7, #36]	; 0x24
 8019158:	6a3b      	ldr	r3, [r7, #32]
 801915a:	3301      	adds	r3, #1
 801915c:	623b      	str	r3, [r7, #32]
 801915e:	6a3a      	ldr	r2, [r7, #32]
 8019160:	697b      	ldr	r3, [r7, #20]
 8019162:	429a      	cmp	r2, r3
 8019164:	d3e6      	bcc.n	8019134 <USB_ReadPacket+0x2c>
 8019166:	8bfb      	ldrh	r3, [r7, #30]
 8019168:	2b00      	cmp	r3, #0
 801916a:	d01e      	beq.n	80191aa <USB_ReadPacket+0xa2>
 801916c:	2300      	movs	r3, #0
 801916e:	623b      	str	r3, [r7, #32]
 8019170:	69bb      	ldr	r3, [r7, #24]
 8019172:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8019176:	461a      	mov	r2, r3
 8019178:	f107 0310 	add.w	r3, r7, #16
 801917c:	6812      	ldr	r2, [r2, #0]
 801917e:	601a      	str	r2, [r3, #0]
 8019180:	693a      	ldr	r2, [r7, #16]
 8019182:	6a3b      	ldr	r3, [r7, #32]
 8019184:	b2db      	uxtb	r3, r3
 8019186:	00db      	lsls	r3, r3, #3
 8019188:	fa22 f303 	lsr.w	r3, r2, r3
 801918c:	b2da      	uxtb	r2, r3
 801918e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8019190:	701a      	strb	r2, [r3, #0]
 8019192:	6a3b      	ldr	r3, [r7, #32]
 8019194:	3301      	adds	r3, #1
 8019196:	623b      	str	r3, [r7, #32]
 8019198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801919a:	3301      	adds	r3, #1
 801919c:	627b      	str	r3, [r7, #36]	; 0x24
 801919e:	8bfb      	ldrh	r3, [r7, #30]
 80191a0:	3b01      	subs	r3, #1
 80191a2:	83fb      	strh	r3, [r7, #30]
 80191a4:	8bfb      	ldrh	r3, [r7, #30]
 80191a6:	2b00      	cmp	r3, #0
 80191a8:	d1ea      	bne.n	8019180 <USB_ReadPacket+0x78>
 80191aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80191ac:	4618      	mov	r0, r3
 80191ae:	372c      	adds	r7, #44	; 0x2c
 80191b0:	46bd      	mov	sp, r7
 80191b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80191b6:	4770      	bx	lr

080191b8 <USB_EPSetStall>:
 80191b8:	b480      	push	{r7}
 80191ba:	b085      	sub	sp, #20
 80191bc:	af00      	add	r7, sp, #0
 80191be:	6078      	str	r0, [r7, #4]
 80191c0:	6039      	str	r1, [r7, #0]
 80191c2:	687b      	ldr	r3, [r7, #4]
 80191c4:	60fb      	str	r3, [r7, #12]
 80191c6:	683b      	ldr	r3, [r7, #0]
 80191c8:	781b      	ldrb	r3, [r3, #0]
 80191ca:	60bb      	str	r3, [r7, #8]
 80191cc:	683b      	ldr	r3, [r7, #0]
 80191ce:	785b      	ldrb	r3, [r3, #1]
 80191d0:	2b01      	cmp	r3, #1
 80191d2:	d12c      	bne.n	801922e <USB_EPSetStall+0x76>
 80191d4:	68bb      	ldr	r3, [r7, #8]
 80191d6:	015a      	lsls	r2, r3, #5
 80191d8:	68fb      	ldr	r3, [r7, #12]
 80191da:	4413      	add	r3, r2
 80191dc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80191e0:	681b      	ldr	r3, [r3, #0]
 80191e2:	2b00      	cmp	r3, #0
 80191e4:	db12      	blt.n	801920c <USB_EPSetStall+0x54>
 80191e6:	68bb      	ldr	r3, [r7, #8]
 80191e8:	2b00      	cmp	r3, #0
 80191ea:	d00f      	beq.n	801920c <USB_EPSetStall+0x54>
 80191ec:	68bb      	ldr	r3, [r7, #8]
 80191ee:	015a      	lsls	r2, r3, #5
 80191f0:	68fb      	ldr	r3, [r7, #12]
 80191f2:	4413      	add	r3, r2
 80191f4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80191f8:	681b      	ldr	r3, [r3, #0]
 80191fa:	68ba      	ldr	r2, [r7, #8]
 80191fc:	0151      	lsls	r1, r2, #5
 80191fe:	68fa      	ldr	r2, [r7, #12]
 8019200:	440a      	add	r2, r1
 8019202:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8019206:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801920a:	6013      	str	r3, [r2, #0]
 801920c:	68bb      	ldr	r3, [r7, #8]
 801920e:	015a      	lsls	r2, r3, #5
 8019210:	68fb      	ldr	r3, [r7, #12]
 8019212:	4413      	add	r3, r2
 8019214:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019218:	681b      	ldr	r3, [r3, #0]
 801921a:	68ba      	ldr	r2, [r7, #8]
 801921c:	0151      	lsls	r1, r2, #5
 801921e:	68fa      	ldr	r2, [r7, #12]
 8019220:	440a      	add	r2, r1
 8019222:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8019226:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 801922a:	6013      	str	r3, [r2, #0]
 801922c:	e02b      	b.n	8019286 <USB_EPSetStall+0xce>
 801922e:	68bb      	ldr	r3, [r7, #8]
 8019230:	015a      	lsls	r2, r3, #5
 8019232:	68fb      	ldr	r3, [r7, #12]
 8019234:	4413      	add	r3, r2
 8019236:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801923a:	681b      	ldr	r3, [r3, #0]
 801923c:	2b00      	cmp	r3, #0
 801923e:	db12      	blt.n	8019266 <USB_EPSetStall+0xae>
 8019240:	68bb      	ldr	r3, [r7, #8]
 8019242:	2b00      	cmp	r3, #0
 8019244:	d00f      	beq.n	8019266 <USB_EPSetStall+0xae>
 8019246:	68bb      	ldr	r3, [r7, #8]
 8019248:	015a      	lsls	r2, r3, #5
 801924a:	68fb      	ldr	r3, [r7, #12]
 801924c:	4413      	add	r3, r2
 801924e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019252:	681b      	ldr	r3, [r3, #0]
 8019254:	68ba      	ldr	r2, [r7, #8]
 8019256:	0151      	lsls	r1, r2, #5
 8019258:	68fa      	ldr	r2, [r7, #12]
 801925a:	440a      	add	r2, r1
 801925c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019260:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8019264:	6013      	str	r3, [r2, #0]
 8019266:	68bb      	ldr	r3, [r7, #8]
 8019268:	015a      	lsls	r2, r3, #5
 801926a:	68fb      	ldr	r3, [r7, #12]
 801926c:	4413      	add	r3, r2
 801926e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019272:	681b      	ldr	r3, [r3, #0]
 8019274:	68ba      	ldr	r2, [r7, #8]
 8019276:	0151      	lsls	r1, r2, #5
 8019278:	68fa      	ldr	r2, [r7, #12]
 801927a:	440a      	add	r2, r1
 801927c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019280:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8019284:	6013      	str	r3, [r2, #0]
 8019286:	2300      	movs	r3, #0
 8019288:	4618      	mov	r0, r3
 801928a:	3714      	adds	r7, #20
 801928c:	46bd      	mov	sp, r7
 801928e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019292:	4770      	bx	lr

08019294 <USB_EPClearStall>:
 8019294:	b480      	push	{r7}
 8019296:	b085      	sub	sp, #20
 8019298:	af00      	add	r7, sp, #0
 801929a:	6078      	str	r0, [r7, #4]
 801929c:	6039      	str	r1, [r7, #0]
 801929e:	687b      	ldr	r3, [r7, #4]
 80192a0:	60fb      	str	r3, [r7, #12]
 80192a2:	683b      	ldr	r3, [r7, #0]
 80192a4:	781b      	ldrb	r3, [r3, #0]
 80192a6:	60bb      	str	r3, [r7, #8]
 80192a8:	683b      	ldr	r3, [r7, #0]
 80192aa:	785b      	ldrb	r3, [r3, #1]
 80192ac:	2b01      	cmp	r3, #1
 80192ae:	d128      	bne.n	8019302 <USB_EPClearStall+0x6e>
 80192b0:	68bb      	ldr	r3, [r7, #8]
 80192b2:	015a      	lsls	r2, r3, #5
 80192b4:	68fb      	ldr	r3, [r7, #12]
 80192b6:	4413      	add	r3, r2
 80192b8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80192bc:	681b      	ldr	r3, [r3, #0]
 80192be:	68ba      	ldr	r2, [r7, #8]
 80192c0:	0151      	lsls	r1, r2, #5
 80192c2:	68fa      	ldr	r2, [r7, #12]
 80192c4:	440a      	add	r2, r1
 80192c6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80192ca:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80192ce:	6013      	str	r3, [r2, #0]
 80192d0:	683b      	ldr	r3, [r7, #0]
 80192d2:	791b      	ldrb	r3, [r3, #4]
 80192d4:	2b03      	cmp	r3, #3
 80192d6:	d003      	beq.n	80192e0 <USB_EPClearStall+0x4c>
 80192d8:	683b      	ldr	r3, [r7, #0]
 80192da:	791b      	ldrb	r3, [r3, #4]
 80192dc:	2b02      	cmp	r3, #2
 80192de:	d138      	bne.n	8019352 <USB_EPClearStall+0xbe>
 80192e0:	68bb      	ldr	r3, [r7, #8]
 80192e2:	015a      	lsls	r2, r3, #5
 80192e4:	68fb      	ldr	r3, [r7, #12]
 80192e6:	4413      	add	r3, r2
 80192e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80192ec:	681b      	ldr	r3, [r3, #0]
 80192ee:	68ba      	ldr	r2, [r7, #8]
 80192f0:	0151      	lsls	r1, r2, #5
 80192f2:	68fa      	ldr	r2, [r7, #12]
 80192f4:	440a      	add	r2, r1
 80192f6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 80192fa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80192fe:	6013      	str	r3, [r2, #0]
 8019300:	e027      	b.n	8019352 <USB_EPClearStall+0xbe>
 8019302:	68bb      	ldr	r3, [r7, #8]
 8019304:	015a      	lsls	r2, r3, #5
 8019306:	68fb      	ldr	r3, [r7, #12]
 8019308:	4413      	add	r3, r2
 801930a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801930e:	681b      	ldr	r3, [r3, #0]
 8019310:	68ba      	ldr	r2, [r7, #8]
 8019312:	0151      	lsls	r1, r2, #5
 8019314:	68fa      	ldr	r2, [r7, #12]
 8019316:	440a      	add	r2, r1
 8019318:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 801931c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8019320:	6013      	str	r3, [r2, #0]
 8019322:	683b      	ldr	r3, [r7, #0]
 8019324:	791b      	ldrb	r3, [r3, #4]
 8019326:	2b03      	cmp	r3, #3
 8019328:	d003      	beq.n	8019332 <USB_EPClearStall+0x9e>
 801932a:	683b      	ldr	r3, [r7, #0]
 801932c:	791b      	ldrb	r3, [r3, #4]
 801932e:	2b02      	cmp	r3, #2
 8019330:	d10f      	bne.n	8019352 <USB_EPClearStall+0xbe>
 8019332:	68bb      	ldr	r3, [r7, #8]
 8019334:	015a      	lsls	r2, r3, #5
 8019336:	68fb      	ldr	r3, [r7, #12]
 8019338:	4413      	add	r3, r2
 801933a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801933e:	681b      	ldr	r3, [r3, #0]
 8019340:	68ba      	ldr	r2, [r7, #8]
 8019342:	0151      	lsls	r1, r2, #5
 8019344:	68fa      	ldr	r2, [r7, #12]
 8019346:	440a      	add	r2, r1
 8019348:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 801934c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8019350:	6013      	str	r3, [r2, #0]
 8019352:	2300      	movs	r3, #0
 8019354:	4618      	mov	r0, r3
 8019356:	3714      	adds	r7, #20
 8019358:	46bd      	mov	sp, r7
 801935a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801935e:	4770      	bx	lr

08019360 <USB_SetDevAddress>:
 8019360:	b480      	push	{r7}
 8019362:	b085      	sub	sp, #20
 8019364:	af00      	add	r7, sp, #0
 8019366:	6078      	str	r0, [r7, #4]
 8019368:	460b      	mov	r3, r1
 801936a:	70fb      	strb	r3, [r7, #3]
 801936c:	687b      	ldr	r3, [r7, #4]
 801936e:	60fb      	str	r3, [r7, #12]
 8019370:	68fb      	ldr	r3, [r7, #12]
 8019372:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019376:	681b      	ldr	r3, [r3, #0]
 8019378:	68fa      	ldr	r2, [r7, #12]
 801937a:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801937e:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8019382:	6013      	str	r3, [r2, #0]
 8019384:	68fb      	ldr	r3, [r7, #12]
 8019386:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801938a:	681a      	ldr	r2, [r3, #0]
 801938c:	78fb      	ldrb	r3, [r7, #3]
 801938e:	011b      	lsls	r3, r3, #4
 8019390:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 8019394:	68f9      	ldr	r1, [r7, #12]
 8019396:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 801939a:	4313      	orrs	r3, r2
 801939c:	600b      	str	r3, [r1, #0]
 801939e:	2300      	movs	r3, #0
 80193a0:	4618      	mov	r0, r3
 80193a2:	3714      	adds	r7, #20
 80193a4:	46bd      	mov	sp, r7
 80193a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80193aa:	4770      	bx	lr

080193ac <USB_DevConnect>:
 80193ac:	b480      	push	{r7}
 80193ae:	b085      	sub	sp, #20
 80193b0:	af00      	add	r7, sp, #0
 80193b2:	6078      	str	r0, [r7, #4]
 80193b4:	687b      	ldr	r3, [r7, #4]
 80193b6:	60fb      	str	r3, [r7, #12]
 80193b8:	68fb      	ldr	r3, [r7, #12]
 80193ba:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80193be:	681b      	ldr	r3, [r3, #0]
 80193c0:	68fa      	ldr	r2, [r7, #12]
 80193c2:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 80193c6:	f023 0303 	bic.w	r3, r3, #3
 80193ca:	6013      	str	r3, [r2, #0]
 80193cc:	68fb      	ldr	r3, [r7, #12]
 80193ce:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80193d2:	685b      	ldr	r3, [r3, #4]
 80193d4:	68fa      	ldr	r2, [r7, #12]
 80193d6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80193da:	f023 0302 	bic.w	r3, r3, #2
 80193de:	6053      	str	r3, [r2, #4]
 80193e0:	2300      	movs	r3, #0
 80193e2:	4618      	mov	r0, r3
 80193e4:	3714      	adds	r7, #20
 80193e6:	46bd      	mov	sp, r7
 80193e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80193ec:	4770      	bx	lr

080193ee <USB_DevDisconnect>:
 80193ee:	b480      	push	{r7}
 80193f0:	b085      	sub	sp, #20
 80193f2:	af00      	add	r7, sp, #0
 80193f4:	6078      	str	r0, [r7, #4]
 80193f6:	687b      	ldr	r3, [r7, #4]
 80193f8:	60fb      	str	r3, [r7, #12]
 80193fa:	68fb      	ldr	r3, [r7, #12]
 80193fc:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8019400:	681b      	ldr	r3, [r3, #0]
 8019402:	68fa      	ldr	r2, [r7, #12]
 8019404:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8019408:	f023 0303 	bic.w	r3, r3, #3
 801940c:	6013      	str	r3, [r2, #0]
 801940e:	68fb      	ldr	r3, [r7, #12]
 8019410:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019414:	685b      	ldr	r3, [r3, #4]
 8019416:	68fa      	ldr	r2, [r7, #12]
 8019418:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 801941c:	f043 0302 	orr.w	r3, r3, #2
 8019420:	6053      	str	r3, [r2, #4]
 8019422:	2300      	movs	r3, #0
 8019424:	4618      	mov	r0, r3
 8019426:	3714      	adds	r7, #20
 8019428:	46bd      	mov	sp, r7
 801942a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801942e:	4770      	bx	lr

08019430 <USB_ReadInterrupts>:
 8019430:	b480      	push	{r7}
 8019432:	b085      	sub	sp, #20
 8019434:	af00      	add	r7, sp, #0
 8019436:	6078      	str	r0, [r7, #4]
 8019438:	687b      	ldr	r3, [r7, #4]
 801943a:	695b      	ldr	r3, [r3, #20]
 801943c:	60fb      	str	r3, [r7, #12]
 801943e:	687b      	ldr	r3, [r7, #4]
 8019440:	699b      	ldr	r3, [r3, #24]
 8019442:	68fa      	ldr	r2, [r7, #12]
 8019444:	4013      	ands	r3, r2
 8019446:	60fb      	str	r3, [r7, #12]
 8019448:	68fb      	ldr	r3, [r7, #12]
 801944a:	4618      	mov	r0, r3
 801944c:	3714      	adds	r7, #20
 801944e:	46bd      	mov	sp, r7
 8019450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019454:	4770      	bx	lr

08019456 <USB_ReadDevAllOutEpInterrupt>:
 8019456:	b480      	push	{r7}
 8019458:	b085      	sub	sp, #20
 801945a:	af00      	add	r7, sp, #0
 801945c:	6078      	str	r0, [r7, #4]
 801945e:	687b      	ldr	r3, [r7, #4]
 8019460:	60fb      	str	r3, [r7, #12]
 8019462:	68fb      	ldr	r3, [r7, #12]
 8019464:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019468:	699b      	ldr	r3, [r3, #24]
 801946a:	60bb      	str	r3, [r7, #8]
 801946c:	68fb      	ldr	r3, [r7, #12]
 801946e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019472:	69db      	ldr	r3, [r3, #28]
 8019474:	68ba      	ldr	r2, [r7, #8]
 8019476:	4013      	ands	r3, r2
 8019478:	60bb      	str	r3, [r7, #8]
 801947a:	68bb      	ldr	r3, [r7, #8]
 801947c:	0c1b      	lsrs	r3, r3, #16
 801947e:	4618      	mov	r0, r3
 8019480:	3714      	adds	r7, #20
 8019482:	46bd      	mov	sp, r7
 8019484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019488:	4770      	bx	lr

0801948a <USB_ReadDevAllInEpInterrupt>:
 801948a:	b480      	push	{r7}
 801948c:	b085      	sub	sp, #20
 801948e:	af00      	add	r7, sp, #0
 8019490:	6078      	str	r0, [r7, #4]
 8019492:	687b      	ldr	r3, [r7, #4]
 8019494:	60fb      	str	r3, [r7, #12]
 8019496:	68fb      	ldr	r3, [r7, #12]
 8019498:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801949c:	699b      	ldr	r3, [r3, #24]
 801949e:	60bb      	str	r3, [r7, #8]
 80194a0:	68fb      	ldr	r3, [r7, #12]
 80194a2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80194a6:	69db      	ldr	r3, [r3, #28]
 80194a8:	68ba      	ldr	r2, [r7, #8]
 80194aa:	4013      	ands	r3, r2
 80194ac:	60bb      	str	r3, [r7, #8]
 80194ae:	68bb      	ldr	r3, [r7, #8]
 80194b0:	b29b      	uxth	r3, r3
 80194b2:	4618      	mov	r0, r3
 80194b4:	3714      	adds	r7, #20
 80194b6:	46bd      	mov	sp, r7
 80194b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194bc:	4770      	bx	lr

080194be <USB_ReadDevOutEPInterrupt>:
 80194be:	b480      	push	{r7}
 80194c0:	b085      	sub	sp, #20
 80194c2:	af00      	add	r7, sp, #0
 80194c4:	6078      	str	r0, [r7, #4]
 80194c6:	460b      	mov	r3, r1
 80194c8:	70fb      	strb	r3, [r7, #3]
 80194ca:	687b      	ldr	r3, [r7, #4]
 80194cc:	60fb      	str	r3, [r7, #12]
 80194ce:	78fb      	ldrb	r3, [r7, #3]
 80194d0:	015a      	lsls	r2, r3, #5
 80194d2:	68fb      	ldr	r3, [r7, #12]
 80194d4:	4413      	add	r3, r2
 80194d6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80194da:	689b      	ldr	r3, [r3, #8]
 80194dc:	60bb      	str	r3, [r7, #8]
 80194de:	68fb      	ldr	r3, [r7, #12]
 80194e0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80194e4:	695b      	ldr	r3, [r3, #20]
 80194e6:	68ba      	ldr	r2, [r7, #8]
 80194e8:	4013      	ands	r3, r2
 80194ea:	60bb      	str	r3, [r7, #8]
 80194ec:	68bb      	ldr	r3, [r7, #8]
 80194ee:	4618      	mov	r0, r3
 80194f0:	3714      	adds	r7, #20
 80194f2:	46bd      	mov	sp, r7
 80194f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194f8:	4770      	bx	lr

080194fa <USB_ReadDevInEPInterrupt>:
 80194fa:	b480      	push	{r7}
 80194fc:	b087      	sub	sp, #28
 80194fe:	af00      	add	r7, sp, #0
 8019500:	6078      	str	r0, [r7, #4]
 8019502:	460b      	mov	r3, r1
 8019504:	70fb      	strb	r3, [r7, #3]
 8019506:	687b      	ldr	r3, [r7, #4]
 8019508:	617b      	str	r3, [r7, #20]
 801950a:	697b      	ldr	r3, [r7, #20]
 801950c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8019510:	691b      	ldr	r3, [r3, #16]
 8019512:	613b      	str	r3, [r7, #16]
 8019514:	697b      	ldr	r3, [r7, #20]
 8019516:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801951a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801951c:	60fb      	str	r3, [r7, #12]
 801951e:	78fb      	ldrb	r3, [r7, #3]
 8019520:	f003 030f 	and.w	r3, r3, #15
 8019524:	68fa      	ldr	r2, [r7, #12]
 8019526:	fa22 f303 	lsr.w	r3, r2, r3
 801952a:	01db      	lsls	r3, r3, #7
 801952c:	b2db      	uxtb	r3, r3
 801952e:	693a      	ldr	r2, [r7, #16]
 8019530:	4313      	orrs	r3, r2
 8019532:	613b      	str	r3, [r7, #16]
 8019534:	78fb      	ldrb	r3, [r7, #3]
 8019536:	015a      	lsls	r2, r3, #5
 8019538:	697b      	ldr	r3, [r7, #20]
 801953a:	4413      	add	r3, r2
 801953c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019540:	689b      	ldr	r3, [r3, #8]
 8019542:	693a      	ldr	r2, [r7, #16]
 8019544:	4013      	ands	r3, r2
 8019546:	60bb      	str	r3, [r7, #8]
 8019548:	68bb      	ldr	r3, [r7, #8]
 801954a:	4618      	mov	r0, r3
 801954c:	371c      	adds	r7, #28
 801954e:	46bd      	mov	sp, r7
 8019550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019554:	4770      	bx	lr

08019556 <USB_GetMode>:
 8019556:	b480      	push	{r7}
 8019558:	b083      	sub	sp, #12
 801955a:	af00      	add	r7, sp, #0
 801955c:	6078      	str	r0, [r7, #4]
 801955e:	687b      	ldr	r3, [r7, #4]
 8019560:	695b      	ldr	r3, [r3, #20]
 8019562:	f003 0301 	and.w	r3, r3, #1
 8019566:	4618      	mov	r0, r3
 8019568:	370c      	adds	r7, #12
 801956a:	46bd      	mov	sp, r7
 801956c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019570:	4770      	bx	lr

08019572 <USB_ActivateSetup>:
 8019572:	b480      	push	{r7}
 8019574:	b085      	sub	sp, #20
 8019576:	af00      	add	r7, sp, #0
 8019578:	6078      	str	r0, [r7, #4]
 801957a:	687b      	ldr	r3, [r7, #4]
 801957c:	60fb      	str	r3, [r7, #12]
 801957e:	68fb      	ldr	r3, [r7, #12]
 8019580:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8019584:	681b      	ldr	r3, [r3, #0]
 8019586:	68fa      	ldr	r2, [r7, #12]
 8019588:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 801958c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019590:	f023 0307 	bic.w	r3, r3, #7
 8019594:	6013      	str	r3, [r2, #0]
 8019596:	68fb      	ldr	r3, [r7, #12]
 8019598:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801959c:	685b      	ldr	r3, [r3, #4]
 801959e:	68fa      	ldr	r2, [r7, #12]
 80195a0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80195a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80195a8:	6053      	str	r3, [r2, #4]
 80195aa:	2300      	movs	r3, #0
 80195ac:	4618      	mov	r0, r3
 80195ae:	3714      	adds	r7, #20
 80195b0:	46bd      	mov	sp, r7
 80195b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80195b6:	4770      	bx	lr

080195b8 <USB_EP0_OutStart>:
 80195b8:	b480      	push	{r7}
 80195ba:	b087      	sub	sp, #28
 80195bc:	af00      	add	r7, sp, #0
 80195be:	60f8      	str	r0, [r7, #12]
 80195c0:	460b      	mov	r3, r1
 80195c2:	607a      	str	r2, [r7, #4]
 80195c4:	72fb      	strb	r3, [r7, #11]
 80195c6:	68fb      	ldr	r3, [r7, #12]
 80195c8:	617b      	str	r3, [r7, #20]
 80195ca:	68fb      	ldr	r3, [r7, #12]
 80195cc:	333c      	adds	r3, #60	; 0x3c
 80195ce:	3304      	adds	r3, #4
 80195d0:	681b      	ldr	r3, [r3, #0]
 80195d2:	613b      	str	r3, [r7, #16]
 80195d4:	693b      	ldr	r3, [r7, #16]
 80195d6:	4a26      	ldr	r2, [pc, #152]	; (8019670 <USB_EP0_OutStart+0xb8>)
 80195d8:	4293      	cmp	r3, r2
 80195da:	d90a      	bls.n	80195f2 <USB_EP0_OutStart+0x3a>
 80195dc:	697b      	ldr	r3, [r7, #20]
 80195de:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80195e2:	681b      	ldr	r3, [r3, #0]
 80195e4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80195e8:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80195ec:	d101      	bne.n	80195f2 <USB_EP0_OutStart+0x3a>
 80195ee:	2300      	movs	r3, #0
 80195f0:	e037      	b.n	8019662 <USB_EP0_OutStart+0xaa>
 80195f2:	697b      	ldr	r3, [r7, #20]
 80195f4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80195f8:	461a      	mov	r2, r3
 80195fa:	2300      	movs	r3, #0
 80195fc:	6113      	str	r3, [r2, #16]
 80195fe:	697b      	ldr	r3, [r7, #20]
 8019600:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019604:	691b      	ldr	r3, [r3, #16]
 8019606:	697a      	ldr	r2, [r7, #20]
 8019608:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 801960c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8019610:	6113      	str	r3, [r2, #16]
 8019612:	697b      	ldr	r3, [r7, #20]
 8019614:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019618:	691b      	ldr	r3, [r3, #16]
 801961a:	697a      	ldr	r2, [r7, #20]
 801961c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019620:	f043 0318 	orr.w	r3, r3, #24
 8019624:	6113      	str	r3, [r2, #16]
 8019626:	697b      	ldr	r3, [r7, #20]
 8019628:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 801962c:	691b      	ldr	r3, [r3, #16]
 801962e:	697a      	ldr	r2, [r7, #20]
 8019630:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8019634:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8019638:	6113      	str	r3, [r2, #16]
 801963a:	7afb      	ldrb	r3, [r7, #11]
 801963c:	2b01      	cmp	r3, #1
 801963e:	d10f      	bne.n	8019660 <USB_EP0_OutStart+0xa8>
 8019640:	697b      	ldr	r3, [r7, #20]
 8019642:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019646:	461a      	mov	r2, r3
 8019648:	687b      	ldr	r3, [r7, #4]
 801964a:	6153      	str	r3, [r2, #20]
 801964c:	697b      	ldr	r3, [r7, #20]
 801964e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8019652:	681b      	ldr	r3, [r3, #0]
 8019654:	697a      	ldr	r2, [r7, #20]
 8019656:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 801965a:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 801965e:	6013      	str	r3, [r2, #0]
 8019660:	2300      	movs	r3, #0
 8019662:	4618      	mov	r0, r3
 8019664:	371c      	adds	r7, #28
 8019666:	46bd      	mov	sp, r7
 8019668:	f85d 7b04 	ldr.w	r7, [sp], #4
 801966c:	4770      	bx	lr
 801966e:	bf00      	nop
 8019670:	4f54300a 	.word	0x4f54300a

08019674 <USB_CoreReset>:
 8019674:	b480      	push	{r7}
 8019676:	b085      	sub	sp, #20
 8019678:	af00      	add	r7, sp, #0
 801967a:	6078      	str	r0, [r7, #4]
 801967c:	2300      	movs	r3, #0
 801967e:	60fb      	str	r3, [r7, #12]
 8019680:	68fb      	ldr	r3, [r7, #12]
 8019682:	3301      	adds	r3, #1
 8019684:	60fb      	str	r3, [r7, #12]
 8019686:	68fb      	ldr	r3, [r7, #12]
 8019688:	4a13      	ldr	r2, [pc, #76]	; (80196d8 <USB_CoreReset+0x64>)
 801968a:	4293      	cmp	r3, r2
 801968c:	d901      	bls.n	8019692 <USB_CoreReset+0x1e>
 801968e:	2303      	movs	r3, #3
 8019690:	e01b      	b.n	80196ca <USB_CoreReset+0x56>
 8019692:	687b      	ldr	r3, [r7, #4]
 8019694:	691b      	ldr	r3, [r3, #16]
 8019696:	2b00      	cmp	r3, #0
 8019698:	daf2      	bge.n	8019680 <USB_CoreReset+0xc>
 801969a:	2300      	movs	r3, #0
 801969c:	60fb      	str	r3, [r7, #12]
 801969e:	687b      	ldr	r3, [r7, #4]
 80196a0:	691b      	ldr	r3, [r3, #16]
 80196a2:	f043 0201 	orr.w	r2, r3, #1
 80196a6:	687b      	ldr	r3, [r7, #4]
 80196a8:	611a      	str	r2, [r3, #16]
 80196aa:	68fb      	ldr	r3, [r7, #12]
 80196ac:	3301      	adds	r3, #1
 80196ae:	60fb      	str	r3, [r7, #12]
 80196b0:	68fb      	ldr	r3, [r7, #12]
 80196b2:	4a09      	ldr	r2, [pc, #36]	; (80196d8 <USB_CoreReset+0x64>)
 80196b4:	4293      	cmp	r3, r2
 80196b6:	d901      	bls.n	80196bc <USB_CoreReset+0x48>
 80196b8:	2303      	movs	r3, #3
 80196ba:	e006      	b.n	80196ca <USB_CoreReset+0x56>
 80196bc:	687b      	ldr	r3, [r7, #4]
 80196be:	691b      	ldr	r3, [r3, #16]
 80196c0:	f003 0301 	and.w	r3, r3, #1
 80196c4:	2b01      	cmp	r3, #1
 80196c6:	d0f0      	beq.n	80196aa <USB_CoreReset+0x36>
 80196c8:	2300      	movs	r3, #0
 80196ca:	4618      	mov	r0, r3
 80196cc:	3714      	adds	r7, #20
 80196ce:	46bd      	mov	sp, r7
 80196d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196d4:	4770      	bx	lr
 80196d6:	bf00      	nop
 80196d8:	00030d40 	.word	0x00030d40

080196dc <USBD_CDC_Init>:
 80196dc:	b580      	push	{r7, lr}
 80196de:	b084      	sub	sp, #16
 80196e0:	af00      	add	r7, sp, #0
 80196e2:	6078      	str	r0, [r7, #4]
 80196e4:	460b      	mov	r3, r1
 80196e6:	70fb      	strb	r3, [r7, #3]
 80196e8:	f44f 7007 	mov.w	r0, #540	; 0x21c
 80196ec:	f005 fe82 	bl	801f3f4 <USBD_static_malloc>
 80196f0:	60f8      	str	r0, [r7, #12]
 80196f2:	68fb      	ldr	r3, [r7, #12]
 80196f4:	2b00      	cmp	r3, #0
 80196f6:	d109      	bne.n	801970c <USBD_CDC_Init+0x30>
 80196f8:	687b      	ldr	r3, [r7, #4]
 80196fa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80196fe:	687b      	ldr	r3, [r7, #4]
 8019700:	32b0      	adds	r2, #176	; 0xb0
 8019702:	2100      	movs	r1, #0
 8019704:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8019708:	2302      	movs	r3, #2
 801970a:	e0d4      	b.n	80198b6 <USBD_CDC_Init+0x1da>
 801970c:	f44f 7207 	mov.w	r2, #540	; 0x21c
 8019710:	2100      	movs	r1, #0
 8019712:	68f8      	ldr	r0, [r7, #12]
 8019714:	f005 ffdd 	bl	801f6d2 <memset>
 8019718:	687b      	ldr	r3, [r7, #4]
 801971a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801971e:	687b      	ldr	r3, [r7, #4]
 8019720:	32b0      	adds	r2, #176	; 0xb0
 8019722:	68f9      	ldr	r1, [r7, #12]
 8019724:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8019728:	687b      	ldr	r3, [r7, #4]
 801972a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801972e:	687b      	ldr	r3, [r7, #4]
 8019730:	32b0      	adds	r2, #176	; 0xb0
 8019732:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019736:	687b      	ldr	r3, [r7, #4]
 8019738:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 801973c:	687b      	ldr	r3, [r7, #4]
 801973e:	7c1b      	ldrb	r3, [r3, #16]
 8019740:	2b00      	cmp	r3, #0
 8019742:	d138      	bne.n	80197b6 <USBD_CDC_Init+0xda>
 8019744:	4b5e      	ldr	r3, [pc, #376]	; (80198c0 <USBD_CDC_Init+0x1e4>)
 8019746:	7819      	ldrb	r1, [r3, #0]
 8019748:	f44f 7300 	mov.w	r3, #512	; 0x200
 801974c:	2202      	movs	r2, #2
 801974e:	6878      	ldr	r0, [r7, #4]
 8019750:	f005 fd2d 	bl	801f1ae <USBD_LL_OpenEP>
 8019754:	4b5a      	ldr	r3, [pc, #360]	; (80198c0 <USBD_CDC_Init+0x1e4>)
 8019756:	781b      	ldrb	r3, [r3, #0]
 8019758:	f003 020f 	and.w	r2, r3, #15
 801975c:	6879      	ldr	r1, [r7, #4]
 801975e:	4613      	mov	r3, r2
 8019760:	009b      	lsls	r3, r3, #2
 8019762:	4413      	add	r3, r2
 8019764:	009b      	lsls	r3, r3, #2
 8019766:	440b      	add	r3, r1
 8019768:	3324      	adds	r3, #36	; 0x24
 801976a:	2201      	movs	r2, #1
 801976c:	801a      	strh	r2, [r3, #0]
 801976e:	4b55      	ldr	r3, [pc, #340]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 8019770:	7819      	ldrb	r1, [r3, #0]
 8019772:	f44f 7300 	mov.w	r3, #512	; 0x200
 8019776:	2202      	movs	r2, #2
 8019778:	6878      	ldr	r0, [r7, #4]
 801977a:	f005 fd18 	bl	801f1ae <USBD_LL_OpenEP>
 801977e:	4b51      	ldr	r3, [pc, #324]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 8019780:	781b      	ldrb	r3, [r3, #0]
 8019782:	f003 020f 	and.w	r2, r3, #15
 8019786:	6879      	ldr	r1, [r7, #4]
 8019788:	4613      	mov	r3, r2
 801978a:	009b      	lsls	r3, r3, #2
 801978c:	4413      	add	r3, r2
 801978e:	009b      	lsls	r3, r3, #2
 8019790:	440b      	add	r3, r1
 8019792:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8019796:	2201      	movs	r2, #1
 8019798:	801a      	strh	r2, [r3, #0]
 801979a:	4b4b      	ldr	r3, [pc, #300]	; (80198c8 <USBD_CDC_Init+0x1ec>)
 801979c:	781b      	ldrb	r3, [r3, #0]
 801979e:	f003 020f 	and.w	r2, r3, #15
 80197a2:	6879      	ldr	r1, [r7, #4]
 80197a4:	4613      	mov	r3, r2
 80197a6:	009b      	lsls	r3, r3, #2
 80197a8:	4413      	add	r3, r2
 80197aa:	009b      	lsls	r3, r3, #2
 80197ac:	440b      	add	r3, r1
 80197ae:	3326      	adds	r3, #38	; 0x26
 80197b0:	2210      	movs	r2, #16
 80197b2:	801a      	strh	r2, [r3, #0]
 80197b4:	e035      	b.n	8019822 <USBD_CDC_Init+0x146>
 80197b6:	4b42      	ldr	r3, [pc, #264]	; (80198c0 <USBD_CDC_Init+0x1e4>)
 80197b8:	7819      	ldrb	r1, [r3, #0]
 80197ba:	2340      	movs	r3, #64	; 0x40
 80197bc:	2202      	movs	r2, #2
 80197be:	6878      	ldr	r0, [r7, #4]
 80197c0:	f005 fcf5 	bl	801f1ae <USBD_LL_OpenEP>
 80197c4:	4b3e      	ldr	r3, [pc, #248]	; (80198c0 <USBD_CDC_Init+0x1e4>)
 80197c6:	781b      	ldrb	r3, [r3, #0]
 80197c8:	f003 020f 	and.w	r2, r3, #15
 80197cc:	6879      	ldr	r1, [r7, #4]
 80197ce:	4613      	mov	r3, r2
 80197d0:	009b      	lsls	r3, r3, #2
 80197d2:	4413      	add	r3, r2
 80197d4:	009b      	lsls	r3, r3, #2
 80197d6:	440b      	add	r3, r1
 80197d8:	3324      	adds	r3, #36	; 0x24
 80197da:	2201      	movs	r2, #1
 80197dc:	801a      	strh	r2, [r3, #0]
 80197de:	4b39      	ldr	r3, [pc, #228]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 80197e0:	7819      	ldrb	r1, [r3, #0]
 80197e2:	2340      	movs	r3, #64	; 0x40
 80197e4:	2202      	movs	r2, #2
 80197e6:	6878      	ldr	r0, [r7, #4]
 80197e8:	f005 fce1 	bl	801f1ae <USBD_LL_OpenEP>
 80197ec:	4b35      	ldr	r3, [pc, #212]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 80197ee:	781b      	ldrb	r3, [r3, #0]
 80197f0:	f003 020f 	and.w	r2, r3, #15
 80197f4:	6879      	ldr	r1, [r7, #4]
 80197f6:	4613      	mov	r3, r2
 80197f8:	009b      	lsls	r3, r3, #2
 80197fa:	4413      	add	r3, r2
 80197fc:	009b      	lsls	r3, r3, #2
 80197fe:	440b      	add	r3, r1
 8019800:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8019804:	2201      	movs	r2, #1
 8019806:	801a      	strh	r2, [r3, #0]
 8019808:	4b2f      	ldr	r3, [pc, #188]	; (80198c8 <USBD_CDC_Init+0x1ec>)
 801980a:	781b      	ldrb	r3, [r3, #0]
 801980c:	f003 020f 	and.w	r2, r3, #15
 8019810:	6879      	ldr	r1, [r7, #4]
 8019812:	4613      	mov	r3, r2
 8019814:	009b      	lsls	r3, r3, #2
 8019816:	4413      	add	r3, r2
 8019818:	009b      	lsls	r3, r3, #2
 801981a:	440b      	add	r3, r1
 801981c:	3326      	adds	r3, #38	; 0x26
 801981e:	2210      	movs	r2, #16
 8019820:	801a      	strh	r2, [r3, #0]
 8019822:	4b29      	ldr	r3, [pc, #164]	; (80198c8 <USBD_CDC_Init+0x1ec>)
 8019824:	7819      	ldrb	r1, [r3, #0]
 8019826:	2308      	movs	r3, #8
 8019828:	2203      	movs	r2, #3
 801982a:	6878      	ldr	r0, [r7, #4]
 801982c:	f005 fcbf 	bl	801f1ae <USBD_LL_OpenEP>
 8019830:	4b25      	ldr	r3, [pc, #148]	; (80198c8 <USBD_CDC_Init+0x1ec>)
 8019832:	781b      	ldrb	r3, [r3, #0]
 8019834:	f003 020f 	and.w	r2, r3, #15
 8019838:	6879      	ldr	r1, [r7, #4]
 801983a:	4613      	mov	r3, r2
 801983c:	009b      	lsls	r3, r3, #2
 801983e:	4413      	add	r3, r2
 8019840:	009b      	lsls	r3, r3, #2
 8019842:	440b      	add	r3, r1
 8019844:	3324      	adds	r3, #36	; 0x24
 8019846:	2201      	movs	r2, #1
 8019848:	801a      	strh	r2, [r3, #0]
 801984a:	68fb      	ldr	r3, [r7, #12]
 801984c:	2200      	movs	r2, #0
 801984e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8019852:	687b      	ldr	r3, [r7, #4]
 8019854:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019858:	687a      	ldr	r2, [r7, #4]
 801985a:	33b0      	adds	r3, #176	; 0xb0
 801985c:	009b      	lsls	r3, r3, #2
 801985e:	4413      	add	r3, r2
 8019860:	685b      	ldr	r3, [r3, #4]
 8019862:	681b      	ldr	r3, [r3, #0]
 8019864:	4798      	blx	r3
 8019866:	68fb      	ldr	r3, [r7, #12]
 8019868:	2200      	movs	r2, #0
 801986a:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 801986e:	68fb      	ldr	r3, [r7, #12]
 8019870:	2200      	movs	r2, #0
 8019872:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 8019876:	68fb      	ldr	r3, [r7, #12]
 8019878:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 801987c:	2b00      	cmp	r3, #0
 801987e:	d101      	bne.n	8019884 <USBD_CDC_Init+0x1a8>
 8019880:	2302      	movs	r3, #2
 8019882:	e018      	b.n	80198b6 <USBD_CDC_Init+0x1da>
 8019884:	687b      	ldr	r3, [r7, #4]
 8019886:	7c1b      	ldrb	r3, [r3, #16]
 8019888:	2b00      	cmp	r3, #0
 801988a:	d10a      	bne.n	80198a2 <USBD_CDC_Init+0x1c6>
 801988c:	4b0d      	ldr	r3, [pc, #52]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 801988e:	7819      	ldrb	r1, [r3, #0]
 8019890:	68fb      	ldr	r3, [r7, #12]
 8019892:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019896:	f44f 7300 	mov.w	r3, #512	; 0x200
 801989a:	6878      	ldr	r0, [r7, #4]
 801989c:	f005 fd76 	bl	801f38c <USBD_LL_PrepareReceive>
 80198a0:	e008      	b.n	80198b4 <USBD_CDC_Init+0x1d8>
 80198a2:	4b08      	ldr	r3, [pc, #32]	; (80198c4 <USBD_CDC_Init+0x1e8>)
 80198a4:	7819      	ldrb	r1, [r3, #0]
 80198a6:	68fb      	ldr	r3, [r7, #12]
 80198a8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80198ac:	2340      	movs	r3, #64	; 0x40
 80198ae:	6878      	ldr	r0, [r7, #4]
 80198b0:	f005 fd6c 	bl	801f38c <USBD_LL_PrepareReceive>
 80198b4:	2300      	movs	r3, #0
 80198b6:	4618      	mov	r0, r3
 80198b8:	3710      	adds	r7, #16
 80198ba:	46bd      	mov	sp, r7
 80198bc:	bd80      	pop	{r7, pc}
 80198be:	bf00      	nop
 80198c0:	200000e3 	.word	0x200000e3
 80198c4:	200000e4 	.word	0x200000e4
 80198c8:	200000e5 	.word	0x200000e5

080198cc <USBD_CDC_DeInit>:
 80198cc:	b580      	push	{r7, lr}
 80198ce:	b082      	sub	sp, #8
 80198d0:	af00      	add	r7, sp, #0
 80198d2:	6078      	str	r0, [r7, #4]
 80198d4:	460b      	mov	r3, r1
 80198d6:	70fb      	strb	r3, [r7, #3]
 80198d8:	4b3a      	ldr	r3, [pc, #232]	; (80199c4 <USBD_CDC_DeInit+0xf8>)
 80198da:	781b      	ldrb	r3, [r3, #0]
 80198dc:	4619      	mov	r1, r3
 80198de:	6878      	ldr	r0, [r7, #4]
 80198e0:	f005 fc8b 	bl	801f1fa <USBD_LL_CloseEP>
 80198e4:	4b37      	ldr	r3, [pc, #220]	; (80199c4 <USBD_CDC_DeInit+0xf8>)
 80198e6:	781b      	ldrb	r3, [r3, #0]
 80198e8:	f003 020f 	and.w	r2, r3, #15
 80198ec:	6879      	ldr	r1, [r7, #4]
 80198ee:	4613      	mov	r3, r2
 80198f0:	009b      	lsls	r3, r3, #2
 80198f2:	4413      	add	r3, r2
 80198f4:	009b      	lsls	r3, r3, #2
 80198f6:	440b      	add	r3, r1
 80198f8:	3324      	adds	r3, #36	; 0x24
 80198fa:	2200      	movs	r2, #0
 80198fc:	801a      	strh	r2, [r3, #0]
 80198fe:	4b32      	ldr	r3, [pc, #200]	; (80199c8 <USBD_CDC_DeInit+0xfc>)
 8019900:	781b      	ldrb	r3, [r3, #0]
 8019902:	4619      	mov	r1, r3
 8019904:	6878      	ldr	r0, [r7, #4]
 8019906:	f005 fc78 	bl	801f1fa <USBD_LL_CloseEP>
 801990a:	4b2f      	ldr	r3, [pc, #188]	; (80199c8 <USBD_CDC_DeInit+0xfc>)
 801990c:	781b      	ldrb	r3, [r3, #0]
 801990e:	f003 020f 	and.w	r2, r3, #15
 8019912:	6879      	ldr	r1, [r7, #4]
 8019914:	4613      	mov	r3, r2
 8019916:	009b      	lsls	r3, r3, #2
 8019918:	4413      	add	r3, r2
 801991a:	009b      	lsls	r3, r3, #2
 801991c:	440b      	add	r3, r1
 801991e:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 8019922:	2200      	movs	r2, #0
 8019924:	801a      	strh	r2, [r3, #0]
 8019926:	4b29      	ldr	r3, [pc, #164]	; (80199cc <USBD_CDC_DeInit+0x100>)
 8019928:	781b      	ldrb	r3, [r3, #0]
 801992a:	4619      	mov	r1, r3
 801992c:	6878      	ldr	r0, [r7, #4]
 801992e:	f005 fc64 	bl	801f1fa <USBD_LL_CloseEP>
 8019932:	4b26      	ldr	r3, [pc, #152]	; (80199cc <USBD_CDC_DeInit+0x100>)
 8019934:	781b      	ldrb	r3, [r3, #0]
 8019936:	f003 020f 	and.w	r2, r3, #15
 801993a:	6879      	ldr	r1, [r7, #4]
 801993c:	4613      	mov	r3, r2
 801993e:	009b      	lsls	r3, r3, #2
 8019940:	4413      	add	r3, r2
 8019942:	009b      	lsls	r3, r3, #2
 8019944:	440b      	add	r3, r1
 8019946:	3324      	adds	r3, #36	; 0x24
 8019948:	2200      	movs	r2, #0
 801994a:	801a      	strh	r2, [r3, #0]
 801994c:	4b1f      	ldr	r3, [pc, #124]	; (80199cc <USBD_CDC_DeInit+0x100>)
 801994e:	781b      	ldrb	r3, [r3, #0]
 8019950:	f003 020f 	and.w	r2, r3, #15
 8019954:	6879      	ldr	r1, [r7, #4]
 8019956:	4613      	mov	r3, r2
 8019958:	009b      	lsls	r3, r3, #2
 801995a:	4413      	add	r3, r2
 801995c:	009b      	lsls	r3, r3, #2
 801995e:	440b      	add	r3, r1
 8019960:	3326      	adds	r3, #38	; 0x26
 8019962:	2200      	movs	r2, #0
 8019964:	801a      	strh	r2, [r3, #0]
 8019966:	687b      	ldr	r3, [r7, #4]
 8019968:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801996c:	687b      	ldr	r3, [r7, #4]
 801996e:	32b0      	adds	r2, #176	; 0xb0
 8019970:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019974:	2b00      	cmp	r3, #0
 8019976:	d01f      	beq.n	80199b8 <USBD_CDC_DeInit+0xec>
 8019978:	687b      	ldr	r3, [r7, #4]
 801997a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 801997e:	687a      	ldr	r2, [r7, #4]
 8019980:	33b0      	adds	r3, #176	; 0xb0
 8019982:	009b      	lsls	r3, r3, #2
 8019984:	4413      	add	r3, r2
 8019986:	685b      	ldr	r3, [r3, #4]
 8019988:	685b      	ldr	r3, [r3, #4]
 801998a:	4798      	blx	r3
 801998c:	687b      	ldr	r3, [r7, #4]
 801998e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019992:	687b      	ldr	r3, [r7, #4]
 8019994:	32b0      	adds	r2, #176	; 0xb0
 8019996:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801999a:	4618      	mov	r0, r3
 801999c:	f005 fd38 	bl	801f410 <USBD_static_free>
 80199a0:	687b      	ldr	r3, [r7, #4]
 80199a2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80199a6:	687b      	ldr	r3, [r7, #4]
 80199a8:	32b0      	adds	r2, #176	; 0xb0
 80199aa:	2100      	movs	r1, #0
 80199ac:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80199b0:	687b      	ldr	r3, [r7, #4]
 80199b2:	2200      	movs	r2, #0
 80199b4:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 80199b8:	2300      	movs	r3, #0
 80199ba:	4618      	mov	r0, r3
 80199bc:	3708      	adds	r7, #8
 80199be:	46bd      	mov	sp, r7
 80199c0:	bd80      	pop	{r7, pc}
 80199c2:	bf00      	nop
 80199c4:	200000e3 	.word	0x200000e3
 80199c8:	200000e4 	.word	0x200000e4
 80199cc:	200000e5 	.word	0x200000e5

080199d0 <USBD_CDC_Setup>:
 80199d0:	b580      	push	{r7, lr}
 80199d2:	b086      	sub	sp, #24
 80199d4:	af00      	add	r7, sp, #0
 80199d6:	6078      	str	r0, [r7, #4]
 80199d8:	6039      	str	r1, [r7, #0]
 80199da:	687b      	ldr	r3, [r7, #4]
 80199dc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 80199e0:	687b      	ldr	r3, [r7, #4]
 80199e2:	32b0      	adds	r2, #176	; 0xb0
 80199e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80199e8:	613b      	str	r3, [r7, #16]
 80199ea:	2300      	movs	r3, #0
 80199ec:	737b      	strb	r3, [r7, #13]
 80199ee:	2300      	movs	r3, #0
 80199f0:	817b      	strh	r3, [r7, #10]
 80199f2:	2300      	movs	r3, #0
 80199f4:	75fb      	strb	r3, [r7, #23]
 80199f6:	693b      	ldr	r3, [r7, #16]
 80199f8:	2b00      	cmp	r3, #0
 80199fa:	d101      	bne.n	8019a00 <USBD_CDC_Setup+0x30>
 80199fc:	2303      	movs	r3, #3
 80199fe:	e0bf      	b.n	8019b80 <USBD_CDC_Setup+0x1b0>
 8019a00:	683b      	ldr	r3, [r7, #0]
 8019a02:	781b      	ldrb	r3, [r3, #0]
 8019a04:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019a08:	2b00      	cmp	r3, #0
 8019a0a:	d050      	beq.n	8019aae <USBD_CDC_Setup+0xde>
 8019a0c:	2b20      	cmp	r3, #32
 8019a0e:	f040 80af 	bne.w	8019b70 <USBD_CDC_Setup+0x1a0>
 8019a12:	683b      	ldr	r3, [r7, #0]
 8019a14:	88db      	ldrh	r3, [r3, #6]
 8019a16:	2b00      	cmp	r3, #0
 8019a18:	d03a      	beq.n	8019a90 <USBD_CDC_Setup+0xc0>
 8019a1a:	683b      	ldr	r3, [r7, #0]
 8019a1c:	781b      	ldrb	r3, [r3, #0]
 8019a1e:	b25b      	sxtb	r3, r3
 8019a20:	2b00      	cmp	r3, #0
 8019a22:	da1b      	bge.n	8019a5c <USBD_CDC_Setup+0x8c>
 8019a24:	687b      	ldr	r3, [r7, #4]
 8019a26:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019a2a:	687a      	ldr	r2, [r7, #4]
 8019a2c:	33b0      	adds	r3, #176	; 0xb0
 8019a2e:	009b      	lsls	r3, r3, #2
 8019a30:	4413      	add	r3, r2
 8019a32:	685b      	ldr	r3, [r3, #4]
 8019a34:	689b      	ldr	r3, [r3, #8]
 8019a36:	683a      	ldr	r2, [r7, #0]
 8019a38:	7850      	ldrb	r0, [r2, #1]
 8019a3a:	6939      	ldr	r1, [r7, #16]
 8019a3c:	683a      	ldr	r2, [r7, #0]
 8019a3e:	88d2      	ldrh	r2, [r2, #6]
 8019a40:	4798      	blx	r3
 8019a42:	683b      	ldr	r3, [r7, #0]
 8019a44:	88db      	ldrh	r3, [r3, #6]
 8019a46:	2b07      	cmp	r3, #7
 8019a48:	bf28      	it	cs
 8019a4a:	2307      	movcs	r3, #7
 8019a4c:	81fb      	strh	r3, [r7, #14]
 8019a4e:	693b      	ldr	r3, [r7, #16]
 8019a50:	89fa      	ldrh	r2, [r7, #14]
 8019a52:	4619      	mov	r1, r3
 8019a54:	6878      	ldr	r0, [r7, #4]
 8019a56:	f001 fd43 	bl	801b4e0 <USBD_CtlSendData>
 8019a5a:	e090      	b.n	8019b7e <USBD_CDC_Setup+0x1ae>
 8019a5c:	683b      	ldr	r3, [r7, #0]
 8019a5e:	785a      	ldrb	r2, [r3, #1]
 8019a60:	693b      	ldr	r3, [r7, #16]
 8019a62:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 8019a66:	683b      	ldr	r3, [r7, #0]
 8019a68:	88db      	ldrh	r3, [r3, #6]
 8019a6a:	2b3f      	cmp	r3, #63	; 0x3f
 8019a6c:	d803      	bhi.n	8019a76 <USBD_CDC_Setup+0xa6>
 8019a6e:	683b      	ldr	r3, [r7, #0]
 8019a70:	88db      	ldrh	r3, [r3, #6]
 8019a72:	b2da      	uxtb	r2, r3
 8019a74:	e000      	b.n	8019a78 <USBD_CDC_Setup+0xa8>
 8019a76:	2240      	movs	r2, #64	; 0x40
 8019a78:	693b      	ldr	r3, [r7, #16]
 8019a7a:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 8019a7e:	6939      	ldr	r1, [r7, #16]
 8019a80:	693b      	ldr	r3, [r7, #16]
 8019a82:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 8019a86:	461a      	mov	r2, r3
 8019a88:	6878      	ldr	r0, [r7, #4]
 8019a8a:	f001 fd55 	bl	801b538 <USBD_CtlPrepareRx>
 8019a8e:	e076      	b.n	8019b7e <USBD_CDC_Setup+0x1ae>
 8019a90:	687b      	ldr	r3, [r7, #4]
 8019a92:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019a96:	687a      	ldr	r2, [r7, #4]
 8019a98:	33b0      	adds	r3, #176	; 0xb0
 8019a9a:	009b      	lsls	r3, r3, #2
 8019a9c:	4413      	add	r3, r2
 8019a9e:	685b      	ldr	r3, [r3, #4]
 8019aa0:	689b      	ldr	r3, [r3, #8]
 8019aa2:	683a      	ldr	r2, [r7, #0]
 8019aa4:	7850      	ldrb	r0, [r2, #1]
 8019aa6:	2200      	movs	r2, #0
 8019aa8:	6839      	ldr	r1, [r7, #0]
 8019aaa:	4798      	blx	r3
 8019aac:	e067      	b.n	8019b7e <USBD_CDC_Setup+0x1ae>
 8019aae:	683b      	ldr	r3, [r7, #0]
 8019ab0:	785b      	ldrb	r3, [r3, #1]
 8019ab2:	2b0b      	cmp	r3, #11
 8019ab4:	d851      	bhi.n	8019b5a <USBD_CDC_Setup+0x18a>
 8019ab6:	a201      	add	r2, pc, #4	; (adr r2, 8019abc <USBD_CDC_Setup+0xec>)
 8019ab8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019abc:	08019aed 	.word	0x08019aed
 8019ac0:	08019b69 	.word	0x08019b69
 8019ac4:	08019b5b 	.word	0x08019b5b
 8019ac8:	08019b5b 	.word	0x08019b5b
 8019acc:	08019b5b 	.word	0x08019b5b
 8019ad0:	08019b5b 	.word	0x08019b5b
 8019ad4:	08019b5b 	.word	0x08019b5b
 8019ad8:	08019b5b 	.word	0x08019b5b
 8019adc:	08019b5b 	.word	0x08019b5b
 8019ae0:	08019b5b 	.word	0x08019b5b
 8019ae4:	08019b17 	.word	0x08019b17
 8019ae8:	08019b41 	.word	0x08019b41
 8019aec:	687b      	ldr	r3, [r7, #4]
 8019aee:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8019af2:	b2db      	uxtb	r3, r3
 8019af4:	2b03      	cmp	r3, #3
 8019af6:	d107      	bne.n	8019b08 <USBD_CDC_Setup+0x138>
 8019af8:	f107 030a 	add.w	r3, r7, #10
 8019afc:	2202      	movs	r2, #2
 8019afe:	4619      	mov	r1, r3
 8019b00:	6878      	ldr	r0, [r7, #4]
 8019b02:	f001 fced 	bl	801b4e0 <USBD_CtlSendData>
 8019b06:	e032      	b.n	8019b6e <USBD_CDC_Setup+0x19e>
 8019b08:	6839      	ldr	r1, [r7, #0]
 8019b0a:	6878      	ldr	r0, [r7, #4]
 8019b0c:	f001 fc77 	bl	801b3fe <USBD_CtlError>
 8019b10:	2303      	movs	r3, #3
 8019b12:	75fb      	strb	r3, [r7, #23]
 8019b14:	e02b      	b.n	8019b6e <USBD_CDC_Setup+0x19e>
 8019b16:	687b      	ldr	r3, [r7, #4]
 8019b18:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8019b1c:	b2db      	uxtb	r3, r3
 8019b1e:	2b03      	cmp	r3, #3
 8019b20:	d107      	bne.n	8019b32 <USBD_CDC_Setup+0x162>
 8019b22:	f107 030d 	add.w	r3, r7, #13
 8019b26:	2201      	movs	r2, #1
 8019b28:	4619      	mov	r1, r3
 8019b2a:	6878      	ldr	r0, [r7, #4]
 8019b2c:	f001 fcd8 	bl	801b4e0 <USBD_CtlSendData>
 8019b30:	e01d      	b.n	8019b6e <USBD_CDC_Setup+0x19e>
 8019b32:	6839      	ldr	r1, [r7, #0]
 8019b34:	6878      	ldr	r0, [r7, #4]
 8019b36:	f001 fc62 	bl	801b3fe <USBD_CtlError>
 8019b3a:	2303      	movs	r3, #3
 8019b3c:	75fb      	strb	r3, [r7, #23]
 8019b3e:	e016      	b.n	8019b6e <USBD_CDC_Setup+0x19e>
 8019b40:	687b      	ldr	r3, [r7, #4]
 8019b42:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8019b46:	b2db      	uxtb	r3, r3
 8019b48:	2b03      	cmp	r3, #3
 8019b4a:	d00f      	beq.n	8019b6c <USBD_CDC_Setup+0x19c>
 8019b4c:	6839      	ldr	r1, [r7, #0]
 8019b4e:	6878      	ldr	r0, [r7, #4]
 8019b50:	f001 fc55 	bl	801b3fe <USBD_CtlError>
 8019b54:	2303      	movs	r3, #3
 8019b56:	75fb      	strb	r3, [r7, #23]
 8019b58:	e008      	b.n	8019b6c <USBD_CDC_Setup+0x19c>
 8019b5a:	6839      	ldr	r1, [r7, #0]
 8019b5c:	6878      	ldr	r0, [r7, #4]
 8019b5e:	f001 fc4e 	bl	801b3fe <USBD_CtlError>
 8019b62:	2303      	movs	r3, #3
 8019b64:	75fb      	strb	r3, [r7, #23]
 8019b66:	e002      	b.n	8019b6e <USBD_CDC_Setup+0x19e>
 8019b68:	bf00      	nop
 8019b6a:	e008      	b.n	8019b7e <USBD_CDC_Setup+0x1ae>
 8019b6c:	bf00      	nop
 8019b6e:	e006      	b.n	8019b7e <USBD_CDC_Setup+0x1ae>
 8019b70:	6839      	ldr	r1, [r7, #0]
 8019b72:	6878      	ldr	r0, [r7, #4]
 8019b74:	f001 fc43 	bl	801b3fe <USBD_CtlError>
 8019b78:	2303      	movs	r3, #3
 8019b7a:	75fb      	strb	r3, [r7, #23]
 8019b7c:	bf00      	nop
 8019b7e:	7dfb      	ldrb	r3, [r7, #23]
 8019b80:	4618      	mov	r0, r3
 8019b82:	3718      	adds	r7, #24
 8019b84:	46bd      	mov	sp, r7
 8019b86:	bd80      	pop	{r7, pc}

08019b88 <USBD_CDC_DataIn>:
 8019b88:	b580      	push	{r7, lr}
 8019b8a:	b084      	sub	sp, #16
 8019b8c:	af00      	add	r7, sp, #0
 8019b8e:	6078      	str	r0, [r7, #4]
 8019b90:	460b      	mov	r3, r1
 8019b92:	70fb      	strb	r3, [r7, #3]
 8019b94:	687b      	ldr	r3, [r7, #4]
 8019b96:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 8019b9a:	60fb      	str	r3, [r7, #12]
 8019b9c:	687b      	ldr	r3, [r7, #4]
 8019b9e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019ba2:	687b      	ldr	r3, [r7, #4]
 8019ba4:	32b0      	adds	r2, #176	; 0xb0
 8019ba6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019baa:	2b00      	cmp	r3, #0
 8019bac:	d101      	bne.n	8019bb2 <USBD_CDC_DataIn+0x2a>
 8019bae:	2303      	movs	r3, #3
 8019bb0:	e065      	b.n	8019c7e <USBD_CDC_DataIn+0xf6>
 8019bb2:	687b      	ldr	r3, [r7, #4]
 8019bb4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019bb8:	687b      	ldr	r3, [r7, #4]
 8019bba:	32b0      	adds	r2, #176	; 0xb0
 8019bbc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019bc0:	60bb      	str	r3, [r7, #8]
 8019bc2:	78fb      	ldrb	r3, [r7, #3]
 8019bc4:	f003 020f 	and.w	r2, r3, #15
 8019bc8:	6879      	ldr	r1, [r7, #4]
 8019bca:	4613      	mov	r3, r2
 8019bcc:	009b      	lsls	r3, r3, #2
 8019bce:	4413      	add	r3, r2
 8019bd0:	009b      	lsls	r3, r3, #2
 8019bd2:	440b      	add	r3, r1
 8019bd4:	3318      	adds	r3, #24
 8019bd6:	681b      	ldr	r3, [r3, #0]
 8019bd8:	2b00      	cmp	r3, #0
 8019bda:	d02f      	beq.n	8019c3c <USBD_CDC_DataIn+0xb4>
 8019bdc:	78fb      	ldrb	r3, [r7, #3]
 8019bde:	f003 020f 	and.w	r2, r3, #15
 8019be2:	6879      	ldr	r1, [r7, #4]
 8019be4:	4613      	mov	r3, r2
 8019be6:	009b      	lsls	r3, r3, #2
 8019be8:	4413      	add	r3, r2
 8019bea:	009b      	lsls	r3, r3, #2
 8019bec:	440b      	add	r3, r1
 8019bee:	3318      	adds	r3, #24
 8019bf0:	681a      	ldr	r2, [r3, #0]
 8019bf2:	78fb      	ldrb	r3, [r7, #3]
 8019bf4:	f003 010f 	and.w	r1, r3, #15
 8019bf8:	68f8      	ldr	r0, [r7, #12]
 8019bfa:	460b      	mov	r3, r1
 8019bfc:	00db      	lsls	r3, r3, #3
 8019bfe:	440b      	add	r3, r1
 8019c00:	009b      	lsls	r3, r3, #2
 8019c02:	4403      	add	r3, r0
 8019c04:	3348      	adds	r3, #72	; 0x48
 8019c06:	681b      	ldr	r3, [r3, #0]
 8019c08:	fbb2 f1f3 	udiv	r1, r2, r3
 8019c0c:	fb01 f303 	mul.w	r3, r1, r3
 8019c10:	1ad3      	subs	r3, r2, r3
 8019c12:	2b00      	cmp	r3, #0
 8019c14:	d112      	bne.n	8019c3c <USBD_CDC_DataIn+0xb4>
 8019c16:	78fb      	ldrb	r3, [r7, #3]
 8019c18:	f003 020f 	and.w	r2, r3, #15
 8019c1c:	6879      	ldr	r1, [r7, #4]
 8019c1e:	4613      	mov	r3, r2
 8019c20:	009b      	lsls	r3, r3, #2
 8019c22:	4413      	add	r3, r2
 8019c24:	009b      	lsls	r3, r3, #2
 8019c26:	440b      	add	r3, r1
 8019c28:	3318      	adds	r3, #24
 8019c2a:	2200      	movs	r2, #0
 8019c2c:	601a      	str	r2, [r3, #0]
 8019c2e:	78f9      	ldrb	r1, [r7, #3]
 8019c30:	2300      	movs	r3, #0
 8019c32:	2200      	movs	r2, #0
 8019c34:	6878      	ldr	r0, [r7, #4]
 8019c36:	f005 fb88 	bl	801f34a <USBD_LL_Transmit>
 8019c3a:	e01f      	b.n	8019c7c <USBD_CDC_DataIn+0xf4>
 8019c3c:	68bb      	ldr	r3, [r7, #8]
 8019c3e:	2200      	movs	r2, #0
 8019c40:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8019c44:	687b      	ldr	r3, [r7, #4]
 8019c46:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019c4a:	687a      	ldr	r2, [r7, #4]
 8019c4c:	33b0      	adds	r3, #176	; 0xb0
 8019c4e:	009b      	lsls	r3, r3, #2
 8019c50:	4413      	add	r3, r2
 8019c52:	685b      	ldr	r3, [r3, #4]
 8019c54:	691b      	ldr	r3, [r3, #16]
 8019c56:	2b00      	cmp	r3, #0
 8019c58:	d010      	beq.n	8019c7c <USBD_CDC_DataIn+0xf4>
 8019c5a:	687b      	ldr	r3, [r7, #4]
 8019c5c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019c60:	687a      	ldr	r2, [r7, #4]
 8019c62:	33b0      	adds	r3, #176	; 0xb0
 8019c64:	009b      	lsls	r3, r3, #2
 8019c66:	4413      	add	r3, r2
 8019c68:	685b      	ldr	r3, [r3, #4]
 8019c6a:	691b      	ldr	r3, [r3, #16]
 8019c6c:	68ba      	ldr	r2, [r7, #8]
 8019c6e:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 8019c72:	68ba      	ldr	r2, [r7, #8]
 8019c74:	f502 7104 	add.w	r1, r2, #528	; 0x210
 8019c78:	78fa      	ldrb	r2, [r7, #3]
 8019c7a:	4798      	blx	r3
 8019c7c:	2300      	movs	r3, #0
 8019c7e:	4618      	mov	r0, r3
 8019c80:	3710      	adds	r7, #16
 8019c82:	46bd      	mov	sp, r7
 8019c84:	bd80      	pop	{r7, pc}

08019c86 <USBD_CDC_DataOut>:
 8019c86:	b580      	push	{r7, lr}
 8019c88:	b084      	sub	sp, #16
 8019c8a:	af00      	add	r7, sp, #0
 8019c8c:	6078      	str	r0, [r7, #4]
 8019c8e:	460b      	mov	r3, r1
 8019c90:	70fb      	strb	r3, [r7, #3]
 8019c92:	687b      	ldr	r3, [r7, #4]
 8019c94:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019c98:	687b      	ldr	r3, [r7, #4]
 8019c9a:	32b0      	adds	r2, #176	; 0xb0
 8019c9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019ca0:	60fb      	str	r3, [r7, #12]
 8019ca2:	687b      	ldr	r3, [r7, #4]
 8019ca4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019ca8:	687b      	ldr	r3, [r7, #4]
 8019caa:	32b0      	adds	r2, #176	; 0xb0
 8019cac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019cb0:	2b00      	cmp	r3, #0
 8019cb2:	d101      	bne.n	8019cb8 <USBD_CDC_DataOut+0x32>
 8019cb4:	2303      	movs	r3, #3
 8019cb6:	e01a      	b.n	8019cee <USBD_CDC_DataOut+0x68>
 8019cb8:	78fb      	ldrb	r3, [r7, #3]
 8019cba:	4619      	mov	r1, r3
 8019cbc:	6878      	ldr	r0, [r7, #4]
 8019cbe:	f005 fb86 	bl	801f3ce <USBD_LL_GetRxDataSize>
 8019cc2:	4602      	mov	r2, r0
 8019cc4:	68fb      	ldr	r3, [r7, #12]
 8019cc6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8019cca:	687b      	ldr	r3, [r7, #4]
 8019ccc:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019cd0:	687a      	ldr	r2, [r7, #4]
 8019cd2:	33b0      	adds	r3, #176	; 0xb0
 8019cd4:	009b      	lsls	r3, r3, #2
 8019cd6:	4413      	add	r3, r2
 8019cd8:	685b      	ldr	r3, [r3, #4]
 8019cda:	68db      	ldr	r3, [r3, #12]
 8019cdc:	68fa      	ldr	r2, [r7, #12]
 8019cde:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 8019ce2:	68fa      	ldr	r2, [r7, #12]
 8019ce4:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 8019ce8:	4611      	mov	r1, r2
 8019cea:	4798      	blx	r3
 8019cec:	2300      	movs	r3, #0
 8019cee:	4618      	mov	r0, r3
 8019cf0:	3710      	adds	r7, #16
 8019cf2:	46bd      	mov	sp, r7
 8019cf4:	bd80      	pop	{r7, pc}

08019cf6 <USBD_CDC_EP0_RxReady>:
 8019cf6:	b580      	push	{r7, lr}
 8019cf8:	b084      	sub	sp, #16
 8019cfa:	af00      	add	r7, sp, #0
 8019cfc:	6078      	str	r0, [r7, #4]
 8019cfe:	687b      	ldr	r3, [r7, #4]
 8019d00:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019d04:	687b      	ldr	r3, [r7, #4]
 8019d06:	32b0      	adds	r2, #176	; 0xb0
 8019d08:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019d0c:	60fb      	str	r3, [r7, #12]
 8019d0e:	68fb      	ldr	r3, [r7, #12]
 8019d10:	2b00      	cmp	r3, #0
 8019d12:	d101      	bne.n	8019d18 <USBD_CDC_EP0_RxReady+0x22>
 8019d14:	2303      	movs	r3, #3
 8019d16:	e025      	b.n	8019d64 <USBD_CDC_EP0_RxReady+0x6e>
 8019d18:	687b      	ldr	r3, [r7, #4]
 8019d1a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019d1e:	687a      	ldr	r2, [r7, #4]
 8019d20:	33b0      	adds	r3, #176	; 0xb0
 8019d22:	009b      	lsls	r3, r3, #2
 8019d24:	4413      	add	r3, r2
 8019d26:	685b      	ldr	r3, [r3, #4]
 8019d28:	2b00      	cmp	r3, #0
 8019d2a:	d01a      	beq.n	8019d62 <USBD_CDC_EP0_RxReady+0x6c>
 8019d2c:	68fb      	ldr	r3, [r7, #12]
 8019d2e:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 8019d32:	2bff      	cmp	r3, #255	; 0xff
 8019d34:	d015      	beq.n	8019d62 <USBD_CDC_EP0_RxReady+0x6c>
 8019d36:	687b      	ldr	r3, [r7, #4]
 8019d38:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019d3c:	687a      	ldr	r2, [r7, #4]
 8019d3e:	33b0      	adds	r3, #176	; 0xb0
 8019d40:	009b      	lsls	r3, r3, #2
 8019d42:	4413      	add	r3, r2
 8019d44:	685b      	ldr	r3, [r3, #4]
 8019d46:	689b      	ldr	r3, [r3, #8]
 8019d48:	68fa      	ldr	r2, [r7, #12]
 8019d4a:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
 8019d4e:	68f9      	ldr	r1, [r7, #12]
 8019d50:	68fa      	ldr	r2, [r7, #12]
 8019d52:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
 8019d56:	b292      	uxth	r2, r2
 8019d58:	4798      	blx	r3
 8019d5a:	68fb      	ldr	r3, [r7, #12]
 8019d5c:	22ff      	movs	r2, #255	; 0xff
 8019d5e:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 8019d62:	2300      	movs	r3, #0
 8019d64:	4618      	mov	r0, r3
 8019d66:	3710      	adds	r7, #16
 8019d68:	46bd      	mov	sp, r7
 8019d6a:	bd80      	pop	{r7, pc}

08019d6c <USBD_CDC_GetFSCfgDesc>:
 8019d6c:	b580      	push	{r7, lr}
 8019d6e:	b086      	sub	sp, #24
 8019d70:	af00      	add	r7, sp, #0
 8019d72:	6078      	str	r0, [r7, #4]
 8019d74:	2182      	movs	r1, #130	; 0x82
 8019d76:	4818      	ldr	r0, [pc, #96]	; (8019dd8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019d78:	f000 fd09 	bl	801a78e <USBD_GetEpDesc>
 8019d7c:	6178      	str	r0, [r7, #20]
 8019d7e:	2101      	movs	r1, #1
 8019d80:	4815      	ldr	r0, [pc, #84]	; (8019dd8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019d82:	f000 fd04 	bl	801a78e <USBD_GetEpDesc>
 8019d86:	6138      	str	r0, [r7, #16]
 8019d88:	2181      	movs	r1, #129	; 0x81
 8019d8a:	4813      	ldr	r0, [pc, #76]	; (8019dd8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019d8c:	f000 fcff 	bl	801a78e <USBD_GetEpDesc>
 8019d90:	60f8      	str	r0, [r7, #12]
 8019d92:	697b      	ldr	r3, [r7, #20]
 8019d94:	2b00      	cmp	r3, #0
 8019d96:	d002      	beq.n	8019d9e <USBD_CDC_GetFSCfgDesc+0x32>
 8019d98:	697b      	ldr	r3, [r7, #20]
 8019d9a:	2210      	movs	r2, #16
 8019d9c:	719a      	strb	r2, [r3, #6]
 8019d9e:	693b      	ldr	r3, [r7, #16]
 8019da0:	2b00      	cmp	r3, #0
 8019da2:	d006      	beq.n	8019db2 <USBD_CDC_GetFSCfgDesc+0x46>
 8019da4:	693b      	ldr	r3, [r7, #16]
 8019da6:	2200      	movs	r2, #0
 8019da8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019dac:	711a      	strb	r2, [r3, #4]
 8019dae:	2200      	movs	r2, #0
 8019db0:	715a      	strb	r2, [r3, #5]
 8019db2:	68fb      	ldr	r3, [r7, #12]
 8019db4:	2b00      	cmp	r3, #0
 8019db6:	d006      	beq.n	8019dc6 <USBD_CDC_GetFSCfgDesc+0x5a>
 8019db8:	68fb      	ldr	r3, [r7, #12]
 8019dba:	2200      	movs	r2, #0
 8019dbc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019dc0:	711a      	strb	r2, [r3, #4]
 8019dc2:	2200      	movs	r2, #0
 8019dc4:	715a      	strb	r2, [r3, #5]
 8019dc6:	687b      	ldr	r3, [r7, #4]
 8019dc8:	2243      	movs	r2, #67	; 0x43
 8019dca:	801a      	strh	r2, [r3, #0]
 8019dcc:	4b02      	ldr	r3, [pc, #8]	; (8019dd8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8019dce:	4618      	mov	r0, r3
 8019dd0:	3718      	adds	r7, #24
 8019dd2:	46bd      	mov	sp, r7
 8019dd4:	bd80      	pop	{r7, pc}
 8019dd6:	bf00      	nop
 8019dd8:	200000a0 	.word	0x200000a0

08019ddc <USBD_CDC_GetHSCfgDesc>:
 8019ddc:	b580      	push	{r7, lr}
 8019dde:	b086      	sub	sp, #24
 8019de0:	af00      	add	r7, sp, #0
 8019de2:	6078      	str	r0, [r7, #4]
 8019de4:	2182      	movs	r1, #130	; 0x82
 8019de6:	4818      	ldr	r0, [pc, #96]	; (8019e48 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019de8:	f000 fcd1 	bl	801a78e <USBD_GetEpDesc>
 8019dec:	6178      	str	r0, [r7, #20]
 8019dee:	2101      	movs	r1, #1
 8019df0:	4815      	ldr	r0, [pc, #84]	; (8019e48 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019df2:	f000 fccc 	bl	801a78e <USBD_GetEpDesc>
 8019df6:	6138      	str	r0, [r7, #16]
 8019df8:	2181      	movs	r1, #129	; 0x81
 8019dfa:	4813      	ldr	r0, [pc, #76]	; (8019e48 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019dfc:	f000 fcc7 	bl	801a78e <USBD_GetEpDesc>
 8019e00:	60f8      	str	r0, [r7, #12]
 8019e02:	697b      	ldr	r3, [r7, #20]
 8019e04:	2b00      	cmp	r3, #0
 8019e06:	d002      	beq.n	8019e0e <USBD_CDC_GetHSCfgDesc+0x32>
 8019e08:	697b      	ldr	r3, [r7, #20]
 8019e0a:	2210      	movs	r2, #16
 8019e0c:	719a      	strb	r2, [r3, #6]
 8019e0e:	693b      	ldr	r3, [r7, #16]
 8019e10:	2b00      	cmp	r3, #0
 8019e12:	d006      	beq.n	8019e22 <USBD_CDC_GetHSCfgDesc+0x46>
 8019e14:	693b      	ldr	r3, [r7, #16]
 8019e16:	2200      	movs	r2, #0
 8019e18:	711a      	strb	r2, [r3, #4]
 8019e1a:	2200      	movs	r2, #0
 8019e1c:	f042 0202 	orr.w	r2, r2, #2
 8019e20:	715a      	strb	r2, [r3, #5]
 8019e22:	68fb      	ldr	r3, [r7, #12]
 8019e24:	2b00      	cmp	r3, #0
 8019e26:	d006      	beq.n	8019e36 <USBD_CDC_GetHSCfgDesc+0x5a>
 8019e28:	68fb      	ldr	r3, [r7, #12]
 8019e2a:	2200      	movs	r2, #0
 8019e2c:	711a      	strb	r2, [r3, #4]
 8019e2e:	2200      	movs	r2, #0
 8019e30:	f042 0202 	orr.w	r2, r2, #2
 8019e34:	715a      	strb	r2, [r3, #5]
 8019e36:	687b      	ldr	r3, [r7, #4]
 8019e38:	2243      	movs	r2, #67	; 0x43
 8019e3a:	801a      	strh	r2, [r3, #0]
 8019e3c:	4b02      	ldr	r3, [pc, #8]	; (8019e48 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8019e3e:	4618      	mov	r0, r3
 8019e40:	3718      	adds	r7, #24
 8019e42:	46bd      	mov	sp, r7
 8019e44:	bd80      	pop	{r7, pc}
 8019e46:	bf00      	nop
 8019e48:	200000a0 	.word	0x200000a0

08019e4c <USBD_CDC_GetOtherSpeedCfgDesc>:
 8019e4c:	b580      	push	{r7, lr}
 8019e4e:	b086      	sub	sp, #24
 8019e50:	af00      	add	r7, sp, #0
 8019e52:	6078      	str	r0, [r7, #4]
 8019e54:	2182      	movs	r1, #130	; 0x82
 8019e56:	4818      	ldr	r0, [pc, #96]	; (8019eb8 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019e58:	f000 fc99 	bl	801a78e <USBD_GetEpDesc>
 8019e5c:	6178      	str	r0, [r7, #20]
 8019e5e:	2101      	movs	r1, #1
 8019e60:	4815      	ldr	r0, [pc, #84]	; (8019eb8 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019e62:	f000 fc94 	bl	801a78e <USBD_GetEpDesc>
 8019e66:	6138      	str	r0, [r7, #16]
 8019e68:	2181      	movs	r1, #129	; 0x81
 8019e6a:	4813      	ldr	r0, [pc, #76]	; (8019eb8 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019e6c:	f000 fc8f 	bl	801a78e <USBD_GetEpDesc>
 8019e70:	60f8      	str	r0, [r7, #12]
 8019e72:	697b      	ldr	r3, [r7, #20]
 8019e74:	2b00      	cmp	r3, #0
 8019e76:	d002      	beq.n	8019e7e <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 8019e78:	697b      	ldr	r3, [r7, #20]
 8019e7a:	2210      	movs	r2, #16
 8019e7c:	719a      	strb	r2, [r3, #6]
 8019e7e:	693b      	ldr	r3, [r7, #16]
 8019e80:	2b00      	cmp	r3, #0
 8019e82:	d006      	beq.n	8019e92 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8019e84:	693b      	ldr	r3, [r7, #16]
 8019e86:	2200      	movs	r2, #0
 8019e88:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019e8c:	711a      	strb	r2, [r3, #4]
 8019e8e:	2200      	movs	r2, #0
 8019e90:	715a      	strb	r2, [r3, #5]
 8019e92:	68fb      	ldr	r3, [r7, #12]
 8019e94:	2b00      	cmp	r3, #0
 8019e96:	d006      	beq.n	8019ea6 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 8019e98:	68fb      	ldr	r3, [r7, #12]
 8019e9a:	2200      	movs	r2, #0
 8019e9c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8019ea0:	711a      	strb	r2, [r3, #4]
 8019ea2:	2200      	movs	r2, #0
 8019ea4:	715a      	strb	r2, [r3, #5]
 8019ea6:	687b      	ldr	r3, [r7, #4]
 8019ea8:	2243      	movs	r2, #67	; 0x43
 8019eaa:	801a      	strh	r2, [r3, #0]
 8019eac:	4b02      	ldr	r3, [pc, #8]	; (8019eb8 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8019eae:	4618      	mov	r0, r3
 8019eb0:	3718      	adds	r7, #24
 8019eb2:	46bd      	mov	sp, r7
 8019eb4:	bd80      	pop	{r7, pc}
 8019eb6:	bf00      	nop
 8019eb8:	200000a0 	.word	0x200000a0

08019ebc <USBD_CDC_GetDeviceQualifierDescriptor>:
 8019ebc:	b480      	push	{r7}
 8019ebe:	b083      	sub	sp, #12
 8019ec0:	af00      	add	r7, sp, #0
 8019ec2:	6078      	str	r0, [r7, #4]
 8019ec4:	687b      	ldr	r3, [r7, #4]
 8019ec6:	220a      	movs	r2, #10
 8019ec8:	801a      	strh	r2, [r3, #0]
 8019eca:	4b03      	ldr	r3, [pc, #12]	; (8019ed8 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8019ecc:	4618      	mov	r0, r3
 8019ece:	370c      	adds	r7, #12
 8019ed0:	46bd      	mov	sp, r7
 8019ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ed6:	4770      	bx	lr
 8019ed8:	2000005c 	.word	0x2000005c

08019edc <USBD_CDC_RegisterInterface>:
 8019edc:	b480      	push	{r7}
 8019ede:	b083      	sub	sp, #12
 8019ee0:	af00      	add	r7, sp, #0
 8019ee2:	6078      	str	r0, [r7, #4]
 8019ee4:	6039      	str	r1, [r7, #0]
 8019ee6:	683b      	ldr	r3, [r7, #0]
 8019ee8:	2b00      	cmp	r3, #0
 8019eea:	d101      	bne.n	8019ef0 <USBD_CDC_RegisterInterface+0x14>
 8019eec:	2303      	movs	r3, #3
 8019eee:	e009      	b.n	8019f04 <USBD_CDC_RegisterInterface+0x28>
 8019ef0:	687b      	ldr	r3, [r7, #4]
 8019ef2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 8019ef6:	687a      	ldr	r2, [r7, #4]
 8019ef8:	33b0      	adds	r3, #176	; 0xb0
 8019efa:	009b      	lsls	r3, r3, #2
 8019efc:	4413      	add	r3, r2
 8019efe:	683a      	ldr	r2, [r7, #0]
 8019f00:	605a      	str	r2, [r3, #4]
 8019f02:	2300      	movs	r3, #0
 8019f04:	4618      	mov	r0, r3
 8019f06:	370c      	adds	r7, #12
 8019f08:	46bd      	mov	sp, r7
 8019f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019f0e:	4770      	bx	lr

08019f10 <USBD_CDC_SetTxBuffer>:
 8019f10:	b480      	push	{r7}
 8019f12:	b087      	sub	sp, #28
 8019f14:	af00      	add	r7, sp, #0
 8019f16:	60f8      	str	r0, [r7, #12]
 8019f18:	60b9      	str	r1, [r7, #8]
 8019f1a:	607a      	str	r2, [r7, #4]
 8019f1c:	68fb      	ldr	r3, [r7, #12]
 8019f1e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019f22:	68fb      	ldr	r3, [r7, #12]
 8019f24:	32b0      	adds	r2, #176	; 0xb0
 8019f26:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019f2a:	617b      	str	r3, [r7, #20]
 8019f2c:	697b      	ldr	r3, [r7, #20]
 8019f2e:	2b00      	cmp	r3, #0
 8019f30:	d101      	bne.n	8019f36 <USBD_CDC_SetTxBuffer+0x26>
 8019f32:	2303      	movs	r3, #3
 8019f34:	e008      	b.n	8019f48 <USBD_CDC_SetTxBuffer+0x38>
 8019f36:	697b      	ldr	r3, [r7, #20]
 8019f38:	68ba      	ldr	r2, [r7, #8]
 8019f3a:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8019f3e:	697b      	ldr	r3, [r7, #20]
 8019f40:	687a      	ldr	r2, [r7, #4]
 8019f42:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8019f46:	2300      	movs	r3, #0
 8019f48:	4618      	mov	r0, r3
 8019f4a:	371c      	adds	r7, #28
 8019f4c:	46bd      	mov	sp, r7
 8019f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019f52:	4770      	bx	lr

08019f54 <USBD_CDC_SetRxBuffer>:
 8019f54:	b480      	push	{r7}
 8019f56:	b085      	sub	sp, #20
 8019f58:	af00      	add	r7, sp, #0
 8019f5a:	6078      	str	r0, [r7, #4]
 8019f5c:	6039      	str	r1, [r7, #0]
 8019f5e:	687b      	ldr	r3, [r7, #4]
 8019f60:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019f64:	687b      	ldr	r3, [r7, #4]
 8019f66:	32b0      	adds	r2, #176	; 0xb0
 8019f68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019f6c:	60fb      	str	r3, [r7, #12]
 8019f6e:	68fb      	ldr	r3, [r7, #12]
 8019f70:	2b00      	cmp	r3, #0
 8019f72:	d101      	bne.n	8019f78 <USBD_CDC_SetRxBuffer+0x24>
 8019f74:	2303      	movs	r3, #3
 8019f76:	e004      	b.n	8019f82 <USBD_CDC_SetRxBuffer+0x2e>
 8019f78:	68fb      	ldr	r3, [r7, #12]
 8019f7a:	683a      	ldr	r2, [r7, #0]
 8019f7c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8019f80:	2300      	movs	r3, #0
 8019f82:	4618      	mov	r0, r3
 8019f84:	3714      	adds	r7, #20
 8019f86:	46bd      	mov	sp, r7
 8019f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019f8c:	4770      	bx	lr
	...

08019f90 <USBD_CDC_ReceivePacket>:
 8019f90:	b580      	push	{r7, lr}
 8019f92:	b084      	sub	sp, #16
 8019f94:	af00      	add	r7, sp, #0
 8019f96:	6078      	str	r0, [r7, #4]
 8019f98:	687b      	ldr	r3, [r7, #4]
 8019f9a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019f9e:	687b      	ldr	r3, [r7, #4]
 8019fa0:	32b0      	adds	r2, #176	; 0xb0
 8019fa2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019fa6:	60fb      	str	r3, [r7, #12]
 8019fa8:	687b      	ldr	r3, [r7, #4]
 8019faa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 8019fae:	687b      	ldr	r3, [r7, #4]
 8019fb0:	32b0      	adds	r2, #176	; 0xb0
 8019fb2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8019fb6:	2b00      	cmp	r3, #0
 8019fb8:	d101      	bne.n	8019fbe <USBD_CDC_ReceivePacket+0x2e>
 8019fba:	2303      	movs	r3, #3
 8019fbc:	e018      	b.n	8019ff0 <USBD_CDC_ReceivePacket+0x60>
 8019fbe:	687b      	ldr	r3, [r7, #4]
 8019fc0:	7c1b      	ldrb	r3, [r3, #16]
 8019fc2:	2b00      	cmp	r3, #0
 8019fc4:	d10a      	bne.n	8019fdc <USBD_CDC_ReceivePacket+0x4c>
 8019fc6:	4b0c      	ldr	r3, [pc, #48]	; (8019ff8 <USBD_CDC_ReceivePacket+0x68>)
 8019fc8:	7819      	ldrb	r1, [r3, #0]
 8019fca:	68fb      	ldr	r3, [r7, #12]
 8019fcc:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019fd0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8019fd4:	6878      	ldr	r0, [r7, #4]
 8019fd6:	f005 f9d9 	bl	801f38c <USBD_LL_PrepareReceive>
 8019fda:	e008      	b.n	8019fee <USBD_CDC_ReceivePacket+0x5e>
 8019fdc:	4b06      	ldr	r3, [pc, #24]	; (8019ff8 <USBD_CDC_ReceivePacket+0x68>)
 8019fde:	7819      	ldrb	r1, [r3, #0]
 8019fe0:	68fb      	ldr	r3, [r7, #12]
 8019fe2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8019fe6:	2340      	movs	r3, #64	; 0x40
 8019fe8:	6878      	ldr	r0, [r7, #4]
 8019fea:	f005 f9cf 	bl	801f38c <USBD_LL_PrepareReceive>
 8019fee:	2300      	movs	r3, #0
 8019ff0:	4618      	mov	r0, r3
 8019ff2:	3710      	adds	r7, #16
 8019ff4:	46bd      	mov	sp, r7
 8019ff6:	bd80      	pop	{r7, pc}
 8019ff8:	200000e4 	.word	0x200000e4

08019ffc <USBD_Init>:
 8019ffc:	b580      	push	{r7, lr}
 8019ffe:	b086      	sub	sp, #24
 801a000:	af00      	add	r7, sp, #0
 801a002:	60f8      	str	r0, [r7, #12]
 801a004:	60b9      	str	r1, [r7, #8]
 801a006:	4613      	mov	r3, r2
 801a008:	71fb      	strb	r3, [r7, #7]
 801a00a:	68fb      	ldr	r3, [r7, #12]
 801a00c:	2b00      	cmp	r3, #0
 801a00e:	d101      	bne.n	801a014 <USBD_Init+0x18>
 801a010:	2303      	movs	r3, #3
 801a012:	e01f      	b.n	801a054 <USBD_Init+0x58>
 801a014:	68fb      	ldr	r3, [r7, #12]
 801a016:	2200      	movs	r2, #0
 801a018:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 801a01c:	68fb      	ldr	r3, [r7, #12]
 801a01e:	2200      	movs	r2, #0
 801a020:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
 801a024:	68fb      	ldr	r3, [r7, #12]
 801a026:	2200      	movs	r2, #0
 801a028:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 801a02c:	68bb      	ldr	r3, [r7, #8]
 801a02e:	2b00      	cmp	r3, #0
 801a030:	d003      	beq.n	801a03a <USBD_Init+0x3e>
 801a032:	68fb      	ldr	r3, [r7, #12]
 801a034:	68ba      	ldr	r2, [r7, #8]
 801a036:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
 801a03a:	68fb      	ldr	r3, [r7, #12]
 801a03c:	2201      	movs	r2, #1
 801a03e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a042:	68fb      	ldr	r3, [r7, #12]
 801a044:	79fa      	ldrb	r2, [r7, #7]
 801a046:	701a      	strb	r2, [r3, #0]
 801a048:	68f8      	ldr	r0, [r7, #12]
 801a04a:	f005 f849 	bl	801f0e0 <USBD_LL_Init>
 801a04e:	4603      	mov	r3, r0
 801a050:	75fb      	strb	r3, [r7, #23]
 801a052:	7dfb      	ldrb	r3, [r7, #23]
 801a054:	4618      	mov	r0, r3
 801a056:	3718      	adds	r7, #24
 801a058:	46bd      	mov	sp, r7
 801a05a:	bd80      	pop	{r7, pc}

0801a05c <USBD_RegisterClass>:
 801a05c:	b580      	push	{r7, lr}
 801a05e:	b084      	sub	sp, #16
 801a060:	af00      	add	r7, sp, #0
 801a062:	6078      	str	r0, [r7, #4]
 801a064:	6039      	str	r1, [r7, #0]
 801a066:	2300      	movs	r3, #0
 801a068:	81fb      	strh	r3, [r7, #14]
 801a06a:	683b      	ldr	r3, [r7, #0]
 801a06c:	2b00      	cmp	r3, #0
 801a06e:	d101      	bne.n	801a074 <USBD_RegisterClass+0x18>
 801a070:	2303      	movs	r3, #3
 801a072:	e025      	b.n	801a0c0 <USBD_RegisterClass+0x64>
 801a074:	687b      	ldr	r3, [r7, #4]
 801a076:	683a      	ldr	r2, [r7, #0]
 801a078:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 801a07c:	687b      	ldr	r3, [r7, #4]
 801a07e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a082:	687b      	ldr	r3, [r7, #4]
 801a084:	32ae      	adds	r2, #174	; 0xae
 801a086:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a08a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a08c:	2b00      	cmp	r3, #0
 801a08e:	d00f      	beq.n	801a0b0 <USBD_RegisterClass+0x54>
 801a090:	687b      	ldr	r3, [r7, #4]
 801a092:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a096:	687b      	ldr	r3, [r7, #4]
 801a098:	32ae      	adds	r2, #174	; 0xae
 801a09a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a09e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a0a0:	f107 020e 	add.w	r2, r7, #14
 801a0a4:	4610      	mov	r0, r2
 801a0a6:	4798      	blx	r3
 801a0a8:	4602      	mov	r2, r0
 801a0aa:	687b      	ldr	r3, [r7, #4]
 801a0ac:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 801a0b0:	687b      	ldr	r3, [r7, #4]
 801a0b2:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 801a0b6:	1c5a      	adds	r2, r3, #1
 801a0b8:	687b      	ldr	r3, [r7, #4]
 801a0ba:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
 801a0be:	2300      	movs	r3, #0
 801a0c0:	4618      	mov	r0, r3
 801a0c2:	3710      	adds	r7, #16
 801a0c4:	46bd      	mov	sp, r7
 801a0c6:	bd80      	pop	{r7, pc}

0801a0c8 <USBD_Start>:
 801a0c8:	b580      	push	{r7, lr}
 801a0ca:	b082      	sub	sp, #8
 801a0cc:	af00      	add	r7, sp, #0
 801a0ce:	6078      	str	r0, [r7, #4]
 801a0d0:	6878      	ldr	r0, [r7, #4]
 801a0d2:	f005 f851 	bl	801f178 <USBD_LL_Start>
 801a0d6:	4603      	mov	r3, r0
 801a0d8:	4618      	mov	r0, r3
 801a0da:	3708      	adds	r7, #8
 801a0dc:	46bd      	mov	sp, r7
 801a0de:	bd80      	pop	{r7, pc}

0801a0e0 <USBD_RunTestMode>:
 801a0e0:	b480      	push	{r7}
 801a0e2:	b083      	sub	sp, #12
 801a0e4:	af00      	add	r7, sp, #0
 801a0e6:	6078      	str	r0, [r7, #4]
 801a0e8:	2300      	movs	r3, #0
 801a0ea:	4618      	mov	r0, r3
 801a0ec:	370c      	adds	r7, #12
 801a0ee:	46bd      	mov	sp, r7
 801a0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0f4:	4770      	bx	lr

0801a0f6 <USBD_SetClassConfig>:
 801a0f6:	b580      	push	{r7, lr}
 801a0f8:	b084      	sub	sp, #16
 801a0fa:	af00      	add	r7, sp, #0
 801a0fc:	6078      	str	r0, [r7, #4]
 801a0fe:	460b      	mov	r3, r1
 801a100:	70fb      	strb	r3, [r7, #3]
 801a102:	2300      	movs	r3, #0
 801a104:	73fb      	strb	r3, [r7, #15]
 801a106:	687b      	ldr	r3, [r7, #4]
 801a108:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a10c:	2b00      	cmp	r3, #0
 801a10e:	d009      	beq.n	801a124 <USBD_SetClassConfig+0x2e>
 801a110:	687b      	ldr	r3, [r7, #4]
 801a112:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a116:	681b      	ldr	r3, [r3, #0]
 801a118:	78fa      	ldrb	r2, [r7, #3]
 801a11a:	4611      	mov	r1, r2
 801a11c:	6878      	ldr	r0, [r7, #4]
 801a11e:	4798      	blx	r3
 801a120:	4603      	mov	r3, r0
 801a122:	73fb      	strb	r3, [r7, #15]
 801a124:	7bfb      	ldrb	r3, [r7, #15]
 801a126:	4618      	mov	r0, r3
 801a128:	3710      	adds	r7, #16
 801a12a:	46bd      	mov	sp, r7
 801a12c:	bd80      	pop	{r7, pc}

0801a12e <USBD_ClrClassConfig>:
 801a12e:	b580      	push	{r7, lr}
 801a130:	b084      	sub	sp, #16
 801a132:	af00      	add	r7, sp, #0
 801a134:	6078      	str	r0, [r7, #4]
 801a136:	460b      	mov	r3, r1
 801a138:	70fb      	strb	r3, [r7, #3]
 801a13a:	2300      	movs	r3, #0
 801a13c:	73fb      	strb	r3, [r7, #15]
 801a13e:	687b      	ldr	r3, [r7, #4]
 801a140:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a144:	685b      	ldr	r3, [r3, #4]
 801a146:	78fa      	ldrb	r2, [r7, #3]
 801a148:	4611      	mov	r1, r2
 801a14a:	6878      	ldr	r0, [r7, #4]
 801a14c:	4798      	blx	r3
 801a14e:	4603      	mov	r3, r0
 801a150:	2b00      	cmp	r3, #0
 801a152:	d001      	beq.n	801a158 <USBD_ClrClassConfig+0x2a>
 801a154:	2303      	movs	r3, #3
 801a156:	73fb      	strb	r3, [r7, #15]
 801a158:	7bfb      	ldrb	r3, [r7, #15]
 801a15a:	4618      	mov	r0, r3
 801a15c:	3710      	adds	r7, #16
 801a15e:	46bd      	mov	sp, r7
 801a160:	bd80      	pop	{r7, pc}

0801a162 <USBD_LL_SetupStage>:
 801a162:	b580      	push	{r7, lr}
 801a164:	b084      	sub	sp, #16
 801a166:	af00      	add	r7, sp, #0
 801a168:	6078      	str	r0, [r7, #4]
 801a16a:	6039      	str	r1, [r7, #0]
 801a16c:	687b      	ldr	r3, [r7, #4]
 801a16e:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a172:	6839      	ldr	r1, [r7, #0]
 801a174:	4618      	mov	r0, r3
 801a176:	f001 f908 	bl	801b38a <USBD_ParseSetupRequest>
 801a17a:	687b      	ldr	r3, [r7, #4]
 801a17c:	2201      	movs	r2, #1
 801a17e:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801a182:	687b      	ldr	r3, [r7, #4]
 801a184:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 801a188:	461a      	mov	r2, r3
 801a18a:	687b      	ldr	r3, [r7, #4]
 801a18c:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 801a190:	687b      	ldr	r3, [r7, #4]
 801a192:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a196:	f003 031f 	and.w	r3, r3, #31
 801a19a:	2b02      	cmp	r3, #2
 801a19c:	d01a      	beq.n	801a1d4 <USBD_LL_SetupStage+0x72>
 801a19e:	2b02      	cmp	r3, #2
 801a1a0:	d822      	bhi.n	801a1e8 <USBD_LL_SetupStage+0x86>
 801a1a2:	2b00      	cmp	r3, #0
 801a1a4:	d002      	beq.n	801a1ac <USBD_LL_SetupStage+0x4a>
 801a1a6:	2b01      	cmp	r3, #1
 801a1a8:	d00a      	beq.n	801a1c0 <USBD_LL_SetupStage+0x5e>
 801a1aa:	e01d      	b.n	801a1e8 <USBD_LL_SetupStage+0x86>
 801a1ac:	687b      	ldr	r3, [r7, #4]
 801a1ae:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a1b2:	4619      	mov	r1, r3
 801a1b4:	6878      	ldr	r0, [r7, #4]
 801a1b6:	f000 fb5f 	bl	801a878 <USBD_StdDevReq>
 801a1ba:	4603      	mov	r3, r0
 801a1bc:	73fb      	strb	r3, [r7, #15]
 801a1be:	e020      	b.n	801a202 <USBD_LL_SetupStage+0xa0>
 801a1c0:	687b      	ldr	r3, [r7, #4]
 801a1c2:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a1c6:	4619      	mov	r1, r3
 801a1c8:	6878      	ldr	r0, [r7, #4]
 801a1ca:	f000 fbc7 	bl	801a95c <USBD_StdItfReq>
 801a1ce:	4603      	mov	r3, r0
 801a1d0:	73fb      	strb	r3, [r7, #15]
 801a1d2:	e016      	b.n	801a202 <USBD_LL_SetupStage+0xa0>
 801a1d4:	687b      	ldr	r3, [r7, #4]
 801a1d6:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 801a1da:	4619      	mov	r1, r3
 801a1dc:	6878      	ldr	r0, [r7, #4]
 801a1de:	f000 fc29 	bl	801aa34 <USBD_StdEPReq>
 801a1e2:	4603      	mov	r3, r0
 801a1e4:	73fb      	strb	r3, [r7, #15]
 801a1e6:	e00c      	b.n	801a202 <USBD_LL_SetupStage+0xa0>
 801a1e8:	687b      	ldr	r3, [r7, #4]
 801a1ea:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a1ee:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 801a1f2:	b2db      	uxtb	r3, r3
 801a1f4:	4619      	mov	r1, r3
 801a1f6:	6878      	ldr	r0, [r7, #4]
 801a1f8:	f005 f81e 	bl	801f238 <USBD_LL_StallEP>
 801a1fc:	4603      	mov	r3, r0
 801a1fe:	73fb      	strb	r3, [r7, #15]
 801a200:	bf00      	nop
 801a202:	7bfb      	ldrb	r3, [r7, #15]
 801a204:	4618      	mov	r0, r3
 801a206:	3710      	adds	r7, #16
 801a208:	46bd      	mov	sp, r7
 801a20a:	bd80      	pop	{r7, pc}

0801a20c <USBD_LL_DataOutStage>:
 801a20c:	b580      	push	{r7, lr}
 801a20e:	b086      	sub	sp, #24
 801a210:	af00      	add	r7, sp, #0
 801a212:	60f8      	str	r0, [r7, #12]
 801a214:	460b      	mov	r3, r1
 801a216:	607a      	str	r2, [r7, #4]
 801a218:	72fb      	strb	r3, [r7, #11]
 801a21a:	2300      	movs	r3, #0
 801a21c:	75fb      	strb	r3, [r7, #23]
 801a21e:	7afb      	ldrb	r3, [r7, #11]
 801a220:	2b00      	cmp	r3, #0
 801a222:	d16e      	bne.n	801a302 <USBD_LL_DataOutStage+0xf6>
 801a224:	68fb      	ldr	r3, [r7, #12]
 801a226:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 801a22a:	613b      	str	r3, [r7, #16]
 801a22c:	68fb      	ldr	r3, [r7, #12]
 801a22e:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 801a232:	2b03      	cmp	r3, #3
 801a234:	f040 8098 	bne.w	801a368 <USBD_LL_DataOutStage+0x15c>
 801a238:	693b      	ldr	r3, [r7, #16]
 801a23a:	689a      	ldr	r2, [r3, #8]
 801a23c:	693b      	ldr	r3, [r7, #16]
 801a23e:	68db      	ldr	r3, [r3, #12]
 801a240:	429a      	cmp	r2, r3
 801a242:	d913      	bls.n	801a26c <USBD_LL_DataOutStage+0x60>
 801a244:	693b      	ldr	r3, [r7, #16]
 801a246:	689a      	ldr	r2, [r3, #8]
 801a248:	693b      	ldr	r3, [r7, #16]
 801a24a:	68db      	ldr	r3, [r3, #12]
 801a24c:	1ad2      	subs	r2, r2, r3
 801a24e:	693b      	ldr	r3, [r7, #16]
 801a250:	609a      	str	r2, [r3, #8]
 801a252:	693b      	ldr	r3, [r7, #16]
 801a254:	68da      	ldr	r2, [r3, #12]
 801a256:	693b      	ldr	r3, [r7, #16]
 801a258:	689b      	ldr	r3, [r3, #8]
 801a25a:	4293      	cmp	r3, r2
 801a25c:	bf28      	it	cs
 801a25e:	4613      	movcs	r3, r2
 801a260:	461a      	mov	r2, r3
 801a262:	6879      	ldr	r1, [r7, #4]
 801a264:	68f8      	ldr	r0, [r7, #12]
 801a266:	f001 f984 	bl	801b572 <USBD_CtlContinueRx>
 801a26a:	e07d      	b.n	801a368 <USBD_LL_DataOutStage+0x15c>
 801a26c:	68fb      	ldr	r3, [r7, #12]
 801a26e:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 801a272:	f003 031f 	and.w	r3, r3, #31
 801a276:	2b02      	cmp	r3, #2
 801a278:	d014      	beq.n	801a2a4 <USBD_LL_DataOutStage+0x98>
 801a27a:	2b02      	cmp	r3, #2
 801a27c:	d81d      	bhi.n	801a2ba <USBD_LL_DataOutStage+0xae>
 801a27e:	2b00      	cmp	r3, #0
 801a280:	d002      	beq.n	801a288 <USBD_LL_DataOutStage+0x7c>
 801a282:	2b01      	cmp	r3, #1
 801a284:	d003      	beq.n	801a28e <USBD_LL_DataOutStage+0x82>
 801a286:	e018      	b.n	801a2ba <USBD_LL_DataOutStage+0xae>
 801a288:	2300      	movs	r3, #0
 801a28a:	75bb      	strb	r3, [r7, #22]
 801a28c:	e018      	b.n	801a2c0 <USBD_LL_DataOutStage+0xb4>
 801a28e:	68fb      	ldr	r3, [r7, #12]
 801a290:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 801a294:	b2db      	uxtb	r3, r3
 801a296:	4619      	mov	r1, r3
 801a298:	68f8      	ldr	r0, [r7, #12]
 801a29a:	f000 fa5e 	bl	801a75a <USBD_CoreFindIF>
 801a29e:	4603      	mov	r3, r0
 801a2a0:	75bb      	strb	r3, [r7, #22]
 801a2a2:	e00d      	b.n	801a2c0 <USBD_LL_DataOutStage+0xb4>
 801a2a4:	68fb      	ldr	r3, [r7, #12]
 801a2a6:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 801a2aa:	b2db      	uxtb	r3, r3
 801a2ac:	4619      	mov	r1, r3
 801a2ae:	68f8      	ldr	r0, [r7, #12]
 801a2b0:	f000 fa60 	bl	801a774 <USBD_CoreFindEP>
 801a2b4:	4603      	mov	r3, r0
 801a2b6:	75bb      	strb	r3, [r7, #22]
 801a2b8:	e002      	b.n	801a2c0 <USBD_LL_DataOutStage+0xb4>
 801a2ba:	2300      	movs	r3, #0
 801a2bc:	75bb      	strb	r3, [r7, #22]
 801a2be:	bf00      	nop
 801a2c0:	7dbb      	ldrb	r3, [r7, #22]
 801a2c2:	2b00      	cmp	r3, #0
 801a2c4:	d119      	bne.n	801a2fa <USBD_LL_DataOutStage+0xee>
 801a2c6:	68fb      	ldr	r3, [r7, #12]
 801a2c8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a2cc:	b2db      	uxtb	r3, r3
 801a2ce:	2b03      	cmp	r3, #3
 801a2d0:	d113      	bne.n	801a2fa <USBD_LL_DataOutStage+0xee>
 801a2d2:	7dba      	ldrb	r2, [r7, #22]
 801a2d4:	68fb      	ldr	r3, [r7, #12]
 801a2d6:	32ae      	adds	r2, #174	; 0xae
 801a2d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a2dc:	691b      	ldr	r3, [r3, #16]
 801a2de:	2b00      	cmp	r3, #0
 801a2e0:	d00b      	beq.n	801a2fa <USBD_LL_DataOutStage+0xee>
 801a2e2:	7dba      	ldrb	r2, [r7, #22]
 801a2e4:	68fb      	ldr	r3, [r7, #12]
 801a2e6:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a2ea:	7dba      	ldrb	r2, [r7, #22]
 801a2ec:	68fb      	ldr	r3, [r7, #12]
 801a2ee:	32ae      	adds	r2, #174	; 0xae
 801a2f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a2f4:	691b      	ldr	r3, [r3, #16]
 801a2f6:	68f8      	ldr	r0, [r7, #12]
 801a2f8:	4798      	blx	r3
 801a2fa:	68f8      	ldr	r0, [r7, #12]
 801a2fc:	f001 f94a 	bl	801b594 <USBD_CtlSendStatus>
 801a300:	e032      	b.n	801a368 <USBD_LL_DataOutStage+0x15c>
 801a302:	7afb      	ldrb	r3, [r7, #11]
 801a304:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801a308:	b2db      	uxtb	r3, r3
 801a30a:	4619      	mov	r1, r3
 801a30c:	68f8      	ldr	r0, [r7, #12]
 801a30e:	f000 fa31 	bl	801a774 <USBD_CoreFindEP>
 801a312:	4603      	mov	r3, r0
 801a314:	75bb      	strb	r3, [r7, #22]
 801a316:	7dbb      	ldrb	r3, [r7, #22]
 801a318:	2bff      	cmp	r3, #255	; 0xff
 801a31a:	d025      	beq.n	801a368 <USBD_LL_DataOutStage+0x15c>
 801a31c:	7dbb      	ldrb	r3, [r7, #22]
 801a31e:	2b00      	cmp	r3, #0
 801a320:	d122      	bne.n	801a368 <USBD_LL_DataOutStage+0x15c>
 801a322:	68fb      	ldr	r3, [r7, #12]
 801a324:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a328:	b2db      	uxtb	r3, r3
 801a32a:	2b03      	cmp	r3, #3
 801a32c:	d117      	bne.n	801a35e <USBD_LL_DataOutStage+0x152>
 801a32e:	7dba      	ldrb	r2, [r7, #22]
 801a330:	68fb      	ldr	r3, [r7, #12]
 801a332:	32ae      	adds	r2, #174	; 0xae
 801a334:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a338:	699b      	ldr	r3, [r3, #24]
 801a33a:	2b00      	cmp	r3, #0
 801a33c:	d00f      	beq.n	801a35e <USBD_LL_DataOutStage+0x152>
 801a33e:	7dba      	ldrb	r2, [r7, #22]
 801a340:	68fb      	ldr	r3, [r7, #12]
 801a342:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a346:	7dba      	ldrb	r2, [r7, #22]
 801a348:	68fb      	ldr	r3, [r7, #12]
 801a34a:	32ae      	adds	r2, #174	; 0xae
 801a34c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a350:	699b      	ldr	r3, [r3, #24]
 801a352:	7afa      	ldrb	r2, [r7, #11]
 801a354:	4611      	mov	r1, r2
 801a356:	68f8      	ldr	r0, [r7, #12]
 801a358:	4798      	blx	r3
 801a35a:	4603      	mov	r3, r0
 801a35c:	75fb      	strb	r3, [r7, #23]
 801a35e:	7dfb      	ldrb	r3, [r7, #23]
 801a360:	2b00      	cmp	r3, #0
 801a362:	d001      	beq.n	801a368 <USBD_LL_DataOutStage+0x15c>
 801a364:	7dfb      	ldrb	r3, [r7, #23]
 801a366:	e000      	b.n	801a36a <USBD_LL_DataOutStage+0x15e>
 801a368:	2300      	movs	r3, #0
 801a36a:	4618      	mov	r0, r3
 801a36c:	3718      	adds	r7, #24
 801a36e:	46bd      	mov	sp, r7
 801a370:	bd80      	pop	{r7, pc}

0801a372 <USBD_LL_DataInStage>:
 801a372:	b580      	push	{r7, lr}
 801a374:	b086      	sub	sp, #24
 801a376:	af00      	add	r7, sp, #0
 801a378:	60f8      	str	r0, [r7, #12]
 801a37a:	460b      	mov	r3, r1
 801a37c:	607a      	str	r2, [r7, #4]
 801a37e:	72fb      	strb	r3, [r7, #11]
 801a380:	7afb      	ldrb	r3, [r7, #11]
 801a382:	2b00      	cmp	r3, #0
 801a384:	d16f      	bne.n	801a466 <USBD_LL_DataInStage+0xf4>
 801a386:	68fb      	ldr	r3, [r7, #12]
 801a388:	3314      	adds	r3, #20
 801a38a:	613b      	str	r3, [r7, #16]
 801a38c:	68fb      	ldr	r3, [r7, #12]
 801a38e:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 801a392:	2b02      	cmp	r3, #2
 801a394:	d15a      	bne.n	801a44c <USBD_LL_DataInStage+0xda>
 801a396:	693b      	ldr	r3, [r7, #16]
 801a398:	689a      	ldr	r2, [r3, #8]
 801a39a:	693b      	ldr	r3, [r7, #16]
 801a39c:	68db      	ldr	r3, [r3, #12]
 801a39e:	429a      	cmp	r2, r3
 801a3a0:	d914      	bls.n	801a3cc <USBD_LL_DataInStage+0x5a>
 801a3a2:	693b      	ldr	r3, [r7, #16]
 801a3a4:	689a      	ldr	r2, [r3, #8]
 801a3a6:	693b      	ldr	r3, [r7, #16]
 801a3a8:	68db      	ldr	r3, [r3, #12]
 801a3aa:	1ad2      	subs	r2, r2, r3
 801a3ac:	693b      	ldr	r3, [r7, #16]
 801a3ae:	609a      	str	r2, [r3, #8]
 801a3b0:	693b      	ldr	r3, [r7, #16]
 801a3b2:	689b      	ldr	r3, [r3, #8]
 801a3b4:	461a      	mov	r2, r3
 801a3b6:	6879      	ldr	r1, [r7, #4]
 801a3b8:	68f8      	ldr	r0, [r7, #12]
 801a3ba:	f001 f8ac 	bl	801b516 <USBD_CtlContinueSendData>
 801a3be:	2300      	movs	r3, #0
 801a3c0:	2200      	movs	r2, #0
 801a3c2:	2100      	movs	r1, #0
 801a3c4:	68f8      	ldr	r0, [r7, #12]
 801a3c6:	f004 ffe1 	bl	801f38c <USBD_LL_PrepareReceive>
 801a3ca:	e03f      	b.n	801a44c <USBD_LL_DataInStage+0xda>
 801a3cc:	693b      	ldr	r3, [r7, #16]
 801a3ce:	68da      	ldr	r2, [r3, #12]
 801a3d0:	693b      	ldr	r3, [r7, #16]
 801a3d2:	689b      	ldr	r3, [r3, #8]
 801a3d4:	429a      	cmp	r2, r3
 801a3d6:	d11c      	bne.n	801a412 <USBD_LL_DataInStage+0xa0>
 801a3d8:	693b      	ldr	r3, [r7, #16]
 801a3da:	685a      	ldr	r2, [r3, #4]
 801a3dc:	693b      	ldr	r3, [r7, #16]
 801a3de:	68db      	ldr	r3, [r3, #12]
 801a3e0:	429a      	cmp	r2, r3
 801a3e2:	d316      	bcc.n	801a412 <USBD_LL_DataInStage+0xa0>
 801a3e4:	693b      	ldr	r3, [r7, #16]
 801a3e6:	685a      	ldr	r2, [r3, #4]
 801a3e8:	68fb      	ldr	r3, [r7, #12]
 801a3ea:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
 801a3ee:	429a      	cmp	r2, r3
 801a3f0:	d20f      	bcs.n	801a412 <USBD_LL_DataInStage+0xa0>
 801a3f2:	2200      	movs	r2, #0
 801a3f4:	2100      	movs	r1, #0
 801a3f6:	68f8      	ldr	r0, [r7, #12]
 801a3f8:	f001 f88d 	bl	801b516 <USBD_CtlContinueSendData>
 801a3fc:	68fb      	ldr	r3, [r7, #12]
 801a3fe:	2200      	movs	r2, #0
 801a400:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 801a404:	2300      	movs	r3, #0
 801a406:	2200      	movs	r2, #0
 801a408:	2100      	movs	r1, #0
 801a40a:	68f8      	ldr	r0, [r7, #12]
 801a40c:	f004 ffbe 	bl	801f38c <USBD_LL_PrepareReceive>
 801a410:	e01c      	b.n	801a44c <USBD_LL_DataInStage+0xda>
 801a412:	68fb      	ldr	r3, [r7, #12]
 801a414:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a418:	b2db      	uxtb	r3, r3
 801a41a:	2b03      	cmp	r3, #3
 801a41c:	d10f      	bne.n	801a43e <USBD_LL_DataInStage+0xcc>
 801a41e:	68fb      	ldr	r3, [r7, #12]
 801a420:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a424:	68db      	ldr	r3, [r3, #12]
 801a426:	2b00      	cmp	r3, #0
 801a428:	d009      	beq.n	801a43e <USBD_LL_DataInStage+0xcc>
 801a42a:	68fb      	ldr	r3, [r7, #12]
 801a42c:	2200      	movs	r2, #0
 801a42e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a432:	68fb      	ldr	r3, [r7, #12]
 801a434:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a438:	68db      	ldr	r3, [r3, #12]
 801a43a:	68f8      	ldr	r0, [r7, #12]
 801a43c:	4798      	blx	r3
 801a43e:	2180      	movs	r1, #128	; 0x80
 801a440:	68f8      	ldr	r0, [r7, #12]
 801a442:	f004 fef9 	bl	801f238 <USBD_LL_StallEP>
 801a446:	68f8      	ldr	r0, [r7, #12]
 801a448:	f001 f8b7 	bl	801b5ba <USBD_CtlReceiveStatus>
 801a44c:	68fb      	ldr	r3, [r7, #12]
 801a44e:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 801a452:	2b00      	cmp	r3, #0
 801a454:	d03a      	beq.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a456:	68f8      	ldr	r0, [r7, #12]
 801a458:	f7ff fe42 	bl	801a0e0 <USBD_RunTestMode>
 801a45c:	68fb      	ldr	r3, [r7, #12]
 801a45e:	2200      	movs	r2, #0
 801a460:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801a464:	e032      	b.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a466:	7afb      	ldrb	r3, [r7, #11]
 801a468:	f063 037f 	orn	r3, r3, #127	; 0x7f
 801a46c:	b2db      	uxtb	r3, r3
 801a46e:	4619      	mov	r1, r3
 801a470:	68f8      	ldr	r0, [r7, #12]
 801a472:	f000 f97f 	bl	801a774 <USBD_CoreFindEP>
 801a476:	4603      	mov	r3, r0
 801a478:	75fb      	strb	r3, [r7, #23]
 801a47a:	7dfb      	ldrb	r3, [r7, #23]
 801a47c:	2bff      	cmp	r3, #255	; 0xff
 801a47e:	d025      	beq.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a480:	7dfb      	ldrb	r3, [r7, #23]
 801a482:	2b00      	cmp	r3, #0
 801a484:	d122      	bne.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a486:	68fb      	ldr	r3, [r7, #12]
 801a488:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a48c:	b2db      	uxtb	r3, r3
 801a48e:	2b03      	cmp	r3, #3
 801a490:	d11c      	bne.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a492:	7dfa      	ldrb	r2, [r7, #23]
 801a494:	68fb      	ldr	r3, [r7, #12]
 801a496:	32ae      	adds	r2, #174	; 0xae
 801a498:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a49c:	695b      	ldr	r3, [r3, #20]
 801a49e:	2b00      	cmp	r3, #0
 801a4a0:	d014      	beq.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a4a2:	7dfa      	ldrb	r2, [r7, #23]
 801a4a4:	68fb      	ldr	r3, [r7, #12]
 801a4a6:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a4aa:	7dfa      	ldrb	r2, [r7, #23]
 801a4ac:	68fb      	ldr	r3, [r7, #12]
 801a4ae:	32ae      	adds	r2, #174	; 0xae
 801a4b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a4b4:	695b      	ldr	r3, [r3, #20]
 801a4b6:	7afa      	ldrb	r2, [r7, #11]
 801a4b8:	4611      	mov	r1, r2
 801a4ba:	68f8      	ldr	r0, [r7, #12]
 801a4bc:	4798      	blx	r3
 801a4be:	4603      	mov	r3, r0
 801a4c0:	75bb      	strb	r3, [r7, #22]
 801a4c2:	7dbb      	ldrb	r3, [r7, #22]
 801a4c4:	2b00      	cmp	r3, #0
 801a4c6:	d001      	beq.n	801a4cc <USBD_LL_DataInStage+0x15a>
 801a4c8:	7dbb      	ldrb	r3, [r7, #22]
 801a4ca:	e000      	b.n	801a4ce <USBD_LL_DataInStage+0x15c>
 801a4cc:	2300      	movs	r3, #0
 801a4ce:	4618      	mov	r0, r3
 801a4d0:	3718      	adds	r7, #24
 801a4d2:	46bd      	mov	sp, r7
 801a4d4:	bd80      	pop	{r7, pc}

0801a4d6 <USBD_LL_Reset>:
 801a4d6:	b580      	push	{r7, lr}
 801a4d8:	b084      	sub	sp, #16
 801a4da:	af00      	add	r7, sp, #0
 801a4dc:	6078      	str	r0, [r7, #4]
 801a4de:	2300      	movs	r3, #0
 801a4e0:	73fb      	strb	r3, [r7, #15]
 801a4e2:	687b      	ldr	r3, [r7, #4]
 801a4e4:	2201      	movs	r2, #1
 801a4e6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a4ea:	687b      	ldr	r3, [r7, #4]
 801a4ec:	2200      	movs	r2, #0
 801a4ee:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801a4f2:	687b      	ldr	r3, [r7, #4]
 801a4f4:	2200      	movs	r2, #0
 801a4f6:	605a      	str	r2, [r3, #4]
 801a4f8:	687b      	ldr	r3, [r7, #4]
 801a4fa:	2200      	movs	r2, #0
 801a4fc:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801a500:	687b      	ldr	r3, [r7, #4]
 801a502:	2200      	movs	r2, #0
 801a504:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801a508:	687b      	ldr	r3, [r7, #4]
 801a50a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a50e:	2b00      	cmp	r3, #0
 801a510:	d014      	beq.n	801a53c <USBD_LL_Reset+0x66>
 801a512:	687b      	ldr	r3, [r7, #4]
 801a514:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a518:	685b      	ldr	r3, [r3, #4]
 801a51a:	2b00      	cmp	r3, #0
 801a51c:	d00e      	beq.n	801a53c <USBD_LL_Reset+0x66>
 801a51e:	687b      	ldr	r3, [r7, #4]
 801a520:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a524:	685b      	ldr	r3, [r3, #4]
 801a526:	687a      	ldr	r2, [r7, #4]
 801a528:	6852      	ldr	r2, [r2, #4]
 801a52a:	b2d2      	uxtb	r2, r2
 801a52c:	4611      	mov	r1, r2
 801a52e:	6878      	ldr	r0, [r7, #4]
 801a530:	4798      	blx	r3
 801a532:	4603      	mov	r3, r0
 801a534:	2b00      	cmp	r3, #0
 801a536:	d001      	beq.n	801a53c <USBD_LL_Reset+0x66>
 801a538:	2303      	movs	r3, #3
 801a53a:	73fb      	strb	r3, [r7, #15]
 801a53c:	2340      	movs	r3, #64	; 0x40
 801a53e:	2200      	movs	r2, #0
 801a540:	2100      	movs	r1, #0
 801a542:	6878      	ldr	r0, [r7, #4]
 801a544:	f004 fe33 	bl	801f1ae <USBD_LL_OpenEP>
 801a548:	687b      	ldr	r3, [r7, #4]
 801a54a:	2201      	movs	r2, #1
 801a54c:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 801a550:	687b      	ldr	r3, [r7, #4]
 801a552:	2240      	movs	r2, #64	; 0x40
 801a554:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160
 801a558:	2340      	movs	r3, #64	; 0x40
 801a55a:	2200      	movs	r2, #0
 801a55c:	2180      	movs	r1, #128	; 0x80
 801a55e:	6878      	ldr	r0, [r7, #4]
 801a560:	f004 fe25 	bl	801f1ae <USBD_LL_OpenEP>
 801a564:	687b      	ldr	r3, [r7, #4]
 801a566:	2201      	movs	r2, #1
 801a568:	849a      	strh	r2, [r3, #36]	; 0x24
 801a56a:	687b      	ldr	r3, [r7, #4]
 801a56c:	2240      	movs	r2, #64	; 0x40
 801a56e:	621a      	str	r2, [r3, #32]
 801a570:	7bfb      	ldrb	r3, [r7, #15]
 801a572:	4618      	mov	r0, r3
 801a574:	3710      	adds	r7, #16
 801a576:	46bd      	mov	sp, r7
 801a578:	bd80      	pop	{r7, pc}

0801a57a <USBD_LL_SetSpeed>:
 801a57a:	b480      	push	{r7}
 801a57c:	b083      	sub	sp, #12
 801a57e:	af00      	add	r7, sp, #0
 801a580:	6078      	str	r0, [r7, #4]
 801a582:	460b      	mov	r3, r1
 801a584:	70fb      	strb	r3, [r7, #3]
 801a586:	687b      	ldr	r3, [r7, #4]
 801a588:	78fa      	ldrb	r2, [r7, #3]
 801a58a:	741a      	strb	r2, [r3, #16]
 801a58c:	2300      	movs	r3, #0
 801a58e:	4618      	mov	r0, r3
 801a590:	370c      	adds	r7, #12
 801a592:	46bd      	mov	sp, r7
 801a594:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a598:	4770      	bx	lr

0801a59a <USBD_LL_Suspend>:
 801a59a:	b480      	push	{r7}
 801a59c:	b083      	sub	sp, #12
 801a59e:	af00      	add	r7, sp, #0
 801a5a0:	6078      	str	r0, [r7, #4]
 801a5a2:	687b      	ldr	r3, [r7, #4]
 801a5a4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a5a8:	b2da      	uxtb	r2, r3
 801a5aa:	687b      	ldr	r3, [r7, #4]
 801a5ac:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
 801a5b0:	687b      	ldr	r3, [r7, #4]
 801a5b2:	2204      	movs	r2, #4
 801a5b4:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a5b8:	2300      	movs	r3, #0
 801a5ba:	4618      	mov	r0, r3
 801a5bc:	370c      	adds	r7, #12
 801a5be:	46bd      	mov	sp, r7
 801a5c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5c4:	4770      	bx	lr

0801a5c6 <USBD_LL_Resume>:
 801a5c6:	b480      	push	{r7}
 801a5c8:	b083      	sub	sp, #12
 801a5ca:	af00      	add	r7, sp, #0
 801a5cc:	6078      	str	r0, [r7, #4]
 801a5ce:	687b      	ldr	r3, [r7, #4]
 801a5d0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a5d4:	b2db      	uxtb	r3, r3
 801a5d6:	2b04      	cmp	r3, #4
 801a5d8:	d106      	bne.n	801a5e8 <USBD_LL_Resume+0x22>
 801a5da:	687b      	ldr	r3, [r7, #4]
 801a5dc:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 801a5e0:	b2da      	uxtb	r2, r3
 801a5e2:	687b      	ldr	r3, [r7, #4]
 801a5e4:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a5e8:	2300      	movs	r3, #0
 801a5ea:	4618      	mov	r0, r3
 801a5ec:	370c      	adds	r7, #12
 801a5ee:	46bd      	mov	sp, r7
 801a5f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5f4:	4770      	bx	lr

0801a5f6 <USBD_LL_SOF>:
 801a5f6:	b580      	push	{r7, lr}
 801a5f8:	b082      	sub	sp, #8
 801a5fa:	af00      	add	r7, sp, #0
 801a5fc:	6078      	str	r0, [r7, #4]
 801a5fe:	687b      	ldr	r3, [r7, #4]
 801a600:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a604:	b2db      	uxtb	r3, r3
 801a606:	2b03      	cmp	r3, #3
 801a608:	d110      	bne.n	801a62c <USBD_LL_SOF+0x36>
 801a60a:	687b      	ldr	r3, [r7, #4]
 801a60c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a610:	2b00      	cmp	r3, #0
 801a612:	d00b      	beq.n	801a62c <USBD_LL_SOF+0x36>
 801a614:	687b      	ldr	r3, [r7, #4]
 801a616:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a61a:	69db      	ldr	r3, [r3, #28]
 801a61c:	2b00      	cmp	r3, #0
 801a61e:	d005      	beq.n	801a62c <USBD_LL_SOF+0x36>
 801a620:	687b      	ldr	r3, [r7, #4]
 801a622:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a626:	69db      	ldr	r3, [r3, #28]
 801a628:	6878      	ldr	r0, [r7, #4]
 801a62a:	4798      	blx	r3
 801a62c:	2300      	movs	r3, #0
 801a62e:	4618      	mov	r0, r3
 801a630:	3708      	adds	r7, #8
 801a632:	46bd      	mov	sp, r7
 801a634:	bd80      	pop	{r7, pc}

0801a636 <USBD_LL_IsoINIncomplete>:
 801a636:	b580      	push	{r7, lr}
 801a638:	b082      	sub	sp, #8
 801a63a:	af00      	add	r7, sp, #0
 801a63c:	6078      	str	r0, [r7, #4]
 801a63e:	460b      	mov	r3, r1
 801a640:	70fb      	strb	r3, [r7, #3]
 801a642:	687b      	ldr	r3, [r7, #4]
 801a644:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a648:	687b      	ldr	r3, [r7, #4]
 801a64a:	32ae      	adds	r2, #174	; 0xae
 801a64c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a650:	2b00      	cmp	r3, #0
 801a652:	d101      	bne.n	801a658 <USBD_LL_IsoINIncomplete+0x22>
 801a654:	2303      	movs	r3, #3
 801a656:	e01c      	b.n	801a692 <USBD_LL_IsoINIncomplete+0x5c>
 801a658:	687b      	ldr	r3, [r7, #4]
 801a65a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a65e:	b2db      	uxtb	r3, r3
 801a660:	2b03      	cmp	r3, #3
 801a662:	d115      	bne.n	801a690 <USBD_LL_IsoINIncomplete+0x5a>
 801a664:	687b      	ldr	r3, [r7, #4]
 801a666:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a66a:	687b      	ldr	r3, [r7, #4]
 801a66c:	32ae      	adds	r2, #174	; 0xae
 801a66e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a672:	6a1b      	ldr	r3, [r3, #32]
 801a674:	2b00      	cmp	r3, #0
 801a676:	d00b      	beq.n	801a690 <USBD_LL_IsoINIncomplete+0x5a>
 801a678:	687b      	ldr	r3, [r7, #4]
 801a67a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a67e:	687b      	ldr	r3, [r7, #4]
 801a680:	32ae      	adds	r2, #174	; 0xae
 801a682:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a686:	6a1b      	ldr	r3, [r3, #32]
 801a688:	78fa      	ldrb	r2, [r7, #3]
 801a68a:	4611      	mov	r1, r2
 801a68c:	6878      	ldr	r0, [r7, #4]
 801a68e:	4798      	blx	r3
 801a690:	2300      	movs	r3, #0
 801a692:	4618      	mov	r0, r3
 801a694:	3708      	adds	r7, #8
 801a696:	46bd      	mov	sp, r7
 801a698:	bd80      	pop	{r7, pc}

0801a69a <USBD_LL_IsoOUTIncomplete>:
 801a69a:	b580      	push	{r7, lr}
 801a69c:	b082      	sub	sp, #8
 801a69e:	af00      	add	r7, sp, #0
 801a6a0:	6078      	str	r0, [r7, #4]
 801a6a2:	460b      	mov	r3, r1
 801a6a4:	70fb      	strb	r3, [r7, #3]
 801a6a6:	687b      	ldr	r3, [r7, #4]
 801a6a8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a6ac:	687b      	ldr	r3, [r7, #4]
 801a6ae:	32ae      	adds	r2, #174	; 0xae
 801a6b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a6b4:	2b00      	cmp	r3, #0
 801a6b6:	d101      	bne.n	801a6bc <USBD_LL_IsoOUTIncomplete+0x22>
 801a6b8:	2303      	movs	r3, #3
 801a6ba:	e01c      	b.n	801a6f6 <USBD_LL_IsoOUTIncomplete+0x5c>
 801a6bc:	687b      	ldr	r3, [r7, #4]
 801a6be:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a6c2:	b2db      	uxtb	r3, r3
 801a6c4:	2b03      	cmp	r3, #3
 801a6c6:	d115      	bne.n	801a6f4 <USBD_LL_IsoOUTIncomplete+0x5a>
 801a6c8:	687b      	ldr	r3, [r7, #4]
 801a6ca:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a6ce:	687b      	ldr	r3, [r7, #4]
 801a6d0:	32ae      	adds	r2, #174	; 0xae
 801a6d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a6d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801a6d8:	2b00      	cmp	r3, #0
 801a6da:	d00b      	beq.n	801a6f4 <USBD_LL_IsoOUTIncomplete+0x5a>
 801a6dc:	687b      	ldr	r3, [r7, #4]
 801a6de:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a6e2:	687b      	ldr	r3, [r7, #4]
 801a6e4:	32ae      	adds	r2, #174	; 0xae
 801a6e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a6ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801a6ec:	78fa      	ldrb	r2, [r7, #3]
 801a6ee:	4611      	mov	r1, r2
 801a6f0:	6878      	ldr	r0, [r7, #4]
 801a6f2:	4798      	blx	r3
 801a6f4:	2300      	movs	r3, #0
 801a6f6:	4618      	mov	r0, r3
 801a6f8:	3708      	adds	r7, #8
 801a6fa:	46bd      	mov	sp, r7
 801a6fc:	bd80      	pop	{r7, pc}

0801a6fe <USBD_LL_DevConnected>:
 801a6fe:	b480      	push	{r7}
 801a700:	b083      	sub	sp, #12
 801a702:	af00      	add	r7, sp, #0
 801a704:	6078      	str	r0, [r7, #4]
 801a706:	2300      	movs	r3, #0
 801a708:	4618      	mov	r0, r3
 801a70a:	370c      	adds	r7, #12
 801a70c:	46bd      	mov	sp, r7
 801a70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a712:	4770      	bx	lr

0801a714 <USBD_LL_DevDisconnected>:
 801a714:	b580      	push	{r7, lr}
 801a716:	b084      	sub	sp, #16
 801a718:	af00      	add	r7, sp, #0
 801a71a:	6078      	str	r0, [r7, #4]
 801a71c:	2300      	movs	r3, #0
 801a71e:	73fb      	strb	r3, [r7, #15]
 801a720:	687b      	ldr	r3, [r7, #4]
 801a722:	2201      	movs	r2, #1
 801a724:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801a728:	687b      	ldr	r3, [r7, #4]
 801a72a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a72e:	2b00      	cmp	r3, #0
 801a730:	d00e      	beq.n	801a750 <USBD_LL_DevDisconnected+0x3c>
 801a732:	687b      	ldr	r3, [r7, #4]
 801a734:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801a738:	685b      	ldr	r3, [r3, #4]
 801a73a:	687a      	ldr	r2, [r7, #4]
 801a73c:	6852      	ldr	r2, [r2, #4]
 801a73e:	b2d2      	uxtb	r2, r2
 801a740:	4611      	mov	r1, r2
 801a742:	6878      	ldr	r0, [r7, #4]
 801a744:	4798      	blx	r3
 801a746:	4603      	mov	r3, r0
 801a748:	2b00      	cmp	r3, #0
 801a74a:	d001      	beq.n	801a750 <USBD_LL_DevDisconnected+0x3c>
 801a74c:	2303      	movs	r3, #3
 801a74e:	73fb      	strb	r3, [r7, #15]
 801a750:	7bfb      	ldrb	r3, [r7, #15]
 801a752:	4618      	mov	r0, r3
 801a754:	3710      	adds	r7, #16
 801a756:	46bd      	mov	sp, r7
 801a758:	bd80      	pop	{r7, pc}

0801a75a <USBD_CoreFindIF>:
 801a75a:	b480      	push	{r7}
 801a75c:	b083      	sub	sp, #12
 801a75e:	af00      	add	r7, sp, #0
 801a760:	6078      	str	r0, [r7, #4]
 801a762:	460b      	mov	r3, r1
 801a764:	70fb      	strb	r3, [r7, #3]
 801a766:	2300      	movs	r3, #0
 801a768:	4618      	mov	r0, r3
 801a76a:	370c      	adds	r7, #12
 801a76c:	46bd      	mov	sp, r7
 801a76e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a772:	4770      	bx	lr

0801a774 <USBD_CoreFindEP>:
 801a774:	b480      	push	{r7}
 801a776:	b083      	sub	sp, #12
 801a778:	af00      	add	r7, sp, #0
 801a77a:	6078      	str	r0, [r7, #4]
 801a77c:	460b      	mov	r3, r1
 801a77e:	70fb      	strb	r3, [r7, #3]
 801a780:	2300      	movs	r3, #0
 801a782:	4618      	mov	r0, r3
 801a784:	370c      	adds	r7, #12
 801a786:	46bd      	mov	sp, r7
 801a788:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a78c:	4770      	bx	lr

0801a78e <USBD_GetEpDesc>:
 801a78e:	b580      	push	{r7, lr}
 801a790:	b086      	sub	sp, #24
 801a792:	af00      	add	r7, sp, #0
 801a794:	6078      	str	r0, [r7, #4]
 801a796:	460b      	mov	r3, r1
 801a798:	70fb      	strb	r3, [r7, #3]
 801a79a:	687b      	ldr	r3, [r7, #4]
 801a79c:	617b      	str	r3, [r7, #20]
 801a79e:	687b      	ldr	r3, [r7, #4]
 801a7a0:	60fb      	str	r3, [r7, #12]
 801a7a2:	2300      	movs	r3, #0
 801a7a4:	613b      	str	r3, [r7, #16]
 801a7a6:	68fb      	ldr	r3, [r7, #12]
 801a7a8:	885b      	ldrh	r3, [r3, #2]
 801a7aa:	b29a      	uxth	r2, r3
 801a7ac:	68fb      	ldr	r3, [r7, #12]
 801a7ae:	781b      	ldrb	r3, [r3, #0]
 801a7b0:	b29b      	uxth	r3, r3
 801a7b2:	429a      	cmp	r2, r3
 801a7b4:	d920      	bls.n	801a7f8 <USBD_GetEpDesc+0x6a>
 801a7b6:	68fb      	ldr	r3, [r7, #12]
 801a7b8:	781b      	ldrb	r3, [r3, #0]
 801a7ba:	b29b      	uxth	r3, r3
 801a7bc:	817b      	strh	r3, [r7, #10]
 801a7be:	e013      	b.n	801a7e8 <USBD_GetEpDesc+0x5a>
 801a7c0:	f107 030a 	add.w	r3, r7, #10
 801a7c4:	4619      	mov	r1, r3
 801a7c6:	6978      	ldr	r0, [r7, #20]
 801a7c8:	f000 f81b 	bl	801a802 <USBD_GetNextDesc>
 801a7cc:	6178      	str	r0, [r7, #20]
 801a7ce:	697b      	ldr	r3, [r7, #20]
 801a7d0:	785b      	ldrb	r3, [r3, #1]
 801a7d2:	2b05      	cmp	r3, #5
 801a7d4:	d108      	bne.n	801a7e8 <USBD_GetEpDesc+0x5a>
 801a7d6:	697b      	ldr	r3, [r7, #20]
 801a7d8:	613b      	str	r3, [r7, #16]
 801a7da:	693b      	ldr	r3, [r7, #16]
 801a7dc:	789b      	ldrb	r3, [r3, #2]
 801a7de:	78fa      	ldrb	r2, [r7, #3]
 801a7e0:	429a      	cmp	r2, r3
 801a7e2:	d008      	beq.n	801a7f6 <USBD_GetEpDesc+0x68>
 801a7e4:	2300      	movs	r3, #0
 801a7e6:	613b      	str	r3, [r7, #16]
 801a7e8:	68fb      	ldr	r3, [r7, #12]
 801a7ea:	885b      	ldrh	r3, [r3, #2]
 801a7ec:	b29a      	uxth	r2, r3
 801a7ee:	897b      	ldrh	r3, [r7, #10]
 801a7f0:	429a      	cmp	r2, r3
 801a7f2:	d8e5      	bhi.n	801a7c0 <USBD_GetEpDesc+0x32>
 801a7f4:	e000      	b.n	801a7f8 <USBD_GetEpDesc+0x6a>
 801a7f6:	bf00      	nop
 801a7f8:	693b      	ldr	r3, [r7, #16]
 801a7fa:	4618      	mov	r0, r3
 801a7fc:	3718      	adds	r7, #24
 801a7fe:	46bd      	mov	sp, r7
 801a800:	bd80      	pop	{r7, pc}

0801a802 <USBD_GetNextDesc>:
 801a802:	b480      	push	{r7}
 801a804:	b085      	sub	sp, #20
 801a806:	af00      	add	r7, sp, #0
 801a808:	6078      	str	r0, [r7, #4]
 801a80a:	6039      	str	r1, [r7, #0]
 801a80c:	687b      	ldr	r3, [r7, #4]
 801a80e:	60fb      	str	r3, [r7, #12]
 801a810:	683b      	ldr	r3, [r7, #0]
 801a812:	881a      	ldrh	r2, [r3, #0]
 801a814:	68fb      	ldr	r3, [r7, #12]
 801a816:	781b      	ldrb	r3, [r3, #0]
 801a818:	b29b      	uxth	r3, r3
 801a81a:	4413      	add	r3, r2
 801a81c:	b29a      	uxth	r2, r3
 801a81e:	683b      	ldr	r3, [r7, #0]
 801a820:	801a      	strh	r2, [r3, #0]
 801a822:	68fb      	ldr	r3, [r7, #12]
 801a824:	781b      	ldrb	r3, [r3, #0]
 801a826:	461a      	mov	r2, r3
 801a828:	687b      	ldr	r3, [r7, #4]
 801a82a:	4413      	add	r3, r2
 801a82c:	60fb      	str	r3, [r7, #12]
 801a82e:	68fb      	ldr	r3, [r7, #12]
 801a830:	4618      	mov	r0, r3
 801a832:	3714      	adds	r7, #20
 801a834:	46bd      	mov	sp, r7
 801a836:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a83a:	4770      	bx	lr

0801a83c <SWAPBYTE>:
 801a83c:	b480      	push	{r7}
 801a83e:	b087      	sub	sp, #28
 801a840:	af00      	add	r7, sp, #0
 801a842:	6078      	str	r0, [r7, #4]
 801a844:	687b      	ldr	r3, [r7, #4]
 801a846:	617b      	str	r3, [r7, #20]
 801a848:	697b      	ldr	r3, [r7, #20]
 801a84a:	781b      	ldrb	r3, [r3, #0]
 801a84c:	827b      	strh	r3, [r7, #18]
 801a84e:	697b      	ldr	r3, [r7, #20]
 801a850:	3301      	adds	r3, #1
 801a852:	617b      	str	r3, [r7, #20]
 801a854:	697b      	ldr	r3, [r7, #20]
 801a856:	781b      	ldrb	r3, [r3, #0]
 801a858:	823b      	strh	r3, [r7, #16]
 801a85a:	8a3b      	ldrh	r3, [r7, #16]
 801a85c:	021b      	lsls	r3, r3, #8
 801a85e:	b21a      	sxth	r2, r3
 801a860:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801a864:	4313      	orrs	r3, r2
 801a866:	b21b      	sxth	r3, r3
 801a868:	81fb      	strh	r3, [r7, #14]
 801a86a:	89fb      	ldrh	r3, [r7, #14]
 801a86c:	4618      	mov	r0, r3
 801a86e:	371c      	adds	r7, #28
 801a870:	46bd      	mov	sp, r7
 801a872:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a876:	4770      	bx	lr

0801a878 <USBD_StdDevReq>:
 801a878:	b580      	push	{r7, lr}
 801a87a:	b084      	sub	sp, #16
 801a87c:	af00      	add	r7, sp, #0
 801a87e:	6078      	str	r0, [r7, #4]
 801a880:	6039      	str	r1, [r7, #0]
 801a882:	2300      	movs	r3, #0
 801a884:	73fb      	strb	r3, [r7, #15]
 801a886:	683b      	ldr	r3, [r7, #0]
 801a888:	781b      	ldrb	r3, [r3, #0]
 801a88a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a88e:	2b40      	cmp	r3, #64	; 0x40
 801a890:	d005      	beq.n	801a89e <USBD_StdDevReq+0x26>
 801a892:	2b40      	cmp	r3, #64	; 0x40
 801a894:	d857      	bhi.n	801a946 <USBD_StdDevReq+0xce>
 801a896:	2b00      	cmp	r3, #0
 801a898:	d00f      	beq.n	801a8ba <USBD_StdDevReq+0x42>
 801a89a:	2b20      	cmp	r3, #32
 801a89c:	d153      	bne.n	801a946 <USBD_StdDevReq+0xce>
 801a89e:	687b      	ldr	r3, [r7, #4]
 801a8a0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 801a8a4:	687b      	ldr	r3, [r7, #4]
 801a8a6:	32ae      	adds	r2, #174	; 0xae
 801a8a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a8ac:	689b      	ldr	r3, [r3, #8]
 801a8ae:	6839      	ldr	r1, [r7, #0]
 801a8b0:	6878      	ldr	r0, [r7, #4]
 801a8b2:	4798      	blx	r3
 801a8b4:	4603      	mov	r3, r0
 801a8b6:	73fb      	strb	r3, [r7, #15]
 801a8b8:	e04a      	b.n	801a950 <USBD_StdDevReq+0xd8>
 801a8ba:	683b      	ldr	r3, [r7, #0]
 801a8bc:	785b      	ldrb	r3, [r3, #1]
 801a8be:	2b09      	cmp	r3, #9
 801a8c0:	d83b      	bhi.n	801a93a <USBD_StdDevReq+0xc2>
 801a8c2:	a201      	add	r2, pc, #4	; (adr r2, 801a8c8 <USBD_StdDevReq+0x50>)
 801a8c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a8c8:	0801a91d 	.word	0x0801a91d
 801a8cc:	0801a931 	.word	0x0801a931
 801a8d0:	0801a93b 	.word	0x0801a93b
 801a8d4:	0801a927 	.word	0x0801a927
 801a8d8:	0801a93b 	.word	0x0801a93b
 801a8dc:	0801a8fb 	.word	0x0801a8fb
 801a8e0:	0801a8f1 	.word	0x0801a8f1
 801a8e4:	0801a93b 	.word	0x0801a93b
 801a8e8:	0801a913 	.word	0x0801a913
 801a8ec:	0801a905 	.word	0x0801a905
 801a8f0:	6839      	ldr	r1, [r7, #0]
 801a8f2:	6878      	ldr	r0, [r7, #4]
 801a8f4:	f000 fa3c 	bl	801ad70 <USBD_GetDescriptor>
 801a8f8:	e024      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a8fa:	6839      	ldr	r1, [r7, #0]
 801a8fc:	6878      	ldr	r0, [r7, #4]
 801a8fe:	f000 fba1 	bl	801b044 <USBD_SetAddress>
 801a902:	e01f      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a904:	6839      	ldr	r1, [r7, #0]
 801a906:	6878      	ldr	r0, [r7, #4]
 801a908:	f000 fbe0 	bl	801b0cc <USBD_SetConfig>
 801a90c:	4603      	mov	r3, r0
 801a90e:	73fb      	strb	r3, [r7, #15]
 801a910:	e018      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a912:	6839      	ldr	r1, [r7, #0]
 801a914:	6878      	ldr	r0, [r7, #4]
 801a916:	f000 fc83 	bl	801b220 <USBD_GetConfig>
 801a91a:	e013      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a91c:	6839      	ldr	r1, [r7, #0]
 801a91e:	6878      	ldr	r0, [r7, #4]
 801a920:	f000 fcb4 	bl	801b28c <USBD_GetStatus>
 801a924:	e00e      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a926:	6839      	ldr	r1, [r7, #0]
 801a928:	6878      	ldr	r0, [r7, #4]
 801a92a:	f000 fce3 	bl	801b2f4 <USBD_SetFeature>
 801a92e:	e009      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a930:	6839      	ldr	r1, [r7, #0]
 801a932:	6878      	ldr	r0, [r7, #4]
 801a934:	f000 fd07 	bl	801b346 <USBD_ClrFeature>
 801a938:	e004      	b.n	801a944 <USBD_StdDevReq+0xcc>
 801a93a:	6839      	ldr	r1, [r7, #0]
 801a93c:	6878      	ldr	r0, [r7, #4]
 801a93e:	f000 fd5e 	bl	801b3fe <USBD_CtlError>
 801a942:	bf00      	nop
 801a944:	e004      	b.n	801a950 <USBD_StdDevReq+0xd8>
 801a946:	6839      	ldr	r1, [r7, #0]
 801a948:	6878      	ldr	r0, [r7, #4]
 801a94a:	f000 fd58 	bl	801b3fe <USBD_CtlError>
 801a94e:	bf00      	nop
 801a950:	7bfb      	ldrb	r3, [r7, #15]
 801a952:	4618      	mov	r0, r3
 801a954:	3710      	adds	r7, #16
 801a956:	46bd      	mov	sp, r7
 801a958:	bd80      	pop	{r7, pc}
 801a95a:	bf00      	nop

0801a95c <USBD_StdItfReq>:
 801a95c:	b580      	push	{r7, lr}
 801a95e:	b084      	sub	sp, #16
 801a960:	af00      	add	r7, sp, #0
 801a962:	6078      	str	r0, [r7, #4]
 801a964:	6039      	str	r1, [r7, #0]
 801a966:	2300      	movs	r3, #0
 801a968:	73fb      	strb	r3, [r7, #15]
 801a96a:	683b      	ldr	r3, [r7, #0]
 801a96c:	781b      	ldrb	r3, [r3, #0]
 801a96e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a972:	2b40      	cmp	r3, #64	; 0x40
 801a974:	d005      	beq.n	801a982 <USBD_StdItfReq+0x26>
 801a976:	2b40      	cmp	r3, #64	; 0x40
 801a978:	d852      	bhi.n	801aa20 <USBD_StdItfReq+0xc4>
 801a97a:	2b00      	cmp	r3, #0
 801a97c:	d001      	beq.n	801a982 <USBD_StdItfReq+0x26>
 801a97e:	2b20      	cmp	r3, #32
 801a980:	d14e      	bne.n	801aa20 <USBD_StdItfReq+0xc4>
 801a982:	687b      	ldr	r3, [r7, #4]
 801a984:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801a988:	b2db      	uxtb	r3, r3
 801a98a:	3b01      	subs	r3, #1
 801a98c:	2b02      	cmp	r3, #2
 801a98e:	d840      	bhi.n	801aa12 <USBD_StdItfReq+0xb6>
 801a990:	683b      	ldr	r3, [r7, #0]
 801a992:	889b      	ldrh	r3, [r3, #4]
 801a994:	b2db      	uxtb	r3, r3
 801a996:	2b01      	cmp	r3, #1
 801a998:	d836      	bhi.n	801aa08 <USBD_StdItfReq+0xac>
 801a99a:	683b      	ldr	r3, [r7, #0]
 801a99c:	889b      	ldrh	r3, [r3, #4]
 801a99e:	b2db      	uxtb	r3, r3
 801a9a0:	4619      	mov	r1, r3
 801a9a2:	6878      	ldr	r0, [r7, #4]
 801a9a4:	f7ff fed9 	bl	801a75a <USBD_CoreFindIF>
 801a9a8:	4603      	mov	r3, r0
 801a9aa:	73bb      	strb	r3, [r7, #14]
 801a9ac:	7bbb      	ldrb	r3, [r7, #14]
 801a9ae:	2bff      	cmp	r3, #255	; 0xff
 801a9b0:	d01d      	beq.n	801a9ee <USBD_StdItfReq+0x92>
 801a9b2:	7bbb      	ldrb	r3, [r7, #14]
 801a9b4:	2b00      	cmp	r3, #0
 801a9b6:	d11a      	bne.n	801a9ee <USBD_StdItfReq+0x92>
 801a9b8:	7bba      	ldrb	r2, [r7, #14]
 801a9ba:	687b      	ldr	r3, [r7, #4]
 801a9bc:	32ae      	adds	r2, #174	; 0xae
 801a9be:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a9c2:	689b      	ldr	r3, [r3, #8]
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	d00f      	beq.n	801a9e8 <USBD_StdItfReq+0x8c>
 801a9c8:	7bba      	ldrb	r2, [r7, #14]
 801a9ca:	687b      	ldr	r3, [r7, #4]
 801a9cc:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801a9d0:	7bba      	ldrb	r2, [r7, #14]
 801a9d2:	687b      	ldr	r3, [r7, #4]
 801a9d4:	32ae      	adds	r2, #174	; 0xae
 801a9d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a9da:	689b      	ldr	r3, [r3, #8]
 801a9dc:	6839      	ldr	r1, [r7, #0]
 801a9de:	6878      	ldr	r0, [r7, #4]
 801a9e0:	4798      	blx	r3
 801a9e2:	4603      	mov	r3, r0
 801a9e4:	73fb      	strb	r3, [r7, #15]
 801a9e6:	e004      	b.n	801a9f2 <USBD_StdItfReq+0x96>
 801a9e8:	2303      	movs	r3, #3
 801a9ea:	73fb      	strb	r3, [r7, #15]
 801a9ec:	e001      	b.n	801a9f2 <USBD_StdItfReq+0x96>
 801a9ee:	2303      	movs	r3, #3
 801a9f0:	73fb      	strb	r3, [r7, #15]
 801a9f2:	683b      	ldr	r3, [r7, #0]
 801a9f4:	88db      	ldrh	r3, [r3, #6]
 801a9f6:	2b00      	cmp	r3, #0
 801a9f8:	d110      	bne.n	801aa1c <USBD_StdItfReq+0xc0>
 801a9fa:	7bfb      	ldrb	r3, [r7, #15]
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	d10d      	bne.n	801aa1c <USBD_StdItfReq+0xc0>
 801aa00:	6878      	ldr	r0, [r7, #4]
 801aa02:	f000 fdc7 	bl	801b594 <USBD_CtlSendStatus>
 801aa06:	e009      	b.n	801aa1c <USBD_StdItfReq+0xc0>
 801aa08:	6839      	ldr	r1, [r7, #0]
 801aa0a:	6878      	ldr	r0, [r7, #4]
 801aa0c:	f000 fcf7 	bl	801b3fe <USBD_CtlError>
 801aa10:	e004      	b.n	801aa1c <USBD_StdItfReq+0xc0>
 801aa12:	6839      	ldr	r1, [r7, #0]
 801aa14:	6878      	ldr	r0, [r7, #4]
 801aa16:	f000 fcf2 	bl	801b3fe <USBD_CtlError>
 801aa1a:	e000      	b.n	801aa1e <USBD_StdItfReq+0xc2>
 801aa1c:	bf00      	nop
 801aa1e:	e004      	b.n	801aa2a <USBD_StdItfReq+0xce>
 801aa20:	6839      	ldr	r1, [r7, #0]
 801aa22:	6878      	ldr	r0, [r7, #4]
 801aa24:	f000 fceb 	bl	801b3fe <USBD_CtlError>
 801aa28:	bf00      	nop
 801aa2a:	7bfb      	ldrb	r3, [r7, #15]
 801aa2c:	4618      	mov	r0, r3
 801aa2e:	3710      	adds	r7, #16
 801aa30:	46bd      	mov	sp, r7
 801aa32:	bd80      	pop	{r7, pc}

0801aa34 <USBD_StdEPReq>:
 801aa34:	b580      	push	{r7, lr}
 801aa36:	b084      	sub	sp, #16
 801aa38:	af00      	add	r7, sp, #0
 801aa3a:	6078      	str	r0, [r7, #4]
 801aa3c:	6039      	str	r1, [r7, #0]
 801aa3e:	2300      	movs	r3, #0
 801aa40:	73fb      	strb	r3, [r7, #15]
 801aa42:	683b      	ldr	r3, [r7, #0]
 801aa44:	889b      	ldrh	r3, [r3, #4]
 801aa46:	73bb      	strb	r3, [r7, #14]
 801aa48:	683b      	ldr	r3, [r7, #0]
 801aa4a:	781b      	ldrb	r3, [r3, #0]
 801aa4c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801aa50:	2b40      	cmp	r3, #64	; 0x40
 801aa52:	d007      	beq.n	801aa64 <USBD_StdEPReq+0x30>
 801aa54:	2b40      	cmp	r3, #64	; 0x40
 801aa56:	f200 817f 	bhi.w	801ad58 <USBD_StdEPReq+0x324>
 801aa5a:	2b00      	cmp	r3, #0
 801aa5c:	d02a      	beq.n	801aab4 <USBD_StdEPReq+0x80>
 801aa5e:	2b20      	cmp	r3, #32
 801aa60:	f040 817a 	bne.w	801ad58 <USBD_StdEPReq+0x324>
 801aa64:	7bbb      	ldrb	r3, [r7, #14]
 801aa66:	4619      	mov	r1, r3
 801aa68:	6878      	ldr	r0, [r7, #4]
 801aa6a:	f7ff fe83 	bl	801a774 <USBD_CoreFindEP>
 801aa6e:	4603      	mov	r3, r0
 801aa70:	737b      	strb	r3, [r7, #13]
 801aa72:	7b7b      	ldrb	r3, [r7, #13]
 801aa74:	2bff      	cmp	r3, #255	; 0xff
 801aa76:	f000 8174 	beq.w	801ad62 <USBD_StdEPReq+0x32e>
 801aa7a:	7b7b      	ldrb	r3, [r7, #13]
 801aa7c:	2b00      	cmp	r3, #0
 801aa7e:	f040 8170 	bne.w	801ad62 <USBD_StdEPReq+0x32e>
 801aa82:	7b7a      	ldrb	r2, [r7, #13]
 801aa84:	687b      	ldr	r3, [r7, #4]
 801aa86:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801aa8a:	7b7a      	ldrb	r2, [r7, #13]
 801aa8c:	687b      	ldr	r3, [r7, #4]
 801aa8e:	32ae      	adds	r2, #174	; 0xae
 801aa90:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801aa94:	689b      	ldr	r3, [r3, #8]
 801aa96:	2b00      	cmp	r3, #0
 801aa98:	f000 8163 	beq.w	801ad62 <USBD_StdEPReq+0x32e>
 801aa9c:	7b7a      	ldrb	r2, [r7, #13]
 801aa9e:	687b      	ldr	r3, [r7, #4]
 801aaa0:	32ae      	adds	r2, #174	; 0xae
 801aaa2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801aaa6:	689b      	ldr	r3, [r3, #8]
 801aaa8:	6839      	ldr	r1, [r7, #0]
 801aaaa:	6878      	ldr	r0, [r7, #4]
 801aaac:	4798      	blx	r3
 801aaae:	4603      	mov	r3, r0
 801aab0:	73fb      	strb	r3, [r7, #15]
 801aab2:	e156      	b.n	801ad62 <USBD_StdEPReq+0x32e>
 801aab4:	683b      	ldr	r3, [r7, #0]
 801aab6:	785b      	ldrb	r3, [r3, #1]
 801aab8:	2b03      	cmp	r3, #3
 801aaba:	d008      	beq.n	801aace <USBD_StdEPReq+0x9a>
 801aabc:	2b03      	cmp	r3, #3
 801aabe:	f300 8145 	bgt.w	801ad4c <USBD_StdEPReq+0x318>
 801aac2:	2b00      	cmp	r3, #0
 801aac4:	f000 809b 	beq.w	801abfe <USBD_StdEPReq+0x1ca>
 801aac8:	2b01      	cmp	r3, #1
 801aaca:	d03c      	beq.n	801ab46 <USBD_StdEPReq+0x112>
 801aacc:	e13e      	b.n	801ad4c <USBD_StdEPReq+0x318>
 801aace:	687b      	ldr	r3, [r7, #4]
 801aad0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801aad4:	b2db      	uxtb	r3, r3
 801aad6:	2b02      	cmp	r3, #2
 801aad8:	d002      	beq.n	801aae0 <USBD_StdEPReq+0xac>
 801aada:	2b03      	cmp	r3, #3
 801aadc:	d016      	beq.n	801ab0c <USBD_StdEPReq+0xd8>
 801aade:	e02c      	b.n	801ab3a <USBD_StdEPReq+0x106>
 801aae0:	7bbb      	ldrb	r3, [r7, #14]
 801aae2:	2b00      	cmp	r3, #0
 801aae4:	d00d      	beq.n	801ab02 <USBD_StdEPReq+0xce>
 801aae6:	7bbb      	ldrb	r3, [r7, #14]
 801aae8:	2b80      	cmp	r3, #128	; 0x80
 801aaea:	d00a      	beq.n	801ab02 <USBD_StdEPReq+0xce>
 801aaec:	7bbb      	ldrb	r3, [r7, #14]
 801aaee:	4619      	mov	r1, r3
 801aaf0:	6878      	ldr	r0, [r7, #4]
 801aaf2:	f004 fba1 	bl	801f238 <USBD_LL_StallEP>
 801aaf6:	2180      	movs	r1, #128	; 0x80
 801aaf8:	6878      	ldr	r0, [r7, #4]
 801aafa:	f004 fb9d 	bl	801f238 <USBD_LL_StallEP>
 801aafe:	bf00      	nop
 801ab00:	e020      	b.n	801ab44 <USBD_StdEPReq+0x110>
 801ab02:	6839      	ldr	r1, [r7, #0]
 801ab04:	6878      	ldr	r0, [r7, #4]
 801ab06:	f000 fc7a 	bl	801b3fe <USBD_CtlError>
 801ab0a:	e01b      	b.n	801ab44 <USBD_StdEPReq+0x110>
 801ab0c:	683b      	ldr	r3, [r7, #0]
 801ab0e:	885b      	ldrh	r3, [r3, #2]
 801ab10:	2b00      	cmp	r3, #0
 801ab12:	d10e      	bne.n	801ab32 <USBD_StdEPReq+0xfe>
 801ab14:	7bbb      	ldrb	r3, [r7, #14]
 801ab16:	2b00      	cmp	r3, #0
 801ab18:	d00b      	beq.n	801ab32 <USBD_StdEPReq+0xfe>
 801ab1a:	7bbb      	ldrb	r3, [r7, #14]
 801ab1c:	2b80      	cmp	r3, #128	; 0x80
 801ab1e:	d008      	beq.n	801ab32 <USBD_StdEPReq+0xfe>
 801ab20:	683b      	ldr	r3, [r7, #0]
 801ab22:	88db      	ldrh	r3, [r3, #6]
 801ab24:	2b00      	cmp	r3, #0
 801ab26:	d104      	bne.n	801ab32 <USBD_StdEPReq+0xfe>
 801ab28:	7bbb      	ldrb	r3, [r7, #14]
 801ab2a:	4619      	mov	r1, r3
 801ab2c:	6878      	ldr	r0, [r7, #4]
 801ab2e:	f004 fb83 	bl	801f238 <USBD_LL_StallEP>
 801ab32:	6878      	ldr	r0, [r7, #4]
 801ab34:	f000 fd2e 	bl	801b594 <USBD_CtlSendStatus>
 801ab38:	e004      	b.n	801ab44 <USBD_StdEPReq+0x110>
 801ab3a:	6839      	ldr	r1, [r7, #0]
 801ab3c:	6878      	ldr	r0, [r7, #4]
 801ab3e:	f000 fc5e 	bl	801b3fe <USBD_CtlError>
 801ab42:	bf00      	nop
 801ab44:	e107      	b.n	801ad56 <USBD_StdEPReq+0x322>
 801ab46:	687b      	ldr	r3, [r7, #4]
 801ab48:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801ab4c:	b2db      	uxtb	r3, r3
 801ab4e:	2b02      	cmp	r3, #2
 801ab50:	d002      	beq.n	801ab58 <USBD_StdEPReq+0x124>
 801ab52:	2b03      	cmp	r3, #3
 801ab54:	d016      	beq.n	801ab84 <USBD_StdEPReq+0x150>
 801ab56:	e04b      	b.n	801abf0 <USBD_StdEPReq+0x1bc>
 801ab58:	7bbb      	ldrb	r3, [r7, #14]
 801ab5a:	2b00      	cmp	r3, #0
 801ab5c:	d00d      	beq.n	801ab7a <USBD_StdEPReq+0x146>
 801ab5e:	7bbb      	ldrb	r3, [r7, #14]
 801ab60:	2b80      	cmp	r3, #128	; 0x80
 801ab62:	d00a      	beq.n	801ab7a <USBD_StdEPReq+0x146>
 801ab64:	7bbb      	ldrb	r3, [r7, #14]
 801ab66:	4619      	mov	r1, r3
 801ab68:	6878      	ldr	r0, [r7, #4]
 801ab6a:	f004 fb65 	bl	801f238 <USBD_LL_StallEP>
 801ab6e:	2180      	movs	r1, #128	; 0x80
 801ab70:	6878      	ldr	r0, [r7, #4]
 801ab72:	f004 fb61 	bl	801f238 <USBD_LL_StallEP>
 801ab76:	bf00      	nop
 801ab78:	e040      	b.n	801abfc <USBD_StdEPReq+0x1c8>
 801ab7a:	6839      	ldr	r1, [r7, #0]
 801ab7c:	6878      	ldr	r0, [r7, #4]
 801ab7e:	f000 fc3e 	bl	801b3fe <USBD_CtlError>
 801ab82:	e03b      	b.n	801abfc <USBD_StdEPReq+0x1c8>
 801ab84:	683b      	ldr	r3, [r7, #0]
 801ab86:	885b      	ldrh	r3, [r3, #2]
 801ab88:	2b00      	cmp	r3, #0
 801ab8a:	d136      	bne.n	801abfa <USBD_StdEPReq+0x1c6>
 801ab8c:	7bbb      	ldrb	r3, [r7, #14]
 801ab8e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801ab92:	2b00      	cmp	r3, #0
 801ab94:	d004      	beq.n	801aba0 <USBD_StdEPReq+0x16c>
 801ab96:	7bbb      	ldrb	r3, [r7, #14]
 801ab98:	4619      	mov	r1, r3
 801ab9a:	6878      	ldr	r0, [r7, #4]
 801ab9c:	f004 fb6b 	bl	801f276 <USBD_LL_ClearStallEP>
 801aba0:	6878      	ldr	r0, [r7, #4]
 801aba2:	f000 fcf7 	bl	801b594 <USBD_CtlSendStatus>
 801aba6:	7bbb      	ldrb	r3, [r7, #14]
 801aba8:	4619      	mov	r1, r3
 801abaa:	6878      	ldr	r0, [r7, #4]
 801abac:	f7ff fde2 	bl	801a774 <USBD_CoreFindEP>
 801abb0:	4603      	mov	r3, r0
 801abb2:	737b      	strb	r3, [r7, #13]
 801abb4:	7b7b      	ldrb	r3, [r7, #13]
 801abb6:	2bff      	cmp	r3, #255	; 0xff
 801abb8:	d01f      	beq.n	801abfa <USBD_StdEPReq+0x1c6>
 801abba:	7b7b      	ldrb	r3, [r7, #13]
 801abbc:	2b00      	cmp	r3, #0
 801abbe:	d11c      	bne.n	801abfa <USBD_StdEPReq+0x1c6>
 801abc0:	7b7a      	ldrb	r2, [r7, #13]
 801abc2:	687b      	ldr	r3, [r7, #4]
 801abc4:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 801abc8:	7b7a      	ldrb	r2, [r7, #13]
 801abca:	687b      	ldr	r3, [r7, #4]
 801abcc:	32ae      	adds	r2, #174	; 0xae
 801abce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801abd2:	689b      	ldr	r3, [r3, #8]
 801abd4:	2b00      	cmp	r3, #0
 801abd6:	d010      	beq.n	801abfa <USBD_StdEPReq+0x1c6>
 801abd8:	7b7a      	ldrb	r2, [r7, #13]
 801abda:	687b      	ldr	r3, [r7, #4]
 801abdc:	32ae      	adds	r2, #174	; 0xae
 801abde:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801abe2:	689b      	ldr	r3, [r3, #8]
 801abe4:	6839      	ldr	r1, [r7, #0]
 801abe6:	6878      	ldr	r0, [r7, #4]
 801abe8:	4798      	blx	r3
 801abea:	4603      	mov	r3, r0
 801abec:	73fb      	strb	r3, [r7, #15]
 801abee:	e004      	b.n	801abfa <USBD_StdEPReq+0x1c6>
 801abf0:	6839      	ldr	r1, [r7, #0]
 801abf2:	6878      	ldr	r0, [r7, #4]
 801abf4:	f000 fc03 	bl	801b3fe <USBD_CtlError>
 801abf8:	e000      	b.n	801abfc <USBD_StdEPReq+0x1c8>
 801abfa:	bf00      	nop
 801abfc:	e0ab      	b.n	801ad56 <USBD_StdEPReq+0x322>
 801abfe:	687b      	ldr	r3, [r7, #4]
 801ac00:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801ac04:	b2db      	uxtb	r3, r3
 801ac06:	2b02      	cmp	r3, #2
 801ac08:	d002      	beq.n	801ac10 <USBD_StdEPReq+0x1dc>
 801ac0a:	2b03      	cmp	r3, #3
 801ac0c:	d032      	beq.n	801ac74 <USBD_StdEPReq+0x240>
 801ac0e:	e097      	b.n	801ad40 <USBD_StdEPReq+0x30c>
 801ac10:	7bbb      	ldrb	r3, [r7, #14]
 801ac12:	2b00      	cmp	r3, #0
 801ac14:	d007      	beq.n	801ac26 <USBD_StdEPReq+0x1f2>
 801ac16:	7bbb      	ldrb	r3, [r7, #14]
 801ac18:	2b80      	cmp	r3, #128	; 0x80
 801ac1a:	d004      	beq.n	801ac26 <USBD_StdEPReq+0x1f2>
 801ac1c:	6839      	ldr	r1, [r7, #0]
 801ac1e:	6878      	ldr	r0, [r7, #4]
 801ac20:	f000 fbed 	bl	801b3fe <USBD_CtlError>
 801ac24:	e091      	b.n	801ad4a <USBD_StdEPReq+0x316>
 801ac26:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801ac2a:	2b00      	cmp	r3, #0
 801ac2c:	da0b      	bge.n	801ac46 <USBD_StdEPReq+0x212>
 801ac2e:	7bbb      	ldrb	r3, [r7, #14]
 801ac30:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801ac34:	4613      	mov	r3, r2
 801ac36:	009b      	lsls	r3, r3, #2
 801ac38:	4413      	add	r3, r2
 801ac3a:	009b      	lsls	r3, r3, #2
 801ac3c:	3310      	adds	r3, #16
 801ac3e:	687a      	ldr	r2, [r7, #4]
 801ac40:	4413      	add	r3, r2
 801ac42:	3304      	adds	r3, #4
 801ac44:	e00b      	b.n	801ac5e <USBD_StdEPReq+0x22a>
 801ac46:	7bbb      	ldrb	r3, [r7, #14]
 801ac48:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801ac4c:	4613      	mov	r3, r2
 801ac4e:	009b      	lsls	r3, r3, #2
 801ac50:	4413      	add	r3, r2
 801ac52:	009b      	lsls	r3, r3, #2
 801ac54:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 801ac58:	687a      	ldr	r2, [r7, #4]
 801ac5a:	4413      	add	r3, r2
 801ac5c:	3304      	adds	r3, #4
 801ac5e:	60bb      	str	r3, [r7, #8]
 801ac60:	68bb      	ldr	r3, [r7, #8]
 801ac62:	2200      	movs	r2, #0
 801ac64:	601a      	str	r2, [r3, #0]
 801ac66:	68bb      	ldr	r3, [r7, #8]
 801ac68:	2202      	movs	r2, #2
 801ac6a:	4619      	mov	r1, r3
 801ac6c:	6878      	ldr	r0, [r7, #4]
 801ac6e:	f000 fc37 	bl	801b4e0 <USBD_CtlSendData>
 801ac72:	e06a      	b.n	801ad4a <USBD_StdEPReq+0x316>
 801ac74:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801ac78:	2b00      	cmp	r3, #0
 801ac7a:	da11      	bge.n	801aca0 <USBD_StdEPReq+0x26c>
 801ac7c:	7bbb      	ldrb	r3, [r7, #14]
 801ac7e:	f003 020f 	and.w	r2, r3, #15
 801ac82:	6879      	ldr	r1, [r7, #4]
 801ac84:	4613      	mov	r3, r2
 801ac86:	009b      	lsls	r3, r3, #2
 801ac88:	4413      	add	r3, r2
 801ac8a:	009b      	lsls	r3, r3, #2
 801ac8c:	440b      	add	r3, r1
 801ac8e:	3324      	adds	r3, #36	; 0x24
 801ac90:	881b      	ldrh	r3, [r3, #0]
 801ac92:	2b00      	cmp	r3, #0
 801ac94:	d117      	bne.n	801acc6 <USBD_StdEPReq+0x292>
 801ac96:	6839      	ldr	r1, [r7, #0]
 801ac98:	6878      	ldr	r0, [r7, #4]
 801ac9a:	f000 fbb0 	bl	801b3fe <USBD_CtlError>
 801ac9e:	e054      	b.n	801ad4a <USBD_StdEPReq+0x316>
 801aca0:	7bbb      	ldrb	r3, [r7, #14]
 801aca2:	f003 020f 	and.w	r2, r3, #15
 801aca6:	6879      	ldr	r1, [r7, #4]
 801aca8:	4613      	mov	r3, r2
 801acaa:	009b      	lsls	r3, r3, #2
 801acac:	4413      	add	r3, r2
 801acae:	009b      	lsls	r3, r3, #2
 801acb0:	440b      	add	r3, r1
 801acb2:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 801acb6:	881b      	ldrh	r3, [r3, #0]
 801acb8:	2b00      	cmp	r3, #0
 801acba:	d104      	bne.n	801acc6 <USBD_StdEPReq+0x292>
 801acbc:	6839      	ldr	r1, [r7, #0]
 801acbe:	6878      	ldr	r0, [r7, #4]
 801acc0:	f000 fb9d 	bl	801b3fe <USBD_CtlError>
 801acc4:	e041      	b.n	801ad4a <USBD_StdEPReq+0x316>
 801acc6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801acca:	2b00      	cmp	r3, #0
 801accc:	da0b      	bge.n	801ace6 <USBD_StdEPReq+0x2b2>
 801acce:	7bbb      	ldrb	r3, [r7, #14]
 801acd0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801acd4:	4613      	mov	r3, r2
 801acd6:	009b      	lsls	r3, r3, #2
 801acd8:	4413      	add	r3, r2
 801acda:	009b      	lsls	r3, r3, #2
 801acdc:	3310      	adds	r3, #16
 801acde:	687a      	ldr	r2, [r7, #4]
 801ace0:	4413      	add	r3, r2
 801ace2:	3304      	adds	r3, #4
 801ace4:	e00b      	b.n	801acfe <USBD_StdEPReq+0x2ca>
 801ace6:	7bbb      	ldrb	r3, [r7, #14]
 801ace8:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801acec:	4613      	mov	r3, r2
 801acee:	009b      	lsls	r3, r3, #2
 801acf0:	4413      	add	r3, r2
 801acf2:	009b      	lsls	r3, r3, #2
 801acf4:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 801acf8:	687a      	ldr	r2, [r7, #4]
 801acfa:	4413      	add	r3, r2
 801acfc:	3304      	adds	r3, #4
 801acfe:	60bb      	str	r3, [r7, #8]
 801ad00:	7bbb      	ldrb	r3, [r7, #14]
 801ad02:	2b00      	cmp	r3, #0
 801ad04:	d002      	beq.n	801ad0c <USBD_StdEPReq+0x2d8>
 801ad06:	7bbb      	ldrb	r3, [r7, #14]
 801ad08:	2b80      	cmp	r3, #128	; 0x80
 801ad0a:	d103      	bne.n	801ad14 <USBD_StdEPReq+0x2e0>
 801ad0c:	68bb      	ldr	r3, [r7, #8]
 801ad0e:	2200      	movs	r2, #0
 801ad10:	601a      	str	r2, [r3, #0]
 801ad12:	e00e      	b.n	801ad32 <USBD_StdEPReq+0x2fe>
 801ad14:	7bbb      	ldrb	r3, [r7, #14]
 801ad16:	4619      	mov	r1, r3
 801ad18:	6878      	ldr	r0, [r7, #4]
 801ad1a:	f004 facb 	bl	801f2b4 <USBD_LL_IsStallEP>
 801ad1e:	4603      	mov	r3, r0
 801ad20:	2b00      	cmp	r3, #0
 801ad22:	d003      	beq.n	801ad2c <USBD_StdEPReq+0x2f8>
 801ad24:	68bb      	ldr	r3, [r7, #8]
 801ad26:	2201      	movs	r2, #1
 801ad28:	601a      	str	r2, [r3, #0]
 801ad2a:	e002      	b.n	801ad32 <USBD_StdEPReq+0x2fe>
 801ad2c:	68bb      	ldr	r3, [r7, #8]
 801ad2e:	2200      	movs	r2, #0
 801ad30:	601a      	str	r2, [r3, #0]
 801ad32:	68bb      	ldr	r3, [r7, #8]
 801ad34:	2202      	movs	r2, #2
 801ad36:	4619      	mov	r1, r3
 801ad38:	6878      	ldr	r0, [r7, #4]
 801ad3a:	f000 fbd1 	bl	801b4e0 <USBD_CtlSendData>
 801ad3e:	e004      	b.n	801ad4a <USBD_StdEPReq+0x316>
 801ad40:	6839      	ldr	r1, [r7, #0]
 801ad42:	6878      	ldr	r0, [r7, #4]
 801ad44:	f000 fb5b 	bl	801b3fe <USBD_CtlError>
 801ad48:	bf00      	nop
 801ad4a:	e004      	b.n	801ad56 <USBD_StdEPReq+0x322>
 801ad4c:	6839      	ldr	r1, [r7, #0]
 801ad4e:	6878      	ldr	r0, [r7, #4]
 801ad50:	f000 fb55 	bl	801b3fe <USBD_CtlError>
 801ad54:	bf00      	nop
 801ad56:	e005      	b.n	801ad64 <USBD_StdEPReq+0x330>
 801ad58:	6839      	ldr	r1, [r7, #0]
 801ad5a:	6878      	ldr	r0, [r7, #4]
 801ad5c:	f000 fb4f 	bl	801b3fe <USBD_CtlError>
 801ad60:	e000      	b.n	801ad64 <USBD_StdEPReq+0x330>
 801ad62:	bf00      	nop
 801ad64:	7bfb      	ldrb	r3, [r7, #15]
 801ad66:	4618      	mov	r0, r3
 801ad68:	3710      	adds	r7, #16
 801ad6a:	46bd      	mov	sp, r7
 801ad6c:	bd80      	pop	{r7, pc}
	...

0801ad70 <USBD_GetDescriptor>:
 801ad70:	b580      	push	{r7, lr}
 801ad72:	b084      	sub	sp, #16
 801ad74:	af00      	add	r7, sp, #0
 801ad76:	6078      	str	r0, [r7, #4]
 801ad78:	6039      	str	r1, [r7, #0]
 801ad7a:	2300      	movs	r3, #0
 801ad7c:	813b      	strh	r3, [r7, #8]
 801ad7e:	2300      	movs	r3, #0
 801ad80:	60fb      	str	r3, [r7, #12]
 801ad82:	2300      	movs	r3, #0
 801ad84:	72fb      	strb	r3, [r7, #11]
 801ad86:	683b      	ldr	r3, [r7, #0]
 801ad88:	885b      	ldrh	r3, [r3, #2]
 801ad8a:	0a1b      	lsrs	r3, r3, #8
 801ad8c:	b29b      	uxth	r3, r3
 801ad8e:	3b01      	subs	r3, #1
 801ad90:	2b06      	cmp	r3, #6
 801ad92:	f200 8128 	bhi.w	801afe6 <USBD_GetDescriptor+0x276>
 801ad96:	a201      	add	r2, pc, #4	; (adr r2, 801ad9c <USBD_GetDescriptor+0x2c>)
 801ad98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ad9c:	0801adb9 	.word	0x0801adb9
 801ada0:	0801add1 	.word	0x0801add1
 801ada4:	0801ae11 	.word	0x0801ae11
 801ada8:	0801afe7 	.word	0x0801afe7
 801adac:	0801afe7 	.word	0x0801afe7
 801adb0:	0801af87 	.word	0x0801af87
 801adb4:	0801afb3 	.word	0x0801afb3
 801adb8:	687b      	ldr	r3, [r7, #4]
 801adba:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801adbe:	681b      	ldr	r3, [r3, #0]
 801adc0:	687a      	ldr	r2, [r7, #4]
 801adc2:	7c12      	ldrb	r2, [r2, #16]
 801adc4:	f107 0108 	add.w	r1, r7, #8
 801adc8:	4610      	mov	r0, r2
 801adca:	4798      	blx	r3
 801adcc:	60f8      	str	r0, [r7, #12]
 801adce:	e112      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801add0:	687b      	ldr	r3, [r7, #4]
 801add2:	7c1b      	ldrb	r3, [r3, #16]
 801add4:	2b00      	cmp	r3, #0
 801add6:	d10d      	bne.n	801adf4 <USBD_GetDescriptor+0x84>
 801add8:	687b      	ldr	r3, [r7, #4]
 801adda:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801adde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ade0:	f107 0208 	add.w	r2, r7, #8
 801ade4:	4610      	mov	r0, r2
 801ade6:	4798      	blx	r3
 801ade8:	60f8      	str	r0, [r7, #12]
 801adea:	68fb      	ldr	r3, [r7, #12]
 801adec:	3301      	adds	r3, #1
 801adee:	2202      	movs	r2, #2
 801adf0:	701a      	strb	r2, [r3, #0]
 801adf2:	e100      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801adf4:	687b      	ldr	r3, [r7, #4]
 801adf6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801adfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801adfc:	f107 0208 	add.w	r2, r7, #8
 801ae00:	4610      	mov	r0, r2
 801ae02:	4798      	blx	r3
 801ae04:	60f8      	str	r0, [r7, #12]
 801ae06:	68fb      	ldr	r3, [r7, #12]
 801ae08:	3301      	adds	r3, #1
 801ae0a:	2202      	movs	r2, #2
 801ae0c:	701a      	strb	r2, [r3, #0]
 801ae0e:	e0f2      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801ae10:	683b      	ldr	r3, [r7, #0]
 801ae12:	885b      	ldrh	r3, [r3, #2]
 801ae14:	b2db      	uxtb	r3, r3
 801ae16:	2b05      	cmp	r3, #5
 801ae18:	f200 80ac 	bhi.w	801af74 <USBD_GetDescriptor+0x204>
 801ae1c:	a201      	add	r2, pc, #4	; (adr r2, 801ae24 <USBD_GetDescriptor+0xb4>)
 801ae1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ae22:	bf00      	nop
 801ae24:	0801ae3d 	.word	0x0801ae3d
 801ae28:	0801ae71 	.word	0x0801ae71
 801ae2c:	0801aea5 	.word	0x0801aea5
 801ae30:	0801aed9 	.word	0x0801aed9
 801ae34:	0801af0d 	.word	0x0801af0d
 801ae38:	0801af41 	.word	0x0801af41
 801ae3c:	687b      	ldr	r3, [r7, #4]
 801ae3e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ae42:	685b      	ldr	r3, [r3, #4]
 801ae44:	2b00      	cmp	r3, #0
 801ae46:	d00b      	beq.n	801ae60 <USBD_GetDescriptor+0xf0>
 801ae48:	687b      	ldr	r3, [r7, #4]
 801ae4a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ae4e:	685b      	ldr	r3, [r3, #4]
 801ae50:	687a      	ldr	r2, [r7, #4]
 801ae52:	7c12      	ldrb	r2, [r2, #16]
 801ae54:	f107 0108 	add.w	r1, r7, #8
 801ae58:	4610      	mov	r0, r2
 801ae5a:	4798      	blx	r3
 801ae5c:	60f8      	str	r0, [r7, #12]
 801ae5e:	e091      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801ae60:	6839      	ldr	r1, [r7, #0]
 801ae62:	6878      	ldr	r0, [r7, #4]
 801ae64:	f000 facb 	bl	801b3fe <USBD_CtlError>
 801ae68:	7afb      	ldrb	r3, [r7, #11]
 801ae6a:	3301      	adds	r3, #1
 801ae6c:	72fb      	strb	r3, [r7, #11]
 801ae6e:	e089      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801ae70:	687b      	ldr	r3, [r7, #4]
 801ae72:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ae76:	689b      	ldr	r3, [r3, #8]
 801ae78:	2b00      	cmp	r3, #0
 801ae7a:	d00b      	beq.n	801ae94 <USBD_GetDescriptor+0x124>
 801ae7c:	687b      	ldr	r3, [r7, #4]
 801ae7e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801ae82:	689b      	ldr	r3, [r3, #8]
 801ae84:	687a      	ldr	r2, [r7, #4]
 801ae86:	7c12      	ldrb	r2, [r2, #16]
 801ae88:	f107 0108 	add.w	r1, r7, #8
 801ae8c:	4610      	mov	r0, r2
 801ae8e:	4798      	blx	r3
 801ae90:	60f8      	str	r0, [r7, #12]
 801ae92:	e077      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801ae94:	6839      	ldr	r1, [r7, #0]
 801ae96:	6878      	ldr	r0, [r7, #4]
 801ae98:	f000 fab1 	bl	801b3fe <USBD_CtlError>
 801ae9c:	7afb      	ldrb	r3, [r7, #11]
 801ae9e:	3301      	adds	r3, #1
 801aea0:	72fb      	strb	r3, [r7, #11]
 801aea2:	e06f      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801aea4:	687b      	ldr	r3, [r7, #4]
 801aea6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801aeaa:	68db      	ldr	r3, [r3, #12]
 801aeac:	2b00      	cmp	r3, #0
 801aeae:	d00b      	beq.n	801aec8 <USBD_GetDescriptor+0x158>
 801aeb0:	687b      	ldr	r3, [r7, #4]
 801aeb2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801aeb6:	68db      	ldr	r3, [r3, #12]
 801aeb8:	687a      	ldr	r2, [r7, #4]
 801aeba:	7c12      	ldrb	r2, [r2, #16]
 801aebc:	f107 0108 	add.w	r1, r7, #8
 801aec0:	4610      	mov	r0, r2
 801aec2:	4798      	blx	r3
 801aec4:	60f8      	str	r0, [r7, #12]
 801aec6:	e05d      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801aec8:	6839      	ldr	r1, [r7, #0]
 801aeca:	6878      	ldr	r0, [r7, #4]
 801aecc:	f000 fa97 	bl	801b3fe <USBD_CtlError>
 801aed0:	7afb      	ldrb	r3, [r7, #11]
 801aed2:	3301      	adds	r3, #1
 801aed4:	72fb      	strb	r3, [r7, #11]
 801aed6:	e055      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801aed8:	687b      	ldr	r3, [r7, #4]
 801aeda:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801aede:	691b      	ldr	r3, [r3, #16]
 801aee0:	2b00      	cmp	r3, #0
 801aee2:	d00b      	beq.n	801aefc <USBD_GetDescriptor+0x18c>
 801aee4:	687b      	ldr	r3, [r7, #4]
 801aee6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801aeea:	691b      	ldr	r3, [r3, #16]
 801aeec:	687a      	ldr	r2, [r7, #4]
 801aeee:	7c12      	ldrb	r2, [r2, #16]
 801aef0:	f107 0108 	add.w	r1, r7, #8
 801aef4:	4610      	mov	r0, r2
 801aef6:	4798      	blx	r3
 801aef8:	60f8      	str	r0, [r7, #12]
 801aefa:	e043      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801aefc:	6839      	ldr	r1, [r7, #0]
 801aefe:	6878      	ldr	r0, [r7, #4]
 801af00:	f000 fa7d 	bl	801b3fe <USBD_CtlError>
 801af04:	7afb      	ldrb	r3, [r7, #11]
 801af06:	3301      	adds	r3, #1
 801af08:	72fb      	strb	r3, [r7, #11]
 801af0a:	e03b      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801af0c:	687b      	ldr	r3, [r7, #4]
 801af0e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801af12:	695b      	ldr	r3, [r3, #20]
 801af14:	2b00      	cmp	r3, #0
 801af16:	d00b      	beq.n	801af30 <USBD_GetDescriptor+0x1c0>
 801af18:	687b      	ldr	r3, [r7, #4]
 801af1a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801af1e:	695b      	ldr	r3, [r3, #20]
 801af20:	687a      	ldr	r2, [r7, #4]
 801af22:	7c12      	ldrb	r2, [r2, #16]
 801af24:	f107 0108 	add.w	r1, r7, #8
 801af28:	4610      	mov	r0, r2
 801af2a:	4798      	blx	r3
 801af2c:	60f8      	str	r0, [r7, #12]
 801af2e:	e029      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801af30:	6839      	ldr	r1, [r7, #0]
 801af32:	6878      	ldr	r0, [r7, #4]
 801af34:	f000 fa63 	bl	801b3fe <USBD_CtlError>
 801af38:	7afb      	ldrb	r3, [r7, #11]
 801af3a:	3301      	adds	r3, #1
 801af3c:	72fb      	strb	r3, [r7, #11]
 801af3e:	e021      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801af40:	687b      	ldr	r3, [r7, #4]
 801af42:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801af46:	699b      	ldr	r3, [r3, #24]
 801af48:	2b00      	cmp	r3, #0
 801af4a:	d00b      	beq.n	801af64 <USBD_GetDescriptor+0x1f4>
 801af4c:	687b      	ldr	r3, [r7, #4]
 801af4e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 801af52:	699b      	ldr	r3, [r3, #24]
 801af54:	687a      	ldr	r2, [r7, #4]
 801af56:	7c12      	ldrb	r2, [r2, #16]
 801af58:	f107 0108 	add.w	r1, r7, #8
 801af5c:	4610      	mov	r0, r2
 801af5e:	4798      	blx	r3
 801af60:	60f8      	str	r0, [r7, #12]
 801af62:	e00f      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801af64:	6839      	ldr	r1, [r7, #0]
 801af66:	6878      	ldr	r0, [r7, #4]
 801af68:	f000 fa49 	bl	801b3fe <USBD_CtlError>
 801af6c:	7afb      	ldrb	r3, [r7, #11]
 801af6e:	3301      	adds	r3, #1
 801af70:	72fb      	strb	r3, [r7, #11]
 801af72:	e007      	b.n	801af84 <USBD_GetDescriptor+0x214>
 801af74:	6839      	ldr	r1, [r7, #0]
 801af76:	6878      	ldr	r0, [r7, #4]
 801af78:	f000 fa41 	bl	801b3fe <USBD_CtlError>
 801af7c:	7afb      	ldrb	r3, [r7, #11]
 801af7e:	3301      	adds	r3, #1
 801af80:	72fb      	strb	r3, [r7, #11]
 801af82:	bf00      	nop
 801af84:	e037      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801af86:	687b      	ldr	r3, [r7, #4]
 801af88:	7c1b      	ldrb	r3, [r3, #16]
 801af8a:	2b00      	cmp	r3, #0
 801af8c:	d109      	bne.n	801afa2 <USBD_GetDescriptor+0x232>
 801af8e:	687b      	ldr	r3, [r7, #4]
 801af90:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801af94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801af96:	f107 0208 	add.w	r2, r7, #8
 801af9a:	4610      	mov	r0, r2
 801af9c:	4798      	blx	r3
 801af9e:	60f8      	str	r0, [r7, #12]
 801afa0:	e029      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801afa2:	6839      	ldr	r1, [r7, #0]
 801afa4:	6878      	ldr	r0, [r7, #4]
 801afa6:	f000 fa2a 	bl	801b3fe <USBD_CtlError>
 801afaa:	7afb      	ldrb	r3, [r7, #11]
 801afac:	3301      	adds	r3, #1
 801afae:	72fb      	strb	r3, [r7, #11]
 801afb0:	e021      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801afb2:	687b      	ldr	r3, [r7, #4]
 801afb4:	7c1b      	ldrb	r3, [r3, #16]
 801afb6:	2b00      	cmp	r3, #0
 801afb8:	d10d      	bne.n	801afd6 <USBD_GetDescriptor+0x266>
 801afba:	687b      	ldr	r3, [r7, #4]
 801afbc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 801afc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801afc2:	f107 0208 	add.w	r2, r7, #8
 801afc6:	4610      	mov	r0, r2
 801afc8:	4798      	blx	r3
 801afca:	60f8      	str	r0, [r7, #12]
 801afcc:	68fb      	ldr	r3, [r7, #12]
 801afce:	3301      	adds	r3, #1
 801afd0:	2207      	movs	r2, #7
 801afd2:	701a      	strb	r2, [r3, #0]
 801afd4:	e00f      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801afd6:	6839      	ldr	r1, [r7, #0]
 801afd8:	6878      	ldr	r0, [r7, #4]
 801afda:	f000 fa10 	bl	801b3fe <USBD_CtlError>
 801afde:	7afb      	ldrb	r3, [r7, #11]
 801afe0:	3301      	adds	r3, #1
 801afe2:	72fb      	strb	r3, [r7, #11]
 801afe4:	e007      	b.n	801aff6 <USBD_GetDescriptor+0x286>
 801afe6:	6839      	ldr	r1, [r7, #0]
 801afe8:	6878      	ldr	r0, [r7, #4]
 801afea:	f000 fa08 	bl	801b3fe <USBD_CtlError>
 801afee:	7afb      	ldrb	r3, [r7, #11]
 801aff0:	3301      	adds	r3, #1
 801aff2:	72fb      	strb	r3, [r7, #11]
 801aff4:	bf00      	nop
 801aff6:	7afb      	ldrb	r3, [r7, #11]
 801aff8:	2b00      	cmp	r3, #0
 801affa:	d11e      	bne.n	801b03a <USBD_GetDescriptor+0x2ca>
 801affc:	683b      	ldr	r3, [r7, #0]
 801affe:	88db      	ldrh	r3, [r3, #6]
 801b000:	2b00      	cmp	r3, #0
 801b002:	d016      	beq.n	801b032 <USBD_GetDescriptor+0x2c2>
 801b004:	893b      	ldrh	r3, [r7, #8]
 801b006:	2b00      	cmp	r3, #0
 801b008:	d00e      	beq.n	801b028 <USBD_GetDescriptor+0x2b8>
 801b00a:	683b      	ldr	r3, [r7, #0]
 801b00c:	88da      	ldrh	r2, [r3, #6]
 801b00e:	893b      	ldrh	r3, [r7, #8]
 801b010:	4293      	cmp	r3, r2
 801b012:	bf28      	it	cs
 801b014:	4613      	movcs	r3, r2
 801b016:	b29b      	uxth	r3, r3
 801b018:	813b      	strh	r3, [r7, #8]
 801b01a:	893b      	ldrh	r3, [r7, #8]
 801b01c:	461a      	mov	r2, r3
 801b01e:	68f9      	ldr	r1, [r7, #12]
 801b020:	6878      	ldr	r0, [r7, #4]
 801b022:	f000 fa5d 	bl	801b4e0 <USBD_CtlSendData>
 801b026:	e009      	b.n	801b03c <USBD_GetDescriptor+0x2cc>
 801b028:	6839      	ldr	r1, [r7, #0]
 801b02a:	6878      	ldr	r0, [r7, #4]
 801b02c:	f000 f9e7 	bl	801b3fe <USBD_CtlError>
 801b030:	e004      	b.n	801b03c <USBD_GetDescriptor+0x2cc>
 801b032:	6878      	ldr	r0, [r7, #4]
 801b034:	f000 faae 	bl	801b594 <USBD_CtlSendStatus>
 801b038:	e000      	b.n	801b03c <USBD_GetDescriptor+0x2cc>
 801b03a:	bf00      	nop
 801b03c:	3710      	adds	r7, #16
 801b03e:	46bd      	mov	sp, r7
 801b040:	bd80      	pop	{r7, pc}
 801b042:	bf00      	nop

0801b044 <USBD_SetAddress>:
 801b044:	b580      	push	{r7, lr}
 801b046:	b084      	sub	sp, #16
 801b048:	af00      	add	r7, sp, #0
 801b04a:	6078      	str	r0, [r7, #4]
 801b04c:	6039      	str	r1, [r7, #0]
 801b04e:	683b      	ldr	r3, [r7, #0]
 801b050:	889b      	ldrh	r3, [r3, #4]
 801b052:	2b00      	cmp	r3, #0
 801b054:	d131      	bne.n	801b0ba <USBD_SetAddress+0x76>
 801b056:	683b      	ldr	r3, [r7, #0]
 801b058:	88db      	ldrh	r3, [r3, #6]
 801b05a:	2b00      	cmp	r3, #0
 801b05c:	d12d      	bne.n	801b0ba <USBD_SetAddress+0x76>
 801b05e:	683b      	ldr	r3, [r7, #0]
 801b060:	885b      	ldrh	r3, [r3, #2]
 801b062:	2b7f      	cmp	r3, #127	; 0x7f
 801b064:	d829      	bhi.n	801b0ba <USBD_SetAddress+0x76>
 801b066:	683b      	ldr	r3, [r7, #0]
 801b068:	885b      	ldrh	r3, [r3, #2]
 801b06a:	b2db      	uxtb	r3, r3
 801b06c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801b070:	73fb      	strb	r3, [r7, #15]
 801b072:	687b      	ldr	r3, [r7, #4]
 801b074:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b078:	b2db      	uxtb	r3, r3
 801b07a:	2b03      	cmp	r3, #3
 801b07c:	d104      	bne.n	801b088 <USBD_SetAddress+0x44>
 801b07e:	6839      	ldr	r1, [r7, #0]
 801b080:	6878      	ldr	r0, [r7, #4]
 801b082:	f000 f9bc 	bl	801b3fe <USBD_CtlError>
 801b086:	e01d      	b.n	801b0c4 <USBD_SetAddress+0x80>
 801b088:	687b      	ldr	r3, [r7, #4]
 801b08a:	7bfa      	ldrb	r2, [r7, #15]
 801b08c:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
 801b090:	7bfb      	ldrb	r3, [r7, #15]
 801b092:	4619      	mov	r1, r3
 801b094:	6878      	ldr	r0, [r7, #4]
 801b096:	f004 f939 	bl	801f30c <USBD_LL_SetUSBAddress>
 801b09a:	6878      	ldr	r0, [r7, #4]
 801b09c:	f000 fa7a 	bl	801b594 <USBD_CtlSendStatus>
 801b0a0:	7bfb      	ldrb	r3, [r7, #15]
 801b0a2:	2b00      	cmp	r3, #0
 801b0a4:	d004      	beq.n	801b0b0 <USBD_SetAddress+0x6c>
 801b0a6:	687b      	ldr	r3, [r7, #4]
 801b0a8:	2202      	movs	r2, #2
 801b0aa:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b0ae:	e009      	b.n	801b0c4 <USBD_SetAddress+0x80>
 801b0b0:	687b      	ldr	r3, [r7, #4]
 801b0b2:	2201      	movs	r2, #1
 801b0b4:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b0b8:	e004      	b.n	801b0c4 <USBD_SetAddress+0x80>
 801b0ba:	6839      	ldr	r1, [r7, #0]
 801b0bc:	6878      	ldr	r0, [r7, #4]
 801b0be:	f000 f99e 	bl	801b3fe <USBD_CtlError>
 801b0c2:	bf00      	nop
 801b0c4:	bf00      	nop
 801b0c6:	3710      	adds	r7, #16
 801b0c8:	46bd      	mov	sp, r7
 801b0ca:	bd80      	pop	{r7, pc}

0801b0cc <USBD_SetConfig>:
 801b0cc:	b580      	push	{r7, lr}
 801b0ce:	b084      	sub	sp, #16
 801b0d0:	af00      	add	r7, sp, #0
 801b0d2:	6078      	str	r0, [r7, #4]
 801b0d4:	6039      	str	r1, [r7, #0]
 801b0d6:	2300      	movs	r3, #0
 801b0d8:	73fb      	strb	r3, [r7, #15]
 801b0da:	683b      	ldr	r3, [r7, #0]
 801b0dc:	885b      	ldrh	r3, [r3, #2]
 801b0de:	b2da      	uxtb	r2, r3
 801b0e0:	4b4e      	ldr	r3, [pc, #312]	; (801b21c <USBD_SetConfig+0x150>)
 801b0e2:	701a      	strb	r2, [r3, #0]
 801b0e4:	4b4d      	ldr	r3, [pc, #308]	; (801b21c <USBD_SetConfig+0x150>)
 801b0e6:	781b      	ldrb	r3, [r3, #0]
 801b0e8:	2b01      	cmp	r3, #1
 801b0ea:	d905      	bls.n	801b0f8 <USBD_SetConfig+0x2c>
 801b0ec:	6839      	ldr	r1, [r7, #0]
 801b0ee:	6878      	ldr	r0, [r7, #4]
 801b0f0:	f000 f985 	bl	801b3fe <USBD_CtlError>
 801b0f4:	2303      	movs	r3, #3
 801b0f6:	e08c      	b.n	801b212 <USBD_SetConfig+0x146>
 801b0f8:	687b      	ldr	r3, [r7, #4]
 801b0fa:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b0fe:	b2db      	uxtb	r3, r3
 801b100:	2b02      	cmp	r3, #2
 801b102:	d002      	beq.n	801b10a <USBD_SetConfig+0x3e>
 801b104:	2b03      	cmp	r3, #3
 801b106:	d029      	beq.n	801b15c <USBD_SetConfig+0x90>
 801b108:	e075      	b.n	801b1f6 <USBD_SetConfig+0x12a>
 801b10a:	4b44      	ldr	r3, [pc, #272]	; (801b21c <USBD_SetConfig+0x150>)
 801b10c:	781b      	ldrb	r3, [r3, #0]
 801b10e:	2b00      	cmp	r3, #0
 801b110:	d020      	beq.n	801b154 <USBD_SetConfig+0x88>
 801b112:	4b42      	ldr	r3, [pc, #264]	; (801b21c <USBD_SetConfig+0x150>)
 801b114:	781b      	ldrb	r3, [r3, #0]
 801b116:	461a      	mov	r2, r3
 801b118:	687b      	ldr	r3, [r7, #4]
 801b11a:	605a      	str	r2, [r3, #4]
 801b11c:	4b3f      	ldr	r3, [pc, #252]	; (801b21c <USBD_SetConfig+0x150>)
 801b11e:	781b      	ldrb	r3, [r3, #0]
 801b120:	4619      	mov	r1, r3
 801b122:	6878      	ldr	r0, [r7, #4]
 801b124:	f7fe ffe7 	bl	801a0f6 <USBD_SetClassConfig>
 801b128:	4603      	mov	r3, r0
 801b12a:	73fb      	strb	r3, [r7, #15]
 801b12c:	7bfb      	ldrb	r3, [r7, #15]
 801b12e:	2b00      	cmp	r3, #0
 801b130:	d008      	beq.n	801b144 <USBD_SetConfig+0x78>
 801b132:	6839      	ldr	r1, [r7, #0]
 801b134:	6878      	ldr	r0, [r7, #4]
 801b136:	f000 f962 	bl	801b3fe <USBD_CtlError>
 801b13a:	687b      	ldr	r3, [r7, #4]
 801b13c:	2202      	movs	r2, #2
 801b13e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b142:	e065      	b.n	801b210 <USBD_SetConfig+0x144>
 801b144:	6878      	ldr	r0, [r7, #4]
 801b146:	f000 fa25 	bl	801b594 <USBD_CtlSendStatus>
 801b14a:	687b      	ldr	r3, [r7, #4]
 801b14c:	2203      	movs	r2, #3
 801b14e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b152:	e05d      	b.n	801b210 <USBD_SetConfig+0x144>
 801b154:	6878      	ldr	r0, [r7, #4]
 801b156:	f000 fa1d 	bl	801b594 <USBD_CtlSendStatus>
 801b15a:	e059      	b.n	801b210 <USBD_SetConfig+0x144>
 801b15c:	4b2f      	ldr	r3, [pc, #188]	; (801b21c <USBD_SetConfig+0x150>)
 801b15e:	781b      	ldrb	r3, [r3, #0]
 801b160:	2b00      	cmp	r3, #0
 801b162:	d112      	bne.n	801b18a <USBD_SetConfig+0xbe>
 801b164:	687b      	ldr	r3, [r7, #4]
 801b166:	2202      	movs	r2, #2
 801b168:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b16c:	4b2b      	ldr	r3, [pc, #172]	; (801b21c <USBD_SetConfig+0x150>)
 801b16e:	781b      	ldrb	r3, [r3, #0]
 801b170:	461a      	mov	r2, r3
 801b172:	687b      	ldr	r3, [r7, #4]
 801b174:	605a      	str	r2, [r3, #4]
 801b176:	4b29      	ldr	r3, [pc, #164]	; (801b21c <USBD_SetConfig+0x150>)
 801b178:	781b      	ldrb	r3, [r3, #0]
 801b17a:	4619      	mov	r1, r3
 801b17c:	6878      	ldr	r0, [r7, #4]
 801b17e:	f7fe ffd6 	bl	801a12e <USBD_ClrClassConfig>
 801b182:	6878      	ldr	r0, [r7, #4]
 801b184:	f000 fa06 	bl	801b594 <USBD_CtlSendStatus>
 801b188:	e042      	b.n	801b210 <USBD_SetConfig+0x144>
 801b18a:	4b24      	ldr	r3, [pc, #144]	; (801b21c <USBD_SetConfig+0x150>)
 801b18c:	781b      	ldrb	r3, [r3, #0]
 801b18e:	461a      	mov	r2, r3
 801b190:	687b      	ldr	r3, [r7, #4]
 801b192:	685b      	ldr	r3, [r3, #4]
 801b194:	429a      	cmp	r2, r3
 801b196:	d02a      	beq.n	801b1ee <USBD_SetConfig+0x122>
 801b198:	687b      	ldr	r3, [r7, #4]
 801b19a:	685b      	ldr	r3, [r3, #4]
 801b19c:	b2db      	uxtb	r3, r3
 801b19e:	4619      	mov	r1, r3
 801b1a0:	6878      	ldr	r0, [r7, #4]
 801b1a2:	f7fe ffc4 	bl	801a12e <USBD_ClrClassConfig>
 801b1a6:	4b1d      	ldr	r3, [pc, #116]	; (801b21c <USBD_SetConfig+0x150>)
 801b1a8:	781b      	ldrb	r3, [r3, #0]
 801b1aa:	461a      	mov	r2, r3
 801b1ac:	687b      	ldr	r3, [r7, #4]
 801b1ae:	605a      	str	r2, [r3, #4]
 801b1b0:	4b1a      	ldr	r3, [pc, #104]	; (801b21c <USBD_SetConfig+0x150>)
 801b1b2:	781b      	ldrb	r3, [r3, #0]
 801b1b4:	4619      	mov	r1, r3
 801b1b6:	6878      	ldr	r0, [r7, #4]
 801b1b8:	f7fe ff9d 	bl	801a0f6 <USBD_SetClassConfig>
 801b1bc:	4603      	mov	r3, r0
 801b1be:	73fb      	strb	r3, [r7, #15]
 801b1c0:	7bfb      	ldrb	r3, [r7, #15]
 801b1c2:	2b00      	cmp	r3, #0
 801b1c4:	d00f      	beq.n	801b1e6 <USBD_SetConfig+0x11a>
 801b1c6:	6839      	ldr	r1, [r7, #0]
 801b1c8:	6878      	ldr	r0, [r7, #4]
 801b1ca:	f000 f918 	bl	801b3fe <USBD_CtlError>
 801b1ce:	687b      	ldr	r3, [r7, #4]
 801b1d0:	685b      	ldr	r3, [r3, #4]
 801b1d2:	b2db      	uxtb	r3, r3
 801b1d4:	4619      	mov	r1, r3
 801b1d6:	6878      	ldr	r0, [r7, #4]
 801b1d8:	f7fe ffa9 	bl	801a12e <USBD_ClrClassConfig>
 801b1dc:	687b      	ldr	r3, [r7, #4]
 801b1de:	2202      	movs	r2, #2
 801b1e0:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 801b1e4:	e014      	b.n	801b210 <USBD_SetConfig+0x144>
 801b1e6:	6878      	ldr	r0, [r7, #4]
 801b1e8:	f000 f9d4 	bl	801b594 <USBD_CtlSendStatus>
 801b1ec:	e010      	b.n	801b210 <USBD_SetConfig+0x144>
 801b1ee:	6878      	ldr	r0, [r7, #4]
 801b1f0:	f000 f9d0 	bl	801b594 <USBD_CtlSendStatus>
 801b1f4:	e00c      	b.n	801b210 <USBD_SetConfig+0x144>
 801b1f6:	6839      	ldr	r1, [r7, #0]
 801b1f8:	6878      	ldr	r0, [r7, #4]
 801b1fa:	f000 f900 	bl	801b3fe <USBD_CtlError>
 801b1fe:	4b07      	ldr	r3, [pc, #28]	; (801b21c <USBD_SetConfig+0x150>)
 801b200:	781b      	ldrb	r3, [r3, #0]
 801b202:	4619      	mov	r1, r3
 801b204:	6878      	ldr	r0, [r7, #4]
 801b206:	f7fe ff92 	bl	801a12e <USBD_ClrClassConfig>
 801b20a:	2303      	movs	r3, #3
 801b20c:	73fb      	strb	r3, [r7, #15]
 801b20e:	bf00      	nop
 801b210:	7bfb      	ldrb	r3, [r7, #15]
 801b212:	4618      	mov	r0, r3
 801b214:	3710      	adds	r7, #16
 801b216:	46bd      	mov	sp, r7
 801b218:	bd80      	pop	{r7, pc}
 801b21a:	bf00      	nop
 801b21c:	200039bc 	.word	0x200039bc

0801b220 <USBD_GetConfig>:
 801b220:	b580      	push	{r7, lr}
 801b222:	b082      	sub	sp, #8
 801b224:	af00      	add	r7, sp, #0
 801b226:	6078      	str	r0, [r7, #4]
 801b228:	6039      	str	r1, [r7, #0]
 801b22a:	683b      	ldr	r3, [r7, #0]
 801b22c:	88db      	ldrh	r3, [r3, #6]
 801b22e:	2b01      	cmp	r3, #1
 801b230:	d004      	beq.n	801b23c <USBD_GetConfig+0x1c>
 801b232:	6839      	ldr	r1, [r7, #0]
 801b234:	6878      	ldr	r0, [r7, #4]
 801b236:	f000 f8e2 	bl	801b3fe <USBD_CtlError>
 801b23a:	e023      	b.n	801b284 <USBD_GetConfig+0x64>
 801b23c:	687b      	ldr	r3, [r7, #4]
 801b23e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b242:	b2db      	uxtb	r3, r3
 801b244:	2b02      	cmp	r3, #2
 801b246:	dc02      	bgt.n	801b24e <USBD_GetConfig+0x2e>
 801b248:	2b00      	cmp	r3, #0
 801b24a:	dc03      	bgt.n	801b254 <USBD_GetConfig+0x34>
 801b24c:	e015      	b.n	801b27a <USBD_GetConfig+0x5a>
 801b24e:	2b03      	cmp	r3, #3
 801b250:	d00b      	beq.n	801b26a <USBD_GetConfig+0x4a>
 801b252:	e012      	b.n	801b27a <USBD_GetConfig+0x5a>
 801b254:	687b      	ldr	r3, [r7, #4]
 801b256:	2200      	movs	r2, #0
 801b258:	609a      	str	r2, [r3, #8]
 801b25a:	687b      	ldr	r3, [r7, #4]
 801b25c:	3308      	adds	r3, #8
 801b25e:	2201      	movs	r2, #1
 801b260:	4619      	mov	r1, r3
 801b262:	6878      	ldr	r0, [r7, #4]
 801b264:	f000 f93c 	bl	801b4e0 <USBD_CtlSendData>
 801b268:	e00c      	b.n	801b284 <USBD_GetConfig+0x64>
 801b26a:	687b      	ldr	r3, [r7, #4]
 801b26c:	3304      	adds	r3, #4
 801b26e:	2201      	movs	r2, #1
 801b270:	4619      	mov	r1, r3
 801b272:	6878      	ldr	r0, [r7, #4]
 801b274:	f000 f934 	bl	801b4e0 <USBD_CtlSendData>
 801b278:	e004      	b.n	801b284 <USBD_GetConfig+0x64>
 801b27a:	6839      	ldr	r1, [r7, #0]
 801b27c:	6878      	ldr	r0, [r7, #4]
 801b27e:	f000 f8be 	bl	801b3fe <USBD_CtlError>
 801b282:	bf00      	nop
 801b284:	bf00      	nop
 801b286:	3708      	adds	r7, #8
 801b288:	46bd      	mov	sp, r7
 801b28a:	bd80      	pop	{r7, pc}

0801b28c <USBD_GetStatus>:
 801b28c:	b580      	push	{r7, lr}
 801b28e:	b082      	sub	sp, #8
 801b290:	af00      	add	r7, sp, #0
 801b292:	6078      	str	r0, [r7, #4]
 801b294:	6039      	str	r1, [r7, #0]
 801b296:	687b      	ldr	r3, [r7, #4]
 801b298:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b29c:	b2db      	uxtb	r3, r3
 801b29e:	3b01      	subs	r3, #1
 801b2a0:	2b02      	cmp	r3, #2
 801b2a2:	d81e      	bhi.n	801b2e2 <USBD_GetStatus+0x56>
 801b2a4:	683b      	ldr	r3, [r7, #0]
 801b2a6:	88db      	ldrh	r3, [r3, #6]
 801b2a8:	2b02      	cmp	r3, #2
 801b2aa:	d004      	beq.n	801b2b6 <USBD_GetStatus+0x2a>
 801b2ac:	6839      	ldr	r1, [r7, #0]
 801b2ae:	6878      	ldr	r0, [r7, #4]
 801b2b0:	f000 f8a5 	bl	801b3fe <USBD_CtlError>
 801b2b4:	e01a      	b.n	801b2ec <USBD_GetStatus+0x60>
 801b2b6:	687b      	ldr	r3, [r7, #4]
 801b2b8:	2201      	movs	r2, #1
 801b2ba:	60da      	str	r2, [r3, #12]
 801b2bc:	687b      	ldr	r3, [r7, #4]
 801b2be:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 801b2c2:	2b00      	cmp	r3, #0
 801b2c4:	d005      	beq.n	801b2d2 <USBD_GetStatus+0x46>
 801b2c6:	687b      	ldr	r3, [r7, #4]
 801b2c8:	68db      	ldr	r3, [r3, #12]
 801b2ca:	f043 0202 	orr.w	r2, r3, #2
 801b2ce:	687b      	ldr	r3, [r7, #4]
 801b2d0:	60da      	str	r2, [r3, #12]
 801b2d2:	687b      	ldr	r3, [r7, #4]
 801b2d4:	330c      	adds	r3, #12
 801b2d6:	2202      	movs	r2, #2
 801b2d8:	4619      	mov	r1, r3
 801b2da:	6878      	ldr	r0, [r7, #4]
 801b2dc:	f000 f900 	bl	801b4e0 <USBD_CtlSendData>
 801b2e0:	e004      	b.n	801b2ec <USBD_GetStatus+0x60>
 801b2e2:	6839      	ldr	r1, [r7, #0]
 801b2e4:	6878      	ldr	r0, [r7, #4]
 801b2e6:	f000 f88a 	bl	801b3fe <USBD_CtlError>
 801b2ea:	bf00      	nop
 801b2ec:	bf00      	nop
 801b2ee:	3708      	adds	r7, #8
 801b2f0:	46bd      	mov	sp, r7
 801b2f2:	bd80      	pop	{r7, pc}

0801b2f4 <USBD_SetFeature>:
 801b2f4:	b580      	push	{r7, lr}
 801b2f6:	b082      	sub	sp, #8
 801b2f8:	af00      	add	r7, sp, #0
 801b2fa:	6078      	str	r0, [r7, #4]
 801b2fc:	6039      	str	r1, [r7, #0]
 801b2fe:	683b      	ldr	r3, [r7, #0]
 801b300:	885b      	ldrh	r3, [r3, #2]
 801b302:	2b01      	cmp	r3, #1
 801b304:	d107      	bne.n	801b316 <USBD_SetFeature+0x22>
 801b306:	687b      	ldr	r3, [r7, #4]
 801b308:	2201      	movs	r2, #1
 801b30a:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801b30e:	6878      	ldr	r0, [r7, #4]
 801b310:	f000 f940 	bl	801b594 <USBD_CtlSendStatus>
 801b314:	e013      	b.n	801b33e <USBD_SetFeature+0x4a>
 801b316:	683b      	ldr	r3, [r7, #0]
 801b318:	885b      	ldrh	r3, [r3, #2]
 801b31a:	2b02      	cmp	r3, #2
 801b31c:	d10b      	bne.n	801b336 <USBD_SetFeature+0x42>
 801b31e:	683b      	ldr	r3, [r7, #0]
 801b320:	889b      	ldrh	r3, [r3, #4]
 801b322:	0a1b      	lsrs	r3, r3, #8
 801b324:	b29b      	uxth	r3, r3
 801b326:	b2da      	uxtb	r2, r3
 801b328:	687b      	ldr	r3, [r7, #4]
 801b32a:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 801b32e:	6878      	ldr	r0, [r7, #4]
 801b330:	f000 f930 	bl	801b594 <USBD_CtlSendStatus>
 801b334:	e003      	b.n	801b33e <USBD_SetFeature+0x4a>
 801b336:	6839      	ldr	r1, [r7, #0]
 801b338:	6878      	ldr	r0, [r7, #4]
 801b33a:	f000 f860 	bl	801b3fe <USBD_CtlError>
 801b33e:	bf00      	nop
 801b340:	3708      	adds	r7, #8
 801b342:	46bd      	mov	sp, r7
 801b344:	bd80      	pop	{r7, pc}

0801b346 <USBD_ClrFeature>:
 801b346:	b580      	push	{r7, lr}
 801b348:	b082      	sub	sp, #8
 801b34a:	af00      	add	r7, sp, #0
 801b34c:	6078      	str	r0, [r7, #4]
 801b34e:	6039      	str	r1, [r7, #0]
 801b350:	687b      	ldr	r3, [r7, #4]
 801b352:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 801b356:	b2db      	uxtb	r3, r3
 801b358:	3b01      	subs	r3, #1
 801b35a:	2b02      	cmp	r3, #2
 801b35c:	d80b      	bhi.n	801b376 <USBD_ClrFeature+0x30>
 801b35e:	683b      	ldr	r3, [r7, #0]
 801b360:	885b      	ldrh	r3, [r3, #2]
 801b362:	2b01      	cmp	r3, #1
 801b364:	d10c      	bne.n	801b380 <USBD_ClrFeature+0x3a>
 801b366:	687b      	ldr	r3, [r7, #4]
 801b368:	2200      	movs	r2, #0
 801b36a:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 801b36e:	6878      	ldr	r0, [r7, #4]
 801b370:	f000 f910 	bl	801b594 <USBD_CtlSendStatus>
 801b374:	e004      	b.n	801b380 <USBD_ClrFeature+0x3a>
 801b376:	6839      	ldr	r1, [r7, #0]
 801b378:	6878      	ldr	r0, [r7, #4]
 801b37a:	f000 f840 	bl	801b3fe <USBD_CtlError>
 801b37e:	e000      	b.n	801b382 <USBD_ClrFeature+0x3c>
 801b380:	bf00      	nop
 801b382:	bf00      	nop
 801b384:	3708      	adds	r7, #8
 801b386:	46bd      	mov	sp, r7
 801b388:	bd80      	pop	{r7, pc}

0801b38a <USBD_ParseSetupRequest>:
 801b38a:	b580      	push	{r7, lr}
 801b38c:	b084      	sub	sp, #16
 801b38e:	af00      	add	r7, sp, #0
 801b390:	6078      	str	r0, [r7, #4]
 801b392:	6039      	str	r1, [r7, #0]
 801b394:	683b      	ldr	r3, [r7, #0]
 801b396:	60fb      	str	r3, [r7, #12]
 801b398:	68fb      	ldr	r3, [r7, #12]
 801b39a:	781a      	ldrb	r2, [r3, #0]
 801b39c:	687b      	ldr	r3, [r7, #4]
 801b39e:	701a      	strb	r2, [r3, #0]
 801b3a0:	68fb      	ldr	r3, [r7, #12]
 801b3a2:	3301      	adds	r3, #1
 801b3a4:	60fb      	str	r3, [r7, #12]
 801b3a6:	68fb      	ldr	r3, [r7, #12]
 801b3a8:	781a      	ldrb	r2, [r3, #0]
 801b3aa:	687b      	ldr	r3, [r7, #4]
 801b3ac:	705a      	strb	r2, [r3, #1]
 801b3ae:	68fb      	ldr	r3, [r7, #12]
 801b3b0:	3301      	adds	r3, #1
 801b3b2:	60fb      	str	r3, [r7, #12]
 801b3b4:	68f8      	ldr	r0, [r7, #12]
 801b3b6:	f7ff fa41 	bl	801a83c <SWAPBYTE>
 801b3ba:	4603      	mov	r3, r0
 801b3bc:	461a      	mov	r2, r3
 801b3be:	687b      	ldr	r3, [r7, #4]
 801b3c0:	805a      	strh	r2, [r3, #2]
 801b3c2:	68fb      	ldr	r3, [r7, #12]
 801b3c4:	3301      	adds	r3, #1
 801b3c6:	60fb      	str	r3, [r7, #12]
 801b3c8:	68fb      	ldr	r3, [r7, #12]
 801b3ca:	3301      	adds	r3, #1
 801b3cc:	60fb      	str	r3, [r7, #12]
 801b3ce:	68f8      	ldr	r0, [r7, #12]
 801b3d0:	f7ff fa34 	bl	801a83c <SWAPBYTE>
 801b3d4:	4603      	mov	r3, r0
 801b3d6:	461a      	mov	r2, r3
 801b3d8:	687b      	ldr	r3, [r7, #4]
 801b3da:	809a      	strh	r2, [r3, #4]
 801b3dc:	68fb      	ldr	r3, [r7, #12]
 801b3de:	3301      	adds	r3, #1
 801b3e0:	60fb      	str	r3, [r7, #12]
 801b3e2:	68fb      	ldr	r3, [r7, #12]
 801b3e4:	3301      	adds	r3, #1
 801b3e6:	60fb      	str	r3, [r7, #12]
 801b3e8:	68f8      	ldr	r0, [r7, #12]
 801b3ea:	f7ff fa27 	bl	801a83c <SWAPBYTE>
 801b3ee:	4603      	mov	r3, r0
 801b3f0:	461a      	mov	r2, r3
 801b3f2:	687b      	ldr	r3, [r7, #4]
 801b3f4:	80da      	strh	r2, [r3, #6]
 801b3f6:	bf00      	nop
 801b3f8:	3710      	adds	r7, #16
 801b3fa:	46bd      	mov	sp, r7
 801b3fc:	bd80      	pop	{r7, pc}

0801b3fe <USBD_CtlError>:
 801b3fe:	b580      	push	{r7, lr}
 801b400:	b082      	sub	sp, #8
 801b402:	af00      	add	r7, sp, #0
 801b404:	6078      	str	r0, [r7, #4]
 801b406:	6039      	str	r1, [r7, #0]
 801b408:	2180      	movs	r1, #128	; 0x80
 801b40a:	6878      	ldr	r0, [r7, #4]
 801b40c:	f003 ff14 	bl	801f238 <USBD_LL_StallEP>
 801b410:	2100      	movs	r1, #0
 801b412:	6878      	ldr	r0, [r7, #4]
 801b414:	f003 ff10 	bl	801f238 <USBD_LL_StallEP>
 801b418:	bf00      	nop
 801b41a:	3708      	adds	r7, #8
 801b41c:	46bd      	mov	sp, r7
 801b41e:	bd80      	pop	{r7, pc}

0801b420 <USBD_GetString>:
 801b420:	b580      	push	{r7, lr}
 801b422:	b086      	sub	sp, #24
 801b424:	af00      	add	r7, sp, #0
 801b426:	60f8      	str	r0, [r7, #12]
 801b428:	60b9      	str	r1, [r7, #8]
 801b42a:	607a      	str	r2, [r7, #4]
 801b42c:	2300      	movs	r3, #0
 801b42e:	75fb      	strb	r3, [r7, #23]
 801b430:	68fb      	ldr	r3, [r7, #12]
 801b432:	2b00      	cmp	r3, #0
 801b434:	d036      	beq.n	801b4a4 <USBD_GetString+0x84>
 801b436:	68fb      	ldr	r3, [r7, #12]
 801b438:	613b      	str	r3, [r7, #16]
 801b43a:	6938      	ldr	r0, [r7, #16]
 801b43c:	f000 f836 	bl	801b4ac <USBD_GetLen>
 801b440:	4603      	mov	r3, r0
 801b442:	3301      	adds	r3, #1
 801b444:	b29b      	uxth	r3, r3
 801b446:	005b      	lsls	r3, r3, #1
 801b448:	b29a      	uxth	r2, r3
 801b44a:	687b      	ldr	r3, [r7, #4]
 801b44c:	801a      	strh	r2, [r3, #0]
 801b44e:	7dfb      	ldrb	r3, [r7, #23]
 801b450:	68ba      	ldr	r2, [r7, #8]
 801b452:	4413      	add	r3, r2
 801b454:	687a      	ldr	r2, [r7, #4]
 801b456:	7812      	ldrb	r2, [r2, #0]
 801b458:	701a      	strb	r2, [r3, #0]
 801b45a:	7dfb      	ldrb	r3, [r7, #23]
 801b45c:	3301      	adds	r3, #1
 801b45e:	75fb      	strb	r3, [r7, #23]
 801b460:	7dfb      	ldrb	r3, [r7, #23]
 801b462:	68ba      	ldr	r2, [r7, #8]
 801b464:	4413      	add	r3, r2
 801b466:	2203      	movs	r2, #3
 801b468:	701a      	strb	r2, [r3, #0]
 801b46a:	7dfb      	ldrb	r3, [r7, #23]
 801b46c:	3301      	adds	r3, #1
 801b46e:	75fb      	strb	r3, [r7, #23]
 801b470:	e013      	b.n	801b49a <USBD_GetString+0x7a>
 801b472:	7dfb      	ldrb	r3, [r7, #23]
 801b474:	68ba      	ldr	r2, [r7, #8]
 801b476:	4413      	add	r3, r2
 801b478:	693a      	ldr	r2, [r7, #16]
 801b47a:	7812      	ldrb	r2, [r2, #0]
 801b47c:	701a      	strb	r2, [r3, #0]
 801b47e:	693b      	ldr	r3, [r7, #16]
 801b480:	3301      	adds	r3, #1
 801b482:	613b      	str	r3, [r7, #16]
 801b484:	7dfb      	ldrb	r3, [r7, #23]
 801b486:	3301      	adds	r3, #1
 801b488:	75fb      	strb	r3, [r7, #23]
 801b48a:	7dfb      	ldrb	r3, [r7, #23]
 801b48c:	68ba      	ldr	r2, [r7, #8]
 801b48e:	4413      	add	r3, r2
 801b490:	2200      	movs	r2, #0
 801b492:	701a      	strb	r2, [r3, #0]
 801b494:	7dfb      	ldrb	r3, [r7, #23]
 801b496:	3301      	adds	r3, #1
 801b498:	75fb      	strb	r3, [r7, #23]
 801b49a:	693b      	ldr	r3, [r7, #16]
 801b49c:	781b      	ldrb	r3, [r3, #0]
 801b49e:	2b00      	cmp	r3, #0
 801b4a0:	d1e7      	bne.n	801b472 <USBD_GetString+0x52>
 801b4a2:	e000      	b.n	801b4a6 <USBD_GetString+0x86>
 801b4a4:	bf00      	nop
 801b4a6:	3718      	adds	r7, #24
 801b4a8:	46bd      	mov	sp, r7
 801b4aa:	bd80      	pop	{r7, pc}

0801b4ac <USBD_GetLen>:
 801b4ac:	b480      	push	{r7}
 801b4ae:	b085      	sub	sp, #20
 801b4b0:	af00      	add	r7, sp, #0
 801b4b2:	6078      	str	r0, [r7, #4]
 801b4b4:	2300      	movs	r3, #0
 801b4b6:	73fb      	strb	r3, [r7, #15]
 801b4b8:	687b      	ldr	r3, [r7, #4]
 801b4ba:	60bb      	str	r3, [r7, #8]
 801b4bc:	e005      	b.n	801b4ca <USBD_GetLen+0x1e>
 801b4be:	7bfb      	ldrb	r3, [r7, #15]
 801b4c0:	3301      	adds	r3, #1
 801b4c2:	73fb      	strb	r3, [r7, #15]
 801b4c4:	68bb      	ldr	r3, [r7, #8]
 801b4c6:	3301      	adds	r3, #1
 801b4c8:	60bb      	str	r3, [r7, #8]
 801b4ca:	68bb      	ldr	r3, [r7, #8]
 801b4cc:	781b      	ldrb	r3, [r3, #0]
 801b4ce:	2b00      	cmp	r3, #0
 801b4d0:	d1f5      	bne.n	801b4be <USBD_GetLen+0x12>
 801b4d2:	7bfb      	ldrb	r3, [r7, #15]
 801b4d4:	4618      	mov	r0, r3
 801b4d6:	3714      	adds	r7, #20
 801b4d8:	46bd      	mov	sp, r7
 801b4da:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b4de:	4770      	bx	lr

0801b4e0 <USBD_CtlSendData>:
 801b4e0:	b580      	push	{r7, lr}
 801b4e2:	b084      	sub	sp, #16
 801b4e4:	af00      	add	r7, sp, #0
 801b4e6:	60f8      	str	r0, [r7, #12]
 801b4e8:	60b9      	str	r1, [r7, #8]
 801b4ea:	607a      	str	r2, [r7, #4]
 801b4ec:	68fb      	ldr	r3, [r7, #12]
 801b4ee:	2202      	movs	r2, #2
 801b4f0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b4f4:	68fb      	ldr	r3, [r7, #12]
 801b4f6:	687a      	ldr	r2, [r7, #4]
 801b4f8:	619a      	str	r2, [r3, #24]
 801b4fa:	68fb      	ldr	r3, [r7, #12]
 801b4fc:	687a      	ldr	r2, [r7, #4]
 801b4fe:	61da      	str	r2, [r3, #28]
 801b500:	687b      	ldr	r3, [r7, #4]
 801b502:	68ba      	ldr	r2, [r7, #8]
 801b504:	2100      	movs	r1, #0
 801b506:	68f8      	ldr	r0, [r7, #12]
 801b508:	f003 ff1f 	bl	801f34a <USBD_LL_Transmit>
 801b50c:	2300      	movs	r3, #0
 801b50e:	4618      	mov	r0, r3
 801b510:	3710      	adds	r7, #16
 801b512:	46bd      	mov	sp, r7
 801b514:	bd80      	pop	{r7, pc}

0801b516 <USBD_CtlContinueSendData>:
 801b516:	b580      	push	{r7, lr}
 801b518:	b084      	sub	sp, #16
 801b51a:	af00      	add	r7, sp, #0
 801b51c:	60f8      	str	r0, [r7, #12]
 801b51e:	60b9      	str	r1, [r7, #8]
 801b520:	607a      	str	r2, [r7, #4]
 801b522:	687b      	ldr	r3, [r7, #4]
 801b524:	68ba      	ldr	r2, [r7, #8]
 801b526:	2100      	movs	r1, #0
 801b528:	68f8      	ldr	r0, [r7, #12]
 801b52a:	f003 ff0e 	bl	801f34a <USBD_LL_Transmit>
 801b52e:	2300      	movs	r3, #0
 801b530:	4618      	mov	r0, r3
 801b532:	3710      	adds	r7, #16
 801b534:	46bd      	mov	sp, r7
 801b536:	bd80      	pop	{r7, pc}

0801b538 <USBD_CtlPrepareRx>:
 801b538:	b580      	push	{r7, lr}
 801b53a:	b084      	sub	sp, #16
 801b53c:	af00      	add	r7, sp, #0
 801b53e:	60f8      	str	r0, [r7, #12]
 801b540:	60b9      	str	r1, [r7, #8]
 801b542:	607a      	str	r2, [r7, #4]
 801b544:	68fb      	ldr	r3, [r7, #12]
 801b546:	2203      	movs	r2, #3
 801b548:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b54c:	68fb      	ldr	r3, [r7, #12]
 801b54e:	687a      	ldr	r2, [r7, #4]
 801b550:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
 801b554:	68fb      	ldr	r3, [r7, #12]
 801b556:	687a      	ldr	r2, [r7, #4]
 801b558:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
 801b55c:	687b      	ldr	r3, [r7, #4]
 801b55e:	68ba      	ldr	r2, [r7, #8]
 801b560:	2100      	movs	r1, #0
 801b562:	68f8      	ldr	r0, [r7, #12]
 801b564:	f003 ff12 	bl	801f38c <USBD_LL_PrepareReceive>
 801b568:	2300      	movs	r3, #0
 801b56a:	4618      	mov	r0, r3
 801b56c:	3710      	adds	r7, #16
 801b56e:	46bd      	mov	sp, r7
 801b570:	bd80      	pop	{r7, pc}

0801b572 <USBD_CtlContinueRx>:
 801b572:	b580      	push	{r7, lr}
 801b574:	b084      	sub	sp, #16
 801b576:	af00      	add	r7, sp, #0
 801b578:	60f8      	str	r0, [r7, #12]
 801b57a:	60b9      	str	r1, [r7, #8]
 801b57c:	607a      	str	r2, [r7, #4]
 801b57e:	687b      	ldr	r3, [r7, #4]
 801b580:	68ba      	ldr	r2, [r7, #8]
 801b582:	2100      	movs	r1, #0
 801b584:	68f8      	ldr	r0, [r7, #12]
 801b586:	f003 ff01 	bl	801f38c <USBD_LL_PrepareReceive>
 801b58a:	2300      	movs	r3, #0
 801b58c:	4618      	mov	r0, r3
 801b58e:	3710      	adds	r7, #16
 801b590:	46bd      	mov	sp, r7
 801b592:	bd80      	pop	{r7, pc}

0801b594 <USBD_CtlSendStatus>:
 801b594:	b580      	push	{r7, lr}
 801b596:	b082      	sub	sp, #8
 801b598:	af00      	add	r7, sp, #0
 801b59a:	6078      	str	r0, [r7, #4]
 801b59c:	687b      	ldr	r3, [r7, #4]
 801b59e:	2204      	movs	r2, #4
 801b5a0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b5a4:	2300      	movs	r3, #0
 801b5a6:	2200      	movs	r2, #0
 801b5a8:	2100      	movs	r1, #0
 801b5aa:	6878      	ldr	r0, [r7, #4]
 801b5ac:	f003 fecd 	bl	801f34a <USBD_LL_Transmit>
 801b5b0:	2300      	movs	r3, #0
 801b5b2:	4618      	mov	r0, r3
 801b5b4:	3708      	adds	r7, #8
 801b5b6:	46bd      	mov	sp, r7
 801b5b8:	bd80      	pop	{r7, pc}

0801b5ba <USBD_CtlReceiveStatus>:
 801b5ba:	b580      	push	{r7, lr}
 801b5bc:	b082      	sub	sp, #8
 801b5be:	af00      	add	r7, sp, #0
 801b5c0:	6078      	str	r0, [r7, #4]
 801b5c2:	687b      	ldr	r3, [r7, #4]
 801b5c4:	2205      	movs	r2, #5
 801b5c6:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 801b5ca:	2300      	movs	r3, #0
 801b5cc:	2200      	movs	r2, #0
 801b5ce:	2100      	movs	r1, #0
 801b5d0:	6878      	ldr	r0, [r7, #4]
 801b5d2:	f003 fedb 	bl	801f38c <USBD_LL_PrepareReceive>
 801b5d6:	2300      	movs	r3, #0
 801b5d8:	4618      	mov	r0, r3
 801b5da:	3708      	adds	r7, #8
 801b5dc:	46bd      	mov	sp, r7
 801b5de:	bd80      	pop	{r7, pc}

0801b5e0 <makeFreeRtosPriority>:
 801b5e0:	b480      	push	{r7}
 801b5e2:	b085      	sub	sp, #20
 801b5e4:	af00      	add	r7, sp, #0
 801b5e6:	4603      	mov	r3, r0
 801b5e8:	80fb      	strh	r3, [r7, #6]
 801b5ea:	2300      	movs	r3, #0
 801b5ec:	60fb      	str	r3, [r7, #12]
 801b5ee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801b5f2:	2b84      	cmp	r3, #132	; 0x84
 801b5f4:	d005      	beq.n	801b602 <makeFreeRtosPriority+0x22>
 801b5f6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 801b5fa:	68fb      	ldr	r3, [r7, #12]
 801b5fc:	4413      	add	r3, r2
 801b5fe:	3303      	adds	r3, #3
 801b600:	60fb      	str	r3, [r7, #12]
 801b602:	68fb      	ldr	r3, [r7, #12]
 801b604:	4618      	mov	r0, r3
 801b606:	3714      	adds	r7, #20
 801b608:	46bd      	mov	sp, r7
 801b60a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b60e:	4770      	bx	lr

0801b610 <osKernelStart>:
 801b610:	b580      	push	{r7, lr}
 801b612:	af00      	add	r7, sp, #0
 801b614:	f001 fb24 	bl	801cc60 <vTaskStartScheduler>
 801b618:	2300      	movs	r3, #0
 801b61a:	4618      	mov	r0, r3
 801b61c:	bd80      	pop	{r7, pc}

0801b61e <osThreadCreate>:
 801b61e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b620:	b089      	sub	sp, #36	; 0x24
 801b622:	af04      	add	r7, sp, #16
 801b624:	6078      	str	r0, [r7, #4]
 801b626:	6039      	str	r1, [r7, #0]
 801b628:	687b      	ldr	r3, [r7, #4]
 801b62a:	695b      	ldr	r3, [r3, #20]
 801b62c:	2b00      	cmp	r3, #0
 801b62e:	d020      	beq.n	801b672 <osThreadCreate+0x54>
 801b630:	687b      	ldr	r3, [r7, #4]
 801b632:	699b      	ldr	r3, [r3, #24]
 801b634:	2b00      	cmp	r3, #0
 801b636:	d01c      	beq.n	801b672 <osThreadCreate+0x54>
 801b638:	687b      	ldr	r3, [r7, #4]
 801b63a:	685c      	ldr	r4, [r3, #4]
 801b63c:	687b      	ldr	r3, [r7, #4]
 801b63e:	681d      	ldr	r5, [r3, #0]
 801b640:	687b      	ldr	r3, [r7, #4]
 801b642:	691e      	ldr	r6, [r3, #16]
 801b644:	687b      	ldr	r3, [r7, #4]
 801b646:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b64a:	4618      	mov	r0, r3
 801b64c:	f7ff ffc8 	bl	801b5e0 <makeFreeRtosPriority>
 801b650:	4601      	mov	r1, r0
 801b652:	687b      	ldr	r3, [r7, #4]
 801b654:	695b      	ldr	r3, [r3, #20]
 801b656:	687a      	ldr	r2, [r7, #4]
 801b658:	6992      	ldr	r2, [r2, #24]
 801b65a:	9202      	str	r2, [sp, #8]
 801b65c:	9301      	str	r3, [sp, #4]
 801b65e:	9100      	str	r1, [sp, #0]
 801b660:	683b      	ldr	r3, [r7, #0]
 801b662:	4632      	mov	r2, r6
 801b664:	4629      	mov	r1, r5
 801b666:	4620      	mov	r0, r4
 801b668:	f001 f88e 	bl	801c788 <xTaskCreateStatic>
 801b66c:	4603      	mov	r3, r0
 801b66e:	60fb      	str	r3, [r7, #12]
 801b670:	e01c      	b.n	801b6ac <osThreadCreate+0x8e>
 801b672:	687b      	ldr	r3, [r7, #4]
 801b674:	685c      	ldr	r4, [r3, #4]
 801b676:	687b      	ldr	r3, [r7, #4]
 801b678:	681d      	ldr	r5, [r3, #0]
 801b67a:	687b      	ldr	r3, [r7, #4]
 801b67c:	691b      	ldr	r3, [r3, #16]
 801b67e:	b29e      	uxth	r6, r3
 801b680:	687b      	ldr	r3, [r7, #4]
 801b682:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b686:	4618      	mov	r0, r3
 801b688:	f7ff ffaa 	bl	801b5e0 <makeFreeRtosPriority>
 801b68c:	4602      	mov	r2, r0
 801b68e:	f107 030c 	add.w	r3, r7, #12
 801b692:	9301      	str	r3, [sp, #4]
 801b694:	9200      	str	r2, [sp, #0]
 801b696:	683b      	ldr	r3, [r7, #0]
 801b698:	4632      	mov	r2, r6
 801b69a:	4629      	mov	r1, r5
 801b69c:	4620      	mov	r0, r4
 801b69e:	f001 f8d0 	bl	801c842 <xTaskCreate>
 801b6a2:	4603      	mov	r3, r0
 801b6a4:	2b01      	cmp	r3, #1
 801b6a6:	d001      	beq.n	801b6ac <osThreadCreate+0x8e>
 801b6a8:	2300      	movs	r3, #0
 801b6aa:	e000      	b.n	801b6ae <osThreadCreate+0x90>
 801b6ac:	68fb      	ldr	r3, [r7, #12]
 801b6ae:	4618      	mov	r0, r3
 801b6b0:	3714      	adds	r7, #20
 801b6b2:	46bd      	mov	sp, r7
 801b6b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b6b6 <osDelay>:
 801b6b6:	b580      	push	{r7, lr}
 801b6b8:	b084      	sub	sp, #16
 801b6ba:	af00      	add	r7, sp, #0
 801b6bc:	6078      	str	r0, [r7, #4]
 801b6be:	687b      	ldr	r3, [r7, #4]
 801b6c0:	60fb      	str	r3, [r7, #12]
 801b6c2:	68fb      	ldr	r3, [r7, #12]
 801b6c4:	2b00      	cmp	r3, #0
 801b6c6:	d001      	beq.n	801b6cc <osDelay+0x16>
 801b6c8:	68fb      	ldr	r3, [r7, #12]
 801b6ca:	e000      	b.n	801b6ce <osDelay+0x18>
 801b6cc:	2301      	movs	r3, #1
 801b6ce:	4618      	mov	r0, r3
 801b6d0:	f001 fa92 	bl	801cbf8 <vTaskDelay>
 801b6d4:	2300      	movs	r3, #0
 801b6d6:	4618      	mov	r0, r3
 801b6d8:	3710      	adds	r7, #16
 801b6da:	46bd      	mov	sp, r7
 801b6dc:	bd80      	pop	{r7, pc}

0801b6de <xEventGroupCreate>:
 801b6de:	b580      	push	{r7, lr}
 801b6e0:	b082      	sub	sp, #8
 801b6e2:	af00      	add	r7, sp, #0
 801b6e4:	2020      	movs	r0, #32
 801b6e6:	f002 ff97 	bl	801e618 <pvPortMalloc>
 801b6ea:	6078      	str	r0, [r7, #4]
 801b6ec:	687b      	ldr	r3, [r7, #4]
 801b6ee:	2b00      	cmp	r3, #0
 801b6f0:	d00a      	beq.n	801b708 <xEventGroupCreate+0x2a>
 801b6f2:	687b      	ldr	r3, [r7, #4]
 801b6f4:	2200      	movs	r2, #0
 801b6f6:	601a      	str	r2, [r3, #0]
 801b6f8:	687b      	ldr	r3, [r7, #4]
 801b6fa:	3304      	adds	r3, #4
 801b6fc:	4618      	mov	r0, r3
 801b6fe:	f000 f9dd 	bl	801babc <vListInitialise>
 801b702:	687b      	ldr	r3, [r7, #4]
 801b704:	2200      	movs	r2, #0
 801b706:	771a      	strb	r2, [r3, #28]
 801b708:	687b      	ldr	r3, [r7, #4]
 801b70a:	4618      	mov	r0, r3
 801b70c:	3708      	adds	r7, #8
 801b70e:	46bd      	mov	sp, r7
 801b710:	bd80      	pop	{r7, pc}
	...

0801b714 <xEventGroupWaitBits>:
 801b714:	b580      	push	{r7, lr}
 801b716:	b090      	sub	sp, #64	; 0x40
 801b718:	af00      	add	r7, sp, #0
 801b71a:	60f8      	str	r0, [r7, #12]
 801b71c:	60b9      	str	r1, [r7, #8]
 801b71e:	607a      	str	r2, [r7, #4]
 801b720:	603b      	str	r3, [r7, #0]
 801b722:	68fb      	ldr	r3, [r7, #12]
 801b724:	637b      	str	r3, [r7, #52]	; 0x34
 801b726:	2300      	movs	r3, #0
 801b728:	63bb      	str	r3, [r7, #56]	; 0x38
 801b72a:	2300      	movs	r3, #0
 801b72c:	633b      	str	r3, [r7, #48]	; 0x30
 801b72e:	68fb      	ldr	r3, [r7, #12]
 801b730:	2b00      	cmp	r3, #0
 801b732:	d10a      	bne.n	801b74a <xEventGroupWaitBits+0x36>
 801b734:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b738:	f383 8811 	msr	BASEPRI, r3
 801b73c:	f3bf 8f6f 	isb	sy
 801b740:	f3bf 8f4f 	dsb	sy
 801b744:	623b      	str	r3, [r7, #32]
 801b746:	bf00      	nop
 801b748:	e7fe      	b.n	801b748 <xEventGroupWaitBits+0x34>
 801b74a:	68bb      	ldr	r3, [r7, #8]
 801b74c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b750:	2b00      	cmp	r3, #0
 801b752:	d00a      	beq.n	801b76a <xEventGroupWaitBits+0x56>
 801b754:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b758:	f383 8811 	msr	BASEPRI, r3
 801b75c:	f3bf 8f6f 	isb	sy
 801b760:	f3bf 8f4f 	dsb	sy
 801b764:	61fb      	str	r3, [r7, #28]
 801b766:	bf00      	nop
 801b768:	e7fe      	b.n	801b768 <xEventGroupWaitBits+0x54>
 801b76a:	68bb      	ldr	r3, [r7, #8]
 801b76c:	2b00      	cmp	r3, #0
 801b76e:	d10a      	bne.n	801b786 <xEventGroupWaitBits+0x72>
 801b770:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b774:	f383 8811 	msr	BASEPRI, r3
 801b778:	f3bf 8f6f 	isb	sy
 801b77c:	f3bf 8f4f 	dsb	sy
 801b780:	61bb      	str	r3, [r7, #24]
 801b782:	bf00      	nop
 801b784:	e7fe      	b.n	801b784 <xEventGroupWaitBits+0x70>
 801b786:	f001 ff8b 	bl	801d6a0 <xTaskGetSchedulerState>
 801b78a:	4603      	mov	r3, r0
 801b78c:	2b00      	cmp	r3, #0
 801b78e:	d102      	bne.n	801b796 <xEventGroupWaitBits+0x82>
 801b790:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b792:	2b00      	cmp	r3, #0
 801b794:	d101      	bne.n	801b79a <xEventGroupWaitBits+0x86>
 801b796:	2301      	movs	r3, #1
 801b798:	e000      	b.n	801b79c <xEventGroupWaitBits+0x88>
 801b79a:	2300      	movs	r3, #0
 801b79c:	2b00      	cmp	r3, #0
 801b79e:	d10a      	bne.n	801b7b6 <xEventGroupWaitBits+0xa2>
 801b7a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b7a4:	f383 8811 	msr	BASEPRI, r3
 801b7a8:	f3bf 8f6f 	isb	sy
 801b7ac:	f3bf 8f4f 	dsb	sy
 801b7b0:	617b      	str	r3, [r7, #20]
 801b7b2:	bf00      	nop
 801b7b4:	e7fe      	b.n	801b7b4 <xEventGroupWaitBits+0xa0>
 801b7b6:	f001 fac5 	bl	801cd44 <vTaskSuspendAll>
 801b7ba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b7bc:	681b      	ldr	r3, [r3, #0]
 801b7be:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b7c0:	683a      	ldr	r2, [r7, #0]
 801b7c2:	68b9      	ldr	r1, [r7, #8]
 801b7c4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 801b7c6:	f000 f943 	bl	801ba50 <prvTestWaitCondition>
 801b7ca:	62b8      	str	r0, [r7, #40]	; 0x28
 801b7cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b7ce:	2b00      	cmp	r3, #0
 801b7d0:	d00e      	beq.n	801b7f0 <xEventGroupWaitBits+0xdc>
 801b7d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b7d4:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b7d6:	2300      	movs	r3, #0
 801b7d8:	64bb      	str	r3, [r7, #72]	; 0x48
 801b7da:	687b      	ldr	r3, [r7, #4]
 801b7dc:	2b00      	cmp	r3, #0
 801b7de:	d028      	beq.n	801b832 <xEventGroupWaitBits+0x11e>
 801b7e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b7e2:	681a      	ldr	r2, [r3, #0]
 801b7e4:	68bb      	ldr	r3, [r7, #8]
 801b7e6:	43db      	mvns	r3, r3
 801b7e8:	401a      	ands	r2, r3
 801b7ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b7ec:	601a      	str	r2, [r3, #0]
 801b7ee:	e020      	b.n	801b832 <xEventGroupWaitBits+0x11e>
 801b7f0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b7f2:	2b00      	cmp	r3, #0
 801b7f4:	d104      	bne.n	801b800 <xEventGroupWaitBits+0xec>
 801b7f6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b7f8:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b7fa:	2301      	movs	r3, #1
 801b7fc:	633b      	str	r3, [r7, #48]	; 0x30
 801b7fe:	e018      	b.n	801b832 <xEventGroupWaitBits+0x11e>
 801b800:	687b      	ldr	r3, [r7, #4]
 801b802:	2b00      	cmp	r3, #0
 801b804:	d003      	beq.n	801b80e <xEventGroupWaitBits+0xfa>
 801b806:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b808:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801b80c:	63bb      	str	r3, [r7, #56]	; 0x38
 801b80e:	683b      	ldr	r3, [r7, #0]
 801b810:	2b00      	cmp	r3, #0
 801b812:	d003      	beq.n	801b81c <xEventGroupWaitBits+0x108>
 801b814:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b816:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 801b81a:	63bb      	str	r3, [r7, #56]	; 0x38
 801b81c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b81e:	1d18      	adds	r0, r3, #4
 801b820:	68ba      	ldr	r2, [r7, #8]
 801b822:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b824:	4313      	orrs	r3, r2
 801b826:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801b828:	4619      	mov	r1, r3
 801b82a:	f001 fcaf 	bl	801d18c <vTaskPlaceOnUnorderedEventList>
 801b82e:	2300      	movs	r3, #0
 801b830:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b832:	f001 fa95 	bl	801cd60 <xTaskResumeAll>
 801b836:	6278      	str	r0, [r7, #36]	; 0x24
 801b838:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801b83a:	2b00      	cmp	r3, #0
 801b83c:	d031      	beq.n	801b8a2 <xEventGroupWaitBits+0x18e>
 801b83e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b840:	2b00      	cmp	r3, #0
 801b842:	d107      	bne.n	801b854 <xEventGroupWaitBits+0x140>
 801b844:	4b19      	ldr	r3, [pc, #100]	; (801b8ac <xEventGroupWaitBits+0x198>)
 801b846:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801b84a:	601a      	str	r2, [r3, #0]
 801b84c:	f3bf 8f4f 	dsb	sy
 801b850:	f3bf 8f6f 	isb	sy
 801b854:	f001 ffc8 	bl	801d7e8 <uxTaskResetEventItemValue>
 801b858:	63f8      	str	r0, [r7, #60]	; 0x3c
 801b85a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b85c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801b860:	2b00      	cmp	r3, #0
 801b862:	d11a      	bne.n	801b89a <xEventGroupWaitBits+0x186>
 801b864:	f002 fdb6 	bl	801e3d4 <vPortEnterCritical>
 801b868:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b86a:	681b      	ldr	r3, [r3, #0]
 801b86c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b86e:	683a      	ldr	r2, [r7, #0]
 801b870:	68b9      	ldr	r1, [r7, #8]
 801b872:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 801b874:	f000 f8ec 	bl	801ba50 <prvTestWaitCondition>
 801b878:	4603      	mov	r3, r0
 801b87a:	2b00      	cmp	r3, #0
 801b87c:	d009      	beq.n	801b892 <xEventGroupWaitBits+0x17e>
 801b87e:	687b      	ldr	r3, [r7, #4]
 801b880:	2b00      	cmp	r3, #0
 801b882:	d006      	beq.n	801b892 <xEventGroupWaitBits+0x17e>
 801b884:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b886:	681a      	ldr	r2, [r3, #0]
 801b888:	68bb      	ldr	r3, [r7, #8]
 801b88a:	43db      	mvns	r3, r3
 801b88c:	401a      	ands	r2, r3
 801b88e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b890:	601a      	str	r2, [r3, #0]
 801b892:	2301      	movs	r3, #1
 801b894:	633b      	str	r3, [r7, #48]	; 0x30
 801b896:	f002 fdcd 	bl	801e434 <vPortExitCritical>
 801b89a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b89c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 801b8a0:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b8a2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b8a4:	4618      	mov	r0, r3
 801b8a6:	3740      	adds	r7, #64	; 0x40
 801b8a8:	46bd      	mov	sp, r7
 801b8aa:	bd80      	pop	{r7, pc}
 801b8ac:	e000ed04 	.word	0xe000ed04

0801b8b0 <xEventGroupClearBits>:
 801b8b0:	b580      	push	{r7, lr}
 801b8b2:	b086      	sub	sp, #24
 801b8b4:	af00      	add	r7, sp, #0
 801b8b6:	6078      	str	r0, [r7, #4]
 801b8b8:	6039      	str	r1, [r7, #0]
 801b8ba:	687b      	ldr	r3, [r7, #4]
 801b8bc:	617b      	str	r3, [r7, #20]
 801b8be:	687b      	ldr	r3, [r7, #4]
 801b8c0:	2b00      	cmp	r3, #0
 801b8c2:	d10a      	bne.n	801b8da <xEventGroupClearBits+0x2a>
 801b8c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b8c8:	f383 8811 	msr	BASEPRI, r3
 801b8cc:	f3bf 8f6f 	isb	sy
 801b8d0:	f3bf 8f4f 	dsb	sy
 801b8d4:	60fb      	str	r3, [r7, #12]
 801b8d6:	bf00      	nop
 801b8d8:	e7fe      	b.n	801b8d8 <xEventGroupClearBits+0x28>
 801b8da:	683b      	ldr	r3, [r7, #0]
 801b8dc:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b8e0:	2b00      	cmp	r3, #0
 801b8e2:	d00a      	beq.n	801b8fa <xEventGroupClearBits+0x4a>
 801b8e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b8e8:	f383 8811 	msr	BASEPRI, r3
 801b8ec:	f3bf 8f6f 	isb	sy
 801b8f0:	f3bf 8f4f 	dsb	sy
 801b8f4:	60bb      	str	r3, [r7, #8]
 801b8f6:	bf00      	nop
 801b8f8:	e7fe      	b.n	801b8f8 <xEventGroupClearBits+0x48>
 801b8fa:	f002 fd6b 	bl	801e3d4 <vPortEnterCritical>
 801b8fe:	697b      	ldr	r3, [r7, #20]
 801b900:	681b      	ldr	r3, [r3, #0]
 801b902:	613b      	str	r3, [r7, #16]
 801b904:	697b      	ldr	r3, [r7, #20]
 801b906:	681a      	ldr	r2, [r3, #0]
 801b908:	683b      	ldr	r3, [r7, #0]
 801b90a:	43db      	mvns	r3, r3
 801b90c:	401a      	ands	r2, r3
 801b90e:	697b      	ldr	r3, [r7, #20]
 801b910:	601a      	str	r2, [r3, #0]
 801b912:	f002 fd8f 	bl	801e434 <vPortExitCritical>
 801b916:	693b      	ldr	r3, [r7, #16]
 801b918:	4618      	mov	r0, r3
 801b91a:	3718      	adds	r7, #24
 801b91c:	46bd      	mov	sp, r7
 801b91e:	bd80      	pop	{r7, pc}

0801b920 <xEventGroupSetBits>:
 801b920:	b580      	push	{r7, lr}
 801b922:	b08e      	sub	sp, #56	; 0x38
 801b924:	af00      	add	r7, sp, #0
 801b926:	6078      	str	r0, [r7, #4]
 801b928:	6039      	str	r1, [r7, #0]
 801b92a:	2300      	movs	r3, #0
 801b92c:	633b      	str	r3, [r7, #48]	; 0x30
 801b92e:	687b      	ldr	r3, [r7, #4]
 801b930:	62bb      	str	r3, [r7, #40]	; 0x28
 801b932:	2300      	movs	r3, #0
 801b934:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b936:	687b      	ldr	r3, [r7, #4]
 801b938:	2b00      	cmp	r3, #0
 801b93a:	d10a      	bne.n	801b952 <xEventGroupSetBits+0x32>
 801b93c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b940:	f383 8811 	msr	BASEPRI, r3
 801b944:	f3bf 8f6f 	isb	sy
 801b948:	f3bf 8f4f 	dsb	sy
 801b94c:	613b      	str	r3, [r7, #16]
 801b94e:	bf00      	nop
 801b950:	e7fe      	b.n	801b950 <xEventGroupSetBits+0x30>
 801b952:	683b      	ldr	r3, [r7, #0]
 801b954:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b958:	2b00      	cmp	r3, #0
 801b95a:	d00a      	beq.n	801b972 <xEventGroupSetBits+0x52>
 801b95c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801b960:	f383 8811 	msr	BASEPRI, r3
 801b964:	f3bf 8f6f 	isb	sy
 801b968:	f3bf 8f4f 	dsb	sy
 801b96c:	60fb      	str	r3, [r7, #12]
 801b96e:	bf00      	nop
 801b970:	e7fe      	b.n	801b970 <xEventGroupSetBits+0x50>
 801b972:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b974:	3304      	adds	r3, #4
 801b976:	627b      	str	r3, [r7, #36]	; 0x24
 801b978:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b97a:	3308      	adds	r3, #8
 801b97c:	623b      	str	r3, [r7, #32]
 801b97e:	f001 f9e1 	bl	801cd44 <vTaskSuspendAll>
 801b982:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801b984:	68db      	ldr	r3, [r3, #12]
 801b986:	637b      	str	r3, [r7, #52]	; 0x34
 801b988:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b98a:	681a      	ldr	r2, [r3, #0]
 801b98c:	683b      	ldr	r3, [r7, #0]
 801b98e:	431a      	orrs	r2, r3
 801b990:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b992:	601a      	str	r2, [r3, #0]
 801b994:	e03c      	b.n	801ba10 <xEventGroupSetBits+0xf0>
 801b996:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b998:	685b      	ldr	r3, [r3, #4]
 801b99a:	61fb      	str	r3, [r7, #28]
 801b99c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801b99e:	681b      	ldr	r3, [r3, #0]
 801b9a0:	61bb      	str	r3, [r7, #24]
 801b9a2:	2300      	movs	r3, #0
 801b9a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b9a6:	69bb      	ldr	r3, [r7, #24]
 801b9a8:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 801b9ac:	617b      	str	r3, [r7, #20]
 801b9ae:	69bb      	ldr	r3, [r7, #24]
 801b9b0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 801b9b4:	61bb      	str	r3, [r7, #24]
 801b9b6:	697b      	ldr	r3, [r7, #20]
 801b9b8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 801b9bc:	2b00      	cmp	r3, #0
 801b9be:	d108      	bne.n	801b9d2 <xEventGroupSetBits+0xb2>
 801b9c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b9c2:	681a      	ldr	r2, [r3, #0]
 801b9c4:	69bb      	ldr	r3, [r7, #24]
 801b9c6:	4013      	ands	r3, r2
 801b9c8:	2b00      	cmp	r3, #0
 801b9ca:	d00b      	beq.n	801b9e4 <xEventGroupSetBits+0xc4>
 801b9cc:	2301      	movs	r3, #1
 801b9ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b9d0:	e008      	b.n	801b9e4 <xEventGroupSetBits+0xc4>
 801b9d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b9d4:	681a      	ldr	r2, [r3, #0]
 801b9d6:	69bb      	ldr	r3, [r7, #24]
 801b9d8:	4013      	ands	r3, r2
 801b9da:	69ba      	ldr	r2, [r7, #24]
 801b9dc:	429a      	cmp	r2, r3
 801b9de:	d101      	bne.n	801b9e4 <xEventGroupSetBits+0xc4>
 801b9e0:	2301      	movs	r3, #1
 801b9e2:	62fb      	str	r3, [r7, #44]	; 0x2c
 801b9e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801b9e6:	2b00      	cmp	r3, #0
 801b9e8:	d010      	beq.n	801ba0c <xEventGroupSetBits+0xec>
 801b9ea:	697b      	ldr	r3, [r7, #20]
 801b9ec:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801b9f0:	2b00      	cmp	r3, #0
 801b9f2:	d003      	beq.n	801b9fc <xEventGroupSetBits+0xdc>
 801b9f4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801b9f6:	69bb      	ldr	r3, [r7, #24]
 801b9f8:	4313      	orrs	r3, r2
 801b9fa:	633b      	str	r3, [r7, #48]	; 0x30
 801b9fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801b9fe:	681b      	ldr	r3, [r3, #0]
 801ba00:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 801ba04:	4619      	mov	r1, r3
 801ba06:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801ba08:	f001 fc8a 	bl	801d320 <vTaskRemoveFromUnorderedEventList>
 801ba0c:	69fb      	ldr	r3, [r7, #28]
 801ba0e:	637b      	str	r3, [r7, #52]	; 0x34
 801ba10:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801ba12:	6a3b      	ldr	r3, [r7, #32]
 801ba14:	429a      	cmp	r2, r3
 801ba16:	d1be      	bne.n	801b996 <xEventGroupSetBits+0x76>
 801ba18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ba1a:	681a      	ldr	r2, [r3, #0]
 801ba1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ba1e:	43db      	mvns	r3, r3
 801ba20:	401a      	ands	r2, r3
 801ba22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ba24:	601a      	str	r2, [r3, #0]
 801ba26:	f001 f99b 	bl	801cd60 <xTaskResumeAll>
 801ba2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ba2c:	681b      	ldr	r3, [r3, #0]
 801ba2e:	4618      	mov	r0, r3
 801ba30:	3738      	adds	r7, #56	; 0x38
 801ba32:	46bd      	mov	sp, r7
 801ba34:	bd80      	pop	{r7, pc}

0801ba36 <vEventGroupSetBitsCallback>:
 801ba36:	b580      	push	{r7, lr}
 801ba38:	b082      	sub	sp, #8
 801ba3a:	af00      	add	r7, sp, #0
 801ba3c:	6078      	str	r0, [r7, #4]
 801ba3e:	6039      	str	r1, [r7, #0]
 801ba40:	6839      	ldr	r1, [r7, #0]
 801ba42:	6878      	ldr	r0, [r7, #4]
 801ba44:	f7ff ff6c 	bl	801b920 <xEventGroupSetBits>
 801ba48:	bf00      	nop
 801ba4a:	3708      	adds	r7, #8
 801ba4c:	46bd      	mov	sp, r7
 801ba4e:	bd80      	pop	{r7, pc}

0801ba50 <prvTestWaitCondition>:
 801ba50:	b480      	push	{r7}
 801ba52:	b087      	sub	sp, #28
 801ba54:	af00      	add	r7, sp, #0
 801ba56:	60f8      	str	r0, [r7, #12]
 801ba58:	60b9      	str	r1, [r7, #8]
 801ba5a:	607a      	str	r2, [r7, #4]
 801ba5c:	2300      	movs	r3, #0
 801ba5e:	617b      	str	r3, [r7, #20]
 801ba60:	687b      	ldr	r3, [r7, #4]
 801ba62:	2b00      	cmp	r3, #0
 801ba64:	d107      	bne.n	801ba76 <prvTestWaitCondition+0x26>
 801ba66:	68fa      	ldr	r2, [r7, #12]
 801ba68:	68bb      	ldr	r3, [r7, #8]
 801ba6a:	4013      	ands	r3, r2
 801ba6c:	2b00      	cmp	r3, #0
 801ba6e:	d00a      	beq.n	801ba86 <prvTestWaitCondition+0x36>
 801ba70:	2301      	movs	r3, #1
 801ba72:	617b      	str	r3, [r7, #20]
 801ba74:	e007      	b.n	801ba86 <prvTestWaitCondition+0x36>
 801ba76:	68fa      	ldr	r2, [r7, #12]
 801ba78:	68bb      	ldr	r3, [r7, #8]
 801ba7a:	4013      	ands	r3, r2
 801ba7c:	68ba      	ldr	r2, [r7, #8]
 801ba7e:	429a      	cmp	r2, r3
 801ba80:	d101      	bne.n	801ba86 <prvTestWaitCondition+0x36>
 801ba82:	2301      	movs	r3, #1
 801ba84:	617b      	str	r3, [r7, #20]
 801ba86:	697b      	ldr	r3, [r7, #20]
 801ba88:	4618      	mov	r0, r3
 801ba8a:	371c      	adds	r7, #28
 801ba8c:	46bd      	mov	sp, r7
 801ba8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ba92:	4770      	bx	lr

0801ba94 <xEventGroupSetBitsFromISR>:
 801ba94:	b580      	push	{r7, lr}
 801ba96:	b086      	sub	sp, #24
 801ba98:	af00      	add	r7, sp, #0
 801ba9a:	60f8      	str	r0, [r7, #12]
 801ba9c:	60b9      	str	r1, [r7, #8]
 801ba9e:	607a      	str	r2, [r7, #4]
 801baa0:	687b      	ldr	r3, [r7, #4]
 801baa2:	68ba      	ldr	r2, [r7, #8]
 801baa4:	68f9      	ldr	r1, [r7, #12]
 801baa6:	4804      	ldr	r0, [pc, #16]	; (801bab8 <xEventGroupSetBitsFromISR+0x24>)
 801baa8:	f002 fb4a 	bl	801e140 <xTimerPendFunctionCallFromISR>
 801baac:	6178      	str	r0, [r7, #20]
 801baae:	697b      	ldr	r3, [r7, #20]
 801bab0:	4618      	mov	r0, r3
 801bab2:	3718      	adds	r7, #24
 801bab4:	46bd      	mov	sp, r7
 801bab6:	bd80      	pop	{r7, pc}
 801bab8:	0801ba37 	.word	0x0801ba37

0801babc <vListInitialise>:
 801babc:	b480      	push	{r7}
 801babe:	b083      	sub	sp, #12
 801bac0:	af00      	add	r7, sp, #0
 801bac2:	6078      	str	r0, [r7, #4]
 801bac4:	687b      	ldr	r3, [r7, #4]
 801bac6:	f103 0208 	add.w	r2, r3, #8
 801baca:	687b      	ldr	r3, [r7, #4]
 801bacc:	605a      	str	r2, [r3, #4]
 801bace:	687b      	ldr	r3, [r7, #4]
 801bad0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801bad4:	609a      	str	r2, [r3, #8]
 801bad6:	687b      	ldr	r3, [r7, #4]
 801bad8:	f103 0208 	add.w	r2, r3, #8
 801badc:	687b      	ldr	r3, [r7, #4]
 801bade:	60da      	str	r2, [r3, #12]
 801bae0:	687b      	ldr	r3, [r7, #4]
 801bae2:	f103 0208 	add.w	r2, r3, #8
 801bae6:	687b      	ldr	r3, [r7, #4]
 801bae8:	611a      	str	r2, [r3, #16]
 801baea:	687b      	ldr	r3, [r7, #4]
 801baec:	2200      	movs	r2, #0
 801baee:	601a      	str	r2, [r3, #0]
 801baf0:	bf00      	nop
 801baf2:	370c      	adds	r7, #12
 801baf4:	46bd      	mov	sp, r7
 801baf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bafa:	4770      	bx	lr

0801bafc <vListInitialiseItem>:
 801bafc:	b480      	push	{r7}
 801bafe:	b083      	sub	sp, #12
 801bb00:	af00      	add	r7, sp, #0
 801bb02:	6078      	str	r0, [r7, #4]
 801bb04:	687b      	ldr	r3, [r7, #4]
 801bb06:	2200      	movs	r2, #0
 801bb08:	611a      	str	r2, [r3, #16]
 801bb0a:	bf00      	nop
 801bb0c:	370c      	adds	r7, #12
 801bb0e:	46bd      	mov	sp, r7
 801bb10:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb14:	4770      	bx	lr

0801bb16 <vListInsertEnd>:
 801bb16:	b480      	push	{r7}
 801bb18:	b085      	sub	sp, #20
 801bb1a:	af00      	add	r7, sp, #0
 801bb1c:	6078      	str	r0, [r7, #4]
 801bb1e:	6039      	str	r1, [r7, #0]
 801bb20:	687b      	ldr	r3, [r7, #4]
 801bb22:	685b      	ldr	r3, [r3, #4]
 801bb24:	60fb      	str	r3, [r7, #12]
 801bb26:	683b      	ldr	r3, [r7, #0]
 801bb28:	68fa      	ldr	r2, [r7, #12]
 801bb2a:	605a      	str	r2, [r3, #4]
 801bb2c:	68fb      	ldr	r3, [r7, #12]
 801bb2e:	689a      	ldr	r2, [r3, #8]
 801bb30:	683b      	ldr	r3, [r7, #0]
 801bb32:	609a      	str	r2, [r3, #8]
 801bb34:	68fb      	ldr	r3, [r7, #12]
 801bb36:	689b      	ldr	r3, [r3, #8]
 801bb38:	683a      	ldr	r2, [r7, #0]
 801bb3a:	605a      	str	r2, [r3, #4]
 801bb3c:	68fb      	ldr	r3, [r7, #12]
 801bb3e:	683a      	ldr	r2, [r7, #0]
 801bb40:	609a      	str	r2, [r3, #8]
 801bb42:	683b      	ldr	r3, [r7, #0]
 801bb44:	687a      	ldr	r2, [r7, #4]
 801bb46:	611a      	str	r2, [r3, #16]
 801bb48:	687b      	ldr	r3, [r7, #4]
 801bb4a:	681b      	ldr	r3, [r3, #0]
 801bb4c:	1c5a      	adds	r2, r3, #1
 801bb4e:	687b      	ldr	r3, [r7, #4]
 801bb50:	601a      	str	r2, [r3, #0]
 801bb52:	bf00      	nop
 801bb54:	3714      	adds	r7, #20
 801bb56:	46bd      	mov	sp, r7
 801bb58:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb5c:	4770      	bx	lr

0801bb5e <vListInsert>:
 801bb5e:	b480      	push	{r7}
 801bb60:	b085      	sub	sp, #20
 801bb62:	af00      	add	r7, sp, #0
 801bb64:	6078      	str	r0, [r7, #4]
 801bb66:	6039      	str	r1, [r7, #0]
 801bb68:	683b      	ldr	r3, [r7, #0]
 801bb6a:	681b      	ldr	r3, [r3, #0]
 801bb6c:	60bb      	str	r3, [r7, #8]
 801bb6e:	68bb      	ldr	r3, [r7, #8]
 801bb70:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801bb74:	d103      	bne.n	801bb7e <vListInsert+0x20>
 801bb76:	687b      	ldr	r3, [r7, #4]
 801bb78:	691b      	ldr	r3, [r3, #16]
 801bb7a:	60fb      	str	r3, [r7, #12]
 801bb7c:	e00c      	b.n	801bb98 <vListInsert+0x3a>
 801bb7e:	687b      	ldr	r3, [r7, #4]
 801bb80:	3308      	adds	r3, #8
 801bb82:	60fb      	str	r3, [r7, #12]
 801bb84:	e002      	b.n	801bb8c <vListInsert+0x2e>
 801bb86:	68fb      	ldr	r3, [r7, #12]
 801bb88:	685b      	ldr	r3, [r3, #4]
 801bb8a:	60fb      	str	r3, [r7, #12]
 801bb8c:	68fb      	ldr	r3, [r7, #12]
 801bb8e:	685b      	ldr	r3, [r3, #4]
 801bb90:	681b      	ldr	r3, [r3, #0]
 801bb92:	68ba      	ldr	r2, [r7, #8]
 801bb94:	429a      	cmp	r2, r3
 801bb96:	d2f6      	bcs.n	801bb86 <vListInsert+0x28>
 801bb98:	68fb      	ldr	r3, [r7, #12]
 801bb9a:	685a      	ldr	r2, [r3, #4]
 801bb9c:	683b      	ldr	r3, [r7, #0]
 801bb9e:	605a      	str	r2, [r3, #4]
 801bba0:	683b      	ldr	r3, [r7, #0]
 801bba2:	685b      	ldr	r3, [r3, #4]
 801bba4:	683a      	ldr	r2, [r7, #0]
 801bba6:	609a      	str	r2, [r3, #8]
 801bba8:	683b      	ldr	r3, [r7, #0]
 801bbaa:	68fa      	ldr	r2, [r7, #12]
 801bbac:	609a      	str	r2, [r3, #8]
 801bbae:	68fb      	ldr	r3, [r7, #12]
 801bbb0:	683a      	ldr	r2, [r7, #0]
 801bbb2:	605a      	str	r2, [r3, #4]
 801bbb4:	683b      	ldr	r3, [r7, #0]
 801bbb6:	687a      	ldr	r2, [r7, #4]
 801bbb8:	611a      	str	r2, [r3, #16]
 801bbba:	687b      	ldr	r3, [r7, #4]
 801bbbc:	681b      	ldr	r3, [r3, #0]
 801bbbe:	1c5a      	adds	r2, r3, #1
 801bbc0:	687b      	ldr	r3, [r7, #4]
 801bbc2:	601a      	str	r2, [r3, #0]
 801bbc4:	bf00      	nop
 801bbc6:	3714      	adds	r7, #20
 801bbc8:	46bd      	mov	sp, r7
 801bbca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bbce:	4770      	bx	lr

0801bbd0 <uxListRemove>:
 801bbd0:	b480      	push	{r7}
 801bbd2:	b085      	sub	sp, #20
 801bbd4:	af00      	add	r7, sp, #0
 801bbd6:	6078      	str	r0, [r7, #4]
 801bbd8:	687b      	ldr	r3, [r7, #4]
 801bbda:	691b      	ldr	r3, [r3, #16]
 801bbdc:	60fb      	str	r3, [r7, #12]
 801bbde:	687b      	ldr	r3, [r7, #4]
 801bbe0:	685b      	ldr	r3, [r3, #4]
 801bbe2:	687a      	ldr	r2, [r7, #4]
 801bbe4:	6892      	ldr	r2, [r2, #8]
 801bbe6:	609a      	str	r2, [r3, #8]
 801bbe8:	687b      	ldr	r3, [r7, #4]
 801bbea:	689b      	ldr	r3, [r3, #8]
 801bbec:	687a      	ldr	r2, [r7, #4]
 801bbee:	6852      	ldr	r2, [r2, #4]
 801bbf0:	605a      	str	r2, [r3, #4]
 801bbf2:	68fb      	ldr	r3, [r7, #12]
 801bbf4:	685b      	ldr	r3, [r3, #4]
 801bbf6:	687a      	ldr	r2, [r7, #4]
 801bbf8:	429a      	cmp	r2, r3
 801bbfa:	d103      	bne.n	801bc04 <uxListRemove+0x34>
 801bbfc:	687b      	ldr	r3, [r7, #4]
 801bbfe:	689a      	ldr	r2, [r3, #8]
 801bc00:	68fb      	ldr	r3, [r7, #12]
 801bc02:	605a      	str	r2, [r3, #4]
 801bc04:	687b      	ldr	r3, [r7, #4]
 801bc06:	2200      	movs	r2, #0
 801bc08:	611a      	str	r2, [r3, #16]
 801bc0a:	68fb      	ldr	r3, [r7, #12]
 801bc0c:	681b      	ldr	r3, [r3, #0]
 801bc0e:	1e5a      	subs	r2, r3, #1
 801bc10:	68fb      	ldr	r3, [r7, #12]
 801bc12:	601a      	str	r2, [r3, #0]
 801bc14:	68fb      	ldr	r3, [r7, #12]
 801bc16:	681b      	ldr	r3, [r3, #0]
 801bc18:	4618      	mov	r0, r3
 801bc1a:	3714      	adds	r7, #20
 801bc1c:	46bd      	mov	sp, r7
 801bc1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc22:	4770      	bx	lr

0801bc24 <xQueueGenericReset>:
 801bc24:	b580      	push	{r7, lr}
 801bc26:	b084      	sub	sp, #16
 801bc28:	af00      	add	r7, sp, #0
 801bc2a:	6078      	str	r0, [r7, #4]
 801bc2c:	6039      	str	r1, [r7, #0]
 801bc2e:	687b      	ldr	r3, [r7, #4]
 801bc30:	60fb      	str	r3, [r7, #12]
 801bc32:	68fb      	ldr	r3, [r7, #12]
 801bc34:	2b00      	cmp	r3, #0
 801bc36:	d10a      	bne.n	801bc4e <xQueueGenericReset+0x2a>
 801bc38:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bc3c:	f383 8811 	msr	BASEPRI, r3
 801bc40:	f3bf 8f6f 	isb	sy
 801bc44:	f3bf 8f4f 	dsb	sy
 801bc48:	60bb      	str	r3, [r7, #8]
 801bc4a:	bf00      	nop
 801bc4c:	e7fe      	b.n	801bc4c <xQueueGenericReset+0x28>
 801bc4e:	f002 fbc1 	bl	801e3d4 <vPortEnterCritical>
 801bc52:	68fb      	ldr	r3, [r7, #12]
 801bc54:	681a      	ldr	r2, [r3, #0]
 801bc56:	68fb      	ldr	r3, [r7, #12]
 801bc58:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bc5a:	68f9      	ldr	r1, [r7, #12]
 801bc5c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801bc5e:	fb01 f303 	mul.w	r3, r1, r3
 801bc62:	441a      	add	r2, r3
 801bc64:	68fb      	ldr	r3, [r7, #12]
 801bc66:	609a      	str	r2, [r3, #8]
 801bc68:	68fb      	ldr	r3, [r7, #12]
 801bc6a:	2200      	movs	r2, #0
 801bc6c:	639a      	str	r2, [r3, #56]	; 0x38
 801bc6e:	68fb      	ldr	r3, [r7, #12]
 801bc70:	681a      	ldr	r2, [r3, #0]
 801bc72:	68fb      	ldr	r3, [r7, #12]
 801bc74:	605a      	str	r2, [r3, #4]
 801bc76:	68fb      	ldr	r3, [r7, #12]
 801bc78:	681a      	ldr	r2, [r3, #0]
 801bc7a:	68fb      	ldr	r3, [r7, #12]
 801bc7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bc7e:	3b01      	subs	r3, #1
 801bc80:	68f9      	ldr	r1, [r7, #12]
 801bc82:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801bc84:	fb01 f303 	mul.w	r3, r1, r3
 801bc88:	441a      	add	r2, r3
 801bc8a:	68fb      	ldr	r3, [r7, #12]
 801bc8c:	60da      	str	r2, [r3, #12]
 801bc8e:	68fb      	ldr	r3, [r7, #12]
 801bc90:	22ff      	movs	r2, #255	; 0xff
 801bc92:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801bc96:	68fb      	ldr	r3, [r7, #12]
 801bc98:	22ff      	movs	r2, #255	; 0xff
 801bc9a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801bc9e:	683b      	ldr	r3, [r7, #0]
 801bca0:	2b00      	cmp	r3, #0
 801bca2:	d114      	bne.n	801bcce <xQueueGenericReset+0xaa>
 801bca4:	68fb      	ldr	r3, [r7, #12]
 801bca6:	691b      	ldr	r3, [r3, #16]
 801bca8:	2b00      	cmp	r3, #0
 801bcaa:	d01a      	beq.n	801bce2 <xQueueGenericReset+0xbe>
 801bcac:	68fb      	ldr	r3, [r7, #12]
 801bcae:	3310      	adds	r3, #16
 801bcb0:	4618      	mov	r0, r3
 801bcb2:	f001 fad3 	bl	801d25c <xTaskRemoveFromEventList>
 801bcb6:	4603      	mov	r3, r0
 801bcb8:	2b00      	cmp	r3, #0
 801bcba:	d012      	beq.n	801bce2 <xQueueGenericReset+0xbe>
 801bcbc:	4b0c      	ldr	r3, [pc, #48]	; (801bcf0 <xQueueGenericReset+0xcc>)
 801bcbe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801bcc2:	601a      	str	r2, [r3, #0]
 801bcc4:	f3bf 8f4f 	dsb	sy
 801bcc8:	f3bf 8f6f 	isb	sy
 801bccc:	e009      	b.n	801bce2 <xQueueGenericReset+0xbe>
 801bcce:	68fb      	ldr	r3, [r7, #12]
 801bcd0:	3310      	adds	r3, #16
 801bcd2:	4618      	mov	r0, r3
 801bcd4:	f7ff fef2 	bl	801babc <vListInitialise>
 801bcd8:	68fb      	ldr	r3, [r7, #12]
 801bcda:	3324      	adds	r3, #36	; 0x24
 801bcdc:	4618      	mov	r0, r3
 801bcde:	f7ff feed 	bl	801babc <vListInitialise>
 801bce2:	f002 fba7 	bl	801e434 <vPortExitCritical>
 801bce6:	2301      	movs	r3, #1
 801bce8:	4618      	mov	r0, r3
 801bcea:	3710      	adds	r7, #16
 801bcec:	46bd      	mov	sp, r7
 801bcee:	bd80      	pop	{r7, pc}
 801bcf0:	e000ed04 	.word	0xe000ed04

0801bcf4 <xQueueGenericCreateStatic>:
 801bcf4:	b580      	push	{r7, lr}
 801bcf6:	b08e      	sub	sp, #56	; 0x38
 801bcf8:	af02      	add	r7, sp, #8
 801bcfa:	60f8      	str	r0, [r7, #12]
 801bcfc:	60b9      	str	r1, [r7, #8]
 801bcfe:	607a      	str	r2, [r7, #4]
 801bd00:	603b      	str	r3, [r7, #0]
 801bd02:	68fb      	ldr	r3, [r7, #12]
 801bd04:	2b00      	cmp	r3, #0
 801bd06:	d10a      	bne.n	801bd1e <xQueueGenericCreateStatic+0x2a>
 801bd08:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd0c:	f383 8811 	msr	BASEPRI, r3
 801bd10:	f3bf 8f6f 	isb	sy
 801bd14:	f3bf 8f4f 	dsb	sy
 801bd18:	62bb      	str	r3, [r7, #40]	; 0x28
 801bd1a:	bf00      	nop
 801bd1c:	e7fe      	b.n	801bd1c <xQueueGenericCreateStatic+0x28>
 801bd1e:	683b      	ldr	r3, [r7, #0]
 801bd20:	2b00      	cmp	r3, #0
 801bd22:	d10a      	bne.n	801bd3a <xQueueGenericCreateStatic+0x46>
 801bd24:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd28:	f383 8811 	msr	BASEPRI, r3
 801bd2c:	f3bf 8f6f 	isb	sy
 801bd30:	f3bf 8f4f 	dsb	sy
 801bd34:	627b      	str	r3, [r7, #36]	; 0x24
 801bd36:	bf00      	nop
 801bd38:	e7fe      	b.n	801bd38 <xQueueGenericCreateStatic+0x44>
 801bd3a:	687b      	ldr	r3, [r7, #4]
 801bd3c:	2b00      	cmp	r3, #0
 801bd3e:	d002      	beq.n	801bd46 <xQueueGenericCreateStatic+0x52>
 801bd40:	68bb      	ldr	r3, [r7, #8]
 801bd42:	2b00      	cmp	r3, #0
 801bd44:	d001      	beq.n	801bd4a <xQueueGenericCreateStatic+0x56>
 801bd46:	2301      	movs	r3, #1
 801bd48:	e000      	b.n	801bd4c <xQueueGenericCreateStatic+0x58>
 801bd4a:	2300      	movs	r3, #0
 801bd4c:	2b00      	cmp	r3, #0
 801bd4e:	d10a      	bne.n	801bd66 <xQueueGenericCreateStatic+0x72>
 801bd50:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd54:	f383 8811 	msr	BASEPRI, r3
 801bd58:	f3bf 8f6f 	isb	sy
 801bd5c:	f3bf 8f4f 	dsb	sy
 801bd60:	623b      	str	r3, [r7, #32]
 801bd62:	bf00      	nop
 801bd64:	e7fe      	b.n	801bd64 <xQueueGenericCreateStatic+0x70>
 801bd66:	687b      	ldr	r3, [r7, #4]
 801bd68:	2b00      	cmp	r3, #0
 801bd6a:	d102      	bne.n	801bd72 <xQueueGenericCreateStatic+0x7e>
 801bd6c:	68bb      	ldr	r3, [r7, #8]
 801bd6e:	2b00      	cmp	r3, #0
 801bd70:	d101      	bne.n	801bd76 <xQueueGenericCreateStatic+0x82>
 801bd72:	2301      	movs	r3, #1
 801bd74:	e000      	b.n	801bd78 <xQueueGenericCreateStatic+0x84>
 801bd76:	2300      	movs	r3, #0
 801bd78:	2b00      	cmp	r3, #0
 801bd7a:	d10a      	bne.n	801bd92 <xQueueGenericCreateStatic+0x9e>
 801bd7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bd80:	f383 8811 	msr	BASEPRI, r3
 801bd84:	f3bf 8f6f 	isb	sy
 801bd88:	f3bf 8f4f 	dsb	sy
 801bd8c:	61fb      	str	r3, [r7, #28]
 801bd8e:	bf00      	nop
 801bd90:	e7fe      	b.n	801bd90 <xQueueGenericCreateStatic+0x9c>
 801bd92:	2350      	movs	r3, #80	; 0x50
 801bd94:	617b      	str	r3, [r7, #20]
 801bd96:	697b      	ldr	r3, [r7, #20]
 801bd98:	2b50      	cmp	r3, #80	; 0x50
 801bd9a:	d00a      	beq.n	801bdb2 <xQueueGenericCreateStatic+0xbe>
 801bd9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bda0:	f383 8811 	msr	BASEPRI, r3
 801bda4:	f3bf 8f6f 	isb	sy
 801bda8:	f3bf 8f4f 	dsb	sy
 801bdac:	61bb      	str	r3, [r7, #24]
 801bdae:	bf00      	nop
 801bdb0:	e7fe      	b.n	801bdb0 <xQueueGenericCreateStatic+0xbc>
 801bdb2:	697b      	ldr	r3, [r7, #20]
 801bdb4:	683b      	ldr	r3, [r7, #0]
 801bdb6:	62fb      	str	r3, [r7, #44]	; 0x2c
 801bdb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bdba:	2b00      	cmp	r3, #0
 801bdbc:	d00d      	beq.n	801bdda <xQueueGenericCreateStatic+0xe6>
 801bdbe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bdc0:	2201      	movs	r2, #1
 801bdc2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 801bdc6:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 801bdca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bdcc:	9300      	str	r3, [sp, #0]
 801bdce:	4613      	mov	r3, r2
 801bdd0:	687a      	ldr	r2, [r7, #4]
 801bdd2:	68b9      	ldr	r1, [r7, #8]
 801bdd4:	68f8      	ldr	r0, [r7, #12]
 801bdd6:	f000 f83f 	bl	801be58 <prvInitialiseNewQueue>
 801bdda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bddc:	4618      	mov	r0, r3
 801bdde:	3730      	adds	r7, #48	; 0x30
 801bde0:	46bd      	mov	sp, r7
 801bde2:	bd80      	pop	{r7, pc}

0801bde4 <xQueueGenericCreate>:
 801bde4:	b580      	push	{r7, lr}
 801bde6:	b08a      	sub	sp, #40	; 0x28
 801bde8:	af02      	add	r7, sp, #8
 801bdea:	60f8      	str	r0, [r7, #12]
 801bdec:	60b9      	str	r1, [r7, #8]
 801bdee:	4613      	mov	r3, r2
 801bdf0:	71fb      	strb	r3, [r7, #7]
 801bdf2:	68fb      	ldr	r3, [r7, #12]
 801bdf4:	2b00      	cmp	r3, #0
 801bdf6:	d10a      	bne.n	801be0e <xQueueGenericCreate+0x2a>
 801bdf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bdfc:	f383 8811 	msr	BASEPRI, r3
 801be00:	f3bf 8f6f 	isb	sy
 801be04:	f3bf 8f4f 	dsb	sy
 801be08:	613b      	str	r3, [r7, #16]
 801be0a:	bf00      	nop
 801be0c:	e7fe      	b.n	801be0c <xQueueGenericCreate+0x28>
 801be0e:	68fb      	ldr	r3, [r7, #12]
 801be10:	68ba      	ldr	r2, [r7, #8]
 801be12:	fb02 f303 	mul.w	r3, r2, r3
 801be16:	61fb      	str	r3, [r7, #28]
 801be18:	69fb      	ldr	r3, [r7, #28]
 801be1a:	3350      	adds	r3, #80	; 0x50
 801be1c:	4618      	mov	r0, r3
 801be1e:	f002 fbfb 	bl	801e618 <pvPortMalloc>
 801be22:	61b8      	str	r0, [r7, #24]
 801be24:	69bb      	ldr	r3, [r7, #24]
 801be26:	2b00      	cmp	r3, #0
 801be28:	d011      	beq.n	801be4e <xQueueGenericCreate+0x6a>
 801be2a:	69bb      	ldr	r3, [r7, #24]
 801be2c:	617b      	str	r3, [r7, #20]
 801be2e:	697b      	ldr	r3, [r7, #20]
 801be30:	3350      	adds	r3, #80	; 0x50
 801be32:	617b      	str	r3, [r7, #20]
 801be34:	69bb      	ldr	r3, [r7, #24]
 801be36:	2200      	movs	r2, #0
 801be38:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 801be3c:	79fa      	ldrb	r2, [r7, #7]
 801be3e:	69bb      	ldr	r3, [r7, #24]
 801be40:	9300      	str	r3, [sp, #0]
 801be42:	4613      	mov	r3, r2
 801be44:	697a      	ldr	r2, [r7, #20]
 801be46:	68b9      	ldr	r1, [r7, #8]
 801be48:	68f8      	ldr	r0, [r7, #12]
 801be4a:	f000 f805 	bl	801be58 <prvInitialiseNewQueue>
 801be4e:	69bb      	ldr	r3, [r7, #24]
 801be50:	4618      	mov	r0, r3
 801be52:	3720      	adds	r7, #32
 801be54:	46bd      	mov	sp, r7
 801be56:	bd80      	pop	{r7, pc}

0801be58 <prvInitialiseNewQueue>:
 801be58:	b580      	push	{r7, lr}
 801be5a:	b084      	sub	sp, #16
 801be5c:	af00      	add	r7, sp, #0
 801be5e:	60f8      	str	r0, [r7, #12]
 801be60:	60b9      	str	r1, [r7, #8]
 801be62:	607a      	str	r2, [r7, #4]
 801be64:	70fb      	strb	r3, [r7, #3]
 801be66:	68bb      	ldr	r3, [r7, #8]
 801be68:	2b00      	cmp	r3, #0
 801be6a:	d103      	bne.n	801be74 <prvInitialiseNewQueue+0x1c>
 801be6c:	69bb      	ldr	r3, [r7, #24]
 801be6e:	69ba      	ldr	r2, [r7, #24]
 801be70:	601a      	str	r2, [r3, #0]
 801be72:	e002      	b.n	801be7a <prvInitialiseNewQueue+0x22>
 801be74:	69bb      	ldr	r3, [r7, #24]
 801be76:	687a      	ldr	r2, [r7, #4]
 801be78:	601a      	str	r2, [r3, #0]
 801be7a:	69bb      	ldr	r3, [r7, #24]
 801be7c:	68fa      	ldr	r2, [r7, #12]
 801be7e:	63da      	str	r2, [r3, #60]	; 0x3c
 801be80:	69bb      	ldr	r3, [r7, #24]
 801be82:	68ba      	ldr	r2, [r7, #8]
 801be84:	641a      	str	r2, [r3, #64]	; 0x40
 801be86:	2101      	movs	r1, #1
 801be88:	69b8      	ldr	r0, [r7, #24]
 801be8a:	f7ff fecb 	bl	801bc24 <xQueueGenericReset>
 801be8e:	69bb      	ldr	r3, [r7, #24]
 801be90:	78fa      	ldrb	r2, [r7, #3]
 801be92:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 801be96:	bf00      	nop
 801be98:	3710      	adds	r7, #16
 801be9a:	46bd      	mov	sp, r7
 801be9c:	bd80      	pop	{r7, pc}
	...

0801bea0 <xQueueGenericSend>:
 801bea0:	b580      	push	{r7, lr}
 801bea2:	b08e      	sub	sp, #56	; 0x38
 801bea4:	af00      	add	r7, sp, #0
 801bea6:	60f8      	str	r0, [r7, #12]
 801bea8:	60b9      	str	r1, [r7, #8]
 801beaa:	607a      	str	r2, [r7, #4]
 801beac:	603b      	str	r3, [r7, #0]
 801beae:	2300      	movs	r3, #0
 801beb0:	637b      	str	r3, [r7, #52]	; 0x34
 801beb2:	68fb      	ldr	r3, [r7, #12]
 801beb4:	633b      	str	r3, [r7, #48]	; 0x30
 801beb6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801beb8:	2b00      	cmp	r3, #0
 801beba:	d10a      	bne.n	801bed2 <xQueueGenericSend+0x32>
 801bebc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bec0:	f383 8811 	msr	BASEPRI, r3
 801bec4:	f3bf 8f6f 	isb	sy
 801bec8:	f3bf 8f4f 	dsb	sy
 801becc:	62bb      	str	r3, [r7, #40]	; 0x28
 801bece:	bf00      	nop
 801bed0:	e7fe      	b.n	801bed0 <xQueueGenericSend+0x30>
 801bed2:	68bb      	ldr	r3, [r7, #8]
 801bed4:	2b00      	cmp	r3, #0
 801bed6:	d103      	bne.n	801bee0 <xQueueGenericSend+0x40>
 801bed8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801beda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801bedc:	2b00      	cmp	r3, #0
 801bede:	d101      	bne.n	801bee4 <xQueueGenericSend+0x44>
 801bee0:	2301      	movs	r3, #1
 801bee2:	e000      	b.n	801bee6 <xQueueGenericSend+0x46>
 801bee4:	2300      	movs	r3, #0
 801bee6:	2b00      	cmp	r3, #0
 801bee8:	d10a      	bne.n	801bf00 <xQueueGenericSend+0x60>
 801beea:	f04f 0350 	mov.w	r3, #80	; 0x50
 801beee:	f383 8811 	msr	BASEPRI, r3
 801bef2:	f3bf 8f6f 	isb	sy
 801bef6:	f3bf 8f4f 	dsb	sy
 801befa:	627b      	str	r3, [r7, #36]	; 0x24
 801befc:	bf00      	nop
 801befe:	e7fe      	b.n	801befe <xQueueGenericSend+0x5e>
 801bf00:	683b      	ldr	r3, [r7, #0]
 801bf02:	2b02      	cmp	r3, #2
 801bf04:	d103      	bne.n	801bf0e <xQueueGenericSend+0x6e>
 801bf06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bf08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bf0a:	2b01      	cmp	r3, #1
 801bf0c:	d101      	bne.n	801bf12 <xQueueGenericSend+0x72>
 801bf0e:	2301      	movs	r3, #1
 801bf10:	e000      	b.n	801bf14 <xQueueGenericSend+0x74>
 801bf12:	2300      	movs	r3, #0
 801bf14:	2b00      	cmp	r3, #0
 801bf16:	d10a      	bne.n	801bf2e <xQueueGenericSend+0x8e>
 801bf18:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bf1c:	f383 8811 	msr	BASEPRI, r3
 801bf20:	f3bf 8f6f 	isb	sy
 801bf24:	f3bf 8f4f 	dsb	sy
 801bf28:	623b      	str	r3, [r7, #32]
 801bf2a:	bf00      	nop
 801bf2c:	e7fe      	b.n	801bf2c <xQueueGenericSend+0x8c>
 801bf2e:	f001 fbb7 	bl	801d6a0 <xTaskGetSchedulerState>
 801bf32:	4603      	mov	r3, r0
 801bf34:	2b00      	cmp	r3, #0
 801bf36:	d102      	bne.n	801bf3e <xQueueGenericSend+0x9e>
 801bf38:	687b      	ldr	r3, [r7, #4]
 801bf3a:	2b00      	cmp	r3, #0
 801bf3c:	d101      	bne.n	801bf42 <xQueueGenericSend+0xa2>
 801bf3e:	2301      	movs	r3, #1
 801bf40:	e000      	b.n	801bf44 <xQueueGenericSend+0xa4>
 801bf42:	2300      	movs	r3, #0
 801bf44:	2b00      	cmp	r3, #0
 801bf46:	d10a      	bne.n	801bf5e <xQueueGenericSend+0xbe>
 801bf48:	f04f 0350 	mov.w	r3, #80	; 0x50
 801bf4c:	f383 8811 	msr	BASEPRI, r3
 801bf50:	f3bf 8f6f 	isb	sy
 801bf54:	f3bf 8f4f 	dsb	sy
 801bf58:	61fb      	str	r3, [r7, #28]
 801bf5a:	bf00      	nop
 801bf5c:	e7fe      	b.n	801bf5c <xQueueGenericSend+0xbc>
 801bf5e:	f002 fa39 	bl	801e3d4 <vPortEnterCritical>
 801bf62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bf64:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801bf66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bf68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bf6a:	429a      	cmp	r2, r3
 801bf6c:	d302      	bcc.n	801bf74 <xQueueGenericSend+0xd4>
 801bf6e:	683b      	ldr	r3, [r7, #0]
 801bf70:	2b02      	cmp	r3, #2
 801bf72:	d129      	bne.n	801bfc8 <xQueueGenericSend+0x128>
 801bf74:	683a      	ldr	r2, [r7, #0]
 801bf76:	68b9      	ldr	r1, [r7, #8]
 801bf78:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801bf7a:	f000 fa97 	bl	801c4ac <prvCopyDataToQueue>
 801bf7e:	62f8      	str	r0, [r7, #44]	; 0x2c
 801bf80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bf82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801bf84:	2b00      	cmp	r3, #0
 801bf86:	d010      	beq.n	801bfaa <xQueueGenericSend+0x10a>
 801bf88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bf8a:	3324      	adds	r3, #36	; 0x24
 801bf8c:	4618      	mov	r0, r3
 801bf8e:	f001 f965 	bl	801d25c <xTaskRemoveFromEventList>
 801bf92:	4603      	mov	r3, r0
 801bf94:	2b00      	cmp	r3, #0
 801bf96:	d013      	beq.n	801bfc0 <xQueueGenericSend+0x120>
 801bf98:	4b3f      	ldr	r3, [pc, #252]	; (801c098 <xQueueGenericSend+0x1f8>)
 801bf9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801bf9e:	601a      	str	r2, [r3, #0]
 801bfa0:	f3bf 8f4f 	dsb	sy
 801bfa4:	f3bf 8f6f 	isb	sy
 801bfa8:	e00a      	b.n	801bfc0 <xQueueGenericSend+0x120>
 801bfaa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801bfac:	2b00      	cmp	r3, #0
 801bfae:	d007      	beq.n	801bfc0 <xQueueGenericSend+0x120>
 801bfb0:	4b39      	ldr	r3, [pc, #228]	; (801c098 <xQueueGenericSend+0x1f8>)
 801bfb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801bfb6:	601a      	str	r2, [r3, #0]
 801bfb8:	f3bf 8f4f 	dsb	sy
 801bfbc:	f3bf 8f6f 	isb	sy
 801bfc0:	f002 fa38 	bl	801e434 <vPortExitCritical>
 801bfc4:	2301      	movs	r3, #1
 801bfc6:	e063      	b.n	801c090 <xQueueGenericSend+0x1f0>
 801bfc8:	687b      	ldr	r3, [r7, #4]
 801bfca:	2b00      	cmp	r3, #0
 801bfcc:	d103      	bne.n	801bfd6 <xQueueGenericSend+0x136>
 801bfce:	f002 fa31 	bl	801e434 <vPortExitCritical>
 801bfd2:	2300      	movs	r3, #0
 801bfd4:	e05c      	b.n	801c090 <xQueueGenericSend+0x1f0>
 801bfd6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801bfd8:	2b00      	cmp	r3, #0
 801bfda:	d106      	bne.n	801bfea <xQueueGenericSend+0x14a>
 801bfdc:	f107 0314 	add.w	r3, r7, #20
 801bfe0:	4618      	mov	r0, r3
 801bfe2:	f001 f9ff 	bl	801d3e4 <vTaskInternalSetTimeOutState>
 801bfe6:	2301      	movs	r3, #1
 801bfe8:	637b      	str	r3, [r7, #52]	; 0x34
 801bfea:	f002 fa23 	bl	801e434 <vPortExitCritical>
 801bfee:	f000 fea9 	bl	801cd44 <vTaskSuspendAll>
 801bff2:	f002 f9ef 	bl	801e3d4 <vPortEnterCritical>
 801bff6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801bff8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801bffc:	b25b      	sxtb	r3, r3
 801bffe:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c002:	d103      	bne.n	801c00c <xQueueGenericSend+0x16c>
 801c004:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c006:	2200      	movs	r2, #0
 801c008:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c00c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c00e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c012:	b25b      	sxtb	r3, r3
 801c014:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c018:	d103      	bne.n	801c022 <xQueueGenericSend+0x182>
 801c01a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c01c:	2200      	movs	r2, #0
 801c01e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c022:	f002 fa07 	bl	801e434 <vPortExitCritical>
 801c026:	1d3a      	adds	r2, r7, #4
 801c028:	f107 0314 	add.w	r3, r7, #20
 801c02c:	4611      	mov	r1, r2
 801c02e:	4618      	mov	r0, r3
 801c030:	f001 f9ee 	bl	801d410 <xTaskCheckForTimeOut>
 801c034:	4603      	mov	r3, r0
 801c036:	2b00      	cmp	r3, #0
 801c038:	d124      	bne.n	801c084 <xQueueGenericSend+0x1e4>
 801c03a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801c03c:	f000 fb2e 	bl	801c69c <prvIsQueueFull>
 801c040:	4603      	mov	r3, r0
 801c042:	2b00      	cmp	r3, #0
 801c044:	d018      	beq.n	801c078 <xQueueGenericSend+0x1d8>
 801c046:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c048:	3310      	adds	r3, #16
 801c04a:	687a      	ldr	r2, [r7, #4]
 801c04c:	4611      	mov	r1, r2
 801c04e:	4618      	mov	r0, r3
 801c050:	f001 f878 	bl	801d144 <vTaskPlaceOnEventList>
 801c054:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801c056:	f000 fab9 	bl	801c5cc <prvUnlockQueue>
 801c05a:	f000 fe81 	bl	801cd60 <xTaskResumeAll>
 801c05e:	4603      	mov	r3, r0
 801c060:	2b00      	cmp	r3, #0
 801c062:	f47f af7c 	bne.w	801bf5e <xQueueGenericSend+0xbe>
 801c066:	4b0c      	ldr	r3, [pc, #48]	; (801c098 <xQueueGenericSend+0x1f8>)
 801c068:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c06c:	601a      	str	r2, [r3, #0]
 801c06e:	f3bf 8f4f 	dsb	sy
 801c072:	f3bf 8f6f 	isb	sy
 801c076:	e772      	b.n	801bf5e <xQueueGenericSend+0xbe>
 801c078:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801c07a:	f000 faa7 	bl	801c5cc <prvUnlockQueue>
 801c07e:	f000 fe6f 	bl	801cd60 <xTaskResumeAll>
 801c082:	e76c      	b.n	801bf5e <xQueueGenericSend+0xbe>
 801c084:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801c086:	f000 faa1 	bl	801c5cc <prvUnlockQueue>
 801c08a:	f000 fe69 	bl	801cd60 <xTaskResumeAll>
 801c08e:	2300      	movs	r3, #0
 801c090:	4618      	mov	r0, r3
 801c092:	3738      	adds	r7, #56	; 0x38
 801c094:	46bd      	mov	sp, r7
 801c096:	bd80      	pop	{r7, pc}
 801c098:	e000ed04 	.word	0xe000ed04

0801c09c <xQueueGenericSendFromISR>:
 801c09c:	b580      	push	{r7, lr}
 801c09e:	b090      	sub	sp, #64	; 0x40
 801c0a0:	af00      	add	r7, sp, #0
 801c0a2:	60f8      	str	r0, [r7, #12]
 801c0a4:	60b9      	str	r1, [r7, #8]
 801c0a6:	607a      	str	r2, [r7, #4]
 801c0a8:	603b      	str	r3, [r7, #0]
 801c0aa:	68fb      	ldr	r3, [r7, #12]
 801c0ac:	63bb      	str	r3, [r7, #56]	; 0x38
 801c0ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c0b0:	2b00      	cmp	r3, #0
 801c0b2:	d10a      	bne.n	801c0ca <xQueueGenericSendFromISR+0x2e>
 801c0b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c0b8:	f383 8811 	msr	BASEPRI, r3
 801c0bc:	f3bf 8f6f 	isb	sy
 801c0c0:	f3bf 8f4f 	dsb	sy
 801c0c4:	62bb      	str	r3, [r7, #40]	; 0x28
 801c0c6:	bf00      	nop
 801c0c8:	e7fe      	b.n	801c0c8 <xQueueGenericSendFromISR+0x2c>
 801c0ca:	68bb      	ldr	r3, [r7, #8]
 801c0cc:	2b00      	cmp	r3, #0
 801c0ce:	d103      	bne.n	801c0d8 <xQueueGenericSendFromISR+0x3c>
 801c0d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c0d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c0d4:	2b00      	cmp	r3, #0
 801c0d6:	d101      	bne.n	801c0dc <xQueueGenericSendFromISR+0x40>
 801c0d8:	2301      	movs	r3, #1
 801c0da:	e000      	b.n	801c0de <xQueueGenericSendFromISR+0x42>
 801c0dc:	2300      	movs	r3, #0
 801c0de:	2b00      	cmp	r3, #0
 801c0e0:	d10a      	bne.n	801c0f8 <xQueueGenericSendFromISR+0x5c>
 801c0e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c0e6:	f383 8811 	msr	BASEPRI, r3
 801c0ea:	f3bf 8f6f 	isb	sy
 801c0ee:	f3bf 8f4f 	dsb	sy
 801c0f2:	627b      	str	r3, [r7, #36]	; 0x24
 801c0f4:	bf00      	nop
 801c0f6:	e7fe      	b.n	801c0f6 <xQueueGenericSendFromISR+0x5a>
 801c0f8:	683b      	ldr	r3, [r7, #0]
 801c0fa:	2b02      	cmp	r3, #2
 801c0fc:	d103      	bne.n	801c106 <xQueueGenericSendFromISR+0x6a>
 801c0fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c100:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c102:	2b01      	cmp	r3, #1
 801c104:	d101      	bne.n	801c10a <xQueueGenericSendFromISR+0x6e>
 801c106:	2301      	movs	r3, #1
 801c108:	e000      	b.n	801c10c <xQueueGenericSendFromISR+0x70>
 801c10a:	2300      	movs	r3, #0
 801c10c:	2b00      	cmp	r3, #0
 801c10e:	d10a      	bne.n	801c126 <xQueueGenericSendFromISR+0x8a>
 801c110:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c114:	f383 8811 	msr	BASEPRI, r3
 801c118:	f3bf 8f6f 	isb	sy
 801c11c:	f3bf 8f4f 	dsb	sy
 801c120:	623b      	str	r3, [r7, #32]
 801c122:	bf00      	nop
 801c124:	e7fe      	b.n	801c124 <xQueueGenericSendFromISR+0x88>
 801c126:	f002 fa37 	bl	801e598 <vPortValidateInterruptPriority>
 801c12a:	f3ef 8211 	mrs	r2, BASEPRI
 801c12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c132:	f383 8811 	msr	BASEPRI, r3
 801c136:	f3bf 8f6f 	isb	sy
 801c13a:	f3bf 8f4f 	dsb	sy
 801c13e:	61fa      	str	r2, [r7, #28]
 801c140:	61bb      	str	r3, [r7, #24]
 801c142:	69fb      	ldr	r3, [r7, #28]
 801c144:	637b      	str	r3, [r7, #52]	; 0x34
 801c146:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c148:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801c14a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c14c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c14e:	429a      	cmp	r2, r3
 801c150:	d302      	bcc.n	801c158 <xQueueGenericSendFromISR+0xbc>
 801c152:	683b      	ldr	r3, [r7, #0]
 801c154:	2b02      	cmp	r3, #2
 801c156:	d12f      	bne.n	801c1b8 <xQueueGenericSendFromISR+0x11c>
 801c158:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c15a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c15e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801c162:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c164:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c166:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c168:	683a      	ldr	r2, [r7, #0]
 801c16a:	68b9      	ldr	r1, [r7, #8]
 801c16c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 801c16e:	f000 f99d 	bl	801c4ac <prvCopyDataToQueue>
 801c172:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 801c176:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c17a:	d112      	bne.n	801c1a2 <xQueueGenericSendFromISR+0x106>
 801c17c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c17e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c180:	2b00      	cmp	r3, #0
 801c182:	d016      	beq.n	801c1b2 <xQueueGenericSendFromISR+0x116>
 801c184:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c186:	3324      	adds	r3, #36	; 0x24
 801c188:	4618      	mov	r0, r3
 801c18a:	f001 f867 	bl	801d25c <xTaskRemoveFromEventList>
 801c18e:	4603      	mov	r3, r0
 801c190:	2b00      	cmp	r3, #0
 801c192:	d00e      	beq.n	801c1b2 <xQueueGenericSendFromISR+0x116>
 801c194:	687b      	ldr	r3, [r7, #4]
 801c196:	2b00      	cmp	r3, #0
 801c198:	d00b      	beq.n	801c1b2 <xQueueGenericSendFromISR+0x116>
 801c19a:	687b      	ldr	r3, [r7, #4]
 801c19c:	2201      	movs	r2, #1
 801c19e:	601a      	str	r2, [r3, #0]
 801c1a0:	e007      	b.n	801c1b2 <xQueueGenericSendFromISR+0x116>
 801c1a2:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801c1a6:	3301      	adds	r3, #1
 801c1a8:	b2db      	uxtb	r3, r3
 801c1aa:	b25a      	sxtb	r2, r3
 801c1ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c1ae:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c1b2:	2301      	movs	r3, #1
 801c1b4:	63fb      	str	r3, [r7, #60]	; 0x3c
 801c1b6:	e001      	b.n	801c1bc <xQueueGenericSendFromISR+0x120>
 801c1b8:	2300      	movs	r3, #0
 801c1ba:	63fb      	str	r3, [r7, #60]	; 0x3c
 801c1bc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c1be:	617b      	str	r3, [r7, #20]
 801c1c0:	697b      	ldr	r3, [r7, #20]
 801c1c2:	f383 8811 	msr	BASEPRI, r3
 801c1c6:	bf00      	nop
 801c1c8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801c1ca:	4618      	mov	r0, r3
 801c1cc:	3740      	adds	r7, #64	; 0x40
 801c1ce:	46bd      	mov	sp, r7
 801c1d0:	bd80      	pop	{r7, pc}

0801c1d2 <xQueueGiveFromISR>:
 801c1d2:	b580      	push	{r7, lr}
 801c1d4:	b08e      	sub	sp, #56	; 0x38
 801c1d6:	af00      	add	r7, sp, #0
 801c1d8:	6078      	str	r0, [r7, #4]
 801c1da:	6039      	str	r1, [r7, #0]
 801c1dc:	687b      	ldr	r3, [r7, #4]
 801c1de:	633b      	str	r3, [r7, #48]	; 0x30
 801c1e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c1e2:	2b00      	cmp	r3, #0
 801c1e4:	d10a      	bne.n	801c1fc <xQueueGiveFromISR+0x2a>
 801c1e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c1ea:	f383 8811 	msr	BASEPRI, r3
 801c1ee:	f3bf 8f6f 	isb	sy
 801c1f2:	f3bf 8f4f 	dsb	sy
 801c1f6:	623b      	str	r3, [r7, #32]
 801c1f8:	bf00      	nop
 801c1fa:	e7fe      	b.n	801c1fa <xQueueGiveFromISR+0x28>
 801c1fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c1fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c200:	2b00      	cmp	r3, #0
 801c202:	d00a      	beq.n	801c21a <xQueueGiveFromISR+0x48>
 801c204:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c208:	f383 8811 	msr	BASEPRI, r3
 801c20c:	f3bf 8f6f 	isb	sy
 801c210:	f3bf 8f4f 	dsb	sy
 801c214:	61fb      	str	r3, [r7, #28]
 801c216:	bf00      	nop
 801c218:	e7fe      	b.n	801c218 <xQueueGiveFromISR+0x46>
 801c21a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c21c:	681b      	ldr	r3, [r3, #0]
 801c21e:	2b00      	cmp	r3, #0
 801c220:	d103      	bne.n	801c22a <xQueueGiveFromISR+0x58>
 801c222:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c224:	689b      	ldr	r3, [r3, #8]
 801c226:	2b00      	cmp	r3, #0
 801c228:	d101      	bne.n	801c22e <xQueueGiveFromISR+0x5c>
 801c22a:	2301      	movs	r3, #1
 801c22c:	e000      	b.n	801c230 <xQueueGiveFromISR+0x5e>
 801c22e:	2300      	movs	r3, #0
 801c230:	2b00      	cmp	r3, #0
 801c232:	d10a      	bne.n	801c24a <xQueueGiveFromISR+0x78>
 801c234:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c238:	f383 8811 	msr	BASEPRI, r3
 801c23c:	f3bf 8f6f 	isb	sy
 801c240:	f3bf 8f4f 	dsb	sy
 801c244:	61bb      	str	r3, [r7, #24]
 801c246:	bf00      	nop
 801c248:	e7fe      	b.n	801c248 <xQueueGiveFromISR+0x76>
 801c24a:	f002 f9a5 	bl	801e598 <vPortValidateInterruptPriority>
 801c24e:	f3ef 8211 	mrs	r2, BASEPRI
 801c252:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c256:	f383 8811 	msr	BASEPRI, r3
 801c25a:	f3bf 8f6f 	isb	sy
 801c25e:	f3bf 8f4f 	dsb	sy
 801c262:	617a      	str	r2, [r7, #20]
 801c264:	613b      	str	r3, [r7, #16]
 801c266:	697b      	ldr	r3, [r7, #20]
 801c268:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c26a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c26c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c26e:	62bb      	str	r3, [r7, #40]	; 0x28
 801c270:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c272:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c274:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c276:	429a      	cmp	r2, r3
 801c278:	d22b      	bcs.n	801c2d2 <xQueueGiveFromISR+0x100>
 801c27a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c27c:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c280:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801c284:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c286:	1c5a      	adds	r2, r3, #1
 801c288:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c28a:	639a      	str	r2, [r3, #56]	; 0x38
 801c28c:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 801c290:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c294:	d112      	bne.n	801c2bc <xQueueGiveFromISR+0xea>
 801c296:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c29a:	2b00      	cmp	r3, #0
 801c29c:	d016      	beq.n	801c2cc <xQueueGiveFromISR+0xfa>
 801c29e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c2a0:	3324      	adds	r3, #36	; 0x24
 801c2a2:	4618      	mov	r0, r3
 801c2a4:	f000 ffda 	bl	801d25c <xTaskRemoveFromEventList>
 801c2a8:	4603      	mov	r3, r0
 801c2aa:	2b00      	cmp	r3, #0
 801c2ac:	d00e      	beq.n	801c2cc <xQueueGiveFromISR+0xfa>
 801c2ae:	683b      	ldr	r3, [r7, #0]
 801c2b0:	2b00      	cmp	r3, #0
 801c2b2:	d00b      	beq.n	801c2cc <xQueueGiveFromISR+0xfa>
 801c2b4:	683b      	ldr	r3, [r7, #0]
 801c2b6:	2201      	movs	r2, #1
 801c2b8:	601a      	str	r2, [r3, #0]
 801c2ba:	e007      	b.n	801c2cc <xQueueGiveFromISR+0xfa>
 801c2bc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801c2c0:	3301      	adds	r3, #1
 801c2c2:	b2db      	uxtb	r3, r3
 801c2c4:	b25a      	sxtb	r2, r3
 801c2c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c2c8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c2cc:	2301      	movs	r3, #1
 801c2ce:	637b      	str	r3, [r7, #52]	; 0x34
 801c2d0:	e001      	b.n	801c2d6 <xQueueGiveFromISR+0x104>
 801c2d2:	2300      	movs	r3, #0
 801c2d4:	637b      	str	r3, [r7, #52]	; 0x34
 801c2d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c2d8:	60fb      	str	r3, [r7, #12]
 801c2da:	68fb      	ldr	r3, [r7, #12]
 801c2dc:	f383 8811 	msr	BASEPRI, r3
 801c2e0:	bf00      	nop
 801c2e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c2e4:	4618      	mov	r0, r3
 801c2e6:	3738      	adds	r7, #56	; 0x38
 801c2e8:	46bd      	mov	sp, r7
 801c2ea:	bd80      	pop	{r7, pc}

0801c2ec <xQueueReceive>:
 801c2ec:	b580      	push	{r7, lr}
 801c2ee:	b08c      	sub	sp, #48	; 0x30
 801c2f0:	af00      	add	r7, sp, #0
 801c2f2:	60f8      	str	r0, [r7, #12]
 801c2f4:	60b9      	str	r1, [r7, #8]
 801c2f6:	607a      	str	r2, [r7, #4]
 801c2f8:	2300      	movs	r3, #0
 801c2fa:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c2fc:	68fb      	ldr	r3, [r7, #12]
 801c2fe:	62bb      	str	r3, [r7, #40]	; 0x28
 801c300:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c302:	2b00      	cmp	r3, #0
 801c304:	d10a      	bne.n	801c31c <xQueueReceive+0x30>
 801c306:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c30a:	f383 8811 	msr	BASEPRI, r3
 801c30e:	f3bf 8f6f 	isb	sy
 801c312:	f3bf 8f4f 	dsb	sy
 801c316:	623b      	str	r3, [r7, #32]
 801c318:	bf00      	nop
 801c31a:	e7fe      	b.n	801c31a <xQueueReceive+0x2e>
 801c31c:	68bb      	ldr	r3, [r7, #8]
 801c31e:	2b00      	cmp	r3, #0
 801c320:	d103      	bne.n	801c32a <xQueueReceive+0x3e>
 801c322:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c324:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c326:	2b00      	cmp	r3, #0
 801c328:	d101      	bne.n	801c32e <xQueueReceive+0x42>
 801c32a:	2301      	movs	r3, #1
 801c32c:	e000      	b.n	801c330 <xQueueReceive+0x44>
 801c32e:	2300      	movs	r3, #0
 801c330:	2b00      	cmp	r3, #0
 801c332:	d10a      	bne.n	801c34a <xQueueReceive+0x5e>
 801c334:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c338:	f383 8811 	msr	BASEPRI, r3
 801c33c:	f3bf 8f6f 	isb	sy
 801c340:	f3bf 8f4f 	dsb	sy
 801c344:	61fb      	str	r3, [r7, #28]
 801c346:	bf00      	nop
 801c348:	e7fe      	b.n	801c348 <xQueueReceive+0x5c>
 801c34a:	f001 f9a9 	bl	801d6a0 <xTaskGetSchedulerState>
 801c34e:	4603      	mov	r3, r0
 801c350:	2b00      	cmp	r3, #0
 801c352:	d102      	bne.n	801c35a <xQueueReceive+0x6e>
 801c354:	687b      	ldr	r3, [r7, #4]
 801c356:	2b00      	cmp	r3, #0
 801c358:	d101      	bne.n	801c35e <xQueueReceive+0x72>
 801c35a:	2301      	movs	r3, #1
 801c35c:	e000      	b.n	801c360 <xQueueReceive+0x74>
 801c35e:	2300      	movs	r3, #0
 801c360:	2b00      	cmp	r3, #0
 801c362:	d10a      	bne.n	801c37a <xQueueReceive+0x8e>
 801c364:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c368:	f383 8811 	msr	BASEPRI, r3
 801c36c:	f3bf 8f6f 	isb	sy
 801c370:	f3bf 8f4f 	dsb	sy
 801c374:	61bb      	str	r3, [r7, #24]
 801c376:	bf00      	nop
 801c378:	e7fe      	b.n	801c378 <xQueueReceive+0x8c>
 801c37a:	f002 f82b 	bl	801e3d4 <vPortEnterCritical>
 801c37e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c380:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c382:	627b      	str	r3, [r7, #36]	; 0x24
 801c384:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c386:	2b00      	cmp	r3, #0
 801c388:	d01f      	beq.n	801c3ca <xQueueReceive+0xde>
 801c38a:	68b9      	ldr	r1, [r7, #8]
 801c38c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c38e:	f000 f8f7 	bl	801c580 <prvCopyDataFromQueue>
 801c392:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c394:	1e5a      	subs	r2, r3, #1
 801c396:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c398:	639a      	str	r2, [r3, #56]	; 0x38
 801c39a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c39c:	691b      	ldr	r3, [r3, #16]
 801c39e:	2b00      	cmp	r3, #0
 801c3a0:	d00f      	beq.n	801c3c2 <xQueueReceive+0xd6>
 801c3a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c3a4:	3310      	adds	r3, #16
 801c3a6:	4618      	mov	r0, r3
 801c3a8:	f000 ff58 	bl	801d25c <xTaskRemoveFromEventList>
 801c3ac:	4603      	mov	r3, r0
 801c3ae:	2b00      	cmp	r3, #0
 801c3b0:	d007      	beq.n	801c3c2 <xQueueReceive+0xd6>
 801c3b2:	4b3d      	ldr	r3, [pc, #244]	; (801c4a8 <xQueueReceive+0x1bc>)
 801c3b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c3b8:	601a      	str	r2, [r3, #0]
 801c3ba:	f3bf 8f4f 	dsb	sy
 801c3be:	f3bf 8f6f 	isb	sy
 801c3c2:	f002 f837 	bl	801e434 <vPortExitCritical>
 801c3c6:	2301      	movs	r3, #1
 801c3c8:	e069      	b.n	801c49e <xQueueReceive+0x1b2>
 801c3ca:	687b      	ldr	r3, [r7, #4]
 801c3cc:	2b00      	cmp	r3, #0
 801c3ce:	d103      	bne.n	801c3d8 <xQueueReceive+0xec>
 801c3d0:	f002 f830 	bl	801e434 <vPortExitCritical>
 801c3d4:	2300      	movs	r3, #0
 801c3d6:	e062      	b.n	801c49e <xQueueReceive+0x1b2>
 801c3d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c3da:	2b00      	cmp	r3, #0
 801c3dc:	d106      	bne.n	801c3ec <xQueueReceive+0x100>
 801c3de:	f107 0310 	add.w	r3, r7, #16
 801c3e2:	4618      	mov	r0, r3
 801c3e4:	f000 fffe 	bl	801d3e4 <vTaskInternalSetTimeOutState>
 801c3e8:	2301      	movs	r3, #1
 801c3ea:	62fb      	str	r3, [r7, #44]	; 0x2c
 801c3ec:	f002 f822 	bl	801e434 <vPortExitCritical>
 801c3f0:	f000 fca8 	bl	801cd44 <vTaskSuspendAll>
 801c3f4:	f001 ffee 	bl	801e3d4 <vPortEnterCritical>
 801c3f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c3fa:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c3fe:	b25b      	sxtb	r3, r3
 801c400:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c404:	d103      	bne.n	801c40e <xQueueReceive+0x122>
 801c406:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c408:	2200      	movs	r2, #0
 801c40a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c40e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c410:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c414:	b25b      	sxtb	r3, r3
 801c416:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c41a:	d103      	bne.n	801c424 <xQueueReceive+0x138>
 801c41c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c41e:	2200      	movs	r2, #0
 801c420:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c424:	f002 f806 	bl	801e434 <vPortExitCritical>
 801c428:	1d3a      	adds	r2, r7, #4
 801c42a:	f107 0310 	add.w	r3, r7, #16
 801c42e:	4611      	mov	r1, r2
 801c430:	4618      	mov	r0, r3
 801c432:	f000 ffed 	bl	801d410 <xTaskCheckForTimeOut>
 801c436:	4603      	mov	r3, r0
 801c438:	2b00      	cmp	r3, #0
 801c43a:	d123      	bne.n	801c484 <xQueueReceive+0x198>
 801c43c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c43e:	f000 f917 	bl	801c670 <prvIsQueueEmpty>
 801c442:	4603      	mov	r3, r0
 801c444:	2b00      	cmp	r3, #0
 801c446:	d017      	beq.n	801c478 <xQueueReceive+0x18c>
 801c448:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c44a:	3324      	adds	r3, #36	; 0x24
 801c44c:	687a      	ldr	r2, [r7, #4]
 801c44e:	4611      	mov	r1, r2
 801c450:	4618      	mov	r0, r3
 801c452:	f000 fe77 	bl	801d144 <vTaskPlaceOnEventList>
 801c456:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c458:	f000 f8b8 	bl	801c5cc <prvUnlockQueue>
 801c45c:	f000 fc80 	bl	801cd60 <xTaskResumeAll>
 801c460:	4603      	mov	r3, r0
 801c462:	2b00      	cmp	r3, #0
 801c464:	d189      	bne.n	801c37a <xQueueReceive+0x8e>
 801c466:	4b10      	ldr	r3, [pc, #64]	; (801c4a8 <xQueueReceive+0x1bc>)
 801c468:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801c46c:	601a      	str	r2, [r3, #0]
 801c46e:	f3bf 8f4f 	dsb	sy
 801c472:	f3bf 8f6f 	isb	sy
 801c476:	e780      	b.n	801c37a <xQueueReceive+0x8e>
 801c478:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c47a:	f000 f8a7 	bl	801c5cc <prvUnlockQueue>
 801c47e:	f000 fc6f 	bl	801cd60 <xTaskResumeAll>
 801c482:	e77a      	b.n	801c37a <xQueueReceive+0x8e>
 801c484:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c486:	f000 f8a1 	bl	801c5cc <prvUnlockQueue>
 801c48a:	f000 fc69 	bl	801cd60 <xTaskResumeAll>
 801c48e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c490:	f000 f8ee 	bl	801c670 <prvIsQueueEmpty>
 801c494:	4603      	mov	r3, r0
 801c496:	2b00      	cmp	r3, #0
 801c498:	f43f af6f 	beq.w	801c37a <xQueueReceive+0x8e>
 801c49c:	2300      	movs	r3, #0
 801c49e:	4618      	mov	r0, r3
 801c4a0:	3730      	adds	r7, #48	; 0x30
 801c4a2:	46bd      	mov	sp, r7
 801c4a4:	bd80      	pop	{r7, pc}
 801c4a6:	bf00      	nop
 801c4a8:	e000ed04 	.word	0xe000ed04

0801c4ac <prvCopyDataToQueue>:
 801c4ac:	b580      	push	{r7, lr}
 801c4ae:	b086      	sub	sp, #24
 801c4b0:	af00      	add	r7, sp, #0
 801c4b2:	60f8      	str	r0, [r7, #12]
 801c4b4:	60b9      	str	r1, [r7, #8]
 801c4b6:	607a      	str	r2, [r7, #4]
 801c4b8:	2300      	movs	r3, #0
 801c4ba:	617b      	str	r3, [r7, #20]
 801c4bc:	68fb      	ldr	r3, [r7, #12]
 801c4be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c4c0:	613b      	str	r3, [r7, #16]
 801c4c2:	68fb      	ldr	r3, [r7, #12]
 801c4c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c4c6:	2b00      	cmp	r3, #0
 801c4c8:	d10d      	bne.n	801c4e6 <prvCopyDataToQueue+0x3a>
 801c4ca:	68fb      	ldr	r3, [r7, #12]
 801c4cc:	681b      	ldr	r3, [r3, #0]
 801c4ce:	2b00      	cmp	r3, #0
 801c4d0:	d14d      	bne.n	801c56e <prvCopyDataToQueue+0xc2>
 801c4d2:	68fb      	ldr	r3, [r7, #12]
 801c4d4:	689b      	ldr	r3, [r3, #8]
 801c4d6:	4618      	mov	r0, r3
 801c4d8:	f001 f900 	bl	801d6dc <xTaskPriorityDisinherit>
 801c4dc:	6178      	str	r0, [r7, #20]
 801c4de:	68fb      	ldr	r3, [r7, #12]
 801c4e0:	2200      	movs	r2, #0
 801c4e2:	609a      	str	r2, [r3, #8]
 801c4e4:	e043      	b.n	801c56e <prvCopyDataToQueue+0xc2>
 801c4e6:	687b      	ldr	r3, [r7, #4]
 801c4e8:	2b00      	cmp	r3, #0
 801c4ea:	d119      	bne.n	801c520 <prvCopyDataToQueue+0x74>
 801c4ec:	68fb      	ldr	r3, [r7, #12]
 801c4ee:	6858      	ldr	r0, [r3, #4]
 801c4f0:	68fb      	ldr	r3, [r7, #12]
 801c4f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c4f4:	461a      	mov	r2, r3
 801c4f6:	68b9      	ldr	r1, [r7, #8]
 801c4f8:	f003 f8dd 	bl	801f6b6 <memcpy>
 801c4fc:	68fb      	ldr	r3, [r7, #12]
 801c4fe:	685a      	ldr	r2, [r3, #4]
 801c500:	68fb      	ldr	r3, [r7, #12]
 801c502:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c504:	441a      	add	r2, r3
 801c506:	68fb      	ldr	r3, [r7, #12]
 801c508:	605a      	str	r2, [r3, #4]
 801c50a:	68fb      	ldr	r3, [r7, #12]
 801c50c:	685a      	ldr	r2, [r3, #4]
 801c50e:	68fb      	ldr	r3, [r7, #12]
 801c510:	689b      	ldr	r3, [r3, #8]
 801c512:	429a      	cmp	r2, r3
 801c514:	d32b      	bcc.n	801c56e <prvCopyDataToQueue+0xc2>
 801c516:	68fb      	ldr	r3, [r7, #12]
 801c518:	681a      	ldr	r2, [r3, #0]
 801c51a:	68fb      	ldr	r3, [r7, #12]
 801c51c:	605a      	str	r2, [r3, #4]
 801c51e:	e026      	b.n	801c56e <prvCopyDataToQueue+0xc2>
 801c520:	68fb      	ldr	r3, [r7, #12]
 801c522:	68d8      	ldr	r0, [r3, #12]
 801c524:	68fb      	ldr	r3, [r7, #12]
 801c526:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c528:	461a      	mov	r2, r3
 801c52a:	68b9      	ldr	r1, [r7, #8]
 801c52c:	f003 f8c3 	bl	801f6b6 <memcpy>
 801c530:	68fb      	ldr	r3, [r7, #12]
 801c532:	68da      	ldr	r2, [r3, #12]
 801c534:	68fb      	ldr	r3, [r7, #12]
 801c536:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c538:	425b      	negs	r3, r3
 801c53a:	441a      	add	r2, r3
 801c53c:	68fb      	ldr	r3, [r7, #12]
 801c53e:	60da      	str	r2, [r3, #12]
 801c540:	68fb      	ldr	r3, [r7, #12]
 801c542:	68da      	ldr	r2, [r3, #12]
 801c544:	68fb      	ldr	r3, [r7, #12]
 801c546:	681b      	ldr	r3, [r3, #0]
 801c548:	429a      	cmp	r2, r3
 801c54a:	d207      	bcs.n	801c55c <prvCopyDataToQueue+0xb0>
 801c54c:	68fb      	ldr	r3, [r7, #12]
 801c54e:	689a      	ldr	r2, [r3, #8]
 801c550:	68fb      	ldr	r3, [r7, #12]
 801c552:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c554:	425b      	negs	r3, r3
 801c556:	441a      	add	r2, r3
 801c558:	68fb      	ldr	r3, [r7, #12]
 801c55a:	60da      	str	r2, [r3, #12]
 801c55c:	687b      	ldr	r3, [r7, #4]
 801c55e:	2b02      	cmp	r3, #2
 801c560:	d105      	bne.n	801c56e <prvCopyDataToQueue+0xc2>
 801c562:	693b      	ldr	r3, [r7, #16]
 801c564:	2b00      	cmp	r3, #0
 801c566:	d002      	beq.n	801c56e <prvCopyDataToQueue+0xc2>
 801c568:	693b      	ldr	r3, [r7, #16]
 801c56a:	3b01      	subs	r3, #1
 801c56c:	613b      	str	r3, [r7, #16]
 801c56e:	693b      	ldr	r3, [r7, #16]
 801c570:	1c5a      	adds	r2, r3, #1
 801c572:	68fb      	ldr	r3, [r7, #12]
 801c574:	639a      	str	r2, [r3, #56]	; 0x38
 801c576:	697b      	ldr	r3, [r7, #20]
 801c578:	4618      	mov	r0, r3
 801c57a:	3718      	adds	r7, #24
 801c57c:	46bd      	mov	sp, r7
 801c57e:	bd80      	pop	{r7, pc}

0801c580 <prvCopyDataFromQueue>:
 801c580:	b580      	push	{r7, lr}
 801c582:	b082      	sub	sp, #8
 801c584:	af00      	add	r7, sp, #0
 801c586:	6078      	str	r0, [r7, #4]
 801c588:	6039      	str	r1, [r7, #0]
 801c58a:	687b      	ldr	r3, [r7, #4]
 801c58c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c58e:	2b00      	cmp	r3, #0
 801c590:	d018      	beq.n	801c5c4 <prvCopyDataFromQueue+0x44>
 801c592:	687b      	ldr	r3, [r7, #4]
 801c594:	68da      	ldr	r2, [r3, #12]
 801c596:	687b      	ldr	r3, [r7, #4]
 801c598:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c59a:	441a      	add	r2, r3
 801c59c:	687b      	ldr	r3, [r7, #4]
 801c59e:	60da      	str	r2, [r3, #12]
 801c5a0:	687b      	ldr	r3, [r7, #4]
 801c5a2:	68da      	ldr	r2, [r3, #12]
 801c5a4:	687b      	ldr	r3, [r7, #4]
 801c5a6:	689b      	ldr	r3, [r3, #8]
 801c5a8:	429a      	cmp	r2, r3
 801c5aa:	d303      	bcc.n	801c5b4 <prvCopyDataFromQueue+0x34>
 801c5ac:	687b      	ldr	r3, [r7, #4]
 801c5ae:	681a      	ldr	r2, [r3, #0]
 801c5b0:	687b      	ldr	r3, [r7, #4]
 801c5b2:	60da      	str	r2, [r3, #12]
 801c5b4:	687b      	ldr	r3, [r7, #4]
 801c5b6:	68d9      	ldr	r1, [r3, #12]
 801c5b8:	687b      	ldr	r3, [r7, #4]
 801c5ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c5bc:	461a      	mov	r2, r3
 801c5be:	6838      	ldr	r0, [r7, #0]
 801c5c0:	f003 f879 	bl	801f6b6 <memcpy>
 801c5c4:	bf00      	nop
 801c5c6:	3708      	adds	r7, #8
 801c5c8:	46bd      	mov	sp, r7
 801c5ca:	bd80      	pop	{r7, pc}

0801c5cc <prvUnlockQueue>:
 801c5cc:	b580      	push	{r7, lr}
 801c5ce:	b084      	sub	sp, #16
 801c5d0:	af00      	add	r7, sp, #0
 801c5d2:	6078      	str	r0, [r7, #4]
 801c5d4:	f001 fefe 	bl	801e3d4 <vPortEnterCritical>
 801c5d8:	687b      	ldr	r3, [r7, #4]
 801c5da:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c5de:	73fb      	strb	r3, [r7, #15]
 801c5e0:	e011      	b.n	801c606 <prvUnlockQueue+0x3a>
 801c5e2:	687b      	ldr	r3, [r7, #4]
 801c5e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c5e6:	2b00      	cmp	r3, #0
 801c5e8:	d012      	beq.n	801c610 <prvUnlockQueue+0x44>
 801c5ea:	687b      	ldr	r3, [r7, #4]
 801c5ec:	3324      	adds	r3, #36	; 0x24
 801c5ee:	4618      	mov	r0, r3
 801c5f0:	f000 fe34 	bl	801d25c <xTaskRemoveFromEventList>
 801c5f4:	4603      	mov	r3, r0
 801c5f6:	2b00      	cmp	r3, #0
 801c5f8:	d001      	beq.n	801c5fe <prvUnlockQueue+0x32>
 801c5fa:	f000 ff6b 	bl	801d4d4 <vTaskMissedYield>
 801c5fe:	7bfb      	ldrb	r3, [r7, #15]
 801c600:	3b01      	subs	r3, #1
 801c602:	b2db      	uxtb	r3, r3
 801c604:	73fb      	strb	r3, [r7, #15]
 801c606:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801c60a:	2b00      	cmp	r3, #0
 801c60c:	dce9      	bgt.n	801c5e2 <prvUnlockQueue+0x16>
 801c60e:	e000      	b.n	801c612 <prvUnlockQueue+0x46>
 801c610:	bf00      	nop
 801c612:	687b      	ldr	r3, [r7, #4]
 801c614:	22ff      	movs	r2, #255	; 0xff
 801c616:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c61a:	f001 ff0b 	bl	801e434 <vPortExitCritical>
 801c61e:	f001 fed9 	bl	801e3d4 <vPortEnterCritical>
 801c622:	687b      	ldr	r3, [r7, #4]
 801c624:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c628:	73bb      	strb	r3, [r7, #14]
 801c62a:	e011      	b.n	801c650 <prvUnlockQueue+0x84>
 801c62c:	687b      	ldr	r3, [r7, #4]
 801c62e:	691b      	ldr	r3, [r3, #16]
 801c630:	2b00      	cmp	r3, #0
 801c632:	d012      	beq.n	801c65a <prvUnlockQueue+0x8e>
 801c634:	687b      	ldr	r3, [r7, #4]
 801c636:	3310      	adds	r3, #16
 801c638:	4618      	mov	r0, r3
 801c63a:	f000 fe0f 	bl	801d25c <xTaskRemoveFromEventList>
 801c63e:	4603      	mov	r3, r0
 801c640:	2b00      	cmp	r3, #0
 801c642:	d001      	beq.n	801c648 <prvUnlockQueue+0x7c>
 801c644:	f000 ff46 	bl	801d4d4 <vTaskMissedYield>
 801c648:	7bbb      	ldrb	r3, [r7, #14]
 801c64a:	3b01      	subs	r3, #1
 801c64c:	b2db      	uxtb	r3, r3
 801c64e:	73bb      	strb	r3, [r7, #14]
 801c650:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801c654:	2b00      	cmp	r3, #0
 801c656:	dce9      	bgt.n	801c62c <prvUnlockQueue+0x60>
 801c658:	e000      	b.n	801c65c <prvUnlockQueue+0x90>
 801c65a:	bf00      	nop
 801c65c:	687b      	ldr	r3, [r7, #4]
 801c65e:	22ff      	movs	r2, #255	; 0xff
 801c660:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c664:	f001 fee6 	bl	801e434 <vPortExitCritical>
 801c668:	bf00      	nop
 801c66a:	3710      	adds	r7, #16
 801c66c:	46bd      	mov	sp, r7
 801c66e:	bd80      	pop	{r7, pc}

0801c670 <prvIsQueueEmpty>:
 801c670:	b580      	push	{r7, lr}
 801c672:	b084      	sub	sp, #16
 801c674:	af00      	add	r7, sp, #0
 801c676:	6078      	str	r0, [r7, #4]
 801c678:	f001 feac 	bl	801e3d4 <vPortEnterCritical>
 801c67c:	687b      	ldr	r3, [r7, #4]
 801c67e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c680:	2b00      	cmp	r3, #0
 801c682:	d102      	bne.n	801c68a <prvIsQueueEmpty+0x1a>
 801c684:	2301      	movs	r3, #1
 801c686:	60fb      	str	r3, [r7, #12]
 801c688:	e001      	b.n	801c68e <prvIsQueueEmpty+0x1e>
 801c68a:	2300      	movs	r3, #0
 801c68c:	60fb      	str	r3, [r7, #12]
 801c68e:	f001 fed1 	bl	801e434 <vPortExitCritical>
 801c692:	68fb      	ldr	r3, [r7, #12]
 801c694:	4618      	mov	r0, r3
 801c696:	3710      	adds	r7, #16
 801c698:	46bd      	mov	sp, r7
 801c69a:	bd80      	pop	{r7, pc}

0801c69c <prvIsQueueFull>:
 801c69c:	b580      	push	{r7, lr}
 801c69e:	b084      	sub	sp, #16
 801c6a0:	af00      	add	r7, sp, #0
 801c6a2:	6078      	str	r0, [r7, #4]
 801c6a4:	f001 fe96 	bl	801e3d4 <vPortEnterCritical>
 801c6a8:	687b      	ldr	r3, [r7, #4]
 801c6aa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801c6ac:	687b      	ldr	r3, [r7, #4]
 801c6ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c6b0:	429a      	cmp	r2, r3
 801c6b2:	d102      	bne.n	801c6ba <prvIsQueueFull+0x1e>
 801c6b4:	2301      	movs	r3, #1
 801c6b6:	60fb      	str	r3, [r7, #12]
 801c6b8:	e001      	b.n	801c6be <prvIsQueueFull+0x22>
 801c6ba:	2300      	movs	r3, #0
 801c6bc:	60fb      	str	r3, [r7, #12]
 801c6be:	f001 feb9 	bl	801e434 <vPortExitCritical>
 801c6c2:	68fb      	ldr	r3, [r7, #12]
 801c6c4:	4618      	mov	r0, r3
 801c6c6:	3710      	adds	r7, #16
 801c6c8:	46bd      	mov	sp, r7
 801c6ca:	bd80      	pop	{r7, pc}

0801c6cc <vQueueAddToRegistry>:
 801c6cc:	b480      	push	{r7}
 801c6ce:	b085      	sub	sp, #20
 801c6d0:	af00      	add	r7, sp, #0
 801c6d2:	6078      	str	r0, [r7, #4]
 801c6d4:	6039      	str	r1, [r7, #0]
 801c6d6:	2300      	movs	r3, #0
 801c6d8:	60fb      	str	r3, [r7, #12]
 801c6da:	e014      	b.n	801c706 <vQueueAddToRegistry+0x3a>
 801c6dc:	4a0f      	ldr	r2, [pc, #60]	; (801c71c <vQueueAddToRegistry+0x50>)
 801c6de:	68fb      	ldr	r3, [r7, #12]
 801c6e0:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 801c6e4:	2b00      	cmp	r3, #0
 801c6e6:	d10b      	bne.n	801c700 <vQueueAddToRegistry+0x34>
 801c6e8:	490c      	ldr	r1, [pc, #48]	; (801c71c <vQueueAddToRegistry+0x50>)
 801c6ea:	68fb      	ldr	r3, [r7, #12]
 801c6ec:	683a      	ldr	r2, [r7, #0]
 801c6ee:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 801c6f2:	4a0a      	ldr	r2, [pc, #40]	; (801c71c <vQueueAddToRegistry+0x50>)
 801c6f4:	68fb      	ldr	r3, [r7, #12]
 801c6f6:	00db      	lsls	r3, r3, #3
 801c6f8:	4413      	add	r3, r2
 801c6fa:	687a      	ldr	r2, [r7, #4]
 801c6fc:	605a      	str	r2, [r3, #4]
 801c6fe:	e006      	b.n	801c70e <vQueueAddToRegistry+0x42>
 801c700:	68fb      	ldr	r3, [r7, #12]
 801c702:	3301      	adds	r3, #1
 801c704:	60fb      	str	r3, [r7, #12]
 801c706:	68fb      	ldr	r3, [r7, #12]
 801c708:	2b07      	cmp	r3, #7
 801c70a:	d9e7      	bls.n	801c6dc <vQueueAddToRegistry+0x10>
 801c70c:	bf00      	nop
 801c70e:	bf00      	nop
 801c710:	3714      	adds	r7, #20
 801c712:	46bd      	mov	sp, r7
 801c714:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c718:	4770      	bx	lr
 801c71a:	bf00      	nop
 801c71c:	200039c0 	.word	0x200039c0

0801c720 <vQueueWaitForMessageRestricted>:
 801c720:	b580      	push	{r7, lr}
 801c722:	b086      	sub	sp, #24
 801c724:	af00      	add	r7, sp, #0
 801c726:	60f8      	str	r0, [r7, #12]
 801c728:	60b9      	str	r1, [r7, #8]
 801c72a:	607a      	str	r2, [r7, #4]
 801c72c:	68fb      	ldr	r3, [r7, #12]
 801c72e:	617b      	str	r3, [r7, #20]
 801c730:	f001 fe50 	bl	801e3d4 <vPortEnterCritical>
 801c734:	697b      	ldr	r3, [r7, #20]
 801c736:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 801c73a:	b25b      	sxtb	r3, r3
 801c73c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c740:	d103      	bne.n	801c74a <vQueueWaitForMessageRestricted+0x2a>
 801c742:	697b      	ldr	r3, [r7, #20]
 801c744:	2200      	movs	r2, #0
 801c746:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801c74a:	697b      	ldr	r3, [r7, #20]
 801c74c:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 801c750:	b25b      	sxtb	r3, r3
 801c752:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801c756:	d103      	bne.n	801c760 <vQueueWaitForMessageRestricted+0x40>
 801c758:	697b      	ldr	r3, [r7, #20]
 801c75a:	2200      	movs	r2, #0
 801c75c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801c760:	f001 fe68 	bl	801e434 <vPortExitCritical>
 801c764:	697b      	ldr	r3, [r7, #20]
 801c766:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c768:	2b00      	cmp	r3, #0
 801c76a:	d106      	bne.n	801c77a <vQueueWaitForMessageRestricted+0x5a>
 801c76c:	697b      	ldr	r3, [r7, #20]
 801c76e:	3324      	adds	r3, #36	; 0x24
 801c770:	687a      	ldr	r2, [r7, #4]
 801c772:	68b9      	ldr	r1, [r7, #8]
 801c774:	4618      	mov	r0, r3
 801c776:	f000 fd45 	bl	801d204 <vTaskPlaceOnEventListRestricted>
 801c77a:	6978      	ldr	r0, [r7, #20]
 801c77c:	f7ff ff26 	bl	801c5cc <prvUnlockQueue>
 801c780:	bf00      	nop
 801c782:	3718      	adds	r7, #24
 801c784:	46bd      	mov	sp, r7
 801c786:	bd80      	pop	{r7, pc}

0801c788 <xTaskCreateStatic>:
 801c788:	b580      	push	{r7, lr}
 801c78a:	b08e      	sub	sp, #56	; 0x38
 801c78c:	af04      	add	r7, sp, #16
 801c78e:	60f8      	str	r0, [r7, #12]
 801c790:	60b9      	str	r1, [r7, #8]
 801c792:	607a      	str	r2, [r7, #4]
 801c794:	603b      	str	r3, [r7, #0]
 801c796:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c798:	2b00      	cmp	r3, #0
 801c79a:	d10a      	bne.n	801c7b2 <xTaskCreateStatic+0x2a>
 801c79c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c7a0:	f383 8811 	msr	BASEPRI, r3
 801c7a4:	f3bf 8f6f 	isb	sy
 801c7a8:	f3bf 8f4f 	dsb	sy
 801c7ac:	623b      	str	r3, [r7, #32]
 801c7ae:	bf00      	nop
 801c7b0:	e7fe      	b.n	801c7b0 <xTaskCreateStatic+0x28>
 801c7b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c7b4:	2b00      	cmp	r3, #0
 801c7b6:	d10a      	bne.n	801c7ce <xTaskCreateStatic+0x46>
 801c7b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c7bc:	f383 8811 	msr	BASEPRI, r3
 801c7c0:	f3bf 8f6f 	isb	sy
 801c7c4:	f3bf 8f4f 	dsb	sy
 801c7c8:	61fb      	str	r3, [r7, #28]
 801c7ca:	bf00      	nop
 801c7cc:	e7fe      	b.n	801c7cc <xTaskCreateStatic+0x44>
 801c7ce:	23c0      	movs	r3, #192	; 0xc0
 801c7d0:	613b      	str	r3, [r7, #16]
 801c7d2:	693b      	ldr	r3, [r7, #16]
 801c7d4:	2bc0      	cmp	r3, #192	; 0xc0
 801c7d6:	d00a      	beq.n	801c7ee <xTaskCreateStatic+0x66>
 801c7d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c7dc:	f383 8811 	msr	BASEPRI, r3
 801c7e0:	f3bf 8f6f 	isb	sy
 801c7e4:	f3bf 8f4f 	dsb	sy
 801c7e8:	61bb      	str	r3, [r7, #24]
 801c7ea:	bf00      	nop
 801c7ec:	e7fe      	b.n	801c7ec <xTaskCreateStatic+0x64>
 801c7ee:	693b      	ldr	r3, [r7, #16]
 801c7f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c7f2:	2b00      	cmp	r3, #0
 801c7f4:	d01e      	beq.n	801c834 <xTaskCreateStatic+0xac>
 801c7f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801c7f8:	2b00      	cmp	r3, #0
 801c7fa:	d01b      	beq.n	801c834 <xTaskCreateStatic+0xac>
 801c7fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801c7fe:	627b      	str	r3, [r7, #36]	; 0x24
 801c800:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c802:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801c804:	631a      	str	r2, [r3, #48]	; 0x30
 801c806:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c808:	2202      	movs	r2, #2
 801c80a:	f883 20bd 	strb.w	r2, [r3, #189]	; 0xbd
 801c80e:	2300      	movs	r3, #0
 801c810:	9303      	str	r3, [sp, #12]
 801c812:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c814:	9302      	str	r3, [sp, #8]
 801c816:	f107 0314 	add.w	r3, r7, #20
 801c81a:	9301      	str	r3, [sp, #4]
 801c81c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c81e:	9300      	str	r3, [sp, #0]
 801c820:	683b      	ldr	r3, [r7, #0]
 801c822:	687a      	ldr	r2, [r7, #4]
 801c824:	68b9      	ldr	r1, [r7, #8]
 801c826:	68f8      	ldr	r0, [r7, #12]
 801c828:	f000 f850 	bl	801c8cc <prvInitialiseNewTask>
 801c82c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801c82e:	f000 f8f7 	bl	801ca20 <prvAddNewTaskToReadyList>
 801c832:	e001      	b.n	801c838 <xTaskCreateStatic+0xb0>
 801c834:	2300      	movs	r3, #0
 801c836:	617b      	str	r3, [r7, #20]
 801c838:	697b      	ldr	r3, [r7, #20]
 801c83a:	4618      	mov	r0, r3
 801c83c:	3728      	adds	r7, #40	; 0x28
 801c83e:	46bd      	mov	sp, r7
 801c840:	bd80      	pop	{r7, pc}

0801c842 <xTaskCreate>:
 801c842:	b580      	push	{r7, lr}
 801c844:	b08c      	sub	sp, #48	; 0x30
 801c846:	af04      	add	r7, sp, #16
 801c848:	60f8      	str	r0, [r7, #12]
 801c84a:	60b9      	str	r1, [r7, #8]
 801c84c:	603b      	str	r3, [r7, #0]
 801c84e:	4613      	mov	r3, r2
 801c850:	80fb      	strh	r3, [r7, #6]
 801c852:	88fb      	ldrh	r3, [r7, #6]
 801c854:	009b      	lsls	r3, r3, #2
 801c856:	4618      	mov	r0, r3
 801c858:	f001 fede 	bl	801e618 <pvPortMalloc>
 801c85c:	6178      	str	r0, [r7, #20]
 801c85e:	697b      	ldr	r3, [r7, #20]
 801c860:	2b00      	cmp	r3, #0
 801c862:	d00e      	beq.n	801c882 <xTaskCreate+0x40>
 801c864:	20c0      	movs	r0, #192	; 0xc0
 801c866:	f001 fed7 	bl	801e618 <pvPortMalloc>
 801c86a:	61f8      	str	r0, [r7, #28]
 801c86c:	69fb      	ldr	r3, [r7, #28]
 801c86e:	2b00      	cmp	r3, #0
 801c870:	d003      	beq.n	801c87a <xTaskCreate+0x38>
 801c872:	69fb      	ldr	r3, [r7, #28]
 801c874:	697a      	ldr	r2, [r7, #20]
 801c876:	631a      	str	r2, [r3, #48]	; 0x30
 801c878:	e005      	b.n	801c886 <xTaskCreate+0x44>
 801c87a:	6978      	ldr	r0, [r7, #20]
 801c87c:	f001 ff98 	bl	801e7b0 <vPortFree>
 801c880:	e001      	b.n	801c886 <xTaskCreate+0x44>
 801c882:	2300      	movs	r3, #0
 801c884:	61fb      	str	r3, [r7, #28]
 801c886:	69fb      	ldr	r3, [r7, #28]
 801c888:	2b00      	cmp	r3, #0
 801c88a:	d017      	beq.n	801c8bc <xTaskCreate+0x7a>
 801c88c:	69fb      	ldr	r3, [r7, #28]
 801c88e:	2200      	movs	r2, #0
 801c890:	f883 20bd 	strb.w	r2, [r3, #189]	; 0xbd
 801c894:	88fa      	ldrh	r2, [r7, #6]
 801c896:	2300      	movs	r3, #0
 801c898:	9303      	str	r3, [sp, #12]
 801c89a:	69fb      	ldr	r3, [r7, #28]
 801c89c:	9302      	str	r3, [sp, #8]
 801c89e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c8a0:	9301      	str	r3, [sp, #4]
 801c8a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c8a4:	9300      	str	r3, [sp, #0]
 801c8a6:	683b      	ldr	r3, [r7, #0]
 801c8a8:	68b9      	ldr	r1, [r7, #8]
 801c8aa:	68f8      	ldr	r0, [r7, #12]
 801c8ac:	f000 f80e 	bl	801c8cc <prvInitialiseNewTask>
 801c8b0:	69f8      	ldr	r0, [r7, #28]
 801c8b2:	f000 f8b5 	bl	801ca20 <prvAddNewTaskToReadyList>
 801c8b6:	2301      	movs	r3, #1
 801c8b8:	61bb      	str	r3, [r7, #24]
 801c8ba:	e002      	b.n	801c8c2 <xTaskCreate+0x80>
 801c8bc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c8c0:	61bb      	str	r3, [r7, #24]
 801c8c2:	69bb      	ldr	r3, [r7, #24]
 801c8c4:	4618      	mov	r0, r3
 801c8c6:	3720      	adds	r7, #32
 801c8c8:	46bd      	mov	sp, r7
 801c8ca:	bd80      	pop	{r7, pc}

0801c8cc <prvInitialiseNewTask>:
 801c8cc:	b580      	push	{r7, lr}
 801c8ce:	b088      	sub	sp, #32
 801c8d0:	af00      	add	r7, sp, #0
 801c8d2:	60f8      	str	r0, [r7, #12]
 801c8d4:	60b9      	str	r1, [r7, #8]
 801c8d6:	607a      	str	r2, [r7, #4]
 801c8d8:	603b      	str	r3, [r7, #0]
 801c8da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c8dc:	6b18      	ldr	r0, [r3, #48]	; 0x30
 801c8de:	687b      	ldr	r3, [r7, #4]
 801c8e0:	009b      	lsls	r3, r3, #2
 801c8e2:	461a      	mov	r2, r3
 801c8e4:	21a5      	movs	r1, #165	; 0xa5
 801c8e6:	f002 fef4 	bl	801f6d2 <memset>
 801c8ea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c8ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 801c8ee:	687b      	ldr	r3, [r7, #4]
 801c8f0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801c8f4:	3b01      	subs	r3, #1
 801c8f6:	009b      	lsls	r3, r3, #2
 801c8f8:	4413      	add	r3, r2
 801c8fa:	61bb      	str	r3, [r7, #24]
 801c8fc:	69bb      	ldr	r3, [r7, #24]
 801c8fe:	f023 0307 	bic.w	r3, r3, #7
 801c902:	61bb      	str	r3, [r7, #24]
 801c904:	69bb      	ldr	r3, [r7, #24]
 801c906:	f003 0307 	and.w	r3, r3, #7
 801c90a:	2b00      	cmp	r3, #0
 801c90c:	d00a      	beq.n	801c924 <prvInitialiseNewTask+0x58>
 801c90e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801c912:	f383 8811 	msr	BASEPRI, r3
 801c916:	f3bf 8f6f 	isb	sy
 801c91a:	f3bf 8f4f 	dsb	sy
 801c91e:	617b      	str	r3, [r7, #20]
 801c920:	bf00      	nop
 801c922:	e7fe      	b.n	801c922 <prvInitialiseNewTask+0x56>
 801c924:	68bb      	ldr	r3, [r7, #8]
 801c926:	2b00      	cmp	r3, #0
 801c928:	d01f      	beq.n	801c96a <prvInitialiseNewTask+0x9e>
 801c92a:	2300      	movs	r3, #0
 801c92c:	61fb      	str	r3, [r7, #28]
 801c92e:	e012      	b.n	801c956 <prvInitialiseNewTask+0x8a>
 801c930:	68ba      	ldr	r2, [r7, #8]
 801c932:	69fb      	ldr	r3, [r7, #28]
 801c934:	4413      	add	r3, r2
 801c936:	7819      	ldrb	r1, [r3, #0]
 801c938:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c93a:	69fb      	ldr	r3, [r7, #28]
 801c93c:	4413      	add	r3, r2
 801c93e:	3334      	adds	r3, #52	; 0x34
 801c940:	460a      	mov	r2, r1
 801c942:	701a      	strb	r2, [r3, #0]
 801c944:	68ba      	ldr	r2, [r7, #8]
 801c946:	69fb      	ldr	r3, [r7, #28]
 801c948:	4413      	add	r3, r2
 801c94a:	781b      	ldrb	r3, [r3, #0]
 801c94c:	2b00      	cmp	r3, #0
 801c94e:	d006      	beq.n	801c95e <prvInitialiseNewTask+0x92>
 801c950:	69fb      	ldr	r3, [r7, #28]
 801c952:	3301      	adds	r3, #1
 801c954:	61fb      	str	r3, [r7, #28]
 801c956:	69fb      	ldr	r3, [r7, #28]
 801c958:	2b0f      	cmp	r3, #15
 801c95a:	d9e9      	bls.n	801c930 <prvInitialiseNewTask+0x64>
 801c95c:	e000      	b.n	801c960 <prvInitialiseNewTask+0x94>
 801c95e:	bf00      	nop
 801c960:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c962:	2200      	movs	r2, #0
 801c964:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 801c968:	e003      	b.n	801c972 <prvInitialiseNewTask+0xa6>
 801c96a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c96c:	2200      	movs	r2, #0
 801c96e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 801c972:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c974:	2b0e      	cmp	r3, #14
 801c976:	d901      	bls.n	801c97c <prvInitialiseNewTask+0xb0>
 801c978:	230e      	movs	r3, #14
 801c97a:	62bb      	str	r3, [r7, #40]	; 0x28
 801c97c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c97e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c980:	62da      	str	r2, [r3, #44]	; 0x2c
 801c982:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c984:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801c986:	64da      	str	r2, [r3, #76]	; 0x4c
 801c988:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c98a:	2200      	movs	r2, #0
 801c98c:	651a      	str	r2, [r3, #80]	; 0x50
 801c98e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c990:	3304      	adds	r3, #4
 801c992:	4618      	mov	r0, r3
 801c994:	f7ff f8b2 	bl	801bafc <vListInitialiseItem>
 801c998:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c99a:	3318      	adds	r3, #24
 801c99c:	4618      	mov	r0, r3
 801c99e:	f7ff f8ad 	bl	801bafc <vListInitialiseItem>
 801c9a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9a4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c9a6:	611a      	str	r2, [r3, #16]
 801c9a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c9aa:	f1c3 020f 	rsb	r2, r3, #15
 801c9ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9b0:	619a      	str	r2, [r3, #24]
 801c9b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9b4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801c9b6:	625a      	str	r2, [r3, #36]	; 0x24
 801c9b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9ba:	2200      	movs	r2, #0
 801c9bc:	655a      	str	r2, [r3, #84]	; 0x54
 801c9be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9c0:	2200      	movs	r2, #0
 801c9c2:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801c9c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9c8:	2200      	movs	r2, #0
 801c9ca:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801c9ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9d0:	3358      	adds	r3, #88	; 0x58
 801c9d2:	2260      	movs	r2, #96	; 0x60
 801c9d4:	2100      	movs	r1, #0
 801c9d6:	4618      	mov	r0, r3
 801c9d8:	f002 fe7b 	bl	801f6d2 <memset>
 801c9dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9de:	4a0d      	ldr	r2, [pc, #52]	; (801ca14 <prvInitialiseNewTask+0x148>)
 801c9e0:	65da      	str	r2, [r3, #92]	; 0x5c
 801c9e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9e4:	4a0c      	ldr	r2, [pc, #48]	; (801ca18 <prvInitialiseNewTask+0x14c>)
 801c9e6:	661a      	str	r2, [r3, #96]	; 0x60
 801c9e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9ea:	4a0c      	ldr	r2, [pc, #48]	; (801ca1c <prvInitialiseNewTask+0x150>)
 801c9ec:	665a      	str	r2, [r3, #100]	; 0x64
 801c9ee:	683a      	ldr	r2, [r7, #0]
 801c9f0:	68f9      	ldr	r1, [r7, #12]
 801c9f2:	69b8      	ldr	r0, [r7, #24]
 801c9f4:	f001 fbc4 	bl	801e180 <pxPortInitialiseStack>
 801c9f8:	4602      	mov	r2, r0
 801c9fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c9fc:	601a      	str	r2, [r3, #0]
 801c9fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ca00:	2b00      	cmp	r3, #0
 801ca02:	d002      	beq.n	801ca0a <prvInitialiseNewTask+0x13e>
 801ca04:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ca06:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801ca08:	601a      	str	r2, [r3, #0]
 801ca0a:	bf00      	nop
 801ca0c:	3720      	adds	r7, #32
 801ca0e:	46bd      	mov	sp, r7
 801ca10:	bd80      	pop	{r7, pc}
 801ca12:	bf00      	nop
 801ca14:	08027048 	.word	0x08027048
 801ca18:	08027068 	.word	0x08027068
 801ca1c:	08027028 	.word	0x08027028

0801ca20 <prvAddNewTaskToReadyList>:
 801ca20:	b580      	push	{r7, lr}
 801ca22:	b082      	sub	sp, #8
 801ca24:	af00      	add	r7, sp, #0
 801ca26:	6078      	str	r0, [r7, #4]
 801ca28:	f001 fcd4 	bl	801e3d4 <vPortEnterCritical>
 801ca2c:	4b2c      	ldr	r3, [pc, #176]	; (801cae0 <prvAddNewTaskToReadyList+0xc0>)
 801ca2e:	681b      	ldr	r3, [r3, #0]
 801ca30:	3301      	adds	r3, #1
 801ca32:	4a2b      	ldr	r2, [pc, #172]	; (801cae0 <prvAddNewTaskToReadyList+0xc0>)
 801ca34:	6013      	str	r3, [r2, #0]
 801ca36:	4b2b      	ldr	r3, [pc, #172]	; (801cae4 <prvAddNewTaskToReadyList+0xc4>)
 801ca38:	681b      	ldr	r3, [r3, #0]
 801ca3a:	2b00      	cmp	r3, #0
 801ca3c:	d109      	bne.n	801ca52 <prvAddNewTaskToReadyList+0x32>
 801ca3e:	4a29      	ldr	r2, [pc, #164]	; (801cae4 <prvAddNewTaskToReadyList+0xc4>)
 801ca40:	687b      	ldr	r3, [r7, #4]
 801ca42:	6013      	str	r3, [r2, #0]
 801ca44:	4b26      	ldr	r3, [pc, #152]	; (801cae0 <prvAddNewTaskToReadyList+0xc0>)
 801ca46:	681b      	ldr	r3, [r3, #0]
 801ca48:	2b01      	cmp	r3, #1
 801ca4a:	d110      	bne.n	801ca6e <prvAddNewTaskToReadyList+0x4e>
 801ca4c:	f000 fd66 	bl	801d51c <prvInitialiseTaskLists>
 801ca50:	e00d      	b.n	801ca6e <prvAddNewTaskToReadyList+0x4e>
 801ca52:	4b25      	ldr	r3, [pc, #148]	; (801cae8 <prvAddNewTaskToReadyList+0xc8>)
 801ca54:	681b      	ldr	r3, [r3, #0]
 801ca56:	2b00      	cmp	r3, #0
 801ca58:	d109      	bne.n	801ca6e <prvAddNewTaskToReadyList+0x4e>
 801ca5a:	4b22      	ldr	r3, [pc, #136]	; (801cae4 <prvAddNewTaskToReadyList+0xc4>)
 801ca5c:	681b      	ldr	r3, [r3, #0]
 801ca5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801ca60:	687b      	ldr	r3, [r7, #4]
 801ca62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca64:	429a      	cmp	r2, r3
 801ca66:	d802      	bhi.n	801ca6e <prvAddNewTaskToReadyList+0x4e>
 801ca68:	4a1e      	ldr	r2, [pc, #120]	; (801cae4 <prvAddNewTaskToReadyList+0xc4>)
 801ca6a:	687b      	ldr	r3, [r7, #4]
 801ca6c:	6013      	str	r3, [r2, #0]
 801ca6e:	4b1f      	ldr	r3, [pc, #124]	; (801caec <prvAddNewTaskToReadyList+0xcc>)
 801ca70:	681b      	ldr	r3, [r3, #0]
 801ca72:	3301      	adds	r3, #1
 801ca74:	4a1d      	ldr	r2, [pc, #116]	; (801caec <prvAddNewTaskToReadyList+0xcc>)
 801ca76:	6013      	str	r3, [r2, #0]
 801ca78:	4b1c      	ldr	r3, [pc, #112]	; (801caec <prvAddNewTaskToReadyList+0xcc>)
 801ca7a:	681a      	ldr	r2, [r3, #0]
 801ca7c:	687b      	ldr	r3, [r7, #4]
 801ca7e:	645a      	str	r2, [r3, #68]	; 0x44
 801ca80:	687b      	ldr	r3, [r7, #4]
 801ca82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca84:	2201      	movs	r2, #1
 801ca86:	409a      	lsls	r2, r3
 801ca88:	4b19      	ldr	r3, [pc, #100]	; (801caf0 <prvAddNewTaskToReadyList+0xd0>)
 801ca8a:	681b      	ldr	r3, [r3, #0]
 801ca8c:	4313      	orrs	r3, r2
 801ca8e:	4a18      	ldr	r2, [pc, #96]	; (801caf0 <prvAddNewTaskToReadyList+0xd0>)
 801ca90:	6013      	str	r3, [r2, #0]
 801ca92:	687b      	ldr	r3, [r7, #4]
 801ca94:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801ca96:	4613      	mov	r3, r2
 801ca98:	009b      	lsls	r3, r3, #2
 801ca9a:	4413      	add	r3, r2
 801ca9c:	009b      	lsls	r3, r3, #2
 801ca9e:	4a15      	ldr	r2, [pc, #84]	; (801caf4 <prvAddNewTaskToReadyList+0xd4>)
 801caa0:	441a      	add	r2, r3
 801caa2:	687b      	ldr	r3, [r7, #4]
 801caa4:	3304      	adds	r3, #4
 801caa6:	4619      	mov	r1, r3
 801caa8:	4610      	mov	r0, r2
 801caaa:	f7ff f834 	bl	801bb16 <vListInsertEnd>
 801caae:	f001 fcc1 	bl	801e434 <vPortExitCritical>
 801cab2:	4b0d      	ldr	r3, [pc, #52]	; (801cae8 <prvAddNewTaskToReadyList+0xc8>)
 801cab4:	681b      	ldr	r3, [r3, #0]
 801cab6:	2b00      	cmp	r3, #0
 801cab8:	d00e      	beq.n	801cad8 <prvAddNewTaskToReadyList+0xb8>
 801caba:	4b0a      	ldr	r3, [pc, #40]	; (801cae4 <prvAddNewTaskToReadyList+0xc4>)
 801cabc:	681b      	ldr	r3, [r3, #0]
 801cabe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cac0:	687b      	ldr	r3, [r7, #4]
 801cac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cac4:	429a      	cmp	r2, r3
 801cac6:	d207      	bcs.n	801cad8 <prvAddNewTaskToReadyList+0xb8>
 801cac8:	4b0b      	ldr	r3, [pc, #44]	; (801caf8 <prvAddNewTaskToReadyList+0xd8>)
 801caca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801cace:	601a      	str	r2, [r3, #0]
 801cad0:	f3bf 8f4f 	dsb	sy
 801cad4:	f3bf 8f6f 	isb	sy
 801cad8:	bf00      	nop
 801cada:	3708      	adds	r7, #8
 801cadc:	46bd      	mov	sp, r7
 801cade:	bd80      	pop	{r7, pc}
 801cae0:	20003ba0 	.word	0x20003ba0
 801cae4:	20003a00 	.word	0x20003a00
 801cae8:	20003bac 	.word	0x20003bac
 801caec:	20003bbc 	.word	0x20003bbc
 801caf0:	20003ba8 	.word	0x20003ba8
 801caf4:	20003a04 	.word	0x20003a04
 801caf8:	e000ed04 	.word	0xe000ed04

0801cafc <vTaskDelayUntil>:
 801cafc:	b580      	push	{r7, lr}
 801cafe:	b08a      	sub	sp, #40	; 0x28
 801cb00:	af00      	add	r7, sp, #0
 801cb02:	6078      	str	r0, [r7, #4]
 801cb04:	6039      	str	r1, [r7, #0]
 801cb06:	2300      	movs	r3, #0
 801cb08:	627b      	str	r3, [r7, #36]	; 0x24
 801cb0a:	687b      	ldr	r3, [r7, #4]
 801cb0c:	2b00      	cmp	r3, #0
 801cb0e:	d10a      	bne.n	801cb26 <vTaskDelayUntil+0x2a>
 801cb10:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cb14:	f383 8811 	msr	BASEPRI, r3
 801cb18:	f3bf 8f6f 	isb	sy
 801cb1c:	f3bf 8f4f 	dsb	sy
 801cb20:	617b      	str	r3, [r7, #20]
 801cb22:	bf00      	nop
 801cb24:	e7fe      	b.n	801cb24 <vTaskDelayUntil+0x28>
 801cb26:	683b      	ldr	r3, [r7, #0]
 801cb28:	2b00      	cmp	r3, #0
 801cb2a:	d10a      	bne.n	801cb42 <vTaskDelayUntil+0x46>
 801cb2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cb30:	f383 8811 	msr	BASEPRI, r3
 801cb34:	f3bf 8f6f 	isb	sy
 801cb38:	f3bf 8f4f 	dsb	sy
 801cb3c:	613b      	str	r3, [r7, #16]
 801cb3e:	bf00      	nop
 801cb40:	e7fe      	b.n	801cb40 <vTaskDelayUntil+0x44>
 801cb42:	4b2a      	ldr	r3, [pc, #168]	; (801cbec <vTaskDelayUntil+0xf0>)
 801cb44:	681b      	ldr	r3, [r3, #0]
 801cb46:	2b00      	cmp	r3, #0
 801cb48:	d00a      	beq.n	801cb60 <vTaskDelayUntil+0x64>
 801cb4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cb4e:	f383 8811 	msr	BASEPRI, r3
 801cb52:	f3bf 8f6f 	isb	sy
 801cb56:	f3bf 8f4f 	dsb	sy
 801cb5a:	60fb      	str	r3, [r7, #12]
 801cb5c:	bf00      	nop
 801cb5e:	e7fe      	b.n	801cb5e <vTaskDelayUntil+0x62>
 801cb60:	f000 f8f0 	bl	801cd44 <vTaskSuspendAll>
 801cb64:	4b22      	ldr	r3, [pc, #136]	; (801cbf0 <vTaskDelayUntil+0xf4>)
 801cb66:	681b      	ldr	r3, [r3, #0]
 801cb68:	623b      	str	r3, [r7, #32]
 801cb6a:	687b      	ldr	r3, [r7, #4]
 801cb6c:	681b      	ldr	r3, [r3, #0]
 801cb6e:	683a      	ldr	r2, [r7, #0]
 801cb70:	4413      	add	r3, r2
 801cb72:	61fb      	str	r3, [r7, #28]
 801cb74:	687b      	ldr	r3, [r7, #4]
 801cb76:	681b      	ldr	r3, [r3, #0]
 801cb78:	6a3a      	ldr	r2, [r7, #32]
 801cb7a:	429a      	cmp	r2, r3
 801cb7c:	d20b      	bcs.n	801cb96 <vTaskDelayUntil+0x9a>
 801cb7e:	687b      	ldr	r3, [r7, #4]
 801cb80:	681b      	ldr	r3, [r3, #0]
 801cb82:	69fa      	ldr	r2, [r7, #28]
 801cb84:	429a      	cmp	r2, r3
 801cb86:	d211      	bcs.n	801cbac <vTaskDelayUntil+0xb0>
 801cb88:	69fa      	ldr	r2, [r7, #28]
 801cb8a:	6a3b      	ldr	r3, [r7, #32]
 801cb8c:	429a      	cmp	r2, r3
 801cb8e:	d90d      	bls.n	801cbac <vTaskDelayUntil+0xb0>
 801cb90:	2301      	movs	r3, #1
 801cb92:	627b      	str	r3, [r7, #36]	; 0x24
 801cb94:	e00a      	b.n	801cbac <vTaskDelayUntil+0xb0>
 801cb96:	687b      	ldr	r3, [r7, #4]
 801cb98:	681b      	ldr	r3, [r3, #0]
 801cb9a:	69fa      	ldr	r2, [r7, #28]
 801cb9c:	429a      	cmp	r2, r3
 801cb9e:	d303      	bcc.n	801cba8 <vTaskDelayUntil+0xac>
 801cba0:	69fa      	ldr	r2, [r7, #28]
 801cba2:	6a3b      	ldr	r3, [r7, #32]
 801cba4:	429a      	cmp	r2, r3
 801cba6:	d901      	bls.n	801cbac <vTaskDelayUntil+0xb0>
 801cba8:	2301      	movs	r3, #1
 801cbaa:	627b      	str	r3, [r7, #36]	; 0x24
 801cbac:	687b      	ldr	r3, [r7, #4]
 801cbae:	69fa      	ldr	r2, [r7, #28]
 801cbb0:	601a      	str	r2, [r3, #0]
 801cbb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801cbb4:	2b00      	cmp	r3, #0
 801cbb6:	d006      	beq.n	801cbc6 <vTaskDelayUntil+0xca>
 801cbb8:	69fa      	ldr	r2, [r7, #28]
 801cbba:	6a3b      	ldr	r3, [r7, #32]
 801cbbc:	1ad3      	subs	r3, r2, r3
 801cbbe:	2100      	movs	r1, #0
 801cbc0:	4618      	mov	r0, r3
 801cbc2:	f000 ff09 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801cbc6:	f000 f8cb 	bl	801cd60 <xTaskResumeAll>
 801cbca:	61b8      	str	r0, [r7, #24]
 801cbcc:	69bb      	ldr	r3, [r7, #24]
 801cbce:	2b00      	cmp	r3, #0
 801cbd0:	d107      	bne.n	801cbe2 <vTaskDelayUntil+0xe6>
 801cbd2:	4b08      	ldr	r3, [pc, #32]	; (801cbf4 <vTaskDelayUntil+0xf8>)
 801cbd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801cbd8:	601a      	str	r2, [r3, #0]
 801cbda:	f3bf 8f4f 	dsb	sy
 801cbde:	f3bf 8f6f 	isb	sy
 801cbe2:	bf00      	nop
 801cbe4:	3728      	adds	r7, #40	; 0x28
 801cbe6:	46bd      	mov	sp, r7
 801cbe8:	bd80      	pop	{r7, pc}
 801cbea:	bf00      	nop
 801cbec:	20003bc8 	.word	0x20003bc8
 801cbf0:	20003ba4 	.word	0x20003ba4
 801cbf4:	e000ed04 	.word	0xe000ed04

0801cbf8 <vTaskDelay>:
 801cbf8:	b580      	push	{r7, lr}
 801cbfa:	b084      	sub	sp, #16
 801cbfc:	af00      	add	r7, sp, #0
 801cbfe:	6078      	str	r0, [r7, #4]
 801cc00:	2300      	movs	r3, #0
 801cc02:	60fb      	str	r3, [r7, #12]
 801cc04:	687b      	ldr	r3, [r7, #4]
 801cc06:	2b00      	cmp	r3, #0
 801cc08:	d017      	beq.n	801cc3a <vTaskDelay+0x42>
 801cc0a:	4b13      	ldr	r3, [pc, #76]	; (801cc58 <vTaskDelay+0x60>)
 801cc0c:	681b      	ldr	r3, [r3, #0]
 801cc0e:	2b00      	cmp	r3, #0
 801cc10:	d00a      	beq.n	801cc28 <vTaskDelay+0x30>
 801cc12:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cc16:	f383 8811 	msr	BASEPRI, r3
 801cc1a:	f3bf 8f6f 	isb	sy
 801cc1e:	f3bf 8f4f 	dsb	sy
 801cc22:	60bb      	str	r3, [r7, #8]
 801cc24:	bf00      	nop
 801cc26:	e7fe      	b.n	801cc26 <vTaskDelay+0x2e>
 801cc28:	f000 f88c 	bl	801cd44 <vTaskSuspendAll>
 801cc2c:	2100      	movs	r1, #0
 801cc2e:	6878      	ldr	r0, [r7, #4]
 801cc30:	f000 fed2 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801cc34:	f000 f894 	bl	801cd60 <xTaskResumeAll>
 801cc38:	60f8      	str	r0, [r7, #12]
 801cc3a:	68fb      	ldr	r3, [r7, #12]
 801cc3c:	2b00      	cmp	r3, #0
 801cc3e:	d107      	bne.n	801cc50 <vTaskDelay+0x58>
 801cc40:	4b06      	ldr	r3, [pc, #24]	; (801cc5c <vTaskDelay+0x64>)
 801cc42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801cc46:	601a      	str	r2, [r3, #0]
 801cc48:	f3bf 8f4f 	dsb	sy
 801cc4c:	f3bf 8f6f 	isb	sy
 801cc50:	bf00      	nop
 801cc52:	3710      	adds	r7, #16
 801cc54:	46bd      	mov	sp, r7
 801cc56:	bd80      	pop	{r7, pc}
 801cc58:	20003bc8 	.word	0x20003bc8
 801cc5c:	e000ed04 	.word	0xe000ed04

0801cc60 <vTaskStartScheduler>:
 801cc60:	b580      	push	{r7, lr}
 801cc62:	b08a      	sub	sp, #40	; 0x28
 801cc64:	af04      	add	r7, sp, #16
 801cc66:	2300      	movs	r3, #0
 801cc68:	60bb      	str	r3, [r7, #8]
 801cc6a:	2300      	movs	r3, #0
 801cc6c:	607b      	str	r3, [r7, #4]
 801cc6e:	463a      	mov	r2, r7
 801cc70:	1d39      	adds	r1, r7, #4
 801cc72:	f107 0308 	add.w	r3, r7, #8
 801cc76:	4618      	mov	r0, r3
 801cc78:	f7e6 fb26 	bl	80032c8 <vApplicationGetIdleTaskMemory>
 801cc7c:	6839      	ldr	r1, [r7, #0]
 801cc7e:	687b      	ldr	r3, [r7, #4]
 801cc80:	68ba      	ldr	r2, [r7, #8]
 801cc82:	9202      	str	r2, [sp, #8]
 801cc84:	9301      	str	r3, [sp, #4]
 801cc86:	2300      	movs	r3, #0
 801cc88:	9300      	str	r3, [sp, #0]
 801cc8a:	2300      	movs	r3, #0
 801cc8c:	460a      	mov	r2, r1
 801cc8e:	4925      	ldr	r1, [pc, #148]	; (801cd24 <vTaskStartScheduler+0xc4>)
 801cc90:	4825      	ldr	r0, [pc, #148]	; (801cd28 <vTaskStartScheduler+0xc8>)
 801cc92:	f7ff fd79 	bl	801c788 <xTaskCreateStatic>
 801cc96:	4603      	mov	r3, r0
 801cc98:	4a24      	ldr	r2, [pc, #144]	; (801cd2c <vTaskStartScheduler+0xcc>)
 801cc9a:	6013      	str	r3, [r2, #0]
 801cc9c:	4b23      	ldr	r3, [pc, #140]	; (801cd2c <vTaskStartScheduler+0xcc>)
 801cc9e:	681b      	ldr	r3, [r3, #0]
 801cca0:	2b00      	cmp	r3, #0
 801cca2:	d002      	beq.n	801ccaa <vTaskStartScheduler+0x4a>
 801cca4:	2301      	movs	r3, #1
 801cca6:	617b      	str	r3, [r7, #20]
 801cca8:	e001      	b.n	801ccae <vTaskStartScheduler+0x4e>
 801ccaa:	2300      	movs	r3, #0
 801ccac:	617b      	str	r3, [r7, #20]
 801ccae:	697b      	ldr	r3, [r7, #20]
 801ccb0:	2b01      	cmp	r3, #1
 801ccb2:	d102      	bne.n	801ccba <vTaskStartScheduler+0x5a>
 801ccb4:	f000 fef6 	bl	801daa4 <xTimerCreateTimerTask>
 801ccb8:	6178      	str	r0, [r7, #20]
 801ccba:	697b      	ldr	r3, [r7, #20]
 801ccbc:	2b01      	cmp	r3, #1
 801ccbe:	d11d      	bne.n	801ccfc <vTaskStartScheduler+0x9c>
 801ccc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801ccc4:	f383 8811 	msr	BASEPRI, r3
 801ccc8:	f3bf 8f6f 	isb	sy
 801cccc:	f3bf 8f4f 	dsb	sy
 801ccd0:	613b      	str	r3, [r7, #16]
 801ccd2:	bf00      	nop
 801ccd4:	4b16      	ldr	r3, [pc, #88]	; (801cd30 <vTaskStartScheduler+0xd0>)
 801ccd6:	681b      	ldr	r3, [r3, #0]
 801ccd8:	3358      	adds	r3, #88	; 0x58
 801ccda:	4a16      	ldr	r2, [pc, #88]	; (801cd34 <vTaskStartScheduler+0xd4>)
 801ccdc:	6013      	str	r3, [r2, #0]
 801ccde:	4b16      	ldr	r3, [pc, #88]	; (801cd38 <vTaskStartScheduler+0xd8>)
 801cce0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801cce4:	601a      	str	r2, [r3, #0]
 801cce6:	4b15      	ldr	r3, [pc, #84]	; (801cd3c <vTaskStartScheduler+0xdc>)
 801cce8:	2201      	movs	r2, #1
 801ccea:	601a      	str	r2, [r3, #0]
 801ccec:	4b14      	ldr	r3, [pc, #80]	; (801cd40 <vTaskStartScheduler+0xe0>)
 801ccee:	2200      	movs	r2, #0
 801ccf0:	601a      	str	r2, [r3, #0]
 801ccf2:	f7e6 facf 	bl	8003294 <configureTimerForRunTimeStats>
 801ccf6:	f001 facb 	bl	801e290 <xPortStartScheduler>
 801ccfa:	e00e      	b.n	801cd1a <vTaskStartScheduler+0xba>
 801ccfc:	697b      	ldr	r3, [r7, #20]
 801ccfe:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801cd02:	d10a      	bne.n	801cd1a <vTaskStartScheduler+0xba>
 801cd04:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cd08:	f383 8811 	msr	BASEPRI, r3
 801cd0c:	f3bf 8f6f 	isb	sy
 801cd10:	f3bf 8f4f 	dsb	sy
 801cd14:	60fb      	str	r3, [r7, #12]
 801cd16:	bf00      	nop
 801cd18:	e7fe      	b.n	801cd18 <vTaskStartScheduler+0xb8>
 801cd1a:	bf00      	nop
 801cd1c:	3718      	adds	r7, #24
 801cd1e:	46bd      	mov	sp, r7
 801cd20:	bd80      	pop	{r7, pc}
 801cd22:	bf00      	nop
 801cd24:	08026990 	.word	0x08026990
 801cd28:	0801d4ed 	.word	0x0801d4ed
 801cd2c:	20003bc4 	.word	0x20003bc4
 801cd30:	20003a00 	.word	0x20003a00
 801cd34:	20000150 	.word	0x20000150
 801cd38:	20003bc0 	.word	0x20003bc0
 801cd3c:	20003bac 	.word	0x20003bac
 801cd40:	20003ba4 	.word	0x20003ba4

0801cd44 <vTaskSuspendAll>:
 801cd44:	b480      	push	{r7}
 801cd46:	af00      	add	r7, sp, #0
 801cd48:	4b04      	ldr	r3, [pc, #16]	; (801cd5c <vTaskSuspendAll+0x18>)
 801cd4a:	681b      	ldr	r3, [r3, #0]
 801cd4c:	3301      	adds	r3, #1
 801cd4e:	4a03      	ldr	r2, [pc, #12]	; (801cd5c <vTaskSuspendAll+0x18>)
 801cd50:	6013      	str	r3, [r2, #0]
 801cd52:	bf00      	nop
 801cd54:	46bd      	mov	sp, r7
 801cd56:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd5a:	4770      	bx	lr
 801cd5c:	20003bc8 	.word	0x20003bc8

0801cd60 <xTaskResumeAll>:
 801cd60:	b580      	push	{r7, lr}
 801cd62:	b084      	sub	sp, #16
 801cd64:	af00      	add	r7, sp, #0
 801cd66:	2300      	movs	r3, #0
 801cd68:	60fb      	str	r3, [r7, #12]
 801cd6a:	2300      	movs	r3, #0
 801cd6c:	60bb      	str	r3, [r7, #8]
 801cd6e:	4b41      	ldr	r3, [pc, #260]	; (801ce74 <xTaskResumeAll+0x114>)
 801cd70:	681b      	ldr	r3, [r3, #0]
 801cd72:	2b00      	cmp	r3, #0
 801cd74:	d10a      	bne.n	801cd8c <xTaskResumeAll+0x2c>
 801cd76:	f04f 0350 	mov.w	r3, #80	; 0x50
 801cd7a:	f383 8811 	msr	BASEPRI, r3
 801cd7e:	f3bf 8f6f 	isb	sy
 801cd82:	f3bf 8f4f 	dsb	sy
 801cd86:	603b      	str	r3, [r7, #0]
 801cd88:	bf00      	nop
 801cd8a:	e7fe      	b.n	801cd8a <xTaskResumeAll+0x2a>
 801cd8c:	f001 fb22 	bl	801e3d4 <vPortEnterCritical>
 801cd90:	4b38      	ldr	r3, [pc, #224]	; (801ce74 <xTaskResumeAll+0x114>)
 801cd92:	681b      	ldr	r3, [r3, #0]
 801cd94:	3b01      	subs	r3, #1
 801cd96:	4a37      	ldr	r2, [pc, #220]	; (801ce74 <xTaskResumeAll+0x114>)
 801cd98:	6013      	str	r3, [r2, #0]
 801cd9a:	4b36      	ldr	r3, [pc, #216]	; (801ce74 <xTaskResumeAll+0x114>)
 801cd9c:	681b      	ldr	r3, [r3, #0]
 801cd9e:	2b00      	cmp	r3, #0
 801cda0:	d161      	bne.n	801ce66 <xTaskResumeAll+0x106>
 801cda2:	4b35      	ldr	r3, [pc, #212]	; (801ce78 <xTaskResumeAll+0x118>)
 801cda4:	681b      	ldr	r3, [r3, #0]
 801cda6:	2b00      	cmp	r3, #0
 801cda8:	d05d      	beq.n	801ce66 <xTaskResumeAll+0x106>
 801cdaa:	e02e      	b.n	801ce0a <xTaskResumeAll+0xaa>
 801cdac:	4b33      	ldr	r3, [pc, #204]	; (801ce7c <xTaskResumeAll+0x11c>)
 801cdae:	68db      	ldr	r3, [r3, #12]
 801cdb0:	68db      	ldr	r3, [r3, #12]
 801cdb2:	60fb      	str	r3, [r7, #12]
 801cdb4:	68fb      	ldr	r3, [r7, #12]
 801cdb6:	3318      	adds	r3, #24
 801cdb8:	4618      	mov	r0, r3
 801cdba:	f7fe ff09 	bl	801bbd0 <uxListRemove>
 801cdbe:	68fb      	ldr	r3, [r7, #12]
 801cdc0:	3304      	adds	r3, #4
 801cdc2:	4618      	mov	r0, r3
 801cdc4:	f7fe ff04 	bl	801bbd0 <uxListRemove>
 801cdc8:	68fb      	ldr	r3, [r7, #12]
 801cdca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cdcc:	2201      	movs	r2, #1
 801cdce:	409a      	lsls	r2, r3
 801cdd0:	4b2b      	ldr	r3, [pc, #172]	; (801ce80 <xTaskResumeAll+0x120>)
 801cdd2:	681b      	ldr	r3, [r3, #0]
 801cdd4:	4313      	orrs	r3, r2
 801cdd6:	4a2a      	ldr	r2, [pc, #168]	; (801ce80 <xTaskResumeAll+0x120>)
 801cdd8:	6013      	str	r3, [r2, #0]
 801cdda:	68fb      	ldr	r3, [r7, #12]
 801cddc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cdde:	4613      	mov	r3, r2
 801cde0:	009b      	lsls	r3, r3, #2
 801cde2:	4413      	add	r3, r2
 801cde4:	009b      	lsls	r3, r3, #2
 801cde6:	4a27      	ldr	r2, [pc, #156]	; (801ce84 <xTaskResumeAll+0x124>)
 801cde8:	441a      	add	r2, r3
 801cdea:	68fb      	ldr	r3, [r7, #12]
 801cdec:	3304      	adds	r3, #4
 801cdee:	4619      	mov	r1, r3
 801cdf0:	4610      	mov	r0, r2
 801cdf2:	f7fe fe90 	bl	801bb16 <vListInsertEnd>
 801cdf6:	68fb      	ldr	r3, [r7, #12]
 801cdf8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cdfa:	4b23      	ldr	r3, [pc, #140]	; (801ce88 <xTaskResumeAll+0x128>)
 801cdfc:	681b      	ldr	r3, [r3, #0]
 801cdfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce00:	429a      	cmp	r2, r3
 801ce02:	d302      	bcc.n	801ce0a <xTaskResumeAll+0xaa>
 801ce04:	4b21      	ldr	r3, [pc, #132]	; (801ce8c <xTaskResumeAll+0x12c>)
 801ce06:	2201      	movs	r2, #1
 801ce08:	601a      	str	r2, [r3, #0]
 801ce0a:	4b1c      	ldr	r3, [pc, #112]	; (801ce7c <xTaskResumeAll+0x11c>)
 801ce0c:	681b      	ldr	r3, [r3, #0]
 801ce0e:	2b00      	cmp	r3, #0
 801ce10:	d1cc      	bne.n	801cdac <xTaskResumeAll+0x4c>
 801ce12:	68fb      	ldr	r3, [r7, #12]
 801ce14:	2b00      	cmp	r3, #0
 801ce16:	d001      	beq.n	801ce1c <xTaskResumeAll+0xbc>
 801ce18:	f000 fc22 	bl	801d660 <prvResetNextTaskUnblockTime>
 801ce1c:	4b1c      	ldr	r3, [pc, #112]	; (801ce90 <xTaskResumeAll+0x130>)
 801ce1e:	681b      	ldr	r3, [r3, #0]
 801ce20:	607b      	str	r3, [r7, #4]
 801ce22:	687b      	ldr	r3, [r7, #4]
 801ce24:	2b00      	cmp	r3, #0
 801ce26:	d010      	beq.n	801ce4a <xTaskResumeAll+0xea>
 801ce28:	f000 f846 	bl	801ceb8 <xTaskIncrementTick>
 801ce2c:	4603      	mov	r3, r0
 801ce2e:	2b00      	cmp	r3, #0
 801ce30:	d002      	beq.n	801ce38 <xTaskResumeAll+0xd8>
 801ce32:	4b16      	ldr	r3, [pc, #88]	; (801ce8c <xTaskResumeAll+0x12c>)
 801ce34:	2201      	movs	r2, #1
 801ce36:	601a      	str	r2, [r3, #0]
 801ce38:	687b      	ldr	r3, [r7, #4]
 801ce3a:	3b01      	subs	r3, #1
 801ce3c:	607b      	str	r3, [r7, #4]
 801ce3e:	687b      	ldr	r3, [r7, #4]
 801ce40:	2b00      	cmp	r3, #0
 801ce42:	d1f1      	bne.n	801ce28 <xTaskResumeAll+0xc8>
 801ce44:	4b12      	ldr	r3, [pc, #72]	; (801ce90 <xTaskResumeAll+0x130>)
 801ce46:	2200      	movs	r2, #0
 801ce48:	601a      	str	r2, [r3, #0]
 801ce4a:	4b10      	ldr	r3, [pc, #64]	; (801ce8c <xTaskResumeAll+0x12c>)
 801ce4c:	681b      	ldr	r3, [r3, #0]
 801ce4e:	2b00      	cmp	r3, #0
 801ce50:	d009      	beq.n	801ce66 <xTaskResumeAll+0x106>
 801ce52:	2301      	movs	r3, #1
 801ce54:	60bb      	str	r3, [r7, #8]
 801ce56:	4b0f      	ldr	r3, [pc, #60]	; (801ce94 <xTaskResumeAll+0x134>)
 801ce58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801ce5c:	601a      	str	r2, [r3, #0]
 801ce5e:	f3bf 8f4f 	dsb	sy
 801ce62:	f3bf 8f6f 	isb	sy
 801ce66:	f001 fae5 	bl	801e434 <vPortExitCritical>
 801ce6a:	68bb      	ldr	r3, [r7, #8]
 801ce6c:	4618      	mov	r0, r3
 801ce6e:	3710      	adds	r7, #16
 801ce70:	46bd      	mov	sp, r7
 801ce72:	bd80      	pop	{r7, pc}
 801ce74:	20003bc8 	.word	0x20003bc8
 801ce78:	20003ba0 	.word	0x20003ba0
 801ce7c:	20003b60 	.word	0x20003b60
 801ce80:	20003ba8 	.word	0x20003ba8
 801ce84:	20003a04 	.word	0x20003a04
 801ce88:	20003a00 	.word	0x20003a00
 801ce8c:	20003bb4 	.word	0x20003bb4
 801ce90:	20003bb0 	.word	0x20003bb0
 801ce94:	e000ed04 	.word	0xe000ed04

0801ce98 <xTaskGetTickCount>:
 801ce98:	b480      	push	{r7}
 801ce9a:	b083      	sub	sp, #12
 801ce9c:	af00      	add	r7, sp, #0
 801ce9e:	4b05      	ldr	r3, [pc, #20]	; (801ceb4 <xTaskGetTickCount+0x1c>)
 801cea0:	681b      	ldr	r3, [r3, #0]
 801cea2:	607b      	str	r3, [r7, #4]
 801cea4:	687b      	ldr	r3, [r7, #4]
 801cea6:	4618      	mov	r0, r3
 801cea8:	370c      	adds	r7, #12
 801ceaa:	46bd      	mov	sp, r7
 801ceac:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ceb0:	4770      	bx	lr
 801ceb2:	bf00      	nop
 801ceb4:	20003ba4 	.word	0x20003ba4

0801ceb8 <xTaskIncrementTick>:
 801ceb8:	b580      	push	{r7, lr}
 801ceba:	b086      	sub	sp, #24
 801cebc:	af00      	add	r7, sp, #0
 801cebe:	2300      	movs	r3, #0
 801cec0:	617b      	str	r3, [r7, #20]
 801cec2:	4b4e      	ldr	r3, [pc, #312]	; (801cffc <xTaskIncrementTick+0x144>)
 801cec4:	681b      	ldr	r3, [r3, #0]
 801cec6:	2b00      	cmp	r3, #0
 801cec8:	f040 808e 	bne.w	801cfe8 <xTaskIncrementTick+0x130>
 801cecc:	4b4c      	ldr	r3, [pc, #304]	; (801d000 <xTaskIncrementTick+0x148>)
 801cece:	681b      	ldr	r3, [r3, #0]
 801ced0:	3301      	adds	r3, #1
 801ced2:	613b      	str	r3, [r7, #16]
 801ced4:	4a4a      	ldr	r2, [pc, #296]	; (801d000 <xTaskIncrementTick+0x148>)
 801ced6:	693b      	ldr	r3, [r7, #16]
 801ced8:	6013      	str	r3, [r2, #0]
 801ceda:	693b      	ldr	r3, [r7, #16]
 801cedc:	2b00      	cmp	r3, #0
 801cede:	d120      	bne.n	801cf22 <xTaskIncrementTick+0x6a>
 801cee0:	4b48      	ldr	r3, [pc, #288]	; (801d004 <xTaskIncrementTick+0x14c>)
 801cee2:	681b      	ldr	r3, [r3, #0]
 801cee4:	681b      	ldr	r3, [r3, #0]
 801cee6:	2b00      	cmp	r3, #0
 801cee8:	d00a      	beq.n	801cf00 <xTaskIncrementTick+0x48>
 801ceea:	f04f 0350 	mov.w	r3, #80	; 0x50
 801ceee:	f383 8811 	msr	BASEPRI, r3
 801cef2:	f3bf 8f6f 	isb	sy
 801cef6:	f3bf 8f4f 	dsb	sy
 801cefa:	603b      	str	r3, [r7, #0]
 801cefc:	bf00      	nop
 801cefe:	e7fe      	b.n	801cefe <xTaskIncrementTick+0x46>
 801cf00:	4b40      	ldr	r3, [pc, #256]	; (801d004 <xTaskIncrementTick+0x14c>)
 801cf02:	681b      	ldr	r3, [r3, #0]
 801cf04:	60fb      	str	r3, [r7, #12]
 801cf06:	4b40      	ldr	r3, [pc, #256]	; (801d008 <xTaskIncrementTick+0x150>)
 801cf08:	681b      	ldr	r3, [r3, #0]
 801cf0a:	4a3e      	ldr	r2, [pc, #248]	; (801d004 <xTaskIncrementTick+0x14c>)
 801cf0c:	6013      	str	r3, [r2, #0]
 801cf0e:	4a3e      	ldr	r2, [pc, #248]	; (801d008 <xTaskIncrementTick+0x150>)
 801cf10:	68fb      	ldr	r3, [r7, #12]
 801cf12:	6013      	str	r3, [r2, #0]
 801cf14:	4b3d      	ldr	r3, [pc, #244]	; (801d00c <xTaskIncrementTick+0x154>)
 801cf16:	681b      	ldr	r3, [r3, #0]
 801cf18:	3301      	adds	r3, #1
 801cf1a:	4a3c      	ldr	r2, [pc, #240]	; (801d00c <xTaskIncrementTick+0x154>)
 801cf1c:	6013      	str	r3, [r2, #0]
 801cf1e:	f000 fb9f 	bl	801d660 <prvResetNextTaskUnblockTime>
 801cf22:	4b3b      	ldr	r3, [pc, #236]	; (801d010 <xTaskIncrementTick+0x158>)
 801cf24:	681b      	ldr	r3, [r3, #0]
 801cf26:	693a      	ldr	r2, [r7, #16]
 801cf28:	429a      	cmp	r2, r3
 801cf2a:	d348      	bcc.n	801cfbe <xTaskIncrementTick+0x106>
 801cf2c:	4b35      	ldr	r3, [pc, #212]	; (801d004 <xTaskIncrementTick+0x14c>)
 801cf2e:	681b      	ldr	r3, [r3, #0]
 801cf30:	681b      	ldr	r3, [r3, #0]
 801cf32:	2b00      	cmp	r3, #0
 801cf34:	d104      	bne.n	801cf40 <xTaskIncrementTick+0x88>
 801cf36:	4b36      	ldr	r3, [pc, #216]	; (801d010 <xTaskIncrementTick+0x158>)
 801cf38:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801cf3c:	601a      	str	r2, [r3, #0]
 801cf3e:	e03e      	b.n	801cfbe <xTaskIncrementTick+0x106>
 801cf40:	4b30      	ldr	r3, [pc, #192]	; (801d004 <xTaskIncrementTick+0x14c>)
 801cf42:	681b      	ldr	r3, [r3, #0]
 801cf44:	68db      	ldr	r3, [r3, #12]
 801cf46:	68db      	ldr	r3, [r3, #12]
 801cf48:	60bb      	str	r3, [r7, #8]
 801cf4a:	68bb      	ldr	r3, [r7, #8]
 801cf4c:	685b      	ldr	r3, [r3, #4]
 801cf4e:	607b      	str	r3, [r7, #4]
 801cf50:	693a      	ldr	r2, [r7, #16]
 801cf52:	687b      	ldr	r3, [r7, #4]
 801cf54:	429a      	cmp	r2, r3
 801cf56:	d203      	bcs.n	801cf60 <xTaskIncrementTick+0xa8>
 801cf58:	4a2d      	ldr	r2, [pc, #180]	; (801d010 <xTaskIncrementTick+0x158>)
 801cf5a:	687b      	ldr	r3, [r7, #4]
 801cf5c:	6013      	str	r3, [r2, #0]
 801cf5e:	e02e      	b.n	801cfbe <xTaskIncrementTick+0x106>
 801cf60:	68bb      	ldr	r3, [r7, #8]
 801cf62:	3304      	adds	r3, #4
 801cf64:	4618      	mov	r0, r3
 801cf66:	f7fe fe33 	bl	801bbd0 <uxListRemove>
 801cf6a:	68bb      	ldr	r3, [r7, #8]
 801cf6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf6e:	2b00      	cmp	r3, #0
 801cf70:	d004      	beq.n	801cf7c <xTaskIncrementTick+0xc4>
 801cf72:	68bb      	ldr	r3, [r7, #8]
 801cf74:	3318      	adds	r3, #24
 801cf76:	4618      	mov	r0, r3
 801cf78:	f7fe fe2a 	bl	801bbd0 <uxListRemove>
 801cf7c:	68bb      	ldr	r3, [r7, #8]
 801cf7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf80:	2201      	movs	r2, #1
 801cf82:	409a      	lsls	r2, r3
 801cf84:	4b23      	ldr	r3, [pc, #140]	; (801d014 <xTaskIncrementTick+0x15c>)
 801cf86:	681b      	ldr	r3, [r3, #0]
 801cf88:	4313      	orrs	r3, r2
 801cf8a:	4a22      	ldr	r2, [pc, #136]	; (801d014 <xTaskIncrementTick+0x15c>)
 801cf8c:	6013      	str	r3, [r2, #0]
 801cf8e:	68bb      	ldr	r3, [r7, #8]
 801cf90:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cf92:	4613      	mov	r3, r2
 801cf94:	009b      	lsls	r3, r3, #2
 801cf96:	4413      	add	r3, r2
 801cf98:	009b      	lsls	r3, r3, #2
 801cf9a:	4a1f      	ldr	r2, [pc, #124]	; (801d018 <xTaskIncrementTick+0x160>)
 801cf9c:	441a      	add	r2, r3
 801cf9e:	68bb      	ldr	r3, [r7, #8]
 801cfa0:	3304      	adds	r3, #4
 801cfa2:	4619      	mov	r1, r3
 801cfa4:	4610      	mov	r0, r2
 801cfa6:	f7fe fdb6 	bl	801bb16 <vListInsertEnd>
 801cfaa:	68bb      	ldr	r3, [r7, #8]
 801cfac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cfae:	4b1b      	ldr	r3, [pc, #108]	; (801d01c <xTaskIncrementTick+0x164>)
 801cfb0:	681b      	ldr	r3, [r3, #0]
 801cfb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfb4:	429a      	cmp	r2, r3
 801cfb6:	d3b9      	bcc.n	801cf2c <xTaskIncrementTick+0x74>
 801cfb8:	2301      	movs	r3, #1
 801cfba:	617b      	str	r3, [r7, #20]
 801cfbc:	e7b6      	b.n	801cf2c <xTaskIncrementTick+0x74>
 801cfbe:	4b17      	ldr	r3, [pc, #92]	; (801d01c <xTaskIncrementTick+0x164>)
 801cfc0:	681b      	ldr	r3, [r3, #0]
 801cfc2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801cfc4:	4914      	ldr	r1, [pc, #80]	; (801d018 <xTaskIncrementTick+0x160>)
 801cfc6:	4613      	mov	r3, r2
 801cfc8:	009b      	lsls	r3, r3, #2
 801cfca:	4413      	add	r3, r2
 801cfcc:	009b      	lsls	r3, r3, #2
 801cfce:	440b      	add	r3, r1
 801cfd0:	681b      	ldr	r3, [r3, #0]
 801cfd2:	2b01      	cmp	r3, #1
 801cfd4:	d901      	bls.n	801cfda <xTaskIncrementTick+0x122>
 801cfd6:	2301      	movs	r3, #1
 801cfd8:	617b      	str	r3, [r7, #20]
 801cfda:	4b11      	ldr	r3, [pc, #68]	; (801d020 <xTaskIncrementTick+0x168>)
 801cfdc:	681b      	ldr	r3, [r3, #0]
 801cfde:	2b00      	cmp	r3, #0
 801cfe0:	d007      	beq.n	801cff2 <xTaskIncrementTick+0x13a>
 801cfe2:	2301      	movs	r3, #1
 801cfe4:	617b      	str	r3, [r7, #20]
 801cfe6:	e004      	b.n	801cff2 <xTaskIncrementTick+0x13a>
 801cfe8:	4b0e      	ldr	r3, [pc, #56]	; (801d024 <xTaskIncrementTick+0x16c>)
 801cfea:	681b      	ldr	r3, [r3, #0]
 801cfec:	3301      	adds	r3, #1
 801cfee:	4a0d      	ldr	r2, [pc, #52]	; (801d024 <xTaskIncrementTick+0x16c>)
 801cff0:	6013      	str	r3, [r2, #0]
 801cff2:	697b      	ldr	r3, [r7, #20]
 801cff4:	4618      	mov	r0, r3
 801cff6:	3718      	adds	r7, #24
 801cff8:	46bd      	mov	sp, r7
 801cffa:	bd80      	pop	{r7, pc}
 801cffc:	20003bc8 	.word	0x20003bc8
 801d000:	20003ba4 	.word	0x20003ba4
 801d004:	20003b58 	.word	0x20003b58
 801d008:	20003b5c 	.word	0x20003b5c
 801d00c:	20003bb8 	.word	0x20003bb8
 801d010:	20003bc0 	.word	0x20003bc0
 801d014:	20003ba8 	.word	0x20003ba8
 801d018:	20003a04 	.word	0x20003a04
 801d01c:	20003a00 	.word	0x20003a00
 801d020:	20003bb4 	.word	0x20003bb4
 801d024:	20003bb0 	.word	0x20003bb0

0801d028 <vTaskSwitchContext>:
 801d028:	b580      	push	{r7, lr}
 801d02a:	b086      	sub	sp, #24
 801d02c:	af00      	add	r7, sp, #0
 801d02e:	4b3d      	ldr	r3, [pc, #244]	; (801d124 <vTaskSwitchContext+0xfc>)
 801d030:	681b      	ldr	r3, [r3, #0]
 801d032:	2b00      	cmp	r3, #0
 801d034:	d003      	beq.n	801d03e <vTaskSwitchContext+0x16>
 801d036:	4b3c      	ldr	r3, [pc, #240]	; (801d128 <vTaskSwitchContext+0x100>)
 801d038:	2201      	movs	r2, #1
 801d03a:	601a      	str	r2, [r3, #0]
 801d03c:	e06e      	b.n	801d11c <vTaskSwitchContext+0xf4>
 801d03e:	4b3a      	ldr	r3, [pc, #232]	; (801d128 <vTaskSwitchContext+0x100>)
 801d040:	2200      	movs	r2, #0
 801d042:	601a      	str	r2, [r3, #0]
 801d044:	f7e6 f92d 	bl	80032a2 <getRunTimeCounterValue>
 801d048:	4603      	mov	r3, r0
 801d04a:	4a38      	ldr	r2, [pc, #224]	; (801d12c <vTaskSwitchContext+0x104>)
 801d04c:	6013      	str	r3, [r2, #0]
 801d04e:	4b37      	ldr	r3, [pc, #220]	; (801d12c <vTaskSwitchContext+0x104>)
 801d050:	681a      	ldr	r2, [r3, #0]
 801d052:	4b37      	ldr	r3, [pc, #220]	; (801d130 <vTaskSwitchContext+0x108>)
 801d054:	681b      	ldr	r3, [r3, #0]
 801d056:	429a      	cmp	r2, r3
 801d058:	d909      	bls.n	801d06e <vTaskSwitchContext+0x46>
 801d05a:	4b36      	ldr	r3, [pc, #216]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d05c:	681b      	ldr	r3, [r3, #0]
 801d05e:	6d59      	ldr	r1, [r3, #84]	; 0x54
 801d060:	4a32      	ldr	r2, [pc, #200]	; (801d12c <vTaskSwitchContext+0x104>)
 801d062:	6810      	ldr	r0, [r2, #0]
 801d064:	4a32      	ldr	r2, [pc, #200]	; (801d130 <vTaskSwitchContext+0x108>)
 801d066:	6812      	ldr	r2, [r2, #0]
 801d068:	1a82      	subs	r2, r0, r2
 801d06a:	440a      	add	r2, r1
 801d06c:	655a      	str	r2, [r3, #84]	; 0x54
 801d06e:	4b2f      	ldr	r3, [pc, #188]	; (801d12c <vTaskSwitchContext+0x104>)
 801d070:	681b      	ldr	r3, [r3, #0]
 801d072:	4a2f      	ldr	r2, [pc, #188]	; (801d130 <vTaskSwitchContext+0x108>)
 801d074:	6013      	str	r3, [r2, #0]
 801d076:	4b2f      	ldr	r3, [pc, #188]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d078:	681b      	ldr	r3, [r3, #0]
 801d07a:	681a      	ldr	r2, [r3, #0]
 801d07c:	4b2d      	ldr	r3, [pc, #180]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d07e:	681b      	ldr	r3, [r3, #0]
 801d080:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d082:	429a      	cmp	r2, r3
 801d084:	d808      	bhi.n	801d098 <vTaskSwitchContext+0x70>
 801d086:	4b2b      	ldr	r3, [pc, #172]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d088:	681a      	ldr	r2, [r3, #0]
 801d08a:	4b2a      	ldr	r3, [pc, #168]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d08c:	681b      	ldr	r3, [r3, #0]
 801d08e:	3334      	adds	r3, #52	; 0x34
 801d090:	4619      	mov	r1, r3
 801d092:	4610      	mov	r0, r2
 801d094:	f7e6 f90d 	bl	80032b2 <vApplicationStackOverflowHook>
 801d098:	4b27      	ldr	r3, [pc, #156]	; (801d138 <vTaskSwitchContext+0x110>)
 801d09a:	681b      	ldr	r3, [r3, #0]
 801d09c:	60fb      	str	r3, [r7, #12]
 801d09e:	68fb      	ldr	r3, [r7, #12]
 801d0a0:	fab3 f383 	clz	r3, r3
 801d0a4:	72fb      	strb	r3, [r7, #11]
 801d0a6:	7afb      	ldrb	r3, [r7, #11]
 801d0a8:	f1c3 031f 	rsb	r3, r3, #31
 801d0ac:	617b      	str	r3, [r7, #20]
 801d0ae:	4923      	ldr	r1, [pc, #140]	; (801d13c <vTaskSwitchContext+0x114>)
 801d0b0:	697a      	ldr	r2, [r7, #20]
 801d0b2:	4613      	mov	r3, r2
 801d0b4:	009b      	lsls	r3, r3, #2
 801d0b6:	4413      	add	r3, r2
 801d0b8:	009b      	lsls	r3, r3, #2
 801d0ba:	440b      	add	r3, r1
 801d0bc:	681b      	ldr	r3, [r3, #0]
 801d0be:	2b00      	cmp	r3, #0
 801d0c0:	d10a      	bne.n	801d0d8 <vTaskSwitchContext+0xb0>
 801d0c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d0c6:	f383 8811 	msr	BASEPRI, r3
 801d0ca:	f3bf 8f6f 	isb	sy
 801d0ce:	f3bf 8f4f 	dsb	sy
 801d0d2:	607b      	str	r3, [r7, #4]
 801d0d4:	bf00      	nop
 801d0d6:	e7fe      	b.n	801d0d6 <vTaskSwitchContext+0xae>
 801d0d8:	697a      	ldr	r2, [r7, #20]
 801d0da:	4613      	mov	r3, r2
 801d0dc:	009b      	lsls	r3, r3, #2
 801d0de:	4413      	add	r3, r2
 801d0e0:	009b      	lsls	r3, r3, #2
 801d0e2:	4a16      	ldr	r2, [pc, #88]	; (801d13c <vTaskSwitchContext+0x114>)
 801d0e4:	4413      	add	r3, r2
 801d0e6:	613b      	str	r3, [r7, #16]
 801d0e8:	693b      	ldr	r3, [r7, #16]
 801d0ea:	685b      	ldr	r3, [r3, #4]
 801d0ec:	685a      	ldr	r2, [r3, #4]
 801d0ee:	693b      	ldr	r3, [r7, #16]
 801d0f0:	605a      	str	r2, [r3, #4]
 801d0f2:	693b      	ldr	r3, [r7, #16]
 801d0f4:	685a      	ldr	r2, [r3, #4]
 801d0f6:	693b      	ldr	r3, [r7, #16]
 801d0f8:	3308      	adds	r3, #8
 801d0fa:	429a      	cmp	r2, r3
 801d0fc:	d104      	bne.n	801d108 <vTaskSwitchContext+0xe0>
 801d0fe:	693b      	ldr	r3, [r7, #16]
 801d100:	685b      	ldr	r3, [r3, #4]
 801d102:	685a      	ldr	r2, [r3, #4]
 801d104:	693b      	ldr	r3, [r7, #16]
 801d106:	605a      	str	r2, [r3, #4]
 801d108:	693b      	ldr	r3, [r7, #16]
 801d10a:	685b      	ldr	r3, [r3, #4]
 801d10c:	68db      	ldr	r3, [r3, #12]
 801d10e:	4a09      	ldr	r2, [pc, #36]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d110:	6013      	str	r3, [r2, #0]
 801d112:	4b08      	ldr	r3, [pc, #32]	; (801d134 <vTaskSwitchContext+0x10c>)
 801d114:	681b      	ldr	r3, [r3, #0]
 801d116:	3358      	adds	r3, #88	; 0x58
 801d118:	4a09      	ldr	r2, [pc, #36]	; (801d140 <vTaskSwitchContext+0x118>)
 801d11a:	6013      	str	r3, [r2, #0]
 801d11c:	bf00      	nop
 801d11e:	3718      	adds	r7, #24
 801d120:	46bd      	mov	sp, r7
 801d122:	bd80      	pop	{r7, pc}
 801d124:	20003bc8 	.word	0x20003bc8
 801d128:	20003bb4 	.word	0x20003bb4
 801d12c:	20003bd0 	.word	0x20003bd0
 801d130:	20003bcc 	.word	0x20003bcc
 801d134:	20003a00 	.word	0x20003a00
 801d138:	20003ba8 	.word	0x20003ba8
 801d13c:	20003a04 	.word	0x20003a04
 801d140:	20000150 	.word	0x20000150

0801d144 <vTaskPlaceOnEventList>:
 801d144:	b580      	push	{r7, lr}
 801d146:	b084      	sub	sp, #16
 801d148:	af00      	add	r7, sp, #0
 801d14a:	6078      	str	r0, [r7, #4]
 801d14c:	6039      	str	r1, [r7, #0]
 801d14e:	687b      	ldr	r3, [r7, #4]
 801d150:	2b00      	cmp	r3, #0
 801d152:	d10a      	bne.n	801d16a <vTaskPlaceOnEventList+0x26>
 801d154:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d158:	f383 8811 	msr	BASEPRI, r3
 801d15c:	f3bf 8f6f 	isb	sy
 801d160:	f3bf 8f4f 	dsb	sy
 801d164:	60fb      	str	r3, [r7, #12]
 801d166:	bf00      	nop
 801d168:	e7fe      	b.n	801d168 <vTaskPlaceOnEventList+0x24>
 801d16a:	4b07      	ldr	r3, [pc, #28]	; (801d188 <vTaskPlaceOnEventList+0x44>)
 801d16c:	681b      	ldr	r3, [r3, #0]
 801d16e:	3318      	adds	r3, #24
 801d170:	4619      	mov	r1, r3
 801d172:	6878      	ldr	r0, [r7, #4]
 801d174:	f7fe fcf3 	bl	801bb5e <vListInsert>
 801d178:	2101      	movs	r1, #1
 801d17a:	6838      	ldr	r0, [r7, #0]
 801d17c:	f000 fc2c 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801d180:	bf00      	nop
 801d182:	3710      	adds	r7, #16
 801d184:	46bd      	mov	sp, r7
 801d186:	bd80      	pop	{r7, pc}
 801d188:	20003a00 	.word	0x20003a00

0801d18c <vTaskPlaceOnUnorderedEventList>:
 801d18c:	b580      	push	{r7, lr}
 801d18e:	b086      	sub	sp, #24
 801d190:	af00      	add	r7, sp, #0
 801d192:	60f8      	str	r0, [r7, #12]
 801d194:	60b9      	str	r1, [r7, #8]
 801d196:	607a      	str	r2, [r7, #4]
 801d198:	68fb      	ldr	r3, [r7, #12]
 801d19a:	2b00      	cmp	r3, #0
 801d19c:	d10a      	bne.n	801d1b4 <vTaskPlaceOnUnorderedEventList+0x28>
 801d19e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d1a2:	f383 8811 	msr	BASEPRI, r3
 801d1a6:	f3bf 8f6f 	isb	sy
 801d1aa:	f3bf 8f4f 	dsb	sy
 801d1ae:	617b      	str	r3, [r7, #20]
 801d1b0:	bf00      	nop
 801d1b2:	e7fe      	b.n	801d1b2 <vTaskPlaceOnUnorderedEventList+0x26>
 801d1b4:	4b11      	ldr	r3, [pc, #68]	; (801d1fc <vTaskPlaceOnUnorderedEventList+0x70>)
 801d1b6:	681b      	ldr	r3, [r3, #0]
 801d1b8:	2b00      	cmp	r3, #0
 801d1ba:	d10a      	bne.n	801d1d2 <vTaskPlaceOnUnorderedEventList+0x46>
 801d1bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d1c0:	f383 8811 	msr	BASEPRI, r3
 801d1c4:	f3bf 8f6f 	isb	sy
 801d1c8:	f3bf 8f4f 	dsb	sy
 801d1cc:	613b      	str	r3, [r7, #16]
 801d1ce:	bf00      	nop
 801d1d0:	e7fe      	b.n	801d1d0 <vTaskPlaceOnUnorderedEventList+0x44>
 801d1d2:	4b0b      	ldr	r3, [pc, #44]	; (801d200 <vTaskPlaceOnUnorderedEventList+0x74>)
 801d1d4:	681b      	ldr	r3, [r3, #0]
 801d1d6:	68ba      	ldr	r2, [r7, #8]
 801d1d8:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 801d1dc:	619a      	str	r2, [r3, #24]
 801d1de:	4b08      	ldr	r3, [pc, #32]	; (801d200 <vTaskPlaceOnUnorderedEventList+0x74>)
 801d1e0:	681b      	ldr	r3, [r3, #0]
 801d1e2:	3318      	adds	r3, #24
 801d1e4:	4619      	mov	r1, r3
 801d1e6:	68f8      	ldr	r0, [r7, #12]
 801d1e8:	f7fe fc95 	bl	801bb16 <vListInsertEnd>
 801d1ec:	2101      	movs	r1, #1
 801d1ee:	6878      	ldr	r0, [r7, #4]
 801d1f0:	f000 fbf2 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801d1f4:	bf00      	nop
 801d1f6:	3718      	adds	r7, #24
 801d1f8:	46bd      	mov	sp, r7
 801d1fa:	bd80      	pop	{r7, pc}
 801d1fc:	20003bc8 	.word	0x20003bc8
 801d200:	20003a00 	.word	0x20003a00

0801d204 <vTaskPlaceOnEventListRestricted>:
 801d204:	b580      	push	{r7, lr}
 801d206:	b086      	sub	sp, #24
 801d208:	af00      	add	r7, sp, #0
 801d20a:	60f8      	str	r0, [r7, #12]
 801d20c:	60b9      	str	r1, [r7, #8]
 801d20e:	607a      	str	r2, [r7, #4]
 801d210:	68fb      	ldr	r3, [r7, #12]
 801d212:	2b00      	cmp	r3, #0
 801d214:	d10a      	bne.n	801d22c <vTaskPlaceOnEventListRestricted+0x28>
 801d216:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d21a:	f383 8811 	msr	BASEPRI, r3
 801d21e:	f3bf 8f6f 	isb	sy
 801d222:	f3bf 8f4f 	dsb	sy
 801d226:	617b      	str	r3, [r7, #20]
 801d228:	bf00      	nop
 801d22a:	e7fe      	b.n	801d22a <vTaskPlaceOnEventListRestricted+0x26>
 801d22c:	4b0a      	ldr	r3, [pc, #40]	; (801d258 <vTaskPlaceOnEventListRestricted+0x54>)
 801d22e:	681b      	ldr	r3, [r3, #0]
 801d230:	3318      	adds	r3, #24
 801d232:	4619      	mov	r1, r3
 801d234:	68f8      	ldr	r0, [r7, #12]
 801d236:	f7fe fc6e 	bl	801bb16 <vListInsertEnd>
 801d23a:	687b      	ldr	r3, [r7, #4]
 801d23c:	2b00      	cmp	r3, #0
 801d23e:	d002      	beq.n	801d246 <vTaskPlaceOnEventListRestricted+0x42>
 801d240:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801d244:	60bb      	str	r3, [r7, #8]
 801d246:	6879      	ldr	r1, [r7, #4]
 801d248:	68b8      	ldr	r0, [r7, #8]
 801d24a:	f000 fbc5 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801d24e:	bf00      	nop
 801d250:	3718      	adds	r7, #24
 801d252:	46bd      	mov	sp, r7
 801d254:	bd80      	pop	{r7, pc}
 801d256:	bf00      	nop
 801d258:	20003a00 	.word	0x20003a00

0801d25c <xTaskRemoveFromEventList>:
 801d25c:	b580      	push	{r7, lr}
 801d25e:	b086      	sub	sp, #24
 801d260:	af00      	add	r7, sp, #0
 801d262:	6078      	str	r0, [r7, #4]
 801d264:	687b      	ldr	r3, [r7, #4]
 801d266:	68db      	ldr	r3, [r3, #12]
 801d268:	68db      	ldr	r3, [r3, #12]
 801d26a:	613b      	str	r3, [r7, #16]
 801d26c:	693b      	ldr	r3, [r7, #16]
 801d26e:	2b00      	cmp	r3, #0
 801d270:	d10a      	bne.n	801d288 <xTaskRemoveFromEventList+0x2c>
 801d272:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d276:	f383 8811 	msr	BASEPRI, r3
 801d27a:	f3bf 8f6f 	isb	sy
 801d27e:	f3bf 8f4f 	dsb	sy
 801d282:	60fb      	str	r3, [r7, #12]
 801d284:	bf00      	nop
 801d286:	e7fe      	b.n	801d286 <xTaskRemoveFromEventList+0x2a>
 801d288:	693b      	ldr	r3, [r7, #16]
 801d28a:	3318      	adds	r3, #24
 801d28c:	4618      	mov	r0, r3
 801d28e:	f7fe fc9f 	bl	801bbd0 <uxListRemove>
 801d292:	4b1d      	ldr	r3, [pc, #116]	; (801d308 <xTaskRemoveFromEventList+0xac>)
 801d294:	681b      	ldr	r3, [r3, #0]
 801d296:	2b00      	cmp	r3, #0
 801d298:	d11c      	bne.n	801d2d4 <xTaskRemoveFromEventList+0x78>
 801d29a:	693b      	ldr	r3, [r7, #16]
 801d29c:	3304      	adds	r3, #4
 801d29e:	4618      	mov	r0, r3
 801d2a0:	f7fe fc96 	bl	801bbd0 <uxListRemove>
 801d2a4:	693b      	ldr	r3, [r7, #16]
 801d2a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2a8:	2201      	movs	r2, #1
 801d2aa:	409a      	lsls	r2, r3
 801d2ac:	4b17      	ldr	r3, [pc, #92]	; (801d30c <xTaskRemoveFromEventList+0xb0>)
 801d2ae:	681b      	ldr	r3, [r3, #0]
 801d2b0:	4313      	orrs	r3, r2
 801d2b2:	4a16      	ldr	r2, [pc, #88]	; (801d30c <xTaskRemoveFromEventList+0xb0>)
 801d2b4:	6013      	str	r3, [r2, #0]
 801d2b6:	693b      	ldr	r3, [r7, #16]
 801d2b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d2ba:	4613      	mov	r3, r2
 801d2bc:	009b      	lsls	r3, r3, #2
 801d2be:	4413      	add	r3, r2
 801d2c0:	009b      	lsls	r3, r3, #2
 801d2c2:	4a13      	ldr	r2, [pc, #76]	; (801d310 <xTaskRemoveFromEventList+0xb4>)
 801d2c4:	441a      	add	r2, r3
 801d2c6:	693b      	ldr	r3, [r7, #16]
 801d2c8:	3304      	adds	r3, #4
 801d2ca:	4619      	mov	r1, r3
 801d2cc:	4610      	mov	r0, r2
 801d2ce:	f7fe fc22 	bl	801bb16 <vListInsertEnd>
 801d2d2:	e005      	b.n	801d2e0 <xTaskRemoveFromEventList+0x84>
 801d2d4:	693b      	ldr	r3, [r7, #16]
 801d2d6:	3318      	adds	r3, #24
 801d2d8:	4619      	mov	r1, r3
 801d2da:	480e      	ldr	r0, [pc, #56]	; (801d314 <xTaskRemoveFromEventList+0xb8>)
 801d2dc:	f7fe fc1b 	bl	801bb16 <vListInsertEnd>
 801d2e0:	693b      	ldr	r3, [r7, #16]
 801d2e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d2e4:	4b0c      	ldr	r3, [pc, #48]	; (801d318 <xTaskRemoveFromEventList+0xbc>)
 801d2e6:	681b      	ldr	r3, [r3, #0]
 801d2e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2ea:	429a      	cmp	r2, r3
 801d2ec:	d905      	bls.n	801d2fa <xTaskRemoveFromEventList+0x9e>
 801d2ee:	2301      	movs	r3, #1
 801d2f0:	617b      	str	r3, [r7, #20]
 801d2f2:	4b0a      	ldr	r3, [pc, #40]	; (801d31c <xTaskRemoveFromEventList+0xc0>)
 801d2f4:	2201      	movs	r2, #1
 801d2f6:	601a      	str	r2, [r3, #0]
 801d2f8:	e001      	b.n	801d2fe <xTaskRemoveFromEventList+0xa2>
 801d2fa:	2300      	movs	r3, #0
 801d2fc:	617b      	str	r3, [r7, #20]
 801d2fe:	697b      	ldr	r3, [r7, #20]
 801d300:	4618      	mov	r0, r3
 801d302:	3718      	adds	r7, #24
 801d304:	46bd      	mov	sp, r7
 801d306:	bd80      	pop	{r7, pc}
 801d308:	20003bc8 	.word	0x20003bc8
 801d30c:	20003ba8 	.word	0x20003ba8
 801d310:	20003a04 	.word	0x20003a04
 801d314:	20003b60 	.word	0x20003b60
 801d318:	20003a00 	.word	0x20003a00
 801d31c:	20003bb4 	.word	0x20003bb4

0801d320 <vTaskRemoveFromUnorderedEventList>:
 801d320:	b580      	push	{r7, lr}
 801d322:	b086      	sub	sp, #24
 801d324:	af00      	add	r7, sp, #0
 801d326:	6078      	str	r0, [r7, #4]
 801d328:	6039      	str	r1, [r7, #0]
 801d32a:	4b29      	ldr	r3, [pc, #164]	; (801d3d0 <vTaskRemoveFromUnorderedEventList+0xb0>)
 801d32c:	681b      	ldr	r3, [r3, #0]
 801d32e:	2b00      	cmp	r3, #0
 801d330:	d10a      	bne.n	801d348 <vTaskRemoveFromUnorderedEventList+0x28>
 801d332:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d336:	f383 8811 	msr	BASEPRI, r3
 801d33a:	f3bf 8f6f 	isb	sy
 801d33e:	f3bf 8f4f 	dsb	sy
 801d342:	613b      	str	r3, [r7, #16]
 801d344:	bf00      	nop
 801d346:	e7fe      	b.n	801d346 <vTaskRemoveFromUnorderedEventList+0x26>
 801d348:	683b      	ldr	r3, [r7, #0]
 801d34a:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 801d34e:	687b      	ldr	r3, [r7, #4]
 801d350:	601a      	str	r2, [r3, #0]
 801d352:	687b      	ldr	r3, [r7, #4]
 801d354:	68db      	ldr	r3, [r3, #12]
 801d356:	617b      	str	r3, [r7, #20]
 801d358:	697b      	ldr	r3, [r7, #20]
 801d35a:	2b00      	cmp	r3, #0
 801d35c:	d10a      	bne.n	801d374 <vTaskRemoveFromUnorderedEventList+0x54>
 801d35e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d362:	f383 8811 	msr	BASEPRI, r3
 801d366:	f3bf 8f6f 	isb	sy
 801d36a:	f3bf 8f4f 	dsb	sy
 801d36e:	60fb      	str	r3, [r7, #12]
 801d370:	bf00      	nop
 801d372:	e7fe      	b.n	801d372 <vTaskRemoveFromUnorderedEventList+0x52>
 801d374:	6878      	ldr	r0, [r7, #4]
 801d376:	f7fe fc2b 	bl	801bbd0 <uxListRemove>
 801d37a:	697b      	ldr	r3, [r7, #20]
 801d37c:	3304      	adds	r3, #4
 801d37e:	4618      	mov	r0, r3
 801d380:	f7fe fc26 	bl	801bbd0 <uxListRemove>
 801d384:	697b      	ldr	r3, [r7, #20]
 801d386:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d388:	2201      	movs	r2, #1
 801d38a:	409a      	lsls	r2, r3
 801d38c:	4b11      	ldr	r3, [pc, #68]	; (801d3d4 <vTaskRemoveFromUnorderedEventList+0xb4>)
 801d38e:	681b      	ldr	r3, [r3, #0]
 801d390:	4313      	orrs	r3, r2
 801d392:	4a10      	ldr	r2, [pc, #64]	; (801d3d4 <vTaskRemoveFromUnorderedEventList+0xb4>)
 801d394:	6013      	str	r3, [r2, #0]
 801d396:	697b      	ldr	r3, [r7, #20]
 801d398:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d39a:	4613      	mov	r3, r2
 801d39c:	009b      	lsls	r3, r3, #2
 801d39e:	4413      	add	r3, r2
 801d3a0:	009b      	lsls	r3, r3, #2
 801d3a2:	4a0d      	ldr	r2, [pc, #52]	; (801d3d8 <vTaskRemoveFromUnorderedEventList+0xb8>)
 801d3a4:	441a      	add	r2, r3
 801d3a6:	697b      	ldr	r3, [r7, #20]
 801d3a8:	3304      	adds	r3, #4
 801d3aa:	4619      	mov	r1, r3
 801d3ac:	4610      	mov	r0, r2
 801d3ae:	f7fe fbb2 	bl	801bb16 <vListInsertEnd>
 801d3b2:	697b      	ldr	r3, [r7, #20]
 801d3b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d3b6:	4b09      	ldr	r3, [pc, #36]	; (801d3dc <vTaskRemoveFromUnorderedEventList+0xbc>)
 801d3b8:	681b      	ldr	r3, [r3, #0]
 801d3ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3bc:	429a      	cmp	r2, r3
 801d3be:	d902      	bls.n	801d3c6 <vTaskRemoveFromUnorderedEventList+0xa6>
 801d3c0:	4b07      	ldr	r3, [pc, #28]	; (801d3e0 <vTaskRemoveFromUnorderedEventList+0xc0>)
 801d3c2:	2201      	movs	r2, #1
 801d3c4:	601a      	str	r2, [r3, #0]
 801d3c6:	bf00      	nop
 801d3c8:	3718      	adds	r7, #24
 801d3ca:	46bd      	mov	sp, r7
 801d3cc:	bd80      	pop	{r7, pc}
 801d3ce:	bf00      	nop
 801d3d0:	20003bc8 	.word	0x20003bc8
 801d3d4:	20003ba8 	.word	0x20003ba8
 801d3d8:	20003a04 	.word	0x20003a04
 801d3dc:	20003a00 	.word	0x20003a00
 801d3e0:	20003bb4 	.word	0x20003bb4

0801d3e4 <vTaskInternalSetTimeOutState>:
 801d3e4:	b480      	push	{r7}
 801d3e6:	b083      	sub	sp, #12
 801d3e8:	af00      	add	r7, sp, #0
 801d3ea:	6078      	str	r0, [r7, #4]
 801d3ec:	4b06      	ldr	r3, [pc, #24]	; (801d408 <vTaskInternalSetTimeOutState+0x24>)
 801d3ee:	681a      	ldr	r2, [r3, #0]
 801d3f0:	687b      	ldr	r3, [r7, #4]
 801d3f2:	601a      	str	r2, [r3, #0]
 801d3f4:	4b05      	ldr	r3, [pc, #20]	; (801d40c <vTaskInternalSetTimeOutState+0x28>)
 801d3f6:	681a      	ldr	r2, [r3, #0]
 801d3f8:	687b      	ldr	r3, [r7, #4]
 801d3fa:	605a      	str	r2, [r3, #4]
 801d3fc:	bf00      	nop
 801d3fe:	370c      	adds	r7, #12
 801d400:	46bd      	mov	sp, r7
 801d402:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d406:	4770      	bx	lr
 801d408:	20003bb8 	.word	0x20003bb8
 801d40c:	20003ba4 	.word	0x20003ba4

0801d410 <xTaskCheckForTimeOut>:
 801d410:	b580      	push	{r7, lr}
 801d412:	b088      	sub	sp, #32
 801d414:	af00      	add	r7, sp, #0
 801d416:	6078      	str	r0, [r7, #4]
 801d418:	6039      	str	r1, [r7, #0]
 801d41a:	687b      	ldr	r3, [r7, #4]
 801d41c:	2b00      	cmp	r3, #0
 801d41e:	d10a      	bne.n	801d436 <xTaskCheckForTimeOut+0x26>
 801d420:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d424:	f383 8811 	msr	BASEPRI, r3
 801d428:	f3bf 8f6f 	isb	sy
 801d42c:	f3bf 8f4f 	dsb	sy
 801d430:	613b      	str	r3, [r7, #16]
 801d432:	bf00      	nop
 801d434:	e7fe      	b.n	801d434 <xTaskCheckForTimeOut+0x24>
 801d436:	683b      	ldr	r3, [r7, #0]
 801d438:	2b00      	cmp	r3, #0
 801d43a:	d10a      	bne.n	801d452 <xTaskCheckForTimeOut+0x42>
 801d43c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d440:	f383 8811 	msr	BASEPRI, r3
 801d444:	f3bf 8f6f 	isb	sy
 801d448:	f3bf 8f4f 	dsb	sy
 801d44c:	60fb      	str	r3, [r7, #12]
 801d44e:	bf00      	nop
 801d450:	e7fe      	b.n	801d450 <xTaskCheckForTimeOut+0x40>
 801d452:	f000 ffbf 	bl	801e3d4 <vPortEnterCritical>
 801d456:	4b1d      	ldr	r3, [pc, #116]	; (801d4cc <xTaskCheckForTimeOut+0xbc>)
 801d458:	681b      	ldr	r3, [r3, #0]
 801d45a:	61bb      	str	r3, [r7, #24]
 801d45c:	687b      	ldr	r3, [r7, #4]
 801d45e:	685b      	ldr	r3, [r3, #4]
 801d460:	69ba      	ldr	r2, [r7, #24]
 801d462:	1ad3      	subs	r3, r2, r3
 801d464:	617b      	str	r3, [r7, #20]
 801d466:	683b      	ldr	r3, [r7, #0]
 801d468:	681b      	ldr	r3, [r3, #0]
 801d46a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801d46e:	d102      	bne.n	801d476 <xTaskCheckForTimeOut+0x66>
 801d470:	2300      	movs	r3, #0
 801d472:	61fb      	str	r3, [r7, #28]
 801d474:	e023      	b.n	801d4be <xTaskCheckForTimeOut+0xae>
 801d476:	687b      	ldr	r3, [r7, #4]
 801d478:	681a      	ldr	r2, [r3, #0]
 801d47a:	4b15      	ldr	r3, [pc, #84]	; (801d4d0 <xTaskCheckForTimeOut+0xc0>)
 801d47c:	681b      	ldr	r3, [r3, #0]
 801d47e:	429a      	cmp	r2, r3
 801d480:	d007      	beq.n	801d492 <xTaskCheckForTimeOut+0x82>
 801d482:	687b      	ldr	r3, [r7, #4]
 801d484:	685b      	ldr	r3, [r3, #4]
 801d486:	69ba      	ldr	r2, [r7, #24]
 801d488:	429a      	cmp	r2, r3
 801d48a:	d302      	bcc.n	801d492 <xTaskCheckForTimeOut+0x82>
 801d48c:	2301      	movs	r3, #1
 801d48e:	61fb      	str	r3, [r7, #28]
 801d490:	e015      	b.n	801d4be <xTaskCheckForTimeOut+0xae>
 801d492:	683b      	ldr	r3, [r7, #0]
 801d494:	681b      	ldr	r3, [r3, #0]
 801d496:	697a      	ldr	r2, [r7, #20]
 801d498:	429a      	cmp	r2, r3
 801d49a:	d20b      	bcs.n	801d4b4 <xTaskCheckForTimeOut+0xa4>
 801d49c:	683b      	ldr	r3, [r7, #0]
 801d49e:	681a      	ldr	r2, [r3, #0]
 801d4a0:	697b      	ldr	r3, [r7, #20]
 801d4a2:	1ad2      	subs	r2, r2, r3
 801d4a4:	683b      	ldr	r3, [r7, #0]
 801d4a6:	601a      	str	r2, [r3, #0]
 801d4a8:	6878      	ldr	r0, [r7, #4]
 801d4aa:	f7ff ff9b 	bl	801d3e4 <vTaskInternalSetTimeOutState>
 801d4ae:	2300      	movs	r3, #0
 801d4b0:	61fb      	str	r3, [r7, #28]
 801d4b2:	e004      	b.n	801d4be <xTaskCheckForTimeOut+0xae>
 801d4b4:	683b      	ldr	r3, [r7, #0]
 801d4b6:	2200      	movs	r2, #0
 801d4b8:	601a      	str	r2, [r3, #0]
 801d4ba:	2301      	movs	r3, #1
 801d4bc:	61fb      	str	r3, [r7, #28]
 801d4be:	f000 ffb9 	bl	801e434 <vPortExitCritical>
 801d4c2:	69fb      	ldr	r3, [r7, #28]
 801d4c4:	4618      	mov	r0, r3
 801d4c6:	3720      	adds	r7, #32
 801d4c8:	46bd      	mov	sp, r7
 801d4ca:	bd80      	pop	{r7, pc}
 801d4cc:	20003ba4 	.word	0x20003ba4
 801d4d0:	20003bb8 	.word	0x20003bb8

0801d4d4 <vTaskMissedYield>:
 801d4d4:	b480      	push	{r7}
 801d4d6:	af00      	add	r7, sp, #0
 801d4d8:	4b03      	ldr	r3, [pc, #12]	; (801d4e8 <vTaskMissedYield+0x14>)
 801d4da:	2201      	movs	r2, #1
 801d4dc:	601a      	str	r2, [r3, #0]
 801d4de:	bf00      	nop
 801d4e0:	46bd      	mov	sp, r7
 801d4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d4e6:	4770      	bx	lr
 801d4e8:	20003bb4 	.word	0x20003bb4

0801d4ec <prvIdleTask>:
 801d4ec:	b580      	push	{r7, lr}
 801d4ee:	b082      	sub	sp, #8
 801d4f0:	af00      	add	r7, sp, #0
 801d4f2:	6078      	str	r0, [r7, #4]
 801d4f4:	f000 f852 	bl	801d59c <prvCheckTasksWaitingTermination>
 801d4f8:	4b06      	ldr	r3, [pc, #24]	; (801d514 <prvIdleTask+0x28>)
 801d4fa:	681b      	ldr	r3, [r3, #0]
 801d4fc:	2b01      	cmp	r3, #1
 801d4fe:	d9f9      	bls.n	801d4f4 <prvIdleTask+0x8>
 801d500:	4b05      	ldr	r3, [pc, #20]	; (801d518 <prvIdleTask+0x2c>)
 801d502:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801d506:	601a      	str	r2, [r3, #0]
 801d508:	f3bf 8f4f 	dsb	sy
 801d50c:	f3bf 8f6f 	isb	sy
 801d510:	e7f0      	b.n	801d4f4 <prvIdleTask+0x8>
 801d512:	bf00      	nop
 801d514:	20003a04 	.word	0x20003a04
 801d518:	e000ed04 	.word	0xe000ed04

0801d51c <prvInitialiseTaskLists>:
 801d51c:	b580      	push	{r7, lr}
 801d51e:	b082      	sub	sp, #8
 801d520:	af00      	add	r7, sp, #0
 801d522:	2300      	movs	r3, #0
 801d524:	607b      	str	r3, [r7, #4]
 801d526:	e00c      	b.n	801d542 <prvInitialiseTaskLists+0x26>
 801d528:	687a      	ldr	r2, [r7, #4]
 801d52a:	4613      	mov	r3, r2
 801d52c:	009b      	lsls	r3, r3, #2
 801d52e:	4413      	add	r3, r2
 801d530:	009b      	lsls	r3, r3, #2
 801d532:	4a12      	ldr	r2, [pc, #72]	; (801d57c <prvInitialiseTaskLists+0x60>)
 801d534:	4413      	add	r3, r2
 801d536:	4618      	mov	r0, r3
 801d538:	f7fe fac0 	bl	801babc <vListInitialise>
 801d53c:	687b      	ldr	r3, [r7, #4]
 801d53e:	3301      	adds	r3, #1
 801d540:	607b      	str	r3, [r7, #4]
 801d542:	687b      	ldr	r3, [r7, #4]
 801d544:	2b0e      	cmp	r3, #14
 801d546:	d9ef      	bls.n	801d528 <prvInitialiseTaskLists+0xc>
 801d548:	480d      	ldr	r0, [pc, #52]	; (801d580 <prvInitialiseTaskLists+0x64>)
 801d54a:	f7fe fab7 	bl	801babc <vListInitialise>
 801d54e:	480d      	ldr	r0, [pc, #52]	; (801d584 <prvInitialiseTaskLists+0x68>)
 801d550:	f7fe fab4 	bl	801babc <vListInitialise>
 801d554:	480c      	ldr	r0, [pc, #48]	; (801d588 <prvInitialiseTaskLists+0x6c>)
 801d556:	f7fe fab1 	bl	801babc <vListInitialise>
 801d55a:	480c      	ldr	r0, [pc, #48]	; (801d58c <prvInitialiseTaskLists+0x70>)
 801d55c:	f7fe faae 	bl	801babc <vListInitialise>
 801d560:	480b      	ldr	r0, [pc, #44]	; (801d590 <prvInitialiseTaskLists+0x74>)
 801d562:	f7fe faab 	bl	801babc <vListInitialise>
 801d566:	4b0b      	ldr	r3, [pc, #44]	; (801d594 <prvInitialiseTaskLists+0x78>)
 801d568:	4a05      	ldr	r2, [pc, #20]	; (801d580 <prvInitialiseTaskLists+0x64>)
 801d56a:	601a      	str	r2, [r3, #0]
 801d56c:	4b0a      	ldr	r3, [pc, #40]	; (801d598 <prvInitialiseTaskLists+0x7c>)
 801d56e:	4a05      	ldr	r2, [pc, #20]	; (801d584 <prvInitialiseTaskLists+0x68>)
 801d570:	601a      	str	r2, [r3, #0]
 801d572:	bf00      	nop
 801d574:	3708      	adds	r7, #8
 801d576:	46bd      	mov	sp, r7
 801d578:	bd80      	pop	{r7, pc}
 801d57a:	bf00      	nop
 801d57c:	20003a04 	.word	0x20003a04
 801d580:	20003b30 	.word	0x20003b30
 801d584:	20003b44 	.word	0x20003b44
 801d588:	20003b60 	.word	0x20003b60
 801d58c:	20003b74 	.word	0x20003b74
 801d590:	20003b8c 	.word	0x20003b8c
 801d594:	20003b58 	.word	0x20003b58
 801d598:	20003b5c 	.word	0x20003b5c

0801d59c <prvCheckTasksWaitingTermination>:
 801d59c:	b580      	push	{r7, lr}
 801d59e:	b082      	sub	sp, #8
 801d5a0:	af00      	add	r7, sp, #0
 801d5a2:	e019      	b.n	801d5d8 <prvCheckTasksWaitingTermination+0x3c>
 801d5a4:	f000 ff16 	bl	801e3d4 <vPortEnterCritical>
 801d5a8:	4b10      	ldr	r3, [pc, #64]	; (801d5ec <prvCheckTasksWaitingTermination+0x50>)
 801d5aa:	68db      	ldr	r3, [r3, #12]
 801d5ac:	68db      	ldr	r3, [r3, #12]
 801d5ae:	607b      	str	r3, [r7, #4]
 801d5b0:	687b      	ldr	r3, [r7, #4]
 801d5b2:	3304      	adds	r3, #4
 801d5b4:	4618      	mov	r0, r3
 801d5b6:	f7fe fb0b 	bl	801bbd0 <uxListRemove>
 801d5ba:	4b0d      	ldr	r3, [pc, #52]	; (801d5f0 <prvCheckTasksWaitingTermination+0x54>)
 801d5bc:	681b      	ldr	r3, [r3, #0]
 801d5be:	3b01      	subs	r3, #1
 801d5c0:	4a0b      	ldr	r2, [pc, #44]	; (801d5f0 <prvCheckTasksWaitingTermination+0x54>)
 801d5c2:	6013      	str	r3, [r2, #0]
 801d5c4:	4b0b      	ldr	r3, [pc, #44]	; (801d5f4 <prvCheckTasksWaitingTermination+0x58>)
 801d5c6:	681b      	ldr	r3, [r3, #0]
 801d5c8:	3b01      	subs	r3, #1
 801d5ca:	4a0a      	ldr	r2, [pc, #40]	; (801d5f4 <prvCheckTasksWaitingTermination+0x58>)
 801d5cc:	6013      	str	r3, [r2, #0]
 801d5ce:	f000 ff31 	bl	801e434 <vPortExitCritical>
 801d5d2:	6878      	ldr	r0, [r7, #4]
 801d5d4:	f000 f810 	bl	801d5f8 <prvDeleteTCB>
 801d5d8:	4b06      	ldr	r3, [pc, #24]	; (801d5f4 <prvCheckTasksWaitingTermination+0x58>)
 801d5da:	681b      	ldr	r3, [r3, #0]
 801d5dc:	2b00      	cmp	r3, #0
 801d5de:	d1e1      	bne.n	801d5a4 <prvCheckTasksWaitingTermination+0x8>
 801d5e0:	bf00      	nop
 801d5e2:	bf00      	nop
 801d5e4:	3708      	adds	r7, #8
 801d5e6:	46bd      	mov	sp, r7
 801d5e8:	bd80      	pop	{r7, pc}
 801d5ea:	bf00      	nop
 801d5ec:	20003b74 	.word	0x20003b74
 801d5f0:	20003ba0 	.word	0x20003ba0
 801d5f4:	20003b88 	.word	0x20003b88

0801d5f8 <prvDeleteTCB>:
 801d5f8:	b580      	push	{r7, lr}
 801d5fa:	b084      	sub	sp, #16
 801d5fc:	af00      	add	r7, sp, #0
 801d5fe:	6078      	str	r0, [r7, #4]
 801d600:	687b      	ldr	r3, [r7, #4]
 801d602:	3358      	adds	r3, #88	; 0x58
 801d604:	4618      	mov	r0, r3
 801d606:	f002 ff89 	bl	802051c <_reclaim_reent>
 801d60a:	687b      	ldr	r3, [r7, #4]
 801d60c:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d610:	2b00      	cmp	r3, #0
 801d612:	d108      	bne.n	801d626 <prvDeleteTCB+0x2e>
 801d614:	687b      	ldr	r3, [r7, #4]
 801d616:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d618:	4618      	mov	r0, r3
 801d61a:	f001 f8c9 	bl	801e7b0 <vPortFree>
 801d61e:	6878      	ldr	r0, [r7, #4]
 801d620:	f001 f8c6 	bl	801e7b0 <vPortFree>
 801d624:	e018      	b.n	801d658 <prvDeleteTCB+0x60>
 801d626:	687b      	ldr	r3, [r7, #4]
 801d628:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d62c:	2b01      	cmp	r3, #1
 801d62e:	d103      	bne.n	801d638 <prvDeleteTCB+0x40>
 801d630:	6878      	ldr	r0, [r7, #4]
 801d632:	f001 f8bd 	bl	801e7b0 <vPortFree>
 801d636:	e00f      	b.n	801d658 <prvDeleteTCB+0x60>
 801d638:	687b      	ldr	r3, [r7, #4]
 801d63a:	f893 30bd 	ldrb.w	r3, [r3, #189]	; 0xbd
 801d63e:	2b02      	cmp	r3, #2
 801d640:	d00a      	beq.n	801d658 <prvDeleteTCB+0x60>
 801d642:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d646:	f383 8811 	msr	BASEPRI, r3
 801d64a:	f3bf 8f6f 	isb	sy
 801d64e:	f3bf 8f4f 	dsb	sy
 801d652:	60fb      	str	r3, [r7, #12]
 801d654:	bf00      	nop
 801d656:	e7fe      	b.n	801d656 <prvDeleteTCB+0x5e>
 801d658:	bf00      	nop
 801d65a:	3710      	adds	r7, #16
 801d65c:	46bd      	mov	sp, r7
 801d65e:	bd80      	pop	{r7, pc}

0801d660 <prvResetNextTaskUnblockTime>:
 801d660:	b480      	push	{r7}
 801d662:	b083      	sub	sp, #12
 801d664:	af00      	add	r7, sp, #0
 801d666:	4b0c      	ldr	r3, [pc, #48]	; (801d698 <prvResetNextTaskUnblockTime+0x38>)
 801d668:	681b      	ldr	r3, [r3, #0]
 801d66a:	681b      	ldr	r3, [r3, #0]
 801d66c:	2b00      	cmp	r3, #0
 801d66e:	d104      	bne.n	801d67a <prvResetNextTaskUnblockTime+0x1a>
 801d670:	4b0a      	ldr	r3, [pc, #40]	; (801d69c <prvResetNextTaskUnblockTime+0x3c>)
 801d672:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801d676:	601a      	str	r2, [r3, #0]
 801d678:	e008      	b.n	801d68c <prvResetNextTaskUnblockTime+0x2c>
 801d67a:	4b07      	ldr	r3, [pc, #28]	; (801d698 <prvResetNextTaskUnblockTime+0x38>)
 801d67c:	681b      	ldr	r3, [r3, #0]
 801d67e:	68db      	ldr	r3, [r3, #12]
 801d680:	68db      	ldr	r3, [r3, #12]
 801d682:	607b      	str	r3, [r7, #4]
 801d684:	687b      	ldr	r3, [r7, #4]
 801d686:	685b      	ldr	r3, [r3, #4]
 801d688:	4a04      	ldr	r2, [pc, #16]	; (801d69c <prvResetNextTaskUnblockTime+0x3c>)
 801d68a:	6013      	str	r3, [r2, #0]
 801d68c:	bf00      	nop
 801d68e:	370c      	adds	r7, #12
 801d690:	46bd      	mov	sp, r7
 801d692:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d696:	4770      	bx	lr
 801d698:	20003b58 	.word	0x20003b58
 801d69c:	20003bc0 	.word	0x20003bc0

0801d6a0 <xTaskGetSchedulerState>:
 801d6a0:	b480      	push	{r7}
 801d6a2:	b083      	sub	sp, #12
 801d6a4:	af00      	add	r7, sp, #0
 801d6a6:	4b0b      	ldr	r3, [pc, #44]	; (801d6d4 <xTaskGetSchedulerState+0x34>)
 801d6a8:	681b      	ldr	r3, [r3, #0]
 801d6aa:	2b00      	cmp	r3, #0
 801d6ac:	d102      	bne.n	801d6b4 <xTaskGetSchedulerState+0x14>
 801d6ae:	2301      	movs	r3, #1
 801d6b0:	607b      	str	r3, [r7, #4]
 801d6b2:	e008      	b.n	801d6c6 <xTaskGetSchedulerState+0x26>
 801d6b4:	4b08      	ldr	r3, [pc, #32]	; (801d6d8 <xTaskGetSchedulerState+0x38>)
 801d6b6:	681b      	ldr	r3, [r3, #0]
 801d6b8:	2b00      	cmp	r3, #0
 801d6ba:	d102      	bne.n	801d6c2 <xTaskGetSchedulerState+0x22>
 801d6bc:	2302      	movs	r3, #2
 801d6be:	607b      	str	r3, [r7, #4]
 801d6c0:	e001      	b.n	801d6c6 <xTaskGetSchedulerState+0x26>
 801d6c2:	2300      	movs	r3, #0
 801d6c4:	607b      	str	r3, [r7, #4]
 801d6c6:	687b      	ldr	r3, [r7, #4]
 801d6c8:	4618      	mov	r0, r3
 801d6ca:	370c      	adds	r7, #12
 801d6cc:	46bd      	mov	sp, r7
 801d6ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d6d2:	4770      	bx	lr
 801d6d4:	20003bac 	.word	0x20003bac
 801d6d8:	20003bc8 	.word	0x20003bc8

0801d6dc <xTaskPriorityDisinherit>:
 801d6dc:	b580      	push	{r7, lr}
 801d6de:	b086      	sub	sp, #24
 801d6e0:	af00      	add	r7, sp, #0
 801d6e2:	6078      	str	r0, [r7, #4]
 801d6e4:	687b      	ldr	r3, [r7, #4]
 801d6e6:	613b      	str	r3, [r7, #16]
 801d6e8:	2300      	movs	r3, #0
 801d6ea:	617b      	str	r3, [r7, #20]
 801d6ec:	687b      	ldr	r3, [r7, #4]
 801d6ee:	2b00      	cmp	r3, #0
 801d6f0:	d06e      	beq.n	801d7d0 <xTaskPriorityDisinherit+0xf4>
 801d6f2:	4b3a      	ldr	r3, [pc, #232]	; (801d7dc <xTaskPriorityDisinherit+0x100>)
 801d6f4:	681b      	ldr	r3, [r3, #0]
 801d6f6:	693a      	ldr	r2, [r7, #16]
 801d6f8:	429a      	cmp	r2, r3
 801d6fa:	d00a      	beq.n	801d712 <xTaskPriorityDisinherit+0x36>
 801d6fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d700:	f383 8811 	msr	BASEPRI, r3
 801d704:	f3bf 8f6f 	isb	sy
 801d708:	f3bf 8f4f 	dsb	sy
 801d70c:	60fb      	str	r3, [r7, #12]
 801d70e:	bf00      	nop
 801d710:	e7fe      	b.n	801d710 <xTaskPriorityDisinherit+0x34>
 801d712:	693b      	ldr	r3, [r7, #16]
 801d714:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d716:	2b00      	cmp	r3, #0
 801d718:	d10a      	bne.n	801d730 <xTaskPriorityDisinherit+0x54>
 801d71a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d71e:	f383 8811 	msr	BASEPRI, r3
 801d722:	f3bf 8f6f 	isb	sy
 801d726:	f3bf 8f4f 	dsb	sy
 801d72a:	60bb      	str	r3, [r7, #8]
 801d72c:	bf00      	nop
 801d72e:	e7fe      	b.n	801d72e <xTaskPriorityDisinherit+0x52>
 801d730:	693b      	ldr	r3, [r7, #16]
 801d732:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d734:	1e5a      	subs	r2, r3, #1
 801d736:	693b      	ldr	r3, [r7, #16]
 801d738:	651a      	str	r2, [r3, #80]	; 0x50
 801d73a:	693b      	ldr	r3, [r7, #16]
 801d73c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d73e:	693b      	ldr	r3, [r7, #16]
 801d740:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801d742:	429a      	cmp	r2, r3
 801d744:	d044      	beq.n	801d7d0 <xTaskPriorityDisinherit+0xf4>
 801d746:	693b      	ldr	r3, [r7, #16]
 801d748:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801d74a:	2b00      	cmp	r3, #0
 801d74c:	d140      	bne.n	801d7d0 <xTaskPriorityDisinherit+0xf4>
 801d74e:	693b      	ldr	r3, [r7, #16]
 801d750:	3304      	adds	r3, #4
 801d752:	4618      	mov	r0, r3
 801d754:	f7fe fa3c 	bl	801bbd0 <uxListRemove>
 801d758:	4603      	mov	r3, r0
 801d75a:	2b00      	cmp	r3, #0
 801d75c:	d115      	bne.n	801d78a <xTaskPriorityDisinherit+0xae>
 801d75e:	693b      	ldr	r3, [r7, #16]
 801d760:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d762:	491f      	ldr	r1, [pc, #124]	; (801d7e0 <xTaskPriorityDisinherit+0x104>)
 801d764:	4613      	mov	r3, r2
 801d766:	009b      	lsls	r3, r3, #2
 801d768:	4413      	add	r3, r2
 801d76a:	009b      	lsls	r3, r3, #2
 801d76c:	440b      	add	r3, r1
 801d76e:	681b      	ldr	r3, [r3, #0]
 801d770:	2b00      	cmp	r3, #0
 801d772:	d10a      	bne.n	801d78a <xTaskPriorityDisinherit+0xae>
 801d774:	693b      	ldr	r3, [r7, #16]
 801d776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d778:	2201      	movs	r2, #1
 801d77a:	fa02 f303 	lsl.w	r3, r2, r3
 801d77e:	43da      	mvns	r2, r3
 801d780:	4b18      	ldr	r3, [pc, #96]	; (801d7e4 <xTaskPriorityDisinherit+0x108>)
 801d782:	681b      	ldr	r3, [r3, #0]
 801d784:	4013      	ands	r3, r2
 801d786:	4a17      	ldr	r2, [pc, #92]	; (801d7e4 <xTaskPriorityDisinherit+0x108>)
 801d788:	6013      	str	r3, [r2, #0]
 801d78a:	693b      	ldr	r3, [r7, #16]
 801d78c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801d78e:	693b      	ldr	r3, [r7, #16]
 801d790:	62da      	str	r2, [r3, #44]	; 0x2c
 801d792:	693b      	ldr	r3, [r7, #16]
 801d794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d796:	f1c3 020f 	rsb	r2, r3, #15
 801d79a:	693b      	ldr	r3, [r7, #16]
 801d79c:	619a      	str	r2, [r3, #24]
 801d79e:	693b      	ldr	r3, [r7, #16]
 801d7a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7a2:	2201      	movs	r2, #1
 801d7a4:	409a      	lsls	r2, r3
 801d7a6:	4b0f      	ldr	r3, [pc, #60]	; (801d7e4 <xTaskPriorityDisinherit+0x108>)
 801d7a8:	681b      	ldr	r3, [r3, #0]
 801d7aa:	4313      	orrs	r3, r2
 801d7ac:	4a0d      	ldr	r2, [pc, #52]	; (801d7e4 <xTaskPriorityDisinherit+0x108>)
 801d7ae:	6013      	str	r3, [r2, #0]
 801d7b0:	693b      	ldr	r3, [r7, #16]
 801d7b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d7b4:	4613      	mov	r3, r2
 801d7b6:	009b      	lsls	r3, r3, #2
 801d7b8:	4413      	add	r3, r2
 801d7ba:	009b      	lsls	r3, r3, #2
 801d7bc:	4a08      	ldr	r2, [pc, #32]	; (801d7e0 <xTaskPriorityDisinherit+0x104>)
 801d7be:	441a      	add	r2, r3
 801d7c0:	693b      	ldr	r3, [r7, #16]
 801d7c2:	3304      	adds	r3, #4
 801d7c4:	4619      	mov	r1, r3
 801d7c6:	4610      	mov	r0, r2
 801d7c8:	f7fe f9a5 	bl	801bb16 <vListInsertEnd>
 801d7cc:	2301      	movs	r3, #1
 801d7ce:	617b      	str	r3, [r7, #20]
 801d7d0:	697b      	ldr	r3, [r7, #20]
 801d7d2:	4618      	mov	r0, r3
 801d7d4:	3718      	adds	r7, #24
 801d7d6:	46bd      	mov	sp, r7
 801d7d8:	bd80      	pop	{r7, pc}
 801d7da:	bf00      	nop
 801d7dc:	20003a00 	.word	0x20003a00
 801d7e0:	20003a04 	.word	0x20003a04
 801d7e4:	20003ba8 	.word	0x20003ba8

0801d7e8 <uxTaskResetEventItemValue>:
 801d7e8:	b480      	push	{r7}
 801d7ea:	b083      	sub	sp, #12
 801d7ec:	af00      	add	r7, sp, #0
 801d7ee:	4b09      	ldr	r3, [pc, #36]	; (801d814 <uxTaskResetEventItemValue+0x2c>)
 801d7f0:	681b      	ldr	r3, [r3, #0]
 801d7f2:	699b      	ldr	r3, [r3, #24]
 801d7f4:	607b      	str	r3, [r7, #4]
 801d7f6:	4b07      	ldr	r3, [pc, #28]	; (801d814 <uxTaskResetEventItemValue+0x2c>)
 801d7f8:	681b      	ldr	r3, [r3, #0]
 801d7fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d7fc:	4b05      	ldr	r3, [pc, #20]	; (801d814 <uxTaskResetEventItemValue+0x2c>)
 801d7fe:	681b      	ldr	r3, [r3, #0]
 801d800:	f1c2 020f 	rsb	r2, r2, #15
 801d804:	619a      	str	r2, [r3, #24]
 801d806:	687b      	ldr	r3, [r7, #4]
 801d808:	4618      	mov	r0, r3
 801d80a:	370c      	adds	r7, #12
 801d80c:	46bd      	mov	sp, r7
 801d80e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d812:	4770      	bx	lr
 801d814:	20003a00 	.word	0x20003a00

0801d818 <ulTaskNotifyTake>:
 801d818:	b580      	push	{r7, lr}
 801d81a:	b084      	sub	sp, #16
 801d81c:	af00      	add	r7, sp, #0
 801d81e:	6078      	str	r0, [r7, #4]
 801d820:	6039      	str	r1, [r7, #0]
 801d822:	f000 fdd7 	bl	801e3d4 <vPortEnterCritical>
 801d826:	4b20      	ldr	r3, [pc, #128]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d828:	681b      	ldr	r3, [r3, #0]
 801d82a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d82e:	2b00      	cmp	r3, #0
 801d830:	d113      	bne.n	801d85a <ulTaskNotifyTake+0x42>
 801d832:	4b1d      	ldr	r3, [pc, #116]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d834:	681b      	ldr	r3, [r3, #0]
 801d836:	2201      	movs	r2, #1
 801d838:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d83c:	683b      	ldr	r3, [r7, #0]
 801d83e:	2b00      	cmp	r3, #0
 801d840:	d00b      	beq.n	801d85a <ulTaskNotifyTake+0x42>
 801d842:	2101      	movs	r1, #1
 801d844:	6838      	ldr	r0, [r7, #0]
 801d846:	f000 f8c7 	bl	801d9d8 <prvAddCurrentTaskToDelayedList>
 801d84a:	4b18      	ldr	r3, [pc, #96]	; (801d8ac <ulTaskNotifyTake+0x94>)
 801d84c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801d850:	601a      	str	r2, [r3, #0]
 801d852:	f3bf 8f4f 	dsb	sy
 801d856:	f3bf 8f6f 	isb	sy
 801d85a:	f000 fdeb 	bl	801e434 <vPortExitCritical>
 801d85e:	f000 fdb9 	bl	801e3d4 <vPortEnterCritical>
 801d862:	4b11      	ldr	r3, [pc, #68]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d864:	681b      	ldr	r3, [r3, #0]
 801d866:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d86a:	60fb      	str	r3, [r7, #12]
 801d86c:	68fb      	ldr	r3, [r7, #12]
 801d86e:	2b00      	cmp	r3, #0
 801d870:	d00e      	beq.n	801d890 <ulTaskNotifyTake+0x78>
 801d872:	687b      	ldr	r3, [r7, #4]
 801d874:	2b00      	cmp	r3, #0
 801d876:	d005      	beq.n	801d884 <ulTaskNotifyTake+0x6c>
 801d878:	4b0b      	ldr	r3, [pc, #44]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d87a:	681b      	ldr	r3, [r3, #0]
 801d87c:	2200      	movs	r2, #0
 801d87e:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d882:	e005      	b.n	801d890 <ulTaskNotifyTake+0x78>
 801d884:	4b08      	ldr	r3, [pc, #32]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d886:	681b      	ldr	r3, [r3, #0]
 801d888:	68fa      	ldr	r2, [r7, #12]
 801d88a:	3a01      	subs	r2, #1
 801d88c:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d890:	4b05      	ldr	r3, [pc, #20]	; (801d8a8 <ulTaskNotifyTake+0x90>)
 801d892:	681b      	ldr	r3, [r3, #0]
 801d894:	2200      	movs	r2, #0
 801d896:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d89a:	f000 fdcb 	bl	801e434 <vPortExitCritical>
 801d89e:	68fb      	ldr	r3, [r7, #12]
 801d8a0:	4618      	mov	r0, r3
 801d8a2:	3710      	adds	r7, #16
 801d8a4:	46bd      	mov	sp, r7
 801d8a6:	bd80      	pop	{r7, pc}
 801d8a8:	20003a00 	.word	0x20003a00
 801d8ac:	e000ed04 	.word	0xe000ed04

0801d8b0 <vTaskNotifyGiveFromISR>:
 801d8b0:	b580      	push	{r7, lr}
 801d8b2:	b08a      	sub	sp, #40	; 0x28
 801d8b4:	af00      	add	r7, sp, #0
 801d8b6:	6078      	str	r0, [r7, #4]
 801d8b8:	6039      	str	r1, [r7, #0]
 801d8ba:	687b      	ldr	r3, [r7, #4]
 801d8bc:	2b00      	cmp	r3, #0
 801d8be:	d10a      	bne.n	801d8d6 <vTaskNotifyGiveFromISR+0x26>
 801d8c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d8c4:	f383 8811 	msr	BASEPRI, r3
 801d8c8:	f3bf 8f6f 	isb	sy
 801d8cc:	f3bf 8f4f 	dsb	sy
 801d8d0:	61bb      	str	r3, [r7, #24]
 801d8d2:	bf00      	nop
 801d8d4:	e7fe      	b.n	801d8d4 <vTaskNotifyGiveFromISR+0x24>
 801d8d6:	f000 fe5f 	bl	801e598 <vPortValidateInterruptPriority>
 801d8da:	687b      	ldr	r3, [r7, #4]
 801d8dc:	627b      	str	r3, [r7, #36]	; 0x24
 801d8de:	f3ef 8211 	mrs	r2, BASEPRI
 801d8e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d8e6:	f383 8811 	msr	BASEPRI, r3
 801d8ea:	f3bf 8f6f 	isb	sy
 801d8ee:	f3bf 8f4f 	dsb	sy
 801d8f2:	617a      	str	r2, [r7, #20]
 801d8f4:	613b      	str	r3, [r7, #16]
 801d8f6:	697b      	ldr	r3, [r7, #20]
 801d8f8:	623b      	str	r3, [r7, #32]
 801d8fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d8fc:	f893 30bc 	ldrb.w	r3, [r3, #188]	; 0xbc
 801d900:	77fb      	strb	r3, [r7, #31]
 801d902:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d904:	2202      	movs	r2, #2
 801d906:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc
 801d90a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d90c:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801d910:	1c5a      	adds	r2, r3, #1
 801d912:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d914:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 801d918:	7ffb      	ldrb	r3, [r7, #31]
 801d91a:	2b01      	cmp	r3, #1
 801d91c:	d145      	bne.n	801d9aa <vTaskNotifyGiveFromISR+0xfa>
 801d91e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d922:	2b00      	cmp	r3, #0
 801d924:	d00a      	beq.n	801d93c <vTaskNotifyGiveFromISR+0x8c>
 801d926:	f04f 0350 	mov.w	r3, #80	; 0x50
 801d92a:	f383 8811 	msr	BASEPRI, r3
 801d92e:	f3bf 8f6f 	isb	sy
 801d932:	f3bf 8f4f 	dsb	sy
 801d936:	60fb      	str	r3, [r7, #12]
 801d938:	bf00      	nop
 801d93a:	e7fe      	b.n	801d93a <vTaskNotifyGiveFromISR+0x8a>
 801d93c:	4b20      	ldr	r3, [pc, #128]	; (801d9c0 <vTaskNotifyGiveFromISR+0x110>)
 801d93e:	681b      	ldr	r3, [r3, #0]
 801d940:	2b00      	cmp	r3, #0
 801d942:	d11c      	bne.n	801d97e <vTaskNotifyGiveFromISR+0xce>
 801d944:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d946:	3304      	adds	r3, #4
 801d948:	4618      	mov	r0, r3
 801d94a:	f7fe f941 	bl	801bbd0 <uxListRemove>
 801d94e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d952:	2201      	movs	r2, #1
 801d954:	409a      	lsls	r2, r3
 801d956:	4b1b      	ldr	r3, [pc, #108]	; (801d9c4 <vTaskNotifyGiveFromISR+0x114>)
 801d958:	681b      	ldr	r3, [r3, #0]
 801d95a:	4313      	orrs	r3, r2
 801d95c:	4a19      	ldr	r2, [pc, #100]	; (801d9c4 <vTaskNotifyGiveFromISR+0x114>)
 801d95e:	6013      	str	r3, [r2, #0]
 801d960:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d962:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d964:	4613      	mov	r3, r2
 801d966:	009b      	lsls	r3, r3, #2
 801d968:	4413      	add	r3, r2
 801d96a:	009b      	lsls	r3, r3, #2
 801d96c:	4a16      	ldr	r2, [pc, #88]	; (801d9c8 <vTaskNotifyGiveFromISR+0x118>)
 801d96e:	441a      	add	r2, r3
 801d970:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d972:	3304      	adds	r3, #4
 801d974:	4619      	mov	r1, r3
 801d976:	4610      	mov	r0, r2
 801d978:	f7fe f8cd 	bl	801bb16 <vListInsertEnd>
 801d97c:	e005      	b.n	801d98a <vTaskNotifyGiveFromISR+0xda>
 801d97e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d980:	3318      	adds	r3, #24
 801d982:	4619      	mov	r1, r3
 801d984:	4811      	ldr	r0, [pc, #68]	; (801d9cc <vTaskNotifyGiveFromISR+0x11c>)
 801d986:	f7fe f8c6 	bl	801bb16 <vListInsertEnd>
 801d98a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d98c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801d98e:	4b10      	ldr	r3, [pc, #64]	; (801d9d0 <vTaskNotifyGiveFromISR+0x120>)
 801d990:	681b      	ldr	r3, [r3, #0]
 801d992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d994:	429a      	cmp	r2, r3
 801d996:	d908      	bls.n	801d9aa <vTaskNotifyGiveFromISR+0xfa>
 801d998:	683b      	ldr	r3, [r7, #0]
 801d99a:	2b00      	cmp	r3, #0
 801d99c:	d002      	beq.n	801d9a4 <vTaskNotifyGiveFromISR+0xf4>
 801d99e:	683b      	ldr	r3, [r7, #0]
 801d9a0:	2201      	movs	r2, #1
 801d9a2:	601a      	str	r2, [r3, #0]
 801d9a4:	4b0b      	ldr	r3, [pc, #44]	; (801d9d4 <vTaskNotifyGiveFromISR+0x124>)
 801d9a6:	2201      	movs	r2, #1
 801d9a8:	601a      	str	r2, [r3, #0]
 801d9aa:	6a3b      	ldr	r3, [r7, #32]
 801d9ac:	60bb      	str	r3, [r7, #8]
 801d9ae:	68bb      	ldr	r3, [r7, #8]
 801d9b0:	f383 8811 	msr	BASEPRI, r3
 801d9b4:	bf00      	nop
 801d9b6:	bf00      	nop
 801d9b8:	3728      	adds	r7, #40	; 0x28
 801d9ba:	46bd      	mov	sp, r7
 801d9bc:	bd80      	pop	{r7, pc}
 801d9be:	bf00      	nop
 801d9c0:	20003bc8 	.word	0x20003bc8
 801d9c4:	20003ba8 	.word	0x20003ba8
 801d9c8:	20003a04 	.word	0x20003a04
 801d9cc:	20003b60 	.word	0x20003b60
 801d9d0:	20003a00 	.word	0x20003a00
 801d9d4:	20003bb4 	.word	0x20003bb4

0801d9d8 <prvAddCurrentTaskToDelayedList>:
 801d9d8:	b580      	push	{r7, lr}
 801d9da:	b084      	sub	sp, #16
 801d9dc:	af00      	add	r7, sp, #0
 801d9de:	6078      	str	r0, [r7, #4]
 801d9e0:	6039      	str	r1, [r7, #0]
 801d9e2:	4b29      	ldr	r3, [pc, #164]	; (801da88 <prvAddCurrentTaskToDelayedList+0xb0>)
 801d9e4:	681b      	ldr	r3, [r3, #0]
 801d9e6:	60fb      	str	r3, [r7, #12]
 801d9e8:	4b28      	ldr	r3, [pc, #160]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801d9ea:	681b      	ldr	r3, [r3, #0]
 801d9ec:	3304      	adds	r3, #4
 801d9ee:	4618      	mov	r0, r3
 801d9f0:	f7fe f8ee 	bl	801bbd0 <uxListRemove>
 801d9f4:	4603      	mov	r3, r0
 801d9f6:	2b00      	cmp	r3, #0
 801d9f8:	d10b      	bne.n	801da12 <prvAddCurrentTaskToDelayedList+0x3a>
 801d9fa:	4b24      	ldr	r3, [pc, #144]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801d9fc:	681b      	ldr	r3, [r3, #0]
 801d9fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801da00:	2201      	movs	r2, #1
 801da02:	fa02 f303 	lsl.w	r3, r2, r3
 801da06:	43da      	mvns	r2, r3
 801da08:	4b21      	ldr	r3, [pc, #132]	; (801da90 <prvAddCurrentTaskToDelayedList+0xb8>)
 801da0a:	681b      	ldr	r3, [r3, #0]
 801da0c:	4013      	ands	r3, r2
 801da0e:	4a20      	ldr	r2, [pc, #128]	; (801da90 <prvAddCurrentTaskToDelayedList+0xb8>)
 801da10:	6013      	str	r3, [r2, #0]
 801da12:	687b      	ldr	r3, [r7, #4]
 801da14:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801da18:	d10a      	bne.n	801da30 <prvAddCurrentTaskToDelayedList+0x58>
 801da1a:	683b      	ldr	r3, [r7, #0]
 801da1c:	2b00      	cmp	r3, #0
 801da1e:	d007      	beq.n	801da30 <prvAddCurrentTaskToDelayedList+0x58>
 801da20:	4b1a      	ldr	r3, [pc, #104]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801da22:	681b      	ldr	r3, [r3, #0]
 801da24:	3304      	adds	r3, #4
 801da26:	4619      	mov	r1, r3
 801da28:	481a      	ldr	r0, [pc, #104]	; (801da94 <prvAddCurrentTaskToDelayedList+0xbc>)
 801da2a:	f7fe f874 	bl	801bb16 <vListInsertEnd>
 801da2e:	e026      	b.n	801da7e <prvAddCurrentTaskToDelayedList+0xa6>
 801da30:	68fa      	ldr	r2, [r7, #12]
 801da32:	687b      	ldr	r3, [r7, #4]
 801da34:	4413      	add	r3, r2
 801da36:	60bb      	str	r3, [r7, #8]
 801da38:	4b14      	ldr	r3, [pc, #80]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801da3a:	681b      	ldr	r3, [r3, #0]
 801da3c:	68ba      	ldr	r2, [r7, #8]
 801da3e:	605a      	str	r2, [r3, #4]
 801da40:	68ba      	ldr	r2, [r7, #8]
 801da42:	68fb      	ldr	r3, [r7, #12]
 801da44:	429a      	cmp	r2, r3
 801da46:	d209      	bcs.n	801da5c <prvAddCurrentTaskToDelayedList+0x84>
 801da48:	4b13      	ldr	r3, [pc, #76]	; (801da98 <prvAddCurrentTaskToDelayedList+0xc0>)
 801da4a:	681a      	ldr	r2, [r3, #0]
 801da4c:	4b0f      	ldr	r3, [pc, #60]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801da4e:	681b      	ldr	r3, [r3, #0]
 801da50:	3304      	adds	r3, #4
 801da52:	4619      	mov	r1, r3
 801da54:	4610      	mov	r0, r2
 801da56:	f7fe f882 	bl	801bb5e <vListInsert>
 801da5a:	e010      	b.n	801da7e <prvAddCurrentTaskToDelayedList+0xa6>
 801da5c:	4b0f      	ldr	r3, [pc, #60]	; (801da9c <prvAddCurrentTaskToDelayedList+0xc4>)
 801da5e:	681a      	ldr	r2, [r3, #0]
 801da60:	4b0a      	ldr	r3, [pc, #40]	; (801da8c <prvAddCurrentTaskToDelayedList+0xb4>)
 801da62:	681b      	ldr	r3, [r3, #0]
 801da64:	3304      	adds	r3, #4
 801da66:	4619      	mov	r1, r3
 801da68:	4610      	mov	r0, r2
 801da6a:	f7fe f878 	bl	801bb5e <vListInsert>
 801da6e:	4b0c      	ldr	r3, [pc, #48]	; (801daa0 <prvAddCurrentTaskToDelayedList+0xc8>)
 801da70:	681b      	ldr	r3, [r3, #0]
 801da72:	68ba      	ldr	r2, [r7, #8]
 801da74:	429a      	cmp	r2, r3
 801da76:	d202      	bcs.n	801da7e <prvAddCurrentTaskToDelayedList+0xa6>
 801da78:	4a09      	ldr	r2, [pc, #36]	; (801daa0 <prvAddCurrentTaskToDelayedList+0xc8>)
 801da7a:	68bb      	ldr	r3, [r7, #8]
 801da7c:	6013      	str	r3, [r2, #0]
 801da7e:	bf00      	nop
 801da80:	3710      	adds	r7, #16
 801da82:	46bd      	mov	sp, r7
 801da84:	bd80      	pop	{r7, pc}
 801da86:	bf00      	nop
 801da88:	20003ba4 	.word	0x20003ba4
 801da8c:	20003a00 	.word	0x20003a00
 801da90:	20003ba8 	.word	0x20003ba8
 801da94:	20003b8c 	.word	0x20003b8c
 801da98:	20003b5c 	.word	0x20003b5c
 801da9c:	20003b58 	.word	0x20003b58
 801daa0:	20003bc0 	.word	0x20003bc0

0801daa4 <xTimerCreateTimerTask>:
 801daa4:	b580      	push	{r7, lr}
 801daa6:	b08a      	sub	sp, #40	; 0x28
 801daa8:	af04      	add	r7, sp, #16
 801daaa:	2300      	movs	r3, #0
 801daac:	617b      	str	r3, [r7, #20]
 801daae:	f000 fb07 	bl	801e0c0 <prvCheckForValidListAndQueue>
 801dab2:	4b1c      	ldr	r3, [pc, #112]	; (801db24 <xTimerCreateTimerTask+0x80>)
 801dab4:	681b      	ldr	r3, [r3, #0]
 801dab6:	2b00      	cmp	r3, #0
 801dab8:	d021      	beq.n	801dafe <xTimerCreateTimerTask+0x5a>
 801daba:	2300      	movs	r3, #0
 801dabc:	60fb      	str	r3, [r7, #12]
 801dabe:	2300      	movs	r3, #0
 801dac0:	60bb      	str	r3, [r7, #8]
 801dac2:	1d3a      	adds	r2, r7, #4
 801dac4:	f107 0108 	add.w	r1, r7, #8
 801dac8:	f107 030c 	add.w	r3, r7, #12
 801dacc:	4618      	mov	r0, r3
 801dace:	f7e5 fc15 	bl	80032fc <vApplicationGetTimerTaskMemory>
 801dad2:	6879      	ldr	r1, [r7, #4]
 801dad4:	68bb      	ldr	r3, [r7, #8]
 801dad6:	68fa      	ldr	r2, [r7, #12]
 801dad8:	9202      	str	r2, [sp, #8]
 801dada:	9301      	str	r3, [sp, #4]
 801dadc:	2302      	movs	r3, #2
 801dade:	9300      	str	r3, [sp, #0]
 801dae0:	2300      	movs	r3, #0
 801dae2:	460a      	mov	r2, r1
 801dae4:	4910      	ldr	r1, [pc, #64]	; (801db28 <xTimerCreateTimerTask+0x84>)
 801dae6:	4811      	ldr	r0, [pc, #68]	; (801db2c <xTimerCreateTimerTask+0x88>)
 801dae8:	f7fe fe4e 	bl	801c788 <xTaskCreateStatic>
 801daec:	4603      	mov	r3, r0
 801daee:	4a10      	ldr	r2, [pc, #64]	; (801db30 <xTimerCreateTimerTask+0x8c>)
 801daf0:	6013      	str	r3, [r2, #0]
 801daf2:	4b0f      	ldr	r3, [pc, #60]	; (801db30 <xTimerCreateTimerTask+0x8c>)
 801daf4:	681b      	ldr	r3, [r3, #0]
 801daf6:	2b00      	cmp	r3, #0
 801daf8:	d001      	beq.n	801dafe <xTimerCreateTimerTask+0x5a>
 801dafa:	2301      	movs	r3, #1
 801dafc:	617b      	str	r3, [r7, #20]
 801dafe:	697b      	ldr	r3, [r7, #20]
 801db00:	2b00      	cmp	r3, #0
 801db02:	d10a      	bne.n	801db1a <xTimerCreateTimerTask+0x76>
 801db04:	f04f 0350 	mov.w	r3, #80	; 0x50
 801db08:	f383 8811 	msr	BASEPRI, r3
 801db0c:	f3bf 8f6f 	isb	sy
 801db10:	f3bf 8f4f 	dsb	sy
 801db14:	613b      	str	r3, [r7, #16]
 801db16:	bf00      	nop
 801db18:	e7fe      	b.n	801db18 <xTimerCreateTimerTask+0x74>
 801db1a:	697b      	ldr	r3, [r7, #20]
 801db1c:	4618      	mov	r0, r3
 801db1e:	3718      	adds	r7, #24
 801db20:	46bd      	mov	sp, r7
 801db22:	bd80      	pop	{r7, pc}
 801db24:	20003c04 	.word	0x20003c04
 801db28:	080269c0 	.word	0x080269c0
 801db2c:	0801dc69 	.word	0x0801dc69
 801db30:	20003c08 	.word	0x20003c08

0801db34 <xTimerGenericCommand>:
 801db34:	b580      	push	{r7, lr}
 801db36:	b08a      	sub	sp, #40	; 0x28
 801db38:	af00      	add	r7, sp, #0
 801db3a:	60f8      	str	r0, [r7, #12]
 801db3c:	60b9      	str	r1, [r7, #8]
 801db3e:	607a      	str	r2, [r7, #4]
 801db40:	603b      	str	r3, [r7, #0]
 801db42:	2300      	movs	r3, #0
 801db44:	627b      	str	r3, [r7, #36]	; 0x24
 801db46:	68fb      	ldr	r3, [r7, #12]
 801db48:	2b00      	cmp	r3, #0
 801db4a:	d10a      	bne.n	801db62 <xTimerGenericCommand+0x2e>
 801db4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801db50:	f383 8811 	msr	BASEPRI, r3
 801db54:	f3bf 8f6f 	isb	sy
 801db58:	f3bf 8f4f 	dsb	sy
 801db5c:	623b      	str	r3, [r7, #32]
 801db5e:	bf00      	nop
 801db60:	e7fe      	b.n	801db60 <xTimerGenericCommand+0x2c>
 801db62:	4b1a      	ldr	r3, [pc, #104]	; (801dbcc <xTimerGenericCommand+0x98>)
 801db64:	681b      	ldr	r3, [r3, #0]
 801db66:	2b00      	cmp	r3, #0
 801db68:	d02a      	beq.n	801dbc0 <xTimerGenericCommand+0x8c>
 801db6a:	68bb      	ldr	r3, [r7, #8]
 801db6c:	613b      	str	r3, [r7, #16]
 801db6e:	687b      	ldr	r3, [r7, #4]
 801db70:	617b      	str	r3, [r7, #20]
 801db72:	68fb      	ldr	r3, [r7, #12]
 801db74:	61bb      	str	r3, [r7, #24]
 801db76:	68bb      	ldr	r3, [r7, #8]
 801db78:	2b05      	cmp	r3, #5
 801db7a:	dc18      	bgt.n	801dbae <xTimerGenericCommand+0x7a>
 801db7c:	f7ff fd90 	bl	801d6a0 <xTaskGetSchedulerState>
 801db80:	4603      	mov	r3, r0
 801db82:	2b02      	cmp	r3, #2
 801db84:	d109      	bne.n	801db9a <xTimerGenericCommand+0x66>
 801db86:	4b11      	ldr	r3, [pc, #68]	; (801dbcc <xTimerGenericCommand+0x98>)
 801db88:	6818      	ldr	r0, [r3, #0]
 801db8a:	f107 0110 	add.w	r1, r7, #16
 801db8e:	2300      	movs	r3, #0
 801db90:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801db92:	f7fe f985 	bl	801bea0 <xQueueGenericSend>
 801db96:	6278      	str	r0, [r7, #36]	; 0x24
 801db98:	e012      	b.n	801dbc0 <xTimerGenericCommand+0x8c>
 801db9a:	4b0c      	ldr	r3, [pc, #48]	; (801dbcc <xTimerGenericCommand+0x98>)
 801db9c:	6818      	ldr	r0, [r3, #0]
 801db9e:	f107 0110 	add.w	r1, r7, #16
 801dba2:	2300      	movs	r3, #0
 801dba4:	2200      	movs	r2, #0
 801dba6:	f7fe f97b 	bl	801bea0 <xQueueGenericSend>
 801dbaa:	6278      	str	r0, [r7, #36]	; 0x24
 801dbac:	e008      	b.n	801dbc0 <xTimerGenericCommand+0x8c>
 801dbae:	4b07      	ldr	r3, [pc, #28]	; (801dbcc <xTimerGenericCommand+0x98>)
 801dbb0:	6818      	ldr	r0, [r3, #0]
 801dbb2:	f107 0110 	add.w	r1, r7, #16
 801dbb6:	2300      	movs	r3, #0
 801dbb8:	683a      	ldr	r2, [r7, #0]
 801dbba:	f7fe fa6f 	bl	801c09c <xQueueGenericSendFromISR>
 801dbbe:	6278      	str	r0, [r7, #36]	; 0x24
 801dbc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801dbc2:	4618      	mov	r0, r3
 801dbc4:	3728      	adds	r7, #40	; 0x28
 801dbc6:	46bd      	mov	sp, r7
 801dbc8:	bd80      	pop	{r7, pc}
 801dbca:	bf00      	nop
 801dbcc:	20003c04 	.word	0x20003c04

0801dbd0 <prvProcessExpiredTimer>:
 801dbd0:	b580      	push	{r7, lr}
 801dbd2:	b088      	sub	sp, #32
 801dbd4:	af02      	add	r7, sp, #8
 801dbd6:	6078      	str	r0, [r7, #4]
 801dbd8:	6039      	str	r1, [r7, #0]
 801dbda:	4b22      	ldr	r3, [pc, #136]	; (801dc64 <prvProcessExpiredTimer+0x94>)
 801dbdc:	681b      	ldr	r3, [r3, #0]
 801dbde:	68db      	ldr	r3, [r3, #12]
 801dbe0:	68db      	ldr	r3, [r3, #12]
 801dbe2:	617b      	str	r3, [r7, #20]
 801dbe4:	697b      	ldr	r3, [r7, #20]
 801dbe6:	3304      	adds	r3, #4
 801dbe8:	4618      	mov	r0, r3
 801dbea:	f7fd fff1 	bl	801bbd0 <uxListRemove>
 801dbee:	697b      	ldr	r3, [r7, #20]
 801dbf0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dbf4:	f003 0304 	and.w	r3, r3, #4
 801dbf8:	2b00      	cmp	r3, #0
 801dbfa:	d022      	beq.n	801dc42 <prvProcessExpiredTimer+0x72>
 801dbfc:	697b      	ldr	r3, [r7, #20]
 801dbfe:	699a      	ldr	r2, [r3, #24]
 801dc00:	687b      	ldr	r3, [r7, #4]
 801dc02:	18d1      	adds	r1, r2, r3
 801dc04:	687b      	ldr	r3, [r7, #4]
 801dc06:	683a      	ldr	r2, [r7, #0]
 801dc08:	6978      	ldr	r0, [r7, #20]
 801dc0a:	f000 f8d1 	bl	801ddb0 <prvInsertTimerInActiveList>
 801dc0e:	4603      	mov	r3, r0
 801dc10:	2b00      	cmp	r3, #0
 801dc12:	d01f      	beq.n	801dc54 <prvProcessExpiredTimer+0x84>
 801dc14:	2300      	movs	r3, #0
 801dc16:	9300      	str	r3, [sp, #0]
 801dc18:	2300      	movs	r3, #0
 801dc1a:	687a      	ldr	r2, [r7, #4]
 801dc1c:	2100      	movs	r1, #0
 801dc1e:	6978      	ldr	r0, [r7, #20]
 801dc20:	f7ff ff88 	bl	801db34 <xTimerGenericCommand>
 801dc24:	6138      	str	r0, [r7, #16]
 801dc26:	693b      	ldr	r3, [r7, #16]
 801dc28:	2b00      	cmp	r3, #0
 801dc2a:	d113      	bne.n	801dc54 <prvProcessExpiredTimer+0x84>
 801dc2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801dc30:	f383 8811 	msr	BASEPRI, r3
 801dc34:	f3bf 8f6f 	isb	sy
 801dc38:	f3bf 8f4f 	dsb	sy
 801dc3c:	60fb      	str	r3, [r7, #12]
 801dc3e:	bf00      	nop
 801dc40:	e7fe      	b.n	801dc40 <prvProcessExpiredTimer+0x70>
 801dc42:	697b      	ldr	r3, [r7, #20]
 801dc44:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dc48:	f023 0301 	bic.w	r3, r3, #1
 801dc4c:	b2da      	uxtb	r2, r3
 801dc4e:	697b      	ldr	r3, [r7, #20]
 801dc50:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801dc54:	697b      	ldr	r3, [r7, #20]
 801dc56:	6a1b      	ldr	r3, [r3, #32]
 801dc58:	6978      	ldr	r0, [r7, #20]
 801dc5a:	4798      	blx	r3
 801dc5c:	bf00      	nop
 801dc5e:	3718      	adds	r7, #24
 801dc60:	46bd      	mov	sp, r7
 801dc62:	bd80      	pop	{r7, pc}
 801dc64:	20003bfc 	.word	0x20003bfc

0801dc68 <prvTimerTask>:
 801dc68:	b580      	push	{r7, lr}
 801dc6a:	b084      	sub	sp, #16
 801dc6c:	af00      	add	r7, sp, #0
 801dc6e:	6078      	str	r0, [r7, #4]
 801dc70:	f107 0308 	add.w	r3, r7, #8
 801dc74:	4618      	mov	r0, r3
 801dc76:	f000 f857 	bl	801dd28 <prvGetNextExpireTime>
 801dc7a:	60f8      	str	r0, [r7, #12]
 801dc7c:	68bb      	ldr	r3, [r7, #8]
 801dc7e:	4619      	mov	r1, r3
 801dc80:	68f8      	ldr	r0, [r7, #12]
 801dc82:	f000 f803 	bl	801dc8c <prvProcessTimerOrBlockTask>
 801dc86:	f000 f8d5 	bl	801de34 <prvProcessReceivedCommands>
 801dc8a:	e7f1      	b.n	801dc70 <prvTimerTask+0x8>

0801dc8c <prvProcessTimerOrBlockTask>:
 801dc8c:	b580      	push	{r7, lr}
 801dc8e:	b084      	sub	sp, #16
 801dc90:	af00      	add	r7, sp, #0
 801dc92:	6078      	str	r0, [r7, #4]
 801dc94:	6039      	str	r1, [r7, #0]
 801dc96:	f7ff f855 	bl	801cd44 <vTaskSuspendAll>
 801dc9a:	f107 0308 	add.w	r3, r7, #8
 801dc9e:	4618      	mov	r0, r3
 801dca0:	f000 f866 	bl	801dd70 <prvSampleTimeNow>
 801dca4:	60f8      	str	r0, [r7, #12]
 801dca6:	68bb      	ldr	r3, [r7, #8]
 801dca8:	2b00      	cmp	r3, #0
 801dcaa:	d130      	bne.n	801dd0e <prvProcessTimerOrBlockTask+0x82>
 801dcac:	683b      	ldr	r3, [r7, #0]
 801dcae:	2b00      	cmp	r3, #0
 801dcb0:	d10a      	bne.n	801dcc8 <prvProcessTimerOrBlockTask+0x3c>
 801dcb2:	687a      	ldr	r2, [r7, #4]
 801dcb4:	68fb      	ldr	r3, [r7, #12]
 801dcb6:	429a      	cmp	r2, r3
 801dcb8:	d806      	bhi.n	801dcc8 <prvProcessTimerOrBlockTask+0x3c>
 801dcba:	f7ff f851 	bl	801cd60 <xTaskResumeAll>
 801dcbe:	68f9      	ldr	r1, [r7, #12]
 801dcc0:	6878      	ldr	r0, [r7, #4]
 801dcc2:	f7ff ff85 	bl	801dbd0 <prvProcessExpiredTimer>
 801dcc6:	e024      	b.n	801dd12 <prvProcessTimerOrBlockTask+0x86>
 801dcc8:	683b      	ldr	r3, [r7, #0]
 801dcca:	2b00      	cmp	r3, #0
 801dccc:	d008      	beq.n	801dce0 <prvProcessTimerOrBlockTask+0x54>
 801dcce:	4b13      	ldr	r3, [pc, #76]	; (801dd1c <prvProcessTimerOrBlockTask+0x90>)
 801dcd0:	681b      	ldr	r3, [r3, #0]
 801dcd2:	681b      	ldr	r3, [r3, #0]
 801dcd4:	2b00      	cmp	r3, #0
 801dcd6:	d101      	bne.n	801dcdc <prvProcessTimerOrBlockTask+0x50>
 801dcd8:	2301      	movs	r3, #1
 801dcda:	e000      	b.n	801dcde <prvProcessTimerOrBlockTask+0x52>
 801dcdc:	2300      	movs	r3, #0
 801dcde:	603b      	str	r3, [r7, #0]
 801dce0:	4b0f      	ldr	r3, [pc, #60]	; (801dd20 <prvProcessTimerOrBlockTask+0x94>)
 801dce2:	6818      	ldr	r0, [r3, #0]
 801dce4:	687a      	ldr	r2, [r7, #4]
 801dce6:	68fb      	ldr	r3, [r7, #12]
 801dce8:	1ad3      	subs	r3, r2, r3
 801dcea:	683a      	ldr	r2, [r7, #0]
 801dcec:	4619      	mov	r1, r3
 801dcee:	f7fe fd17 	bl	801c720 <vQueueWaitForMessageRestricted>
 801dcf2:	f7ff f835 	bl	801cd60 <xTaskResumeAll>
 801dcf6:	4603      	mov	r3, r0
 801dcf8:	2b00      	cmp	r3, #0
 801dcfa:	d10a      	bne.n	801dd12 <prvProcessTimerOrBlockTask+0x86>
 801dcfc:	4b09      	ldr	r3, [pc, #36]	; (801dd24 <prvProcessTimerOrBlockTask+0x98>)
 801dcfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801dd02:	601a      	str	r2, [r3, #0]
 801dd04:	f3bf 8f4f 	dsb	sy
 801dd08:	f3bf 8f6f 	isb	sy
 801dd0c:	e001      	b.n	801dd12 <prvProcessTimerOrBlockTask+0x86>
 801dd0e:	f7ff f827 	bl	801cd60 <xTaskResumeAll>
 801dd12:	bf00      	nop
 801dd14:	3710      	adds	r7, #16
 801dd16:	46bd      	mov	sp, r7
 801dd18:	bd80      	pop	{r7, pc}
 801dd1a:	bf00      	nop
 801dd1c:	20003c00 	.word	0x20003c00
 801dd20:	20003c04 	.word	0x20003c04
 801dd24:	e000ed04 	.word	0xe000ed04

0801dd28 <prvGetNextExpireTime>:
 801dd28:	b480      	push	{r7}
 801dd2a:	b085      	sub	sp, #20
 801dd2c:	af00      	add	r7, sp, #0
 801dd2e:	6078      	str	r0, [r7, #4]
 801dd30:	4b0e      	ldr	r3, [pc, #56]	; (801dd6c <prvGetNextExpireTime+0x44>)
 801dd32:	681b      	ldr	r3, [r3, #0]
 801dd34:	681b      	ldr	r3, [r3, #0]
 801dd36:	2b00      	cmp	r3, #0
 801dd38:	d101      	bne.n	801dd3e <prvGetNextExpireTime+0x16>
 801dd3a:	2201      	movs	r2, #1
 801dd3c:	e000      	b.n	801dd40 <prvGetNextExpireTime+0x18>
 801dd3e:	2200      	movs	r2, #0
 801dd40:	687b      	ldr	r3, [r7, #4]
 801dd42:	601a      	str	r2, [r3, #0]
 801dd44:	687b      	ldr	r3, [r7, #4]
 801dd46:	681b      	ldr	r3, [r3, #0]
 801dd48:	2b00      	cmp	r3, #0
 801dd4a:	d105      	bne.n	801dd58 <prvGetNextExpireTime+0x30>
 801dd4c:	4b07      	ldr	r3, [pc, #28]	; (801dd6c <prvGetNextExpireTime+0x44>)
 801dd4e:	681b      	ldr	r3, [r3, #0]
 801dd50:	68db      	ldr	r3, [r3, #12]
 801dd52:	681b      	ldr	r3, [r3, #0]
 801dd54:	60fb      	str	r3, [r7, #12]
 801dd56:	e001      	b.n	801dd5c <prvGetNextExpireTime+0x34>
 801dd58:	2300      	movs	r3, #0
 801dd5a:	60fb      	str	r3, [r7, #12]
 801dd5c:	68fb      	ldr	r3, [r7, #12]
 801dd5e:	4618      	mov	r0, r3
 801dd60:	3714      	adds	r7, #20
 801dd62:	46bd      	mov	sp, r7
 801dd64:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dd68:	4770      	bx	lr
 801dd6a:	bf00      	nop
 801dd6c:	20003bfc 	.word	0x20003bfc

0801dd70 <prvSampleTimeNow>:
 801dd70:	b580      	push	{r7, lr}
 801dd72:	b084      	sub	sp, #16
 801dd74:	af00      	add	r7, sp, #0
 801dd76:	6078      	str	r0, [r7, #4]
 801dd78:	f7ff f88e 	bl	801ce98 <xTaskGetTickCount>
 801dd7c:	60f8      	str	r0, [r7, #12]
 801dd7e:	4b0b      	ldr	r3, [pc, #44]	; (801ddac <prvSampleTimeNow+0x3c>)
 801dd80:	681b      	ldr	r3, [r3, #0]
 801dd82:	68fa      	ldr	r2, [r7, #12]
 801dd84:	429a      	cmp	r2, r3
 801dd86:	d205      	bcs.n	801dd94 <prvSampleTimeNow+0x24>
 801dd88:	f000 f936 	bl	801dff8 <prvSwitchTimerLists>
 801dd8c:	687b      	ldr	r3, [r7, #4]
 801dd8e:	2201      	movs	r2, #1
 801dd90:	601a      	str	r2, [r3, #0]
 801dd92:	e002      	b.n	801dd9a <prvSampleTimeNow+0x2a>
 801dd94:	687b      	ldr	r3, [r7, #4]
 801dd96:	2200      	movs	r2, #0
 801dd98:	601a      	str	r2, [r3, #0]
 801dd9a:	4a04      	ldr	r2, [pc, #16]	; (801ddac <prvSampleTimeNow+0x3c>)
 801dd9c:	68fb      	ldr	r3, [r7, #12]
 801dd9e:	6013      	str	r3, [r2, #0]
 801dda0:	68fb      	ldr	r3, [r7, #12]
 801dda2:	4618      	mov	r0, r3
 801dda4:	3710      	adds	r7, #16
 801dda6:	46bd      	mov	sp, r7
 801dda8:	bd80      	pop	{r7, pc}
 801ddaa:	bf00      	nop
 801ddac:	20003c0c 	.word	0x20003c0c

0801ddb0 <prvInsertTimerInActiveList>:
 801ddb0:	b580      	push	{r7, lr}
 801ddb2:	b086      	sub	sp, #24
 801ddb4:	af00      	add	r7, sp, #0
 801ddb6:	60f8      	str	r0, [r7, #12]
 801ddb8:	60b9      	str	r1, [r7, #8]
 801ddba:	607a      	str	r2, [r7, #4]
 801ddbc:	603b      	str	r3, [r7, #0]
 801ddbe:	2300      	movs	r3, #0
 801ddc0:	617b      	str	r3, [r7, #20]
 801ddc2:	68fb      	ldr	r3, [r7, #12]
 801ddc4:	68ba      	ldr	r2, [r7, #8]
 801ddc6:	605a      	str	r2, [r3, #4]
 801ddc8:	68fb      	ldr	r3, [r7, #12]
 801ddca:	68fa      	ldr	r2, [r7, #12]
 801ddcc:	611a      	str	r2, [r3, #16]
 801ddce:	68ba      	ldr	r2, [r7, #8]
 801ddd0:	687b      	ldr	r3, [r7, #4]
 801ddd2:	429a      	cmp	r2, r3
 801ddd4:	d812      	bhi.n	801ddfc <prvInsertTimerInActiveList+0x4c>
 801ddd6:	687a      	ldr	r2, [r7, #4]
 801ddd8:	683b      	ldr	r3, [r7, #0]
 801ddda:	1ad2      	subs	r2, r2, r3
 801dddc:	68fb      	ldr	r3, [r7, #12]
 801ddde:	699b      	ldr	r3, [r3, #24]
 801dde0:	429a      	cmp	r2, r3
 801dde2:	d302      	bcc.n	801ddea <prvInsertTimerInActiveList+0x3a>
 801dde4:	2301      	movs	r3, #1
 801dde6:	617b      	str	r3, [r7, #20]
 801dde8:	e01b      	b.n	801de22 <prvInsertTimerInActiveList+0x72>
 801ddea:	4b10      	ldr	r3, [pc, #64]	; (801de2c <prvInsertTimerInActiveList+0x7c>)
 801ddec:	681a      	ldr	r2, [r3, #0]
 801ddee:	68fb      	ldr	r3, [r7, #12]
 801ddf0:	3304      	adds	r3, #4
 801ddf2:	4619      	mov	r1, r3
 801ddf4:	4610      	mov	r0, r2
 801ddf6:	f7fd feb2 	bl	801bb5e <vListInsert>
 801ddfa:	e012      	b.n	801de22 <prvInsertTimerInActiveList+0x72>
 801ddfc:	687a      	ldr	r2, [r7, #4]
 801ddfe:	683b      	ldr	r3, [r7, #0]
 801de00:	429a      	cmp	r2, r3
 801de02:	d206      	bcs.n	801de12 <prvInsertTimerInActiveList+0x62>
 801de04:	68ba      	ldr	r2, [r7, #8]
 801de06:	683b      	ldr	r3, [r7, #0]
 801de08:	429a      	cmp	r2, r3
 801de0a:	d302      	bcc.n	801de12 <prvInsertTimerInActiveList+0x62>
 801de0c:	2301      	movs	r3, #1
 801de0e:	617b      	str	r3, [r7, #20]
 801de10:	e007      	b.n	801de22 <prvInsertTimerInActiveList+0x72>
 801de12:	4b07      	ldr	r3, [pc, #28]	; (801de30 <prvInsertTimerInActiveList+0x80>)
 801de14:	681a      	ldr	r2, [r3, #0]
 801de16:	68fb      	ldr	r3, [r7, #12]
 801de18:	3304      	adds	r3, #4
 801de1a:	4619      	mov	r1, r3
 801de1c:	4610      	mov	r0, r2
 801de1e:	f7fd fe9e 	bl	801bb5e <vListInsert>
 801de22:	697b      	ldr	r3, [r7, #20]
 801de24:	4618      	mov	r0, r3
 801de26:	3718      	adds	r7, #24
 801de28:	46bd      	mov	sp, r7
 801de2a:	bd80      	pop	{r7, pc}
 801de2c:	20003c00 	.word	0x20003c00
 801de30:	20003bfc 	.word	0x20003bfc

0801de34 <prvProcessReceivedCommands>:
 801de34:	b580      	push	{r7, lr}
 801de36:	b08e      	sub	sp, #56	; 0x38
 801de38:	af02      	add	r7, sp, #8
 801de3a:	e0ca      	b.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801de3c:	687b      	ldr	r3, [r7, #4]
 801de3e:	2b00      	cmp	r3, #0
 801de40:	da18      	bge.n	801de74 <prvProcessReceivedCommands+0x40>
 801de42:	1d3b      	adds	r3, r7, #4
 801de44:	3304      	adds	r3, #4
 801de46:	62fb      	str	r3, [r7, #44]	; 0x2c
 801de48:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801de4a:	2b00      	cmp	r3, #0
 801de4c:	d10a      	bne.n	801de64 <prvProcessReceivedCommands+0x30>
 801de4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801de52:	f383 8811 	msr	BASEPRI, r3
 801de56:	f3bf 8f6f 	isb	sy
 801de5a:	f3bf 8f4f 	dsb	sy
 801de5e:	61fb      	str	r3, [r7, #28]
 801de60:	bf00      	nop
 801de62:	e7fe      	b.n	801de62 <prvProcessReceivedCommands+0x2e>
 801de64:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801de66:	681b      	ldr	r3, [r3, #0]
 801de68:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801de6a:	6850      	ldr	r0, [r2, #4]
 801de6c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801de6e:	6892      	ldr	r2, [r2, #8]
 801de70:	4611      	mov	r1, r2
 801de72:	4798      	blx	r3
 801de74:	687b      	ldr	r3, [r7, #4]
 801de76:	2b00      	cmp	r3, #0
 801de78:	f2c0 80aa 	blt.w	801dfd0 <prvProcessReceivedCommands+0x19c>
 801de7c:	68fb      	ldr	r3, [r7, #12]
 801de7e:	62bb      	str	r3, [r7, #40]	; 0x28
 801de80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de82:	695b      	ldr	r3, [r3, #20]
 801de84:	2b00      	cmp	r3, #0
 801de86:	d004      	beq.n	801de92 <prvProcessReceivedCommands+0x5e>
 801de88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801de8a:	3304      	adds	r3, #4
 801de8c:	4618      	mov	r0, r3
 801de8e:	f7fd fe9f 	bl	801bbd0 <uxListRemove>
 801de92:	463b      	mov	r3, r7
 801de94:	4618      	mov	r0, r3
 801de96:	f7ff ff6b 	bl	801dd70 <prvSampleTimeNow>
 801de9a:	6278      	str	r0, [r7, #36]	; 0x24
 801de9c:	687b      	ldr	r3, [r7, #4]
 801de9e:	2b09      	cmp	r3, #9
 801dea0:	f200 8097 	bhi.w	801dfd2 <prvProcessReceivedCommands+0x19e>
 801dea4:	a201      	add	r2, pc, #4	; (adr r2, 801deac <prvProcessReceivedCommands+0x78>)
 801dea6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801deaa:	bf00      	nop
 801deac:	0801ded5 	.word	0x0801ded5
 801deb0:	0801ded5 	.word	0x0801ded5
 801deb4:	0801ded5 	.word	0x0801ded5
 801deb8:	0801df49 	.word	0x0801df49
 801debc:	0801df5d 	.word	0x0801df5d
 801dec0:	0801dfa7 	.word	0x0801dfa7
 801dec4:	0801ded5 	.word	0x0801ded5
 801dec8:	0801ded5 	.word	0x0801ded5
 801decc:	0801df49 	.word	0x0801df49
 801ded0:	0801df5d 	.word	0x0801df5d
 801ded4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801ded6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801deda:	f043 0301 	orr.w	r3, r3, #1
 801dede:	b2da      	uxtb	r2, r3
 801dee0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dee2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801dee6:	68ba      	ldr	r2, [r7, #8]
 801dee8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801deea:	699b      	ldr	r3, [r3, #24]
 801deec:	18d1      	adds	r1, r2, r3
 801deee:	68bb      	ldr	r3, [r7, #8]
 801def0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801def2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801def4:	f7ff ff5c 	bl	801ddb0 <prvInsertTimerInActiveList>
 801def8:	4603      	mov	r3, r0
 801defa:	2b00      	cmp	r3, #0
 801defc:	d069      	beq.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801defe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df00:	6a1b      	ldr	r3, [r3, #32]
 801df02:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801df04:	4798      	blx	r3
 801df06:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df08:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801df0c:	f003 0304 	and.w	r3, r3, #4
 801df10:	2b00      	cmp	r3, #0
 801df12:	d05e      	beq.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801df14:	68ba      	ldr	r2, [r7, #8]
 801df16:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df18:	699b      	ldr	r3, [r3, #24]
 801df1a:	441a      	add	r2, r3
 801df1c:	2300      	movs	r3, #0
 801df1e:	9300      	str	r3, [sp, #0]
 801df20:	2300      	movs	r3, #0
 801df22:	2100      	movs	r1, #0
 801df24:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801df26:	f7ff fe05 	bl	801db34 <xTimerGenericCommand>
 801df2a:	6238      	str	r0, [r7, #32]
 801df2c:	6a3b      	ldr	r3, [r7, #32]
 801df2e:	2b00      	cmp	r3, #0
 801df30:	d14f      	bne.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801df32:	f04f 0350 	mov.w	r3, #80	; 0x50
 801df36:	f383 8811 	msr	BASEPRI, r3
 801df3a:	f3bf 8f6f 	isb	sy
 801df3e:	f3bf 8f4f 	dsb	sy
 801df42:	61bb      	str	r3, [r7, #24]
 801df44:	bf00      	nop
 801df46:	e7fe      	b.n	801df46 <prvProcessReceivedCommands+0x112>
 801df48:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df4a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801df4e:	f023 0301 	bic.w	r3, r3, #1
 801df52:	b2da      	uxtb	r2, r3
 801df54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df56:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801df5a:	e03a      	b.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801df5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df5e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801df62:	f043 0301 	orr.w	r3, r3, #1
 801df66:	b2da      	uxtb	r2, r3
 801df68:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df6a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801df6e:	68ba      	ldr	r2, [r7, #8]
 801df70:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df72:	619a      	str	r2, [r3, #24]
 801df74:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df76:	699b      	ldr	r3, [r3, #24]
 801df78:	2b00      	cmp	r3, #0
 801df7a:	d10a      	bne.n	801df92 <prvProcessReceivedCommands+0x15e>
 801df7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801df80:	f383 8811 	msr	BASEPRI, r3
 801df84:	f3bf 8f6f 	isb	sy
 801df88:	f3bf 8f4f 	dsb	sy
 801df8c:	617b      	str	r3, [r7, #20]
 801df8e:	bf00      	nop
 801df90:	e7fe      	b.n	801df90 <prvProcessReceivedCommands+0x15c>
 801df92:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801df94:	699a      	ldr	r2, [r3, #24]
 801df96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801df98:	18d1      	adds	r1, r2, r3
 801df9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801df9c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801df9e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801dfa0:	f7ff ff06 	bl	801ddb0 <prvInsertTimerInActiveList>
 801dfa4:	e015      	b.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801dfa6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dfa8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dfac:	f003 0302 	and.w	r3, r3, #2
 801dfb0:	2b00      	cmp	r3, #0
 801dfb2:	d103      	bne.n	801dfbc <prvProcessReceivedCommands+0x188>
 801dfb4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801dfb6:	f000 fbfb 	bl	801e7b0 <vPortFree>
 801dfba:	e00a      	b.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801dfbc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dfbe:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801dfc2:	f023 0301 	bic.w	r3, r3, #1
 801dfc6:	b2da      	uxtb	r2, r3
 801dfc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801dfca:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801dfce:	e000      	b.n	801dfd2 <prvProcessReceivedCommands+0x19e>
 801dfd0:	bf00      	nop
 801dfd2:	4b08      	ldr	r3, [pc, #32]	; (801dff4 <prvProcessReceivedCommands+0x1c0>)
 801dfd4:	681b      	ldr	r3, [r3, #0]
 801dfd6:	1d39      	adds	r1, r7, #4
 801dfd8:	2200      	movs	r2, #0
 801dfda:	4618      	mov	r0, r3
 801dfdc:	f7fe f986 	bl	801c2ec <xQueueReceive>
 801dfe0:	4603      	mov	r3, r0
 801dfe2:	2b00      	cmp	r3, #0
 801dfe4:	f47f af2a 	bne.w	801de3c <prvProcessReceivedCommands+0x8>
 801dfe8:	bf00      	nop
 801dfea:	bf00      	nop
 801dfec:	3730      	adds	r7, #48	; 0x30
 801dfee:	46bd      	mov	sp, r7
 801dff0:	bd80      	pop	{r7, pc}
 801dff2:	bf00      	nop
 801dff4:	20003c04 	.word	0x20003c04

0801dff8 <prvSwitchTimerLists>:
 801dff8:	b580      	push	{r7, lr}
 801dffa:	b088      	sub	sp, #32
 801dffc:	af02      	add	r7, sp, #8
 801dffe:	e048      	b.n	801e092 <prvSwitchTimerLists+0x9a>
 801e000:	4b2d      	ldr	r3, [pc, #180]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e002:	681b      	ldr	r3, [r3, #0]
 801e004:	68db      	ldr	r3, [r3, #12]
 801e006:	681b      	ldr	r3, [r3, #0]
 801e008:	613b      	str	r3, [r7, #16]
 801e00a:	4b2b      	ldr	r3, [pc, #172]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e00c:	681b      	ldr	r3, [r3, #0]
 801e00e:	68db      	ldr	r3, [r3, #12]
 801e010:	68db      	ldr	r3, [r3, #12]
 801e012:	60fb      	str	r3, [r7, #12]
 801e014:	68fb      	ldr	r3, [r7, #12]
 801e016:	3304      	adds	r3, #4
 801e018:	4618      	mov	r0, r3
 801e01a:	f7fd fdd9 	bl	801bbd0 <uxListRemove>
 801e01e:	68fb      	ldr	r3, [r7, #12]
 801e020:	6a1b      	ldr	r3, [r3, #32]
 801e022:	68f8      	ldr	r0, [r7, #12]
 801e024:	4798      	blx	r3
 801e026:	68fb      	ldr	r3, [r7, #12]
 801e028:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801e02c:	f003 0304 	and.w	r3, r3, #4
 801e030:	2b00      	cmp	r3, #0
 801e032:	d02e      	beq.n	801e092 <prvSwitchTimerLists+0x9a>
 801e034:	68fb      	ldr	r3, [r7, #12]
 801e036:	699b      	ldr	r3, [r3, #24]
 801e038:	693a      	ldr	r2, [r7, #16]
 801e03a:	4413      	add	r3, r2
 801e03c:	60bb      	str	r3, [r7, #8]
 801e03e:	68ba      	ldr	r2, [r7, #8]
 801e040:	693b      	ldr	r3, [r7, #16]
 801e042:	429a      	cmp	r2, r3
 801e044:	d90e      	bls.n	801e064 <prvSwitchTimerLists+0x6c>
 801e046:	68fb      	ldr	r3, [r7, #12]
 801e048:	68ba      	ldr	r2, [r7, #8]
 801e04a:	605a      	str	r2, [r3, #4]
 801e04c:	68fb      	ldr	r3, [r7, #12]
 801e04e:	68fa      	ldr	r2, [r7, #12]
 801e050:	611a      	str	r2, [r3, #16]
 801e052:	4b19      	ldr	r3, [pc, #100]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e054:	681a      	ldr	r2, [r3, #0]
 801e056:	68fb      	ldr	r3, [r7, #12]
 801e058:	3304      	adds	r3, #4
 801e05a:	4619      	mov	r1, r3
 801e05c:	4610      	mov	r0, r2
 801e05e:	f7fd fd7e 	bl	801bb5e <vListInsert>
 801e062:	e016      	b.n	801e092 <prvSwitchTimerLists+0x9a>
 801e064:	2300      	movs	r3, #0
 801e066:	9300      	str	r3, [sp, #0]
 801e068:	2300      	movs	r3, #0
 801e06a:	693a      	ldr	r2, [r7, #16]
 801e06c:	2100      	movs	r1, #0
 801e06e:	68f8      	ldr	r0, [r7, #12]
 801e070:	f7ff fd60 	bl	801db34 <xTimerGenericCommand>
 801e074:	6078      	str	r0, [r7, #4]
 801e076:	687b      	ldr	r3, [r7, #4]
 801e078:	2b00      	cmp	r3, #0
 801e07a:	d10a      	bne.n	801e092 <prvSwitchTimerLists+0x9a>
 801e07c:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e080:	f383 8811 	msr	BASEPRI, r3
 801e084:	f3bf 8f6f 	isb	sy
 801e088:	f3bf 8f4f 	dsb	sy
 801e08c:	603b      	str	r3, [r7, #0]
 801e08e:	bf00      	nop
 801e090:	e7fe      	b.n	801e090 <prvSwitchTimerLists+0x98>
 801e092:	4b09      	ldr	r3, [pc, #36]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e094:	681b      	ldr	r3, [r3, #0]
 801e096:	681b      	ldr	r3, [r3, #0]
 801e098:	2b00      	cmp	r3, #0
 801e09a:	d1b1      	bne.n	801e000 <prvSwitchTimerLists+0x8>
 801e09c:	4b06      	ldr	r3, [pc, #24]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e09e:	681b      	ldr	r3, [r3, #0]
 801e0a0:	617b      	str	r3, [r7, #20]
 801e0a2:	4b06      	ldr	r3, [pc, #24]	; (801e0bc <prvSwitchTimerLists+0xc4>)
 801e0a4:	681b      	ldr	r3, [r3, #0]
 801e0a6:	4a04      	ldr	r2, [pc, #16]	; (801e0b8 <prvSwitchTimerLists+0xc0>)
 801e0a8:	6013      	str	r3, [r2, #0]
 801e0aa:	4a04      	ldr	r2, [pc, #16]	; (801e0bc <prvSwitchTimerLists+0xc4>)
 801e0ac:	697b      	ldr	r3, [r7, #20]
 801e0ae:	6013      	str	r3, [r2, #0]
 801e0b0:	bf00      	nop
 801e0b2:	3718      	adds	r7, #24
 801e0b4:	46bd      	mov	sp, r7
 801e0b6:	bd80      	pop	{r7, pc}
 801e0b8:	20003bfc 	.word	0x20003bfc
 801e0bc:	20003c00 	.word	0x20003c00

0801e0c0 <prvCheckForValidListAndQueue>:
 801e0c0:	b580      	push	{r7, lr}
 801e0c2:	b082      	sub	sp, #8
 801e0c4:	af02      	add	r7, sp, #8
 801e0c6:	f000 f985 	bl	801e3d4 <vPortEnterCritical>
 801e0ca:	4b15      	ldr	r3, [pc, #84]	; (801e120 <prvCheckForValidListAndQueue+0x60>)
 801e0cc:	681b      	ldr	r3, [r3, #0]
 801e0ce:	2b00      	cmp	r3, #0
 801e0d0:	d120      	bne.n	801e114 <prvCheckForValidListAndQueue+0x54>
 801e0d2:	4814      	ldr	r0, [pc, #80]	; (801e124 <prvCheckForValidListAndQueue+0x64>)
 801e0d4:	f7fd fcf2 	bl	801babc <vListInitialise>
 801e0d8:	4813      	ldr	r0, [pc, #76]	; (801e128 <prvCheckForValidListAndQueue+0x68>)
 801e0da:	f7fd fcef 	bl	801babc <vListInitialise>
 801e0de:	4b13      	ldr	r3, [pc, #76]	; (801e12c <prvCheckForValidListAndQueue+0x6c>)
 801e0e0:	4a10      	ldr	r2, [pc, #64]	; (801e124 <prvCheckForValidListAndQueue+0x64>)
 801e0e2:	601a      	str	r2, [r3, #0]
 801e0e4:	4b12      	ldr	r3, [pc, #72]	; (801e130 <prvCheckForValidListAndQueue+0x70>)
 801e0e6:	4a10      	ldr	r2, [pc, #64]	; (801e128 <prvCheckForValidListAndQueue+0x68>)
 801e0e8:	601a      	str	r2, [r3, #0]
 801e0ea:	2300      	movs	r3, #0
 801e0ec:	9300      	str	r3, [sp, #0]
 801e0ee:	4b11      	ldr	r3, [pc, #68]	; (801e134 <prvCheckForValidListAndQueue+0x74>)
 801e0f0:	4a11      	ldr	r2, [pc, #68]	; (801e138 <prvCheckForValidListAndQueue+0x78>)
 801e0f2:	2110      	movs	r1, #16
 801e0f4:	200a      	movs	r0, #10
 801e0f6:	f7fd fdfd 	bl	801bcf4 <xQueueGenericCreateStatic>
 801e0fa:	4603      	mov	r3, r0
 801e0fc:	4a08      	ldr	r2, [pc, #32]	; (801e120 <prvCheckForValidListAndQueue+0x60>)
 801e0fe:	6013      	str	r3, [r2, #0]
 801e100:	4b07      	ldr	r3, [pc, #28]	; (801e120 <prvCheckForValidListAndQueue+0x60>)
 801e102:	681b      	ldr	r3, [r3, #0]
 801e104:	2b00      	cmp	r3, #0
 801e106:	d005      	beq.n	801e114 <prvCheckForValidListAndQueue+0x54>
 801e108:	4b05      	ldr	r3, [pc, #20]	; (801e120 <prvCheckForValidListAndQueue+0x60>)
 801e10a:	681b      	ldr	r3, [r3, #0]
 801e10c:	490b      	ldr	r1, [pc, #44]	; (801e13c <prvCheckForValidListAndQueue+0x7c>)
 801e10e:	4618      	mov	r0, r3
 801e110:	f7fe fadc 	bl	801c6cc <vQueueAddToRegistry>
 801e114:	f000 f98e 	bl	801e434 <vPortExitCritical>
 801e118:	bf00      	nop
 801e11a:	46bd      	mov	sp, r7
 801e11c:	bd80      	pop	{r7, pc}
 801e11e:	bf00      	nop
 801e120:	20003c04 	.word	0x20003c04
 801e124:	20003bd4 	.word	0x20003bd4
 801e128:	20003be8 	.word	0x20003be8
 801e12c:	20003bfc 	.word	0x20003bfc
 801e130:	20003c00 	.word	0x20003c00
 801e134:	20003cb0 	.word	0x20003cb0
 801e138:	20003c10 	.word	0x20003c10
 801e13c:	080269c8 	.word	0x080269c8

0801e140 <xTimerPendFunctionCallFromISR>:
 801e140:	b580      	push	{r7, lr}
 801e142:	b08a      	sub	sp, #40	; 0x28
 801e144:	af00      	add	r7, sp, #0
 801e146:	60f8      	str	r0, [r7, #12]
 801e148:	60b9      	str	r1, [r7, #8]
 801e14a:	607a      	str	r2, [r7, #4]
 801e14c:	603b      	str	r3, [r7, #0]
 801e14e:	f06f 0301 	mvn.w	r3, #1
 801e152:	617b      	str	r3, [r7, #20]
 801e154:	68fb      	ldr	r3, [r7, #12]
 801e156:	61bb      	str	r3, [r7, #24]
 801e158:	68bb      	ldr	r3, [r7, #8]
 801e15a:	61fb      	str	r3, [r7, #28]
 801e15c:	687b      	ldr	r3, [r7, #4]
 801e15e:	623b      	str	r3, [r7, #32]
 801e160:	4b06      	ldr	r3, [pc, #24]	; (801e17c <xTimerPendFunctionCallFromISR+0x3c>)
 801e162:	6818      	ldr	r0, [r3, #0]
 801e164:	f107 0114 	add.w	r1, r7, #20
 801e168:	2300      	movs	r3, #0
 801e16a:	683a      	ldr	r2, [r7, #0]
 801e16c:	f7fd ff96 	bl	801c09c <xQueueGenericSendFromISR>
 801e170:	6278      	str	r0, [r7, #36]	; 0x24
 801e172:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e174:	4618      	mov	r0, r3
 801e176:	3728      	adds	r7, #40	; 0x28
 801e178:	46bd      	mov	sp, r7
 801e17a:	bd80      	pop	{r7, pc}
 801e17c:	20003c04 	.word	0x20003c04

0801e180 <pxPortInitialiseStack>:
 801e180:	b480      	push	{r7}
 801e182:	b085      	sub	sp, #20
 801e184:	af00      	add	r7, sp, #0
 801e186:	60f8      	str	r0, [r7, #12]
 801e188:	60b9      	str	r1, [r7, #8]
 801e18a:	607a      	str	r2, [r7, #4]
 801e18c:	68fb      	ldr	r3, [r7, #12]
 801e18e:	3b04      	subs	r3, #4
 801e190:	60fb      	str	r3, [r7, #12]
 801e192:	68fb      	ldr	r3, [r7, #12]
 801e194:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801e198:	601a      	str	r2, [r3, #0]
 801e19a:	68fb      	ldr	r3, [r7, #12]
 801e19c:	3b04      	subs	r3, #4
 801e19e:	60fb      	str	r3, [r7, #12]
 801e1a0:	68bb      	ldr	r3, [r7, #8]
 801e1a2:	f023 0201 	bic.w	r2, r3, #1
 801e1a6:	68fb      	ldr	r3, [r7, #12]
 801e1a8:	601a      	str	r2, [r3, #0]
 801e1aa:	68fb      	ldr	r3, [r7, #12]
 801e1ac:	3b04      	subs	r3, #4
 801e1ae:	60fb      	str	r3, [r7, #12]
 801e1b0:	4a0c      	ldr	r2, [pc, #48]	; (801e1e4 <pxPortInitialiseStack+0x64>)
 801e1b2:	68fb      	ldr	r3, [r7, #12]
 801e1b4:	601a      	str	r2, [r3, #0]
 801e1b6:	68fb      	ldr	r3, [r7, #12]
 801e1b8:	3b14      	subs	r3, #20
 801e1ba:	60fb      	str	r3, [r7, #12]
 801e1bc:	687a      	ldr	r2, [r7, #4]
 801e1be:	68fb      	ldr	r3, [r7, #12]
 801e1c0:	601a      	str	r2, [r3, #0]
 801e1c2:	68fb      	ldr	r3, [r7, #12]
 801e1c4:	3b04      	subs	r3, #4
 801e1c6:	60fb      	str	r3, [r7, #12]
 801e1c8:	68fb      	ldr	r3, [r7, #12]
 801e1ca:	f06f 0202 	mvn.w	r2, #2
 801e1ce:	601a      	str	r2, [r3, #0]
 801e1d0:	68fb      	ldr	r3, [r7, #12]
 801e1d2:	3b20      	subs	r3, #32
 801e1d4:	60fb      	str	r3, [r7, #12]
 801e1d6:	68fb      	ldr	r3, [r7, #12]
 801e1d8:	4618      	mov	r0, r3
 801e1da:	3714      	adds	r7, #20
 801e1dc:	46bd      	mov	sp, r7
 801e1de:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e1e2:	4770      	bx	lr
 801e1e4:	0801e1e9 	.word	0x0801e1e9

0801e1e8 <prvTaskExitError>:
 801e1e8:	b480      	push	{r7}
 801e1ea:	b085      	sub	sp, #20
 801e1ec:	af00      	add	r7, sp, #0
 801e1ee:	2300      	movs	r3, #0
 801e1f0:	607b      	str	r3, [r7, #4]
 801e1f2:	4b12      	ldr	r3, [pc, #72]	; (801e23c <prvTaskExitError+0x54>)
 801e1f4:	681b      	ldr	r3, [r3, #0]
 801e1f6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 801e1fa:	d00a      	beq.n	801e212 <prvTaskExitError+0x2a>
 801e1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e200:	f383 8811 	msr	BASEPRI, r3
 801e204:	f3bf 8f6f 	isb	sy
 801e208:	f3bf 8f4f 	dsb	sy
 801e20c:	60fb      	str	r3, [r7, #12]
 801e20e:	bf00      	nop
 801e210:	e7fe      	b.n	801e210 <prvTaskExitError+0x28>
 801e212:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e216:	f383 8811 	msr	BASEPRI, r3
 801e21a:	f3bf 8f6f 	isb	sy
 801e21e:	f3bf 8f4f 	dsb	sy
 801e222:	60bb      	str	r3, [r7, #8]
 801e224:	bf00      	nop
 801e226:	bf00      	nop
 801e228:	687b      	ldr	r3, [r7, #4]
 801e22a:	2b00      	cmp	r3, #0
 801e22c:	d0fc      	beq.n	801e228 <prvTaskExitError+0x40>
 801e22e:	bf00      	nop
 801e230:	bf00      	nop
 801e232:	3714      	adds	r7, #20
 801e234:	46bd      	mov	sp, r7
 801e236:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e23a:	4770      	bx	lr
 801e23c:	200000e8 	.word	0x200000e8

0801e240 <SVC_Handler>:
 801e240:	4b07      	ldr	r3, [pc, #28]	; (801e260 <pxCurrentTCBConst2>)
 801e242:	6819      	ldr	r1, [r3, #0]
 801e244:	6808      	ldr	r0, [r1, #0]
 801e246:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e24a:	f380 8809 	msr	PSP, r0
 801e24e:	f3bf 8f6f 	isb	sy
 801e252:	f04f 0000 	mov.w	r0, #0
 801e256:	f380 8811 	msr	BASEPRI, r0
 801e25a:	4770      	bx	lr
 801e25c:	f3af 8000 	nop.w

0801e260 <pxCurrentTCBConst2>:
 801e260:	20003a00 	.word	0x20003a00
 801e264:	bf00      	nop
 801e266:	bf00      	nop

0801e268 <prvPortStartFirstTask>:
 801e268:	4808      	ldr	r0, [pc, #32]	; (801e28c <prvPortStartFirstTask+0x24>)
 801e26a:	6800      	ldr	r0, [r0, #0]
 801e26c:	6800      	ldr	r0, [r0, #0]
 801e26e:	f380 8808 	msr	MSP, r0
 801e272:	f04f 0000 	mov.w	r0, #0
 801e276:	f380 8814 	msr	CONTROL, r0
 801e27a:	b662      	cpsie	i
 801e27c:	b661      	cpsie	f
 801e27e:	f3bf 8f4f 	dsb	sy
 801e282:	f3bf 8f6f 	isb	sy
 801e286:	df00      	svc	0
 801e288:	bf00      	nop
 801e28a:	bf00      	nop
 801e28c:	e000ed08 	.word	0xe000ed08

0801e290 <xPortStartScheduler>:
 801e290:	b580      	push	{r7, lr}
 801e292:	b086      	sub	sp, #24
 801e294:	af00      	add	r7, sp, #0
 801e296:	4b46      	ldr	r3, [pc, #280]	; (801e3b0 <xPortStartScheduler+0x120>)
 801e298:	681b      	ldr	r3, [r3, #0]
 801e29a:	4a46      	ldr	r2, [pc, #280]	; (801e3b4 <xPortStartScheduler+0x124>)
 801e29c:	4293      	cmp	r3, r2
 801e29e:	d10a      	bne.n	801e2b6 <xPortStartScheduler+0x26>
 801e2a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e2a4:	f383 8811 	msr	BASEPRI, r3
 801e2a8:	f3bf 8f6f 	isb	sy
 801e2ac:	f3bf 8f4f 	dsb	sy
 801e2b0:	613b      	str	r3, [r7, #16]
 801e2b2:	bf00      	nop
 801e2b4:	e7fe      	b.n	801e2b4 <xPortStartScheduler+0x24>
 801e2b6:	4b3e      	ldr	r3, [pc, #248]	; (801e3b0 <xPortStartScheduler+0x120>)
 801e2b8:	681b      	ldr	r3, [r3, #0]
 801e2ba:	4a3f      	ldr	r2, [pc, #252]	; (801e3b8 <xPortStartScheduler+0x128>)
 801e2bc:	4293      	cmp	r3, r2
 801e2be:	d10a      	bne.n	801e2d6 <xPortStartScheduler+0x46>
 801e2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e2c4:	f383 8811 	msr	BASEPRI, r3
 801e2c8:	f3bf 8f6f 	isb	sy
 801e2cc:	f3bf 8f4f 	dsb	sy
 801e2d0:	60fb      	str	r3, [r7, #12]
 801e2d2:	bf00      	nop
 801e2d4:	e7fe      	b.n	801e2d4 <xPortStartScheduler+0x44>
 801e2d6:	4b39      	ldr	r3, [pc, #228]	; (801e3bc <xPortStartScheduler+0x12c>)
 801e2d8:	617b      	str	r3, [r7, #20]
 801e2da:	697b      	ldr	r3, [r7, #20]
 801e2dc:	781b      	ldrb	r3, [r3, #0]
 801e2de:	b2db      	uxtb	r3, r3
 801e2e0:	607b      	str	r3, [r7, #4]
 801e2e2:	697b      	ldr	r3, [r7, #20]
 801e2e4:	22ff      	movs	r2, #255	; 0xff
 801e2e6:	701a      	strb	r2, [r3, #0]
 801e2e8:	697b      	ldr	r3, [r7, #20]
 801e2ea:	781b      	ldrb	r3, [r3, #0]
 801e2ec:	b2db      	uxtb	r3, r3
 801e2ee:	70fb      	strb	r3, [r7, #3]
 801e2f0:	78fb      	ldrb	r3, [r7, #3]
 801e2f2:	b2db      	uxtb	r3, r3
 801e2f4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 801e2f8:	b2da      	uxtb	r2, r3
 801e2fa:	4b31      	ldr	r3, [pc, #196]	; (801e3c0 <xPortStartScheduler+0x130>)
 801e2fc:	701a      	strb	r2, [r3, #0]
 801e2fe:	4b31      	ldr	r3, [pc, #196]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e300:	2207      	movs	r2, #7
 801e302:	601a      	str	r2, [r3, #0]
 801e304:	e009      	b.n	801e31a <xPortStartScheduler+0x8a>
 801e306:	4b2f      	ldr	r3, [pc, #188]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e308:	681b      	ldr	r3, [r3, #0]
 801e30a:	3b01      	subs	r3, #1
 801e30c:	4a2d      	ldr	r2, [pc, #180]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e30e:	6013      	str	r3, [r2, #0]
 801e310:	78fb      	ldrb	r3, [r7, #3]
 801e312:	b2db      	uxtb	r3, r3
 801e314:	005b      	lsls	r3, r3, #1
 801e316:	b2db      	uxtb	r3, r3
 801e318:	70fb      	strb	r3, [r7, #3]
 801e31a:	78fb      	ldrb	r3, [r7, #3]
 801e31c:	b2db      	uxtb	r3, r3
 801e31e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801e322:	2b80      	cmp	r3, #128	; 0x80
 801e324:	d0ef      	beq.n	801e306 <xPortStartScheduler+0x76>
 801e326:	4b27      	ldr	r3, [pc, #156]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e328:	681b      	ldr	r3, [r3, #0]
 801e32a:	f1c3 0307 	rsb	r3, r3, #7
 801e32e:	2b04      	cmp	r3, #4
 801e330:	d00a      	beq.n	801e348 <xPortStartScheduler+0xb8>
 801e332:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e336:	f383 8811 	msr	BASEPRI, r3
 801e33a:	f3bf 8f6f 	isb	sy
 801e33e:	f3bf 8f4f 	dsb	sy
 801e342:	60bb      	str	r3, [r7, #8]
 801e344:	bf00      	nop
 801e346:	e7fe      	b.n	801e346 <xPortStartScheduler+0xb6>
 801e348:	4b1e      	ldr	r3, [pc, #120]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e34a:	681b      	ldr	r3, [r3, #0]
 801e34c:	021b      	lsls	r3, r3, #8
 801e34e:	4a1d      	ldr	r2, [pc, #116]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e350:	6013      	str	r3, [r2, #0]
 801e352:	4b1c      	ldr	r3, [pc, #112]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e354:	681b      	ldr	r3, [r3, #0]
 801e356:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 801e35a:	4a1a      	ldr	r2, [pc, #104]	; (801e3c4 <xPortStartScheduler+0x134>)
 801e35c:	6013      	str	r3, [r2, #0]
 801e35e:	687b      	ldr	r3, [r7, #4]
 801e360:	b2da      	uxtb	r2, r3
 801e362:	697b      	ldr	r3, [r7, #20]
 801e364:	701a      	strb	r2, [r3, #0]
 801e366:	4b18      	ldr	r3, [pc, #96]	; (801e3c8 <xPortStartScheduler+0x138>)
 801e368:	681b      	ldr	r3, [r3, #0]
 801e36a:	4a17      	ldr	r2, [pc, #92]	; (801e3c8 <xPortStartScheduler+0x138>)
 801e36c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801e370:	6013      	str	r3, [r2, #0]
 801e372:	4b15      	ldr	r3, [pc, #84]	; (801e3c8 <xPortStartScheduler+0x138>)
 801e374:	681b      	ldr	r3, [r3, #0]
 801e376:	4a14      	ldr	r2, [pc, #80]	; (801e3c8 <xPortStartScheduler+0x138>)
 801e378:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 801e37c:	6013      	str	r3, [r2, #0]
 801e37e:	f000 f8dd 	bl	801e53c <vPortSetupTimerInterrupt>
 801e382:	4b12      	ldr	r3, [pc, #72]	; (801e3cc <xPortStartScheduler+0x13c>)
 801e384:	2200      	movs	r2, #0
 801e386:	601a      	str	r2, [r3, #0]
 801e388:	f000 f8fc 	bl	801e584 <vPortEnableVFP>
 801e38c:	4b10      	ldr	r3, [pc, #64]	; (801e3d0 <xPortStartScheduler+0x140>)
 801e38e:	681b      	ldr	r3, [r3, #0]
 801e390:	4a0f      	ldr	r2, [pc, #60]	; (801e3d0 <xPortStartScheduler+0x140>)
 801e392:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 801e396:	6013      	str	r3, [r2, #0]
 801e398:	f7ff ff66 	bl	801e268 <prvPortStartFirstTask>
 801e39c:	f7fe fe44 	bl	801d028 <vTaskSwitchContext>
 801e3a0:	f7ff ff22 	bl	801e1e8 <prvTaskExitError>
 801e3a4:	2300      	movs	r3, #0
 801e3a6:	4618      	mov	r0, r3
 801e3a8:	3718      	adds	r7, #24
 801e3aa:	46bd      	mov	sp, r7
 801e3ac:	bd80      	pop	{r7, pc}
 801e3ae:	bf00      	nop
 801e3b0:	e000ed00 	.word	0xe000ed00
 801e3b4:	410fc271 	.word	0x410fc271
 801e3b8:	410fc270 	.word	0x410fc270
 801e3bc:	e000e400 	.word	0xe000e400
 801e3c0:	20003d00 	.word	0x20003d00
 801e3c4:	20003d04 	.word	0x20003d04
 801e3c8:	e000ed20 	.word	0xe000ed20
 801e3cc:	200000e8 	.word	0x200000e8
 801e3d0:	e000ef34 	.word	0xe000ef34

0801e3d4 <vPortEnterCritical>:
 801e3d4:	b480      	push	{r7}
 801e3d6:	b083      	sub	sp, #12
 801e3d8:	af00      	add	r7, sp, #0
 801e3da:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e3de:	f383 8811 	msr	BASEPRI, r3
 801e3e2:	f3bf 8f6f 	isb	sy
 801e3e6:	f3bf 8f4f 	dsb	sy
 801e3ea:	607b      	str	r3, [r7, #4]
 801e3ec:	bf00      	nop
 801e3ee:	4b0f      	ldr	r3, [pc, #60]	; (801e42c <vPortEnterCritical+0x58>)
 801e3f0:	681b      	ldr	r3, [r3, #0]
 801e3f2:	3301      	adds	r3, #1
 801e3f4:	4a0d      	ldr	r2, [pc, #52]	; (801e42c <vPortEnterCritical+0x58>)
 801e3f6:	6013      	str	r3, [r2, #0]
 801e3f8:	4b0c      	ldr	r3, [pc, #48]	; (801e42c <vPortEnterCritical+0x58>)
 801e3fa:	681b      	ldr	r3, [r3, #0]
 801e3fc:	2b01      	cmp	r3, #1
 801e3fe:	d10f      	bne.n	801e420 <vPortEnterCritical+0x4c>
 801e400:	4b0b      	ldr	r3, [pc, #44]	; (801e430 <vPortEnterCritical+0x5c>)
 801e402:	681b      	ldr	r3, [r3, #0]
 801e404:	b2db      	uxtb	r3, r3
 801e406:	2b00      	cmp	r3, #0
 801e408:	d00a      	beq.n	801e420 <vPortEnterCritical+0x4c>
 801e40a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e40e:	f383 8811 	msr	BASEPRI, r3
 801e412:	f3bf 8f6f 	isb	sy
 801e416:	f3bf 8f4f 	dsb	sy
 801e41a:	603b      	str	r3, [r7, #0]
 801e41c:	bf00      	nop
 801e41e:	e7fe      	b.n	801e41e <vPortEnterCritical+0x4a>
 801e420:	bf00      	nop
 801e422:	370c      	adds	r7, #12
 801e424:	46bd      	mov	sp, r7
 801e426:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e42a:	4770      	bx	lr
 801e42c:	200000e8 	.word	0x200000e8
 801e430:	e000ed04 	.word	0xe000ed04

0801e434 <vPortExitCritical>:
 801e434:	b480      	push	{r7}
 801e436:	b083      	sub	sp, #12
 801e438:	af00      	add	r7, sp, #0
 801e43a:	4b12      	ldr	r3, [pc, #72]	; (801e484 <vPortExitCritical+0x50>)
 801e43c:	681b      	ldr	r3, [r3, #0]
 801e43e:	2b00      	cmp	r3, #0
 801e440:	d10a      	bne.n	801e458 <vPortExitCritical+0x24>
 801e442:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e446:	f383 8811 	msr	BASEPRI, r3
 801e44a:	f3bf 8f6f 	isb	sy
 801e44e:	f3bf 8f4f 	dsb	sy
 801e452:	607b      	str	r3, [r7, #4]
 801e454:	bf00      	nop
 801e456:	e7fe      	b.n	801e456 <vPortExitCritical+0x22>
 801e458:	4b0a      	ldr	r3, [pc, #40]	; (801e484 <vPortExitCritical+0x50>)
 801e45a:	681b      	ldr	r3, [r3, #0]
 801e45c:	3b01      	subs	r3, #1
 801e45e:	4a09      	ldr	r2, [pc, #36]	; (801e484 <vPortExitCritical+0x50>)
 801e460:	6013      	str	r3, [r2, #0]
 801e462:	4b08      	ldr	r3, [pc, #32]	; (801e484 <vPortExitCritical+0x50>)
 801e464:	681b      	ldr	r3, [r3, #0]
 801e466:	2b00      	cmp	r3, #0
 801e468:	d105      	bne.n	801e476 <vPortExitCritical+0x42>
 801e46a:	2300      	movs	r3, #0
 801e46c:	603b      	str	r3, [r7, #0]
 801e46e:	683b      	ldr	r3, [r7, #0]
 801e470:	f383 8811 	msr	BASEPRI, r3
 801e474:	bf00      	nop
 801e476:	bf00      	nop
 801e478:	370c      	adds	r7, #12
 801e47a:	46bd      	mov	sp, r7
 801e47c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e480:	4770      	bx	lr
 801e482:	bf00      	nop
 801e484:	200000e8 	.word	0x200000e8
	...

0801e490 <PendSV_Handler>:
 801e490:	f3ef 8009 	mrs	r0, PSP
 801e494:	f3bf 8f6f 	isb	sy
 801e498:	4b15      	ldr	r3, [pc, #84]	; (801e4f0 <pxCurrentTCBConst>)
 801e49a:	681a      	ldr	r2, [r3, #0]
 801e49c:	f01e 0f10 	tst.w	lr, #16
 801e4a0:	bf08      	it	eq
 801e4a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 801e4a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4aa:	6010      	str	r0, [r2, #0]
 801e4ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 801e4b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 801e4b4:	f380 8811 	msr	BASEPRI, r0
 801e4b8:	f3bf 8f4f 	dsb	sy
 801e4bc:	f3bf 8f6f 	isb	sy
 801e4c0:	f7fe fdb2 	bl	801d028 <vTaskSwitchContext>
 801e4c4:	f04f 0000 	mov.w	r0, #0
 801e4c8:	f380 8811 	msr	BASEPRI, r0
 801e4cc:	bc09      	pop	{r0, r3}
 801e4ce:	6819      	ldr	r1, [r3, #0]
 801e4d0:	6808      	ldr	r0, [r1, #0]
 801e4d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d6:	f01e 0f10 	tst.w	lr, #16
 801e4da:	bf08      	it	eq
 801e4dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 801e4e0:	f380 8809 	msr	PSP, r0
 801e4e4:	f3bf 8f6f 	isb	sy
 801e4e8:	4770      	bx	lr
 801e4ea:	bf00      	nop
 801e4ec:	f3af 8000 	nop.w

0801e4f0 <pxCurrentTCBConst>:
 801e4f0:	20003a00 	.word	0x20003a00
 801e4f4:	bf00      	nop
 801e4f6:	bf00      	nop

0801e4f8 <SysTick_Handler>:
 801e4f8:	b580      	push	{r7, lr}
 801e4fa:	b082      	sub	sp, #8
 801e4fc:	af00      	add	r7, sp, #0
 801e4fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e502:	f383 8811 	msr	BASEPRI, r3
 801e506:	f3bf 8f6f 	isb	sy
 801e50a:	f3bf 8f4f 	dsb	sy
 801e50e:	607b      	str	r3, [r7, #4]
 801e510:	bf00      	nop
 801e512:	f7fe fcd1 	bl	801ceb8 <xTaskIncrementTick>
 801e516:	4603      	mov	r3, r0
 801e518:	2b00      	cmp	r3, #0
 801e51a:	d003      	beq.n	801e524 <SysTick_Handler+0x2c>
 801e51c:	4b06      	ldr	r3, [pc, #24]	; (801e538 <SysTick_Handler+0x40>)
 801e51e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801e522:	601a      	str	r2, [r3, #0]
 801e524:	2300      	movs	r3, #0
 801e526:	603b      	str	r3, [r7, #0]
 801e528:	683b      	ldr	r3, [r7, #0]
 801e52a:	f383 8811 	msr	BASEPRI, r3
 801e52e:	bf00      	nop
 801e530:	bf00      	nop
 801e532:	3708      	adds	r7, #8
 801e534:	46bd      	mov	sp, r7
 801e536:	bd80      	pop	{r7, pc}
 801e538:	e000ed04 	.word	0xe000ed04

0801e53c <vPortSetupTimerInterrupt>:
 801e53c:	b480      	push	{r7}
 801e53e:	af00      	add	r7, sp, #0
 801e540:	4b0b      	ldr	r3, [pc, #44]	; (801e570 <vPortSetupTimerInterrupt+0x34>)
 801e542:	2200      	movs	r2, #0
 801e544:	601a      	str	r2, [r3, #0]
 801e546:	4b0b      	ldr	r3, [pc, #44]	; (801e574 <vPortSetupTimerInterrupt+0x38>)
 801e548:	2200      	movs	r2, #0
 801e54a:	601a      	str	r2, [r3, #0]
 801e54c:	4b0a      	ldr	r3, [pc, #40]	; (801e578 <vPortSetupTimerInterrupt+0x3c>)
 801e54e:	681b      	ldr	r3, [r3, #0]
 801e550:	4a0a      	ldr	r2, [pc, #40]	; (801e57c <vPortSetupTimerInterrupt+0x40>)
 801e552:	fba2 2303 	umull	r2, r3, r2, r3
 801e556:	099b      	lsrs	r3, r3, #6
 801e558:	4a09      	ldr	r2, [pc, #36]	; (801e580 <vPortSetupTimerInterrupt+0x44>)
 801e55a:	3b01      	subs	r3, #1
 801e55c:	6013      	str	r3, [r2, #0]
 801e55e:	4b04      	ldr	r3, [pc, #16]	; (801e570 <vPortSetupTimerInterrupt+0x34>)
 801e560:	2207      	movs	r2, #7
 801e562:	601a      	str	r2, [r3, #0]
 801e564:	bf00      	nop
 801e566:	46bd      	mov	sp, r7
 801e568:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e56c:	4770      	bx	lr
 801e56e:	bf00      	nop
 801e570:	e000e010 	.word	0xe000e010
 801e574:	e000e018 	.word	0xe000e018
 801e578:	20000004 	.word	0x20000004
 801e57c:	10624dd3 	.word	0x10624dd3
 801e580:	e000e014 	.word	0xe000e014

0801e584 <vPortEnableVFP>:
 801e584:	f8df 000c 	ldr.w	r0, [pc, #12]	; 801e594 <vPortEnableVFP+0x10>
 801e588:	6801      	ldr	r1, [r0, #0]
 801e58a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801e58e:	6001      	str	r1, [r0, #0]
 801e590:	4770      	bx	lr
 801e592:	bf00      	nop
 801e594:	e000ed88 	.word	0xe000ed88

0801e598 <vPortValidateInterruptPriority>:
 801e598:	b480      	push	{r7}
 801e59a:	b085      	sub	sp, #20
 801e59c:	af00      	add	r7, sp, #0
 801e59e:	f3ef 8305 	mrs	r3, IPSR
 801e5a2:	60fb      	str	r3, [r7, #12]
 801e5a4:	68fb      	ldr	r3, [r7, #12]
 801e5a6:	2b0f      	cmp	r3, #15
 801e5a8:	d914      	bls.n	801e5d4 <vPortValidateInterruptPriority+0x3c>
 801e5aa:	4a17      	ldr	r2, [pc, #92]	; (801e608 <vPortValidateInterruptPriority+0x70>)
 801e5ac:	68fb      	ldr	r3, [r7, #12]
 801e5ae:	4413      	add	r3, r2
 801e5b0:	781b      	ldrb	r3, [r3, #0]
 801e5b2:	72fb      	strb	r3, [r7, #11]
 801e5b4:	4b15      	ldr	r3, [pc, #84]	; (801e60c <vPortValidateInterruptPriority+0x74>)
 801e5b6:	781b      	ldrb	r3, [r3, #0]
 801e5b8:	7afa      	ldrb	r2, [r7, #11]
 801e5ba:	429a      	cmp	r2, r3
 801e5bc:	d20a      	bcs.n	801e5d4 <vPortValidateInterruptPriority+0x3c>
 801e5be:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e5c2:	f383 8811 	msr	BASEPRI, r3
 801e5c6:	f3bf 8f6f 	isb	sy
 801e5ca:	f3bf 8f4f 	dsb	sy
 801e5ce:	607b      	str	r3, [r7, #4]
 801e5d0:	bf00      	nop
 801e5d2:	e7fe      	b.n	801e5d2 <vPortValidateInterruptPriority+0x3a>
 801e5d4:	4b0e      	ldr	r3, [pc, #56]	; (801e610 <vPortValidateInterruptPriority+0x78>)
 801e5d6:	681b      	ldr	r3, [r3, #0]
 801e5d8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 801e5dc:	4b0d      	ldr	r3, [pc, #52]	; (801e614 <vPortValidateInterruptPriority+0x7c>)
 801e5de:	681b      	ldr	r3, [r3, #0]
 801e5e0:	429a      	cmp	r2, r3
 801e5e2:	d90a      	bls.n	801e5fa <vPortValidateInterruptPriority+0x62>
 801e5e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e5e8:	f383 8811 	msr	BASEPRI, r3
 801e5ec:	f3bf 8f6f 	isb	sy
 801e5f0:	f3bf 8f4f 	dsb	sy
 801e5f4:	603b      	str	r3, [r7, #0]
 801e5f6:	bf00      	nop
 801e5f8:	e7fe      	b.n	801e5f8 <vPortValidateInterruptPriority+0x60>
 801e5fa:	bf00      	nop
 801e5fc:	3714      	adds	r7, #20
 801e5fe:	46bd      	mov	sp, r7
 801e600:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e604:	4770      	bx	lr
 801e606:	bf00      	nop
 801e608:	e000e3f0 	.word	0xe000e3f0
 801e60c:	20003d00 	.word	0x20003d00
 801e610:	e000ed0c 	.word	0xe000ed0c
 801e614:	20003d04 	.word	0x20003d04

0801e618 <pvPortMalloc>:
 801e618:	b580      	push	{r7, lr}
 801e61a:	b08a      	sub	sp, #40	; 0x28
 801e61c:	af00      	add	r7, sp, #0
 801e61e:	6078      	str	r0, [r7, #4]
 801e620:	2300      	movs	r3, #0
 801e622:	61fb      	str	r3, [r7, #28]
 801e624:	f7fe fb8e 	bl	801cd44 <vTaskSuspendAll>
 801e628:	4b5b      	ldr	r3, [pc, #364]	; (801e798 <pvPortMalloc+0x180>)
 801e62a:	681b      	ldr	r3, [r3, #0]
 801e62c:	2b00      	cmp	r3, #0
 801e62e:	d101      	bne.n	801e634 <pvPortMalloc+0x1c>
 801e630:	f000 f920 	bl	801e874 <prvHeapInit>
 801e634:	4b59      	ldr	r3, [pc, #356]	; (801e79c <pvPortMalloc+0x184>)
 801e636:	681a      	ldr	r2, [r3, #0]
 801e638:	687b      	ldr	r3, [r7, #4]
 801e63a:	4013      	ands	r3, r2
 801e63c:	2b00      	cmp	r3, #0
 801e63e:	f040 8093 	bne.w	801e768 <pvPortMalloc+0x150>
 801e642:	687b      	ldr	r3, [r7, #4]
 801e644:	2b00      	cmp	r3, #0
 801e646:	d01d      	beq.n	801e684 <pvPortMalloc+0x6c>
 801e648:	2208      	movs	r2, #8
 801e64a:	687b      	ldr	r3, [r7, #4]
 801e64c:	4413      	add	r3, r2
 801e64e:	607b      	str	r3, [r7, #4]
 801e650:	687b      	ldr	r3, [r7, #4]
 801e652:	f003 0307 	and.w	r3, r3, #7
 801e656:	2b00      	cmp	r3, #0
 801e658:	d014      	beq.n	801e684 <pvPortMalloc+0x6c>
 801e65a:	687b      	ldr	r3, [r7, #4]
 801e65c:	f023 0307 	bic.w	r3, r3, #7
 801e660:	3308      	adds	r3, #8
 801e662:	607b      	str	r3, [r7, #4]
 801e664:	687b      	ldr	r3, [r7, #4]
 801e666:	f003 0307 	and.w	r3, r3, #7
 801e66a:	2b00      	cmp	r3, #0
 801e66c:	d00a      	beq.n	801e684 <pvPortMalloc+0x6c>
 801e66e:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e672:	f383 8811 	msr	BASEPRI, r3
 801e676:	f3bf 8f6f 	isb	sy
 801e67a:	f3bf 8f4f 	dsb	sy
 801e67e:	617b      	str	r3, [r7, #20]
 801e680:	bf00      	nop
 801e682:	e7fe      	b.n	801e682 <pvPortMalloc+0x6a>
 801e684:	687b      	ldr	r3, [r7, #4]
 801e686:	2b00      	cmp	r3, #0
 801e688:	d06e      	beq.n	801e768 <pvPortMalloc+0x150>
 801e68a:	4b45      	ldr	r3, [pc, #276]	; (801e7a0 <pvPortMalloc+0x188>)
 801e68c:	681b      	ldr	r3, [r3, #0]
 801e68e:	687a      	ldr	r2, [r7, #4]
 801e690:	429a      	cmp	r2, r3
 801e692:	d869      	bhi.n	801e768 <pvPortMalloc+0x150>
 801e694:	4b43      	ldr	r3, [pc, #268]	; (801e7a4 <pvPortMalloc+0x18c>)
 801e696:	623b      	str	r3, [r7, #32]
 801e698:	4b42      	ldr	r3, [pc, #264]	; (801e7a4 <pvPortMalloc+0x18c>)
 801e69a:	681b      	ldr	r3, [r3, #0]
 801e69c:	627b      	str	r3, [r7, #36]	; 0x24
 801e69e:	e004      	b.n	801e6aa <pvPortMalloc+0x92>
 801e6a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6a2:	623b      	str	r3, [r7, #32]
 801e6a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6a6:	681b      	ldr	r3, [r3, #0]
 801e6a8:	627b      	str	r3, [r7, #36]	; 0x24
 801e6aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6ac:	685b      	ldr	r3, [r3, #4]
 801e6ae:	687a      	ldr	r2, [r7, #4]
 801e6b0:	429a      	cmp	r2, r3
 801e6b2:	d903      	bls.n	801e6bc <pvPortMalloc+0xa4>
 801e6b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6b6:	681b      	ldr	r3, [r3, #0]
 801e6b8:	2b00      	cmp	r3, #0
 801e6ba:	d1f1      	bne.n	801e6a0 <pvPortMalloc+0x88>
 801e6bc:	4b36      	ldr	r3, [pc, #216]	; (801e798 <pvPortMalloc+0x180>)
 801e6be:	681b      	ldr	r3, [r3, #0]
 801e6c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801e6c2:	429a      	cmp	r2, r3
 801e6c4:	d050      	beq.n	801e768 <pvPortMalloc+0x150>
 801e6c6:	6a3b      	ldr	r3, [r7, #32]
 801e6c8:	681b      	ldr	r3, [r3, #0]
 801e6ca:	2208      	movs	r2, #8
 801e6cc:	4413      	add	r3, r2
 801e6ce:	61fb      	str	r3, [r7, #28]
 801e6d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6d2:	681a      	ldr	r2, [r3, #0]
 801e6d4:	6a3b      	ldr	r3, [r7, #32]
 801e6d6:	601a      	str	r2, [r3, #0]
 801e6d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e6da:	685a      	ldr	r2, [r3, #4]
 801e6dc:	687b      	ldr	r3, [r7, #4]
 801e6de:	1ad2      	subs	r2, r2, r3
 801e6e0:	2308      	movs	r3, #8
 801e6e2:	005b      	lsls	r3, r3, #1
 801e6e4:	429a      	cmp	r2, r3
 801e6e6:	d91f      	bls.n	801e728 <pvPortMalloc+0x110>
 801e6e8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801e6ea:	687b      	ldr	r3, [r7, #4]
 801e6ec:	4413      	add	r3, r2
 801e6ee:	61bb      	str	r3, [r7, #24]
 801e6f0:	69bb      	ldr	r3, [r7, #24]
 801e6f2:	f003 0307 	and.w	r3, r3, #7
 801e6f6:	2b00      	cmp	r3, #0
 801e6f8:	d00a      	beq.n	801e710 <pvPortMalloc+0xf8>
 801e6fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e6fe:	f383 8811 	msr	BASEPRI, r3
 801e702:	f3bf 8f6f 	isb	sy
 801e706:	f3bf 8f4f 	dsb	sy
 801e70a:	613b      	str	r3, [r7, #16]
 801e70c:	bf00      	nop
 801e70e:	e7fe      	b.n	801e70e <pvPortMalloc+0xf6>
 801e710:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e712:	685a      	ldr	r2, [r3, #4]
 801e714:	687b      	ldr	r3, [r7, #4]
 801e716:	1ad2      	subs	r2, r2, r3
 801e718:	69bb      	ldr	r3, [r7, #24]
 801e71a:	605a      	str	r2, [r3, #4]
 801e71c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e71e:	687a      	ldr	r2, [r7, #4]
 801e720:	605a      	str	r2, [r3, #4]
 801e722:	69b8      	ldr	r0, [r7, #24]
 801e724:	f000 f908 	bl	801e938 <prvInsertBlockIntoFreeList>
 801e728:	4b1d      	ldr	r3, [pc, #116]	; (801e7a0 <pvPortMalloc+0x188>)
 801e72a:	681a      	ldr	r2, [r3, #0]
 801e72c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e72e:	685b      	ldr	r3, [r3, #4]
 801e730:	1ad3      	subs	r3, r2, r3
 801e732:	4a1b      	ldr	r2, [pc, #108]	; (801e7a0 <pvPortMalloc+0x188>)
 801e734:	6013      	str	r3, [r2, #0]
 801e736:	4b1a      	ldr	r3, [pc, #104]	; (801e7a0 <pvPortMalloc+0x188>)
 801e738:	681a      	ldr	r2, [r3, #0]
 801e73a:	4b1b      	ldr	r3, [pc, #108]	; (801e7a8 <pvPortMalloc+0x190>)
 801e73c:	681b      	ldr	r3, [r3, #0]
 801e73e:	429a      	cmp	r2, r3
 801e740:	d203      	bcs.n	801e74a <pvPortMalloc+0x132>
 801e742:	4b17      	ldr	r3, [pc, #92]	; (801e7a0 <pvPortMalloc+0x188>)
 801e744:	681b      	ldr	r3, [r3, #0]
 801e746:	4a18      	ldr	r2, [pc, #96]	; (801e7a8 <pvPortMalloc+0x190>)
 801e748:	6013      	str	r3, [r2, #0]
 801e74a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e74c:	685a      	ldr	r2, [r3, #4]
 801e74e:	4b13      	ldr	r3, [pc, #76]	; (801e79c <pvPortMalloc+0x184>)
 801e750:	681b      	ldr	r3, [r3, #0]
 801e752:	431a      	orrs	r2, r3
 801e754:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e756:	605a      	str	r2, [r3, #4]
 801e758:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801e75a:	2200      	movs	r2, #0
 801e75c:	601a      	str	r2, [r3, #0]
 801e75e:	4b13      	ldr	r3, [pc, #76]	; (801e7ac <pvPortMalloc+0x194>)
 801e760:	681b      	ldr	r3, [r3, #0]
 801e762:	3301      	adds	r3, #1
 801e764:	4a11      	ldr	r2, [pc, #68]	; (801e7ac <pvPortMalloc+0x194>)
 801e766:	6013      	str	r3, [r2, #0]
 801e768:	f7fe fafa 	bl	801cd60 <xTaskResumeAll>
 801e76c:	69fb      	ldr	r3, [r7, #28]
 801e76e:	f003 0307 	and.w	r3, r3, #7
 801e772:	2b00      	cmp	r3, #0
 801e774:	d00a      	beq.n	801e78c <pvPortMalloc+0x174>
 801e776:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e77a:	f383 8811 	msr	BASEPRI, r3
 801e77e:	f3bf 8f6f 	isb	sy
 801e782:	f3bf 8f4f 	dsb	sy
 801e786:	60fb      	str	r3, [r7, #12]
 801e788:	bf00      	nop
 801e78a:	e7fe      	b.n	801e78a <pvPortMalloc+0x172>
 801e78c:	69fb      	ldr	r3, [r7, #28]
 801e78e:	4618      	mov	r0, r3
 801e790:	3728      	adds	r7, #40	; 0x28
 801e792:	46bd      	mov	sp, r7
 801e794:	bd80      	pop	{r7, pc}
 801e796:	bf00      	nop
 801e798:	2000d950 	.word	0x2000d950
 801e79c:	2000d964 	.word	0x2000d964
 801e7a0:	2000d954 	.word	0x2000d954
 801e7a4:	2000d948 	.word	0x2000d948
 801e7a8:	2000d958 	.word	0x2000d958
 801e7ac:	2000d95c 	.word	0x2000d95c

0801e7b0 <vPortFree>:
 801e7b0:	b580      	push	{r7, lr}
 801e7b2:	b086      	sub	sp, #24
 801e7b4:	af00      	add	r7, sp, #0
 801e7b6:	6078      	str	r0, [r7, #4]
 801e7b8:	687b      	ldr	r3, [r7, #4]
 801e7ba:	617b      	str	r3, [r7, #20]
 801e7bc:	687b      	ldr	r3, [r7, #4]
 801e7be:	2b00      	cmp	r3, #0
 801e7c0:	d04d      	beq.n	801e85e <vPortFree+0xae>
 801e7c2:	2308      	movs	r3, #8
 801e7c4:	425b      	negs	r3, r3
 801e7c6:	697a      	ldr	r2, [r7, #20]
 801e7c8:	4413      	add	r3, r2
 801e7ca:	617b      	str	r3, [r7, #20]
 801e7cc:	697b      	ldr	r3, [r7, #20]
 801e7ce:	613b      	str	r3, [r7, #16]
 801e7d0:	693b      	ldr	r3, [r7, #16]
 801e7d2:	685a      	ldr	r2, [r3, #4]
 801e7d4:	4b24      	ldr	r3, [pc, #144]	; (801e868 <vPortFree+0xb8>)
 801e7d6:	681b      	ldr	r3, [r3, #0]
 801e7d8:	4013      	ands	r3, r2
 801e7da:	2b00      	cmp	r3, #0
 801e7dc:	d10a      	bne.n	801e7f4 <vPortFree+0x44>
 801e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e7e2:	f383 8811 	msr	BASEPRI, r3
 801e7e6:	f3bf 8f6f 	isb	sy
 801e7ea:	f3bf 8f4f 	dsb	sy
 801e7ee:	60fb      	str	r3, [r7, #12]
 801e7f0:	bf00      	nop
 801e7f2:	e7fe      	b.n	801e7f2 <vPortFree+0x42>
 801e7f4:	693b      	ldr	r3, [r7, #16]
 801e7f6:	681b      	ldr	r3, [r3, #0]
 801e7f8:	2b00      	cmp	r3, #0
 801e7fa:	d00a      	beq.n	801e812 <vPortFree+0x62>
 801e7fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 801e800:	f383 8811 	msr	BASEPRI, r3
 801e804:	f3bf 8f6f 	isb	sy
 801e808:	f3bf 8f4f 	dsb	sy
 801e80c:	60bb      	str	r3, [r7, #8]
 801e80e:	bf00      	nop
 801e810:	e7fe      	b.n	801e810 <vPortFree+0x60>
 801e812:	693b      	ldr	r3, [r7, #16]
 801e814:	685a      	ldr	r2, [r3, #4]
 801e816:	4b14      	ldr	r3, [pc, #80]	; (801e868 <vPortFree+0xb8>)
 801e818:	681b      	ldr	r3, [r3, #0]
 801e81a:	4013      	ands	r3, r2
 801e81c:	2b00      	cmp	r3, #0
 801e81e:	d01e      	beq.n	801e85e <vPortFree+0xae>
 801e820:	693b      	ldr	r3, [r7, #16]
 801e822:	681b      	ldr	r3, [r3, #0]
 801e824:	2b00      	cmp	r3, #0
 801e826:	d11a      	bne.n	801e85e <vPortFree+0xae>
 801e828:	693b      	ldr	r3, [r7, #16]
 801e82a:	685a      	ldr	r2, [r3, #4]
 801e82c:	4b0e      	ldr	r3, [pc, #56]	; (801e868 <vPortFree+0xb8>)
 801e82e:	681b      	ldr	r3, [r3, #0]
 801e830:	43db      	mvns	r3, r3
 801e832:	401a      	ands	r2, r3
 801e834:	693b      	ldr	r3, [r7, #16]
 801e836:	605a      	str	r2, [r3, #4]
 801e838:	f7fe fa84 	bl	801cd44 <vTaskSuspendAll>
 801e83c:	693b      	ldr	r3, [r7, #16]
 801e83e:	685a      	ldr	r2, [r3, #4]
 801e840:	4b0a      	ldr	r3, [pc, #40]	; (801e86c <vPortFree+0xbc>)
 801e842:	681b      	ldr	r3, [r3, #0]
 801e844:	4413      	add	r3, r2
 801e846:	4a09      	ldr	r2, [pc, #36]	; (801e86c <vPortFree+0xbc>)
 801e848:	6013      	str	r3, [r2, #0]
 801e84a:	6938      	ldr	r0, [r7, #16]
 801e84c:	f000 f874 	bl	801e938 <prvInsertBlockIntoFreeList>
 801e850:	4b07      	ldr	r3, [pc, #28]	; (801e870 <vPortFree+0xc0>)
 801e852:	681b      	ldr	r3, [r3, #0]
 801e854:	3301      	adds	r3, #1
 801e856:	4a06      	ldr	r2, [pc, #24]	; (801e870 <vPortFree+0xc0>)
 801e858:	6013      	str	r3, [r2, #0]
 801e85a:	f7fe fa81 	bl	801cd60 <xTaskResumeAll>
 801e85e:	bf00      	nop
 801e860:	3718      	adds	r7, #24
 801e862:	46bd      	mov	sp, r7
 801e864:	bd80      	pop	{r7, pc}
 801e866:	bf00      	nop
 801e868:	2000d964 	.word	0x2000d964
 801e86c:	2000d954 	.word	0x2000d954
 801e870:	2000d960 	.word	0x2000d960

0801e874 <prvHeapInit>:
 801e874:	b480      	push	{r7}
 801e876:	b085      	sub	sp, #20
 801e878:	af00      	add	r7, sp, #0
 801e87a:	f649 4340 	movw	r3, #40000	; 0x9c40
 801e87e:	60bb      	str	r3, [r7, #8]
 801e880:	4b27      	ldr	r3, [pc, #156]	; (801e920 <prvHeapInit+0xac>)
 801e882:	60fb      	str	r3, [r7, #12]
 801e884:	68fb      	ldr	r3, [r7, #12]
 801e886:	f003 0307 	and.w	r3, r3, #7
 801e88a:	2b00      	cmp	r3, #0
 801e88c:	d00c      	beq.n	801e8a8 <prvHeapInit+0x34>
 801e88e:	68fb      	ldr	r3, [r7, #12]
 801e890:	3307      	adds	r3, #7
 801e892:	60fb      	str	r3, [r7, #12]
 801e894:	68fb      	ldr	r3, [r7, #12]
 801e896:	f023 0307 	bic.w	r3, r3, #7
 801e89a:	60fb      	str	r3, [r7, #12]
 801e89c:	68ba      	ldr	r2, [r7, #8]
 801e89e:	68fb      	ldr	r3, [r7, #12]
 801e8a0:	1ad3      	subs	r3, r2, r3
 801e8a2:	4a1f      	ldr	r2, [pc, #124]	; (801e920 <prvHeapInit+0xac>)
 801e8a4:	4413      	add	r3, r2
 801e8a6:	60bb      	str	r3, [r7, #8]
 801e8a8:	68fb      	ldr	r3, [r7, #12]
 801e8aa:	607b      	str	r3, [r7, #4]
 801e8ac:	4a1d      	ldr	r2, [pc, #116]	; (801e924 <prvHeapInit+0xb0>)
 801e8ae:	687b      	ldr	r3, [r7, #4]
 801e8b0:	6013      	str	r3, [r2, #0]
 801e8b2:	4b1c      	ldr	r3, [pc, #112]	; (801e924 <prvHeapInit+0xb0>)
 801e8b4:	2200      	movs	r2, #0
 801e8b6:	605a      	str	r2, [r3, #4]
 801e8b8:	687b      	ldr	r3, [r7, #4]
 801e8ba:	68ba      	ldr	r2, [r7, #8]
 801e8bc:	4413      	add	r3, r2
 801e8be:	60fb      	str	r3, [r7, #12]
 801e8c0:	2208      	movs	r2, #8
 801e8c2:	68fb      	ldr	r3, [r7, #12]
 801e8c4:	1a9b      	subs	r3, r3, r2
 801e8c6:	60fb      	str	r3, [r7, #12]
 801e8c8:	68fb      	ldr	r3, [r7, #12]
 801e8ca:	f023 0307 	bic.w	r3, r3, #7
 801e8ce:	60fb      	str	r3, [r7, #12]
 801e8d0:	68fb      	ldr	r3, [r7, #12]
 801e8d2:	4a15      	ldr	r2, [pc, #84]	; (801e928 <prvHeapInit+0xb4>)
 801e8d4:	6013      	str	r3, [r2, #0]
 801e8d6:	4b14      	ldr	r3, [pc, #80]	; (801e928 <prvHeapInit+0xb4>)
 801e8d8:	681b      	ldr	r3, [r3, #0]
 801e8da:	2200      	movs	r2, #0
 801e8dc:	605a      	str	r2, [r3, #4]
 801e8de:	4b12      	ldr	r3, [pc, #72]	; (801e928 <prvHeapInit+0xb4>)
 801e8e0:	681b      	ldr	r3, [r3, #0]
 801e8e2:	2200      	movs	r2, #0
 801e8e4:	601a      	str	r2, [r3, #0]
 801e8e6:	687b      	ldr	r3, [r7, #4]
 801e8e8:	603b      	str	r3, [r7, #0]
 801e8ea:	683b      	ldr	r3, [r7, #0]
 801e8ec:	68fa      	ldr	r2, [r7, #12]
 801e8ee:	1ad2      	subs	r2, r2, r3
 801e8f0:	683b      	ldr	r3, [r7, #0]
 801e8f2:	605a      	str	r2, [r3, #4]
 801e8f4:	4b0c      	ldr	r3, [pc, #48]	; (801e928 <prvHeapInit+0xb4>)
 801e8f6:	681a      	ldr	r2, [r3, #0]
 801e8f8:	683b      	ldr	r3, [r7, #0]
 801e8fa:	601a      	str	r2, [r3, #0]
 801e8fc:	683b      	ldr	r3, [r7, #0]
 801e8fe:	685b      	ldr	r3, [r3, #4]
 801e900:	4a0a      	ldr	r2, [pc, #40]	; (801e92c <prvHeapInit+0xb8>)
 801e902:	6013      	str	r3, [r2, #0]
 801e904:	683b      	ldr	r3, [r7, #0]
 801e906:	685b      	ldr	r3, [r3, #4]
 801e908:	4a09      	ldr	r2, [pc, #36]	; (801e930 <prvHeapInit+0xbc>)
 801e90a:	6013      	str	r3, [r2, #0]
 801e90c:	4b09      	ldr	r3, [pc, #36]	; (801e934 <prvHeapInit+0xc0>)
 801e90e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 801e912:	601a      	str	r2, [r3, #0]
 801e914:	bf00      	nop
 801e916:	3714      	adds	r7, #20
 801e918:	46bd      	mov	sp, r7
 801e91a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e91e:	4770      	bx	lr
 801e920:	20003d08 	.word	0x20003d08
 801e924:	2000d948 	.word	0x2000d948
 801e928:	2000d950 	.word	0x2000d950
 801e92c:	2000d958 	.word	0x2000d958
 801e930:	2000d954 	.word	0x2000d954
 801e934:	2000d964 	.word	0x2000d964

0801e938 <prvInsertBlockIntoFreeList>:
 801e938:	b480      	push	{r7}
 801e93a:	b085      	sub	sp, #20
 801e93c:	af00      	add	r7, sp, #0
 801e93e:	6078      	str	r0, [r7, #4]
 801e940:	4b28      	ldr	r3, [pc, #160]	; (801e9e4 <prvInsertBlockIntoFreeList+0xac>)
 801e942:	60fb      	str	r3, [r7, #12]
 801e944:	e002      	b.n	801e94c <prvInsertBlockIntoFreeList+0x14>
 801e946:	68fb      	ldr	r3, [r7, #12]
 801e948:	681b      	ldr	r3, [r3, #0]
 801e94a:	60fb      	str	r3, [r7, #12]
 801e94c:	68fb      	ldr	r3, [r7, #12]
 801e94e:	681b      	ldr	r3, [r3, #0]
 801e950:	687a      	ldr	r2, [r7, #4]
 801e952:	429a      	cmp	r2, r3
 801e954:	d8f7      	bhi.n	801e946 <prvInsertBlockIntoFreeList+0xe>
 801e956:	68fb      	ldr	r3, [r7, #12]
 801e958:	60bb      	str	r3, [r7, #8]
 801e95a:	68fb      	ldr	r3, [r7, #12]
 801e95c:	685b      	ldr	r3, [r3, #4]
 801e95e:	68ba      	ldr	r2, [r7, #8]
 801e960:	4413      	add	r3, r2
 801e962:	687a      	ldr	r2, [r7, #4]
 801e964:	429a      	cmp	r2, r3
 801e966:	d108      	bne.n	801e97a <prvInsertBlockIntoFreeList+0x42>
 801e968:	68fb      	ldr	r3, [r7, #12]
 801e96a:	685a      	ldr	r2, [r3, #4]
 801e96c:	687b      	ldr	r3, [r7, #4]
 801e96e:	685b      	ldr	r3, [r3, #4]
 801e970:	441a      	add	r2, r3
 801e972:	68fb      	ldr	r3, [r7, #12]
 801e974:	605a      	str	r2, [r3, #4]
 801e976:	68fb      	ldr	r3, [r7, #12]
 801e978:	607b      	str	r3, [r7, #4]
 801e97a:	687b      	ldr	r3, [r7, #4]
 801e97c:	60bb      	str	r3, [r7, #8]
 801e97e:	687b      	ldr	r3, [r7, #4]
 801e980:	685b      	ldr	r3, [r3, #4]
 801e982:	68ba      	ldr	r2, [r7, #8]
 801e984:	441a      	add	r2, r3
 801e986:	68fb      	ldr	r3, [r7, #12]
 801e988:	681b      	ldr	r3, [r3, #0]
 801e98a:	429a      	cmp	r2, r3
 801e98c:	d118      	bne.n	801e9c0 <prvInsertBlockIntoFreeList+0x88>
 801e98e:	68fb      	ldr	r3, [r7, #12]
 801e990:	681a      	ldr	r2, [r3, #0]
 801e992:	4b15      	ldr	r3, [pc, #84]	; (801e9e8 <prvInsertBlockIntoFreeList+0xb0>)
 801e994:	681b      	ldr	r3, [r3, #0]
 801e996:	429a      	cmp	r2, r3
 801e998:	d00d      	beq.n	801e9b6 <prvInsertBlockIntoFreeList+0x7e>
 801e99a:	687b      	ldr	r3, [r7, #4]
 801e99c:	685a      	ldr	r2, [r3, #4]
 801e99e:	68fb      	ldr	r3, [r7, #12]
 801e9a0:	681b      	ldr	r3, [r3, #0]
 801e9a2:	685b      	ldr	r3, [r3, #4]
 801e9a4:	441a      	add	r2, r3
 801e9a6:	687b      	ldr	r3, [r7, #4]
 801e9a8:	605a      	str	r2, [r3, #4]
 801e9aa:	68fb      	ldr	r3, [r7, #12]
 801e9ac:	681b      	ldr	r3, [r3, #0]
 801e9ae:	681a      	ldr	r2, [r3, #0]
 801e9b0:	687b      	ldr	r3, [r7, #4]
 801e9b2:	601a      	str	r2, [r3, #0]
 801e9b4:	e008      	b.n	801e9c8 <prvInsertBlockIntoFreeList+0x90>
 801e9b6:	4b0c      	ldr	r3, [pc, #48]	; (801e9e8 <prvInsertBlockIntoFreeList+0xb0>)
 801e9b8:	681a      	ldr	r2, [r3, #0]
 801e9ba:	687b      	ldr	r3, [r7, #4]
 801e9bc:	601a      	str	r2, [r3, #0]
 801e9be:	e003      	b.n	801e9c8 <prvInsertBlockIntoFreeList+0x90>
 801e9c0:	68fb      	ldr	r3, [r7, #12]
 801e9c2:	681a      	ldr	r2, [r3, #0]
 801e9c4:	687b      	ldr	r3, [r7, #4]
 801e9c6:	601a      	str	r2, [r3, #0]
 801e9c8:	68fa      	ldr	r2, [r7, #12]
 801e9ca:	687b      	ldr	r3, [r7, #4]
 801e9cc:	429a      	cmp	r2, r3
 801e9ce:	d002      	beq.n	801e9d6 <prvInsertBlockIntoFreeList+0x9e>
 801e9d0:	68fb      	ldr	r3, [r7, #12]
 801e9d2:	687a      	ldr	r2, [r7, #4]
 801e9d4:	601a      	str	r2, [r3, #0]
 801e9d6:	bf00      	nop
 801e9d8:	3714      	adds	r7, #20
 801e9da:	46bd      	mov	sp, r7
 801e9dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e9e0:	4770      	bx	lr
 801e9e2:	bf00      	nop
 801e9e4:	2000d948 	.word	0x2000d948
 801e9e8:	2000d950 	.word	0x2000d950

0801e9ec <MX_USB_DEVICE_Init>:
 801e9ec:	b580      	push	{r7, lr}
 801e9ee:	af00      	add	r7, sp, #0
 801e9f0:	2200      	movs	r2, #0
 801e9f2:	4912      	ldr	r1, [pc, #72]	; (801ea3c <MX_USB_DEVICE_Init+0x50>)
 801e9f4:	4812      	ldr	r0, [pc, #72]	; (801ea40 <MX_USB_DEVICE_Init+0x54>)
 801e9f6:	f7fb fb01 	bl	8019ffc <USBD_Init>
 801e9fa:	4603      	mov	r3, r0
 801e9fc:	2b00      	cmp	r3, #0
 801e9fe:	d001      	beq.n	801ea04 <MX_USB_DEVICE_Init+0x18>
 801ea00:	f7e5 f8df 	bl	8003bc2 <Error_Handler>
 801ea04:	490f      	ldr	r1, [pc, #60]	; (801ea44 <MX_USB_DEVICE_Init+0x58>)
 801ea06:	480e      	ldr	r0, [pc, #56]	; (801ea40 <MX_USB_DEVICE_Init+0x54>)
 801ea08:	f7fb fb28 	bl	801a05c <USBD_RegisterClass>
 801ea0c:	4603      	mov	r3, r0
 801ea0e:	2b00      	cmp	r3, #0
 801ea10:	d001      	beq.n	801ea16 <MX_USB_DEVICE_Init+0x2a>
 801ea12:	f7e5 f8d6 	bl	8003bc2 <Error_Handler>
 801ea16:	490c      	ldr	r1, [pc, #48]	; (801ea48 <MX_USB_DEVICE_Init+0x5c>)
 801ea18:	4809      	ldr	r0, [pc, #36]	; (801ea40 <MX_USB_DEVICE_Init+0x54>)
 801ea1a:	f7fb fa5f 	bl	8019edc <USBD_CDC_RegisterInterface>
 801ea1e:	4603      	mov	r3, r0
 801ea20:	2b00      	cmp	r3, #0
 801ea22:	d001      	beq.n	801ea28 <MX_USB_DEVICE_Init+0x3c>
 801ea24:	f7e5 f8cd 	bl	8003bc2 <Error_Handler>
 801ea28:	4805      	ldr	r0, [pc, #20]	; (801ea40 <MX_USB_DEVICE_Init+0x54>)
 801ea2a:	f7fb fb4d 	bl	801a0c8 <USBD_Start>
 801ea2e:	4603      	mov	r3, r0
 801ea30:	2b00      	cmp	r3, #0
 801ea32:	d001      	beq.n	801ea38 <MX_USB_DEVICE_Init+0x4c>
 801ea34:	f7e5 f8c5 	bl	8003bc2 <Error_Handler>
 801ea38:	bf00      	nop
 801ea3a:	bd80      	pop	{r7, pc}
 801ea3c:	20000100 	.word	0x20000100
 801ea40:	2000d968 	.word	0x2000d968
 801ea44:	20000068 	.word	0x20000068
 801ea48:	200000ec 	.word	0x200000ec

0801ea4c <CDC_Init_FS>:
 801ea4c:	b580      	push	{r7, lr}
 801ea4e:	af00      	add	r7, sp, #0
 801ea50:	2200      	movs	r2, #0
 801ea52:	4905      	ldr	r1, [pc, #20]	; (801ea68 <CDC_Init_FS+0x1c>)
 801ea54:	4805      	ldr	r0, [pc, #20]	; (801ea6c <CDC_Init_FS+0x20>)
 801ea56:	f7fb fa5b 	bl	8019f10 <USBD_CDC_SetTxBuffer>
 801ea5a:	4905      	ldr	r1, [pc, #20]	; (801ea70 <CDC_Init_FS+0x24>)
 801ea5c:	4803      	ldr	r0, [pc, #12]	; (801ea6c <CDC_Init_FS+0x20>)
 801ea5e:	f7fb fa79 	bl	8019f54 <USBD_CDC_SetRxBuffer>
 801ea62:	2300      	movs	r3, #0
 801ea64:	4618      	mov	r0, r3
 801ea66:	bd80      	pop	{r7, pc}
 801ea68:	2000e44c 	.word	0x2000e44c
 801ea6c:	2000d968 	.word	0x2000d968
 801ea70:	2000dc4c 	.word	0x2000dc4c

0801ea74 <CDC_DeInit_FS>:
 801ea74:	b480      	push	{r7}
 801ea76:	af00      	add	r7, sp, #0
 801ea78:	2300      	movs	r3, #0
 801ea7a:	4618      	mov	r0, r3
 801ea7c:	46bd      	mov	sp, r7
 801ea7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ea82:	4770      	bx	lr

0801ea84 <CDC_Control_FS>:
 801ea84:	b480      	push	{r7}
 801ea86:	b083      	sub	sp, #12
 801ea88:	af00      	add	r7, sp, #0
 801ea8a:	4603      	mov	r3, r0
 801ea8c:	6039      	str	r1, [r7, #0]
 801ea8e:	71fb      	strb	r3, [r7, #7]
 801ea90:	4613      	mov	r3, r2
 801ea92:	80bb      	strh	r3, [r7, #4]
 801ea94:	79fb      	ldrb	r3, [r7, #7]
 801ea96:	2b23      	cmp	r3, #35	; 0x23
 801ea98:	f200 808c 	bhi.w	801ebb4 <CDC_Control_FS+0x130>
 801ea9c:	a201      	add	r2, pc, #4	; (adr r2, 801eaa4 <CDC_Control_FS+0x20>)
 801ea9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801eaa2:	bf00      	nop
 801eaa4:	0801ebb5 	.word	0x0801ebb5
 801eaa8:	0801ebb5 	.word	0x0801ebb5
 801eaac:	0801ebb5 	.word	0x0801ebb5
 801eab0:	0801ebb5 	.word	0x0801ebb5
 801eab4:	0801ebb5 	.word	0x0801ebb5
 801eab8:	0801ebb5 	.word	0x0801ebb5
 801eabc:	0801ebb5 	.word	0x0801ebb5
 801eac0:	0801ebb5 	.word	0x0801ebb5
 801eac4:	0801ebb5 	.word	0x0801ebb5
 801eac8:	0801ebb5 	.word	0x0801ebb5
 801eacc:	0801ebb5 	.word	0x0801ebb5
 801ead0:	0801ebb5 	.word	0x0801ebb5
 801ead4:	0801ebb5 	.word	0x0801ebb5
 801ead8:	0801ebb5 	.word	0x0801ebb5
 801eadc:	0801ebb5 	.word	0x0801ebb5
 801eae0:	0801ebb5 	.word	0x0801ebb5
 801eae4:	0801ebb5 	.word	0x0801ebb5
 801eae8:	0801ebb5 	.word	0x0801ebb5
 801eaec:	0801ebb5 	.word	0x0801ebb5
 801eaf0:	0801ebb5 	.word	0x0801ebb5
 801eaf4:	0801ebb5 	.word	0x0801ebb5
 801eaf8:	0801ebb5 	.word	0x0801ebb5
 801eafc:	0801ebb5 	.word	0x0801ebb5
 801eb00:	0801ebb5 	.word	0x0801ebb5
 801eb04:	0801ebb5 	.word	0x0801ebb5
 801eb08:	0801ebb5 	.word	0x0801ebb5
 801eb0c:	0801ebb5 	.word	0x0801ebb5
 801eb10:	0801ebb5 	.word	0x0801ebb5
 801eb14:	0801ebb5 	.word	0x0801ebb5
 801eb18:	0801ebb5 	.word	0x0801ebb5
 801eb1c:	0801ebb5 	.word	0x0801ebb5
 801eb20:	0801ebb5 	.word	0x0801ebb5
 801eb24:	0801eb35 	.word	0x0801eb35
 801eb28:	0801eb6f 	.word	0x0801eb6f
 801eb2c:	0801ebb5 	.word	0x0801ebb5
 801eb30:	0801ebb5 	.word	0x0801ebb5
 801eb34:	683b      	ldr	r3, [r7, #0]
 801eb36:	781a      	ldrb	r2, [r3, #0]
 801eb38:	4b22      	ldr	r3, [pc, #136]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb3a:	701a      	strb	r2, [r3, #0]
 801eb3c:	683b      	ldr	r3, [r7, #0]
 801eb3e:	785a      	ldrb	r2, [r3, #1]
 801eb40:	4b20      	ldr	r3, [pc, #128]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb42:	705a      	strb	r2, [r3, #1]
 801eb44:	683b      	ldr	r3, [r7, #0]
 801eb46:	789a      	ldrb	r2, [r3, #2]
 801eb48:	4b1e      	ldr	r3, [pc, #120]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb4a:	709a      	strb	r2, [r3, #2]
 801eb4c:	683b      	ldr	r3, [r7, #0]
 801eb4e:	78da      	ldrb	r2, [r3, #3]
 801eb50:	4b1c      	ldr	r3, [pc, #112]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb52:	70da      	strb	r2, [r3, #3]
 801eb54:	683b      	ldr	r3, [r7, #0]
 801eb56:	791a      	ldrb	r2, [r3, #4]
 801eb58:	4b1a      	ldr	r3, [pc, #104]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb5a:	711a      	strb	r2, [r3, #4]
 801eb5c:	683b      	ldr	r3, [r7, #0]
 801eb5e:	795a      	ldrb	r2, [r3, #5]
 801eb60:	4b18      	ldr	r3, [pc, #96]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb62:	715a      	strb	r2, [r3, #5]
 801eb64:	683b      	ldr	r3, [r7, #0]
 801eb66:	799a      	ldrb	r2, [r3, #6]
 801eb68:	4b16      	ldr	r3, [pc, #88]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb6a:	719a      	strb	r2, [r3, #6]
 801eb6c:	e023      	b.n	801ebb6 <CDC_Control_FS+0x132>
 801eb6e:	4b15      	ldr	r3, [pc, #84]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb70:	781a      	ldrb	r2, [r3, #0]
 801eb72:	683b      	ldr	r3, [r7, #0]
 801eb74:	701a      	strb	r2, [r3, #0]
 801eb76:	683b      	ldr	r3, [r7, #0]
 801eb78:	3301      	adds	r3, #1
 801eb7a:	4a12      	ldr	r2, [pc, #72]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb7c:	7852      	ldrb	r2, [r2, #1]
 801eb7e:	701a      	strb	r2, [r3, #0]
 801eb80:	683b      	ldr	r3, [r7, #0]
 801eb82:	3302      	adds	r3, #2
 801eb84:	4a0f      	ldr	r2, [pc, #60]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb86:	7892      	ldrb	r2, [r2, #2]
 801eb88:	701a      	strb	r2, [r3, #0]
 801eb8a:	683b      	ldr	r3, [r7, #0]
 801eb8c:	3303      	adds	r3, #3
 801eb8e:	4a0d      	ldr	r2, [pc, #52]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb90:	78d2      	ldrb	r2, [r2, #3]
 801eb92:	701a      	strb	r2, [r3, #0]
 801eb94:	683b      	ldr	r3, [r7, #0]
 801eb96:	3304      	adds	r3, #4
 801eb98:	4a0a      	ldr	r2, [pc, #40]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eb9a:	7912      	ldrb	r2, [r2, #4]
 801eb9c:	701a      	strb	r2, [r3, #0]
 801eb9e:	683b      	ldr	r3, [r7, #0]
 801eba0:	3305      	adds	r3, #5
 801eba2:	4a08      	ldr	r2, [pc, #32]	; (801ebc4 <CDC_Control_FS+0x140>)
 801eba4:	7952      	ldrb	r2, [r2, #5]
 801eba6:	701a      	strb	r2, [r3, #0]
 801eba8:	683b      	ldr	r3, [r7, #0]
 801ebaa:	3306      	adds	r3, #6
 801ebac:	4a05      	ldr	r2, [pc, #20]	; (801ebc4 <CDC_Control_FS+0x140>)
 801ebae:	7992      	ldrb	r2, [r2, #6]
 801ebb0:	701a      	strb	r2, [r3, #0]
 801ebb2:	e000      	b.n	801ebb6 <CDC_Control_FS+0x132>
 801ebb4:	bf00      	nop
 801ebb6:	2300      	movs	r3, #0
 801ebb8:	4618      	mov	r0, r3
 801ebba:	370c      	adds	r7, #12
 801ebbc:	46bd      	mov	sp, r7
 801ebbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ebc2:	4770      	bx	lr
 801ebc4:	2000dc44 	.word	0x2000dc44

0801ebc8 <CDC_Receive_FS>:
 801ebc8:	b580      	push	{r7, lr}
 801ebca:	b082      	sub	sp, #8
 801ebcc:	af00      	add	r7, sp, #0
 801ebce:	6078      	str	r0, [r7, #4]
 801ebd0:	6039      	str	r1, [r7, #0]
 801ebd2:	6879      	ldr	r1, [r7, #4]
 801ebd4:	4807      	ldr	r0, [pc, #28]	; (801ebf4 <CDC_Receive_FS+0x2c>)
 801ebd6:	f7fb f9bd 	bl	8019f54 <USBD_CDC_SetRxBuffer>
 801ebda:	4806      	ldr	r0, [pc, #24]	; (801ebf4 <CDC_Receive_FS+0x2c>)
 801ebdc:	f7fb f9d8 	bl	8019f90 <USBD_CDC_ReceivePacket>
 801ebe0:	6839      	ldr	r1, [r7, #0]
 801ebe2:	6878      	ldr	r0, [r7, #4]
 801ebe4:	f7ef fab4 	bl	800e150 <usb_vcp_processing>
 801ebe8:	2300      	movs	r3, #0
 801ebea:	4618      	mov	r0, r3
 801ebec:	3708      	adds	r7, #8
 801ebee:	46bd      	mov	sp, r7
 801ebf0:	bd80      	pop	{r7, pc}
 801ebf2:	bf00      	nop
 801ebf4:	2000d968 	.word	0x2000d968

0801ebf8 <CDC_TransmitCplt_FS>:
 801ebf8:	b480      	push	{r7}
 801ebfa:	b087      	sub	sp, #28
 801ebfc:	af00      	add	r7, sp, #0
 801ebfe:	60f8      	str	r0, [r7, #12]
 801ec00:	60b9      	str	r1, [r7, #8]
 801ec02:	4613      	mov	r3, r2
 801ec04:	71fb      	strb	r3, [r7, #7]
 801ec06:	2300      	movs	r3, #0
 801ec08:	75fb      	strb	r3, [r7, #23]
 801ec0a:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801ec0e:	4618      	mov	r0, r3
 801ec10:	371c      	adds	r7, #28
 801ec12:	46bd      	mov	sp, r7
 801ec14:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ec18:	4770      	bx	lr
	...

0801ec1c <USBD_FS_DeviceDescriptor>:
 801ec1c:	b480      	push	{r7}
 801ec1e:	b083      	sub	sp, #12
 801ec20:	af00      	add	r7, sp, #0
 801ec22:	4603      	mov	r3, r0
 801ec24:	6039      	str	r1, [r7, #0]
 801ec26:	71fb      	strb	r3, [r7, #7]
 801ec28:	683b      	ldr	r3, [r7, #0]
 801ec2a:	2212      	movs	r2, #18
 801ec2c:	801a      	strh	r2, [r3, #0]
 801ec2e:	4b03      	ldr	r3, [pc, #12]	; (801ec3c <USBD_FS_DeviceDescriptor+0x20>)
 801ec30:	4618      	mov	r0, r3
 801ec32:	370c      	adds	r7, #12
 801ec34:	46bd      	mov	sp, r7
 801ec36:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ec3a:	4770      	bx	lr
 801ec3c:	2000011c 	.word	0x2000011c

0801ec40 <USBD_FS_LangIDStrDescriptor>:
 801ec40:	b480      	push	{r7}
 801ec42:	b083      	sub	sp, #12
 801ec44:	af00      	add	r7, sp, #0
 801ec46:	4603      	mov	r3, r0
 801ec48:	6039      	str	r1, [r7, #0]
 801ec4a:	71fb      	strb	r3, [r7, #7]
 801ec4c:	683b      	ldr	r3, [r7, #0]
 801ec4e:	2204      	movs	r2, #4
 801ec50:	801a      	strh	r2, [r3, #0]
 801ec52:	4b03      	ldr	r3, [pc, #12]	; (801ec60 <USBD_FS_LangIDStrDescriptor+0x20>)
 801ec54:	4618      	mov	r0, r3
 801ec56:	370c      	adds	r7, #12
 801ec58:	46bd      	mov	sp, r7
 801ec5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ec5e:	4770      	bx	lr
 801ec60:	20000130 	.word	0x20000130

0801ec64 <USBD_FS_ProductStrDescriptor>:
 801ec64:	b580      	push	{r7, lr}
 801ec66:	b082      	sub	sp, #8
 801ec68:	af00      	add	r7, sp, #0
 801ec6a:	4603      	mov	r3, r0
 801ec6c:	6039      	str	r1, [r7, #0]
 801ec6e:	71fb      	strb	r3, [r7, #7]
 801ec70:	79fb      	ldrb	r3, [r7, #7]
 801ec72:	2b00      	cmp	r3, #0
 801ec74:	d105      	bne.n	801ec82 <USBD_FS_ProductStrDescriptor+0x1e>
 801ec76:	683a      	ldr	r2, [r7, #0]
 801ec78:	4907      	ldr	r1, [pc, #28]	; (801ec98 <USBD_FS_ProductStrDescriptor+0x34>)
 801ec7a:	4808      	ldr	r0, [pc, #32]	; (801ec9c <USBD_FS_ProductStrDescriptor+0x38>)
 801ec7c:	f7fc fbd0 	bl	801b420 <USBD_GetString>
 801ec80:	e004      	b.n	801ec8c <USBD_FS_ProductStrDescriptor+0x28>
 801ec82:	683a      	ldr	r2, [r7, #0]
 801ec84:	4904      	ldr	r1, [pc, #16]	; (801ec98 <USBD_FS_ProductStrDescriptor+0x34>)
 801ec86:	4805      	ldr	r0, [pc, #20]	; (801ec9c <USBD_FS_ProductStrDescriptor+0x38>)
 801ec88:	f7fc fbca 	bl	801b420 <USBD_GetString>
 801ec8c:	4b02      	ldr	r3, [pc, #8]	; (801ec98 <USBD_FS_ProductStrDescriptor+0x34>)
 801ec8e:	4618      	mov	r0, r3
 801ec90:	3708      	adds	r7, #8
 801ec92:	46bd      	mov	sp, r7
 801ec94:	bd80      	pop	{r7, pc}
 801ec96:	bf00      	nop
 801ec98:	2000ec4c 	.word	0x2000ec4c
 801ec9c:	080269d0 	.word	0x080269d0

0801eca0 <USBD_FS_ManufacturerStrDescriptor>:
 801eca0:	b580      	push	{r7, lr}
 801eca2:	b082      	sub	sp, #8
 801eca4:	af00      	add	r7, sp, #0
 801eca6:	4603      	mov	r3, r0
 801eca8:	6039      	str	r1, [r7, #0]
 801ecaa:	71fb      	strb	r3, [r7, #7]
 801ecac:	683a      	ldr	r2, [r7, #0]
 801ecae:	4904      	ldr	r1, [pc, #16]	; (801ecc0 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801ecb0:	4804      	ldr	r0, [pc, #16]	; (801ecc4 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801ecb2:	f7fc fbb5 	bl	801b420 <USBD_GetString>
 801ecb6:	4b02      	ldr	r3, [pc, #8]	; (801ecc0 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801ecb8:	4618      	mov	r0, r3
 801ecba:	3708      	adds	r7, #8
 801ecbc:	46bd      	mov	sp, r7
 801ecbe:	bd80      	pop	{r7, pc}
 801ecc0:	2000ec4c 	.word	0x2000ec4c
 801ecc4:	080269e8 	.word	0x080269e8

0801ecc8 <USBD_FS_SerialStrDescriptor>:
 801ecc8:	b580      	push	{r7, lr}
 801ecca:	b082      	sub	sp, #8
 801eccc:	af00      	add	r7, sp, #0
 801ecce:	4603      	mov	r3, r0
 801ecd0:	6039      	str	r1, [r7, #0]
 801ecd2:	71fb      	strb	r3, [r7, #7]
 801ecd4:	683b      	ldr	r3, [r7, #0]
 801ecd6:	221a      	movs	r2, #26
 801ecd8:	801a      	strh	r2, [r3, #0]
 801ecda:	f000 f843 	bl	801ed64 <Get_SerialNum>
 801ecde:	4b02      	ldr	r3, [pc, #8]	; (801ece8 <USBD_FS_SerialStrDescriptor+0x20>)
 801ece0:	4618      	mov	r0, r3
 801ece2:	3708      	adds	r7, #8
 801ece4:	46bd      	mov	sp, r7
 801ece6:	bd80      	pop	{r7, pc}
 801ece8:	20000134 	.word	0x20000134

0801ecec <USBD_FS_ConfigStrDescriptor>:
 801ecec:	b580      	push	{r7, lr}
 801ecee:	b082      	sub	sp, #8
 801ecf0:	af00      	add	r7, sp, #0
 801ecf2:	4603      	mov	r3, r0
 801ecf4:	6039      	str	r1, [r7, #0]
 801ecf6:	71fb      	strb	r3, [r7, #7]
 801ecf8:	79fb      	ldrb	r3, [r7, #7]
 801ecfa:	2b00      	cmp	r3, #0
 801ecfc:	d105      	bne.n	801ed0a <USBD_FS_ConfigStrDescriptor+0x1e>
 801ecfe:	683a      	ldr	r2, [r7, #0]
 801ed00:	4907      	ldr	r1, [pc, #28]	; (801ed20 <USBD_FS_ConfigStrDescriptor+0x34>)
 801ed02:	4808      	ldr	r0, [pc, #32]	; (801ed24 <USBD_FS_ConfigStrDescriptor+0x38>)
 801ed04:	f7fc fb8c 	bl	801b420 <USBD_GetString>
 801ed08:	e004      	b.n	801ed14 <USBD_FS_ConfigStrDescriptor+0x28>
 801ed0a:	683a      	ldr	r2, [r7, #0]
 801ed0c:	4904      	ldr	r1, [pc, #16]	; (801ed20 <USBD_FS_ConfigStrDescriptor+0x34>)
 801ed0e:	4805      	ldr	r0, [pc, #20]	; (801ed24 <USBD_FS_ConfigStrDescriptor+0x38>)
 801ed10:	f7fc fb86 	bl	801b420 <USBD_GetString>
 801ed14:	4b02      	ldr	r3, [pc, #8]	; (801ed20 <USBD_FS_ConfigStrDescriptor+0x34>)
 801ed16:	4618      	mov	r0, r3
 801ed18:	3708      	adds	r7, #8
 801ed1a:	46bd      	mov	sp, r7
 801ed1c:	bd80      	pop	{r7, pc}
 801ed1e:	bf00      	nop
 801ed20:	2000ec4c 	.word	0x2000ec4c
 801ed24:	080269fc 	.word	0x080269fc

0801ed28 <USBD_FS_InterfaceStrDescriptor>:
 801ed28:	b580      	push	{r7, lr}
 801ed2a:	b082      	sub	sp, #8
 801ed2c:	af00      	add	r7, sp, #0
 801ed2e:	4603      	mov	r3, r0
 801ed30:	6039      	str	r1, [r7, #0]
 801ed32:	71fb      	strb	r3, [r7, #7]
 801ed34:	79fb      	ldrb	r3, [r7, #7]
 801ed36:	2b00      	cmp	r3, #0
 801ed38:	d105      	bne.n	801ed46 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801ed3a:	683a      	ldr	r2, [r7, #0]
 801ed3c:	4907      	ldr	r1, [pc, #28]	; (801ed5c <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ed3e:	4808      	ldr	r0, [pc, #32]	; (801ed60 <USBD_FS_InterfaceStrDescriptor+0x38>)
 801ed40:	f7fc fb6e 	bl	801b420 <USBD_GetString>
 801ed44:	e004      	b.n	801ed50 <USBD_FS_InterfaceStrDescriptor+0x28>
 801ed46:	683a      	ldr	r2, [r7, #0]
 801ed48:	4904      	ldr	r1, [pc, #16]	; (801ed5c <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ed4a:	4805      	ldr	r0, [pc, #20]	; (801ed60 <USBD_FS_InterfaceStrDescriptor+0x38>)
 801ed4c:	f7fc fb68 	bl	801b420 <USBD_GetString>
 801ed50:	4b02      	ldr	r3, [pc, #8]	; (801ed5c <USBD_FS_InterfaceStrDescriptor+0x34>)
 801ed52:	4618      	mov	r0, r3
 801ed54:	3708      	adds	r7, #8
 801ed56:	46bd      	mov	sp, r7
 801ed58:	bd80      	pop	{r7, pc}
 801ed5a:	bf00      	nop
 801ed5c:	2000ec4c 	.word	0x2000ec4c
 801ed60:	08026a08 	.word	0x08026a08

0801ed64 <Get_SerialNum>:
 801ed64:	b580      	push	{r7, lr}
 801ed66:	b084      	sub	sp, #16
 801ed68:	af00      	add	r7, sp, #0
 801ed6a:	4b0f      	ldr	r3, [pc, #60]	; (801eda8 <Get_SerialNum+0x44>)
 801ed6c:	681b      	ldr	r3, [r3, #0]
 801ed6e:	60fb      	str	r3, [r7, #12]
 801ed70:	4b0e      	ldr	r3, [pc, #56]	; (801edac <Get_SerialNum+0x48>)
 801ed72:	681b      	ldr	r3, [r3, #0]
 801ed74:	60bb      	str	r3, [r7, #8]
 801ed76:	4b0e      	ldr	r3, [pc, #56]	; (801edb0 <Get_SerialNum+0x4c>)
 801ed78:	681b      	ldr	r3, [r3, #0]
 801ed7a:	607b      	str	r3, [r7, #4]
 801ed7c:	68fa      	ldr	r2, [r7, #12]
 801ed7e:	687b      	ldr	r3, [r7, #4]
 801ed80:	4413      	add	r3, r2
 801ed82:	60fb      	str	r3, [r7, #12]
 801ed84:	68fb      	ldr	r3, [r7, #12]
 801ed86:	2b00      	cmp	r3, #0
 801ed88:	d009      	beq.n	801ed9e <Get_SerialNum+0x3a>
 801ed8a:	2208      	movs	r2, #8
 801ed8c:	4909      	ldr	r1, [pc, #36]	; (801edb4 <Get_SerialNum+0x50>)
 801ed8e:	68f8      	ldr	r0, [r7, #12]
 801ed90:	f000 f814 	bl	801edbc <IntToUnicode>
 801ed94:	2204      	movs	r2, #4
 801ed96:	4908      	ldr	r1, [pc, #32]	; (801edb8 <Get_SerialNum+0x54>)
 801ed98:	68b8      	ldr	r0, [r7, #8]
 801ed9a:	f000 f80f 	bl	801edbc <IntToUnicode>
 801ed9e:	bf00      	nop
 801eda0:	3710      	adds	r7, #16
 801eda2:	46bd      	mov	sp, r7
 801eda4:	bd80      	pop	{r7, pc}
 801eda6:	bf00      	nop
 801eda8:	1fff7a10 	.word	0x1fff7a10
 801edac:	1fff7a14 	.word	0x1fff7a14
 801edb0:	1fff7a18 	.word	0x1fff7a18
 801edb4:	20000136 	.word	0x20000136
 801edb8:	20000146 	.word	0x20000146

0801edbc <IntToUnicode>:
 801edbc:	b480      	push	{r7}
 801edbe:	b087      	sub	sp, #28
 801edc0:	af00      	add	r7, sp, #0
 801edc2:	60f8      	str	r0, [r7, #12]
 801edc4:	60b9      	str	r1, [r7, #8]
 801edc6:	4613      	mov	r3, r2
 801edc8:	71fb      	strb	r3, [r7, #7]
 801edca:	2300      	movs	r3, #0
 801edcc:	75fb      	strb	r3, [r7, #23]
 801edce:	2300      	movs	r3, #0
 801edd0:	75fb      	strb	r3, [r7, #23]
 801edd2:	e027      	b.n	801ee24 <IntToUnicode+0x68>
 801edd4:	68fb      	ldr	r3, [r7, #12]
 801edd6:	0f1b      	lsrs	r3, r3, #28
 801edd8:	2b09      	cmp	r3, #9
 801edda:	d80b      	bhi.n	801edf4 <IntToUnicode+0x38>
 801eddc:	68fb      	ldr	r3, [r7, #12]
 801edde:	0f1b      	lsrs	r3, r3, #28
 801ede0:	b2da      	uxtb	r2, r3
 801ede2:	7dfb      	ldrb	r3, [r7, #23]
 801ede4:	005b      	lsls	r3, r3, #1
 801ede6:	4619      	mov	r1, r3
 801ede8:	68bb      	ldr	r3, [r7, #8]
 801edea:	440b      	add	r3, r1
 801edec:	3230      	adds	r2, #48	; 0x30
 801edee:	b2d2      	uxtb	r2, r2
 801edf0:	701a      	strb	r2, [r3, #0]
 801edf2:	e00a      	b.n	801ee0a <IntToUnicode+0x4e>
 801edf4:	68fb      	ldr	r3, [r7, #12]
 801edf6:	0f1b      	lsrs	r3, r3, #28
 801edf8:	b2da      	uxtb	r2, r3
 801edfa:	7dfb      	ldrb	r3, [r7, #23]
 801edfc:	005b      	lsls	r3, r3, #1
 801edfe:	4619      	mov	r1, r3
 801ee00:	68bb      	ldr	r3, [r7, #8]
 801ee02:	440b      	add	r3, r1
 801ee04:	3237      	adds	r2, #55	; 0x37
 801ee06:	b2d2      	uxtb	r2, r2
 801ee08:	701a      	strb	r2, [r3, #0]
 801ee0a:	68fb      	ldr	r3, [r7, #12]
 801ee0c:	011b      	lsls	r3, r3, #4
 801ee0e:	60fb      	str	r3, [r7, #12]
 801ee10:	7dfb      	ldrb	r3, [r7, #23]
 801ee12:	005b      	lsls	r3, r3, #1
 801ee14:	3301      	adds	r3, #1
 801ee16:	68ba      	ldr	r2, [r7, #8]
 801ee18:	4413      	add	r3, r2
 801ee1a:	2200      	movs	r2, #0
 801ee1c:	701a      	strb	r2, [r3, #0]
 801ee1e:	7dfb      	ldrb	r3, [r7, #23]
 801ee20:	3301      	adds	r3, #1
 801ee22:	75fb      	strb	r3, [r7, #23]
 801ee24:	7dfa      	ldrb	r2, [r7, #23]
 801ee26:	79fb      	ldrb	r3, [r7, #7]
 801ee28:	429a      	cmp	r2, r3
 801ee2a:	d3d3      	bcc.n	801edd4 <IntToUnicode+0x18>
 801ee2c:	bf00      	nop
 801ee2e:	bf00      	nop
 801ee30:	371c      	adds	r7, #28
 801ee32:	46bd      	mov	sp, r7
 801ee34:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ee38:	4770      	bx	lr
	...

0801ee3c <HAL_PCD_MspInit>:
 801ee3c:	b580      	push	{r7, lr}
 801ee3e:	b08a      	sub	sp, #40	; 0x28
 801ee40:	af00      	add	r7, sp, #0
 801ee42:	6078      	str	r0, [r7, #4]
 801ee44:	f107 0314 	add.w	r3, r7, #20
 801ee48:	2200      	movs	r2, #0
 801ee4a:	601a      	str	r2, [r3, #0]
 801ee4c:	605a      	str	r2, [r3, #4]
 801ee4e:	609a      	str	r2, [r3, #8]
 801ee50:	60da      	str	r2, [r3, #12]
 801ee52:	611a      	str	r2, [r3, #16]
 801ee54:	687b      	ldr	r3, [r7, #4]
 801ee56:	681b      	ldr	r3, [r3, #0]
 801ee58:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 801ee5c:	d13a      	bne.n	801eed4 <HAL_PCD_MspInit+0x98>
 801ee5e:	2300      	movs	r3, #0
 801ee60:	613b      	str	r3, [r7, #16]
 801ee62:	4b1e      	ldr	r3, [pc, #120]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801ee64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ee66:	4a1d      	ldr	r2, [pc, #116]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801ee68:	f043 0301 	orr.w	r3, r3, #1
 801ee6c:	6313      	str	r3, [r2, #48]	; 0x30
 801ee6e:	4b1b      	ldr	r3, [pc, #108]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801ee70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ee72:	f003 0301 	and.w	r3, r3, #1
 801ee76:	613b      	str	r3, [r7, #16]
 801ee78:	693b      	ldr	r3, [r7, #16]
 801ee7a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 801ee7e:	617b      	str	r3, [r7, #20]
 801ee80:	2302      	movs	r3, #2
 801ee82:	61bb      	str	r3, [r7, #24]
 801ee84:	2300      	movs	r3, #0
 801ee86:	61fb      	str	r3, [r7, #28]
 801ee88:	2303      	movs	r3, #3
 801ee8a:	623b      	str	r3, [r7, #32]
 801ee8c:	230a      	movs	r3, #10
 801ee8e:	627b      	str	r3, [r7, #36]	; 0x24
 801ee90:	f107 0314 	add.w	r3, r7, #20
 801ee94:	4619      	mov	r1, r3
 801ee96:	4812      	ldr	r0, [pc, #72]	; (801eee0 <HAL_PCD_MspInit+0xa4>)
 801ee98:	f7f2 fa06 	bl	80112a8 <HAL_GPIO_Init>
 801ee9c:	4b0f      	ldr	r3, [pc, #60]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801ee9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801eea0:	4a0e      	ldr	r2, [pc, #56]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801eea2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801eea6:	6353      	str	r3, [r2, #52]	; 0x34
 801eea8:	2300      	movs	r3, #0
 801eeaa:	60fb      	str	r3, [r7, #12]
 801eeac:	4b0b      	ldr	r3, [pc, #44]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801eeae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801eeb0:	4a0a      	ldr	r2, [pc, #40]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801eeb2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801eeb6:	6453      	str	r3, [r2, #68]	; 0x44
 801eeb8:	4b08      	ldr	r3, [pc, #32]	; (801eedc <HAL_PCD_MspInit+0xa0>)
 801eeba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801eebc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801eec0:	60fb      	str	r3, [r7, #12]
 801eec2:	68fb      	ldr	r3, [r7, #12]
 801eec4:	2200      	movs	r2, #0
 801eec6:	2105      	movs	r1, #5
 801eec8:	2043      	movs	r0, #67	; 0x43
 801eeca:	f7f1 fdb5 	bl	8010a38 <HAL_NVIC_SetPriority>
 801eece:	2043      	movs	r0, #67	; 0x43
 801eed0:	f7f1 fdce 	bl	8010a70 <HAL_NVIC_EnableIRQ>
 801eed4:	bf00      	nop
 801eed6:	3728      	adds	r7, #40	; 0x28
 801eed8:	46bd      	mov	sp, r7
 801eeda:	bd80      	pop	{r7, pc}
 801eedc:	40023800 	.word	0x40023800
 801eee0:	40020000 	.word	0x40020000

0801eee4 <HAL_PCD_SetupStageCallback>:
 801eee4:	b580      	push	{r7, lr}
 801eee6:	b082      	sub	sp, #8
 801eee8:	af00      	add	r7, sp, #0
 801eeea:	6078      	str	r0, [r7, #4]
 801eeec:	687b      	ldr	r3, [r7, #4]
 801eeee:	f8d3 2508 	ldr.w	r2, [r3, #1288]	; 0x508
 801eef2:	687b      	ldr	r3, [r7, #4]
 801eef4:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 801eef8:	4619      	mov	r1, r3
 801eefa:	4610      	mov	r0, r2
 801eefc:	f7fb f931 	bl	801a162 <USBD_LL_SetupStage>
 801ef00:	bf00      	nop
 801ef02:	3708      	adds	r7, #8
 801ef04:	46bd      	mov	sp, r7
 801ef06:	bd80      	pop	{r7, pc}

0801ef08 <HAL_PCD_DataOutStageCallback>:
 801ef08:	b580      	push	{r7, lr}
 801ef0a:	b082      	sub	sp, #8
 801ef0c:	af00      	add	r7, sp, #0
 801ef0e:	6078      	str	r0, [r7, #4]
 801ef10:	460b      	mov	r3, r1
 801ef12:	70fb      	strb	r3, [r7, #3]
 801ef14:	687b      	ldr	r3, [r7, #4]
 801ef16:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 801ef1a:	78fa      	ldrb	r2, [r7, #3]
 801ef1c:	6879      	ldr	r1, [r7, #4]
 801ef1e:	4613      	mov	r3, r2
 801ef20:	00db      	lsls	r3, r3, #3
 801ef22:	4413      	add	r3, r2
 801ef24:	009b      	lsls	r3, r3, #2
 801ef26:	440b      	add	r3, r1
 801ef28:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 801ef2c:	681a      	ldr	r2, [r3, #0]
 801ef2e:	78fb      	ldrb	r3, [r7, #3]
 801ef30:	4619      	mov	r1, r3
 801ef32:	f7fb f96b 	bl	801a20c <USBD_LL_DataOutStage>
 801ef36:	bf00      	nop
 801ef38:	3708      	adds	r7, #8
 801ef3a:	46bd      	mov	sp, r7
 801ef3c:	bd80      	pop	{r7, pc}

0801ef3e <HAL_PCD_DataInStageCallback>:
 801ef3e:	b580      	push	{r7, lr}
 801ef40:	b082      	sub	sp, #8
 801ef42:	af00      	add	r7, sp, #0
 801ef44:	6078      	str	r0, [r7, #4]
 801ef46:	460b      	mov	r3, r1
 801ef48:	70fb      	strb	r3, [r7, #3]
 801ef4a:	687b      	ldr	r3, [r7, #4]
 801ef4c:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 801ef50:	78fa      	ldrb	r2, [r7, #3]
 801ef52:	6879      	ldr	r1, [r7, #4]
 801ef54:	4613      	mov	r3, r2
 801ef56:	00db      	lsls	r3, r3, #3
 801ef58:	4413      	add	r3, r2
 801ef5a:	009b      	lsls	r3, r3, #2
 801ef5c:	440b      	add	r3, r1
 801ef5e:	334c      	adds	r3, #76	; 0x4c
 801ef60:	681a      	ldr	r2, [r3, #0]
 801ef62:	78fb      	ldrb	r3, [r7, #3]
 801ef64:	4619      	mov	r1, r3
 801ef66:	f7fb fa04 	bl	801a372 <USBD_LL_DataInStage>
 801ef6a:	bf00      	nop
 801ef6c:	3708      	adds	r7, #8
 801ef6e:	46bd      	mov	sp, r7
 801ef70:	bd80      	pop	{r7, pc}

0801ef72 <HAL_PCD_SOFCallback>:
 801ef72:	b580      	push	{r7, lr}
 801ef74:	b082      	sub	sp, #8
 801ef76:	af00      	add	r7, sp, #0
 801ef78:	6078      	str	r0, [r7, #4]
 801ef7a:	687b      	ldr	r3, [r7, #4]
 801ef7c:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801ef80:	4618      	mov	r0, r3
 801ef82:	f7fb fb38 	bl	801a5f6 <USBD_LL_SOF>
 801ef86:	bf00      	nop
 801ef88:	3708      	adds	r7, #8
 801ef8a:	46bd      	mov	sp, r7
 801ef8c:	bd80      	pop	{r7, pc}

0801ef8e <HAL_PCD_ResetCallback>:
 801ef8e:	b580      	push	{r7, lr}
 801ef90:	b084      	sub	sp, #16
 801ef92:	af00      	add	r7, sp, #0
 801ef94:	6078      	str	r0, [r7, #4]
 801ef96:	2301      	movs	r3, #1
 801ef98:	73fb      	strb	r3, [r7, #15]
 801ef9a:	687b      	ldr	r3, [r7, #4]
 801ef9c:	68db      	ldr	r3, [r3, #12]
 801ef9e:	2b00      	cmp	r3, #0
 801efa0:	d102      	bne.n	801efa8 <HAL_PCD_ResetCallback+0x1a>
 801efa2:	2300      	movs	r3, #0
 801efa4:	73fb      	strb	r3, [r7, #15]
 801efa6:	e008      	b.n	801efba <HAL_PCD_ResetCallback+0x2c>
 801efa8:	687b      	ldr	r3, [r7, #4]
 801efaa:	68db      	ldr	r3, [r3, #12]
 801efac:	2b02      	cmp	r3, #2
 801efae:	d102      	bne.n	801efb6 <HAL_PCD_ResetCallback+0x28>
 801efb0:	2301      	movs	r3, #1
 801efb2:	73fb      	strb	r3, [r7, #15]
 801efb4:	e001      	b.n	801efba <HAL_PCD_ResetCallback+0x2c>
 801efb6:	f7e4 fe04 	bl	8003bc2 <Error_Handler>
 801efba:	687b      	ldr	r3, [r7, #4]
 801efbc:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801efc0:	7bfa      	ldrb	r2, [r7, #15]
 801efc2:	4611      	mov	r1, r2
 801efc4:	4618      	mov	r0, r3
 801efc6:	f7fb fad8 	bl	801a57a <USBD_LL_SetSpeed>
 801efca:	687b      	ldr	r3, [r7, #4]
 801efcc:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801efd0:	4618      	mov	r0, r3
 801efd2:	f7fb fa80 	bl	801a4d6 <USBD_LL_Reset>
 801efd6:	bf00      	nop
 801efd8:	3710      	adds	r7, #16
 801efda:	46bd      	mov	sp, r7
 801efdc:	bd80      	pop	{r7, pc}
	...

0801efe0 <HAL_PCD_SuspendCallback>:
 801efe0:	b580      	push	{r7, lr}
 801efe2:	b082      	sub	sp, #8
 801efe4:	af00      	add	r7, sp, #0
 801efe6:	6078      	str	r0, [r7, #4]
 801efe8:	687b      	ldr	r3, [r7, #4]
 801efea:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801efee:	4618      	mov	r0, r3
 801eff0:	f7fb fad3 	bl	801a59a <USBD_LL_Suspend>
 801eff4:	687b      	ldr	r3, [r7, #4]
 801eff6:	681b      	ldr	r3, [r3, #0]
 801eff8:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 801effc:	681b      	ldr	r3, [r3, #0]
 801effe:	687a      	ldr	r2, [r7, #4]
 801f000:	6812      	ldr	r2, [r2, #0]
 801f002:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 801f006:	f043 0301 	orr.w	r3, r3, #1
 801f00a:	6013      	str	r3, [r2, #0]
 801f00c:	4b08      	ldr	r3, [pc, #32]	; (801f030 <HAL_PCD_SuspendCallback+0x50>)
 801f00e:	2200      	movs	r2, #0
 801f010:	701a      	strb	r2, [r3, #0]
 801f012:	687b      	ldr	r3, [r7, #4]
 801f014:	6a1b      	ldr	r3, [r3, #32]
 801f016:	2b00      	cmp	r3, #0
 801f018:	d005      	beq.n	801f026 <HAL_PCD_SuspendCallback+0x46>
 801f01a:	4b06      	ldr	r3, [pc, #24]	; (801f034 <HAL_PCD_SuspendCallback+0x54>)
 801f01c:	691b      	ldr	r3, [r3, #16]
 801f01e:	4a05      	ldr	r2, [pc, #20]	; (801f034 <HAL_PCD_SuspendCallback+0x54>)
 801f020:	f043 0306 	orr.w	r3, r3, #6
 801f024:	6113      	str	r3, [r2, #16]
 801f026:	bf00      	nop
 801f028:	3708      	adds	r7, #8
 801f02a:	46bd      	mov	sp, r7
 801f02c:	bd80      	pop	{r7, pc}
 801f02e:	bf00      	nop
 801f030:	2000351d 	.word	0x2000351d
 801f034:	e000ed00 	.word	0xe000ed00

0801f038 <HAL_PCD_ResumeCallback>:
 801f038:	b580      	push	{r7, lr}
 801f03a:	b082      	sub	sp, #8
 801f03c:	af00      	add	r7, sp, #0
 801f03e:	6078      	str	r0, [r7, #4]
 801f040:	4b06      	ldr	r3, [pc, #24]	; (801f05c <HAL_PCD_ResumeCallback+0x24>)
 801f042:	2201      	movs	r2, #1
 801f044:	701a      	strb	r2, [r3, #0]
 801f046:	687b      	ldr	r3, [r7, #4]
 801f048:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801f04c:	4618      	mov	r0, r3
 801f04e:	f7fb faba 	bl	801a5c6 <USBD_LL_Resume>
 801f052:	bf00      	nop
 801f054:	3708      	adds	r7, #8
 801f056:	46bd      	mov	sp, r7
 801f058:	bd80      	pop	{r7, pc}
 801f05a:	bf00      	nop
 801f05c:	2000351d 	.word	0x2000351d

0801f060 <HAL_PCD_ISOOUTIncompleteCallback>:
 801f060:	b580      	push	{r7, lr}
 801f062:	b082      	sub	sp, #8
 801f064:	af00      	add	r7, sp, #0
 801f066:	6078      	str	r0, [r7, #4]
 801f068:	460b      	mov	r3, r1
 801f06a:	70fb      	strb	r3, [r7, #3]
 801f06c:	687b      	ldr	r3, [r7, #4]
 801f06e:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801f072:	78fa      	ldrb	r2, [r7, #3]
 801f074:	4611      	mov	r1, r2
 801f076:	4618      	mov	r0, r3
 801f078:	f7fb fb0f 	bl	801a69a <USBD_LL_IsoOUTIncomplete>
 801f07c:	bf00      	nop
 801f07e:	3708      	adds	r7, #8
 801f080:	46bd      	mov	sp, r7
 801f082:	bd80      	pop	{r7, pc}

0801f084 <HAL_PCD_ISOINIncompleteCallback>:
 801f084:	b580      	push	{r7, lr}
 801f086:	b082      	sub	sp, #8
 801f088:	af00      	add	r7, sp, #0
 801f08a:	6078      	str	r0, [r7, #4]
 801f08c:	460b      	mov	r3, r1
 801f08e:	70fb      	strb	r3, [r7, #3]
 801f090:	687b      	ldr	r3, [r7, #4]
 801f092:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801f096:	78fa      	ldrb	r2, [r7, #3]
 801f098:	4611      	mov	r1, r2
 801f09a:	4618      	mov	r0, r3
 801f09c:	f7fb facb 	bl	801a636 <USBD_LL_IsoINIncomplete>
 801f0a0:	bf00      	nop
 801f0a2:	3708      	adds	r7, #8
 801f0a4:	46bd      	mov	sp, r7
 801f0a6:	bd80      	pop	{r7, pc}

0801f0a8 <HAL_PCD_ConnectCallback>:
 801f0a8:	b580      	push	{r7, lr}
 801f0aa:	b082      	sub	sp, #8
 801f0ac:	af00      	add	r7, sp, #0
 801f0ae:	6078      	str	r0, [r7, #4]
 801f0b0:	687b      	ldr	r3, [r7, #4]
 801f0b2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801f0b6:	4618      	mov	r0, r3
 801f0b8:	f7fb fb21 	bl	801a6fe <USBD_LL_DevConnected>
 801f0bc:	bf00      	nop
 801f0be:	3708      	adds	r7, #8
 801f0c0:	46bd      	mov	sp, r7
 801f0c2:	bd80      	pop	{r7, pc}

0801f0c4 <HAL_PCD_DisconnectCallback>:
 801f0c4:	b580      	push	{r7, lr}
 801f0c6:	b082      	sub	sp, #8
 801f0c8:	af00      	add	r7, sp, #0
 801f0ca:	6078      	str	r0, [r7, #4]
 801f0cc:	687b      	ldr	r3, [r7, #4]
 801f0ce:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 801f0d2:	4618      	mov	r0, r3
 801f0d4:	f7fb fb1e 	bl	801a714 <USBD_LL_DevDisconnected>
 801f0d8:	bf00      	nop
 801f0da:	3708      	adds	r7, #8
 801f0dc:	46bd      	mov	sp, r7
 801f0de:	bd80      	pop	{r7, pc}

0801f0e0 <USBD_LL_Init>:
 801f0e0:	b580      	push	{r7, lr}
 801f0e2:	b082      	sub	sp, #8
 801f0e4:	af00      	add	r7, sp, #0
 801f0e6:	6078      	str	r0, [r7, #4]
 801f0e8:	687b      	ldr	r3, [r7, #4]
 801f0ea:	781b      	ldrb	r3, [r3, #0]
 801f0ec:	2b00      	cmp	r3, #0
 801f0ee:	d13c      	bne.n	801f16a <USBD_LL_Init+0x8a>
 801f0f0:	4a20      	ldr	r2, [pc, #128]	; (801f174 <USBD_LL_Init+0x94>)
 801f0f2:	687b      	ldr	r3, [r7, #4]
 801f0f4:	f8c2 3508 	str.w	r3, [r2, #1288]	; 0x508
 801f0f8:	687b      	ldr	r3, [r7, #4]
 801f0fa:	4a1e      	ldr	r2, [pc, #120]	; (801f174 <USBD_LL_Init+0x94>)
 801f0fc:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8
 801f100:	4b1c      	ldr	r3, [pc, #112]	; (801f174 <USBD_LL_Init+0x94>)
 801f102:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 801f106:	601a      	str	r2, [r3, #0]
 801f108:	4b1a      	ldr	r3, [pc, #104]	; (801f174 <USBD_LL_Init+0x94>)
 801f10a:	2204      	movs	r2, #4
 801f10c:	605a      	str	r2, [r3, #4]
 801f10e:	4b19      	ldr	r3, [pc, #100]	; (801f174 <USBD_LL_Init+0x94>)
 801f110:	2202      	movs	r2, #2
 801f112:	60da      	str	r2, [r3, #12]
 801f114:	4b17      	ldr	r3, [pc, #92]	; (801f174 <USBD_LL_Init+0x94>)
 801f116:	2200      	movs	r2, #0
 801f118:	611a      	str	r2, [r3, #16]
 801f11a:	4b16      	ldr	r3, [pc, #88]	; (801f174 <USBD_LL_Init+0x94>)
 801f11c:	2202      	movs	r2, #2
 801f11e:	619a      	str	r2, [r3, #24]
 801f120:	4b14      	ldr	r3, [pc, #80]	; (801f174 <USBD_LL_Init+0x94>)
 801f122:	2200      	movs	r2, #0
 801f124:	61da      	str	r2, [r3, #28]
 801f126:	4b13      	ldr	r3, [pc, #76]	; (801f174 <USBD_LL_Init+0x94>)
 801f128:	2200      	movs	r2, #0
 801f12a:	621a      	str	r2, [r3, #32]
 801f12c:	4b11      	ldr	r3, [pc, #68]	; (801f174 <USBD_LL_Init+0x94>)
 801f12e:	2200      	movs	r2, #0
 801f130:	625a      	str	r2, [r3, #36]	; 0x24
 801f132:	4b10      	ldr	r3, [pc, #64]	; (801f174 <USBD_LL_Init+0x94>)
 801f134:	2200      	movs	r2, #0
 801f136:	62da      	str	r2, [r3, #44]	; 0x2c
 801f138:	4b0e      	ldr	r3, [pc, #56]	; (801f174 <USBD_LL_Init+0x94>)
 801f13a:	2200      	movs	r2, #0
 801f13c:	631a      	str	r2, [r3, #48]	; 0x30
 801f13e:	480d      	ldr	r0, [pc, #52]	; (801f174 <USBD_LL_Init+0x94>)
 801f140:	f7f4 f813 	bl	801316a <HAL_PCD_Init>
 801f144:	4603      	mov	r3, r0
 801f146:	2b00      	cmp	r3, #0
 801f148:	d001      	beq.n	801f14e <USBD_LL_Init+0x6e>
 801f14a:	f7e4 fd3a 	bl	8003bc2 <Error_Handler>
 801f14e:	2180      	movs	r1, #128	; 0x80
 801f150:	4808      	ldr	r0, [pc, #32]	; (801f174 <USBD_LL_Init+0x94>)
 801f152:	f7f5 fa6a 	bl	801462a <HAL_PCDEx_SetRxFiFo>
 801f156:	2240      	movs	r2, #64	; 0x40
 801f158:	2100      	movs	r1, #0
 801f15a:	4806      	ldr	r0, [pc, #24]	; (801f174 <USBD_LL_Init+0x94>)
 801f15c:	f7f5 fa1e 	bl	801459c <HAL_PCDEx_SetTxFiFo>
 801f160:	2280      	movs	r2, #128	; 0x80
 801f162:	2101      	movs	r1, #1
 801f164:	4803      	ldr	r0, [pc, #12]	; (801f174 <USBD_LL_Init+0x94>)
 801f166:	f7f5 fa19 	bl	801459c <HAL_PCDEx_SetTxFiFo>
 801f16a:	2300      	movs	r3, #0
 801f16c:	4618      	mov	r0, r3
 801f16e:	3708      	adds	r7, #8
 801f170:	46bd      	mov	sp, r7
 801f172:	bd80      	pop	{r7, pc}
 801f174:	2000ee4c 	.word	0x2000ee4c

0801f178 <USBD_LL_Start>:
 801f178:	b580      	push	{r7, lr}
 801f17a:	b084      	sub	sp, #16
 801f17c:	af00      	add	r7, sp, #0
 801f17e:	6078      	str	r0, [r7, #4]
 801f180:	2300      	movs	r3, #0
 801f182:	73fb      	strb	r3, [r7, #15]
 801f184:	2300      	movs	r3, #0
 801f186:	73bb      	strb	r3, [r7, #14]
 801f188:	687b      	ldr	r3, [r7, #4]
 801f18a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f18e:	4618      	mov	r0, r3
 801f190:	f7f4 f908 	bl	80133a4 <HAL_PCD_Start>
 801f194:	4603      	mov	r3, r0
 801f196:	73fb      	strb	r3, [r7, #15]
 801f198:	7bfb      	ldrb	r3, [r7, #15]
 801f19a:	4618      	mov	r0, r3
 801f19c:	f000 f942 	bl	801f424 <USBD_Get_USB_Status>
 801f1a0:	4603      	mov	r3, r0
 801f1a2:	73bb      	strb	r3, [r7, #14]
 801f1a4:	7bbb      	ldrb	r3, [r7, #14]
 801f1a6:	4618      	mov	r0, r3
 801f1a8:	3710      	adds	r7, #16
 801f1aa:	46bd      	mov	sp, r7
 801f1ac:	bd80      	pop	{r7, pc}

0801f1ae <USBD_LL_OpenEP>:
 801f1ae:	b580      	push	{r7, lr}
 801f1b0:	b084      	sub	sp, #16
 801f1b2:	af00      	add	r7, sp, #0
 801f1b4:	6078      	str	r0, [r7, #4]
 801f1b6:	4608      	mov	r0, r1
 801f1b8:	4611      	mov	r1, r2
 801f1ba:	461a      	mov	r2, r3
 801f1bc:	4603      	mov	r3, r0
 801f1be:	70fb      	strb	r3, [r7, #3]
 801f1c0:	460b      	mov	r3, r1
 801f1c2:	70bb      	strb	r3, [r7, #2]
 801f1c4:	4613      	mov	r3, r2
 801f1c6:	803b      	strh	r3, [r7, #0]
 801f1c8:	2300      	movs	r3, #0
 801f1ca:	73fb      	strb	r3, [r7, #15]
 801f1cc:	2300      	movs	r3, #0
 801f1ce:	73bb      	strb	r3, [r7, #14]
 801f1d0:	687b      	ldr	r3, [r7, #4]
 801f1d2:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f1d6:	78bb      	ldrb	r3, [r7, #2]
 801f1d8:	883a      	ldrh	r2, [r7, #0]
 801f1da:	78f9      	ldrb	r1, [r7, #3]
 801f1dc:	f7f4 fdd9 	bl	8013d92 <HAL_PCD_EP_Open>
 801f1e0:	4603      	mov	r3, r0
 801f1e2:	73fb      	strb	r3, [r7, #15]
 801f1e4:	7bfb      	ldrb	r3, [r7, #15]
 801f1e6:	4618      	mov	r0, r3
 801f1e8:	f000 f91c 	bl	801f424 <USBD_Get_USB_Status>
 801f1ec:	4603      	mov	r3, r0
 801f1ee:	73bb      	strb	r3, [r7, #14]
 801f1f0:	7bbb      	ldrb	r3, [r7, #14]
 801f1f2:	4618      	mov	r0, r3
 801f1f4:	3710      	adds	r7, #16
 801f1f6:	46bd      	mov	sp, r7
 801f1f8:	bd80      	pop	{r7, pc}

0801f1fa <USBD_LL_CloseEP>:
 801f1fa:	b580      	push	{r7, lr}
 801f1fc:	b084      	sub	sp, #16
 801f1fe:	af00      	add	r7, sp, #0
 801f200:	6078      	str	r0, [r7, #4]
 801f202:	460b      	mov	r3, r1
 801f204:	70fb      	strb	r3, [r7, #3]
 801f206:	2300      	movs	r3, #0
 801f208:	73fb      	strb	r3, [r7, #15]
 801f20a:	2300      	movs	r3, #0
 801f20c:	73bb      	strb	r3, [r7, #14]
 801f20e:	687b      	ldr	r3, [r7, #4]
 801f210:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f214:	78fa      	ldrb	r2, [r7, #3]
 801f216:	4611      	mov	r1, r2
 801f218:	4618      	mov	r0, r3
 801f21a:	f7f4 fe22 	bl	8013e62 <HAL_PCD_EP_Close>
 801f21e:	4603      	mov	r3, r0
 801f220:	73fb      	strb	r3, [r7, #15]
 801f222:	7bfb      	ldrb	r3, [r7, #15]
 801f224:	4618      	mov	r0, r3
 801f226:	f000 f8fd 	bl	801f424 <USBD_Get_USB_Status>
 801f22a:	4603      	mov	r3, r0
 801f22c:	73bb      	strb	r3, [r7, #14]
 801f22e:	7bbb      	ldrb	r3, [r7, #14]
 801f230:	4618      	mov	r0, r3
 801f232:	3710      	adds	r7, #16
 801f234:	46bd      	mov	sp, r7
 801f236:	bd80      	pop	{r7, pc}

0801f238 <USBD_LL_StallEP>:
 801f238:	b580      	push	{r7, lr}
 801f23a:	b084      	sub	sp, #16
 801f23c:	af00      	add	r7, sp, #0
 801f23e:	6078      	str	r0, [r7, #4]
 801f240:	460b      	mov	r3, r1
 801f242:	70fb      	strb	r3, [r7, #3]
 801f244:	2300      	movs	r3, #0
 801f246:	73fb      	strb	r3, [r7, #15]
 801f248:	2300      	movs	r3, #0
 801f24a:	73bb      	strb	r3, [r7, #14]
 801f24c:	687b      	ldr	r3, [r7, #4]
 801f24e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f252:	78fa      	ldrb	r2, [r7, #3]
 801f254:	4611      	mov	r1, r2
 801f256:	4618      	mov	r0, r3
 801f258:	f7f4 fefa 	bl	8014050 <HAL_PCD_EP_SetStall>
 801f25c:	4603      	mov	r3, r0
 801f25e:	73fb      	strb	r3, [r7, #15]
 801f260:	7bfb      	ldrb	r3, [r7, #15]
 801f262:	4618      	mov	r0, r3
 801f264:	f000 f8de 	bl	801f424 <USBD_Get_USB_Status>
 801f268:	4603      	mov	r3, r0
 801f26a:	73bb      	strb	r3, [r7, #14]
 801f26c:	7bbb      	ldrb	r3, [r7, #14]
 801f26e:	4618      	mov	r0, r3
 801f270:	3710      	adds	r7, #16
 801f272:	46bd      	mov	sp, r7
 801f274:	bd80      	pop	{r7, pc}

0801f276 <USBD_LL_ClearStallEP>:
 801f276:	b580      	push	{r7, lr}
 801f278:	b084      	sub	sp, #16
 801f27a:	af00      	add	r7, sp, #0
 801f27c:	6078      	str	r0, [r7, #4]
 801f27e:	460b      	mov	r3, r1
 801f280:	70fb      	strb	r3, [r7, #3]
 801f282:	2300      	movs	r3, #0
 801f284:	73fb      	strb	r3, [r7, #15]
 801f286:	2300      	movs	r3, #0
 801f288:	73bb      	strb	r3, [r7, #14]
 801f28a:	687b      	ldr	r3, [r7, #4]
 801f28c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f290:	78fa      	ldrb	r2, [r7, #3]
 801f292:	4611      	mov	r1, r2
 801f294:	4618      	mov	r0, r3
 801f296:	f7f4 ff3f 	bl	8014118 <HAL_PCD_EP_ClrStall>
 801f29a:	4603      	mov	r3, r0
 801f29c:	73fb      	strb	r3, [r7, #15]
 801f29e:	7bfb      	ldrb	r3, [r7, #15]
 801f2a0:	4618      	mov	r0, r3
 801f2a2:	f000 f8bf 	bl	801f424 <USBD_Get_USB_Status>
 801f2a6:	4603      	mov	r3, r0
 801f2a8:	73bb      	strb	r3, [r7, #14]
 801f2aa:	7bbb      	ldrb	r3, [r7, #14]
 801f2ac:	4618      	mov	r0, r3
 801f2ae:	3710      	adds	r7, #16
 801f2b0:	46bd      	mov	sp, r7
 801f2b2:	bd80      	pop	{r7, pc}

0801f2b4 <USBD_LL_IsStallEP>:
 801f2b4:	b480      	push	{r7}
 801f2b6:	b085      	sub	sp, #20
 801f2b8:	af00      	add	r7, sp, #0
 801f2ba:	6078      	str	r0, [r7, #4]
 801f2bc:	460b      	mov	r3, r1
 801f2be:	70fb      	strb	r3, [r7, #3]
 801f2c0:	687b      	ldr	r3, [r7, #4]
 801f2c2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f2c6:	60fb      	str	r3, [r7, #12]
 801f2c8:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801f2cc:	2b00      	cmp	r3, #0
 801f2ce:	da0b      	bge.n	801f2e8 <USBD_LL_IsStallEP+0x34>
 801f2d0:	78fb      	ldrb	r3, [r7, #3]
 801f2d2:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801f2d6:	68f9      	ldr	r1, [r7, #12]
 801f2d8:	4613      	mov	r3, r2
 801f2da:	00db      	lsls	r3, r3, #3
 801f2dc:	4413      	add	r3, r2
 801f2de:	009b      	lsls	r3, r3, #2
 801f2e0:	440b      	add	r3, r1
 801f2e2:	333e      	adds	r3, #62	; 0x3e
 801f2e4:	781b      	ldrb	r3, [r3, #0]
 801f2e6:	e00b      	b.n	801f300 <USBD_LL_IsStallEP+0x4c>
 801f2e8:	78fb      	ldrb	r3, [r7, #3]
 801f2ea:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 801f2ee:	68f9      	ldr	r1, [r7, #12]
 801f2f0:	4613      	mov	r3, r2
 801f2f2:	00db      	lsls	r3, r3, #3
 801f2f4:	4413      	add	r3, r2
 801f2f6:	009b      	lsls	r3, r3, #2
 801f2f8:	440b      	add	r3, r1
 801f2fa:	f203 237e 	addw	r3, r3, #638	; 0x27e
 801f2fe:	781b      	ldrb	r3, [r3, #0]
 801f300:	4618      	mov	r0, r3
 801f302:	3714      	adds	r7, #20
 801f304:	46bd      	mov	sp, r7
 801f306:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f30a:	4770      	bx	lr

0801f30c <USBD_LL_SetUSBAddress>:
 801f30c:	b580      	push	{r7, lr}
 801f30e:	b084      	sub	sp, #16
 801f310:	af00      	add	r7, sp, #0
 801f312:	6078      	str	r0, [r7, #4]
 801f314:	460b      	mov	r3, r1
 801f316:	70fb      	strb	r3, [r7, #3]
 801f318:	2300      	movs	r3, #0
 801f31a:	73fb      	strb	r3, [r7, #15]
 801f31c:	2300      	movs	r3, #0
 801f31e:	73bb      	strb	r3, [r7, #14]
 801f320:	687b      	ldr	r3, [r7, #4]
 801f322:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f326:	78fa      	ldrb	r2, [r7, #3]
 801f328:	4611      	mov	r1, r2
 801f32a:	4618      	mov	r0, r3
 801f32c:	f7f4 fd0c 	bl	8013d48 <HAL_PCD_SetAddress>
 801f330:	4603      	mov	r3, r0
 801f332:	73fb      	strb	r3, [r7, #15]
 801f334:	7bfb      	ldrb	r3, [r7, #15]
 801f336:	4618      	mov	r0, r3
 801f338:	f000 f874 	bl	801f424 <USBD_Get_USB_Status>
 801f33c:	4603      	mov	r3, r0
 801f33e:	73bb      	strb	r3, [r7, #14]
 801f340:	7bbb      	ldrb	r3, [r7, #14]
 801f342:	4618      	mov	r0, r3
 801f344:	3710      	adds	r7, #16
 801f346:	46bd      	mov	sp, r7
 801f348:	bd80      	pop	{r7, pc}

0801f34a <USBD_LL_Transmit>:
 801f34a:	b580      	push	{r7, lr}
 801f34c:	b086      	sub	sp, #24
 801f34e:	af00      	add	r7, sp, #0
 801f350:	60f8      	str	r0, [r7, #12]
 801f352:	607a      	str	r2, [r7, #4]
 801f354:	603b      	str	r3, [r7, #0]
 801f356:	460b      	mov	r3, r1
 801f358:	72fb      	strb	r3, [r7, #11]
 801f35a:	2300      	movs	r3, #0
 801f35c:	75fb      	strb	r3, [r7, #23]
 801f35e:	2300      	movs	r3, #0
 801f360:	75bb      	strb	r3, [r7, #22]
 801f362:	68fb      	ldr	r3, [r7, #12]
 801f364:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f368:	7af9      	ldrb	r1, [r7, #11]
 801f36a:	683b      	ldr	r3, [r7, #0]
 801f36c:	687a      	ldr	r2, [r7, #4]
 801f36e:	f7f4 fe25 	bl	8013fbc <HAL_PCD_EP_Transmit>
 801f372:	4603      	mov	r3, r0
 801f374:	75fb      	strb	r3, [r7, #23]
 801f376:	7dfb      	ldrb	r3, [r7, #23]
 801f378:	4618      	mov	r0, r3
 801f37a:	f000 f853 	bl	801f424 <USBD_Get_USB_Status>
 801f37e:	4603      	mov	r3, r0
 801f380:	75bb      	strb	r3, [r7, #22]
 801f382:	7dbb      	ldrb	r3, [r7, #22]
 801f384:	4618      	mov	r0, r3
 801f386:	3718      	adds	r7, #24
 801f388:	46bd      	mov	sp, r7
 801f38a:	bd80      	pop	{r7, pc}

0801f38c <USBD_LL_PrepareReceive>:
 801f38c:	b580      	push	{r7, lr}
 801f38e:	b086      	sub	sp, #24
 801f390:	af00      	add	r7, sp, #0
 801f392:	60f8      	str	r0, [r7, #12]
 801f394:	607a      	str	r2, [r7, #4]
 801f396:	603b      	str	r3, [r7, #0]
 801f398:	460b      	mov	r3, r1
 801f39a:	72fb      	strb	r3, [r7, #11]
 801f39c:	2300      	movs	r3, #0
 801f39e:	75fb      	strb	r3, [r7, #23]
 801f3a0:	2300      	movs	r3, #0
 801f3a2:	75bb      	strb	r3, [r7, #22]
 801f3a4:	68fb      	ldr	r3, [r7, #12]
 801f3a6:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 801f3aa:	7af9      	ldrb	r1, [r7, #11]
 801f3ac:	683b      	ldr	r3, [r7, #0]
 801f3ae:	687a      	ldr	r2, [r7, #4]
 801f3b0:	f7f4 fda1 	bl	8013ef6 <HAL_PCD_EP_Receive>
 801f3b4:	4603      	mov	r3, r0
 801f3b6:	75fb      	strb	r3, [r7, #23]
 801f3b8:	7dfb      	ldrb	r3, [r7, #23]
 801f3ba:	4618      	mov	r0, r3
 801f3bc:	f000 f832 	bl	801f424 <USBD_Get_USB_Status>
 801f3c0:	4603      	mov	r3, r0
 801f3c2:	75bb      	strb	r3, [r7, #22]
 801f3c4:	7dbb      	ldrb	r3, [r7, #22]
 801f3c6:	4618      	mov	r0, r3
 801f3c8:	3718      	adds	r7, #24
 801f3ca:	46bd      	mov	sp, r7
 801f3cc:	bd80      	pop	{r7, pc}

0801f3ce <USBD_LL_GetRxDataSize>:
 801f3ce:	b580      	push	{r7, lr}
 801f3d0:	b082      	sub	sp, #8
 801f3d2:	af00      	add	r7, sp, #0
 801f3d4:	6078      	str	r0, [r7, #4]
 801f3d6:	460b      	mov	r3, r1
 801f3d8:	70fb      	strb	r3, [r7, #3]
 801f3da:	687b      	ldr	r3, [r7, #4]
 801f3dc:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 801f3e0:	78fa      	ldrb	r2, [r7, #3]
 801f3e2:	4611      	mov	r1, r2
 801f3e4:	4618      	mov	r0, r3
 801f3e6:	f7f4 fdd1 	bl	8013f8c <HAL_PCD_EP_GetRxCount>
 801f3ea:	4603      	mov	r3, r0
 801f3ec:	4618      	mov	r0, r3
 801f3ee:	3708      	adds	r7, #8
 801f3f0:	46bd      	mov	sp, r7
 801f3f2:	bd80      	pop	{r7, pc}

0801f3f4 <USBD_static_malloc>:
 801f3f4:	b480      	push	{r7}
 801f3f6:	b083      	sub	sp, #12
 801f3f8:	af00      	add	r7, sp, #0
 801f3fa:	6078      	str	r0, [r7, #4]
 801f3fc:	4b03      	ldr	r3, [pc, #12]	; (801f40c <USBD_static_malloc+0x18>)
 801f3fe:	4618      	mov	r0, r3
 801f400:	370c      	adds	r7, #12
 801f402:	46bd      	mov	sp, r7
 801f404:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f408:	4770      	bx	lr
 801f40a:	bf00      	nop
 801f40c:	2000f358 	.word	0x2000f358

0801f410 <USBD_static_free>:
 801f410:	b480      	push	{r7}
 801f412:	b083      	sub	sp, #12
 801f414:	af00      	add	r7, sp, #0
 801f416:	6078      	str	r0, [r7, #4]
 801f418:	bf00      	nop
 801f41a:	370c      	adds	r7, #12
 801f41c:	46bd      	mov	sp, r7
 801f41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f422:	4770      	bx	lr

0801f424 <USBD_Get_USB_Status>:
 801f424:	b480      	push	{r7}
 801f426:	b085      	sub	sp, #20
 801f428:	af00      	add	r7, sp, #0
 801f42a:	4603      	mov	r3, r0
 801f42c:	71fb      	strb	r3, [r7, #7]
 801f42e:	2300      	movs	r3, #0
 801f430:	73fb      	strb	r3, [r7, #15]
 801f432:	79fb      	ldrb	r3, [r7, #7]
 801f434:	2b03      	cmp	r3, #3
 801f436:	d817      	bhi.n	801f468 <USBD_Get_USB_Status+0x44>
 801f438:	a201      	add	r2, pc, #4	; (adr r2, 801f440 <USBD_Get_USB_Status+0x1c>)
 801f43a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801f43e:	bf00      	nop
 801f440:	0801f451 	.word	0x0801f451
 801f444:	0801f457 	.word	0x0801f457
 801f448:	0801f45d 	.word	0x0801f45d
 801f44c:	0801f463 	.word	0x0801f463
 801f450:	2300      	movs	r3, #0
 801f452:	73fb      	strb	r3, [r7, #15]
 801f454:	e00b      	b.n	801f46e <USBD_Get_USB_Status+0x4a>
 801f456:	2303      	movs	r3, #3
 801f458:	73fb      	strb	r3, [r7, #15]
 801f45a:	e008      	b.n	801f46e <USBD_Get_USB_Status+0x4a>
 801f45c:	2301      	movs	r3, #1
 801f45e:	73fb      	strb	r3, [r7, #15]
 801f460:	e005      	b.n	801f46e <USBD_Get_USB_Status+0x4a>
 801f462:	2303      	movs	r3, #3
 801f464:	73fb      	strb	r3, [r7, #15]
 801f466:	e002      	b.n	801f46e <USBD_Get_USB_Status+0x4a>
 801f468:	2303      	movs	r3, #3
 801f46a:	73fb      	strb	r3, [r7, #15]
 801f46c:	bf00      	nop
 801f46e:	7bfb      	ldrb	r3, [r7, #15]
 801f470:	4618      	mov	r0, r3
 801f472:	3714      	adds	r7, #20
 801f474:	46bd      	mov	sp, r7
 801f476:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f47a:	4770      	bx	lr

0801f47c <std>:
 801f47c:	2300      	movs	r3, #0
 801f47e:	b510      	push	{r4, lr}
 801f480:	4604      	mov	r4, r0
 801f482:	e9c0 3300 	strd	r3, r3, [r0]
 801f486:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801f48a:	6083      	str	r3, [r0, #8]
 801f48c:	8181      	strh	r1, [r0, #12]
 801f48e:	6643      	str	r3, [r0, #100]	; 0x64
 801f490:	81c2      	strh	r2, [r0, #14]
 801f492:	6183      	str	r3, [r0, #24]
 801f494:	4619      	mov	r1, r3
 801f496:	2208      	movs	r2, #8
 801f498:	305c      	adds	r0, #92	; 0x5c
 801f49a:	f000 f91a 	bl	801f6d2 <memset>
 801f49e:	4b05      	ldr	r3, [pc, #20]	; (801f4b4 <std+0x38>)
 801f4a0:	6263      	str	r3, [r4, #36]	; 0x24
 801f4a2:	4b05      	ldr	r3, [pc, #20]	; (801f4b8 <std+0x3c>)
 801f4a4:	62a3      	str	r3, [r4, #40]	; 0x28
 801f4a6:	4b05      	ldr	r3, [pc, #20]	; (801f4bc <std+0x40>)
 801f4a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 801f4aa:	4b05      	ldr	r3, [pc, #20]	; (801f4c0 <std+0x44>)
 801f4ac:	6224      	str	r4, [r4, #32]
 801f4ae:	6323      	str	r3, [r4, #48]	; 0x30
 801f4b0:	bd10      	pop	{r4, pc}
 801f4b2:	bf00      	nop
 801f4b4:	080206a9 	.word	0x080206a9
 801f4b8:	080206cb 	.word	0x080206cb
 801f4bc:	08020703 	.word	0x08020703
 801f4c0:	08020727 	.word	0x08020727

0801f4c4 <_cleanup_r>:
 801f4c4:	4901      	ldr	r1, [pc, #4]	; (801f4cc <_cleanup_r+0x8>)
 801f4c6:	f000 b8af 	b.w	801f628 <_fwalk_reent>
 801f4ca:	bf00      	nop
 801f4cc:	080222dd 	.word	0x080222dd

0801f4d0 <__sfmoreglue>:
 801f4d0:	b570      	push	{r4, r5, r6, lr}
 801f4d2:	2268      	movs	r2, #104	; 0x68
 801f4d4:	1e4d      	subs	r5, r1, #1
 801f4d6:	4355      	muls	r5, r2
 801f4d8:	460e      	mov	r6, r1
 801f4da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801f4de:	f000 f921 	bl	801f724 <_malloc_r>
 801f4e2:	4604      	mov	r4, r0
 801f4e4:	b140      	cbz	r0, 801f4f8 <__sfmoreglue+0x28>
 801f4e6:	2100      	movs	r1, #0
 801f4e8:	e9c0 1600 	strd	r1, r6, [r0]
 801f4ec:	300c      	adds	r0, #12
 801f4ee:	60a0      	str	r0, [r4, #8]
 801f4f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801f4f4:	f000 f8ed 	bl	801f6d2 <memset>
 801f4f8:	4620      	mov	r0, r4
 801f4fa:	bd70      	pop	{r4, r5, r6, pc}

0801f4fc <__sfp_lock_acquire>:
 801f4fc:	4801      	ldr	r0, [pc, #4]	; (801f504 <__sfp_lock_acquire+0x8>)
 801f4fe:	f000 b8d8 	b.w	801f6b2 <__retarget_lock_acquire_recursive>
 801f502:	bf00      	nop
 801f504:	2000f579 	.word	0x2000f579

0801f508 <__sfp_lock_release>:
 801f508:	4801      	ldr	r0, [pc, #4]	; (801f510 <__sfp_lock_release+0x8>)
 801f50a:	f000 b8d3 	b.w	801f6b4 <__retarget_lock_release_recursive>
 801f50e:	bf00      	nop
 801f510:	2000f579 	.word	0x2000f579

0801f514 <__sinit_lock_acquire>:
 801f514:	4801      	ldr	r0, [pc, #4]	; (801f51c <__sinit_lock_acquire+0x8>)
 801f516:	f000 b8cc 	b.w	801f6b2 <__retarget_lock_acquire_recursive>
 801f51a:	bf00      	nop
 801f51c:	2000f57a 	.word	0x2000f57a

0801f520 <__sinit_lock_release>:
 801f520:	4801      	ldr	r0, [pc, #4]	; (801f528 <__sinit_lock_release+0x8>)
 801f522:	f000 b8c7 	b.w	801f6b4 <__retarget_lock_release_recursive>
 801f526:	bf00      	nop
 801f528:	2000f57a 	.word	0x2000f57a

0801f52c <__sinit>:
 801f52c:	b510      	push	{r4, lr}
 801f52e:	4604      	mov	r4, r0
 801f530:	f7ff fff0 	bl	801f514 <__sinit_lock_acquire>
 801f534:	69a3      	ldr	r3, [r4, #24]
 801f536:	b11b      	cbz	r3, 801f540 <__sinit+0x14>
 801f538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f53c:	f7ff bff0 	b.w	801f520 <__sinit_lock_release>
 801f540:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801f544:	6523      	str	r3, [r4, #80]	; 0x50
 801f546:	4b13      	ldr	r3, [pc, #76]	; (801f594 <__sinit+0x68>)
 801f548:	4a13      	ldr	r2, [pc, #76]	; (801f598 <__sinit+0x6c>)
 801f54a:	681b      	ldr	r3, [r3, #0]
 801f54c:	62a2      	str	r2, [r4, #40]	; 0x28
 801f54e:	42a3      	cmp	r3, r4
 801f550:	bf04      	itt	eq
 801f552:	2301      	moveq	r3, #1
 801f554:	61a3      	streq	r3, [r4, #24]
 801f556:	4620      	mov	r0, r4
 801f558:	f000 f820 	bl	801f59c <__sfp>
 801f55c:	6060      	str	r0, [r4, #4]
 801f55e:	4620      	mov	r0, r4
 801f560:	f000 f81c 	bl	801f59c <__sfp>
 801f564:	60a0      	str	r0, [r4, #8]
 801f566:	4620      	mov	r0, r4
 801f568:	f000 f818 	bl	801f59c <__sfp>
 801f56c:	2200      	movs	r2, #0
 801f56e:	60e0      	str	r0, [r4, #12]
 801f570:	2104      	movs	r1, #4
 801f572:	6860      	ldr	r0, [r4, #4]
 801f574:	f7ff ff82 	bl	801f47c <std>
 801f578:	68a0      	ldr	r0, [r4, #8]
 801f57a:	2201      	movs	r2, #1
 801f57c:	2109      	movs	r1, #9
 801f57e:	f7ff ff7d 	bl	801f47c <std>
 801f582:	68e0      	ldr	r0, [r4, #12]
 801f584:	2202      	movs	r2, #2
 801f586:	2112      	movs	r1, #18
 801f588:	f7ff ff78 	bl	801f47c <std>
 801f58c:	2301      	movs	r3, #1
 801f58e:	61a3      	str	r3, [r4, #24]
 801f590:	e7d2      	b.n	801f538 <__sinit+0xc>
 801f592:	bf00      	nop
 801f594:	08027088 	.word	0x08027088
 801f598:	0801f4c5 	.word	0x0801f4c5

0801f59c <__sfp>:
 801f59c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f59e:	4607      	mov	r7, r0
 801f5a0:	f7ff ffac 	bl	801f4fc <__sfp_lock_acquire>
 801f5a4:	4b1e      	ldr	r3, [pc, #120]	; (801f620 <__sfp+0x84>)
 801f5a6:	681e      	ldr	r6, [r3, #0]
 801f5a8:	69b3      	ldr	r3, [r6, #24]
 801f5aa:	b913      	cbnz	r3, 801f5b2 <__sfp+0x16>
 801f5ac:	4630      	mov	r0, r6
 801f5ae:	f7ff ffbd 	bl	801f52c <__sinit>
 801f5b2:	3648      	adds	r6, #72	; 0x48
 801f5b4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801f5b8:	3b01      	subs	r3, #1
 801f5ba:	d503      	bpl.n	801f5c4 <__sfp+0x28>
 801f5bc:	6833      	ldr	r3, [r6, #0]
 801f5be:	b30b      	cbz	r3, 801f604 <__sfp+0x68>
 801f5c0:	6836      	ldr	r6, [r6, #0]
 801f5c2:	e7f7      	b.n	801f5b4 <__sfp+0x18>
 801f5c4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801f5c8:	b9d5      	cbnz	r5, 801f600 <__sfp+0x64>
 801f5ca:	4b16      	ldr	r3, [pc, #88]	; (801f624 <__sfp+0x88>)
 801f5cc:	60e3      	str	r3, [r4, #12]
 801f5ce:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801f5d2:	6665      	str	r5, [r4, #100]	; 0x64
 801f5d4:	f000 f86c 	bl	801f6b0 <__retarget_lock_init_recursive>
 801f5d8:	f7ff ff96 	bl	801f508 <__sfp_lock_release>
 801f5dc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801f5e0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801f5e4:	6025      	str	r5, [r4, #0]
 801f5e6:	61a5      	str	r5, [r4, #24]
 801f5e8:	2208      	movs	r2, #8
 801f5ea:	4629      	mov	r1, r5
 801f5ec:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801f5f0:	f000 f86f 	bl	801f6d2 <memset>
 801f5f4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801f5f8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801f5fc:	4620      	mov	r0, r4
 801f5fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f600:	3468      	adds	r4, #104	; 0x68
 801f602:	e7d9      	b.n	801f5b8 <__sfp+0x1c>
 801f604:	2104      	movs	r1, #4
 801f606:	4638      	mov	r0, r7
 801f608:	f7ff ff62 	bl	801f4d0 <__sfmoreglue>
 801f60c:	4604      	mov	r4, r0
 801f60e:	6030      	str	r0, [r6, #0]
 801f610:	2800      	cmp	r0, #0
 801f612:	d1d5      	bne.n	801f5c0 <__sfp+0x24>
 801f614:	f7ff ff78 	bl	801f508 <__sfp_lock_release>
 801f618:	230c      	movs	r3, #12
 801f61a:	603b      	str	r3, [r7, #0]
 801f61c:	e7ee      	b.n	801f5fc <__sfp+0x60>
 801f61e:	bf00      	nop
 801f620:	08027088 	.word	0x08027088
 801f624:	ffff0001 	.word	0xffff0001

0801f628 <_fwalk_reent>:
 801f628:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f62c:	4606      	mov	r6, r0
 801f62e:	4688      	mov	r8, r1
 801f630:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801f634:	2700      	movs	r7, #0
 801f636:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801f63a:	f1b9 0901 	subs.w	r9, r9, #1
 801f63e:	d505      	bpl.n	801f64c <_fwalk_reent+0x24>
 801f640:	6824      	ldr	r4, [r4, #0]
 801f642:	2c00      	cmp	r4, #0
 801f644:	d1f7      	bne.n	801f636 <_fwalk_reent+0xe>
 801f646:	4638      	mov	r0, r7
 801f648:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f64c:	89ab      	ldrh	r3, [r5, #12]
 801f64e:	2b01      	cmp	r3, #1
 801f650:	d907      	bls.n	801f662 <_fwalk_reent+0x3a>
 801f652:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801f656:	3301      	adds	r3, #1
 801f658:	d003      	beq.n	801f662 <_fwalk_reent+0x3a>
 801f65a:	4629      	mov	r1, r5
 801f65c:	4630      	mov	r0, r6
 801f65e:	47c0      	blx	r8
 801f660:	4307      	orrs	r7, r0
 801f662:	3568      	adds	r5, #104	; 0x68
 801f664:	e7e9      	b.n	801f63a <_fwalk_reent+0x12>
	...

0801f668 <__libc_init_array>:
 801f668:	b570      	push	{r4, r5, r6, lr}
 801f66a:	4d0d      	ldr	r5, [pc, #52]	; (801f6a0 <__libc_init_array+0x38>)
 801f66c:	4c0d      	ldr	r4, [pc, #52]	; (801f6a4 <__libc_init_array+0x3c>)
 801f66e:	1b64      	subs	r4, r4, r5
 801f670:	10a4      	asrs	r4, r4, #2
 801f672:	2600      	movs	r6, #0
 801f674:	42a6      	cmp	r6, r4
 801f676:	d109      	bne.n	801f68c <__libc_init_array+0x24>
 801f678:	4d0b      	ldr	r5, [pc, #44]	; (801f6a8 <__libc_init_array+0x40>)
 801f67a:	4c0c      	ldr	r4, [pc, #48]	; (801f6ac <__libc_init_array+0x44>)
 801f67c:	f007 f8c6 	bl	802680c <_init>
 801f680:	1b64      	subs	r4, r4, r5
 801f682:	10a4      	asrs	r4, r4, #2
 801f684:	2600      	movs	r6, #0
 801f686:	42a6      	cmp	r6, r4
 801f688:	d105      	bne.n	801f696 <__libc_init_array+0x2e>
 801f68a:	bd70      	pop	{r4, r5, r6, pc}
 801f68c:	f855 3b04 	ldr.w	r3, [r5], #4
 801f690:	4798      	blx	r3
 801f692:	3601      	adds	r6, #1
 801f694:	e7ee      	b.n	801f674 <__libc_init_array+0xc>
 801f696:	f855 3b04 	ldr.w	r3, [r5], #4
 801f69a:	4798      	blx	r3
 801f69c:	3601      	adds	r6, #1
 801f69e:	e7f2      	b.n	801f686 <__libc_init_array+0x1e>
 801f6a0:	08027750 	.word	0x08027750
 801f6a4:	08027750 	.word	0x08027750
 801f6a8:	08027750 	.word	0x08027750
 801f6ac:	08027754 	.word	0x08027754

0801f6b0 <__retarget_lock_init_recursive>:
 801f6b0:	4770      	bx	lr

0801f6b2 <__retarget_lock_acquire_recursive>:
 801f6b2:	4770      	bx	lr

0801f6b4 <__retarget_lock_release_recursive>:
 801f6b4:	4770      	bx	lr

0801f6b6 <memcpy>:
 801f6b6:	440a      	add	r2, r1
 801f6b8:	4291      	cmp	r1, r2
 801f6ba:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 801f6be:	d100      	bne.n	801f6c2 <memcpy+0xc>
 801f6c0:	4770      	bx	lr
 801f6c2:	b510      	push	{r4, lr}
 801f6c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f6c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f6cc:	4291      	cmp	r1, r2
 801f6ce:	d1f9      	bne.n	801f6c4 <memcpy+0xe>
 801f6d0:	bd10      	pop	{r4, pc}

0801f6d2 <memset>:
 801f6d2:	4402      	add	r2, r0
 801f6d4:	4603      	mov	r3, r0
 801f6d6:	4293      	cmp	r3, r2
 801f6d8:	d100      	bne.n	801f6dc <memset+0xa>
 801f6da:	4770      	bx	lr
 801f6dc:	f803 1b01 	strb.w	r1, [r3], #1
 801f6e0:	e7f9      	b.n	801f6d6 <memset+0x4>
	...

0801f6e4 <sbrk_aligned>:
 801f6e4:	b570      	push	{r4, r5, r6, lr}
 801f6e6:	4e0e      	ldr	r6, [pc, #56]	; (801f720 <sbrk_aligned+0x3c>)
 801f6e8:	460c      	mov	r4, r1
 801f6ea:	6831      	ldr	r1, [r6, #0]
 801f6ec:	4605      	mov	r5, r0
 801f6ee:	b911      	cbnz	r1, 801f6f6 <sbrk_aligned+0x12>
 801f6f0:	f000 ff70 	bl	80205d4 <_sbrk_r>
 801f6f4:	6030      	str	r0, [r6, #0]
 801f6f6:	4621      	mov	r1, r4
 801f6f8:	4628      	mov	r0, r5
 801f6fa:	f000 ff6b 	bl	80205d4 <_sbrk_r>
 801f6fe:	1c43      	adds	r3, r0, #1
 801f700:	d00a      	beq.n	801f718 <sbrk_aligned+0x34>
 801f702:	1cc4      	adds	r4, r0, #3
 801f704:	f024 0403 	bic.w	r4, r4, #3
 801f708:	42a0      	cmp	r0, r4
 801f70a:	d007      	beq.n	801f71c <sbrk_aligned+0x38>
 801f70c:	1a21      	subs	r1, r4, r0
 801f70e:	4628      	mov	r0, r5
 801f710:	f000 ff60 	bl	80205d4 <_sbrk_r>
 801f714:	3001      	adds	r0, #1
 801f716:	d101      	bne.n	801f71c <sbrk_aligned+0x38>
 801f718:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801f71c:	4620      	mov	r0, r4
 801f71e:	bd70      	pop	{r4, r5, r6, pc}
 801f720:	2000f580 	.word	0x2000f580

0801f724 <_malloc_r>:
 801f724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f728:	1ccd      	adds	r5, r1, #3
 801f72a:	f025 0503 	bic.w	r5, r5, #3
 801f72e:	3508      	adds	r5, #8
 801f730:	2d0c      	cmp	r5, #12
 801f732:	bf38      	it	cc
 801f734:	250c      	movcc	r5, #12
 801f736:	2d00      	cmp	r5, #0
 801f738:	4607      	mov	r7, r0
 801f73a:	db01      	blt.n	801f740 <_malloc_r+0x1c>
 801f73c:	42a9      	cmp	r1, r5
 801f73e:	d905      	bls.n	801f74c <_malloc_r+0x28>
 801f740:	230c      	movs	r3, #12
 801f742:	603b      	str	r3, [r7, #0]
 801f744:	2600      	movs	r6, #0
 801f746:	4630      	mov	r0, r6
 801f748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f74c:	4e2e      	ldr	r6, [pc, #184]	; (801f808 <_malloc_r+0xe4>)
 801f74e:	f003 f9a1 	bl	8022a94 <__malloc_lock>
 801f752:	6833      	ldr	r3, [r6, #0]
 801f754:	461c      	mov	r4, r3
 801f756:	bb34      	cbnz	r4, 801f7a6 <_malloc_r+0x82>
 801f758:	4629      	mov	r1, r5
 801f75a:	4638      	mov	r0, r7
 801f75c:	f7ff ffc2 	bl	801f6e4 <sbrk_aligned>
 801f760:	1c43      	adds	r3, r0, #1
 801f762:	4604      	mov	r4, r0
 801f764:	d14d      	bne.n	801f802 <_malloc_r+0xde>
 801f766:	6834      	ldr	r4, [r6, #0]
 801f768:	4626      	mov	r6, r4
 801f76a:	2e00      	cmp	r6, #0
 801f76c:	d140      	bne.n	801f7f0 <_malloc_r+0xcc>
 801f76e:	6823      	ldr	r3, [r4, #0]
 801f770:	4631      	mov	r1, r6
 801f772:	4638      	mov	r0, r7
 801f774:	eb04 0803 	add.w	r8, r4, r3
 801f778:	f000 ff2c 	bl	80205d4 <_sbrk_r>
 801f77c:	4580      	cmp	r8, r0
 801f77e:	d13a      	bne.n	801f7f6 <_malloc_r+0xd2>
 801f780:	6821      	ldr	r1, [r4, #0]
 801f782:	3503      	adds	r5, #3
 801f784:	1a6d      	subs	r5, r5, r1
 801f786:	f025 0503 	bic.w	r5, r5, #3
 801f78a:	3508      	adds	r5, #8
 801f78c:	2d0c      	cmp	r5, #12
 801f78e:	bf38      	it	cc
 801f790:	250c      	movcc	r5, #12
 801f792:	4629      	mov	r1, r5
 801f794:	4638      	mov	r0, r7
 801f796:	f7ff ffa5 	bl	801f6e4 <sbrk_aligned>
 801f79a:	3001      	adds	r0, #1
 801f79c:	d02b      	beq.n	801f7f6 <_malloc_r+0xd2>
 801f79e:	6823      	ldr	r3, [r4, #0]
 801f7a0:	442b      	add	r3, r5
 801f7a2:	6023      	str	r3, [r4, #0]
 801f7a4:	e00e      	b.n	801f7c4 <_malloc_r+0xa0>
 801f7a6:	6822      	ldr	r2, [r4, #0]
 801f7a8:	1b52      	subs	r2, r2, r5
 801f7aa:	d41e      	bmi.n	801f7ea <_malloc_r+0xc6>
 801f7ac:	2a0b      	cmp	r2, #11
 801f7ae:	d916      	bls.n	801f7de <_malloc_r+0xba>
 801f7b0:	1961      	adds	r1, r4, r5
 801f7b2:	42a3      	cmp	r3, r4
 801f7b4:	6025      	str	r5, [r4, #0]
 801f7b6:	bf18      	it	ne
 801f7b8:	6059      	strne	r1, [r3, #4]
 801f7ba:	6863      	ldr	r3, [r4, #4]
 801f7bc:	bf08      	it	eq
 801f7be:	6031      	streq	r1, [r6, #0]
 801f7c0:	5162      	str	r2, [r4, r5]
 801f7c2:	604b      	str	r3, [r1, #4]
 801f7c4:	4638      	mov	r0, r7
 801f7c6:	f104 060b 	add.w	r6, r4, #11
 801f7ca:	f003 f969 	bl	8022aa0 <__malloc_unlock>
 801f7ce:	f026 0607 	bic.w	r6, r6, #7
 801f7d2:	1d23      	adds	r3, r4, #4
 801f7d4:	1af2      	subs	r2, r6, r3
 801f7d6:	d0b6      	beq.n	801f746 <_malloc_r+0x22>
 801f7d8:	1b9b      	subs	r3, r3, r6
 801f7da:	50a3      	str	r3, [r4, r2]
 801f7dc:	e7b3      	b.n	801f746 <_malloc_r+0x22>
 801f7de:	6862      	ldr	r2, [r4, #4]
 801f7e0:	42a3      	cmp	r3, r4
 801f7e2:	bf0c      	ite	eq
 801f7e4:	6032      	streq	r2, [r6, #0]
 801f7e6:	605a      	strne	r2, [r3, #4]
 801f7e8:	e7ec      	b.n	801f7c4 <_malloc_r+0xa0>
 801f7ea:	4623      	mov	r3, r4
 801f7ec:	6864      	ldr	r4, [r4, #4]
 801f7ee:	e7b2      	b.n	801f756 <_malloc_r+0x32>
 801f7f0:	4634      	mov	r4, r6
 801f7f2:	6876      	ldr	r6, [r6, #4]
 801f7f4:	e7b9      	b.n	801f76a <_malloc_r+0x46>
 801f7f6:	230c      	movs	r3, #12
 801f7f8:	603b      	str	r3, [r7, #0]
 801f7fa:	4638      	mov	r0, r7
 801f7fc:	f003 f950 	bl	8022aa0 <__malloc_unlock>
 801f800:	e7a1      	b.n	801f746 <_malloc_r+0x22>
 801f802:	6025      	str	r5, [r4, #0]
 801f804:	e7de      	b.n	801f7c4 <_malloc_r+0xa0>
 801f806:	bf00      	nop
 801f808:	2000f57c 	.word	0x2000f57c

0801f80c <__cvt>:
 801f80c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f810:	ec55 4b10 	vmov	r4, r5, d0
 801f814:	2d00      	cmp	r5, #0
 801f816:	460e      	mov	r6, r1
 801f818:	4619      	mov	r1, r3
 801f81a:	462b      	mov	r3, r5
 801f81c:	bfbb      	ittet	lt
 801f81e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801f822:	461d      	movlt	r5, r3
 801f824:	2300      	movge	r3, #0
 801f826:	232d      	movlt	r3, #45	; 0x2d
 801f828:	700b      	strb	r3, [r1, #0]
 801f82a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f82c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801f830:	4691      	mov	r9, r2
 801f832:	f023 0820 	bic.w	r8, r3, #32
 801f836:	bfbc      	itt	lt
 801f838:	4622      	movlt	r2, r4
 801f83a:	4614      	movlt	r4, r2
 801f83c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801f840:	d005      	beq.n	801f84e <__cvt+0x42>
 801f842:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801f846:	d100      	bne.n	801f84a <__cvt+0x3e>
 801f848:	3601      	adds	r6, #1
 801f84a:	2102      	movs	r1, #2
 801f84c:	e000      	b.n	801f850 <__cvt+0x44>
 801f84e:	2103      	movs	r1, #3
 801f850:	ab03      	add	r3, sp, #12
 801f852:	9301      	str	r3, [sp, #4]
 801f854:	ab02      	add	r3, sp, #8
 801f856:	9300      	str	r3, [sp, #0]
 801f858:	ec45 4b10 	vmov	d0, r4, r5
 801f85c:	4653      	mov	r3, sl
 801f85e:	4632      	mov	r2, r6
 801f860:	f001 fec2 	bl	80215e8 <_dtoa_r>
 801f864:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 801f868:	4607      	mov	r7, r0
 801f86a:	d102      	bne.n	801f872 <__cvt+0x66>
 801f86c:	f019 0f01 	tst.w	r9, #1
 801f870:	d022      	beq.n	801f8b8 <__cvt+0xac>
 801f872:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801f876:	eb07 0906 	add.w	r9, r7, r6
 801f87a:	d110      	bne.n	801f89e <__cvt+0x92>
 801f87c:	783b      	ldrb	r3, [r7, #0]
 801f87e:	2b30      	cmp	r3, #48	; 0x30
 801f880:	d10a      	bne.n	801f898 <__cvt+0x8c>
 801f882:	2200      	movs	r2, #0
 801f884:	2300      	movs	r3, #0
 801f886:	4620      	mov	r0, r4
 801f888:	4629      	mov	r1, r5
 801f88a:	f7e1 f91d 	bl	8000ac8 <__aeabi_dcmpeq>
 801f88e:	b918      	cbnz	r0, 801f898 <__cvt+0x8c>
 801f890:	f1c6 0601 	rsb	r6, r6, #1
 801f894:	f8ca 6000 	str.w	r6, [sl]
 801f898:	f8da 3000 	ldr.w	r3, [sl]
 801f89c:	4499      	add	r9, r3
 801f89e:	2200      	movs	r2, #0
 801f8a0:	2300      	movs	r3, #0
 801f8a2:	4620      	mov	r0, r4
 801f8a4:	4629      	mov	r1, r5
 801f8a6:	f7e1 f90f 	bl	8000ac8 <__aeabi_dcmpeq>
 801f8aa:	b108      	cbz	r0, 801f8b0 <__cvt+0xa4>
 801f8ac:	f8cd 900c 	str.w	r9, [sp, #12]
 801f8b0:	2230      	movs	r2, #48	; 0x30
 801f8b2:	9b03      	ldr	r3, [sp, #12]
 801f8b4:	454b      	cmp	r3, r9
 801f8b6:	d307      	bcc.n	801f8c8 <__cvt+0xbc>
 801f8b8:	9b03      	ldr	r3, [sp, #12]
 801f8ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f8bc:	1bdb      	subs	r3, r3, r7
 801f8be:	4638      	mov	r0, r7
 801f8c0:	6013      	str	r3, [r2, #0]
 801f8c2:	b004      	add	sp, #16
 801f8c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f8c8:	1c59      	adds	r1, r3, #1
 801f8ca:	9103      	str	r1, [sp, #12]
 801f8cc:	701a      	strb	r2, [r3, #0]
 801f8ce:	e7f0      	b.n	801f8b2 <__cvt+0xa6>

0801f8d0 <__exponent>:
 801f8d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f8d2:	4603      	mov	r3, r0
 801f8d4:	2900      	cmp	r1, #0
 801f8d6:	bfb8      	it	lt
 801f8d8:	4249      	neglt	r1, r1
 801f8da:	f803 2b02 	strb.w	r2, [r3], #2
 801f8de:	bfb4      	ite	lt
 801f8e0:	222d      	movlt	r2, #45	; 0x2d
 801f8e2:	222b      	movge	r2, #43	; 0x2b
 801f8e4:	2909      	cmp	r1, #9
 801f8e6:	7042      	strb	r2, [r0, #1]
 801f8e8:	dd2a      	ble.n	801f940 <__exponent+0x70>
 801f8ea:	f10d 0407 	add.w	r4, sp, #7
 801f8ee:	46a4      	mov	ip, r4
 801f8f0:	270a      	movs	r7, #10
 801f8f2:	46a6      	mov	lr, r4
 801f8f4:	460a      	mov	r2, r1
 801f8f6:	fb91 f6f7 	sdiv	r6, r1, r7
 801f8fa:	fb07 1516 	mls	r5, r7, r6, r1
 801f8fe:	3530      	adds	r5, #48	; 0x30
 801f900:	2a63      	cmp	r2, #99	; 0x63
 801f902:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 801f906:	f80e 5c01 	strb.w	r5, [lr, #-1]
 801f90a:	4631      	mov	r1, r6
 801f90c:	dcf1      	bgt.n	801f8f2 <__exponent+0x22>
 801f90e:	3130      	adds	r1, #48	; 0x30
 801f910:	f1ae 0502 	sub.w	r5, lr, #2
 801f914:	f804 1c01 	strb.w	r1, [r4, #-1]
 801f918:	1c44      	adds	r4, r0, #1
 801f91a:	4629      	mov	r1, r5
 801f91c:	4561      	cmp	r1, ip
 801f91e:	d30a      	bcc.n	801f936 <__exponent+0x66>
 801f920:	f10d 0209 	add.w	r2, sp, #9
 801f924:	eba2 020e 	sub.w	r2, r2, lr
 801f928:	4565      	cmp	r5, ip
 801f92a:	bf88      	it	hi
 801f92c:	2200      	movhi	r2, #0
 801f92e:	4413      	add	r3, r2
 801f930:	1a18      	subs	r0, r3, r0
 801f932:	b003      	add	sp, #12
 801f934:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f936:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f93a:	f804 2f01 	strb.w	r2, [r4, #1]!
 801f93e:	e7ed      	b.n	801f91c <__exponent+0x4c>
 801f940:	2330      	movs	r3, #48	; 0x30
 801f942:	3130      	adds	r1, #48	; 0x30
 801f944:	7083      	strb	r3, [r0, #2]
 801f946:	70c1      	strb	r1, [r0, #3]
 801f948:	1d03      	adds	r3, r0, #4
 801f94a:	e7f1      	b.n	801f930 <__exponent+0x60>

0801f94c <_printf_float>:
 801f94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f950:	ed2d 8b02 	vpush	{d8}
 801f954:	b08d      	sub	sp, #52	; 0x34
 801f956:	460c      	mov	r4, r1
 801f958:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801f95c:	4616      	mov	r6, r2
 801f95e:	461f      	mov	r7, r3
 801f960:	4605      	mov	r5, r0
 801f962:	f003 f867 	bl	8022a34 <_localeconv_r>
 801f966:	f8d0 a000 	ldr.w	sl, [r0]
 801f96a:	4650      	mov	r0, sl
 801f96c:	f7e0 fc30 	bl	80001d0 <strlen>
 801f970:	2300      	movs	r3, #0
 801f972:	930a      	str	r3, [sp, #40]	; 0x28
 801f974:	6823      	ldr	r3, [r4, #0]
 801f976:	9305      	str	r3, [sp, #20]
 801f978:	f8d8 3000 	ldr.w	r3, [r8]
 801f97c:	f894 b018 	ldrb.w	fp, [r4, #24]
 801f980:	3307      	adds	r3, #7
 801f982:	f023 0307 	bic.w	r3, r3, #7
 801f986:	f103 0208 	add.w	r2, r3, #8
 801f98a:	f8c8 2000 	str.w	r2, [r8]
 801f98e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f992:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 801f996:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 801f99a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801f99e:	9307      	str	r3, [sp, #28]
 801f9a0:	f8cd 8018 	str.w	r8, [sp, #24]
 801f9a4:	ee08 0a10 	vmov	s16, r0
 801f9a8:	4b9f      	ldr	r3, [pc, #636]	; (801fc28 <_printf_float+0x2dc>)
 801f9aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f9ae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f9b2:	f7e1 f8bb 	bl	8000b2c <__aeabi_dcmpun>
 801f9b6:	bb88      	cbnz	r0, 801fa1c <_printf_float+0xd0>
 801f9b8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f9bc:	4b9a      	ldr	r3, [pc, #616]	; (801fc28 <_printf_float+0x2dc>)
 801f9be:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f9c2:	f7e1 f895 	bl	8000af0 <__aeabi_dcmple>
 801f9c6:	bb48      	cbnz	r0, 801fa1c <_printf_float+0xd0>
 801f9c8:	2200      	movs	r2, #0
 801f9ca:	2300      	movs	r3, #0
 801f9cc:	4640      	mov	r0, r8
 801f9ce:	4649      	mov	r1, r9
 801f9d0:	f7e1 f884 	bl	8000adc <__aeabi_dcmplt>
 801f9d4:	b110      	cbz	r0, 801f9dc <_printf_float+0x90>
 801f9d6:	232d      	movs	r3, #45	; 0x2d
 801f9d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801f9dc:	4b93      	ldr	r3, [pc, #588]	; (801fc2c <_printf_float+0x2e0>)
 801f9de:	4894      	ldr	r0, [pc, #592]	; (801fc30 <_printf_float+0x2e4>)
 801f9e0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801f9e4:	bf94      	ite	ls
 801f9e6:	4698      	movls	r8, r3
 801f9e8:	4680      	movhi	r8, r0
 801f9ea:	2303      	movs	r3, #3
 801f9ec:	6123      	str	r3, [r4, #16]
 801f9ee:	9b05      	ldr	r3, [sp, #20]
 801f9f0:	f023 0204 	bic.w	r2, r3, #4
 801f9f4:	6022      	str	r2, [r4, #0]
 801f9f6:	f04f 0900 	mov.w	r9, #0
 801f9fa:	9700      	str	r7, [sp, #0]
 801f9fc:	4633      	mov	r3, r6
 801f9fe:	aa0b      	add	r2, sp, #44	; 0x2c
 801fa00:	4621      	mov	r1, r4
 801fa02:	4628      	mov	r0, r5
 801fa04:	f000 f9d8 	bl	801fdb8 <_printf_common>
 801fa08:	3001      	adds	r0, #1
 801fa0a:	f040 8090 	bne.w	801fb2e <_printf_float+0x1e2>
 801fa0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fa12:	b00d      	add	sp, #52	; 0x34
 801fa14:	ecbd 8b02 	vpop	{d8}
 801fa18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa1c:	4642      	mov	r2, r8
 801fa1e:	464b      	mov	r3, r9
 801fa20:	4640      	mov	r0, r8
 801fa22:	4649      	mov	r1, r9
 801fa24:	f7e1 f882 	bl	8000b2c <__aeabi_dcmpun>
 801fa28:	b140      	cbz	r0, 801fa3c <_printf_float+0xf0>
 801fa2a:	464b      	mov	r3, r9
 801fa2c:	2b00      	cmp	r3, #0
 801fa2e:	bfbc      	itt	lt
 801fa30:	232d      	movlt	r3, #45	; 0x2d
 801fa32:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801fa36:	487f      	ldr	r0, [pc, #508]	; (801fc34 <_printf_float+0x2e8>)
 801fa38:	4b7f      	ldr	r3, [pc, #508]	; (801fc38 <_printf_float+0x2ec>)
 801fa3a:	e7d1      	b.n	801f9e0 <_printf_float+0x94>
 801fa3c:	6863      	ldr	r3, [r4, #4]
 801fa3e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 801fa42:	9206      	str	r2, [sp, #24]
 801fa44:	1c5a      	adds	r2, r3, #1
 801fa46:	d13f      	bne.n	801fac8 <_printf_float+0x17c>
 801fa48:	2306      	movs	r3, #6
 801fa4a:	6063      	str	r3, [r4, #4]
 801fa4c:	9b05      	ldr	r3, [sp, #20]
 801fa4e:	6861      	ldr	r1, [r4, #4]
 801fa50:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 801fa54:	2300      	movs	r3, #0
 801fa56:	9303      	str	r3, [sp, #12]
 801fa58:	ab0a      	add	r3, sp, #40	; 0x28
 801fa5a:	e9cd b301 	strd	fp, r3, [sp, #4]
 801fa5e:	ab09      	add	r3, sp, #36	; 0x24
 801fa60:	ec49 8b10 	vmov	d0, r8, r9
 801fa64:	9300      	str	r3, [sp, #0]
 801fa66:	6022      	str	r2, [r4, #0]
 801fa68:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 801fa6c:	4628      	mov	r0, r5
 801fa6e:	f7ff fecd 	bl	801f80c <__cvt>
 801fa72:	9b06      	ldr	r3, [sp, #24]
 801fa74:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa76:	2b47      	cmp	r3, #71	; 0x47
 801fa78:	4680      	mov	r8, r0
 801fa7a:	d108      	bne.n	801fa8e <_printf_float+0x142>
 801fa7c:	1cc8      	adds	r0, r1, #3
 801fa7e:	db02      	blt.n	801fa86 <_printf_float+0x13a>
 801fa80:	6863      	ldr	r3, [r4, #4]
 801fa82:	4299      	cmp	r1, r3
 801fa84:	dd41      	ble.n	801fb0a <_printf_float+0x1be>
 801fa86:	f1ab 0b02 	sub.w	fp, fp, #2
 801fa8a:	fa5f fb8b 	uxtb.w	fp, fp
 801fa8e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801fa92:	d820      	bhi.n	801fad6 <_printf_float+0x18a>
 801fa94:	3901      	subs	r1, #1
 801fa96:	465a      	mov	r2, fp
 801fa98:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801fa9c:	9109      	str	r1, [sp, #36]	; 0x24
 801fa9e:	f7ff ff17 	bl	801f8d0 <__exponent>
 801faa2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801faa4:	1813      	adds	r3, r2, r0
 801faa6:	2a01      	cmp	r2, #1
 801faa8:	4681      	mov	r9, r0
 801faaa:	6123      	str	r3, [r4, #16]
 801faac:	dc02      	bgt.n	801fab4 <_printf_float+0x168>
 801faae:	6822      	ldr	r2, [r4, #0]
 801fab0:	07d2      	lsls	r2, r2, #31
 801fab2:	d501      	bpl.n	801fab8 <_printf_float+0x16c>
 801fab4:	3301      	adds	r3, #1
 801fab6:	6123      	str	r3, [r4, #16]
 801fab8:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801fabc:	2b00      	cmp	r3, #0
 801fabe:	d09c      	beq.n	801f9fa <_printf_float+0xae>
 801fac0:	232d      	movs	r3, #45	; 0x2d
 801fac2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fac6:	e798      	b.n	801f9fa <_printf_float+0xae>
 801fac8:	9a06      	ldr	r2, [sp, #24]
 801faca:	2a47      	cmp	r2, #71	; 0x47
 801facc:	d1be      	bne.n	801fa4c <_printf_float+0x100>
 801face:	2b00      	cmp	r3, #0
 801fad0:	d1bc      	bne.n	801fa4c <_printf_float+0x100>
 801fad2:	2301      	movs	r3, #1
 801fad4:	e7b9      	b.n	801fa4a <_printf_float+0xfe>
 801fad6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 801fada:	d118      	bne.n	801fb0e <_printf_float+0x1c2>
 801fadc:	2900      	cmp	r1, #0
 801fade:	6863      	ldr	r3, [r4, #4]
 801fae0:	dd0b      	ble.n	801fafa <_printf_float+0x1ae>
 801fae2:	6121      	str	r1, [r4, #16]
 801fae4:	b913      	cbnz	r3, 801faec <_printf_float+0x1a0>
 801fae6:	6822      	ldr	r2, [r4, #0]
 801fae8:	07d0      	lsls	r0, r2, #31
 801faea:	d502      	bpl.n	801faf2 <_printf_float+0x1a6>
 801faec:	3301      	adds	r3, #1
 801faee:	440b      	add	r3, r1
 801faf0:	6123      	str	r3, [r4, #16]
 801faf2:	65a1      	str	r1, [r4, #88]	; 0x58
 801faf4:	f04f 0900 	mov.w	r9, #0
 801faf8:	e7de      	b.n	801fab8 <_printf_float+0x16c>
 801fafa:	b913      	cbnz	r3, 801fb02 <_printf_float+0x1b6>
 801fafc:	6822      	ldr	r2, [r4, #0]
 801fafe:	07d2      	lsls	r2, r2, #31
 801fb00:	d501      	bpl.n	801fb06 <_printf_float+0x1ba>
 801fb02:	3302      	adds	r3, #2
 801fb04:	e7f4      	b.n	801faf0 <_printf_float+0x1a4>
 801fb06:	2301      	movs	r3, #1
 801fb08:	e7f2      	b.n	801faf0 <_printf_float+0x1a4>
 801fb0a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 801fb0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb10:	4299      	cmp	r1, r3
 801fb12:	db05      	blt.n	801fb20 <_printf_float+0x1d4>
 801fb14:	6823      	ldr	r3, [r4, #0]
 801fb16:	6121      	str	r1, [r4, #16]
 801fb18:	07d8      	lsls	r0, r3, #31
 801fb1a:	d5ea      	bpl.n	801faf2 <_printf_float+0x1a6>
 801fb1c:	1c4b      	adds	r3, r1, #1
 801fb1e:	e7e7      	b.n	801faf0 <_printf_float+0x1a4>
 801fb20:	2900      	cmp	r1, #0
 801fb22:	bfd4      	ite	le
 801fb24:	f1c1 0202 	rsble	r2, r1, #2
 801fb28:	2201      	movgt	r2, #1
 801fb2a:	4413      	add	r3, r2
 801fb2c:	e7e0      	b.n	801faf0 <_printf_float+0x1a4>
 801fb2e:	6823      	ldr	r3, [r4, #0]
 801fb30:	055a      	lsls	r2, r3, #21
 801fb32:	d407      	bmi.n	801fb44 <_printf_float+0x1f8>
 801fb34:	6923      	ldr	r3, [r4, #16]
 801fb36:	4642      	mov	r2, r8
 801fb38:	4631      	mov	r1, r6
 801fb3a:	4628      	mov	r0, r5
 801fb3c:	47b8      	blx	r7
 801fb3e:	3001      	adds	r0, #1
 801fb40:	d12c      	bne.n	801fb9c <_printf_float+0x250>
 801fb42:	e764      	b.n	801fa0e <_printf_float+0xc2>
 801fb44:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801fb48:	f240 80e0 	bls.w	801fd0c <_printf_float+0x3c0>
 801fb4c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801fb50:	2200      	movs	r2, #0
 801fb52:	2300      	movs	r3, #0
 801fb54:	f7e0 ffb8 	bl	8000ac8 <__aeabi_dcmpeq>
 801fb58:	2800      	cmp	r0, #0
 801fb5a:	d034      	beq.n	801fbc6 <_printf_float+0x27a>
 801fb5c:	4a37      	ldr	r2, [pc, #220]	; (801fc3c <_printf_float+0x2f0>)
 801fb5e:	2301      	movs	r3, #1
 801fb60:	4631      	mov	r1, r6
 801fb62:	4628      	mov	r0, r5
 801fb64:	47b8      	blx	r7
 801fb66:	3001      	adds	r0, #1
 801fb68:	f43f af51 	beq.w	801fa0e <_printf_float+0xc2>
 801fb6c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fb70:	429a      	cmp	r2, r3
 801fb72:	db02      	blt.n	801fb7a <_printf_float+0x22e>
 801fb74:	6823      	ldr	r3, [r4, #0]
 801fb76:	07d8      	lsls	r0, r3, #31
 801fb78:	d510      	bpl.n	801fb9c <_printf_float+0x250>
 801fb7a:	ee18 3a10 	vmov	r3, s16
 801fb7e:	4652      	mov	r2, sl
 801fb80:	4631      	mov	r1, r6
 801fb82:	4628      	mov	r0, r5
 801fb84:	47b8      	blx	r7
 801fb86:	3001      	adds	r0, #1
 801fb88:	f43f af41 	beq.w	801fa0e <_printf_float+0xc2>
 801fb8c:	f04f 0800 	mov.w	r8, #0
 801fb90:	f104 091a 	add.w	r9, r4, #26
 801fb94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb96:	3b01      	subs	r3, #1
 801fb98:	4543      	cmp	r3, r8
 801fb9a:	dc09      	bgt.n	801fbb0 <_printf_float+0x264>
 801fb9c:	6823      	ldr	r3, [r4, #0]
 801fb9e:	079b      	lsls	r3, r3, #30
 801fba0:	f100 8105 	bmi.w	801fdae <_printf_float+0x462>
 801fba4:	68e0      	ldr	r0, [r4, #12]
 801fba6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fba8:	4298      	cmp	r0, r3
 801fbaa:	bfb8      	it	lt
 801fbac:	4618      	movlt	r0, r3
 801fbae:	e730      	b.n	801fa12 <_printf_float+0xc6>
 801fbb0:	2301      	movs	r3, #1
 801fbb2:	464a      	mov	r2, r9
 801fbb4:	4631      	mov	r1, r6
 801fbb6:	4628      	mov	r0, r5
 801fbb8:	47b8      	blx	r7
 801fbba:	3001      	adds	r0, #1
 801fbbc:	f43f af27 	beq.w	801fa0e <_printf_float+0xc2>
 801fbc0:	f108 0801 	add.w	r8, r8, #1
 801fbc4:	e7e6      	b.n	801fb94 <_printf_float+0x248>
 801fbc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbc8:	2b00      	cmp	r3, #0
 801fbca:	dc39      	bgt.n	801fc40 <_printf_float+0x2f4>
 801fbcc:	4a1b      	ldr	r2, [pc, #108]	; (801fc3c <_printf_float+0x2f0>)
 801fbce:	2301      	movs	r3, #1
 801fbd0:	4631      	mov	r1, r6
 801fbd2:	4628      	mov	r0, r5
 801fbd4:	47b8      	blx	r7
 801fbd6:	3001      	adds	r0, #1
 801fbd8:	f43f af19 	beq.w	801fa0e <_printf_float+0xc2>
 801fbdc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fbe0:	4313      	orrs	r3, r2
 801fbe2:	d102      	bne.n	801fbea <_printf_float+0x29e>
 801fbe4:	6823      	ldr	r3, [r4, #0]
 801fbe6:	07d9      	lsls	r1, r3, #31
 801fbe8:	d5d8      	bpl.n	801fb9c <_printf_float+0x250>
 801fbea:	ee18 3a10 	vmov	r3, s16
 801fbee:	4652      	mov	r2, sl
 801fbf0:	4631      	mov	r1, r6
 801fbf2:	4628      	mov	r0, r5
 801fbf4:	47b8      	blx	r7
 801fbf6:	3001      	adds	r0, #1
 801fbf8:	f43f af09 	beq.w	801fa0e <_printf_float+0xc2>
 801fbfc:	f04f 0900 	mov.w	r9, #0
 801fc00:	f104 0a1a 	add.w	sl, r4, #26
 801fc04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc06:	425b      	negs	r3, r3
 801fc08:	454b      	cmp	r3, r9
 801fc0a:	dc01      	bgt.n	801fc10 <_printf_float+0x2c4>
 801fc0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc0e:	e792      	b.n	801fb36 <_printf_float+0x1ea>
 801fc10:	2301      	movs	r3, #1
 801fc12:	4652      	mov	r2, sl
 801fc14:	4631      	mov	r1, r6
 801fc16:	4628      	mov	r0, r5
 801fc18:	47b8      	blx	r7
 801fc1a:	3001      	adds	r0, #1
 801fc1c:	f43f aef7 	beq.w	801fa0e <_printf_float+0xc2>
 801fc20:	f109 0901 	add.w	r9, r9, #1
 801fc24:	e7ee      	b.n	801fc04 <_printf_float+0x2b8>
 801fc26:	bf00      	nop
 801fc28:	7fefffff 	.word	0x7fefffff
 801fc2c:	0802708c 	.word	0x0802708c
 801fc30:	08027090 	.word	0x08027090
 801fc34:	08027098 	.word	0x08027098
 801fc38:	08027094 	.word	0x08027094
 801fc3c:	0802709c 	.word	0x0802709c
 801fc40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fc42:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801fc44:	429a      	cmp	r2, r3
 801fc46:	bfa8      	it	ge
 801fc48:	461a      	movge	r2, r3
 801fc4a:	2a00      	cmp	r2, #0
 801fc4c:	4691      	mov	r9, r2
 801fc4e:	dc37      	bgt.n	801fcc0 <_printf_float+0x374>
 801fc50:	f04f 0b00 	mov.w	fp, #0
 801fc54:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801fc58:	f104 021a 	add.w	r2, r4, #26
 801fc5c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801fc5e:	9305      	str	r3, [sp, #20]
 801fc60:	eba3 0309 	sub.w	r3, r3, r9
 801fc64:	455b      	cmp	r3, fp
 801fc66:	dc33      	bgt.n	801fcd0 <_printf_float+0x384>
 801fc68:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fc6c:	429a      	cmp	r2, r3
 801fc6e:	db3b      	blt.n	801fce8 <_printf_float+0x39c>
 801fc70:	6823      	ldr	r3, [r4, #0]
 801fc72:	07da      	lsls	r2, r3, #31
 801fc74:	d438      	bmi.n	801fce8 <_printf_float+0x39c>
 801fc76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc78:	9a05      	ldr	r2, [sp, #20]
 801fc7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fc7c:	1a9a      	subs	r2, r3, r2
 801fc7e:	eba3 0901 	sub.w	r9, r3, r1
 801fc82:	4591      	cmp	r9, r2
 801fc84:	bfa8      	it	ge
 801fc86:	4691      	movge	r9, r2
 801fc88:	f1b9 0f00 	cmp.w	r9, #0
 801fc8c:	dc35      	bgt.n	801fcfa <_printf_float+0x3ae>
 801fc8e:	f04f 0800 	mov.w	r8, #0
 801fc92:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801fc96:	f104 0a1a 	add.w	sl, r4, #26
 801fc9a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801fc9e:	1a9b      	subs	r3, r3, r2
 801fca0:	eba3 0309 	sub.w	r3, r3, r9
 801fca4:	4543      	cmp	r3, r8
 801fca6:	f77f af79 	ble.w	801fb9c <_printf_float+0x250>
 801fcaa:	2301      	movs	r3, #1
 801fcac:	4652      	mov	r2, sl
 801fcae:	4631      	mov	r1, r6
 801fcb0:	4628      	mov	r0, r5
 801fcb2:	47b8      	blx	r7
 801fcb4:	3001      	adds	r0, #1
 801fcb6:	f43f aeaa 	beq.w	801fa0e <_printf_float+0xc2>
 801fcba:	f108 0801 	add.w	r8, r8, #1
 801fcbe:	e7ec      	b.n	801fc9a <_printf_float+0x34e>
 801fcc0:	4613      	mov	r3, r2
 801fcc2:	4631      	mov	r1, r6
 801fcc4:	4642      	mov	r2, r8
 801fcc6:	4628      	mov	r0, r5
 801fcc8:	47b8      	blx	r7
 801fcca:	3001      	adds	r0, #1
 801fccc:	d1c0      	bne.n	801fc50 <_printf_float+0x304>
 801fcce:	e69e      	b.n	801fa0e <_printf_float+0xc2>
 801fcd0:	2301      	movs	r3, #1
 801fcd2:	4631      	mov	r1, r6
 801fcd4:	4628      	mov	r0, r5
 801fcd6:	9205      	str	r2, [sp, #20]
 801fcd8:	47b8      	blx	r7
 801fcda:	3001      	adds	r0, #1
 801fcdc:	f43f ae97 	beq.w	801fa0e <_printf_float+0xc2>
 801fce0:	9a05      	ldr	r2, [sp, #20]
 801fce2:	f10b 0b01 	add.w	fp, fp, #1
 801fce6:	e7b9      	b.n	801fc5c <_printf_float+0x310>
 801fce8:	ee18 3a10 	vmov	r3, s16
 801fcec:	4652      	mov	r2, sl
 801fcee:	4631      	mov	r1, r6
 801fcf0:	4628      	mov	r0, r5
 801fcf2:	47b8      	blx	r7
 801fcf4:	3001      	adds	r0, #1
 801fcf6:	d1be      	bne.n	801fc76 <_printf_float+0x32a>
 801fcf8:	e689      	b.n	801fa0e <_printf_float+0xc2>
 801fcfa:	9a05      	ldr	r2, [sp, #20]
 801fcfc:	464b      	mov	r3, r9
 801fcfe:	4442      	add	r2, r8
 801fd00:	4631      	mov	r1, r6
 801fd02:	4628      	mov	r0, r5
 801fd04:	47b8      	blx	r7
 801fd06:	3001      	adds	r0, #1
 801fd08:	d1c1      	bne.n	801fc8e <_printf_float+0x342>
 801fd0a:	e680      	b.n	801fa0e <_printf_float+0xc2>
 801fd0c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fd0e:	2a01      	cmp	r2, #1
 801fd10:	dc01      	bgt.n	801fd16 <_printf_float+0x3ca>
 801fd12:	07db      	lsls	r3, r3, #31
 801fd14:	d538      	bpl.n	801fd88 <_printf_float+0x43c>
 801fd16:	2301      	movs	r3, #1
 801fd18:	4642      	mov	r2, r8
 801fd1a:	4631      	mov	r1, r6
 801fd1c:	4628      	mov	r0, r5
 801fd1e:	47b8      	blx	r7
 801fd20:	3001      	adds	r0, #1
 801fd22:	f43f ae74 	beq.w	801fa0e <_printf_float+0xc2>
 801fd26:	ee18 3a10 	vmov	r3, s16
 801fd2a:	4652      	mov	r2, sl
 801fd2c:	4631      	mov	r1, r6
 801fd2e:	4628      	mov	r0, r5
 801fd30:	47b8      	blx	r7
 801fd32:	3001      	adds	r0, #1
 801fd34:	f43f ae6b 	beq.w	801fa0e <_printf_float+0xc2>
 801fd38:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801fd3c:	2200      	movs	r2, #0
 801fd3e:	2300      	movs	r3, #0
 801fd40:	f7e0 fec2 	bl	8000ac8 <__aeabi_dcmpeq>
 801fd44:	b9d8      	cbnz	r0, 801fd7e <_printf_float+0x432>
 801fd46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd48:	f108 0201 	add.w	r2, r8, #1
 801fd4c:	3b01      	subs	r3, #1
 801fd4e:	4631      	mov	r1, r6
 801fd50:	4628      	mov	r0, r5
 801fd52:	47b8      	blx	r7
 801fd54:	3001      	adds	r0, #1
 801fd56:	d10e      	bne.n	801fd76 <_printf_float+0x42a>
 801fd58:	e659      	b.n	801fa0e <_printf_float+0xc2>
 801fd5a:	2301      	movs	r3, #1
 801fd5c:	4652      	mov	r2, sl
 801fd5e:	4631      	mov	r1, r6
 801fd60:	4628      	mov	r0, r5
 801fd62:	47b8      	blx	r7
 801fd64:	3001      	adds	r0, #1
 801fd66:	f43f ae52 	beq.w	801fa0e <_printf_float+0xc2>
 801fd6a:	f108 0801 	add.w	r8, r8, #1
 801fd6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd70:	3b01      	subs	r3, #1
 801fd72:	4543      	cmp	r3, r8
 801fd74:	dcf1      	bgt.n	801fd5a <_printf_float+0x40e>
 801fd76:	464b      	mov	r3, r9
 801fd78:	f104 0250 	add.w	r2, r4, #80	; 0x50
 801fd7c:	e6dc      	b.n	801fb38 <_printf_float+0x1ec>
 801fd7e:	f04f 0800 	mov.w	r8, #0
 801fd82:	f104 0a1a 	add.w	sl, r4, #26
 801fd86:	e7f2      	b.n	801fd6e <_printf_float+0x422>
 801fd88:	2301      	movs	r3, #1
 801fd8a:	4642      	mov	r2, r8
 801fd8c:	e7df      	b.n	801fd4e <_printf_float+0x402>
 801fd8e:	2301      	movs	r3, #1
 801fd90:	464a      	mov	r2, r9
 801fd92:	4631      	mov	r1, r6
 801fd94:	4628      	mov	r0, r5
 801fd96:	47b8      	blx	r7
 801fd98:	3001      	adds	r0, #1
 801fd9a:	f43f ae38 	beq.w	801fa0e <_printf_float+0xc2>
 801fd9e:	f108 0801 	add.w	r8, r8, #1
 801fda2:	68e3      	ldr	r3, [r4, #12]
 801fda4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fda6:	1a5b      	subs	r3, r3, r1
 801fda8:	4543      	cmp	r3, r8
 801fdaa:	dcf0      	bgt.n	801fd8e <_printf_float+0x442>
 801fdac:	e6fa      	b.n	801fba4 <_printf_float+0x258>
 801fdae:	f04f 0800 	mov.w	r8, #0
 801fdb2:	f104 0919 	add.w	r9, r4, #25
 801fdb6:	e7f4      	b.n	801fda2 <_printf_float+0x456>

0801fdb8 <_printf_common>:
 801fdb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fdbc:	4616      	mov	r6, r2
 801fdbe:	4699      	mov	r9, r3
 801fdc0:	688a      	ldr	r2, [r1, #8]
 801fdc2:	690b      	ldr	r3, [r1, #16]
 801fdc4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801fdc8:	4293      	cmp	r3, r2
 801fdca:	bfb8      	it	lt
 801fdcc:	4613      	movlt	r3, r2
 801fdce:	6033      	str	r3, [r6, #0]
 801fdd0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801fdd4:	4607      	mov	r7, r0
 801fdd6:	460c      	mov	r4, r1
 801fdd8:	b10a      	cbz	r2, 801fdde <_printf_common+0x26>
 801fdda:	3301      	adds	r3, #1
 801fddc:	6033      	str	r3, [r6, #0]
 801fdde:	6823      	ldr	r3, [r4, #0]
 801fde0:	0699      	lsls	r1, r3, #26
 801fde2:	bf42      	ittt	mi
 801fde4:	6833      	ldrmi	r3, [r6, #0]
 801fde6:	3302      	addmi	r3, #2
 801fde8:	6033      	strmi	r3, [r6, #0]
 801fdea:	6825      	ldr	r5, [r4, #0]
 801fdec:	f015 0506 	ands.w	r5, r5, #6
 801fdf0:	d106      	bne.n	801fe00 <_printf_common+0x48>
 801fdf2:	f104 0a19 	add.w	sl, r4, #25
 801fdf6:	68e3      	ldr	r3, [r4, #12]
 801fdf8:	6832      	ldr	r2, [r6, #0]
 801fdfa:	1a9b      	subs	r3, r3, r2
 801fdfc:	42ab      	cmp	r3, r5
 801fdfe:	dc26      	bgt.n	801fe4e <_printf_common+0x96>
 801fe00:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801fe04:	1e13      	subs	r3, r2, #0
 801fe06:	6822      	ldr	r2, [r4, #0]
 801fe08:	bf18      	it	ne
 801fe0a:	2301      	movne	r3, #1
 801fe0c:	0692      	lsls	r2, r2, #26
 801fe0e:	d42b      	bmi.n	801fe68 <_printf_common+0xb0>
 801fe10:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801fe14:	4649      	mov	r1, r9
 801fe16:	4638      	mov	r0, r7
 801fe18:	47c0      	blx	r8
 801fe1a:	3001      	adds	r0, #1
 801fe1c:	d01e      	beq.n	801fe5c <_printf_common+0xa4>
 801fe1e:	6823      	ldr	r3, [r4, #0]
 801fe20:	68e5      	ldr	r5, [r4, #12]
 801fe22:	6832      	ldr	r2, [r6, #0]
 801fe24:	f003 0306 	and.w	r3, r3, #6
 801fe28:	2b04      	cmp	r3, #4
 801fe2a:	bf08      	it	eq
 801fe2c:	1aad      	subeq	r5, r5, r2
 801fe2e:	68a3      	ldr	r3, [r4, #8]
 801fe30:	6922      	ldr	r2, [r4, #16]
 801fe32:	bf0c      	ite	eq
 801fe34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801fe38:	2500      	movne	r5, #0
 801fe3a:	4293      	cmp	r3, r2
 801fe3c:	bfc4      	itt	gt
 801fe3e:	1a9b      	subgt	r3, r3, r2
 801fe40:	18ed      	addgt	r5, r5, r3
 801fe42:	2600      	movs	r6, #0
 801fe44:	341a      	adds	r4, #26
 801fe46:	42b5      	cmp	r5, r6
 801fe48:	d11a      	bne.n	801fe80 <_printf_common+0xc8>
 801fe4a:	2000      	movs	r0, #0
 801fe4c:	e008      	b.n	801fe60 <_printf_common+0xa8>
 801fe4e:	2301      	movs	r3, #1
 801fe50:	4652      	mov	r2, sl
 801fe52:	4649      	mov	r1, r9
 801fe54:	4638      	mov	r0, r7
 801fe56:	47c0      	blx	r8
 801fe58:	3001      	adds	r0, #1
 801fe5a:	d103      	bne.n	801fe64 <_printf_common+0xac>
 801fe5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fe60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fe64:	3501      	adds	r5, #1
 801fe66:	e7c6      	b.n	801fdf6 <_printf_common+0x3e>
 801fe68:	18e1      	adds	r1, r4, r3
 801fe6a:	1c5a      	adds	r2, r3, #1
 801fe6c:	2030      	movs	r0, #48	; 0x30
 801fe6e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801fe72:	4422      	add	r2, r4
 801fe74:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801fe78:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801fe7c:	3302      	adds	r3, #2
 801fe7e:	e7c7      	b.n	801fe10 <_printf_common+0x58>
 801fe80:	2301      	movs	r3, #1
 801fe82:	4622      	mov	r2, r4
 801fe84:	4649      	mov	r1, r9
 801fe86:	4638      	mov	r0, r7
 801fe88:	47c0      	blx	r8
 801fe8a:	3001      	adds	r0, #1
 801fe8c:	d0e6      	beq.n	801fe5c <_printf_common+0xa4>
 801fe8e:	3601      	adds	r6, #1
 801fe90:	e7d9      	b.n	801fe46 <_printf_common+0x8e>
	...

0801fe94 <_printf_i>:
 801fe94:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801fe98:	7e0f      	ldrb	r7, [r1, #24]
 801fe9a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fe9c:	2f78      	cmp	r7, #120	; 0x78
 801fe9e:	4691      	mov	r9, r2
 801fea0:	4680      	mov	r8, r0
 801fea2:	460c      	mov	r4, r1
 801fea4:	469a      	mov	sl, r3
 801fea6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801feaa:	d807      	bhi.n	801febc <_printf_i+0x28>
 801feac:	2f62      	cmp	r7, #98	; 0x62
 801feae:	d80a      	bhi.n	801fec6 <_printf_i+0x32>
 801feb0:	2f00      	cmp	r7, #0
 801feb2:	f000 80d8 	beq.w	8020066 <_printf_i+0x1d2>
 801feb6:	2f58      	cmp	r7, #88	; 0x58
 801feb8:	f000 80a3 	beq.w	8020002 <_printf_i+0x16e>
 801febc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fec0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801fec4:	e03a      	b.n	801ff3c <_printf_i+0xa8>
 801fec6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801feca:	2b15      	cmp	r3, #21
 801fecc:	d8f6      	bhi.n	801febc <_printf_i+0x28>
 801fece:	a101      	add	r1, pc, #4	; (adr r1, 801fed4 <_printf_i+0x40>)
 801fed0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801fed4:	0801ff2d 	.word	0x0801ff2d
 801fed8:	0801ff41 	.word	0x0801ff41
 801fedc:	0801febd 	.word	0x0801febd
 801fee0:	0801febd 	.word	0x0801febd
 801fee4:	0801febd 	.word	0x0801febd
 801fee8:	0801febd 	.word	0x0801febd
 801feec:	0801ff41 	.word	0x0801ff41
 801fef0:	0801febd 	.word	0x0801febd
 801fef4:	0801febd 	.word	0x0801febd
 801fef8:	0801febd 	.word	0x0801febd
 801fefc:	0801febd 	.word	0x0801febd
 801ff00:	0802004d 	.word	0x0802004d
 801ff04:	0801ff71 	.word	0x0801ff71
 801ff08:	0802002f 	.word	0x0802002f
 801ff0c:	0801febd 	.word	0x0801febd
 801ff10:	0801febd 	.word	0x0801febd
 801ff14:	0802006f 	.word	0x0802006f
 801ff18:	0801febd 	.word	0x0801febd
 801ff1c:	0801ff71 	.word	0x0801ff71
 801ff20:	0801febd 	.word	0x0801febd
 801ff24:	0801febd 	.word	0x0801febd
 801ff28:	08020037 	.word	0x08020037
 801ff2c:	682b      	ldr	r3, [r5, #0]
 801ff2e:	1d1a      	adds	r2, r3, #4
 801ff30:	681b      	ldr	r3, [r3, #0]
 801ff32:	602a      	str	r2, [r5, #0]
 801ff34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801ff38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801ff3c:	2301      	movs	r3, #1
 801ff3e:	e0a3      	b.n	8020088 <_printf_i+0x1f4>
 801ff40:	6820      	ldr	r0, [r4, #0]
 801ff42:	6829      	ldr	r1, [r5, #0]
 801ff44:	0606      	lsls	r6, r0, #24
 801ff46:	f101 0304 	add.w	r3, r1, #4
 801ff4a:	d50a      	bpl.n	801ff62 <_printf_i+0xce>
 801ff4c:	680e      	ldr	r6, [r1, #0]
 801ff4e:	602b      	str	r3, [r5, #0]
 801ff50:	2e00      	cmp	r6, #0
 801ff52:	da03      	bge.n	801ff5c <_printf_i+0xc8>
 801ff54:	232d      	movs	r3, #45	; 0x2d
 801ff56:	4276      	negs	r6, r6
 801ff58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ff5c:	485e      	ldr	r0, [pc, #376]	; (80200d8 <_printf_i+0x244>)
 801ff5e:	230a      	movs	r3, #10
 801ff60:	e019      	b.n	801ff96 <_printf_i+0x102>
 801ff62:	680e      	ldr	r6, [r1, #0]
 801ff64:	602b      	str	r3, [r5, #0]
 801ff66:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ff6a:	bf18      	it	ne
 801ff6c:	b236      	sxthne	r6, r6
 801ff6e:	e7ef      	b.n	801ff50 <_printf_i+0xbc>
 801ff70:	682b      	ldr	r3, [r5, #0]
 801ff72:	6820      	ldr	r0, [r4, #0]
 801ff74:	1d19      	adds	r1, r3, #4
 801ff76:	6029      	str	r1, [r5, #0]
 801ff78:	0601      	lsls	r1, r0, #24
 801ff7a:	d501      	bpl.n	801ff80 <_printf_i+0xec>
 801ff7c:	681e      	ldr	r6, [r3, #0]
 801ff7e:	e002      	b.n	801ff86 <_printf_i+0xf2>
 801ff80:	0646      	lsls	r6, r0, #25
 801ff82:	d5fb      	bpl.n	801ff7c <_printf_i+0xe8>
 801ff84:	881e      	ldrh	r6, [r3, #0]
 801ff86:	4854      	ldr	r0, [pc, #336]	; (80200d8 <_printf_i+0x244>)
 801ff88:	2f6f      	cmp	r7, #111	; 0x6f
 801ff8a:	bf0c      	ite	eq
 801ff8c:	2308      	moveq	r3, #8
 801ff8e:	230a      	movne	r3, #10
 801ff90:	2100      	movs	r1, #0
 801ff92:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801ff96:	6865      	ldr	r5, [r4, #4]
 801ff98:	60a5      	str	r5, [r4, #8]
 801ff9a:	2d00      	cmp	r5, #0
 801ff9c:	bfa2      	ittt	ge
 801ff9e:	6821      	ldrge	r1, [r4, #0]
 801ffa0:	f021 0104 	bicge.w	r1, r1, #4
 801ffa4:	6021      	strge	r1, [r4, #0]
 801ffa6:	b90e      	cbnz	r6, 801ffac <_printf_i+0x118>
 801ffa8:	2d00      	cmp	r5, #0
 801ffaa:	d04d      	beq.n	8020048 <_printf_i+0x1b4>
 801ffac:	4615      	mov	r5, r2
 801ffae:	fbb6 f1f3 	udiv	r1, r6, r3
 801ffb2:	fb03 6711 	mls	r7, r3, r1, r6
 801ffb6:	5dc7      	ldrb	r7, [r0, r7]
 801ffb8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801ffbc:	4637      	mov	r7, r6
 801ffbe:	42bb      	cmp	r3, r7
 801ffc0:	460e      	mov	r6, r1
 801ffc2:	d9f4      	bls.n	801ffae <_printf_i+0x11a>
 801ffc4:	2b08      	cmp	r3, #8
 801ffc6:	d10b      	bne.n	801ffe0 <_printf_i+0x14c>
 801ffc8:	6823      	ldr	r3, [r4, #0]
 801ffca:	07de      	lsls	r6, r3, #31
 801ffcc:	d508      	bpl.n	801ffe0 <_printf_i+0x14c>
 801ffce:	6923      	ldr	r3, [r4, #16]
 801ffd0:	6861      	ldr	r1, [r4, #4]
 801ffd2:	4299      	cmp	r1, r3
 801ffd4:	bfde      	ittt	le
 801ffd6:	2330      	movle	r3, #48	; 0x30
 801ffd8:	f805 3c01 	strble.w	r3, [r5, #-1]
 801ffdc:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 801ffe0:	1b52      	subs	r2, r2, r5
 801ffe2:	6122      	str	r2, [r4, #16]
 801ffe4:	f8cd a000 	str.w	sl, [sp]
 801ffe8:	464b      	mov	r3, r9
 801ffea:	aa03      	add	r2, sp, #12
 801ffec:	4621      	mov	r1, r4
 801ffee:	4640      	mov	r0, r8
 801fff0:	f7ff fee2 	bl	801fdb8 <_printf_common>
 801fff4:	3001      	adds	r0, #1
 801fff6:	d14c      	bne.n	8020092 <_printf_i+0x1fe>
 801fff8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801fffc:	b004      	add	sp, #16
 801fffe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020002:	4835      	ldr	r0, [pc, #212]	; (80200d8 <_printf_i+0x244>)
 8020004:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020008:	6829      	ldr	r1, [r5, #0]
 802000a:	6823      	ldr	r3, [r4, #0]
 802000c:	f851 6b04 	ldr.w	r6, [r1], #4
 8020010:	6029      	str	r1, [r5, #0]
 8020012:	061d      	lsls	r5, r3, #24
 8020014:	d514      	bpl.n	8020040 <_printf_i+0x1ac>
 8020016:	07df      	lsls	r7, r3, #31
 8020018:	bf44      	itt	mi
 802001a:	f043 0320 	orrmi.w	r3, r3, #32
 802001e:	6023      	strmi	r3, [r4, #0]
 8020020:	b91e      	cbnz	r6, 802002a <_printf_i+0x196>
 8020022:	6823      	ldr	r3, [r4, #0]
 8020024:	f023 0320 	bic.w	r3, r3, #32
 8020028:	6023      	str	r3, [r4, #0]
 802002a:	2310      	movs	r3, #16
 802002c:	e7b0      	b.n	801ff90 <_printf_i+0xfc>
 802002e:	6823      	ldr	r3, [r4, #0]
 8020030:	f043 0320 	orr.w	r3, r3, #32
 8020034:	6023      	str	r3, [r4, #0]
 8020036:	2378      	movs	r3, #120	; 0x78
 8020038:	4828      	ldr	r0, [pc, #160]	; (80200dc <_printf_i+0x248>)
 802003a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802003e:	e7e3      	b.n	8020008 <_printf_i+0x174>
 8020040:	0659      	lsls	r1, r3, #25
 8020042:	bf48      	it	mi
 8020044:	b2b6      	uxthmi	r6, r6
 8020046:	e7e6      	b.n	8020016 <_printf_i+0x182>
 8020048:	4615      	mov	r5, r2
 802004a:	e7bb      	b.n	801ffc4 <_printf_i+0x130>
 802004c:	682b      	ldr	r3, [r5, #0]
 802004e:	6826      	ldr	r6, [r4, #0]
 8020050:	6961      	ldr	r1, [r4, #20]
 8020052:	1d18      	adds	r0, r3, #4
 8020054:	6028      	str	r0, [r5, #0]
 8020056:	0635      	lsls	r5, r6, #24
 8020058:	681b      	ldr	r3, [r3, #0]
 802005a:	d501      	bpl.n	8020060 <_printf_i+0x1cc>
 802005c:	6019      	str	r1, [r3, #0]
 802005e:	e002      	b.n	8020066 <_printf_i+0x1d2>
 8020060:	0670      	lsls	r0, r6, #25
 8020062:	d5fb      	bpl.n	802005c <_printf_i+0x1c8>
 8020064:	8019      	strh	r1, [r3, #0]
 8020066:	2300      	movs	r3, #0
 8020068:	6123      	str	r3, [r4, #16]
 802006a:	4615      	mov	r5, r2
 802006c:	e7ba      	b.n	801ffe4 <_printf_i+0x150>
 802006e:	682b      	ldr	r3, [r5, #0]
 8020070:	1d1a      	adds	r2, r3, #4
 8020072:	602a      	str	r2, [r5, #0]
 8020074:	681d      	ldr	r5, [r3, #0]
 8020076:	6862      	ldr	r2, [r4, #4]
 8020078:	2100      	movs	r1, #0
 802007a:	4628      	mov	r0, r5
 802007c:	f7e0 f8b0 	bl	80001e0 <memchr>
 8020080:	b108      	cbz	r0, 8020086 <_printf_i+0x1f2>
 8020082:	1b40      	subs	r0, r0, r5
 8020084:	6060      	str	r0, [r4, #4]
 8020086:	6863      	ldr	r3, [r4, #4]
 8020088:	6123      	str	r3, [r4, #16]
 802008a:	2300      	movs	r3, #0
 802008c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020090:	e7a8      	b.n	801ffe4 <_printf_i+0x150>
 8020092:	6923      	ldr	r3, [r4, #16]
 8020094:	462a      	mov	r2, r5
 8020096:	4649      	mov	r1, r9
 8020098:	4640      	mov	r0, r8
 802009a:	47d0      	blx	sl
 802009c:	3001      	adds	r0, #1
 802009e:	d0ab      	beq.n	801fff8 <_printf_i+0x164>
 80200a0:	6823      	ldr	r3, [r4, #0]
 80200a2:	079b      	lsls	r3, r3, #30
 80200a4:	d413      	bmi.n	80200ce <_printf_i+0x23a>
 80200a6:	68e0      	ldr	r0, [r4, #12]
 80200a8:	9b03      	ldr	r3, [sp, #12]
 80200aa:	4298      	cmp	r0, r3
 80200ac:	bfb8      	it	lt
 80200ae:	4618      	movlt	r0, r3
 80200b0:	e7a4      	b.n	801fffc <_printf_i+0x168>
 80200b2:	2301      	movs	r3, #1
 80200b4:	4632      	mov	r2, r6
 80200b6:	4649      	mov	r1, r9
 80200b8:	4640      	mov	r0, r8
 80200ba:	47d0      	blx	sl
 80200bc:	3001      	adds	r0, #1
 80200be:	d09b      	beq.n	801fff8 <_printf_i+0x164>
 80200c0:	3501      	adds	r5, #1
 80200c2:	68e3      	ldr	r3, [r4, #12]
 80200c4:	9903      	ldr	r1, [sp, #12]
 80200c6:	1a5b      	subs	r3, r3, r1
 80200c8:	42ab      	cmp	r3, r5
 80200ca:	dcf2      	bgt.n	80200b2 <_printf_i+0x21e>
 80200cc:	e7eb      	b.n	80200a6 <_printf_i+0x212>
 80200ce:	2500      	movs	r5, #0
 80200d0:	f104 0619 	add.w	r6, r4, #25
 80200d4:	e7f5      	b.n	80200c2 <_printf_i+0x22e>
 80200d6:	bf00      	nop
 80200d8:	0802709e 	.word	0x0802709e
 80200dc:	080270af 	.word	0x080270af

080200e0 <_scanf_float>:
 80200e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200e4:	b087      	sub	sp, #28
 80200e6:	4617      	mov	r7, r2
 80200e8:	9303      	str	r3, [sp, #12]
 80200ea:	688b      	ldr	r3, [r1, #8]
 80200ec:	1e5a      	subs	r2, r3, #1
 80200ee:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80200f2:	bf83      	ittte	hi
 80200f4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80200f8:	195b      	addhi	r3, r3, r5
 80200fa:	9302      	strhi	r3, [sp, #8]
 80200fc:	2300      	movls	r3, #0
 80200fe:	bf86      	itte	hi
 8020100:	f240 135d 	movwhi	r3, #349	; 0x15d
 8020104:	608b      	strhi	r3, [r1, #8]
 8020106:	9302      	strls	r3, [sp, #8]
 8020108:	680b      	ldr	r3, [r1, #0]
 802010a:	468b      	mov	fp, r1
 802010c:	2500      	movs	r5, #0
 802010e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8020112:	f84b 3b1c 	str.w	r3, [fp], #28
 8020116:	e9cd 5504 	strd	r5, r5, [sp, #16]
 802011a:	4680      	mov	r8, r0
 802011c:	460c      	mov	r4, r1
 802011e:	465e      	mov	r6, fp
 8020120:	46aa      	mov	sl, r5
 8020122:	46a9      	mov	r9, r5
 8020124:	9501      	str	r5, [sp, #4]
 8020126:	68a2      	ldr	r2, [r4, #8]
 8020128:	b152      	cbz	r2, 8020140 <_scanf_float+0x60>
 802012a:	683b      	ldr	r3, [r7, #0]
 802012c:	781b      	ldrb	r3, [r3, #0]
 802012e:	2b4e      	cmp	r3, #78	; 0x4e
 8020130:	d864      	bhi.n	80201fc <_scanf_float+0x11c>
 8020132:	2b40      	cmp	r3, #64	; 0x40
 8020134:	d83c      	bhi.n	80201b0 <_scanf_float+0xd0>
 8020136:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 802013a:	b2c8      	uxtb	r0, r1
 802013c:	280e      	cmp	r0, #14
 802013e:	d93a      	bls.n	80201b6 <_scanf_float+0xd6>
 8020140:	f1b9 0f00 	cmp.w	r9, #0
 8020144:	d003      	beq.n	802014e <_scanf_float+0x6e>
 8020146:	6823      	ldr	r3, [r4, #0]
 8020148:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 802014c:	6023      	str	r3, [r4, #0]
 802014e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8020152:	f1ba 0f01 	cmp.w	sl, #1
 8020156:	f200 8113 	bhi.w	8020380 <_scanf_float+0x2a0>
 802015a:	455e      	cmp	r6, fp
 802015c:	f200 8105 	bhi.w	802036a <_scanf_float+0x28a>
 8020160:	2501      	movs	r5, #1
 8020162:	4628      	mov	r0, r5
 8020164:	b007      	add	sp, #28
 8020166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802016a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 802016e:	2a0d      	cmp	r2, #13
 8020170:	d8e6      	bhi.n	8020140 <_scanf_float+0x60>
 8020172:	a101      	add	r1, pc, #4	; (adr r1, 8020178 <_scanf_float+0x98>)
 8020174:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8020178:	080202b7 	.word	0x080202b7
 802017c:	08020141 	.word	0x08020141
 8020180:	08020141 	.word	0x08020141
 8020184:	08020141 	.word	0x08020141
 8020188:	08020317 	.word	0x08020317
 802018c:	080202ef 	.word	0x080202ef
 8020190:	08020141 	.word	0x08020141
 8020194:	08020141 	.word	0x08020141
 8020198:	080202c5 	.word	0x080202c5
 802019c:	08020141 	.word	0x08020141
 80201a0:	08020141 	.word	0x08020141
 80201a4:	08020141 	.word	0x08020141
 80201a8:	08020141 	.word	0x08020141
 80201ac:	0802027d 	.word	0x0802027d
 80201b0:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80201b4:	e7db      	b.n	802016e <_scanf_float+0x8e>
 80201b6:	290e      	cmp	r1, #14
 80201b8:	d8c2      	bhi.n	8020140 <_scanf_float+0x60>
 80201ba:	a001      	add	r0, pc, #4	; (adr r0, 80201c0 <_scanf_float+0xe0>)
 80201bc:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80201c0:	0802026f 	.word	0x0802026f
 80201c4:	08020141 	.word	0x08020141
 80201c8:	0802026f 	.word	0x0802026f
 80201cc:	08020303 	.word	0x08020303
 80201d0:	08020141 	.word	0x08020141
 80201d4:	0802021d 	.word	0x0802021d
 80201d8:	08020259 	.word	0x08020259
 80201dc:	08020259 	.word	0x08020259
 80201e0:	08020259 	.word	0x08020259
 80201e4:	08020259 	.word	0x08020259
 80201e8:	08020259 	.word	0x08020259
 80201ec:	08020259 	.word	0x08020259
 80201f0:	08020259 	.word	0x08020259
 80201f4:	08020259 	.word	0x08020259
 80201f8:	08020259 	.word	0x08020259
 80201fc:	2b6e      	cmp	r3, #110	; 0x6e
 80201fe:	d809      	bhi.n	8020214 <_scanf_float+0x134>
 8020200:	2b60      	cmp	r3, #96	; 0x60
 8020202:	d8b2      	bhi.n	802016a <_scanf_float+0x8a>
 8020204:	2b54      	cmp	r3, #84	; 0x54
 8020206:	d077      	beq.n	80202f8 <_scanf_float+0x218>
 8020208:	2b59      	cmp	r3, #89	; 0x59
 802020a:	d199      	bne.n	8020140 <_scanf_float+0x60>
 802020c:	2d07      	cmp	r5, #7
 802020e:	d197      	bne.n	8020140 <_scanf_float+0x60>
 8020210:	2508      	movs	r5, #8
 8020212:	e029      	b.n	8020268 <_scanf_float+0x188>
 8020214:	2b74      	cmp	r3, #116	; 0x74
 8020216:	d06f      	beq.n	80202f8 <_scanf_float+0x218>
 8020218:	2b79      	cmp	r3, #121	; 0x79
 802021a:	e7f6      	b.n	802020a <_scanf_float+0x12a>
 802021c:	6821      	ldr	r1, [r4, #0]
 802021e:	05c8      	lsls	r0, r1, #23
 8020220:	d51a      	bpl.n	8020258 <_scanf_float+0x178>
 8020222:	9b02      	ldr	r3, [sp, #8]
 8020224:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8020228:	6021      	str	r1, [r4, #0]
 802022a:	f109 0901 	add.w	r9, r9, #1
 802022e:	b11b      	cbz	r3, 8020238 <_scanf_float+0x158>
 8020230:	3b01      	subs	r3, #1
 8020232:	3201      	adds	r2, #1
 8020234:	9302      	str	r3, [sp, #8]
 8020236:	60a2      	str	r2, [r4, #8]
 8020238:	68a3      	ldr	r3, [r4, #8]
 802023a:	3b01      	subs	r3, #1
 802023c:	60a3      	str	r3, [r4, #8]
 802023e:	6923      	ldr	r3, [r4, #16]
 8020240:	3301      	adds	r3, #1
 8020242:	6123      	str	r3, [r4, #16]
 8020244:	687b      	ldr	r3, [r7, #4]
 8020246:	3b01      	subs	r3, #1
 8020248:	2b00      	cmp	r3, #0
 802024a:	607b      	str	r3, [r7, #4]
 802024c:	f340 8084 	ble.w	8020358 <_scanf_float+0x278>
 8020250:	683b      	ldr	r3, [r7, #0]
 8020252:	3301      	adds	r3, #1
 8020254:	603b      	str	r3, [r7, #0]
 8020256:	e766      	b.n	8020126 <_scanf_float+0x46>
 8020258:	eb1a 0f05 	cmn.w	sl, r5
 802025c:	f47f af70 	bne.w	8020140 <_scanf_float+0x60>
 8020260:	6822      	ldr	r2, [r4, #0]
 8020262:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8020266:	6022      	str	r2, [r4, #0]
 8020268:	f806 3b01 	strb.w	r3, [r6], #1
 802026c:	e7e4      	b.n	8020238 <_scanf_float+0x158>
 802026e:	6822      	ldr	r2, [r4, #0]
 8020270:	0610      	lsls	r0, r2, #24
 8020272:	f57f af65 	bpl.w	8020140 <_scanf_float+0x60>
 8020276:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 802027a:	e7f4      	b.n	8020266 <_scanf_float+0x186>
 802027c:	f1ba 0f00 	cmp.w	sl, #0
 8020280:	d10e      	bne.n	80202a0 <_scanf_float+0x1c0>
 8020282:	f1b9 0f00 	cmp.w	r9, #0
 8020286:	d10e      	bne.n	80202a6 <_scanf_float+0x1c6>
 8020288:	6822      	ldr	r2, [r4, #0]
 802028a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 802028e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8020292:	d108      	bne.n	80202a6 <_scanf_float+0x1c6>
 8020294:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8020298:	6022      	str	r2, [r4, #0]
 802029a:	f04f 0a01 	mov.w	sl, #1
 802029e:	e7e3      	b.n	8020268 <_scanf_float+0x188>
 80202a0:	f1ba 0f02 	cmp.w	sl, #2
 80202a4:	d055      	beq.n	8020352 <_scanf_float+0x272>
 80202a6:	2d01      	cmp	r5, #1
 80202a8:	d002      	beq.n	80202b0 <_scanf_float+0x1d0>
 80202aa:	2d04      	cmp	r5, #4
 80202ac:	f47f af48 	bne.w	8020140 <_scanf_float+0x60>
 80202b0:	3501      	adds	r5, #1
 80202b2:	b2ed      	uxtb	r5, r5
 80202b4:	e7d8      	b.n	8020268 <_scanf_float+0x188>
 80202b6:	f1ba 0f01 	cmp.w	sl, #1
 80202ba:	f47f af41 	bne.w	8020140 <_scanf_float+0x60>
 80202be:	f04f 0a02 	mov.w	sl, #2
 80202c2:	e7d1      	b.n	8020268 <_scanf_float+0x188>
 80202c4:	b97d      	cbnz	r5, 80202e6 <_scanf_float+0x206>
 80202c6:	f1b9 0f00 	cmp.w	r9, #0
 80202ca:	f47f af3c 	bne.w	8020146 <_scanf_float+0x66>
 80202ce:	6822      	ldr	r2, [r4, #0]
 80202d0:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80202d4:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80202d8:	f47f af39 	bne.w	802014e <_scanf_float+0x6e>
 80202dc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80202e0:	6022      	str	r2, [r4, #0]
 80202e2:	2501      	movs	r5, #1
 80202e4:	e7c0      	b.n	8020268 <_scanf_float+0x188>
 80202e6:	2d03      	cmp	r5, #3
 80202e8:	d0e2      	beq.n	80202b0 <_scanf_float+0x1d0>
 80202ea:	2d05      	cmp	r5, #5
 80202ec:	e7de      	b.n	80202ac <_scanf_float+0x1cc>
 80202ee:	2d02      	cmp	r5, #2
 80202f0:	f47f af26 	bne.w	8020140 <_scanf_float+0x60>
 80202f4:	2503      	movs	r5, #3
 80202f6:	e7b7      	b.n	8020268 <_scanf_float+0x188>
 80202f8:	2d06      	cmp	r5, #6
 80202fa:	f47f af21 	bne.w	8020140 <_scanf_float+0x60>
 80202fe:	2507      	movs	r5, #7
 8020300:	e7b2      	b.n	8020268 <_scanf_float+0x188>
 8020302:	6822      	ldr	r2, [r4, #0]
 8020304:	0591      	lsls	r1, r2, #22
 8020306:	f57f af1b 	bpl.w	8020140 <_scanf_float+0x60>
 802030a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 802030e:	6022      	str	r2, [r4, #0]
 8020310:	f8cd 9004 	str.w	r9, [sp, #4]
 8020314:	e7a8      	b.n	8020268 <_scanf_float+0x188>
 8020316:	6822      	ldr	r2, [r4, #0]
 8020318:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 802031c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8020320:	d006      	beq.n	8020330 <_scanf_float+0x250>
 8020322:	0550      	lsls	r0, r2, #21
 8020324:	f57f af0c 	bpl.w	8020140 <_scanf_float+0x60>
 8020328:	f1b9 0f00 	cmp.w	r9, #0
 802032c:	f43f af0f 	beq.w	802014e <_scanf_float+0x6e>
 8020330:	0591      	lsls	r1, r2, #22
 8020332:	bf58      	it	pl
 8020334:	9901      	ldrpl	r1, [sp, #4]
 8020336:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 802033a:	bf58      	it	pl
 802033c:	eba9 0101 	subpl.w	r1, r9, r1
 8020340:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8020344:	bf58      	it	pl
 8020346:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 802034a:	6022      	str	r2, [r4, #0]
 802034c:	f04f 0900 	mov.w	r9, #0
 8020350:	e78a      	b.n	8020268 <_scanf_float+0x188>
 8020352:	f04f 0a03 	mov.w	sl, #3
 8020356:	e787      	b.n	8020268 <_scanf_float+0x188>
 8020358:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 802035c:	4639      	mov	r1, r7
 802035e:	4640      	mov	r0, r8
 8020360:	4798      	blx	r3
 8020362:	2800      	cmp	r0, #0
 8020364:	f43f aedf 	beq.w	8020126 <_scanf_float+0x46>
 8020368:	e6ea      	b.n	8020140 <_scanf_float+0x60>
 802036a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 802036e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8020372:	463a      	mov	r2, r7
 8020374:	4640      	mov	r0, r8
 8020376:	4798      	blx	r3
 8020378:	6923      	ldr	r3, [r4, #16]
 802037a:	3b01      	subs	r3, #1
 802037c:	6123      	str	r3, [r4, #16]
 802037e:	e6ec      	b.n	802015a <_scanf_float+0x7a>
 8020380:	1e6b      	subs	r3, r5, #1
 8020382:	2b06      	cmp	r3, #6
 8020384:	d825      	bhi.n	80203d2 <_scanf_float+0x2f2>
 8020386:	2d02      	cmp	r5, #2
 8020388:	d836      	bhi.n	80203f8 <_scanf_float+0x318>
 802038a:	455e      	cmp	r6, fp
 802038c:	f67f aee8 	bls.w	8020160 <_scanf_float+0x80>
 8020390:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8020394:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8020398:	463a      	mov	r2, r7
 802039a:	4640      	mov	r0, r8
 802039c:	4798      	blx	r3
 802039e:	6923      	ldr	r3, [r4, #16]
 80203a0:	3b01      	subs	r3, #1
 80203a2:	6123      	str	r3, [r4, #16]
 80203a4:	e7f1      	b.n	802038a <_scanf_float+0x2aa>
 80203a6:	9802      	ldr	r0, [sp, #8]
 80203a8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80203ac:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80203b0:	9002      	str	r0, [sp, #8]
 80203b2:	463a      	mov	r2, r7
 80203b4:	4640      	mov	r0, r8
 80203b6:	4798      	blx	r3
 80203b8:	6923      	ldr	r3, [r4, #16]
 80203ba:	3b01      	subs	r3, #1
 80203bc:	6123      	str	r3, [r4, #16]
 80203be:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80203c2:	fa5f fa8a 	uxtb.w	sl, sl
 80203c6:	f1ba 0f02 	cmp.w	sl, #2
 80203ca:	d1ec      	bne.n	80203a6 <_scanf_float+0x2c6>
 80203cc:	3d03      	subs	r5, #3
 80203ce:	b2ed      	uxtb	r5, r5
 80203d0:	1b76      	subs	r6, r6, r5
 80203d2:	6823      	ldr	r3, [r4, #0]
 80203d4:	05da      	lsls	r2, r3, #23
 80203d6:	d52f      	bpl.n	8020438 <_scanf_float+0x358>
 80203d8:	055b      	lsls	r3, r3, #21
 80203da:	d510      	bpl.n	80203fe <_scanf_float+0x31e>
 80203dc:	455e      	cmp	r6, fp
 80203de:	f67f aebf 	bls.w	8020160 <_scanf_float+0x80>
 80203e2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80203e6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80203ea:	463a      	mov	r2, r7
 80203ec:	4640      	mov	r0, r8
 80203ee:	4798      	blx	r3
 80203f0:	6923      	ldr	r3, [r4, #16]
 80203f2:	3b01      	subs	r3, #1
 80203f4:	6123      	str	r3, [r4, #16]
 80203f6:	e7f1      	b.n	80203dc <_scanf_float+0x2fc>
 80203f8:	46aa      	mov	sl, r5
 80203fa:	9602      	str	r6, [sp, #8]
 80203fc:	e7df      	b.n	80203be <_scanf_float+0x2de>
 80203fe:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8020402:	6923      	ldr	r3, [r4, #16]
 8020404:	2965      	cmp	r1, #101	; 0x65
 8020406:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 802040a:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
 802040e:	6123      	str	r3, [r4, #16]
 8020410:	d00c      	beq.n	802042c <_scanf_float+0x34c>
 8020412:	2945      	cmp	r1, #69	; 0x45
 8020414:	d00a      	beq.n	802042c <_scanf_float+0x34c>
 8020416:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 802041a:	463a      	mov	r2, r7
 802041c:	4640      	mov	r0, r8
 802041e:	4798      	blx	r3
 8020420:	6923      	ldr	r3, [r4, #16]
 8020422:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8020426:	3b01      	subs	r3, #1
 8020428:	1eb5      	subs	r5, r6, #2
 802042a:	6123      	str	r3, [r4, #16]
 802042c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8020430:	463a      	mov	r2, r7
 8020432:	4640      	mov	r0, r8
 8020434:	4798      	blx	r3
 8020436:	462e      	mov	r6, r5
 8020438:	6825      	ldr	r5, [r4, #0]
 802043a:	f015 0510 	ands.w	r5, r5, #16
 802043e:	d159      	bne.n	80204f4 <_scanf_float+0x414>
 8020440:	7035      	strb	r5, [r6, #0]
 8020442:	6823      	ldr	r3, [r4, #0]
 8020444:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8020448:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802044c:	d11b      	bne.n	8020486 <_scanf_float+0x3a6>
 802044e:	9b01      	ldr	r3, [sp, #4]
 8020450:	454b      	cmp	r3, r9
 8020452:	eba3 0209 	sub.w	r2, r3, r9
 8020456:	d123      	bne.n	80204a0 <_scanf_float+0x3c0>
 8020458:	2200      	movs	r2, #0
 802045a:	4659      	mov	r1, fp
 802045c:	4640      	mov	r0, r8
 802045e:	f000 ff89 	bl	8021374 <_strtod_r>
 8020462:	6822      	ldr	r2, [r4, #0]
 8020464:	9b03      	ldr	r3, [sp, #12]
 8020466:	f012 0f02 	tst.w	r2, #2
 802046a:	ec57 6b10 	vmov	r6, r7, d0
 802046e:	681b      	ldr	r3, [r3, #0]
 8020470:	d021      	beq.n	80204b6 <_scanf_float+0x3d6>
 8020472:	9903      	ldr	r1, [sp, #12]
 8020474:	1d1a      	adds	r2, r3, #4
 8020476:	600a      	str	r2, [r1, #0]
 8020478:	681b      	ldr	r3, [r3, #0]
 802047a:	e9c3 6700 	strd	r6, r7, [r3]
 802047e:	68e3      	ldr	r3, [r4, #12]
 8020480:	3301      	adds	r3, #1
 8020482:	60e3      	str	r3, [r4, #12]
 8020484:	e66d      	b.n	8020162 <_scanf_float+0x82>
 8020486:	9b04      	ldr	r3, [sp, #16]
 8020488:	2b00      	cmp	r3, #0
 802048a:	d0e5      	beq.n	8020458 <_scanf_float+0x378>
 802048c:	9905      	ldr	r1, [sp, #20]
 802048e:	230a      	movs	r3, #10
 8020490:	462a      	mov	r2, r5
 8020492:	3101      	adds	r1, #1
 8020494:	4640      	mov	r0, r8
 8020496:	f000 fff5 	bl	8021484 <_strtol_r>
 802049a:	9b04      	ldr	r3, [sp, #16]
 802049c:	9e05      	ldr	r6, [sp, #20]
 802049e:	1ac2      	subs	r2, r0, r3
 80204a0:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80204a4:	429e      	cmp	r6, r3
 80204a6:	bf28      	it	cs
 80204a8:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 80204ac:	4912      	ldr	r1, [pc, #72]	; (80204f8 <_scanf_float+0x418>)
 80204ae:	4630      	mov	r0, r6
 80204b0:	f000 f8da 	bl	8020668 <siprintf>
 80204b4:	e7d0      	b.n	8020458 <_scanf_float+0x378>
 80204b6:	9903      	ldr	r1, [sp, #12]
 80204b8:	f012 0f04 	tst.w	r2, #4
 80204bc:	f103 0204 	add.w	r2, r3, #4
 80204c0:	600a      	str	r2, [r1, #0]
 80204c2:	d1d9      	bne.n	8020478 <_scanf_float+0x398>
 80204c4:	f8d3 8000 	ldr.w	r8, [r3]
 80204c8:	ee10 2a10 	vmov	r2, s0
 80204cc:	ee10 0a10 	vmov	r0, s0
 80204d0:	463b      	mov	r3, r7
 80204d2:	4639      	mov	r1, r7
 80204d4:	f7e0 fb2a 	bl	8000b2c <__aeabi_dcmpun>
 80204d8:	b128      	cbz	r0, 80204e6 <_scanf_float+0x406>
 80204da:	4808      	ldr	r0, [pc, #32]	; (80204fc <_scanf_float+0x41c>)
 80204dc:	f000 f88a 	bl	80205f4 <nanf>
 80204e0:	ed88 0a00 	vstr	s0, [r8]
 80204e4:	e7cb      	b.n	802047e <_scanf_float+0x39e>
 80204e6:	4630      	mov	r0, r6
 80204e8:	4639      	mov	r1, r7
 80204ea:	f7e0 fb7d 	bl	8000be8 <__aeabi_d2f>
 80204ee:	f8c8 0000 	str.w	r0, [r8]
 80204f2:	e7c4      	b.n	802047e <_scanf_float+0x39e>
 80204f4:	2500      	movs	r5, #0
 80204f6:	e634      	b.n	8020162 <_scanf_float+0x82>
 80204f8:	080270c0 	.word	0x080270c0
 80204fc:	080274c8 	.word	0x080274c8

08020500 <cleanup_glue>:
 8020500:	b538      	push	{r3, r4, r5, lr}
 8020502:	460c      	mov	r4, r1
 8020504:	6809      	ldr	r1, [r1, #0]
 8020506:	4605      	mov	r5, r0
 8020508:	b109      	cbz	r1, 802050e <cleanup_glue+0xe>
 802050a:	f7ff fff9 	bl	8020500 <cleanup_glue>
 802050e:	4621      	mov	r1, r4
 8020510:	4628      	mov	r0, r5
 8020512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020516:	f002 bfa1 	b.w	802345c <_free_r>
	...

0802051c <_reclaim_reent>:
 802051c:	4b2c      	ldr	r3, [pc, #176]	; (80205d0 <_reclaim_reent+0xb4>)
 802051e:	681b      	ldr	r3, [r3, #0]
 8020520:	4283      	cmp	r3, r0
 8020522:	b570      	push	{r4, r5, r6, lr}
 8020524:	4604      	mov	r4, r0
 8020526:	d051      	beq.n	80205cc <_reclaim_reent+0xb0>
 8020528:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802052a:	b143      	cbz	r3, 802053e <_reclaim_reent+0x22>
 802052c:	68db      	ldr	r3, [r3, #12]
 802052e:	2b00      	cmp	r3, #0
 8020530:	d14a      	bne.n	80205c8 <_reclaim_reent+0xac>
 8020532:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020534:	6819      	ldr	r1, [r3, #0]
 8020536:	b111      	cbz	r1, 802053e <_reclaim_reent+0x22>
 8020538:	4620      	mov	r0, r4
 802053a:	f002 ff8f 	bl	802345c <_free_r>
 802053e:	6961      	ldr	r1, [r4, #20]
 8020540:	b111      	cbz	r1, 8020548 <_reclaim_reent+0x2c>
 8020542:	4620      	mov	r0, r4
 8020544:	f002 ff8a 	bl	802345c <_free_r>
 8020548:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802054a:	b111      	cbz	r1, 8020552 <_reclaim_reent+0x36>
 802054c:	4620      	mov	r0, r4
 802054e:	f002 ff85 	bl	802345c <_free_r>
 8020552:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8020554:	b111      	cbz	r1, 802055c <_reclaim_reent+0x40>
 8020556:	4620      	mov	r0, r4
 8020558:	f002 ff80 	bl	802345c <_free_r>
 802055c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802055e:	b111      	cbz	r1, 8020566 <_reclaim_reent+0x4a>
 8020560:	4620      	mov	r0, r4
 8020562:	f002 ff7b 	bl	802345c <_free_r>
 8020566:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020568:	b111      	cbz	r1, 8020570 <_reclaim_reent+0x54>
 802056a:	4620      	mov	r0, r4
 802056c:	f002 ff76 	bl	802345c <_free_r>
 8020570:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8020572:	b111      	cbz	r1, 802057a <_reclaim_reent+0x5e>
 8020574:	4620      	mov	r0, r4
 8020576:	f002 ff71 	bl	802345c <_free_r>
 802057a:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802057c:	b111      	cbz	r1, 8020584 <_reclaim_reent+0x68>
 802057e:	4620      	mov	r0, r4
 8020580:	f002 ff6c 	bl	802345c <_free_r>
 8020584:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020586:	b111      	cbz	r1, 802058e <_reclaim_reent+0x72>
 8020588:	4620      	mov	r0, r4
 802058a:	f002 ff67 	bl	802345c <_free_r>
 802058e:	69a3      	ldr	r3, [r4, #24]
 8020590:	b1e3      	cbz	r3, 80205cc <_reclaim_reent+0xb0>
 8020592:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8020594:	4620      	mov	r0, r4
 8020596:	4798      	blx	r3
 8020598:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802059a:	b1b9      	cbz	r1, 80205cc <_reclaim_reent+0xb0>
 802059c:	4620      	mov	r0, r4
 802059e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80205a2:	f7ff bfad 	b.w	8020500 <cleanup_glue>
 80205a6:	5949      	ldr	r1, [r1, r5]
 80205a8:	b941      	cbnz	r1, 80205bc <_reclaim_reent+0xa0>
 80205aa:	3504      	adds	r5, #4
 80205ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80205ae:	2d80      	cmp	r5, #128	; 0x80
 80205b0:	68d9      	ldr	r1, [r3, #12]
 80205b2:	d1f8      	bne.n	80205a6 <_reclaim_reent+0x8a>
 80205b4:	4620      	mov	r0, r4
 80205b6:	f002 ff51 	bl	802345c <_free_r>
 80205ba:	e7ba      	b.n	8020532 <_reclaim_reent+0x16>
 80205bc:	680e      	ldr	r6, [r1, #0]
 80205be:	4620      	mov	r0, r4
 80205c0:	f002 ff4c 	bl	802345c <_free_r>
 80205c4:	4631      	mov	r1, r6
 80205c6:	e7ef      	b.n	80205a8 <_reclaim_reent+0x8c>
 80205c8:	2500      	movs	r5, #0
 80205ca:	e7ef      	b.n	80205ac <_reclaim_reent+0x90>
 80205cc:	bd70      	pop	{r4, r5, r6, pc}
 80205ce:	bf00      	nop
 80205d0:	20000150 	.word	0x20000150

080205d4 <_sbrk_r>:
 80205d4:	b538      	push	{r3, r4, r5, lr}
 80205d6:	4d06      	ldr	r5, [pc, #24]	; (80205f0 <_sbrk_r+0x1c>)
 80205d8:	2300      	movs	r3, #0
 80205da:	4604      	mov	r4, r0
 80205dc:	4608      	mov	r0, r1
 80205de:	602b      	str	r3, [r5, #0]
 80205e0:	f006 f8fc 	bl	80267dc <_sbrk>
 80205e4:	1c43      	adds	r3, r0, #1
 80205e6:	d102      	bne.n	80205ee <_sbrk_r+0x1a>
 80205e8:	682b      	ldr	r3, [r5, #0]
 80205ea:	b103      	cbz	r3, 80205ee <_sbrk_r+0x1a>
 80205ec:	6023      	str	r3, [r4, #0]
 80205ee:	bd38      	pop	{r3, r4, r5, pc}
 80205f0:	2000f584 	.word	0x2000f584

080205f4 <nanf>:
 80205f4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80205fc <nanf+0x8>
 80205f8:	4770      	bx	lr
 80205fa:	bf00      	nop
 80205fc:	7fc00000 	.word	0x7fc00000

08020600 <sniprintf>:
 8020600:	b40c      	push	{r2, r3}
 8020602:	b530      	push	{r4, r5, lr}
 8020604:	4b17      	ldr	r3, [pc, #92]	; (8020664 <sniprintf+0x64>)
 8020606:	1e0c      	subs	r4, r1, #0
 8020608:	681d      	ldr	r5, [r3, #0]
 802060a:	b09d      	sub	sp, #116	; 0x74
 802060c:	da08      	bge.n	8020620 <sniprintf+0x20>
 802060e:	238b      	movs	r3, #139	; 0x8b
 8020610:	602b      	str	r3, [r5, #0]
 8020612:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8020616:	b01d      	add	sp, #116	; 0x74
 8020618:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802061c:	b002      	add	sp, #8
 802061e:	4770      	bx	lr
 8020620:	f44f 7302 	mov.w	r3, #520	; 0x208
 8020624:	f8ad 3014 	strh.w	r3, [sp, #20]
 8020628:	bf14      	ite	ne
 802062a:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 802062e:	4623      	moveq	r3, r4
 8020630:	9304      	str	r3, [sp, #16]
 8020632:	9307      	str	r3, [sp, #28]
 8020634:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8020638:	9002      	str	r0, [sp, #8]
 802063a:	9006      	str	r0, [sp, #24]
 802063c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8020640:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020642:	ab21      	add	r3, sp, #132	; 0x84
 8020644:	a902      	add	r1, sp, #8
 8020646:	4628      	mov	r0, r5
 8020648:	9301      	str	r3, [sp, #4]
 802064a:	f002 ffaf 	bl	80235ac <_svfiprintf_r>
 802064e:	1c43      	adds	r3, r0, #1
 8020650:	bfbc      	itt	lt
 8020652:	238b      	movlt	r3, #139	; 0x8b
 8020654:	602b      	strlt	r3, [r5, #0]
 8020656:	2c00      	cmp	r4, #0
 8020658:	d0dd      	beq.n	8020616 <sniprintf+0x16>
 802065a:	9b02      	ldr	r3, [sp, #8]
 802065c:	2200      	movs	r2, #0
 802065e:	701a      	strb	r2, [r3, #0]
 8020660:	e7d9      	b.n	8020616 <sniprintf+0x16>
 8020662:	bf00      	nop
 8020664:	20000150 	.word	0x20000150

08020668 <siprintf>:
 8020668:	b40e      	push	{r1, r2, r3}
 802066a:	b500      	push	{lr}
 802066c:	b09c      	sub	sp, #112	; 0x70
 802066e:	ab1d      	add	r3, sp, #116	; 0x74
 8020670:	9002      	str	r0, [sp, #8]
 8020672:	9006      	str	r0, [sp, #24]
 8020674:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8020678:	4809      	ldr	r0, [pc, #36]	; (80206a0 <siprintf+0x38>)
 802067a:	9107      	str	r1, [sp, #28]
 802067c:	9104      	str	r1, [sp, #16]
 802067e:	4909      	ldr	r1, [pc, #36]	; (80206a4 <siprintf+0x3c>)
 8020680:	f853 2b04 	ldr.w	r2, [r3], #4
 8020684:	9105      	str	r1, [sp, #20]
 8020686:	6800      	ldr	r0, [r0, #0]
 8020688:	9301      	str	r3, [sp, #4]
 802068a:	a902      	add	r1, sp, #8
 802068c:	f002 ff8e 	bl	80235ac <_svfiprintf_r>
 8020690:	9b02      	ldr	r3, [sp, #8]
 8020692:	2200      	movs	r2, #0
 8020694:	701a      	strb	r2, [r3, #0]
 8020696:	b01c      	add	sp, #112	; 0x70
 8020698:	f85d eb04 	ldr.w	lr, [sp], #4
 802069c:	b003      	add	sp, #12
 802069e:	4770      	bx	lr
 80206a0:	20000150 	.word	0x20000150
 80206a4:	ffff0208 	.word	0xffff0208

080206a8 <__sread>:
 80206a8:	b510      	push	{r4, lr}
 80206aa:	460c      	mov	r4, r1
 80206ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80206b0:	f003 f87c 	bl	80237ac <_read_r>
 80206b4:	2800      	cmp	r0, #0
 80206b6:	bfab      	itete	ge
 80206b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80206ba:	89a3      	ldrhlt	r3, [r4, #12]
 80206bc:	181b      	addge	r3, r3, r0
 80206be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80206c2:	bfac      	ite	ge
 80206c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80206c6:	81a3      	strhlt	r3, [r4, #12]
 80206c8:	bd10      	pop	{r4, pc}

080206ca <__swrite>:
 80206ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80206ce:	461f      	mov	r7, r3
 80206d0:	898b      	ldrh	r3, [r1, #12]
 80206d2:	05db      	lsls	r3, r3, #23
 80206d4:	4605      	mov	r5, r0
 80206d6:	460c      	mov	r4, r1
 80206d8:	4616      	mov	r6, r2
 80206da:	d505      	bpl.n	80206e8 <__swrite+0x1e>
 80206dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80206e0:	2302      	movs	r3, #2
 80206e2:	2200      	movs	r2, #0
 80206e4:	f002 f9aa 	bl	8022a3c <_lseek_r>
 80206e8:	89a3      	ldrh	r3, [r4, #12]
 80206ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80206ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80206f2:	81a3      	strh	r3, [r4, #12]
 80206f4:	4632      	mov	r2, r6
 80206f6:	463b      	mov	r3, r7
 80206f8:	4628      	mov	r0, r5
 80206fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80206fe:	f000 bec3 	b.w	8021488 <_write_r>

08020702 <__sseek>:
 8020702:	b510      	push	{r4, lr}
 8020704:	460c      	mov	r4, r1
 8020706:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802070a:	f002 f997 	bl	8022a3c <_lseek_r>
 802070e:	1c43      	adds	r3, r0, #1
 8020710:	89a3      	ldrh	r3, [r4, #12]
 8020712:	bf15      	itete	ne
 8020714:	6560      	strne	r0, [r4, #84]	; 0x54
 8020716:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802071a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802071e:	81a3      	strheq	r3, [r4, #12]
 8020720:	bf18      	it	ne
 8020722:	81a3      	strhne	r3, [r4, #12]
 8020724:	bd10      	pop	{r4, pc}

08020726 <__sclose>:
 8020726:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802072a:	f000 bebf 	b.w	80214ac <_close_r>

0802072e <sulp>:
 802072e:	b570      	push	{r4, r5, r6, lr}
 8020730:	4604      	mov	r4, r0
 8020732:	460d      	mov	r5, r1
 8020734:	ec45 4b10 	vmov	d0, r4, r5
 8020738:	4616      	mov	r6, r2
 802073a:	f002 fd29 	bl	8023190 <__ulp>
 802073e:	ec51 0b10 	vmov	r0, r1, d0
 8020742:	b17e      	cbz	r6, 8020764 <sulp+0x36>
 8020744:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8020748:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 802074c:	2b00      	cmp	r3, #0
 802074e:	dd09      	ble.n	8020764 <sulp+0x36>
 8020750:	051b      	lsls	r3, r3, #20
 8020752:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8020756:	2400      	movs	r4, #0
 8020758:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 802075c:	4622      	mov	r2, r4
 802075e:	462b      	mov	r3, r5
 8020760:	f7df ff4a 	bl	80005f8 <__aeabi_dmul>
 8020764:	bd70      	pop	{r4, r5, r6, pc}
	...

08020768 <_strtod_l>:
 8020768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802076c:	ed2d 8b02 	vpush	{d8}
 8020770:	b09d      	sub	sp, #116	; 0x74
 8020772:	461f      	mov	r7, r3
 8020774:	2300      	movs	r3, #0
 8020776:	9318      	str	r3, [sp, #96]	; 0x60
 8020778:	4ba2      	ldr	r3, [pc, #648]	; (8020a04 <_strtod_l+0x29c>)
 802077a:	9213      	str	r2, [sp, #76]	; 0x4c
 802077c:	681b      	ldr	r3, [r3, #0]
 802077e:	9305      	str	r3, [sp, #20]
 8020780:	4604      	mov	r4, r0
 8020782:	4618      	mov	r0, r3
 8020784:	4688      	mov	r8, r1
 8020786:	f7df fd23 	bl	80001d0 <strlen>
 802078a:	f04f 0a00 	mov.w	sl, #0
 802078e:	4605      	mov	r5, r0
 8020790:	f04f 0b00 	mov.w	fp, #0
 8020794:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8020798:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802079a:	781a      	ldrb	r2, [r3, #0]
 802079c:	2a2b      	cmp	r2, #43	; 0x2b
 802079e:	d04e      	beq.n	802083e <_strtod_l+0xd6>
 80207a0:	d83b      	bhi.n	802081a <_strtod_l+0xb2>
 80207a2:	2a0d      	cmp	r2, #13
 80207a4:	d834      	bhi.n	8020810 <_strtod_l+0xa8>
 80207a6:	2a08      	cmp	r2, #8
 80207a8:	d834      	bhi.n	8020814 <_strtod_l+0xac>
 80207aa:	2a00      	cmp	r2, #0
 80207ac:	d03e      	beq.n	802082c <_strtod_l+0xc4>
 80207ae:	2300      	movs	r3, #0
 80207b0:	930a      	str	r3, [sp, #40]	; 0x28
 80207b2:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80207b4:	7833      	ldrb	r3, [r6, #0]
 80207b6:	2b30      	cmp	r3, #48	; 0x30
 80207b8:	f040 80b0 	bne.w	802091c <_strtod_l+0x1b4>
 80207bc:	7873      	ldrb	r3, [r6, #1]
 80207be:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80207c2:	2b58      	cmp	r3, #88	; 0x58
 80207c4:	d168      	bne.n	8020898 <_strtod_l+0x130>
 80207c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207c8:	9301      	str	r3, [sp, #4]
 80207ca:	ab18      	add	r3, sp, #96	; 0x60
 80207cc:	9702      	str	r7, [sp, #8]
 80207ce:	9300      	str	r3, [sp, #0]
 80207d0:	4a8d      	ldr	r2, [pc, #564]	; (8020a08 <_strtod_l+0x2a0>)
 80207d2:	ab19      	add	r3, sp, #100	; 0x64
 80207d4:	a917      	add	r1, sp, #92	; 0x5c
 80207d6:	4620      	mov	r0, r4
 80207d8:	f001 fe24 	bl	8022424 <__gethex>
 80207dc:	f010 0707 	ands.w	r7, r0, #7
 80207e0:	4605      	mov	r5, r0
 80207e2:	d005      	beq.n	80207f0 <_strtod_l+0x88>
 80207e4:	2f06      	cmp	r7, #6
 80207e6:	d12c      	bne.n	8020842 <_strtod_l+0xda>
 80207e8:	3601      	adds	r6, #1
 80207ea:	2300      	movs	r3, #0
 80207ec:	9617      	str	r6, [sp, #92]	; 0x5c
 80207ee:	930a      	str	r3, [sp, #40]	; 0x28
 80207f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80207f2:	2b00      	cmp	r3, #0
 80207f4:	f040 8590 	bne.w	8021318 <_strtod_l+0xbb0>
 80207f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207fa:	b1eb      	cbz	r3, 8020838 <_strtod_l+0xd0>
 80207fc:	4652      	mov	r2, sl
 80207fe:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8020802:	ec43 2b10 	vmov	d0, r2, r3
 8020806:	b01d      	add	sp, #116	; 0x74
 8020808:	ecbd 8b02 	vpop	{d8}
 802080c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020810:	2a20      	cmp	r2, #32
 8020812:	d1cc      	bne.n	80207ae <_strtod_l+0x46>
 8020814:	3301      	adds	r3, #1
 8020816:	9317      	str	r3, [sp, #92]	; 0x5c
 8020818:	e7be      	b.n	8020798 <_strtod_l+0x30>
 802081a:	2a2d      	cmp	r2, #45	; 0x2d
 802081c:	d1c7      	bne.n	80207ae <_strtod_l+0x46>
 802081e:	2201      	movs	r2, #1
 8020820:	920a      	str	r2, [sp, #40]	; 0x28
 8020822:	1c5a      	adds	r2, r3, #1
 8020824:	9217      	str	r2, [sp, #92]	; 0x5c
 8020826:	785b      	ldrb	r3, [r3, #1]
 8020828:	2b00      	cmp	r3, #0
 802082a:	d1c2      	bne.n	80207b2 <_strtod_l+0x4a>
 802082c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802082e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8020832:	2b00      	cmp	r3, #0
 8020834:	f040 856e 	bne.w	8021314 <_strtod_l+0xbac>
 8020838:	4652      	mov	r2, sl
 802083a:	465b      	mov	r3, fp
 802083c:	e7e1      	b.n	8020802 <_strtod_l+0x9a>
 802083e:	2200      	movs	r2, #0
 8020840:	e7ee      	b.n	8020820 <_strtod_l+0xb8>
 8020842:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020844:	b13a      	cbz	r2, 8020856 <_strtod_l+0xee>
 8020846:	2135      	movs	r1, #53	; 0x35
 8020848:	a81a      	add	r0, sp, #104	; 0x68
 802084a:	f002 fdac 	bl	80233a6 <__copybits>
 802084e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020850:	4620      	mov	r0, r4
 8020852:	f002 f96b 	bl	8022b2c <_Bfree>
 8020856:	3f01      	subs	r7, #1
 8020858:	2f04      	cmp	r7, #4
 802085a:	d806      	bhi.n	802086a <_strtod_l+0x102>
 802085c:	e8df f007 	tbb	[pc, r7]
 8020860:	1714030a 	.word	0x1714030a
 8020864:	0a          	.byte	0x0a
 8020865:	00          	.byte	0x00
 8020866:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 802086a:	0728      	lsls	r0, r5, #28
 802086c:	d5c0      	bpl.n	80207f0 <_strtod_l+0x88>
 802086e:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8020872:	e7bd      	b.n	80207f0 <_strtod_l+0x88>
 8020874:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8020878:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802087a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802087e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8020882:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8020886:	e7f0      	b.n	802086a <_strtod_l+0x102>
 8020888:	f8df b180 	ldr.w	fp, [pc, #384]	; 8020a0c <_strtod_l+0x2a4>
 802088c:	e7ed      	b.n	802086a <_strtod_l+0x102>
 802088e:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8020892:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8020896:	e7e8      	b.n	802086a <_strtod_l+0x102>
 8020898:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802089a:	1c5a      	adds	r2, r3, #1
 802089c:	9217      	str	r2, [sp, #92]	; 0x5c
 802089e:	785b      	ldrb	r3, [r3, #1]
 80208a0:	2b30      	cmp	r3, #48	; 0x30
 80208a2:	d0f9      	beq.n	8020898 <_strtod_l+0x130>
 80208a4:	2b00      	cmp	r3, #0
 80208a6:	d0a3      	beq.n	80207f0 <_strtod_l+0x88>
 80208a8:	2301      	movs	r3, #1
 80208aa:	f04f 0900 	mov.w	r9, #0
 80208ae:	9304      	str	r3, [sp, #16]
 80208b0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80208b2:	9308      	str	r3, [sp, #32]
 80208b4:	f8cd 901c 	str.w	r9, [sp, #28]
 80208b8:	464f      	mov	r7, r9
 80208ba:	220a      	movs	r2, #10
 80208bc:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80208be:	7806      	ldrb	r6, [r0, #0]
 80208c0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80208c4:	b2d9      	uxtb	r1, r3
 80208c6:	2909      	cmp	r1, #9
 80208c8:	d92a      	bls.n	8020920 <_strtod_l+0x1b8>
 80208ca:	9905      	ldr	r1, [sp, #20]
 80208cc:	462a      	mov	r2, r5
 80208ce:	f002 ff87 	bl	80237e0 <strncmp>
 80208d2:	b398      	cbz	r0, 802093c <_strtod_l+0x1d4>
 80208d4:	2000      	movs	r0, #0
 80208d6:	4632      	mov	r2, r6
 80208d8:	463d      	mov	r5, r7
 80208da:	9005      	str	r0, [sp, #20]
 80208dc:	4603      	mov	r3, r0
 80208de:	2a65      	cmp	r2, #101	; 0x65
 80208e0:	d001      	beq.n	80208e6 <_strtod_l+0x17e>
 80208e2:	2a45      	cmp	r2, #69	; 0x45
 80208e4:	d118      	bne.n	8020918 <_strtod_l+0x1b0>
 80208e6:	b91d      	cbnz	r5, 80208f0 <_strtod_l+0x188>
 80208e8:	9a04      	ldr	r2, [sp, #16]
 80208ea:	4302      	orrs	r2, r0
 80208ec:	d09e      	beq.n	802082c <_strtod_l+0xc4>
 80208ee:	2500      	movs	r5, #0
 80208f0:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 80208f4:	f108 0201 	add.w	r2, r8, #1
 80208f8:	9217      	str	r2, [sp, #92]	; 0x5c
 80208fa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80208fe:	2a2b      	cmp	r2, #43	; 0x2b
 8020900:	d075      	beq.n	80209ee <_strtod_l+0x286>
 8020902:	2a2d      	cmp	r2, #45	; 0x2d
 8020904:	d07b      	beq.n	80209fe <_strtod_l+0x296>
 8020906:	f04f 0c00 	mov.w	ip, #0
 802090a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 802090e:	2909      	cmp	r1, #9
 8020910:	f240 8082 	bls.w	8020a18 <_strtod_l+0x2b0>
 8020914:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8020918:	2600      	movs	r6, #0
 802091a:	e09d      	b.n	8020a58 <_strtod_l+0x2f0>
 802091c:	2300      	movs	r3, #0
 802091e:	e7c4      	b.n	80208aa <_strtod_l+0x142>
 8020920:	2f08      	cmp	r7, #8
 8020922:	bfd8      	it	le
 8020924:	9907      	ldrle	r1, [sp, #28]
 8020926:	f100 0001 	add.w	r0, r0, #1
 802092a:	bfda      	itte	le
 802092c:	fb02 3301 	mlale	r3, r2, r1, r3
 8020930:	9307      	strle	r3, [sp, #28]
 8020932:	fb02 3909 	mlagt	r9, r2, r9, r3
 8020936:	3701      	adds	r7, #1
 8020938:	9017      	str	r0, [sp, #92]	; 0x5c
 802093a:	e7bf      	b.n	80208bc <_strtod_l+0x154>
 802093c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802093e:	195a      	adds	r2, r3, r5
 8020940:	9217      	str	r2, [sp, #92]	; 0x5c
 8020942:	5d5a      	ldrb	r2, [r3, r5]
 8020944:	2f00      	cmp	r7, #0
 8020946:	d037      	beq.n	80209b8 <_strtod_l+0x250>
 8020948:	9005      	str	r0, [sp, #20]
 802094a:	463d      	mov	r5, r7
 802094c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8020950:	2b09      	cmp	r3, #9
 8020952:	d912      	bls.n	802097a <_strtod_l+0x212>
 8020954:	2301      	movs	r3, #1
 8020956:	e7c2      	b.n	80208de <_strtod_l+0x176>
 8020958:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802095a:	1c5a      	adds	r2, r3, #1
 802095c:	9217      	str	r2, [sp, #92]	; 0x5c
 802095e:	785a      	ldrb	r2, [r3, #1]
 8020960:	3001      	adds	r0, #1
 8020962:	2a30      	cmp	r2, #48	; 0x30
 8020964:	d0f8      	beq.n	8020958 <_strtod_l+0x1f0>
 8020966:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 802096a:	2b08      	cmp	r3, #8
 802096c:	f200 84d9 	bhi.w	8021322 <_strtod_l+0xbba>
 8020970:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020972:	9005      	str	r0, [sp, #20]
 8020974:	2000      	movs	r0, #0
 8020976:	9308      	str	r3, [sp, #32]
 8020978:	4605      	mov	r5, r0
 802097a:	3a30      	subs	r2, #48	; 0x30
 802097c:	f100 0301 	add.w	r3, r0, #1
 8020980:	d014      	beq.n	80209ac <_strtod_l+0x244>
 8020982:	9905      	ldr	r1, [sp, #20]
 8020984:	4419      	add	r1, r3
 8020986:	9105      	str	r1, [sp, #20]
 8020988:	462b      	mov	r3, r5
 802098a:	eb00 0e05 	add.w	lr, r0, r5
 802098e:	210a      	movs	r1, #10
 8020990:	4573      	cmp	r3, lr
 8020992:	d113      	bne.n	80209bc <_strtod_l+0x254>
 8020994:	182b      	adds	r3, r5, r0
 8020996:	2b08      	cmp	r3, #8
 8020998:	f105 0501 	add.w	r5, r5, #1
 802099c:	4405      	add	r5, r0
 802099e:	dc1c      	bgt.n	80209da <_strtod_l+0x272>
 80209a0:	9907      	ldr	r1, [sp, #28]
 80209a2:	230a      	movs	r3, #10
 80209a4:	fb03 2301 	mla	r3, r3, r1, r2
 80209a8:	9307      	str	r3, [sp, #28]
 80209aa:	2300      	movs	r3, #0
 80209ac:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80209ae:	1c51      	adds	r1, r2, #1
 80209b0:	9117      	str	r1, [sp, #92]	; 0x5c
 80209b2:	7852      	ldrb	r2, [r2, #1]
 80209b4:	4618      	mov	r0, r3
 80209b6:	e7c9      	b.n	802094c <_strtod_l+0x1e4>
 80209b8:	4638      	mov	r0, r7
 80209ba:	e7d2      	b.n	8020962 <_strtod_l+0x1fa>
 80209bc:	2b08      	cmp	r3, #8
 80209be:	dc04      	bgt.n	80209ca <_strtod_l+0x262>
 80209c0:	9e07      	ldr	r6, [sp, #28]
 80209c2:	434e      	muls	r6, r1
 80209c4:	9607      	str	r6, [sp, #28]
 80209c6:	3301      	adds	r3, #1
 80209c8:	e7e2      	b.n	8020990 <_strtod_l+0x228>
 80209ca:	f103 0c01 	add.w	ip, r3, #1
 80209ce:	f1bc 0f10 	cmp.w	ip, #16
 80209d2:	bfd8      	it	le
 80209d4:	fb01 f909 	mulle.w	r9, r1, r9
 80209d8:	e7f5      	b.n	80209c6 <_strtod_l+0x25e>
 80209da:	2d10      	cmp	r5, #16
 80209dc:	bfdc      	itt	le
 80209de:	230a      	movle	r3, #10
 80209e0:	fb03 2909 	mlale	r9, r3, r9, r2
 80209e4:	e7e1      	b.n	80209aa <_strtod_l+0x242>
 80209e6:	2300      	movs	r3, #0
 80209e8:	9305      	str	r3, [sp, #20]
 80209ea:	2301      	movs	r3, #1
 80209ec:	e77c      	b.n	80208e8 <_strtod_l+0x180>
 80209ee:	f04f 0c00 	mov.w	ip, #0
 80209f2:	f108 0202 	add.w	r2, r8, #2
 80209f6:	9217      	str	r2, [sp, #92]	; 0x5c
 80209f8:	f898 2002 	ldrb.w	r2, [r8, #2]
 80209fc:	e785      	b.n	802090a <_strtod_l+0x1a2>
 80209fe:	f04f 0c01 	mov.w	ip, #1
 8020a02:	e7f6      	b.n	80209f2 <_strtod_l+0x28a>
 8020a04:	08027310 	.word	0x08027310
 8020a08:	080270c8 	.word	0x080270c8
 8020a0c:	7ff00000 	.word	0x7ff00000
 8020a10:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8020a12:	1c51      	adds	r1, r2, #1
 8020a14:	9117      	str	r1, [sp, #92]	; 0x5c
 8020a16:	7852      	ldrb	r2, [r2, #1]
 8020a18:	2a30      	cmp	r2, #48	; 0x30
 8020a1a:	d0f9      	beq.n	8020a10 <_strtod_l+0x2a8>
 8020a1c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8020a20:	2908      	cmp	r1, #8
 8020a22:	f63f af79 	bhi.w	8020918 <_strtod_l+0x1b0>
 8020a26:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8020a2a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8020a2c:	9206      	str	r2, [sp, #24]
 8020a2e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8020a30:	1c51      	adds	r1, r2, #1
 8020a32:	9117      	str	r1, [sp, #92]	; 0x5c
 8020a34:	7852      	ldrb	r2, [r2, #1]
 8020a36:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8020a3a:	2e09      	cmp	r6, #9
 8020a3c:	d937      	bls.n	8020aae <_strtod_l+0x346>
 8020a3e:	9e06      	ldr	r6, [sp, #24]
 8020a40:	1b89      	subs	r1, r1, r6
 8020a42:	2908      	cmp	r1, #8
 8020a44:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8020a48:	dc02      	bgt.n	8020a50 <_strtod_l+0x2e8>
 8020a4a:	4576      	cmp	r6, lr
 8020a4c:	bfa8      	it	ge
 8020a4e:	4676      	movge	r6, lr
 8020a50:	f1bc 0f00 	cmp.w	ip, #0
 8020a54:	d000      	beq.n	8020a58 <_strtod_l+0x2f0>
 8020a56:	4276      	negs	r6, r6
 8020a58:	2d00      	cmp	r5, #0
 8020a5a:	d14d      	bne.n	8020af8 <_strtod_l+0x390>
 8020a5c:	9904      	ldr	r1, [sp, #16]
 8020a5e:	4301      	orrs	r1, r0
 8020a60:	f47f aec6 	bne.w	80207f0 <_strtod_l+0x88>
 8020a64:	2b00      	cmp	r3, #0
 8020a66:	f47f aee1 	bne.w	802082c <_strtod_l+0xc4>
 8020a6a:	2a69      	cmp	r2, #105	; 0x69
 8020a6c:	d027      	beq.n	8020abe <_strtod_l+0x356>
 8020a6e:	dc24      	bgt.n	8020aba <_strtod_l+0x352>
 8020a70:	2a49      	cmp	r2, #73	; 0x49
 8020a72:	d024      	beq.n	8020abe <_strtod_l+0x356>
 8020a74:	2a4e      	cmp	r2, #78	; 0x4e
 8020a76:	f47f aed9 	bne.w	802082c <_strtod_l+0xc4>
 8020a7a:	499f      	ldr	r1, [pc, #636]	; (8020cf8 <_strtod_l+0x590>)
 8020a7c:	a817      	add	r0, sp, #92	; 0x5c
 8020a7e:	f001 ff29 	bl	80228d4 <__match>
 8020a82:	2800      	cmp	r0, #0
 8020a84:	f43f aed2 	beq.w	802082c <_strtod_l+0xc4>
 8020a88:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020a8a:	781b      	ldrb	r3, [r3, #0]
 8020a8c:	2b28      	cmp	r3, #40	; 0x28
 8020a8e:	d12d      	bne.n	8020aec <_strtod_l+0x384>
 8020a90:	499a      	ldr	r1, [pc, #616]	; (8020cfc <_strtod_l+0x594>)
 8020a92:	aa1a      	add	r2, sp, #104	; 0x68
 8020a94:	a817      	add	r0, sp, #92	; 0x5c
 8020a96:	f001 ff31 	bl	80228fc <__hexnan>
 8020a9a:	2805      	cmp	r0, #5
 8020a9c:	d126      	bne.n	8020aec <_strtod_l+0x384>
 8020a9e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020aa0:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8020aa4:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8020aa8:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8020aac:	e6a0      	b.n	80207f0 <_strtod_l+0x88>
 8020aae:	210a      	movs	r1, #10
 8020ab0:	fb01 2e0e 	mla	lr, r1, lr, r2
 8020ab4:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8020ab8:	e7b9      	b.n	8020a2e <_strtod_l+0x2c6>
 8020aba:	2a6e      	cmp	r2, #110	; 0x6e
 8020abc:	e7db      	b.n	8020a76 <_strtod_l+0x30e>
 8020abe:	4990      	ldr	r1, [pc, #576]	; (8020d00 <_strtod_l+0x598>)
 8020ac0:	a817      	add	r0, sp, #92	; 0x5c
 8020ac2:	f001 ff07 	bl	80228d4 <__match>
 8020ac6:	2800      	cmp	r0, #0
 8020ac8:	f43f aeb0 	beq.w	802082c <_strtod_l+0xc4>
 8020acc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020ace:	498d      	ldr	r1, [pc, #564]	; (8020d04 <_strtod_l+0x59c>)
 8020ad0:	3b01      	subs	r3, #1
 8020ad2:	a817      	add	r0, sp, #92	; 0x5c
 8020ad4:	9317      	str	r3, [sp, #92]	; 0x5c
 8020ad6:	f001 fefd 	bl	80228d4 <__match>
 8020ada:	b910      	cbnz	r0, 8020ae2 <_strtod_l+0x37a>
 8020adc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020ade:	3301      	adds	r3, #1
 8020ae0:	9317      	str	r3, [sp, #92]	; 0x5c
 8020ae2:	f8df b230 	ldr.w	fp, [pc, #560]	; 8020d14 <_strtod_l+0x5ac>
 8020ae6:	f04f 0a00 	mov.w	sl, #0
 8020aea:	e681      	b.n	80207f0 <_strtod_l+0x88>
 8020aec:	4886      	ldr	r0, [pc, #536]	; (8020d08 <_strtod_l+0x5a0>)
 8020aee:	f002 fe6f 	bl	80237d0 <nan>
 8020af2:	ec5b ab10 	vmov	sl, fp, d0
 8020af6:	e67b      	b.n	80207f0 <_strtod_l+0x88>
 8020af8:	9b05      	ldr	r3, [sp, #20]
 8020afa:	9807      	ldr	r0, [sp, #28]
 8020afc:	1af3      	subs	r3, r6, r3
 8020afe:	2f00      	cmp	r7, #0
 8020b00:	bf08      	it	eq
 8020b02:	462f      	moveq	r7, r5
 8020b04:	2d10      	cmp	r5, #16
 8020b06:	9306      	str	r3, [sp, #24]
 8020b08:	46a8      	mov	r8, r5
 8020b0a:	bfa8      	it	ge
 8020b0c:	f04f 0810 	movge.w	r8, #16
 8020b10:	f7df fcf8 	bl	8000504 <__aeabi_ui2d>
 8020b14:	2d09      	cmp	r5, #9
 8020b16:	4682      	mov	sl, r0
 8020b18:	468b      	mov	fp, r1
 8020b1a:	dd13      	ble.n	8020b44 <_strtod_l+0x3dc>
 8020b1c:	4b7b      	ldr	r3, [pc, #492]	; (8020d0c <_strtod_l+0x5a4>)
 8020b1e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8020b22:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8020b26:	f7df fd67 	bl	80005f8 <__aeabi_dmul>
 8020b2a:	4682      	mov	sl, r0
 8020b2c:	4648      	mov	r0, r9
 8020b2e:	468b      	mov	fp, r1
 8020b30:	f7df fce8 	bl	8000504 <__aeabi_ui2d>
 8020b34:	4602      	mov	r2, r0
 8020b36:	460b      	mov	r3, r1
 8020b38:	4650      	mov	r0, sl
 8020b3a:	4659      	mov	r1, fp
 8020b3c:	f7df fba6 	bl	800028c <__adddf3>
 8020b40:	4682      	mov	sl, r0
 8020b42:	468b      	mov	fp, r1
 8020b44:	2d0f      	cmp	r5, #15
 8020b46:	dc38      	bgt.n	8020bba <_strtod_l+0x452>
 8020b48:	9b06      	ldr	r3, [sp, #24]
 8020b4a:	2b00      	cmp	r3, #0
 8020b4c:	f43f ae50 	beq.w	80207f0 <_strtod_l+0x88>
 8020b50:	dd24      	ble.n	8020b9c <_strtod_l+0x434>
 8020b52:	2b16      	cmp	r3, #22
 8020b54:	dc0b      	bgt.n	8020b6e <_strtod_l+0x406>
 8020b56:	496d      	ldr	r1, [pc, #436]	; (8020d0c <_strtod_l+0x5a4>)
 8020b58:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8020b5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020b60:	4652      	mov	r2, sl
 8020b62:	465b      	mov	r3, fp
 8020b64:	f7df fd48 	bl	80005f8 <__aeabi_dmul>
 8020b68:	4682      	mov	sl, r0
 8020b6a:	468b      	mov	fp, r1
 8020b6c:	e640      	b.n	80207f0 <_strtod_l+0x88>
 8020b6e:	9a06      	ldr	r2, [sp, #24]
 8020b70:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8020b74:	4293      	cmp	r3, r2
 8020b76:	db20      	blt.n	8020bba <_strtod_l+0x452>
 8020b78:	4c64      	ldr	r4, [pc, #400]	; (8020d0c <_strtod_l+0x5a4>)
 8020b7a:	f1c5 050f 	rsb	r5, r5, #15
 8020b7e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8020b82:	4652      	mov	r2, sl
 8020b84:	465b      	mov	r3, fp
 8020b86:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020b8a:	f7df fd35 	bl	80005f8 <__aeabi_dmul>
 8020b8e:	9b06      	ldr	r3, [sp, #24]
 8020b90:	1b5d      	subs	r5, r3, r5
 8020b92:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8020b96:	e9d4 2300 	ldrd	r2, r3, [r4]
 8020b9a:	e7e3      	b.n	8020b64 <_strtod_l+0x3fc>
 8020b9c:	9b06      	ldr	r3, [sp, #24]
 8020b9e:	3316      	adds	r3, #22
 8020ba0:	db0b      	blt.n	8020bba <_strtod_l+0x452>
 8020ba2:	9b05      	ldr	r3, [sp, #20]
 8020ba4:	1b9e      	subs	r6, r3, r6
 8020ba6:	4b59      	ldr	r3, [pc, #356]	; (8020d0c <_strtod_l+0x5a4>)
 8020ba8:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8020bac:	e9d6 2300 	ldrd	r2, r3, [r6]
 8020bb0:	4650      	mov	r0, sl
 8020bb2:	4659      	mov	r1, fp
 8020bb4:	f7df fe4a 	bl	800084c <__aeabi_ddiv>
 8020bb8:	e7d6      	b.n	8020b68 <_strtod_l+0x400>
 8020bba:	9b06      	ldr	r3, [sp, #24]
 8020bbc:	eba5 0808 	sub.w	r8, r5, r8
 8020bc0:	4498      	add	r8, r3
 8020bc2:	f1b8 0f00 	cmp.w	r8, #0
 8020bc6:	dd74      	ble.n	8020cb2 <_strtod_l+0x54a>
 8020bc8:	f018 030f 	ands.w	r3, r8, #15
 8020bcc:	d00a      	beq.n	8020be4 <_strtod_l+0x47c>
 8020bce:	494f      	ldr	r1, [pc, #316]	; (8020d0c <_strtod_l+0x5a4>)
 8020bd0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8020bd4:	4652      	mov	r2, sl
 8020bd6:	465b      	mov	r3, fp
 8020bd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020bdc:	f7df fd0c 	bl	80005f8 <__aeabi_dmul>
 8020be0:	4682      	mov	sl, r0
 8020be2:	468b      	mov	fp, r1
 8020be4:	f038 080f 	bics.w	r8, r8, #15
 8020be8:	d04f      	beq.n	8020c8a <_strtod_l+0x522>
 8020bea:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8020bee:	dd22      	ble.n	8020c36 <_strtod_l+0x4ce>
 8020bf0:	2500      	movs	r5, #0
 8020bf2:	462e      	mov	r6, r5
 8020bf4:	9507      	str	r5, [sp, #28]
 8020bf6:	9505      	str	r5, [sp, #20]
 8020bf8:	2322      	movs	r3, #34	; 0x22
 8020bfa:	f8df b118 	ldr.w	fp, [pc, #280]	; 8020d14 <_strtod_l+0x5ac>
 8020bfe:	6023      	str	r3, [r4, #0]
 8020c00:	f04f 0a00 	mov.w	sl, #0
 8020c04:	9b07      	ldr	r3, [sp, #28]
 8020c06:	2b00      	cmp	r3, #0
 8020c08:	f43f adf2 	beq.w	80207f0 <_strtod_l+0x88>
 8020c0c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020c0e:	4620      	mov	r0, r4
 8020c10:	f001 ff8c 	bl	8022b2c <_Bfree>
 8020c14:	9905      	ldr	r1, [sp, #20]
 8020c16:	4620      	mov	r0, r4
 8020c18:	f001 ff88 	bl	8022b2c <_Bfree>
 8020c1c:	4631      	mov	r1, r6
 8020c1e:	4620      	mov	r0, r4
 8020c20:	f001 ff84 	bl	8022b2c <_Bfree>
 8020c24:	9907      	ldr	r1, [sp, #28]
 8020c26:	4620      	mov	r0, r4
 8020c28:	f001 ff80 	bl	8022b2c <_Bfree>
 8020c2c:	4629      	mov	r1, r5
 8020c2e:	4620      	mov	r0, r4
 8020c30:	f001 ff7c 	bl	8022b2c <_Bfree>
 8020c34:	e5dc      	b.n	80207f0 <_strtod_l+0x88>
 8020c36:	4b36      	ldr	r3, [pc, #216]	; (8020d10 <_strtod_l+0x5a8>)
 8020c38:	9304      	str	r3, [sp, #16]
 8020c3a:	2300      	movs	r3, #0
 8020c3c:	ea4f 1828 	mov.w	r8, r8, asr #4
 8020c40:	4650      	mov	r0, sl
 8020c42:	4659      	mov	r1, fp
 8020c44:	4699      	mov	r9, r3
 8020c46:	f1b8 0f01 	cmp.w	r8, #1
 8020c4a:	dc21      	bgt.n	8020c90 <_strtod_l+0x528>
 8020c4c:	b10b      	cbz	r3, 8020c52 <_strtod_l+0x4ea>
 8020c4e:	4682      	mov	sl, r0
 8020c50:	468b      	mov	fp, r1
 8020c52:	4b2f      	ldr	r3, [pc, #188]	; (8020d10 <_strtod_l+0x5a8>)
 8020c54:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8020c58:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8020c5c:	4652      	mov	r2, sl
 8020c5e:	465b      	mov	r3, fp
 8020c60:	e9d9 0100 	ldrd	r0, r1, [r9]
 8020c64:	f7df fcc8 	bl	80005f8 <__aeabi_dmul>
 8020c68:	4b2a      	ldr	r3, [pc, #168]	; (8020d14 <_strtod_l+0x5ac>)
 8020c6a:	460a      	mov	r2, r1
 8020c6c:	400b      	ands	r3, r1
 8020c6e:	492a      	ldr	r1, [pc, #168]	; (8020d18 <_strtod_l+0x5b0>)
 8020c70:	428b      	cmp	r3, r1
 8020c72:	4682      	mov	sl, r0
 8020c74:	d8bc      	bhi.n	8020bf0 <_strtod_l+0x488>
 8020c76:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8020c7a:	428b      	cmp	r3, r1
 8020c7c:	bf86      	itte	hi
 8020c7e:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8020d1c <_strtod_l+0x5b4>
 8020c82:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
 8020c86:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8020c8a:	2300      	movs	r3, #0
 8020c8c:	9304      	str	r3, [sp, #16]
 8020c8e:	e084      	b.n	8020d9a <_strtod_l+0x632>
 8020c90:	f018 0f01 	tst.w	r8, #1
 8020c94:	d005      	beq.n	8020ca2 <_strtod_l+0x53a>
 8020c96:	9b04      	ldr	r3, [sp, #16]
 8020c98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020c9c:	f7df fcac 	bl	80005f8 <__aeabi_dmul>
 8020ca0:	2301      	movs	r3, #1
 8020ca2:	9a04      	ldr	r2, [sp, #16]
 8020ca4:	3208      	adds	r2, #8
 8020ca6:	f109 0901 	add.w	r9, r9, #1
 8020caa:	ea4f 0868 	mov.w	r8, r8, asr #1
 8020cae:	9204      	str	r2, [sp, #16]
 8020cb0:	e7c9      	b.n	8020c46 <_strtod_l+0x4de>
 8020cb2:	d0ea      	beq.n	8020c8a <_strtod_l+0x522>
 8020cb4:	f1c8 0800 	rsb	r8, r8, #0
 8020cb8:	f018 020f 	ands.w	r2, r8, #15
 8020cbc:	d00a      	beq.n	8020cd4 <_strtod_l+0x56c>
 8020cbe:	4b13      	ldr	r3, [pc, #76]	; (8020d0c <_strtod_l+0x5a4>)
 8020cc0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8020cc4:	4650      	mov	r0, sl
 8020cc6:	4659      	mov	r1, fp
 8020cc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ccc:	f7df fdbe 	bl	800084c <__aeabi_ddiv>
 8020cd0:	4682      	mov	sl, r0
 8020cd2:	468b      	mov	fp, r1
 8020cd4:	ea5f 1828 	movs.w	r8, r8, asr #4
 8020cd8:	d0d7      	beq.n	8020c8a <_strtod_l+0x522>
 8020cda:	f1b8 0f1f 	cmp.w	r8, #31
 8020cde:	dd1f      	ble.n	8020d20 <_strtod_l+0x5b8>
 8020ce0:	2500      	movs	r5, #0
 8020ce2:	462e      	mov	r6, r5
 8020ce4:	9507      	str	r5, [sp, #28]
 8020ce6:	9505      	str	r5, [sp, #20]
 8020ce8:	2322      	movs	r3, #34	; 0x22
 8020cea:	f04f 0a00 	mov.w	sl, #0
 8020cee:	f04f 0b00 	mov.w	fp, #0
 8020cf2:	6023      	str	r3, [r4, #0]
 8020cf4:	e786      	b.n	8020c04 <_strtod_l+0x49c>
 8020cf6:	bf00      	nop
 8020cf8:	08027099 	.word	0x08027099
 8020cfc:	080270dc 	.word	0x080270dc
 8020d00:	08027091 	.word	0x08027091
 8020d04:	0802721c 	.word	0x0802721c
 8020d08:	080274c8 	.word	0x080274c8
 8020d0c:	080273a8 	.word	0x080273a8
 8020d10:	08027380 	.word	0x08027380
 8020d14:	7ff00000 	.word	0x7ff00000
 8020d18:	7ca00000 	.word	0x7ca00000
 8020d1c:	7fefffff 	.word	0x7fefffff
 8020d20:	f018 0310 	ands.w	r3, r8, #16
 8020d24:	bf18      	it	ne
 8020d26:	236a      	movne	r3, #106	; 0x6a
 8020d28:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 80210d8 <_strtod_l+0x970>
 8020d2c:	9304      	str	r3, [sp, #16]
 8020d2e:	4650      	mov	r0, sl
 8020d30:	4659      	mov	r1, fp
 8020d32:	2300      	movs	r3, #0
 8020d34:	f018 0f01 	tst.w	r8, #1
 8020d38:	d004      	beq.n	8020d44 <_strtod_l+0x5dc>
 8020d3a:	e9d9 2300 	ldrd	r2, r3, [r9]
 8020d3e:	f7df fc5b 	bl	80005f8 <__aeabi_dmul>
 8020d42:	2301      	movs	r3, #1
 8020d44:	ea5f 0868 	movs.w	r8, r8, asr #1
 8020d48:	f109 0908 	add.w	r9, r9, #8
 8020d4c:	d1f2      	bne.n	8020d34 <_strtod_l+0x5cc>
 8020d4e:	b10b      	cbz	r3, 8020d54 <_strtod_l+0x5ec>
 8020d50:	4682      	mov	sl, r0
 8020d52:	468b      	mov	fp, r1
 8020d54:	9b04      	ldr	r3, [sp, #16]
 8020d56:	b1c3      	cbz	r3, 8020d8a <_strtod_l+0x622>
 8020d58:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8020d5c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8020d60:	2b00      	cmp	r3, #0
 8020d62:	4659      	mov	r1, fp
 8020d64:	dd11      	ble.n	8020d8a <_strtod_l+0x622>
 8020d66:	2b1f      	cmp	r3, #31
 8020d68:	f340 8124 	ble.w	8020fb4 <_strtod_l+0x84c>
 8020d6c:	2b34      	cmp	r3, #52	; 0x34
 8020d6e:	bfde      	ittt	le
 8020d70:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8020d74:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 8020d78:	fa03 f202 	lslle.w	r2, r3, r2
 8020d7c:	f04f 0a00 	mov.w	sl, #0
 8020d80:	bfcc      	ite	gt
 8020d82:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8020d86:	ea02 0b01 	andle.w	fp, r2, r1
 8020d8a:	2200      	movs	r2, #0
 8020d8c:	2300      	movs	r3, #0
 8020d8e:	4650      	mov	r0, sl
 8020d90:	4659      	mov	r1, fp
 8020d92:	f7df fe99 	bl	8000ac8 <__aeabi_dcmpeq>
 8020d96:	2800      	cmp	r0, #0
 8020d98:	d1a2      	bne.n	8020ce0 <_strtod_l+0x578>
 8020d9a:	9b07      	ldr	r3, [sp, #28]
 8020d9c:	9300      	str	r3, [sp, #0]
 8020d9e:	9908      	ldr	r1, [sp, #32]
 8020da0:	462b      	mov	r3, r5
 8020da2:	463a      	mov	r2, r7
 8020da4:	4620      	mov	r0, r4
 8020da6:	f001 ff29 	bl	8022bfc <__s2b>
 8020daa:	9007      	str	r0, [sp, #28]
 8020dac:	2800      	cmp	r0, #0
 8020dae:	f43f af1f 	beq.w	8020bf0 <_strtod_l+0x488>
 8020db2:	9b05      	ldr	r3, [sp, #20]
 8020db4:	1b9e      	subs	r6, r3, r6
 8020db6:	9b06      	ldr	r3, [sp, #24]
 8020db8:	2b00      	cmp	r3, #0
 8020dba:	bfb4      	ite	lt
 8020dbc:	4633      	movlt	r3, r6
 8020dbe:	2300      	movge	r3, #0
 8020dc0:	930c      	str	r3, [sp, #48]	; 0x30
 8020dc2:	9b06      	ldr	r3, [sp, #24]
 8020dc4:	2500      	movs	r5, #0
 8020dc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020dca:	9312      	str	r3, [sp, #72]	; 0x48
 8020dcc:	462e      	mov	r6, r5
 8020dce:	9b07      	ldr	r3, [sp, #28]
 8020dd0:	4620      	mov	r0, r4
 8020dd2:	6859      	ldr	r1, [r3, #4]
 8020dd4:	f001 fe6a 	bl	8022aac <_Balloc>
 8020dd8:	9005      	str	r0, [sp, #20]
 8020dda:	2800      	cmp	r0, #0
 8020ddc:	f43f af0c 	beq.w	8020bf8 <_strtod_l+0x490>
 8020de0:	9b07      	ldr	r3, [sp, #28]
 8020de2:	691a      	ldr	r2, [r3, #16]
 8020de4:	3202      	adds	r2, #2
 8020de6:	f103 010c 	add.w	r1, r3, #12
 8020dea:	0092      	lsls	r2, r2, #2
 8020dec:	300c      	adds	r0, #12
 8020dee:	f7fe fc62 	bl	801f6b6 <memcpy>
 8020df2:	ec4b ab10 	vmov	d0, sl, fp
 8020df6:	aa1a      	add	r2, sp, #104	; 0x68
 8020df8:	a919      	add	r1, sp, #100	; 0x64
 8020dfa:	4620      	mov	r0, r4
 8020dfc:	f002 fa44 	bl	8023288 <__d2b>
 8020e00:	ec4b ab18 	vmov	d8, sl, fp
 8020e04:	9018      	str	r0, [sp, #96]	; 0x60
 8020e06:	2800      	cmp	r0, #0
 8020e08:	f43f aef6 	beq.w	8020bf8 <_strtod_l+0x490>
 8020e0c:	2101      	movs	r1, #1
 8020e0e:	4620      	mov	r0, r4
 8020e10:	f001 ff8e 	bl	8022d30 <__i2b>
 8020e14:	4606      	mov	r6, r0
 8020e16:	2800      	cmp	r0, #0
 8020e18:	f43f aeee 	beq.w	8020bf8 <_strtod_l+0x490>
 8020e1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020e1e:	9904      	ldr	r1, [sp, #16]
 8020e20:	2b00      	cmp	r3, #0
 8020e22:	bfab      	itete	ge
 8020e24:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8020e26:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8020e28:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8020e2a:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8020e2e:	bfac      	ite	ge
 8020e30:	eb03 0902 	addge.w	r9, r3, r2
 8020e34:	1ad7      	sublt	r7, r2, r3
 8020e36:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8020e38:	eba3 0801 	sub.w	r8, r3, r1
 8020e3c:	4490      	add	r8, r2
 8020e3e:	4ba1      	ldr	r3, [pc, #644]	; (80210c4 <_strtod_l+0x95c>)
 8020e40:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8020e44:	4598      	cmp	r8, r3
 8020e46:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8020e4a:	f280 80c7 	bge.w	8020fdc <_strtod_l+0x874>
 8020e4e:	eba3 0308 	sub.w	r3, r3, r8
 8020e52:	2b1f      	cmp	r3, #31
 8020e54:	eba2 0203 	sub.w	r2, r2, r3
 8020e58:	f04f 0101 	mov.w	r1, #1
 8020e5c:	f300 80b1 	bgt.w	8020fc2 <_strtod_l+0x85a>
 8020e60:	fa01 f303 	lsl.w	r3, r1, r3
 8020e64:	930d      	str	r3, [sp, #52]	; 0x34
 8020e66:	2300      	movs	r3, #0
 8020e68:	9308      	str	r3, [sp, #32]
 8020e6a:	eb09 0802 	add.w	r8, r9, r2
 8020e6e:	9b04      	ldr	r3, [sp, #16]
 8020e70:	45c1      	cmp	r9, r8
 8020e72:	4417      	add	r7, r2
 8020e74:	441f      	add	r7, r3
 8020e76:	464b      	mov	r3, r9
 8020e78:	bfa8      	it	ge
 8020e7a:	4643      	movge	r3, r8
 8020e7c:	42bb      	cmp	r3, r7
 8020e7e:	bfa8      	it	ge
 8020e80:	463b      	movge	r3, r7
 8020e82:	2b00      	cmp	r3, #0
 8020e84:	bfc2      	ittt	gt
 8020e86:	eba8 0803 	subgt.w	r8, r8, r3
 8020e8a:	1aff      	subgt	r7, r7, r3
 8020e8c:	eba9 0903 	subgt.w	r9, r9, r3
 8020e90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020e92:	2b00      	cmp	r3, #0
 8020e94:	dd17      	ble.n	8020ec6 <_strtod_l+0x75e>
 8020e96:	4631      	mov	r1, r6
 8020e98:	461a      	mov	r2, r3
 8020e9a:	4620      	mov	r0, r4
 8020e9c:	f002 f808 	bl	8022eb0 <__pow5mult>
 8020ea0:	4606      	mov	r6, r0
 8020ea2:	2800      	cmp	r0, #0
 8020ea4:	f43f aea8 	beq.w	8020bf8 <_strtod_l+0x490>
 8020ea8:	4601      	mov	r1, r0
 8020eaa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020eac:	4620      	mov	r0, r4
 8020eae:	f001 ff55 	bl	8022d5c <__multiply>
 8020eb2:	900b      	str	r0, [sp, #44]	; 0x2c
 8020eb4:	2800      	cmp	r0, #0
 8020eb6:	f43f ae9f 	beq.w	8020bf8 <_strtod_l+0x490>
 8020eba:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020ebc:	4620      	mov	r0, r4
 8020ebe:	f001 fe35 	bl	8022b2c <_Bfree>
 8020ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ec4:	9318      	str	r3, [sp, #96]	; 0x60
 8020ec6:	f1b8 0f00 	cmp.w	r8, #0
 8020eca:	f300 808c 	bgt.w	8020fe6 <_strtod_l+0x87e>
 8020ece:	9b06      	ldr	r3, [sp, #24]
 8020ed0:	2b00      	cmp	r3, #0
 8020ed2:	dd08      	ble.n	8020ee6 <_strtod_l+0x77e>
 8020ed4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020ed6:	9905      	ldr	r1, [sp, #20]
 8020ed8:	4620      	mov	r0, r4
 8020eda:	f001 ffe9 	bl	8022eb0 <__pow5mult>
 8020ede:	9005      	str	r0, [sp, #20]
 8020ee0:	2800      	cmp	r0, #0
 8020ee2:	f43f ae89 	beq.w	8020bf8 <_strtod_l+0x490>
 8020ee6:	2f00      	cmp	r7, #0
 8020ee8:	dd08      	ble.n	8020efc <_strtod_l+0x794>
 8020eea:	9905      	ldr	r1, [sp, #20]
 8020eec:	463a      	mov	r2, r7
 8020eee:	4620      	mov	r0, r4
 8020ef0:	f002 f838 	bl	8022f64 <__lshift>
 8020ef4:	9005      	str	r0, [sp, #20]
 8020ef6:	2800      	cmp	r0, #0
 8020ef8:	f43f ae7e 	beq.w	8020bf8 <_strtod_l+0x490>
 8020efc:	f1b9 0f00 	cmp.w	r9, #0
 8020f00:	dd08      	ble.n	8020f14 <_strtod_l+0x7ac>
 8020f02:	4631      	mov	r1, r6
 8020f04:	464a      	mov	r2, r9
 8020f06:	4620      	mov	r0, r4
 8020f08:	f002 f82c 	bl	8022f64 <__lshift>
 8020f0c:	4606      	mov	r6, r0
 8020f0e:	2800      	cmp	r0, #0
 8020f10:	f43f ae72 	beq.w	8020bf8 <_strtod_l+0x490>
 8020f14:	9a05      	ldr	r2, [sp, #20]
 8020f16:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020f18:	4620      	mov	r0, r4
 8020f1a:	f002 f8af 	bl	802307c <__mdiff>
 8020f1e:	4605      	mov	r5, r0
 8020f20:	2800      	cmp	r0, #0
 8020f22:	f43f ae69 	beq.w	8020bf8 <_strtod_l+0x490>
 8020f26:	68c3      	ldr	r3, [r0, #12]
 8020f28:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f2a:	2300      	movs	r3, #0
 8020f2c:	60c3      	str	r3, [r0, #12]
 8020f2e:	4631      	mov	r1, r6
 8020f30:	f002 f888 	bl	8023044 <__mcmp>
 8020f34:	2800      	cmp	r0, #0
 8020f36:	da60      	bge.n	8020ffa <_strtod_l+0x892>
 8020f38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f3a:	ea53 030a 	orrs.w	r3, r3, sl
 8020f3e:	f040 8082 	bne.w	8021046 <_strtod_l+0x8de>
 8020f42:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8020f46:	2b00      	cmp	r3, #0
 8020f48:	d17d      	bne.n	8021046 <_strtod_l+0x8de>
 8020f4a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8020f4e:	0d1b      	lsrs	r3, r3, #20
 8020f50:	051b      	lsls	r3, r3, #20
 8020f52:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8020f56:	d976      	bls.n	8021046 <_strtod_l+0x8de>
 8020f58:	696b      	ldr	r3, [r5, #20]
 8020f5a:	b913      	cbnz	r3, 8020f62 <_strtod_l+0x7fa>
 8020f5c:	692b      	ldr	r3, [r5, #16]
 8020f5e:	2b01      	cmp	r3, #1
 8020f60:	dd71      	ble.n	8021046 <_strtod_l+0x8de>
 8020f62:	4629      	mov	r1, r5
 8020f64:	2201      	movs	r2, #1
 8020f66:	4620      	mov	r0, r4
 8020f68:	f001 fffc 	bl	8022f64 <__lshift>
 8020f6c:	4631      	mov	r1, r6
 8020f6e:	4605      	mov	r5, r0
 8020f70:	f002 f868 	bl	8023044 <__mcmp>
 8020f74:	2800      	cmp	r0, #0
 8020f76:	dd66      	ble.n	8021046 <_strtod_l+0x8de>
 8020f78:	9904      	ldr	r1, [sp, #16]
 8020f7a:	4a53      	ldr	r2, [pc, #332]	; (80210c8 <_strtod_l+0x960>)
 8020f7c:	465b      	mov	r3, fp
 8020f7e:	2900      	cmp	r1, #0
 8020f80:	f000 8081 	beq.w	8021086 <_strtod_l+0x91e>
 8020f84:	ea02 010b 	and.w	r1, r2, fp
 8020f88:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8020f8c:	dc7b      	bgt.n	8021086 <_strtod_l+0x91e>
 8020f8e:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8020f92:	f77f aea9 	ble.w	8020ce8 <_strtod_l+0x580>
 8020f96:	4b4d      	ldr	r3, [pc, #308]	; (80210cc <_strtod_l+0x964>)
 8020f98:	4650      	mov	r0, sl
 8020f9a:	4659      	mov	r1, fp
 8020f9c:	2200      	movs	r2, #0
 8020f9e:	f7df fb2b 	bl	80005f8 <__aeabi_dmul>
 8020fa2:	460b      	mov	r3, r1
 8020fa4:	4303      	orrs	r3, r0
 8020fa6:	bf08      	it	eq
 8020fa8:	2322      	moveq	r3, #34	; 0x22
 8020faa:	4682      	mov	sl, r0
 8020fac:	468b      	mov	fp, r1
 8020fae:	bf08      	it	eq
 8020fb0:	6023      	streq	r3, [r4, #0]
 8020fb2:	e62b      	b.n	8020c0c <_strtod_l+0x4a4>
 8020fb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8020fb8:	fa02 f303 	lsl.w	r3, r2, r3
 8020fbc:	ea03 0a0a 	and.w	sl, r3, sl
 8020fc0:	e6e3      	b.n	8020d8a <_strtod_l+0x622>
 8020fc2:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8020fc6:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8020fca:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8020fce:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8020fd2:	fa01 f308 	lsl.w	r3, r1, r8
 8020fd6:	9308      	str	r3, [sp, #32]
 8020fd8:	910d      	str	r1, [sp, #52]	; 0x34
 8020fda:	e746      	b.n	8020e6a <_strtod_l+0x702>
 8020fdc:	2300      	movs	r3, #0
 8020fde:	9308      	str	r3, [sp, #32]
 8020fe0:	2301      	movs	r3, #1
 8020fe2:	930d      	str	r3, [sp, #52]	; 0x34
 8020fe4:	e741      	b.n	8020e6a <_strtod_l+0x702>
 8020fe6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8020fe8:	4642      	mov	r2, r8
 8020fea:	4620      	mov	r0, r4
 8020fec:	f001 ffba 	bl	8022f64 <__lshift>
 8020ff0:	9018      	str	r0, [sp, #96]	; 0x60
 8020ff2:	2800      	cmp	r0, #0
 8020ff4:	f47f af6b 	bne.w	8020ece <_strtod_l+0x766>
 8020ff8:	e5fe      	b.n	8020bf8 <_strtod_l+0x490>
 8020ffa:	465f      	mov	r7, fp
 8020ffc:	d16e      	bne.n	80210dc <_strtod_l+0x974>
 8020ffe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021000:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021004:	b342      	cbz	r2, 8021058 <_strtod_l+0x8f0>
 8021006:	4a32      	ldr	r2, [pc, #200]	; (80210d0 <_strtod_l+0x968>)
 8021008:	4293      	cmp	r3, r2
 802100a:	d128      	bne.n	802105e <_strtod_l+0x8f6>
 802100c:	9b04      	ldr	r3, [sp, #16]
 802100e:	4651      	mov	r1, sl
 8021010:	b1eb      	cbz	r3, 802104e <_strtod_l+0x8e6>
 8021012:	4b2d      	ldr	r3, [pc, #180]	; (80210c8 <_strtod_l+0x960>)
 8021014:	403b      	ands	r3, r7
 8021016:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 802101a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802101e:	d819      	bhi.n	8021054 <_strtod_l+0x8ec>
 8021020:	0d1b      	lsrs	r3, r3, #20
 8021022:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8021026:	fa02 f303 	lsl.w	r3, r2, r3
 802102a:	4299      	cmp	r1, r3
 802102c:	d117      	bne.n	802105e <_strtod_l+0x8f6>
 802102e:	4b29      	ldr	r3, [pc, #164]	; (80210d4 <_strtod_l+0x96c>)
 8021030:	429f      	cmp	r7, r3
 8021032:	d102      	bne.n	802103a <_strtod_l+0x8d2>
 8021034:	3101      	adds	r1, #1
 8021036:	f43f addf 	beq.w	8020bf8 <_strtod_l+0x490>
 802103a:	4b23      	ldr	r3, [pc, #140]	; (80210c8 <_strtod_l+0x960>)
 802103c:	403b      	ands	r3, r7
 802103e:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8021042:	f04f 0a00 	mov.w	sl, #0
 8021046:	9b04      	ldr	r3, [sp, #16]
 8021048:	2b00      	cmp	r3, #0
 802104a:	d1a4      	bne.n	8020f96 <_strtod_l+0x82e>
 802104c:	e5de      	b.n	8020c0c <_strtod_l+0x4a4>
 802104e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021052:	e7ea      	b.n	802102a <_strtod_l+0x8c2>
 8021054:	4613      	mov	r3, r2
 8021056:	e7e8      	b.n	802102a <_strtod_l+0x8c2>
 8021058:	ea53 030a 	orrs.w	r3, r3, sl
 802105c:	d08c      	beq.n	8020f78 <_strtod_l+0x810>
 802105e:	9b08      	ldr	r3, [sp, #32]
 8021060:	b1db      	cbz	r3, 802109a <_strtod_l+0x932>
 8021062:	423b      	tst	r3, r7
 8021064:	d0ef      	beq.n	8021046 <_strtod_l+0x8de>
 8021066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021068:	9a04      	ldr	r2, [sp, #16]
 802106a:	4650      	mov	r0, sl
 802106c:	4659      	mov	r1, fp
 802106e:	b1c3      	cbz	r3, 80210a2 <_strtod_l+0x93a>
 8021070:	f7ff fb5d 	bl	802072e <sulp>
 8021074:	4602      	mov	r2, r0
 8021076:	460b      	mov	r3, r1
 8021078:	ec51 0b18 	vmov	r0, r1, d8
 802107c:	f7df f906 	bl	800028c <__adddf3>
 8021080:	4682      	mov	sl, r0
 8021082:	468b      	mov	fp, r1
 8021084:	e7df      	b.n	8021046 <_strtod_l+0x8de>
 8021086:	4013      	ands	r3, r2
 8021088:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 802108c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8021090:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8021094:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8021098:	e7d5      	b.n	8021046 <_strtod_l+0x8de>
 802109a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802109c:	ea13 0f0a 	tst.w	r3, sl
 80210a0:	e7e0      	b.n	8021064 <_strtod_l+0x8fc>
 80210a2:	f7ff fb44 	bl	802072e <sulp>
 80210a6:	4602      	mov	r2, r0
 80210a8:	460b      	mov	r3, r1
 80210aa:	ec51 0b18 	vmov	r0, r1, d8
 80210ae:	f7df f8eb 	bl	8000288 <__aeabi_dsub>
 80210b2:	2200      	movs	r2, #0
 80210b4:	2300      	movs	r3, #0
 80210b6:	4682      	mov	sl, r0
 80210b8:	468b      	mov	fp, r1
 80210ba:	f7df fd05 	bl	8000ac8 <__aeabi_dcmpeq>
 80210be:	2800      	cmp	r0, #0
 80210c0:	d0c1      	beq.n	8021046 <_strtod_l+0x8de>
 80210c2:	e611      	b.n	8020ce8 <_strtod_l+0x580>
 80210c4:	fffffc02 	.word	0xfffffc02
 80210c8:	7ff00000 	.word	0x7ff00000
 80210cc:	39500000 	.word	0x39500000
 80210d0:	000fffff 	.word	0x000fffff
 80210d4:	7fefffff 	.word	0x7fefffff
 80210d8:	080270f0 	.word	0x080270f0
 80210dc:	4631      	mov	r1, r6
 80210de:	4628      	mov	r0, r5
 80210e0:	f002 f92e 	bl	8023340 <__ratio>
 80210e4:	ec59 8b10 	vmov	r8, r9, d0
 80210e8:	ee10 0a10 	vmov	r0, s0
 80210ec:	2200      	movs	r2, #0
 80210ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80210f2:	4649      	mov	r1, r9
 80210f4:	f7df fcfc 	bl	8000af0 <__aeabi_dcmple>
 80210f8:	2800      	cmp	r0, #0
 80210fa:	d07a      	beq.n	80211f2 <_strtod_l+0xa8a>
 80210fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210fe:	2b00      	cmp	r3, #0
 8021100:	d04a      	beq.n	8021198 <_strtod_l+0xa30>
 8021102:	4b95      	ldr	r3, [pc, #596]	; (8021358 <_strtod_l+0xbf0>)
 8021104:	2200      	movs	r2, #0
 8021106:	e9cd 2308 	strd	r2, r3, [sp, #32]
 802110a:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8021358 <_strtod_l+0xbf0>
 802110e:	f04f 0800 	mov.w	r8, #0
 8021112:	4b92      	ldr	r3, [pc, #584]	; (802135c <_strtod_l+0xbf4>)
 8021114:	403b      	ands	r3, r7
 8021116:	930d      	str	r3, [sp, #52]	; 0x34
 8021118:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802111a:	4b91      	ldr	r3, [pc, #580]	; (8021360 <_strtod_l+0xbf8>)
 802111c:	429a      	cmp	r2, r3
 802111e:	f040 80b0 	bne.w	8021282 <_strtod_l+0xb1a>
 8021122:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8021126:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 802112a:	ec4b ab10 	vmov	d0, sl, fp
 802112e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8021132:	f002 f82d 	bl	8023190 <__ulp>
 8021136:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 802113a:	ec53 2b10 	vmov	r2, r3, d0
 802113e:	f7df fa5b 	bl	80005f8 <__aeabi_dmul>
 8021142:	4652      	mov	r2, sl
 8021144:	465b      	mov	r3, fp
 8021146:	f7df f8a1 	bl	800028c <__adddf3>
 802114a:	460b      	mov	r3, r1
 802114c:	4983      	ldr	r1, [pc, #524]	; (802135c <_strtod_l+0xbf4>)
 802114e:	4a85      	ldr	r2, [pc, #532]	; (8021364 <_strtod_l+0xbfc>)
 8021150:	4019      	ands	r1, r3
 8021152:	4291      	cmp	r1, r2
 8021154:	4682      	mov	sl, r0
 8021156:	d960      	bls.n	802121a <_strtod_l+0xab2>
 8021158:	ee18 3a90 	vmov	r3, s17
 802115c:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8021160:	4293      	cmp	r3, r2
 8021162:	d104      	bne.n	802116e <_strtod_l+0xa06>
 8021164:	ee18 3a10 	vmov	r3, s16
 8021168:	3301      	adds	r3, #1
 802116a:	f43f ad45 	beq.w	8020bf8 <_strtod_l+0x490>
 802116e:	f8df b200 	ldr.w	fp, [pc, #512]	; 8021370 <_strtod_l+0xc08>
 8021172:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8021176:	9918      	ldr	r1, [sp, #96]	; 0x60
 8021178:	4620      	mov	r0, r4
 802117a:	f001 fcd7 	bl	8022b2c <_Bfree>
 802117e:	9905      	ldr	r1, [sp, #20]
 8021180:	4620      	mov	r0, r4
 8021182:	f001 fcd3 	bl	8022b2c <_Bfree>
 8021186:	4631      	mov	r1, r6
 8021188:	4620      	mov	r0, r4
 802118a:	f001 fccf 	bl	8022b2c <_Bfree>
 802118e:	4629      	mov	r1, r5
 8021190:	4620      	mov	r0, r4
 8021192:	f001 fccb 	bl	8022b2c <_Bfree>
 8021196:	e61a      	b.n	8020dce <_strtod_l+0x666>
 8021198:	f1ba 0f00 	cmp.w	sl, #0
 802119c:	d11b      	bne.n	80211d6 <_strtod_l+0xa6e>
 802119e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80211a2:	b9f3      	cbnz	r3, 80211e2 <_strtod_l+0xa7a>
 80211a4:	4b6c      	ldr	r3, [pc, #432]	; (8021358 <_strtod_l+0xbf0>)
 80211a6:	2200      	movs	r2, #0
 80211a8:	4640      	mov	r0, r8
 80211aa:	4649      	mov	r1, r9
 80211ac:	f7df fc96 	bl	8000adc <__aeabi_dcmplt>
 80211b0:	b9d0      	cbnz	r0, 80211e8 <_strtod_l+0xa80>
 80211b2:	4640      	mov	r0, r8
 80211b4:	4649      	mov	r1, r9
 80211b6:	4b6c      	ldr	r3, [pc, #432]	; (8021368 <_strtod_l+0xc00>)
 80211b8:	2200      	movs	r2, #0
 80211ba:	f7df fa1d 	bl	80005f8 <__aeabi_dmul>
 80211be:	4680      	mov	r8, r0
 80211c0:	4689      	mov	r9, r1
 80211c2:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80211c6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 80211ca:	9315      	str	r3, [sp, #84]	; 0x54
 80211cc:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80211d0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80211d4:	e79d      	b.n	8021112 <_strtod_l+0x9aa>
 80211d6:	f1ba 0f01 	cmp.w	sl, #1
 80211da:	d102      	bne.n	80211e2 <_strtod_l+0xa7a>
 80211dc:	2f00      	cmp	r7, #0
 80211de:	f43f ad83 	beq.w	8020ce8 <_strtod_l+0x580>
 80211e2:	4b62      	ldr	r3, [pc, #392]	; (802136c <_strtod_l+0xc04>)
 80211e4:	2200      	movs	r2, #0
 80211e6:	e78e      	b.n	8021106 <_strtod_l+0x99e>
 80211e8:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8021368 <_strtod_l+0xc00>
 80211ec:	f04f 0800 	mov.w	r8, #0
 80211f0:	e7e7      	b.n	80211c2 <_strtod_l+0xa5a>
 80211f2:	4b5d      	ldr	r3, [pc, #372]	; (8021368 <_strtod_l+0xc00>)
 80211f4:	4640      	mov	r0, r8
 80211f6:	4649      	mov	r1, r9
 80211f8:	2200      	movs	r2, #0
 80211fa:	f7df f9fd 	bl	80005f8 <__aeabi_dmul>
 80211fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021200:	4680      	mov	r8, r0
 8021202:	4689      	mov	r9, r1
 8021204:	b933      	cbnz	r3, 8021214 <_strtod_l+0xaac>
 8021206:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802120a:	900e      	str	r0, [sp, #56]	; 0x38
 802120c:	930f      	str	r3, [sp, #60]	; 0x3c
 802120e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8021212:	e7dd      	b.n	80211d0 <_strtod_l+0xa68>
 8021214:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8021218:	e7f9      	b.n	802120e <_strtod_l+0xaa6>
 802121a:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 802121e:	9b04      	ldr	r3, [sp, #16]
 8021220:	2b00      	cmp	r3, #0
 8021222:	d1a8      	bne.n	8021176 <_strtod_l+0xa0e>
 8021224:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8021228:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802122a:	0d1b      	lsrs	r3, r3, #20
 802122c:	051b      	lsls	r3, r3, #20
 802122e:	429a      	cmp	r2, r3
 8021230:	d1a1      	bne.n	8021176 <_strtod_l+0xa0e>
 8021232:	4640      	mov	r0, r8
 8021234:	4649      	mov	r1, r9
 8021236:	f7df fd3f 	bl	8000cb8 <__aeabi_d2lz>
 802123a:	f7df f9af 	bl	800059c <__aeabi_l2d>
 802123e:	4602      	mov	r2, r0
 8021240:	460b      	mov	r3, r1
 8021242:	4640      	mov	r0, r8
 8021244:	4649      	mov	r1, r9
 8021246:	f7df f81f 	bl	8000288 <__aeabi_dsub>
 802124a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802124c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021250:	ea43 030a 	orr.w	r3, r3, sl
 8021254:	4313      	orrs	r3, r2
 8021256:	4680      	mov	r8, r0
 8021258:	4689      	mov	r9, r1
 802125a:	d055      	beq.n	8021308 <_strtod_l+0xba0>
 802125c:	a336      	add	r3, pc, #216	; (adr r3, 8021338 <_strtod_l+0xbd0>)
 802125e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021262:	f7df fc3b 	bl	8000adc <__aeabi_dcmplt>
 8021266:	2800      	cmp	r0, #0
 8021268:	f47f acd0 	bne.w	8020c0c <_strtod_l+0x4a4>
 802126c:	a334      	add	r3, pc, #208	; (adr r3, 8021340 <_strtod_l+0xbd8>)
 802126e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021272:	4640      	mov	r0, r8
 8021274:	4649      	mov	r1, r9
 8021276:	f7df fc4f 	bl	8000b18 <__aeabi_dcmpgt>
 802127a:	2800      	cmp	r0, #0
 802127c:	f43f af7b 	beq.w	8021176 <_strtod_l+0xa0e>
 8021280:	e4c4      	b.n	8020c0c <_strtod_l+0x4a4>
 8021282:	9b04      	ldr	r3, [sp, #16]
 8021284:	b333      	cbz	r3, 80212d4 <_strtod_l+0xb6c>
 8021286:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021288:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 802128c:	d822      	bhi.n	80212d4 <_strtod_l+0xb6c>
 802128e:	a32e      	add	r3, pc, #184	; (adr r3, 8021348 <_strtod_l+0xbe0>)
 8021290:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021294:	4640      	mov	r0, r8
 8021296:	4649      	mov	r1, r9
 8021298:	f7df fc2a 	bl	8000af0 <__aeabi_dcmple>
 802129c:	b1a0      	cbz	r0, 80212c8 <_strtod_l+0xb60>
 802129e:	4649      	mov	r1, r9
 80212a0:	4640      	mov	r0, r8
 80212a2:	f7df fc81 	bl	8000ba8 <__aeabi_d2uiz>
 80212a6:	2801      	cmp	r0, #1
 80212a8:	bf38      	it	cc
 80212aa:	2001      	movcc	r0, #1
 80212ac:	f7df f92a 	bl	8000504 <__aeabi_ui2d>
 80212b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80212b2:	4680      	mov	r8, r0
 80212b4:	4689      	mov	r9, r1
 80212b6:	bb23      	cbnz	r3, 8021302 <_strtod_l+0xb9a>
 80212b8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80212bc:	9010      	str	r0, [sp, #64]	; 0x40
 80212be:	9311      	str	r3, [sp, #68]	; 0x44
 80212c0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80212c4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80212c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80212cc:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80212d0:	1a9b      	subs	r3, r3, r2
 80212d2:	9309      	str	r3, [sp, #36]	; 0x24
 80212d4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80212d8:	eeb0 0a48 	vmov.f32	s0, s16
 80212dc:	eef0 0a68 	vmov.f32	s1, s17
 80212e0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80212e4:	f001 ff54 	bl	8023190 <__ulp>
 80212e8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80212ec:	ec53 2b10 	vmov	r2, r3, d0
 80212f0:	f7df f982 	bl	80005f8 <__aeabi_dmul>
 80212f4:	ec53 2b18 	vmov	r2, r3, d8
 80212f8:	f7de ffc8 	bl	800028c <__adddf3>
 80212fc:	4682      	mov	sl, r0
 80212fe:	468b      	mov	fp, r1
 8021300:	e78d      	b.n	802121e <_strtod_l+0xab6>
 8021302:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8021306:	e7db      	b.n	80212c0 <_strtod_l+0xb58>
 8021308:	a311      	add	r3, pc, #68	; (adr r3, 8021350 <_strtod_l+0xbe8>)
 802130a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802130e:	f7df fbe5 	bl	8000adc <__aeabi_dcmplt>
 8021312:	e7b2      	b.n	802127a <_strtod_l+0xb12>
 8021314:	2300      	movs	r3, #0
 8021316:	930a      	str	r3, [sp, #40]	; 0x28
 8021318:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802131a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802131c:	6013      	str	r3, [r2, #0]
 802131e:	f7ff ba6b 	b.w	80207f8 <_strtod_l+0x90>
 8021322:	2a65      	cmp	r2, #101	; 0x65
 8021324:	f43f ab5f 	beq.w	80209e6 <_strtod_l+0x27e>
 8021328:	2a45      	cmp	r2, #69	; 0x45
 802132a:	f43f ab5c 	beq.w	80209e6 <_strtod_l+0x27e>
 802132e:	2301      	movs	r3, #1
 8021330:	f7ff bb94 	b.w	8020a5c <_strtod_l+0x2f4>
 8021334:	f3af 8000 	nop.w
 8021338:	94a03595 	.word	0x94a03595
 802133c:	3fdfffff 	.word	0x3fdfffff
 8021340:	35afe535 	.word	0x35afe535
 8021344:	3fe00000 	.word	0x3fe00000
 8021348:	ffc00000 	.word	0xffc00000
 802134c:	41dfffff 	.word	0x41dfffff
 8021350:	94a03595 	.word	0x94a03595
 8021354:	3fcfffff 	.word	0x3fcfffff
 8021358:	3ff00000 	.word	0x3ff00000
 802135c:	7ff00000 	.word	0x7ff00000
 8021360:	7fe00000 	.word	0x7fe00000
 8021364:	7c9fffff 	.word	0x7c9fffff
 8021368:	3fe00000 	.word	0x3fe00000
 802136c:	bff00000 	.word	0xbff00000
 8021370:	7fefffff 	.word	0x7fefffff

08021374 <_strtod_r>:
 8021374:	4b01      	ldr	r3, [pc, #4]	; (802137c <_strtod_r+0x8>)
 8021376:	f7ff b9f7 	b.w	8020768 <_strtod_l>
 802137a:	bf00      	nop
 802137c:	200001b8 	.word	0x200001b8

08021380 <_strtol_l.constprop.0>:
 8021380:	2b01      	cmp	r3, #1
 8021382:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021386:	d001      	beq.n	802138c <_strtol_l.constprop.0+0xc>
 8021388:	2b24      	cmp	r3, #36	; 0x24
 802138a:	d906      	bls.n	802139a <_strtol_l.constprop.0+0x1a>
 802138c:	f000 ff1a 	bl	80221c4 <__errno>
 8021390:	2316      	movs	r3, #22
 8021392:	6003      	str	r3, [r0, #0]
 8021394:	2000      	movs	r0, #0
 8021396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802139a:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8021480 <_strtol_l.constprop.0+0x100>
 802139e:	460d      	mov	r5, r1
 80213a0:	462e      	mov	r6, r5
 80213a2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80213a6:	f814 700c 	ldrb.w	r7, [r4, ip]
 80213aa:	f017 0708 	ands.w	r7, r7, #8
 80213ae:	d1f7      	bne.n	80213a0 <_strtol_l.constprop.0+0x20>
 80213b0:	2c2d      	cmp	r4, #45	; 0x2d
 80213b2:	d132      	bne.n	802141a <_strtol_l.constprop.0+0x9a>
 80213b4:	782c      	ldrb	r4, [r5, #0]
 80213b6:	2701      	movs	r7, #1
 80213b8:	1cb5      	adds	r5, r6, #2
 80213ba:	2b00      	cmp	r3, #0
 80213bc:	d05b      	beq.n	8021476 <_strtol_l.constprop.0+0xf6>
 80213be:	2b10      	cmp	r3, #16
 80213c0:	d109      	bne.n	80213d6 <_strtol_l.constprop.0+0x56>
 80213c2:	2c30      	cmp	r4, #48	; 0x30
 80213c4:	d107      	bne.n	80213d6 <_strtol_l.constprop.0+0x56>
 80213c6:	782c      	ldrb	r4, [r5, #0]
 80213c8:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80213cc:	2c58      	cmp	r4, #88	; 0x58
 80213ce:	d14d      	bne.n	802146c <_strtol_l.constprop.0+0xec>
 80213d0:	786c      	ldrb	r4, [r5, #1]
 80213d2:	2310      	movs	r3, #16
 80213d4:	3502      	adds	r5, #2
 80213d6:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80213da:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80213de:	f04f 0c00 	mov.w	ip, #0
 80213e2:	fbb8 f9f3 	udiv	r9, r8, r3
 80213e6:	4666      	mov	r6, ip
 80213e8:	fb03 8a19 	mls	sl, r3, r9, r8
 80213ec:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 80213f0:	f1be 0f09 	cmp.w	lr, #9
 80213f4:	d816      	bhi.n	8021424 <_strtol_l.constprop.0+0xa4>
 80213f6:	4674      	mov	r4, lr
 80213f8:	42a3      	cmp	r3, r4
 80213fa:	dd24      	ble.n	8021446 <_strtol_l.constprop.0+0xc6>
 80213fc:	f1bc 0f00 	cmp.w	ip, #0
 8021400:	db1e      	blt.n	8021440 <_strtol_l.constprop.0+0xc0>
 8021402:	45b1      	cmp	r9, r6
 8021404:	d31c      	bcc.n	8021440 <_strtol_l.constprop.0+0xc0>
 8021406:	d101      	bne.n	802140c <_strtol_l.constprop.0+0x8c>
 8021408:	45a2      	cmp	sl, r4
 802140a:	db19      	blt.n	8021440 <_strtol_l.constprop.0+0xc0>
 802140c:	fb06 4603 	mla	r6, r6, r3, r4
 8021410:	f04f 0c01 	mov.w	ip, #1
 8021414:	f815 4b01 	ldrb.w	r4, [r5], #1
 8021418:	e7e8      	b.n	80213ec <_strtol_l.constprop.0+0x6c>
 802141a:	2c2b      	cmp	r4, #43	; 0x2b
 802141c:	bf04      	itt	eq
 802141e:	782c      	ldrbeq	r4, [r5, #0]
 8021420:	1cb5      	addeq	r5, r6, #2
 8021422:	e7ca      	b.n	80213ba <_strtol_l.constprop.0+0x3a>
 8021424:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8021428:	f1be 0f19 	cmp.w	lr, #25
 802142c:	d801      	bhi.n	8021432 <_strtol_l.constprop.0+0xb2>
 802142e:	3c37      	subs	r4, #55	; 0x37
 8021430:	e7e2      	b.n	80213f8 <_strtol_l.constprop.0+0x78>
 8021432:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 8021436:	f1be 0f19 	cmp.w	lr, #25
 802143a:	d804      	bhi.n	8021446 <_strtol_l.constprop.0+0xc6>
 802143c:	3c57      	subs	r4, #87	; 0x57
 802143e:	e7db      	b.n	80213f8 <_strtol_l.constprop.0+0x78>
 8021440:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8021444:	e7e6      	b.n	8021414 <_strtol_l.constprop.0+0x94>
 8021446:	f1bc 0f00 	cmp.w	ip, #0
 802144a:	da05      	bge.n	8021458 <_strtol_l.constprop.0+0xd8>
 802144c:	2322      	movs	r3, #34	; 0x22
 802144e:	6003      	str	r3, [r0, #0]
 8021450:	4646      	mov	r6, r8
 8021452:	b942      	cbnz	r2, 8021466 <_strtol_l.constprop.0+0xe6>
 8021454:	4630      	mov	r0, r6
 8021456:	e79e      	b.n	8021396 <_strtol_l.constprop.0+0x16>
 8021458:	b107      	cbz	r7, 802145c <_strtol_l.constprop.0+0xdc>
 802145a:	4276      	negs	r6, r6
 802145c:	2a00      	cmp	r2, #0
 802145e:	d0f9      	beq.n	8021454 <_strtol_l.constprop.0+0xd4>
 8021460:	f1bc 0f00 	cmp.w	ip, #0
 8021464:	d000      	beq.n	8021468 <_strtol_l.constprop.0+0xe8>
 8021466:	1e69      	subs	r1, r5, #1
 8021468:	6011      	str	r1, [r2, #0]
 802146a:	e7f3      	b.n	8021454 <_strtol_l.constprop.0+0xd4>
 802146c:	2430      	movs	r4, #48	; 0x30
 802146e:	2b00      	cmp	r3, #0
 8021470:	d1b1      	bne.n	80213d6 <_strtol_l.constprop.0+0x56>
 8021472:	2308      	movs	r3, #8
 8021474:	e7af      	b.n	80213d6 <_strtol_l.constprop.0+0x56>
 8021476:	2c30      	cmp	r4, #48	; 0x30
 8021478:	d0a5      	beq.n	80213c6 <_strtol_l.constprop.0+0x46>
 802147a:	230a      	movs	r3, #10
 802147c:	e7ab      	b.n	80213d6 <_strtol_l.constprop.0+0x56>
 802147e:	bf00      	nop
 8021480:	08027119 	.word	0x08027119

08021484 <_strtol_r>:
 8021484:	f7ff bf7c 	b.w	8021380 <_strtol_l.constprop.0>

08021488 <_write_r>:
 8021488:	b538      	push	{r3, r4, r5, lr}
 802148a:	4d07      	ldr	r5, [pc, #28]	; (80214a8 <_write_r+0x20>)
 802148c:	4604      	mov	r4, r0
 802148e:	4608      	mov	r0, r1
 8021490:	4611      	mov	r1, r2
 8021492:	2200      	movs	r2, #0
 8021494:	602a      	str	r2, [r5, #0]
 8021496:	461a      	mov	r2, r3
 8021498:	f005 f9ae 	bl	80267f8 <_write>
 802149c:	1c43      	adds	r3, r0, #1
 802149e:	d102      	bne.n	80214a6 <_write_r+0x1e>
 80214a0:	682b      	ldr	r3, [r5, #0]
 80214a2:	b103      	cbz	r3, 80214a6 <_write_r+0x1e>
 80214a4:	6023      	str	r3, [r4, #0]
 80214a6:	bd38      	pop	{r3, r4, r5, pc}
 80214a8:	2000f584 	.word	0x2000f584

080214ac <_close_r>:
 80214ac:	b538      	push	{r3, r4, r5, lr}
 80214ae:	4d06      	ldr	r5, [pc, #24]	; (80214c8 <_close_r+0x1c>)
 80214b0:	2300      	movs	r3, #0
 80214b2:	4604      	mov	r4, r0
 80214b4:	4608      	mov	r0, r1
 80214b6:	602b      	str	r3, [r5, #0]
 80214b8:	f005 f958 	bl	802676c <_close>
 80214bc:	1c43      	adds	r3, r0, #1
 80214be:	d102      	bne.n	80214c6 <_close_r+0x1a>
 80214c0:	682b      	ldr	r3, [r5, #0]
 80214c2:	b103      	cbz	r3, 80214c6 <_close_r+0x1a>
 80214c4:	6023      	str	r3, [r4, #0]
 80214c6:	bd38      	pop	{r3, r4, r5, pc}
 80214c8:	2000f584 	.word	0x2000f584

080214cc <quorem>:
 80214cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214d0:	6903      	ldr	r3, [r0, #16]
 80214d2:	690c      	ldr	r4, [r1, #16]
 80214d4:	42a3      	cmp	r3, r4
 80214d6:	4607      	mov	r7, r0
 80214d8:	f2c0 8081 	blt.w	80215de <quorem+0x112>
 80214dc:	3c01      	subs	r4, #1
 80214de:	f101 0814 	add.w	r8, r1, #20
 80214e2:	f100 0514 	add.w	r5, r0, #20
 80214e6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80214ea:	9301      	str	r3, [sp, #4]
 80214ec:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80214f0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80214f4:	3301      	adds	r3, #1
 80214f6:	429a      	cmp	r2, r3
 80214f8:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80214fc:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8021500:	fbb2 f6f3 	udiv	r6, r2, r3
 8021504:	d331      	bcc.n	802156a <quorem+0x9e>
 8021506:	f04f 0e00 	mov.w	lr, #0
 802150a:	4640      	mov	r0, r8
 802150c:	46ac      	mov	ip, r5
 802150e:	46f2      	mov	sl, lr
 8021510:	f850 2b04 	ldr.w	r2, [r0], #4
 8021514:	b293      	uxth	r3, r2
 8021516:	fb06 e303 	mla	r3, r6, r3, lr
 802151a:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 802151e:	b29b      	uxth	r3, r3
 8021520:	ebaa 0303 	sub.w	r3, sl, r3
 8021524:	f8dc a000 	ldr.w	sl, [ip]
 8021528:	0c12      	lsrs	r2, r2, #16
 802152a:	fa13 f38a 	uxtah	r3, r3, sl
 802152e:	fb06 e202 	mla	r2, r6, r2, lr
 8021532:	9300      	str	r3, [sp, #0]
 8021534:	9b00      	ldr	r3, [sp, #0]
 8021536:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802153a:	b292      	uxth	r2, r2
 802153c:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8021540:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8021544:	f8bd 3000 	ldrh.w	r3, [sp]
 8021548:	4581      	cmp	r9, r0
 802154a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802154e:	f84c 3b04 	str.w	r3, [ip], #4
 8021552:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8021556:	d2db      	bcs.n	8021510 <quorem+0x44>
 8021558:	f855 300b 	ldr.w	r3, [r5, fp]
 802155c:	b92b      	cbnz	r3, 802156a <quorem+0x9e>
 802155e:	9b01      	ldr	r3, [sp, #4]
 8021560:	3b04      	subs	r3, #4
 8021562:	429d      	cmp	r5, r3
 8021564:	461a      	mov	r2, r3
 8021566:	d32e      	bcc.n	80215c6 <quorem+0xfa>
 8021568:	613c      	str	r4, [r7, #16]
 802156a:	4638      	mov	r0, r7
 802156c:	f001 fd6a 	bl	8023044 <__mcmp>
 8021570:	2800      	cmp	r0, #0
 8021572:	db24      	blt.n	80215be <quorem+0xf2>
 8021574:	3601      	adds	r6, #1
 8021576:	4628      	mov	r0, r5
 8021578:	f04f 0c00 	mov.w	ip, #0
 802157c:	f858 2b04 	ldr.w	r2, [r8], #4
 8021580:	f8d0 e000 	ldr.w	lr, [r0]
 8021584:	b293      	uxth	r3, r2
 8021586:	ebac 0303 	sub.w	r3, ip, r3
 802158a:	0c12      	lsrs	r2, r2, #16
 802158c:	fa13 f38e 	uxtah	r3, r3, lr
 8021590:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8021594:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8021598:	b29b      	uxth	r3, r3
 802159a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802159e:	45c1      	cmp	r9, r8
 80215a0:	f840 3b04 	str.w	r3, [r0], #4
 80215a4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80215a8:	d2e8      	bcs.n	802157c <quorem+0xb0>
 80215aa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80215ae:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80215b2:	b922      	cbnz	r2, 80215be <quorem+0xf2>
 80215b4:	3b04      	subs	r3, #4
 80215b6:	429d      	cmp	r5, r3
 80215b8:	461a      	mov	r2, r3
 80215ba:	d30a      	bcc.n	80215d2 <quorem+0x106>
 80215bc:	613c      	str	r4, [r7, #16]
 80215be:	4630      	mov	r0, r6
 80215c0:	b003      	add	sp, #12
 80215c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215c6:	6812      	ldr	r2, [r2, #0]
 80215c8:	3b04      	subs	r3, #4
 80215ca:	2a00      	cmp	r2, #0
 80215cc:	d1cc      	bne.n	8021568 <quorem+0x9c>
 80215ce:	3c01      	subs	r4, #1
 80215d0:	e7c7      	b.n	8021562 <quorem+0x96>
 80215d2:	6812      	ldr	r2, [r2, #0]
 80215d4:	3b04      	subs	r3, #4
 80215d6:	2a00      	cmp	r2, #0
 80215d8:	d1f0      	bne.n	80215bc <quorem+0xf0>
 80215da:	3c01      	subs	r4, #1
 80215dc:	e7eb      	b.n	80215b6 <quorem+0xea>
 80215de:	2000      	movs	r0, #0
 80215e0:	e7ee      	b.n	80215c0 <quorem+0xf4>
 80215e2:	0000      	movs	r0, r0
 80215e4:	0000      	movs	r0, r0
	...

080215e8 <_dtoa_r>:
 80215e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215ec:	ed2d 8b04 	vpush	{d8-d9}
 80215f0:	ec57 6b10 	vmov	r6, r7, d0
 80215f4:	b093      	sub	sp, #76	; 0x4c
 80215f6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80215f8:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80215fc:	9106      	str	r1, [sp, #24]
 80215fe:	ee10 aa10 	vmov	sl, s0
 8021602:	4604      	mov	r4, r0
 8021604:	9209      	str	r2, [sp, #36]	; 0x24
 8021606:	930c      	str	r3, [sp, #48]	; 0x30
 8021608:	46bb      	mov	fp, r7
 802160a:	b975      	cbnz	r5, 802162a <_dtoa_r+0x42>
 802160c:	2010      	movs	r0, #16
 802160e:	f001 fa27 	bl	8022a60 <malloc>
 8021612:	4602      	mov	r2, r0
 8021614:	6260      	str	r0, [r4, #36]	; 0x24
 8021616:	b920      	cbnz	r0, 8021622 <_dtoa_r+0x3a>
 8021618:	4ba7      	ldr	r3, [pc, #668]	; (80218b8 <_dtoa_r+0x2d0>)
 802161a:	21ea      	movs	r1, #234	; 0xea
 802161c:	48a7      	ldr	r0, [pc, #668]	; (80218bc <_dtoa_r+0x2d4>)
 802161e:	f002 f901 	bl	8023824 <__assert_func>
 8021622:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8021626:	6005      	str	r5, [r0, #0]
 8021628:	60c5      	str	r5, [r0, #12]
 802162a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802162c:	6819      	ldr	r1, [r3, #0]
 802162e:	b151      	cbz	r1, 8021646 <_dtoa_r+0x5e>
 8021630:	685a      	ldr	r2, [r3, #4]
 8021632:	604a      	str	r2, [r1, #4]
 8021634:	2301      	movs	r3, #1
 8021636:	4093      	lsls	r3, r2
 8021638:	608b      	str	r3, [r1, #8]
 802163a:	4620      	mov	r0, r4
 802163c:	f001 fa76 	bl	8022b2c <_Bfree>
 8021640:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021642:	2200      	movs	r2, #0
 8021644:	601a      	str	r2, [r3, #0]
 8021646:	1e3b      	subs	r3, r7, #0
 8021648:	bfaa      	itet	ge
 802164a:	2300      	movge	r3, #0
 802164c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8021650:	f8c8 3000 	strge.w	r3, [r8]
 8021654:	4b9a      	ldr	r3, [pc, #616]	; (80218c0 <_dtoa_r+0x2d8>)
 8021656:	bfbc      	itt	lt
 8021658:	2201      	movlt	r2, #1
 802165a:	f8c8 2000 	strlt.w	r2, [r8]
 802165e:	ea33 030b 	bics.w	r3, r3, fp
 8021662:	d11b      	bne.n	802169c <_dtoa_r+0xb4>
 8021664:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021666:	f242 730f 	movw	r3, #9999	; 0x270f
 802166a:	6013      	str	r3, [r2, #0]
 802166c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021670:	4333      	orrs	r3, r6
 8021672:	f000 8592 	beq.w	802219a <_dtoa_r+0xbb2>
 8021676:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021678:	b963      	cbnz	r3, 8021694 <_dtoa_r+0xac>
 802167a:	4b92      	ldr	r3, [pc, #584]	; (80218c4 <_dtoa_r+0x2dc>)
 802167c:	e022      	b.n	80216c4 <_dtoa_r+0xdc>
 802167e:	4b92      	ldr	r3, [pc, #584]	; (80218c8 <_dtoa_r+0x2e0>)
 8021680:	9301      	str	r3, [sp, #4]
 8021682:	3308      	adds	r3, #8
 8021684:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021686:	6013      	str	r3, [r2, #0]
 8021688:	9801      	ldr	r0, [sp, #4]
 802168a:	b013      	add	sp, #76	; 0x4c
 802168c:	ecbd 8b04 	vpop	{d8-d9}
 8021690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021694:	4b8b      	ldr	r3, [pc, #556]	; (80218c4 <_dtoa_r+0x2dc>)
 8021696:	9301      	str	r3, [sp, #4]
 8021698:	3303      	adds	r3, #3
 802169a:	e7f3      	b.n	8021684 <_dtoa_r+0x9c>
 802169c:	2200      	movs	r2, #0
 802169e:	2300      	movs	r3, #0
 80216a0:	4650      	mov	r0, sl
 80216a2:	4659      	mov	r1, fp
 80216a4:	f7df fa10 	bl	8000ac8 <__aeabi_dcmpeq>
 80216a8:	ec4b ab19 	vmov	d9, sl, fp
 80216ac:	4680      	mov	r8, r0
 80216ae:	b158      	cbz	r0, 80216c8 <_dtoa_r+0xe0>
 80216b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80216b2:	2301      	movs	r3, #1
 80216b4:	6013      	str	r3, [r2, #0]
 80216b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80216b8:	2b00      	cmp	r3, #0
 80216ba:	f000 856b 	beq.w	8022194 <_dtoa_r+0xbac>
 80216be:	4883      	ldr	r0, [pc, #524]	; (80218cc <_dtoa_r+0x2e4>)
 80216c0:	6018      	str	r0, [r3, #0]
 80216c2:	1e43      	subs	r3, r0, #1
 80216c4:	9301      	str	r3, [sp, #4]
 80216c6:	e7df      	b.n	8021688 <_dtoa_r+0xa0>
 80216c8:	ec4b ab10 	vmov	d0, sl, fp
 80216cc:	aa10      	add	r2, sp, #64	; 0x40
 80216ce:	a911      	add	r1, sp, #68	; 0x44
 80216d0:	4620      	mov	r0, r4
 80216d2:	f001 fdd9 	bl	8023288 <__d2b>
 80216d6:	f3cb 550a 	ubfx	r5, fp, #20, #11
 80216da:	ee08 0a10 	vmov	s16, r0
 80216de:	2d00      	cmp	r5, #0
 80216e0:	f000 8084 	beq.w	80217ec <_dtoa_r+0x204>
 80216e4:	ee19 3a90 	vmov	r3, s19
 80216e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80216ec:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80216f0:	4656      	mov	r6, sl
 80216f2:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80216f6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80216fa:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80216fe:	4b74      	ldr	r3, [pc, #464]	; (80218d0 <_dtoa_r+0x2e8>)
 8021700:	2200      	movs	r2, #0
 8021702:	4630      	mov	r0, r6
 8021704:	4639      	mov	r1, r7
 8021706:	f7de fdbf 	bl	8000288 <__aeabi_dsub>
 802170a:	a365      	add	r3, pc, #404	; (adr r3, 80218a0 <_dtoa_r+0x2b8>)
 802170c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021710:	f7de ff72 	bl	80005f8 <__aeabi_dmul>
 8021714:	a364      	add	r3, pc, #400	; (adr r3, 80218a8 <_dtoa_r+0x2c0>)
 8021716:	e9d3 2300 	ldrd	r2, r3, [r3]
 802171a:	f7de fdb7 	bl	800028c <__adddf3>
 802171e:	4606      	mov	r6, r0
 8021720:	4628      	mov	r0, r5
 8021722:	460f      	mov	r7, r1
 8021724:	f7de fefe 	bl	8000524 <__aeabi_i2d>
 8021728:	a361      	add	r3, pc, #388	; (adr r3, 80218b0 <_dtoa_r+0x2c8>)
 802172a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802172e:	f7de ff63 	bl	80005f8 <__aeabi_dmul>
 8021732:	4602      	mov	r2, r0
 8021734:	460b      	mov	r3, r1
 8021736:	4630      	mov	r0, r6
 8021738:	4639      	mov	r1, r7
 802173a:	f7de fda7 	bl	800028c <__adddf3>
 802173e:	4606      	mov	r6, r0
 8021740:	460f      	mov	r7, r1
 8021742:	f7df fa09 	bl	8000b58 <__aeabi_d2iz>
 8021746:	2200      	movs	r2, #0
 8021748:	9000      	str	r0, [sp, #0]
 802174a:	2300      	movs	r3, #0
 802174c:	4630      	mov	r0, r6
 802174e:	4639      	mov	r1, r7
 8021750:	f7df f9c4 	bl	8000adc <__aeabi_dcmplt>
 8021754:	b150      	cbz	r0, 802176c <_dtoa_r+0x184>
 8021756:	9800      	ldr	r0, [sp, #0]
 8021758:	f7de fee4 	bl	8000524 <__aeabi_i2d>
 802175c:	4632      	mov	r2, r6
 802175e:	463b      	mov	r3, r7
 8021760:	f7df f9b2 	bl	8000ac8 <__aeabi_dcmpeq>
 8021764:	b910      	cbnz	r0, 802176c <_dtoa_r+0x184>
 8021766:	9b00      	ldr	r3, [sp, #0]
 8021768:	3b01      	subs	r3, #1
 802176a:	9300      	str	r3, [sp, #0]
 802176c:	9b00      	ldr	r3, [sp, #0]
 802176e:	2b16      	cmp	r3, #22
 8021770:	d85a      	bhi.n	8021828 <_dtoa_r+0x240>
 8021772:	9a00      	ldr	r2, [sp, #0]
 8021774:	4b57      	ldr	r3, [pc, #348]	; (80218d4 <_dtoa_r+0x2ec>)
 8021776:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802177a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802177e:	ec51 0b19 	vmov	r0, r1, d9
 8021782:	f7df f9ab 	bl	8000adc <__aeabi_dcmplt>
 8021786:	2800      	cmp	r0, #0
 8021788:	d050      	beq.n	802182c <_dtoa_r+0x244>
 802178a:	9b00      	ldr	r3, [sp, #0]
 802178c:	3b01      	subs	r3, #1
 802178e:	9300      	str	r3, [sp, #0]
 8021790:	2300      	movs	r3, #0
 8021792:	930b      	str	r3, [sp, #44]	; 0x2c
 8021794:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021796:	1b5d      	subs	r5, r3, r5
 8021798:	1e6b      	subs	r3, r5, #1
 802179a:	9305      	str	r3, [sp, #20]
 802179c:	bf45      	ittet	mi
 802179e:	f1c5 0301 	rsbmi	r3, r5, #1
 80217a2:	9304      	strmi	r3, [sp, #16]
 80217a4:	2300      	movpl	r3, #0
 80217a6:	2300      	movmi	r3, #0
 80217a8:	bf4c      	ite	mi
 80217aa:	9305      	strmi	r3, [sp, #20]
 80217ac:	9304      	strpl	r3, [sp, #16]
 80217ae:	9b00      	ldr	r3, [sp, #0]
 80217b0:	2b00      	cmp	r3, #0
 80217b2:	db3d      	blt.n	8021830 <_dtoa_r+0x248>
 80217b4:	9b05      	ldr	r3, [sp, #20]
 80217b6:	9a00      	ldr	r2, [sp, #0]
 80217b8:	920a      	str	r2, [sp, #40]	; 0x28
 80217ba:	4413      	add	r3, r2
 80217bc:	9305      	str	r3, [sp, #20]
 80217be:	2300      	movs	r3, #0
 80217c0:	9307      	str	r3, [sp, #28]
 80217c2:	9b06      	ldr	r3, [sp, #24]
 80217c4:	2b09      	cmp	r3, #9
 80217c6:	f200 8089 	bhi.w	80218dc <_dtoa_r+0x2f4>
 80217ca:	2b05      	cmp	r3, #5
 80217cc:	bfc4      	itt	gt
 80217ce:	3b04      	subgt	r3, #4
 80217d0:	9306      	strgt	r3, [sp, #24]
 80217d2:	9b06      	ldr	r3, [sp, #24]
 80217d4:	f1a3 0302 	sub.w	r3, r3, #2
 80217d8:	bfcc      	ite	gt
 80217da:	2500      	movgt	r5, #0
 80217dc:	2501      	movle	r5, #1
 80217de:	2b03      	cmp	r3, #3
 80217e0:	f200 8087 	bhi.w	80218f2 <_dtoa_r+0x30a>
 80217e4:	e8df f003 	tbb	[pc, r3]
 80217e8:	59383a2d 	.word	0x59383a2d
 80217ec:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80217f0:	441d      	add	r5, r3
 80217f2:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80217f6:	2b20      	cmp	r3, #32
 80217f8:	bfc1      	itttt	gt
 80217fa:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80217fe:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8021802:	fa0b f303 	lslgt.w	r3, fp, r3
 8021806:	fa26 f000 	lsrgt.w	r0, r6, r0
 802180a:	bfda      	itte	le
 802180c:	f1c3 0320 	rsble	r3, r3, #32
 8021810:	fa06 f003 	lslle.w	r0, r6, r3
 8021814:	4318      	orrgt	r0, r3
 8021816:	f7de fe75 	bl	8000504 <__aeabi_ui2d>
 802181a:	2301      	movs	r3, #1
 802181c:	4606      	mov	r6, r0
 802181e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8021822:	3d01      	subs	r5, #1
 8021824:	930e      	str	r3, [sp, #56]	; 0x38
 8021826:	e76a      	b.n	80216fe <_dtoa_r+0x116>
 8021828:	2301      	movs	r3, #1
 802182a:	e7b2      	b.n	8021792 <_dtoa_r+0x1aa>
 802182c:	900b      	str	r0, [sp, #44]	; 0x2c
 802182e:	e7b1      	b.n	8021794 <_dtoa_r+0x1ac>
 8021830:	9b04      	ldr	r3, [sp, #16]
 8021832:	9a00      	ldr	r2, [sp, #0]
 8021834:	1a9b      	subs	r3, r3, r2
 8021836:	9304      	str	r3, [sp, #16]
 8021838:	4253      	negs	r3, r2
 802183a:	9307      	str	r3, [sp, #28]
 802183c:	2300      	movs	r3, #0
 802183e:	930a      	str	r3, [sp, #40]	; 0x28
 8021840:	e7bf      	b.n	80217c2 <_dtoa_r+0x1da>
 8021842:	2300      	movs	r3, #0
 8021844:	9308      	str	r3, [sp, #32]
 8021846:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021848:	2b00      	cmp	r3, #0
 802184a:	dc55      	bgt.n	80218f8 <_dtoa_r+0x310>
 802184c:	2301      	movs	r3, #1
 802184e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8021852:	461a      	mov	r2, r3
 8021854:	9209      	str	r2, [sp, #36]	; 0x24
 8021856:	e00c      	b.n	8021872 <_dtoa_r+0x28a>
 8021858:	2301      	movs	r3, #1
 802185a:	e7f3      	b.n	8021844 <_dtoa_r+0x25c>
 802185c:	2300      	movs	r3, #0
 802185e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021860:	9308      	str	r3, [sp, #32]
 8021862:	9b00      	ldr	r3, [sp, #0]
 8021864:	4413      	add	r3, r2
 8021866:	9302      	str	r3, [sp, #8]
 8021868:	3301      	adds	r3, #1
 802186a:	2b01      	cmp	r3, #1
 802186c:	9303      	str	r3, [sp, #12]
 802186e:	bfb8      	it	lt
 8021870:	2301      	movlt	r3, #1
 8021872:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8021874:	2200      	movs	r2, #0
 8021876:	6042      	str	r2, [r0, #4]
 8021878:	2204      	movs	r2, #4
 802187a:	f102 0614 	add.w	r6, r2, #20
 802187e:	429e      	cmp	r6, r3
 8021880:	6841      	ldr	r1, [r0, #4]
 8021882:	d93d      	bls.n	8021900 <_dtoa_r+0x318>
 8021884:	4620      	mov	r0, r4
 8021886:	f001 f911 	bl	8022aac <_Balloc>
 802188a:	9001      	str	r0, [sp, #4]
 802188c:	2800      	cmp	r0, #0
 802188e:	d13b      	bne.n	8021908 <_dtoa_r+0x320>
 8021890:	4b11      	ldr	r3, [pc, #68]	; (80218d8 <_dtoa_r+0x2f0>)
 8021892:	4602      	mov	r2, r0
 8021894:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8021898:	e6c0      	b.n	802161c <_dtoa_r+0x34>
 802189a:	2301      	movs	r3, #1
 802189c:	e7df      	b.n	802185e <_dtoa_r+0x276>
 802189e:	bf00      	nop
 80218a0:	636f4361 	.word	0x636f4361
 80218a4:	3fd287a7 	.word	0x3fd287a7
 80218a8:	8b60c8b3 	.word	0x8b60c8b3
 80218ac:	3fc68a28 	.word	0x3fc68a28
 80218b0:	509f79fb 	.word	0x509f79fb
 80218b4:	3fd34413 	.word	0x3fd34413
 80218b8:	08027226 	.word	0x08027226
 80218bc:	0802723d 	.word	0x0802723d
 80218c0:	7ff00000 	.word	0x7ff00000
 80218c4:	08027222 	.word	0x08027222
 80218c8:	08027219 	.word	0x08027219
 80218cc:	0802709d 	.word	0x0802709d
 80218d0:	3ff80000 	.word	0x3ff80000
 80218d4:	080273a8 	.word	0x080273a8
 80218d8:	08027298 	.word	0x08027298
 80218dc:	2501      	movs	r5, #1
 80218de:	2300      	movs	r3, #0
 80218e0:	9306      	str	r3, [sp, #24]
 80218e2:	9508      	str	r5, [sp, #32]
 80218e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80218e8:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80218ec:	2200      	movs	r2, #0
 80218ee:	2312      	movs	r3, #18
 80218f0:	e7b0      	b.n	8021854 <_dtoa_r+0x26c>
 80218f2:	2301      	movs	r3, #1
 80218f4:	9308      	str	r3, [sp, #32]
 80218f6:	e7f5      	b.n	80218e4 <_dtoa_r+0x2fc>
 80218f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218fa:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80218fe:	e7b8      	b.n	8021872 <_dtoa_r+0x28a>
 8021900:	3101      	adds	r1, #1
 8021902:	6041      	str	r1, [r0, #4]
 8021904:	0052      	lsls	r2, r2, #1
 8021906:	e7b8      	b.n	802187a <_dtoa_r+0x292>
 8021908:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802190a:	9a01      	ldr	r2, [sp, #4]
 802190c:	601a      	str	r2, [r3, #0]
 802190e:	9b03      	ldr	r3, [sp, #12]
 8021910:	2b0e      	cmp	r3, #14
 8021912:	f200 809d 	bhi.w	8021a50 <_dtoa_r+0x468>
 8021916:	2d00      	cmp	r5, #0
 8021918:	f000 809a 	beq.w	8021a50 <_dtoa_r+0x468>
 802191c:	9b00      	ldr	r3, [sp, #0]
 802191e:	2b00      	cmp	r3, #0
 8021920:	dd32      	ble.n	8021988 <_dtoa_r+0x3a0>
 8021922:	4ab7      	ldr	r2, [pc, #732]	; (8021c00 <_dtoa_r+0x618>)
 8021924:	f003 030f 	and.w	r3, r3, #15
 8021928:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 802192c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8021930:	9b00      	ldr	r3, [sp, #0]
 8021932:	05d8      	lsls	r0, r3, #23
 8021934:	ea4f 1723 	mov.w	r7, r3, asr #4
 8021938:	d516      	bpl.n	8021968 <_dtoa_r+0x380>
 802193a:	4bb2      	ldr	r3, [pc, #712]	; (8021c04 <_dtoa_r+0x61c>)
 802193c:	ec51 0b19 	vmov	r0, r1, d9
 8021940:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8021944:	f7de ff82 	bl	800084c <__aeabi_ddiv>
 8021948:	f007 070f 	and.w	r7, r7, #15
 802194c:	4682      	mov	sl, r0
 802194e:	468b      	mov	fp, r1
 8021950:	2503      	movs	r5, #3
 8021952:	4eac      	ldr	r6, [pc, #688]	; (8021c04 <_dtoa_r+0x61c>)
 8021954:	b957      	cbnz	r7, 802196c <_dtoa_r+0x384>
 8021956:	4642      	mov	r2, r8
 8021958:	464b      	mov	r3, r9
 802195a:	4650      	mov	r0, sl
 802195c:	4659      	mov	r1, fp
 802195e:	f7de ff75 	bl	800084c <__aeabi_ddiv>
 8021962:	4682      	mov	sl, r0
 8021964:	468b      	mov	fp, r1
 8021966:	e028      	b.n	80219ba <_dtoa_r+0x3d2>
 8021968:	2502      	movs	r5, #2
 802196a:	e7f2      	b.n	8021952 <_dtoa_r+0x36a>
 802196c:	07f9      	lsls	r1, r7, #31
 802196e:	d508      	bpl.n	8021982 <_dtoa_r+0x39a>
 8021970:	4640      	mov	r0, r8
 8021972:	4649      	mov	r1, r9
 8021974:	e9d6 2300 	ldrd	r2, r3, [r6]
 8021978:	f7de fe3e 	bl	80005f8 <__aeabi_dmul>
 802197c:	3501      	adds	r5, #1
 802197e:	4680      	mov	r8, r0
 8021980:	4689      	mov	r9, r1
 8021982:	107f      	asrs	r7, r7, #1
 8021984:	3608      	adds	r6, #8
 8021986:	e7e5      	b.n	8021954 <_dtoa_r+0x36c>
 8021988:	f000 809b 	beq.w	8021ac2 <_dtoa_r+0x4da>
 802198c:	9b00      	ldr	r3, [sp, #0]
 802198e:	4f9d      	ldr	r7, [pc, #628]	; (8021c04 <_dtoa_r+0x61c>)
 8021990:	425e      	negs	r6, r3
 8021992:	4b9b      	ldr	r3, [pc, #620]	; (8021c00 <_dtoa_r+0x618>)
 8021994:	f006 020f 	and.w	r2, r6, #15
 8021998:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802199c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80219a0:	ec51 0b19 	vmov	r0, r1, d9
 80219a4:	f7de fe28 	bl	80005f8 <__aeabi_dmul>
 80219a8:	1136      	asrs	r6, r6, #4
 80219aa:	4682      	mov	sl, r0
 80219ac:	468b      	mov	fp, r1
 80219ae:	2300      	movs	r3, #0
 80219b0:	2502      	movs	r5, #2
 80219b2:	2e00      	cmp	r6, #0
 80219b4:	d17a      	bne.n	8021aac <_dtoa_r+0x4c4>
 80219b6:	2b00      	cmp	r3, #0
 80219b8:	d1d3      	bne.n	8021962 <_dtoa_r+0x37a>
 80219ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80219bc:	2b00      	cmp	r3, #0
 80219be:	f000 8082 	beq.w	8021ac6 <_dtoa_r+0x4de>
 80219c2:	4b91      	ldr	r3, [pc, #580]	; (8021c08 <_dtoa_r+0x620>)
 80219c4:	2200      	movs	r2, #0
 80219c6:	4650      	mov	r0, sl
 80219c8:	4659      	mov	r1, fp
 80219ca:	f7df f887 	bl	8000adc <__aeabi_dcmplt>
 80219ce:	2800      	cmp	r0, #0
 80219d0:	d079      	beq.n	8021ac6 <_dtoa_r+0x4de>
 80219d2:	9b03      	ldr	r3, [sp, #12]
 80219d4:	2b00      	cmp	r3, #0
 80219d6:	d076      	beq.n	8021ac6 <_dtoa_r+0x4de>
 80219d8:	9b02      	ldr	r3, [sp, #8]
 80219da:	2b00      	cmp	r3, #0
 80219dc:	dd36      	ble.n	8021a4c <_dtoa_r+0x464>
 80219de:	9b00      	ldr	r3, [sp, #0]
 80219e0:	4650      	mov	r0, sl
 80219e2:	4659      	mov	r1, fp
 80219e4:	1e5f      	subs	r7, r3, #1
 80219e6:	2200      	movs	r2, #0
 80219e8:	4b88      	ldr	r3, [pc, #544]	; (8021c0c <_dtoa_r+0x624>)
 80219ea:	f7de fe05 	bl	80005f8 <__aeabi_dmul>
 80219ee:	9e02      	ldr	r6, [sp, #8]
 80219f0:	4682      	mov	sl, r0
 80219f2:	468b      	mov	fp, r1
 80219f4:	3501      	adds	r5, #1
 80219f6:	4628      	mov	r0, r5
 80219f8:	f7de fd94 	bl	8000524 <__aeabi_i2d>
 80219fc:	4652      	mov	r2, sl
 80219fe:	465b      	mov	r3, fp
 8021a00:	f7de fdfa 	bl	80005f8 <__aeabi_dmul>
 8021a04:	4b82      	ldr	r3, [pc, #520]	; (8021c10 <_dtoa_r+0x628>)
 8021a06:	2200      	movs	r2, #0
 8021a08:	f7de fc40 	bl	800028c <__adddf3>
 8021a0c:	46d0      	mov	r8, sl
 8021a0e:	46d9      	mov	r9, fp
 8021a10:	4682      	mov	sl, r0
 8021a12:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8021a16:	2e00      	cmp	r6, #0
 8021a18:	d158      	bne.n	8021acc <_dtoa_r+0x4e4>
 8021a1a:	4b7e      	ldr	r3, [pc, #504]	; (8021c14 <_dtoa_r+0x62c>)
 8021a1c:	2200      	movs	r2, #0
 8021a1e:	4640      	mov	r0, r8
 8021a20:	4649      	mov	r1, r9
 8021a22:	f7de fc31 	bl	8000288 <__aeabi_dsub>
 8021a26:	4652      	mov	r2, sl
 8021a28:	465b      	mov	r3, fp
 8021a2a:	4680      	mov	r8, r0
 8021a2c:	4689      	mov	r9, r1
 8021a2e:	f7df f873 	bl	8000b18 <__aeabi_dcmpgt>
 8021a32:	2800      	cmp	r0, #0
 8021a34:	f040 8295 	bne.w	8021f62 <_dtoa_r+0x97a>
 8021a38:	4652      	mov	r2, sl
 8021a3a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8021a3e:	4640      	mov	r0, r8
 8021a40:	4649      	mov	r1, r9
 8021a42:	f7df f84b 	bl	8000adc <__aeabi_dcmplt>
 8021a46:	2800      	cmp	r0, #0
 8021a48:	f040 8289 	bne.w	8021f5e <_dtoa_r+0x976>
 8021a4c:	ec5b ab19 	vmov	sl, fp, d9
 8021a50:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a52:	2b00      	cmp	r3, #0
 8021a54:	f2c0 8148 	blt.w	8021ce8 <_dtoa_r+0x700>
 8021a58:	9a00      	ldr	r2, [sp, #0]
 8021a5a:	2a0e      	cmp	r2, #14
 8021a5c:	f300 8144 	bgt.w	8021ce8 <_dtoa_r+0x700>
 8021a60:	4b67      	ldr	r3, [pc, #412]	; (8021c00 <_dtoa_r+0x618>)
 8021a62:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8021a66:	e9d3 8900 	ldrd	r8, r9, [r3]
 8021a6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a6c:	2b00      	cmp	r3, #0
 8021a6e:	f280 80d5 	bge.w	8021c1c <_dtoa_r+0x634>
 8021a72:	9b03      	ldr	r3, [sp, #12]
 8021a74:	2b00      	cmp	r3, #0
 8021a76:	f300 80d1 	bgt.w	8021c1c <_dtoa_r+0x634>
 8021a7a:	f040 826f 	bne.w	8021f5c <_dtoa_r+0x974>
 8021a7e:	4b65      	ldr	r3, [pc, #404]	; (8021c14 <_dtoa_r+0x62c>)
 8021a80:	2200      	movs	r2, #0
 8021a82:	4640      	mov	r0, r8
 8021a84:	4649      	mov	r1, r9
 8021a86:	f7de fdb7 	bl	80005f8 <__aeabi_dmul>
 8021a8a:	4652      	mov	r2, sl
 8021a8c:	465b      	mov	r3, fp
 8021a8e:	f7df f839 	bl	8000b04 <__aeabi_dcmpge>
 8021a92:	9e03      	ldr	r6, [sp, #12]
 8021a94:	4637      	mov	r7, r6
 8021a96:	2800      	cmp	r0, #0
 8021a98:	f040 8245 	bne.w	8021f26 <_dtoa_r+0x93e>
 8021a9c:	9d01      	ldr	r5, [sp, #4]
 8021a9e:	2331      	movs	r3, #49	; 0x31
 8021aa0:	f805 3b01 	strb.w	r3, [r5], #1
 8021aa4:	9b00      	ldr	r3, [sp, #0]
 8021aa6:	3301      	adds	r3, #1
 8021aa8:	9300      	str	r3, [sp, #0]
 8021aaa:	e240      	b.n	8021f2e <_dtoa_r+0x946>
 8021aac:	07f2      	lsls	r2, r6, #31
 8021aae:	d505      	bpl.n	8021abc <_dtoa_r+0x4d4>
 8021ab0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8021ab4:	f7de fda0 	bl	80005f8 <__aeabi_dmul>
 8021ab8:	3501      	adds	r5, #1
 8021aba:	2301      	movs	r3, #1
 8021abc:	1076      	asrs	r6, r6, #1
 8021abe:	3708      	adds	r7, #8
 8021ac0:	e777      	b.n	80219b2 <_dtoa_r+0x3ca>
 8021ac2:	2502      	movs	r5, #2
 8021ac4:	e779      	b.n	80219ba <_dtoa_r+0x3d2>
 8021ac6:	9f00      	ldr	r7, [sp, #0]
 8021ac8:	9e03      	ldr	r6, [sp, #12]
 8021aca:	e794      	b.n	80219f6 <_dtoa_r+0x40e>
 8021acc:	9901      	ldr	r1, [sp, #4]
 8021ace:	4b4c      	ldr	r3, [pc, #304]	; (8021c00 <_dtoa_r+0x618>)
 8021ad0:	4431      	add	r1, r6
 8021ad2:	910d      	str	r1, [sp, #52]	; 0x34
 8021ad4:	9908      	ldr	r1, [sp, #32]
 8021ad6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8021ada:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8021ade:	2900      	cmp	r1, #0
 8021ae0:	d043      	beq.n	8021b6a <_dtoa_r+0x582>
 8021ae2:	494d      	ldr	r1, [pc, #308]	; (8021c18 <_dtoa_r+0x630>)
 8021ae4:	2000      	movs	r0, #0
 8021ae6:	f7de feb1 	bl	800084c <__aeabi_ddiv>
 8021aea:	4652      	mov	r2, sl
 8021aec:	465b      	mov	r3, fp
 8021aee:	f7de fbcb 	bl	8000288 <__aeabi_dsub>
 8021af2:	9d01      	ldr	r5, [sp, #4]
 8021af4:	4682      	mov	sl, r0
 8021af6:	468b      	mov	fp, r1
 8021af8:	4649      	mov	r1, r9
 8021afa:	4640      	mov	r0, r8
 8021afc:	f7df f82c 	bl	8000b58 <__aeabi_d2iz>
 8021b00:	4606      	mov	r6, r0
 8021b02:	f7de fd0f 	bl	8000524 <__aeabi_i2d>
 8021b06:	4602      	mov	r2, r0
 8021b08:	460b      	mov	r3, r1
 8021b0a:	4640      	mov	r0, r8
 8021b0c:	4649      	mov	r1, r9
 8021b0e:	f7de fbbb 	bl	8000288 <__aeabi_dsub>
 8021b12:	3630      	adds	r6, #48	; 0x30
 8021b14:	f805 6b01 	strb.w	r6, [r5], #1
 8021b18:	4652      	mov	r2, sl
 8021b1a:	465b      	mov	r3, fp
 8021b1c:	4680      	mov	r8, r0
 8021b1e:	4689      	mov	r9, r1
 8021b20:	f7de ffdc 	bl	8000adc <__aeabi_dcmplt>
 8021b24:	2800      	cmp	r0, #0
 8021b26:	d163      	bne.n	8021bf0 <_dtoa_r+0x608>
 8021b28:	4642      	mov	r2, r8
 8021b2a:	464b      	mov	r3, r9
 8021b2c:	4936      	ldr	r1, [pc, #216]	; (8021c08 <_dtoa_r+0x620>)
 8021b2e:	2000      	movs	r0, #0
 8021b30:	f7de fbaa 	bl	8000288 <__aeabi_dsub>
 8021b34:	4652      	mov	r2, sl
 8021b36:	465b      	mov	r3, fp
 8021b38:	f7de ffd0 	bl	8000adc <__aeabi_dcmplt>
 8021b3c:	2800      	cmp	r0, #0
 8021b3e:	f040 80b5 	bne.w	8021cac <_dtoa_r+0x6c4>
 8021b42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b44:	429d      	cmp	r5, r3
 8021b46:	d081      	beq.n	8021a4c <_dtoa_r+0x464>
 8021b48:	4b30      	ldr	r3, [pc, #192]	; (8021c0c <_dtoa_r+0x624>)
 8021b4a:	2200      	movs	r2, #0
 8021b4c:	4650      	mov	r0, sl
 8021b4e:	4659      	mov	r1, fp
 8021b50:	f7de fd52 	bl	80005f8 <__aeabi_dmul>
 8021b54:	4b2d      	ldr	r3, [pc, #180]	; (8021c0c <_dtoa_r+0x624>)
 8021b56:	4682      	mov	sl, r0
 8021b58:	468b      	mov	fp, r1
 8021b5a:	4640      	mov	r0, r8
 8021b5c:	4649      	mov	r1, r9
 8021b5e:	2200      	movs	r2, #0
 8021b60:	f7de fd4a 	bl	80005f8 <__aeabi_dmul>
 8021b64:	4680      	mov	r8, r0
 8021b66:	4689      	mov	r9, r1
 8021b68:	e7c6      	b.n	8021af8 <_dtoa_r+0x510>
 8021b6a:	4650      	mov	r0, sl
 8021b6c:	4659      	mov	r1, fp
 8021b6e:	f7de fd43 	bl	80005f8 <__aeabi_dmul>
 8021b72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b74:	9d01      	ldr	r5, [sp, #4]
 8021b76:	930f      	str	r3, [sp, #60]	; 0x3c
 8021b78:	4682      	mov	sl, r0
 8021b7a:	468b      	mov	fp, r1
 8021b7c:	4649      	mov	r1, r9
 8021b7e:	4640      	mov	r0, r8
 8021b80:	f7de ffea 	bl	8000b58 <__aeabi_d2iz>
 8021b84:	4606      	mov	r6, r0
 8021b86:	f7de fccd 	bl	8000524 <__aeabi_i2d>
 8021b8a:	3630      	adds	r6, #48	; 0x30
 8021b8c:	4602      	mov	r2, r0
 8021b8e:	460b      	mov	r3, r1
 8021b90:	4640      	mov	r0, r8
 8021b92:	4649      	mov	r1, r9
 8021b94:	f7de fb78 	bl	8000288 <__aeabi_dsub>
 8021b98:	f805 6b01 	strb.w	r6, [r5], #1
 8021b9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b9e:	429d      	cmp	r5, r3
 8021ba0:	4680      	mov	r8, r0
 8021ba2:	4689      	mov	r9, r1
 8021ba4:	f04f 0200 	mov.w	r2, #0
 8021ba8:	d124      	bne.n	8021bf4 <_dtoa_r+0x60c>
 8021baa:	4b1b      	ldr	r3, [pc, #108]	; (8021c18 <_dtoa_r+0x630>)
 8021bac:	4650      	mov	r0, sl
 8021bae:	4659      	mov	r1, fp
 8021bb0:	f7de fb6c 	bl	800028c <__adddf3>
 8021bb4:	4602      	mov	r2, r0
 8021bb6:	460b      	mov	r3, r1
 8021bb8:	4640      	mov	r0, r8
 8021bba:	4649      	mov	r1, r9
 8021bbc:	f7de ffac 	bl	8000b18 <__aeabi_dcmpgt>
 8021bc0:	2800      	cmp	r0, #0
 8021bc2:	d173      	bne.n	8021cac <_dtoa_r+0x6c4>
 8021bc4:	4652      	mov	r2, sl
 8021bc6:	465b      	mov	r3, fp
 8021bc8:	4913      	ldr	r1, [pc, #76]	; (8021c18 <_dtoa_r+0x630>)
 8021bca:	2000      	movs	r0, #0
 8021bcc:	f7de fb5c 	bl	8000288 <__aeabi_dsub>
 8021bd0:	4602      	mov	r2, r0
 8021bd2:	460b      	mov	r3, r1
 8021bd4:	4640      	mov	r0, r8
 8021bd6:	4649      	mov	r1, r9
 8021bd8:	f7de ff80 	bl	8000adc <__aeabi_dcmplt>
 8021bdc:	2800      	cmp	r0, #0
 8021bde:	f43f af35 	beq.w	8021a4c <_dtoa_r+0x464>
 8021be2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021be4:	1e6b      	subs	r3, r5, #1
 8021be6:	930f      	str	r3, [sp, #60]	; 0x3c
 8021be8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8021bec:	2b30      	cmp	r3, #48	; 0x30
 8021bee:	d0f8      	beq.n	8021be2 <_dtoa_r+0x5fa>
 8021bf0:	9700      	str	r7, [sp, #0]
 8021bf2:	e049      	b.n	8021c88 <_dtoa_r+0x6a0>
 8021bf4:	4b05      	ldr	r3, [pc, #20]	; (8021c0c <_dtoa_r+0x624>)
 8021bf6:	f7de fcff 	bl	80005f8 <__aeabi_dmul>
 8021bfa:	4680      	mov	r8, r0
 8021bfc:	4689      	mov	r9, r1
 8021bfe:	e7bd      	b.n	8021b7c <_dtoa_r+0x594>
 8021c00:	080273a8 	.word	0x080273a8
 8021c04:	08027380 	.word	0x08027380
 8021c08:	3ff00000 	.word	0x3ff00000
 8021c0c:	40240000 	.word	0x40240000
 8021c10:	401c0000 	.word	0x401c0000
 8021c14:	40140000 	.word	0x40140000
 8021c18:	3fe00000 	.word	0x3fe00000
 8021c1c:	9d01      	ldr	r5, [sp, #4]
 8021c1e:	4656      	mov	r6, sl
 8021c20:	465f      	mov	r7, fp
 8021c22:	4642      	mov	r2, r8
 8021c24:	464b      	mov	r3, r9
 8021c26:	4630      	mov	r0, r6
 8021c28:	4639      	mov	r1, r7
 8021c2a:	f7de fe0f 	bl	800084c <__aeabi_ddiv>
 8021c2e:	f7de ff93 	bl	8000b58 <__aeabi_d2iz>
 8021c32:	4682      	mov	sl, r0
 8021c34:	f7de fc76 	bl	8000524 <__aeabi_i2d>
 8021c38:	4642      	mov	r2, r8
 8021c3a:	464b      	mov	r3, r9
 8021c3c:	f7de fcdc 	bl	80005f8 <__aeabi_dmul>
 8021c40:	4602      	mov	r2, r0
 8021c42:	460b      	mov	r3, r1
 8021c44:	4630      	mov	r0, r6
 8021c46:	4639      	mov	r1, r7
 8021c48:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8021c4c:	f7de fb1c 	bl	8000288 <__aeabi_dsub>
 8021c50:	f805 6b01 	strb.w	r6, [r5], #1
 8021c54:	9e01      	ldr	r6, [sp, #4]
 8021c56:	9f03      	ldr	r7, [sp, #12]
 8021c58:	1bae      	subs	r6, r5, r6
 8021c5a:	42b7      	cmp	r7, r6
 8021c5c:	4602      	mov	r2, r0
 8021c5e:	460b      	mov	r3, r1
 8021c60:	d135      	bne.n	8021cce <_dtoa_r+0x6e6>
 8021c62:	f7de fb13 	bl	800028c <__adddf3>
 8021c66:	4642      	mov	r2, r8
 8021c68:	464b      	mov	r3, r9
 8021c6a:	4606      	mov	r6, r0
 8021c6c:	460f      	mov	r7, r1
 8021c6e:	f7de ff53 	bl	8000b18 <__aeabi_dcmpgt>
 8021c72:	b9d0      	cbnz	r0, 8021caa <_dtoa_r+0x6c2>
 8021c74:	4642      	mov	r2, r8
 8021c76:	464b      	mov	r3, r9
 8021c78:	4630      	mov	r0, r6
 8021c7a:	4639      	mov	r1, r7
 8021c7c:	f7de ff24 	bl	8000ac8 <__aeabi_dcmpeq>
 8021c80:	b110      	cbz	r0, 8021c88 <_dtoa_r+0x6a0>
 8021c82:	f01a 0f01 	tst.w	sl, #1
 8021c86:	d110      	bne.n	8021caa <_dtoa_r+0x6c2>
 8021c88:	4620      	mov	r0, r4
 8021c8a:	ee18 1a10 	vmov	r1, s16
 8021c8e:	f000 ff4d 	bl	8022b2c <_Bfree>
 8021c92:	2300      	movs	r3, #0
 8021c94:	9800      	ldr	r0, [sp, #0]
 8021c96:	702b      	strb	r3, [r5, #0]
 8021c98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c9a:	3001      	adds	r0, #1
 8021c9c:	6018      	str	r0, [r3, #0]
 8021c9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ca0:	2b00      	cmp	r3, #0
 8021ca2:	f43f acf1 	beq.w	8021688 <_dtoa_r+0xa0>
 8021ca6:	601d      	str	r5, [r3, #0]
 8021ca8:	e4ee      	b.n	8021688 <_dtoa_r+0xa0>
 8021caa:	9f00      	ldr	r7, [sp, #0]
 8021cac:	462b      	mov	r3, r5
 8021cae:	461d      	mov	r5, r3
 8021cb0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8021cb4:	2a39      	cmp	r2, #57	; 0x39
 8021cb6:	d106      	bne.n	8021cc6 <_dtoa_r+0x6de>
 8021cb8:	9a01      	ldr	r2, [sp, #4]
 8021cba:	429a      	cmp	r2, r3
 8021cbc:	d1f7      	bne.n	8021cae <_dtoa_r+0x6c6>
 8021cbe:	9901      	ldr	r1, [sp, #4]
 8021cc0:	2230      	movs	r2, #48	; 0x30
 8021cc2:	3701      	adds	r7, #1
 8021cc4:	700a      	strb	r2, [r1, #0]
 8021cc6:	781a      	ldrb	r2, [r3, #0]
 8021cc8:	3201      	adds	r2, #1
 8021cca:	701a      	strb	r2, [r3, #0]
 8021ccc:	e790      	b.n	8021bf0 <_dtoa_r+0x608>
 8021cce:	4ba6      	ldr	r3, [pc, #664]	; (8021f68 <_dtoa_r+0x980>)
 8021cd0:	2200      	movs	r2, #0
 8021cd2:	f7de fc91 	bl	80005f8 <__aeabi_dmul>
 8021cd6:	2200      	movs	r2, #0
 8021cd8:	2300      	movs	r3, #0
 8021cda:	4606      	mov	r6, r0
 8021cdc:	460f      	mov	r7, r1
 8021cde:	f7de fef3 	bl	8000ac8 <__aeabi_dcmpeq>
 8021ce2:	2800      	cmp	r0, #0
 8021ce4:	d09d      	beq.n	8021c22 <_dtoa_r+0x63a>
 8021ce6:	e7cf      	b.n	8021c88 <_dtoa_r+0x6a0>
 8021ce8:	9a08      	ldr	r2, [sp, #32]
 8021cea:	2a00      	cmp	r2, #0
 8021cec:	f000 80d7 	beq.w	8021e9e <_dtoa_r+0x8b6>
 8021cf0:	9a06      	ldr	r2, [sp, #24]
 8021cf2:	2a01      	cmp	r2, #1
 8021cf4:	f300 80ba 	bgt.w	8021e6c <_dtoa_r+0x884>
 8021cf8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021cfa:	2a00      	cmp	r2, #0
 8021cfc:	f000 80b2 	beq.w	8021e64 <_dtoa_r+0x87c>
 8021d00:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8021d04:	9e07      	ldr	r6, [sp, #28]
 8021d06:	9d04      	ldr	r5, [sp, #16]
 8021d08:	9a04      	ldr	r2, [sp, #16]
 8021d0a:	441a      	add	r2, r3
 8021d0c:	9204      	str	r2, [sp, #16]
 8021d0e:	9a05      	ldr	r2, [sp, #20]
 8021d10:	2101      	movs	r1, #1
 8021d12:	441a      	add	r2, r3
 8021d14:	4620      	mov	r0, r4
 8021d16:	9205      	str	r2, [sp, #20]
 8021d18:	f001 f80a 	bl	8022d30 <__i2b>
 8021d1c:	4607      	mov	r7, r0
 8021d1e:	2d00      	cmp	r5, #0
 8021d20:	dd0c      	ble.n	8021d3c <_dtoa_r+0x754>
 8021d22:	9b05      	ldr	r3, [sp, #20]
 8021d24:	2b00      	cmp	r3, #0
 8021d26:	dd09      	ble.n	8021d3c <_dtoa_r+0x754>
 8021d28:	42ab      	cmp	r3, r5
 8021d2a:	9a04      	ldr	r2, [sp, #16]
 8021d2c:	bfa8      	it	ge
 8021d2e:	462b      	movge	r3, r5
 8021d30:	1ad2      	subs	r2, r2, r3
 8021d32:	9204      	str	r2, [sp, #16]
 8021d34:	9a05      	ldr	r2, [sp, #20]
 8021d36:	1aed      	subs	r5, r5, r3
 8021d38:	1ad3      	subs	r3, r2, r3
 8021d3a:	9305      	str	r3, [sp, #20]
 8021d3c:	9b07      	ldr	r3, [sp, #28]
 8021d3e:	b31b      	cbz	r3, 8021d88 <_dtoa_r+0x7a0>
 8021d40:	9b08      	ldr	r3, [sp, #32]
 8021d42:	2b00      	cmp	r3, #0
 8021d44:	f000 80af 	beq.w	8021ea6 <_dtoa_r+0x8be>
 8021d48:	2e00      	cmp	r6, #0
 8021d4a:	dd13      	ble.n	8021d74 <_dtoa_r+0x78c>
 8021d4c:	4639      	mov	r1, r7
 8021d4e:	4632      	mov	r2, r6
 8021d50:	4620      	mov	r0, r4
 8021d52:	f001 f8ad 	bl	8022eb0 <__pow5mult>
 8021d56:	ee18 2a10 	vmov	r2, s16
 8021d5a:	4601      	mov	r1, r0
 8021d5c:	4607      	mov	r7, r0
 8021d5e:	4620      	mov	r0, r4
 8021d60:	f000 fffc 	bl	8022d5c <__multiply>
 8021d64:	ee18 1a10 	vmov	r1, s16
 8021d68:	4680      	mov	r8, r0
 8021d6a:	4620      	mov	r0, r4
 8021d6c:	f000 fede 	bl	8022b2c <_Bfree>
 8021d70:	ee08 8a10 	vmov	s16, r8
 8021d74:	9b07      	ldr	r3, [sp, #28]
 8021d76:	1b9a      	subs	r2, r3, r6
 8021d78:	d006      	beq.n	8021d88 <_dtoa_r+0x7a0>
 8021d7a:	ee18 1a10 	vmov	r1, s16
 8021d7e:	4620      	mov	r0, r4
 8021d80:	f001 f896 	bl	8022eb0 <__pow5mult>
 8021d84:	ee08 0a10 	vmov	s16, r0
 8021d88:	2101      	movs	r1, #1
 8021d8a:	4620      	mov	r0, r4
 8021d8c:	f000 ffd0 	bl	8022d30 <__i2b>
 8021d90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d92:	2b00      	cmp	r3, #0
 8021d94:	4606      	mov	r6, r0
 8021d96:	f340 8088 	ble.w	8021eaa <_dtoa_r+0x8c2>
 8021d9a:	461a      	mov	r2, r3
 8021d9c:	4601      	mov	r1, r0
 8021d9e:	4620      	mov	r0, r4
 8021da0:	f001 f886 	bl	8022eb0 <__pow5mult>
 8021da4:	9b06      	ldr	r3, [sp, #24]
 8021da6:	2b01      	cmp	r3, #1
 8021da8:	4606      	mov	r6, r0
 8021daa:	f340 8081 	ble.w	8021eb0 <_dtoa_r+0x8c8>
 8021dae:	f04f 0800 	mov.w	r8, #0
 8021db2:	6933      	ldr	r3, [r6, #16]
 8021db4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8021db8:	6918      	ldr	r0, [r3, #16]
 8021dba:	f000 ff69 	bl	8022c90 <__hi0bits>
 8021dbe:	f1c0 0020 	rsb	r0, r0, #32
 8021dc2:	9b05      	ldr	r3, [sp, #20]
 8021dc4:	4418      	add	r0, r3
 8021dc6:	f010 001f 	ands.w	r0, r0, #31
 8021dca:	f000 8092 	beq.w	8021ef2 <_dtoa_r+0x90a>
 8021dce:	f1c0 0320 	rsb	r3, r0, #32
 8021dd2:	2b04      	cmp	r3, #4
 8021dd4:	f340 808a 	ble.w	8021eec <_dtoa_r+0x904>
 8021dd8:	f1c0 001c 	rsb	r0, r0, #28
 8021ddc:	9b04      	ldr	r3, [sp, #16]
 8021dde:	4403      	add	r3, r0
 8021de0:	9304      	str	r3, [sp, #16]
 8021de2:	9b05      	ldr	r3, [sp, #20]
 8021de4:	4403      	add	r3, r0
 8021de6:	4405      	add	r5, r0
 8021de8:	9305      	str	r3, [sp, #20]
 8021dea:	9b04      	ldr	r3, [sp, #16]
 8021dec:	2b00      	cmp	r3, #0
 8021dee:	dd07      	ble.n	8021e00 <_dtoa_r+0x818>
 8021df0:	ee18 1a10 	vmov	r1, s16
 8021df4:	461a      	mov	r2, r3
 8021df6:	4620      	mov	r0, r4
 8021df8:	f001 f8b4 	bl	8022f64 <__lshift>
 8021dfc:	ee08 0a10 	vmov	s16, r0
 8021e00:	9b05      	ldr	r3, [sp, #20]
 8021e02:	2b00      	cmp	r3, #0
 8021e04:	dd05      	ble.n	8021e12 <_dtoa_r+0x82a>
 8021e06:	4631      	mov	r1, r6
 8021e08:	461a      	mov	r2, r3
 8021e0a:	4620      	mov	r0, r4
 8021e0c:	f001 f8aa 	bl	8022f64 <__lshift>
 8021e10:	4606      	mov	r6, r0
 8021e12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e14:	2b00      	cmp	r3, #0
 8021e16:	d06e      	beq.n	8021ef6 <_dtoa_r+0x90e>
 8021e18:	ee18 0a10 	vmov	r0, s16
 8021e1c:	4631      	mov	r1, r6
 8021e1e:	f001 f911 	bl	8023044 <__mcmp>
 8021e22:	2800      	cmp	r0, #0
 8021e24:	da67      	bge.n	8021ef6 <_dtoa_r+0x90e>
 8021e26:	9b00      	ldr	r3, [sp, #0]
 8021e28:	3b01      	subs	r3, #1
 8021e2a:	ee18 1a10 	vmov	r1, s16
 8021e2e:	9300      	str	r3, [sp, #0]
 8021e30:	220a      	movs	r2, #10
 8021e32:	2300      	movs	r3, #0
 8021e34:	4620      	mov	r0, r4
 8021e36:	f000 fe9b 	bl	8022b70 <__multadd>
 8021e3a:	9b08      	ldr	r3, [sp, #32]
 8021e3c:	ee08 0a10 	vmov	s16, r0
 8021e40:	2b00      	cmp	r3, #0
 8021e42:	f000 81b1 	beq.w	80221a8 <_dtoa_r+0xbc0>
 8021e46:	2300      	movs	r3, #0
 8021e48:	4639      	mov	r1, r7
 8021e4a:	220a      	movs	r2, #10
 8021e4c:	4620      	mov	r0, r4
 8021e4e:	f000 fe8f 	bl	8022b70 <__multadd>
 8021e52:	9b02      	ldr	r3, [sp, #8]
 8021e54:	2b00      	cmp	r3, #0
 8021e56:	4607      	mov	r7, r0
 8021e58:	f300 808e 	bgt.w	8021f78 <_dtoa_r+0x990>
 8021e5c:	9b06      	ldr	r3, [sp, #24]
 8021e5e:	2b02      	cmp	r3, #2
 8021e60:	dc51      	bgt.n	8021f06 <_dtoa_r+0x91e>
 8021e62:	e089      	b.n	8021f78 <_dtoa_r+0x990>
 8021e64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021e66:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8021e6a:	e74b      	b.n	8021d04 <_dtoa_r+0x71c>
 8021e6c:	9b03      	ldr	r3, [sp, #12]
 8021e6e:	1e5e      	subs	r6, r3, #1
 8021e70:	9b07      	ldr	r3, [sp, #28]
 8021e72:	42b3      	cmp	r3, r6
 8021e74:	bfbf      	itttt	lt
 8021e76:	9b07      	ldrlt	r3, [sp, #28]
 8021e78:	9607      	strlt	r6, [sp, #28]
 8021e7a:	1af2      	sublt	r2, r6, r3
 8021e7c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8021e7e:	bfb6      	itet	lt
 8021e80:	189b      	addlt	r3, r3, r2
 8021e82:	1b9e      	subge	r6, r3, r6
 8021e84:	930a      	strlt	r3, [sp, #40]	; 0x28
 8021e86:	9b03      	ldr	r3, [sp, #12]
 8021e88:	bfb8      	it	lt
 8021e8a:	2600      	movlt	r6, #0
 8021e8c:	2b00      	cmp	r3, #0
 8021e8e:	bfb7      	itett	lt
 8021e90:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8021e94:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8021e98:	1a9d      	sublt	r5, r3, r2
 8021e9a:	2300      	movlt	r3, #0
 8021e9c:	e734      	b.n	8021d08 <_dtoa_r+0x720>
 8021e9e:	9e07      	ldr	r6, [sp, #28]
 8021ea0:	9d04      	ldr	r5, [sp, #16]
 8021ea2:	9f08      	ldr	r7, [sp, #32]
 8021ea4:	e73b      	b.n	8021d1e <_dtoa_r+0x736>
 8021ea6:	9a07      	ldr	r2, [sp, #28]
 8021ea8:	e767      	b.n	8021d7a <_dtoa_r+0x792>
 8021eaa:	9b06      	ldr	r3, [sp, #24]
 8021eac:	2b01      	cmp	r3, #1
 8021eae:	dc18      	bgt.n	8021ee2 <_dtoa_r+0x8fa>
 8021eb0:	f1ba 0f00 	cmp.w	sl, #0
 8021eb4:	d115      	bne.n	8021ee2 <_dtoa_r+0x8fa>
 8021eb6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8021eba:	b993      	cbnz	r3, 8021ee2 <_dtoa_r+0x8fa>
 8021ebc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8021ec0:	0d1b      	lsrs	r3, r3, #20
 8021ec2:	051b      	lsls	r3, r3, #20
 8021ec4:	b183      	cbz	r3, 8021ee8 <_dtoa_r+0x900>
 8021ec6:	9b04      	ldr	r3, [sp, #16]
 8021ec8:	3301      	adds	r3, #1
 8021eca:	9304      	str	r3, [sp, #16]
 8021ecc:	9b05      	ldr	r3, [sp, #20]
 8021ece:	3301      	adds	r3, #1
 8021ed0:	9305      	str	r3, [sp, #20]
 8021ed2:	f04f 0801 	mov.w	r8, #1
 8021ed6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021ed8:	2b00      	cmp	r3, #0
 8021eda:	f47f af6a 	bne.w	8021db2 <_dtoa_r+0x7ca>
 8021ede:	2001      	movs	r0, #1
 8021ee0:	e76f      	b.n	8021dc2 <_dtoa_r+0x7da>
 8021ee2:	f04f 0800 	mov.w	r8, #0
 8021ee6:	e7f6      	b.n	8021ed6 <_dtoa_r+0x8ee>
 8021ee8:	4698      	mov	r8, r3
 8021eea:	e7f4      	b.n	8021ed6 <_dtoa_r+0x8ee>
 8021eec:	f43f af7d 	beq.w	8021dea <_dtoa_r+0x802>
 8021ef0:	4618      	mov	r0, r3
 8021ef2:	301c      	adds	r0, #28
 8021ef4:	e772      	b.n	8021ddc <_dtoa_r+0x7f4>
 8021ef6:	9b03      	ldr	r3, [sp, #12]
 8021ef8:	2b00      	cmp	r3, #0
 8021efa:	dc37      	bgt.n	8021f6c <_dtoa_r+0x984>
 8021efc:	9b06      	ldr	r3, [sp, #24]
 8021efe:	2b02      	cmp	r3, #2
 8021f00:	dd34      	ble.n	8021f6c <_dtoa_r+0x984>
 8021f02:	9b03      	ldr	r3, [sp, #12]
 8021f04:	9302      	str	r3, [sp, #8]
 8021f06:	9b02      	ldr	r3, [sp, #8]
 8021f08:	b96b      	cbnz	r3, 8021f26 <_dtoa_r+0x93e>
 8021f0a:	4631      	mov	r1, r6
 8021f0c:	2205      	movs	r2, #5
 8021f0e:	4620      	mov	r0, r4
 8021f10:	f000 fe2e 	bl	8022b70 <__multadd>
 8021f14:	4601      	mov	r1, r0
 8021f16:	4606      	mov	r6, r0
 8021f18:	ee18 0a10 	vmov	r0, s16
 8021f1c:	f001 f892 	bl	8023044 <__mcmp>
 8021f20:	2800      	cmp	r0, #0
 8021f22:	f73f adbb 	bgt.w	8021a9c <_dtoa_r+0x4b4>
 8021f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f28:	9d01      	ldr	r5, [sp, #4]
 8021f2a:	43db      	mvns	r3, r3
 8021f2c:	9300      	str	r3, [sp, #0]
 8021f2e:	f04f 0800 	mov.w	r8, #0
 8021f32:	4631      	mov	r1, r6
 8021f34:	4620      	mov	r0, r4
 8021f36:	f000 fdf9 	bl	8022b2c <_Bfree>
 8021f3a:	2f00      	cmp	r7, #0
 8021f3c:	f43f aea4 	beq.w	8021c88 <_dtoa_r+0x6a0>
 8021f40:	f1b8 0f00 	cmp.w	r8, #0
 8021f44:	d005      	beq.n	8021f52 <_dtoa_r+0x96a>
 8021f46:	45b8      	cmp	r8, r7
 8021f48:	d003      	beq.n	8021f52 <_dtoa_r+0x96a>
 8021f4a:	4641      	mov	r1, r8
 8021f4c:	4620      	mov	r0, r4
 8021f4e:	f000 fded 	bl	8022b2c <_Bfree>
 8021f52:	4639      	mov	r1, r7
 8021f54:	4620      	mov	r0, r4
 8021f56:	f000 fde9 	bl	8022b2c <_Bfree>
 8021f5a:	e695      	b.n	8021c88 <_dtoa_r+0x6a0>
 8021f5c:	2600      	movs	r6, #0
 8021f5e:	4637      	mov	r7, r6
 8021f60:	e7e1      	b.n	8021f26 <_dtoa_r+0x93e>
 8021f62:	9700      	str	r7, [sp, #0]
 8021f64:	4637      	mov	r7, r6
 8021f66:	e599      	b.n	8021a9c <_dtoa_r+0x4b4>
 8021f68:	40240000 	.word	0x40240000
 8021f6c:	9b08      	ldr	r3, [sp, #32]
 8021f6e:	2b00      	cmp	r3, #0
 8021f70:	f000 80ca 	beq.w	8022108 <_dtoa_r+0xb20>
 8021f74:	9b03      	ldr	r3, [sp, #12]
 8021f76:	9302      	str	r3, [sp, #8]
 8021f78:	2d00      	cmp	r5, #0
 8021f7a:	dd05      	ble.n	8021f88 <_dtoa_r+0x9a0>
 8021f7c:	4639      	mov	r1, r7
 8021f7e:	462a      	mov	r2, r5
 8021f80:	4620      	mov	r0, r4
 8021f82:	f000 ffef 	bl	8022f64 <__lshift>
 8021f86:	4607      	mov	r7, r0
 8021f88:	f1b8 0f00 	cmp.w	r8, #0
 8021f8c:	d05b      	beq.n	8022046 <_dtoa_r+0xa5e>
 8021f8e:	6879      	ldr	r1, [r7, #4]
 8021f90:	4620      	mov	r0, r4
 8021f92:	f000 fd8b 	bl	8022aac <_Balloc>
 8021f96:	4605      	mov	r5, r0
 8021f98:	b928      	cbnz	r0, 8021fa6 <_dtoa_r+0x9be>
 8021f9a:	4b87      	ldr	r3, [pc, #540]	; (80221b8 <_dtoa_r+0xbd0>)
 8021f9c:	4602      	mov	r2, r0
 8021f9e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8021fa2:	f7ff bb3b 	b.w	802161c <_dtoa_r+0x34>
 8021fa6:	693a      	ldr	r2, [r7, #16]
 8021fa8:	3202      	adds	r2, #2
 8021faa:	0092      	lsls	r2, r2, #2
 8021fac:	f107 010c 	add.w	r1, r7, #12
 8021fb0:	300c      	adds	r0, #12
 8021fb2:	f7fd fb80 	bl	801f6b6 <memcpy>
 8021fb6:	2201      	movs	r2, #1
 8021fb8:	4629      	mov	r1, r5
 8021fba:	4620      	mov	r0, r4
 8021fbc:	f000 ffd2 	bl	8022f64 <__lshift>
 8021fc0:	9b01      	ldr	r3, [sp, #4]
 8021fc2:	f103 0901 	add.w	r9, r3, #1
 8021fc6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8021fca:	4413      	add	r3, r2
 8021fcc:	9305      	str	r3, [sp, #20]
 8021fce:	f00a 0301 	and.w	r3, sl, #1
 8021fd2:	46b8      	mov	r8, r7
 8021fd4:	9304      	str	r3, [sp, #16]
 8021fd6:	4607      	mov	r7, r0
 8021fd8:	4631      	mov	r1, r6
 8021fda:	ee18 0a10 	vmov	r0, s16
 8021fde:	f7ff fa75 	bl	80214cc <quorem>
 8021fe2:	4641      	mov	r1, r8
 8021fe4:	9002      	str	r0, [sp, #8]
 8021fe6:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8021fea:	ee18 0a10 	vmov	r0, s16
 8021fee:	f001 f829 	bl	8023044 <__mcmp>
 8021ff2:	463a      	mov	r2, r7
 8021ff4:	9003      	str	r0, [sp, #12]
 8021ff6:	4631      	mov	r1, r6
 8021ff8:	4620      	mov	r0, r4
 8021ffa:	f001 f83f 	bl	802307c <__mdiff>
 8021ffe:	68c2      	ldr	r2, [r0, #12]
 8022000:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 8022004:	4605      	mov	r5, r0
 8022006:	bb02      	cbnz	r2, 802204a <_dtoa_r+0xa62>
 8022008:	4601      	mov	r1, r0
 802200a:	ee18 0a10 	vmov	r0, s16
 802200e:	f001 f819 	bl	8023044 <__mcmp>
 8022012:	4602      	mov	r2, r0
 8022014:	4629      	mov	r1, r5
 8022016:	4620      	mov	r0, r4
 8022018:	9207      	str	r2, [sp, #28]
 802201a:	f000 fd87 	bl	8022b2c <_Bfree>
 802201e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8022022:	ea43 0102 	orr.w	r1, r3, r2
 8022026:	9b04      	ldr	r3, [sp, #16]
 8022028:	430b      	orrs	r3, r1
 802202a:	464d      	mov	r5, r9
 802202c:	d10f      	bne.n	802204e <_dtoa_r+0xa66>
 802202e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8022032:	d02a      	beq.n	802208a <_dtoa_r+0xaa2>
 8022034:	9b03      	ldr	r3, [sp, #12]
 8022036:	2b00      	cmp	r3, #0
 8022038:	dd02      	ble.n	8022040 <_dtoa_r+0xa58>
 802203a:	9b02      	ldr	r3, [sp, #8]
 802203c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8022040:	f88b a000 	strb.w	sl, [fp]
 8022044:	e775      	b.n	8021f32 <_dtoa_r+0x94a>
 8022046:	4638      	mov	r0, r7
 8022048:	e7ba      	b.n	8021fc0 <_dtoa_r+0x9d8>
 802204a:	2201      	movs	r2, #1
 802204c:	e7e2      	b.n	8022014 <_dtoa_r+0xa2c>
 802204e:	9b03      	ldr	r3, [sp, #12]
 8022050:	2b00      	cmp	r3, #0
 8022052:	db04      	blt.n	802205e <_dtoa_r+0xa76>
 8022054:	9906      	ldr	r1, [sp, #24]
 8022056:	430b      	orrs	r3, r1
 8022058:	9904      	ldr	r1, [sp, #16]
 802205a:	430b      	orrs	r3, r1
 802205c:	d122      	bne.n	80220a4 <_dtoa_r+0xabc>
 802205e:	2a00      	cmp	r2, #0
 8022060:	ddee      	ble.n	8022040 <_dtoa_r+0xa58>
 8022062:	ee18 1a10 	vmov	r1, s16
 8022066:	2201      	movs	r2, #1
 8022068:	4620      	mov	r0, r4
 802206a:	f000 ff7b 	bl	8022f64 <__lshift>
 802206e:	4631      	mov	r1, r6
 8022070:	ee08 0a10 	vmov	s16, r0
 8022074:	f000 ffe6 	bl	8023044 <__mcmp>
 8022078:	2800      	cmp	r0, #0
 802207a:	dc03      	bgt.n	8022084 <_dtoa_r+0xa9c>
 802207c:	d1e0      	bne.n	8022040 <_dtoa_r+0xa58>
 802207e:	f01a 0f01 	tst.w	sl, #1
 8022082:	d0dd      	beq.n	8022040 <_dtoa_r+0xa58>
 8022084:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8022088:	d1d7      	bne.n	802203a <_dtoa_r+0xa52>
 802208a:	2339      	movs	r3, #57	; 0x39
 802208c:	f88b 3000 	strb.w	r3, [fp]
 8022090:	462b      	mov	r3, r5
 8022092:	461d      	mov	r5, r3
 8022094:	3b01      	subs	r3, #1
 8022096:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802209a:	2a39      	cmp	r2, #57	; 0x39
 802209c:	d071      	beq.n	8022182 <_dtoa_r+0xb9a>
 802209e:	3201      	adds	r2, #1
 80220a0:	701a      	strb	r2, [r3, #0]
 80220a2:	e746      	b.n	8021f32 <_dtoa_r+0x94a>
 80220a4:	2a00      	cmp	r2, #0
 80220a6:	dd07      	ble.n	80220b8 <_dtoa_r+0xad0>
 80220a8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80220ac:	d0ed      	beq.n	802208a <_dtoa_r+0xaa2>
 80220ae:	f10a 0301 	add.w	r3, sl, #1
 80220b2:	f88b 3000 	strb.w	r3, [fp]
 80220b6:	e73c      	b.n	8021f32 <_dtoa_r+0x94a>
 80220b8:	9b05      	ldr	r3, [sp, #20]
 80220ba:	f809 ac01 	strb.w	sl, [r9, #-1]
 80220be:	4599      	cmp	r9, r3
 80220c0:	d047      	beq.n	8022152 <_dtoa_r+0xb6a>
 80220c2:	ee18 1a10 	vmov	r1, s16
 80220c6:	2300      	movs	r3, #0
 80220c8:	220a      	movs	r2, #10
 80220ca:	4620      	mov	r0, r4
 80220cc:	f000 fd50 	bl	8022b70 <__multadd>
 80220d0:	45b8      	cmp	r8, r7
 80220d2:	ee08 0a10 	vmov	s16, r0
 80220d6:	f04f 0300 	mov.w	r3, #0
 80220da:	f04f 020a 	mov.w	r2, #10
 80220de:	4641      	mov	r1, r8
 80220e0:	4620      	mov	r0, r4
 80220e2:	d106      	bne.n	80220f2 <_dtoa_r+0xb0a>
 80220e4:	f000 fd44 	bl	8022b70 <__multadd>
 80220e8:	4680      	mov	r8, r0
 80220ea:	4607      	mov	r7, r0
 80220ec:	f109 0901 	add.w	r9, r9, #1
 80220f0:	e772      	b.n	8021fd8 <_dtoa_r+0x9f0>
 80220f2:	f000 fd3d 	bl	8022b70 <__multadd>
 80220f6:	4639      	mov	r1, r7
 80220f8:	4680      	mov	r8, r0
 80220fa:	2300      	movs	r3, #0
 80220fc:	220a      	movs	r2, #10
 80220fe:	4620      	mov	r0, r4
 8022100:	f000 fd36 	bl	8022b70 <__multadd>
 8022104:	4607      	mov	r7, r0
 8022106:	e7f1      	b.n	80220ec <_dtoa_r+0xb04>
 8022108:	9b03      	ldr	r3, [sp, #12]
 802210a:	9302      	str	r3, [sp, #8]
 802210c:	9d01      	ldr	r5, [sp, #4]
 802210e:	ee18 0a10 	vmov	r0, s16
 8022112:	4631      	mov	r1, r6
 8022114:	f7ff f9da 	bl	80214cc <quorem>
 8022118:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802211c:	9b01      	ldr	r3, [sp, #4]
 802211e:	f805 ab01 	strb.w	sl, [r5], #1
 8022122:	1aea      	subs	r2, r5, r3
 8022124:	9b02      	ldr	r3, [sp, #8]
 8022126:	4293      	cmp	r3, r2
 8022128:	dd09      	ble.n	802213e <_dtoa_r+0xb56>
 802212a:	ee18 1a10 	vmov	r1, s16
 802212e:	2300      	movs	r3, #0
 8022130:	220a      	movs	r2, #10
 8022132:	4620      	mov	r0, r4
 8022134:	f000 fd1c 	bl	8022b70 <__multadd>
 8022138:	ee08 0a10 	vmov	s16, r0
 802213c:	e7e7      	b.n	802210e <_dtoa_r+0xb26>
 802213e:	9b02      	ldr	r3, [sp, #8]
 8022140:	2b00      	cmp	r3, #0
 8022142:	bfc8      	it	gt
 8022144:	461d      	movgt	r5, r3
 8022146:	9b01      	ldr	r3, [sp, #4]
 8022148:	bfd8      	it	le
 802214a:	2501      	movle	r5, #1
 802214c:	441d      	add	r5, r3
 802214e:	f04f 0800 	mov.w	r8, #0
 8022152:	ee18 1a10 	vmov	r1, s16
 8022156:	2201      	movs	r2, #1
 8022158:	4620      	mov	r0, r4
 802215a:	f000 ff03 	bl	8022f64 <__lshift>
 802215e:	4631      	mov	r1, r6
 8022160:	ee08 0a10 	vmov	s16, r0
 8022164:	f000 ff6e 	bl	8023044 <__mcmp>
 8022168:	2800      	cmp	r0, #0
 802216a:	dc91      	bgt.n	8022090 <_dtoa_r+0xaa8>
 802216c:	d102      	bne.n	8022174 <_dtoa_r+0xb8c>
 802216e:	f01a 0f01 	tst.w	sl, #1
 8022172:	d18d      	bne.n	8022090 <_dtoa_r+0xaa8>
 8022174:	462b      	mov	r3, r5
 8022176:	461d      	mov	r5, r3
 8022178:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802217c:	2a30      	cmp	r2, #48	; 0x30
 802217e:	d0fa      	beq.n	8022176 <_dtoa_r+0xb8e>
 8022180:	e6d7      	b.n	8021f32 <_dtoa_r+0x94a>
 8022182:	9a01      	ldr	r2, [sp, #4]
 8022184:	429a      	cmp	r2, r3
 8022186:	d184      	bne.n	8022092 <_dtoa_r+0xaaa>
 8022188:	9b00      	ldr	r3, [sp, #0]
 802218a:	3301      	adds	r3, #1
 802218c:	9300      	str	r3, [sp, #0]
 802218e:	2331      	movs	r3, #49	; 0x31
 8022190:	7013      	strb	r3, [r2, #0]
 8022192:	e6ce      	b.n	8021f32 <_dtoa_r+0x94a>
 8022194:	4b09      	ldr	r3, [pc, #36]	; (80221bc <_dtoa_r+0xbd4>)
 8022196:	f7ff ba95 	b.w	80216c4 <_dtoa_r+0xdc>
 802219a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802219c:	2b00      	cmp	r3, #0
 802219e:	f47f aa6e 	bne.w	802167e <_dtoa_r+0x96>
 80221a2:	4b07      	ldr	r3, [pc, #28]	; (80221c0 <_dtoa_r+0xbd8>)
 80221a4:	f7ff ba8e 	b.w	80216c4 <_dtoa_r+0xdc>
 80221a8:	9b02      	ldr	r3, [sp, #8]
 80221aa:	2b00      	cmp	r3, #0
 80221ac:	dcae      	bgt.n	802210c <_dtoa_r+0xb24>
 80221ae:	9b06      	ldr	r3, [sp, #24]
 80221b0:	2b02      	cmp	r3, #2
 80221b2:	f73f aea8 	bgt.w	8021f06 <_dtoa_r+0x91e>
 80221b6:	e7a9      	b.n	802210c <_dtoa_r+0xb24>
 80221b8:	08027298 	.word	0x08027298
 80221bc:	0802709c 	.word	0x0802709c
 80221c0:	08027219 	.word	0x08027219

080221c4 <__errno>:
 80221c4:	4b01      	ldr	r3, [pc, #4]	; (80221cc <__errno+0x8>)
 80221c6:	6818      	ldr	r0, [r3, #0]
 80221c8:	4770      	bx	lr
 80221ca:	bf00      	nop
 80221cc:	20000150 	.word	0x20000150

080221d0 <__sflush_r>:
 80221d0:	898a      	ldrh	r2, [r1, #12]
 80221d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80221d6:	4605      	mov	r5, r0
 80221d8:	0710      	lsls	r0, r2, #28
 80221da:	460c      	mov	r4, r1
 80221dc:	d458      	bmi.n	8022290 <__sflush_r+0xc0>
 80221de:	684b      	ldr	r3, [r1, #4]
 80221e0:	2b00      	cmp	r3, #0
 80221e2:	dc05      	bgt.n	80221f0 <__sflush_r+0x20>
 80221e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80221e6:	2b00      	cmp	r3, #0
 80221e8:	dc02      	bgt.n	80221f0 <__sflush_r+0x20>
 80221ea:	2000      	movs	r0, #0
 80221ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80221f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80221f2:	2e00      	cmp	r6, #0
 80221f4:	d0f9      	beq.n	80221ea <__sflush_r+0x1a>
 80221f6:	2300      	movs	r3, #0
 80221f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80221fc:	682f      	ldr	r7, [r5, #0]
 80221fe:	602b      	str	r3, [r5, #0]
 8022200:	d032      	beq.n	8022268 <__sflush_r+0x98>
 8022202:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8022204:	89a3      	ldrh	r3, [r4, #12]
 8022206:	075a      	lsls	r2, r3, #29
 8022208:	d505      	bpl.n	8022216 <__sflush_r+0x46>
 802220a:	6863      	ldr	r3, [r4, #4]
 802220c:	1ac0      	subs	r0, r0, r3
 802220e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8022210:	b10b      	cbz	r3, 8022216 <__sflush_r+0x46>
 8022212:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8022214:	1ac0      	subs	r0, r0, r3
 8022216:	2300      	movs	r3, #0
 8022218:	4602      	mov	r2, r0
 802221a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802221c:	6a21      	ldr	r1, [r4, #32]
 802221e:	4628      	mov	r0, r5
 8022220:	47b0      	blx	r6
 8022222:	1c43      	adds	r3, r0, #1
 8022224:	89a3      	ldrh	r3, [r4, #12]
 8022226:	d106      	bne.n	8022236 <__sflush_r+0x66>
 8022228:	6829      	ldr	r1, [r5, #0]
 802222a:	291d      	cmp	r1, #29
 802222c:	d82c      	bhi.n	8022288 <__sflush_r+0xb8>
 802222e:	4a2a      	ldr	r2, [pc, #168]	; (80222d8 <__sflush_r+0x108>)
 8022230:	40ca      	lsrs	r2, r1
 8022232:	07d6      	lsls	r6, r2, #31
 8022234:	d528      	bpl.n	8022288 <__sflush_r+0xb8>
 8022236:	2200      	movs	r2, #0
 8022238:	6062      	str	r2, [r4, #4]
 802223a:	04d9      	lsls	r1, r3, #19
 802223c:	6922      	ldr	r2, [r4, #16]
 802223e:	6022      	str	r2, [r4, #0]
 8022240:	d504      	bpl.n	802224c <__sflush_r+0x7c>
 8022242:	1c42      	adds	r2, r0, #1
 8022244:	d101      	bne.n	802224a <__sflush_r+0x7a>
 8022246:	682b      	ldr	r3, [r5, #0]
 8022248:	b903      	cbnz	r3, 802224c <__sflush_r+0x7c>
 802224a:	6560      	str	r0, [r4, #84]	; 0x54
 802224c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802224e:	602f      	str	r7, [r5, #0]
 8022250:	2900      	cmp	r1, #0
 8022252:	d0ca      	beq.n	80221ea <__sflush_r+0x1a>
 8022254:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022258:	4299      	cmp	r1, r3
 802225a:	d002      	beq.n	8022262 <__sflush_r+0x92>
 802225c:	4628      	mov	r0, r5
 802225e:	f001 f8fd 	bl	802345c <_free_r>
 8022262:	2000      	movs	r0, #0
 8022264:	6360      	str	r0, [r4, #52]	; 0x34
 8022266:	e7c1      	b.n	80221ec <__sflush_r+0x1c>
 8022268:	6a21      	ldr	r1, [r4, #32]
 802226a:	2301      	movs	r3, #1
 802226c:	4628      	mov	r0, r5
 802226e:	47b0      	blx	r6
 8022270:	1c41      	adds	r1, r0, #1
 8022272:	d1c7      	bne.n	8022204 <__sflush_r+0x34>
 8022274:	682b      	ldr	r3, [r5, #0]
 8022276:	2b00      	cmp	r3, #0
 8022278:	d0c4      	beq.n	8022204 <__sflush_r+0x34>
 802227a:	2b1d      	cmp	r3, #29
 802227c:	d001      	beq.n	8022282 <__sflush_r+0xb2>
 802227e:	2b16      	cmp	r3, #22
 8022280:	d101      	bne.n	8022286 <__sflush_r+0xb6>
 8022282:	602f      	str	r7, [r5, #0]
 8022284:	e7b1      	b.n	80221ea <__sflush_r+0x1a>
 8022286:	89a3      	ldrh	r3, [r4, #12]
 8022288:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802228c:	81a3      	strh	r3, [r4, #12]
 802228e:	e7ad      	b.n	80221ec <__sflush_r+0x1c>
 8022290:	690f      	ldr	r7, [r1, #16]
 8022292:	2f00      	cmp	r7, #0
 8022294:	d0a9      	beq.n	80221ea <__sflush_r+0x1a>
 8022296:	0793      	lsls	r3, r2, #30
 8022298:	680e      	ldr	r6, [r1, #0]
 802229a:	bf08      	it	eq
 802229c:	694b      	ldreq	r3, [r1, #20]
 802229e:	600f      	str	r7, [r1, #0]
 80222a0:	bf18      	it	ne
 80222a2:	2300      	movne	r3, #0
 80222a4:	eba6 0807 	sub.w	r8, r6, r7
 80222a8:	608b      	str	r3, [r1, #8]
 80222aa:	f1b8 0f00 	cmp.w	r8, #0
 80222ae:	dd9c      	ble.n	80221ea <__sflush_r+0x1a>
 80222b0:	6a21      	ldr	r1, [r4, #32]
 80222b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80222b4:	4643      	mov	r3, r8
 80222b6:	463a      	mov	r2, r7
 80222b8:	4628      	mov	r0, r5
 80222ba:	47b0      	blx	r6
 80222bc:	2800      	cmp	r0, #0
 80222be:	dc06      	bgt.n	80222ce <__sflush_r+0xfe>
 80222c0:	89a3      	ldrh	r3, [r4, #12]
 80222c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80222c6:	81a3      	strh	r3, [r4, #12]
 80222c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80222cc:	e78e      	b.n	80221ec <__sflush_r+0x1c>
 80222ce:	4407      	add	r7, r0
 80222d0:	eba8 0800 	sub.w	r8, r8, r0
 80222d4:	e7e9      	b.n	80222aa <__sflush_r+0xda>
 80222d6:	bf00      	nop
 80222d8:	20400001 	.word	0x20400001

080222dc <_fflush_r>:
 80222dc:	b538      	push	{r3, r4, r5, lr}
 80222de:	690b      	ldr	r3, [r1, #16]
 80222e0:	4605      	mov	r5, r0
 80222e2:	460c      	mov	r4, r1
 80222e4:	b913      	cbnz	r3, 80222ec <_fflush_r+0x10>
 80222e6:	2500      	movs	r5, #0
 80222e8:	4628      	mov	r0, r5
 80222ea:	bd38      	pop	{r3, r4, r5, pc}
 80222ec:	b118      	cbz	r0, 80222f6 <_fflush_r+0x1a>
 80222ee:	6983      	ldr	r3, [r0, #24]
 80222f0:	b90b      	cbnz	r3, 80222f6 <_fflush_r+0x1a>
 80222f2:	f7fd f91b 	bl	801f52c <__sinit>
 80222f6:	4b14      	ldr	r3, [pc, #80]	; (8022348 <_fflush_r+0x6c>)
 80222f8:	429c      	cmp	r4, r3
 80222fa:	d11b      	bne.n	8022334 <_fflush_r+0x58>
 80222fc:	686c      	ldr	r4, [r5, #4]
 80222fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022302:	2b00      	cmp	r3, #0
 8022304:	d0ef      	beq.n	80222e6 <_fflush_r+0xa>
 8022306:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8022308:	07d0      	lsls	r0, r2, #31
 802230a:	d404      	bmi.n	8022316 <_fflush_r+0x3a>
 802230c:	0599      	lsls	r1, r3, #22
 802230e:	d402      	bmi.n	8022316 <_fflush_r+0x3a>
 8022310:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022312:	f7fd f9ce 	bl	801f6b2 <__retarget_lock_acquire_recursive>
 8022316:	4628      	mov	r0, r5
 8022318:	4621      	mov	r1, r4
 802231a:	f7ff ff59 	bl	80221d0 <__sflush_r>
 802231e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8022320:	07da      	lsls	r2, r3, #31
 8022322:	4605      	mov	r5, r0
 8022324:	d4e0      	bmi.n	80222e8 <_fflush_r+0xc>
 8022326:	89a3      	ldrh	r3, [r4, #12]
 8022328:	059b      	lsls	r3, r3, #22
 802232a:	d4dd      	bmi.n	80222e8 <_fflush_r+0xc>
 802232c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802232e:	f7fd f9c1 	bl	801f6b4 <__retarget_lock_release_recursive>
 8022332:	e7d9      	b.n	80222e8 <_fflush_r+0xc>
 8022334:	4b05      	ldr	r3, [pc, #20]	; (802234c <_fflush_r+0x70>)
 8022336:	429c      	cmp	r4, r3
 8022338:	d101      	bne.n	802233e <_fflush_r+0x62>
 802233a:	68ac      	ldr	r4, [r5, #8]
 802233c:	e7df      	b.n	80222fe <_fflush_r+0x22>
 802233e:	4b04      	ldr	r3, [pc, #16]	; (8022350 <_fflush_r+0x74>)
 8022340:	429c      	cmp	r4, r3
 8022342:	bf08      	it	eq
 8022344:	68ec      	ldreq	r4, [r5, #12]
 8022346:	e7da      	b.n	80222fe <_fflush_r+0x22>
 8022348:	08027048 	.word	0x08027048
 802234c:	08027068 	.word	0x08027068
 8022350:	08027028 	.word	0x08027028

08022354 <rshift>:
 8022354:	6903      	ldr	r3, [r0, #16]
 8022356:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 802235a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802235e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8022362:	f100 0414 	add.w	r4, r0, #20
 8022366:	dd45      	ble.n	80223f4 <rshift+0xa0>
 8022368:	f011 011f 	ands.w	r1, r1, #31
 802236c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8022370:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8022374:	d10c      	bne.n	8022390 <rshift+0x3c>
 8022376:	f100 0710 	add.w	r7, r0, #16
 802237a:	4629      	mov	r1, r5
 802237c:	42b1      	cmp	r1, r6
 802237e:	d334      	bcc.n	80223ea <rshift+0x96>
 8022380:	1a9b      	subs	r3, r3, r2
 8022382:	009b      	lsls	r3, r3, #2
 8022384:	1eea      	subs	r2, r5, #3
 8022386:	4296      	cmp	r6, r2
 8022388:	bf38      	it	cc
 802238a:	2300      	movcc	r3, #0
 802238c:	4423      	add	r3, r4
 802238e:	e015      	b.n	80223bc <rshift+0x68>
 8022390:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8022394:	f1c1 0820 	rsb	r8, r1, #32
 8022398:	40cf      	lsrs	r7, r1
 802239a:	f105 0e04 	add.w	lr, r5, #4
 802239e:	46a1      	mov	r9, r4
 80223a0:	4576      	cmp	r6, lr
 80223a2:	46f4      	mov	ip, lr
 80223a4:	d815      	bhi.n	80223d2 <rshift+0x7e>
 80223a6:	1a9a      	subs	r2, r3, r2
 80223a8:	0092      	lsls	r2, r2, #2
 80223aa:	3a04      	subs	r2, #4
 80223ac:	3501      	adds	r5, #1
 80223ae:	42ae      	cmp	r6, r5
 80223b0:	bf38      	it	cc
 80223b2:	2200      	movcc	r2, #0
 80223b4:	18a3      	adds	r3, r4, r2
 80223b6:	50a7      	str	r7, [r4, r2]
 80223b8:	b107      	cbz	r7, 80223bc <rshift+0x68>
 80223ba:	3304      	adds	r3, #4
 80223bc:	1b1a      	subs	r2, r3, r4
 80223be:	42a3      	cmp	r3, r4
 80223c0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80223c4:	bf08      	it	eq
 80223c6:	2300      	moveq	r3, #0
 80223c8:	6102      	str	r2, [r0, #16]
 80223ca:	bf08      	it	eq
 80223cc:	6143      	streq	r3, [r0, #20]
 80223ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80223d2:	f8dc c000 	ldr.w	ip, [ip]
 80223d6:	fa0c fc08 	lsl.w	ip, ip, r8
 80223da:	ea4c 0707 	orr.w	r7, ip, r7
 80223de:	f849 7b04 	str.w	r7, [r9], #4
 80223e2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80223e6:	40cf      	lsrs	r7, r1
 80223e8:	e7da      	b.n	80223a0 <rshift+0x4c>
 80223ea:	f851 cb04 	ldr.w	ip, [r1], #4
 80223ee:	f847 cf04 	str.w	ip, [r7, #4]!
 80223f2:	e7c3      	b.n	802237c <rshift+0x28>
 80223f4:	4623      	mov	r3, r4
 80223f6:	e7e1      	b.n	80223bc <rshift+0x68>

080223f8 <__hexdig_fun>:
 80223f8:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80223fc:	2b09      	cmp	r3, #9
 80223fe:	d802      	bhi.n	8022406 <__hexdig_fun+0xe>
 8022400:	3820      	subs	r0, #32
 8022402:	b2c0      	uxtb	r0, r0
 8022404:	4770      	bx	lr
 8022406:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802240a:	2b05      	cmp	r3, #5
 802240c:	d801      	bhi.n	8022412 <__hexdig_fun+0x1a>
 802240e:	3847      	subs	r0, #71	; 0x47
 8022410:	e7f7      	b.n	8022402 <__hexdig_fun+0xa>
 8022412:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8022416:	2b05      	cmp	r3, #5
 8022418:	d801      	bhi.n	802241e <__hexdig_fun+0x26>
 802241a:	3827      	subs	r0, #39	; 0x27
 802241c:	e7f1      	b.n	8022402 <__hexdig_fun+0xa>
 802241e:	2000      	movs	r0, #0
 8022420:	4770      	bx	lr
	...

08022424 <__gethex>:
 8022424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022428:	ed2d 8b02 	vpush	{d8}
 802242c:	b089      	sub	sp, #36	; 0x24
 802242e:	ee08 0a10 	vmov	s16, r0
 8022432:	9304      	str	r3, [sp, #16]
 8022434:	4bb4      	ldr	r3, [pc, #720]	; (8022708 <__gethex+0x2e4>)
 8022436:	681b      	ldr	r3, [r3, #0]
 8022438:	9301      	str	r3, [sp, #4]
 802243a:	4618      	mov	r0, r3
 802243c:	468b      	mov	fp, r1
 802243e:	4690      	mov	r8, r2
 8022440:	f7dd fec6 	bl	80001d0 <strlen>
 8022444:	9b01      	ldr	r3, [sp, #4]
 8022446:	f8db 2000 	ldr.w	r2, [fp]
 802244a:	4403      	add	r3, r0
 802244c:	4682      	mov	sl, r0
 802244e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8022452:	9305      	str	r3, [sp, #20]
 8022454:	1c93      	adds	r3, r2, #2
 8022456:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 802245a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 802245e:	32fe      	adds	r2, #254	; 0xfe
 8022460:	18d1      	adds	r1, r2, r3
 8022462:	461f      	mov	r7, r3
 8022464:	f813 0b01 	ldrb.w	r0, [r3], #1
 8022468:	9100      	str	r1, [sp, #0]
 802246a:	2830      	cmp	r0, #48	; 0x30
 802246c:	d0f8      	beq.n	8022460 <__gethex+0x3c>
 802246e:	f7ff ffc3 	bl	80223f8 <__hexdig_fun>
 8022472:	4604      	mov	r4, r0
 8022474:	2800      	cmp	r0, #0
 8022476:	d13a      	bne.n	80224ee <__gethex+0xca>
 8022478:	9901      	ldr	r1, [sp, #4]
 802247a:	4652      	mov	r2, sl
 802247c:	4638      	mov	r0, r7
 802247e:	f001 f9af 	bl	80237e0 <strncmp>
 8022482:	4605      	mov	r5, r0
 8022484:	2800      	cmp	r0, #0
 8022486:	d168      	bne.n	802255a <__gethex+0x136>
 8022488:	f817 000a 	ldrb.w	r0, [r7, sl]
 802248c:	eb07 060a 	add.w	r6, r7, sl
 8022490:	f7ff ffb2 	bl	80223f8 <__hexdig_fun>
 8022494:	2800      	cmp	r0, #0
 8022496:	d062      	beq.n	802255e <__gethex+0x13a>
 8022498:	4633      	mov	r3, r6
 802249a:	7818      	ldrb	r0, [r3, #0]
 802249c:	2830      	cmp	r0, #48	; 0x30
 802249e:	461f      	mov	r7, r3
 80224a0:	f103 0301 	add.w	r3, r3, #1
 80224a4:	d0f9      	beq.n	802249a <__gethex+0x76>
 80224a6:	f7ff ffa7 	bl	80223f8 <__hexdig_fun>
 80224aa:	2301      	movs	r3, #1
 80224ac:	fab0 f480 	clz	r4, r0
 80224b0:	0964      	lsrs	r4, r4, #5
 80224b2:	4635      	mov	r5, r6
 80224b4:	9300      	str	r3, [sp, #0]
 80224b6:	463a      	mov	r2, r7
 80224b8:	4616      	mov	r6, r2
 80224ba:	3201      	adds	r2, #1
 80224bc:	7830      	ldrb	r0, [r6, #0]
 80224be:	f7ff ff9b 	bl	80223f8 <__hexdig_fun>
 80224c2:	2800      	cmp	r0, #0
 80224c4:	d1f8      	bne.n	80224b8 <__gethex+0x94>
 80224c6:	9901      	ldr	r1, [sp, #4]
 80224c8:	4652      	mov	r2, sl
 80224ca:	4630      	mov	r0, r6
 80224cc:	f001 f988 	bl	80237e0 <strncmp>
 80224d0:	b980      	cbnz	r0, 80224f4 <__gethex+0xd0>
 80224d2:	b94d      	cbnz	r5, 80224e8 <__gethex+0xc4>
 80224d4:	eb06 050a 	add.w	r5, r6, sl
 80224d8:	462a      	mov	r2, r5
 80224da:	4616      	mov	r6, r2
 80224dc:	3201      	adds	r2, #1
 80224de:	7830      	ldrb	r0, [r6, #0]
 80224e0:	f7ff ff8a 	bl	80223f8 <__hexdig_fun>
 80224e4:	2800      	cmp	r0, #0
 80224e6:	d1f8      	bne.n	80224da <__gethex+0xb6>
 80224e8:	1bad      	subs	r5, r5, r6
 80224ea:	00ad      	lsls	r5, r5, #2
 80224ec:	e004      	b.n	80224f8 <__gethex+0xd4>
 80224ee:	2400      	movs	r4, #0
 80224f0:	4625      	mov	r5, r4
 80224f2:	e7e0      	b.n	80224b6 <__gethex+0x92>
 80224f4:	2d00      	cmp	r5, #0
 80224f6:	d1f7      	bne.n	80224e8 <__gethex+0xc4>
 80224f8:	7833      	ldrb	r3, [r6, #0]
 80224fa:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80224fe:	2b50      	cmp	r3, #80	; 0x50
 8022500:	d13b      	bne.n	802257a <__gethex+0x156>
 8022502:	7873      	ldrb	r3, [r6, #1]
 8022504:	2b2b      	cmp	r3, #43	; 0x2b
 8022506:	d02c      	beq.n	8022562 <__gethex+0x13e>
 8022508:	2b2d      	cmp	r3, #45	; 0x2d
 802250a:	d02e      	beq.n	802256a <__gethex+0x146>
 802250c:	1c71      	adds	r1, r6, #1
 802250e:	f04f 0900 	mov.w	r9, #0
 8022512:	7808      	ldrb	r0, [r1, #0]
 8022514:	f7ff ff70 	bl	80223f8 <__hexdig_fun>
 8022518:	1e43      	subs	r3, r0, #1
 802251a:	b2db      	uxtb	r3, r3
 802251c:	2b18      	cmp	r3, #24
 802251e:	d82c      	bhi.n	802257a <__gethex+0x156>
 8022520:	f1a0 0210 	sub.w	r2, r0, #16
 8022524:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8022528:	f7ff ff66 	bl	80223f8 <__hexdig_fun>
 802252c:	1e43      	subs	r3, r0, #1
 802252e:	b2db      	uxtb	r3, r3
 8022530:	2b18      	cmp	r3, #24
 8022532:	d91d      	bls.n	8022570 <__gethex+0x14c>
 8022534:	f1b9 0f00 	cmp.w	r9, #0
 8022538:	d000      	beq.n	802253c <__gethex+0x118>
 802253a:	4252      	negs	r2, r2
 802253c:	4415      	add	r5, r2
 802253e:	f8cb 1000 	str.w	r1, [fp]
 8022542:	b1e4      	cbz	r4, 802257e <__gethex+0x15a>
 8022544:	9b00      	ldr	r3, [sp, #0]
 8022546:	2b00      	cmp	r3, #0
 8022548:	bf14      	ite	ne
 802254a:	2700      	movne	r7, #0
 802254c:	2706      	moveq	r7, #6
 802254e:	4638      	mov	r0, r7
 8022550:	b009      	add	sp, #36	; 0x24
 8022552:	ecbd 8b02 	vpop	{d8}
 8022556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802255a:	463e      	mov	r6, r7
 802255c:	4625      	mov	r5, r4
 802255e:	2401      	movs	r4, #1
 8022560:	e7ca      	b.n	80224f8 <__gethex+0xd4>
 8022562:	f04f 0900 	mov.w	r9, #0
 8022566:	1cb1      	adds	r1, r6, #2
 8022568:	e7d3      	b.n	8022512 <__gethex+0xee>
 802256a:	f04f 0901 	mov.w	r9, #1
 802256e:	e7fa      	b.n	8022566 <__gethex+0x142>
 8022570:	230a      	movs	r3, #10
 8022572:	fb03 0202 	mla	r2, r3, r2, r0
 8022576:	3a10      	subs	r2, #16
 8022578:	e7d4      	b.n	8022524 <__gethex+0x100>
 802257a:	4631      	mov	r1, r6
 802257c:	e7df      	b.n	802253e <__gethex+0x11a>
 802257e:	1bf3      	subs	r3, r6, r7
 8022580:	3b01      	subs	r3, #1
 8022582:	4621      	mov	r1, r4
 8022584:	2b07      	cmp	r3, #7
 8022586:	dc0b      	bgt.n	80225a0 <__gethex+0x17c>
 8022588:	ee18 0a10 	vmov	r0, s16
 802258c:	f000 fa8e 	bl	8022aac <_Balloc>
 8022590:	4604      	mov	r4, r0
 8022592:	b940      	cbnz	r0, 80225a6 <__gethex+0x182>
 8022594:	4b5d      	ldr	r3, [pc, #372]	; (802270c <__gethex+0x2e8>)
 8022596:	4602      	mov	r2, r0
 8022598:	21de      	movs	r1, #222	; 0xde
 802259a:	485d      	ldr	r0, [pc, #372]	; (8022710 <__gethex+0x2ec>)
 802259c:	f001 f942 	bl	8023824 <__assert_func>
 80225a0:	3101      	adds	r1, #1
 80225a2:	105b      	asrs	r3, r3, #1
 80225a4:	e7ee      	b.n	8022584 <__gethex+0x160>
 80225a6:	f100 0914 	add.w	r9, r0, #20
 80225aa:	f04f 0b00 	mov.w	fp, #0
 80225ae:	f1ca 0301 	rsb	r3, sl, #1
 80225b2:	f8cd 9008 	str.w	r9, [sp, #8]
 80225b6:	f8cd b000 	str.w	fp, [sp]
 80225ba:	9306      	str	r3, [sp, #24]
 80225bc:	42b7      	cmp	r7, r6
 80225be:	d340      	bcc.n	8022642 <__gethex+0x21e>
 80225c0:	9802      	ldr	r0, [sp, #8]
 80225c2:	9b00      	ldr	r3, [sp, #0]
 80225c4:	f840 3b04 	str.w	r3, [r0], #4
 80225c8:	eba0 0009 	sub.w	r0, r0, r9
 80225cc:	1080      	asrs	r0, r0, #2
 80225ce:	0146      	lsls	r6, r0, #5
 80225d0:	6120      	str	r0, [r4, #16]
 80225d2:	4618      	mov	r0, r3
 80225d4:	f000 fb5c 	bl	8022c90 <__hi0bits>
 80225d8:	1a30      	subs	r0, r6, r0
 80225da:	f8d8 6000 	ldr.w	r6, [r8]
 80225de:	42b0      	cmp	r0, r6
 80225e0:	dd63      	ble.n	80226aa <__gethex+0x286>
 80225e2:	1b87      	subs	r7, r0, r6
 80225e4:	4639      	mov	r1, r7
 80225e6:	4620      	mov	r0, r4
 80225e8:	f000 ff00 	bl	80233ec <__any_on>
 80225ec:	4682      	mov	sl, r0
 80225ee:	b1a8      	cbz	r0, 802261c <__gethex+0x1f8>
 80225f0:	1e7b      	subs	r3, r7, #1
 80225f2:	1159      	asrs	r1, r3, #5
 80225f4:	f003 021f 	and.w	r2, r3, #31
 80225f8:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80225fc:	f04f 0a01 	mov.w	sl, #1
 8022600:	fa0a f202 	lsl.w	r2, sl, r2
 8022604:	420a      	tst	r2, r1
 8022606:	d009      	beq.n	802261c <__gethex+0x1f8>
 8022608:	4553      	cmp	r3, sl
 802260a:	dd05      	ble.n	8022618 <__gethex+0x1f4>
 802260c:	1eb9      	subs	r1, r7, #2
 802260e:	4620      	mov	r0, r4
 8022610:	f000 feec 	bl	80233ec <__any_on>
 8022614:	2800      	cmp	r0, #0
 8022616:	d145      	bne.n	80226a4 <__gethex+0x280>
 8022618:	f04f 0a02 	mov.w	sl, #2
 802261c:	4639      	mov	r1, r7
 802261e:	4620      	mov	r0, r4
 8022620:	f7ff fe98 	bl	8022354 <rshift>
 8022624:	443d      	add	r5, r7
 8022626:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802262a:	42ab      	cmp	r3, r5
 802262c:	da4c      	bge.n	80226c8 <__gethex+0x2a4>
 802262e:	ee18 0a10 	vmov	r0, s16
 8022632:	4621      	mov	r1, r4
 8022634:	f000 fa7a 	bl	8022b2c <_Bfree>
 8022638:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802263a:	2300      	movs	r3, #0
 802263c:	6013      	str	r3, [r2, #0]
 802263e:	27a3      	movs	r7, #163	; 0xa3
 8022640:	e785      	b.n	802254e <__gethex+0x12a>
 8022642:	1e73      	subs	r3, r6, #1
 8022644:	9a05      	ldr	r2, [sp, #20]
 8022646:	9303      	str	r3, [sp, #12]
 8022648:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 802264c:	4293      	cmp	r3, r2
 802264e:	d019      	beq.n	8022684 <__gethex+0x260>
 8022650:	f1bb 0f20 	cmp.w	fp, #32
 8022654:	d107      	bne.n	8022666 <__gethex+0x242>
 8022656:	9b02      	ldr	r3, [sp, #8]
 8022658:	9a00      	ldr	r2, [sp, #0]
 802265a:	f843 2b04 	str.w	r2, [r3], #4
 802265e:	9302      	str	r3, [sp, #8]
 8022660:	2300      	movs	r3, #0
 8022662:	9300      	str	r3, [sp, #0]
 8022664:	469b      	mov	fp, r3
 8022666:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 802266a:	f7ff fec5 	bl	80223f8 <__hexdig_fun>
 802266e:	9b00      	ldr	r3, [sp, #0]
 8022670:	f000 000f 	and.w	r0, r0, #15
 8022674:	fa00 f00b 	lsl.w	r0, r0, fp
 8022678:	4303      	orrs	r3, r0
 802267a:	9300      	str	r3, [sp, #0]
 802267c:	f10b 0b04 	add.w	fp, fp, #4
 8022680:	9b03      	ldr	r3, [sp, #12]
 8022682:	e00d      	b.n	80226a0 <__gethex+0x27c>
 8022684:	9b03      	ldr	r3, [sp, #12]
 8022686:	9a06      	ldr	r2, [sp, #24]
 8022688:	4413      	add	r3, r2
 802268a:	42bb      	cmp	r3, r7
 802268c:	d3e0      	bcc.n	8022650 <__gethex+0x22c>
 802268e:	4618      	mov	r0, r3
 8022690:	9901      	ldr	r1, [sp, #4]
 8022692:	9307      	str	r3, [sp, #28]
 8022694:	4652      	mov	r2, sl
 8022696:	f001 f8a3 	bl	80237e0 <strncmp>
 802269a:	9b07      	ldr	r3, [sp, #28]
 802269c:	2800      	cmp	r0, #0
 802269e:	d1d7      	bne.n	8022650 <__gethex+0x22c>
 80226a0:	461e      	mov	r6, r3
 80226a2:	e78b      	b.n	80225bc <__gethex+0x198>
 80226a4:	f04f 0a03 	mov.w	sl, #3
 80226a8:	e7b8      	b.n	802261c <__gethex+0x1f8>
 80226aa:	da0a      	bge.n	80226c2 <__gethex+0x29e>
 80226ac:	1a37      	subs	r7, r6, r0
 80226ae:	4621      	mov	r1, r4
 80226b0:	ee18 0a10 	vmov	r0, s16
 80226b4:	463a      	mov	r2, r7
 80226b6:	f000 fc55 	bl	8022f64 <__lshift>
 80226ba:	1bed      	subs	r5, r5, r7
 80226bc:	4604      	mov	r4, r0
 80226be:	f100 0914 	add.w	r9, r0, #20
 80226c2:	f04f 0a00 	mov.w	sl, #0
 80226c6:	e7ae      	b.n	8022626 <__gethex+0x202>
 80226c8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80226cc:	42a8      	cmp	r0, r5
 80226ce:	dd72      	ble.n	80227b6 <__gethex+0x392>
 80226d0:	1b45      	subs	r5, r0, r5
 80226d2:	42ae      	cmp	r6, r5
 80226d4:	dc36      	bgt.n	8022744 <__gethex+0x320>
 80226d6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80226da:	2b02      	cmp	r3, #2
 80226dc:	d02a      	beq.n	8022734 <__gethex+0x310>
 80226de:	2b03      	cmp	r3, #3
 80226e0:	d02c      	beq.n	802273c <__gethex+0x318>
 80226e2:	2b01      	cmp	r3, #1
 80226e4:	d11c      	bne.n	8022720 <__gethex+0x2fc>
 80226e6:	42ae      	cmp	r6, r5
 80226e8:	d11a      	bne.n	8022720 <__gethex+0x2fc>
 80226ea:	2e01      	cmp	r6, #1
 80226ec:	d112      	bne.n	8022714 <__gethex+0x2f0>
 80226ee:	9a04      	ldr	r2, [sp, #16]
 80226f0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80226f4:	6013      	str	r3, [r2, #0]
 80226f6:	2301      	movs	r3, #1
 80226f8:	6123      	str	r3, [r4, #16]
 80226fa:	f8c9 3000 	str.w	r3, [r9]
 80226fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022700:	2762      	movs	r7, #98	; 0x62
 8022702:	601c      	str	r4, [r3, #0]
 8022704:	e723      	b.n	802254e <__gethex+0x12a>
 8022706:	bf00      	nop
 8022708:	08027310 	.word	0x08027310
 802270c:	08027298 	.word	0x08027298
 8022710:	080272a9 	.word	0x080272a9
 8022714:	1e71      	subs	r1, r6, #1
 8022716:	4620      	mov	r0, r4
 8022718:	f000 fe68 	bl	80233ec <__any_on>
 802271c:	2800      	cmp	r0, #0
 802271e:	d1e6      	bne.n	80226ee <__gethex+0x2ca>
 8022720:	ee18 0a10 	vmov	r0, s16
 8022724:	4621      	mov	r1, r4
 8022726:	f000 fa01 	bl	8022b2c <_Bfree>
 802272a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802272c:	2300      	movs	r3, #0
 802272e:	6013      	str	r3, [r2, #0]
 8022730:	2750      	movs	r7, #80	; 0x50
 8022732:	e70c      	b.n	802254e <__gethex+0x12a>
 8022734:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022736:	2b00      	cmp	r3, #0
 8022738:	d1f2      	bne.n	8022720 <__gethex+0x2fc>
 802273a:	e7d8      	b.n	80226ee <__gethex+0x2ca>
 802273c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802273e:	2b00      	cmp	r3, #0
 8022740:	d1d5      	bne.n	80226ee <__gethex+0x2ca>
 8022742:	e7ed      	b.n	8022720 <__gethex+0x2fc>
 8022744:	1e6f      	subs	r7, r5, #1
 8022746:	f1ba 0f00 	cmp.w	sl, #0
 802274a:	d131      	bne.n	80227b0 <__gethex+0x38c>
 802274c:	b127      	cbz	r7, 8022758 <__gethex+0x334>
 802274e:	4639      	mov	r1, r7
 8022750:	4620      	mov	r0, r4
 8022752:	f000 fe4b 	bl	80233ec <__any_on>
 8022756:	4682      	mov	sl, r0
 8022758:	117b      	asrs	r3, r7, #5
 802275a:	2101      	movs	r1, #1
 802275c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8022760:	f007 071f 	and.w	r7, r7, #31
 8022764:	fa01 f707 	lsl.w	r7, r1, r7
 8022768:	421f      	tst	r7, r3
 802276a:	4629      	mov	r1, r5
 802276c:	4620      	mov	r0, r4
 802276e:	bf18      	it	ne
 8022770:	f04a 0a02 	orrne.w	sl, sl, #2
 8022774:	1b76      	subs	r6, r6, r5
 8022776:	f7ff fded 	bl	8022354 <rshift>
 802277a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802277e:	2702      	movs	r7, #2
 8022780:	f1ba 0f00 	cmp.w	sl, #0
 8022784:	d048      	beq.n	8022818 <__gethex+0x3f4>
 8022786:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802278a:	2b02      	cmp	r3, #2
 802278c:	d015      	beq.n	80227ba <__gethex+0x396>
 802278e:	2b03      	cmp	r3, #3
 8022790:	d017      	beq.n	80227c2 <__gethex+0x39e>
 8022792:	2b01      	cmp	r3, #1
 8022794:	d109      	bne.n	80227aa <__gethex+0x386>
 8022796:	f01a 0f02 	tst.w	sl, #2
 802279a:	d006      	beq.n	80227aa <__gethex+0x386>
 802279c:	f8d9 0000 	ldr.w	r0, [r9]
 80227a0:	ea4a 0a00 	orr.w	sl, sl, r0
 80227a4:	f01a 0f01 	tst.w	sl, #1
 80227a8:	d10e      	bne.n	80227c8 <__gethex+0x3a4>
 80227aa:	f047 0710 	orr.w	r7, r7, #16
 80227ae:	e033      	b.n	8022818 <__gethex+0x3f4>
 80227b0:	f04f 0a01 	mov.w	sl, #1
 80227b4:	e7d0      	b.n	8022758 <__gethex+0x334>
 80227b6:	2701      	movs	r7, #1
 80227b8:	e7e2      	b.n	8022780 <__gethex+0x35c>
 80227ba:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80227bc:	f1c3 0301 	rsb	r3, r3, #1
 80227c0:	9315      	str	r3, [sp, #84]	; 0x54
 80227c2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80227c4:	2b00      	cmp	r3, #0
 80227c6:	d0f0      	beq.n	80227aa <__gethex+0x386>
 80227c8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80227cc:	f104 0314 	add.w	r3, r4, #20
 80227d0:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80227d4:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80227d8:	f04f 0c00 	mov.w	ip, #0
 80227dc:	4618      	mov	r0, r3
 80227de:	f853 2b04 	ldr.w	r2, [r3], #4
 80227e2:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 80227e6:	d01c      	beq.n	8022822 <__gethex+0x3fe>
 80227e8:	3201      	adds	r2, #1
 80227ea:	6002      	str	r2, [r0, #0]
 80227ec:	2f02      	cmp	r7, #2
 80227ee:	f104 0314 	add.w	r3, r4, #20
 80227f2:	d13f      	bne.n	8022874 <__gethex+0x450>
 80227f4:	f8d8 2000 	ldr.w	r2, [r8]
 80227f8:	3a01      	subs	r2, #1
 80227fa:	42b2      	cmp	r2, r6
 80227fc:	d10a      	bne.n	8022814 <__gethex+0x3f0>
 80227fe:	1171      	asrs	r1, r6, #5
 8022800:	2201      	movs	r2, #1
 8022802:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8022806:	f006 061f 	and.w	r6, r6, #31
 802280a:	fa02 f606 	lsl.w	r6, r2, r6
 802280e:	421e      	tst	r6, r3
 8022810:	bf18      	it	ne
 8022812:	4617      	movne	r7, r2
 8022814:	f047 0720 	orr.w	r7, r7, #32
 8022818:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802281a:	601c      	str	r4, [r3, #0]
 802281c:	9b04      	ldr	r3, [sp, #16]
 802281e:	601d      	str	r5, [r3, #0]
 8022820:	e695      	b.n	802254e <__gethex+0x12a>
 8022822:	4299      	cmp	r1, r3
 8022824:	f843 cc04 	str.w	ip, [r3, #-4]
 8022828:	d8d8      	bhi.n	80227dc <__gethex+0x3b8>
 802282a:	68a3      	ldr	r3, [r4, #8]
 802282c:	459b      	cmp	fp, r3
 802282e:	db19      	blt.n	8022864 <__gethex+0x440>
 8022830:	6861      	ldr	r1, [r4, #4]
 8022832:	ee18 0a10 	vmov	r0, s16
 8022836:	3101      	adds	r1, #1
 8022838:	f000 f938 	bl	8022aac <_Balloc>
 802283c:	4681      	mov	r9, r0
 802283e:	b918      	cbnz	r0, 8022848 <__gethex+0x424>
 8022840:	4b1a      	ldr	r3, [pc, #104]	; (80228ac <__gethex+0x488>)
 8022842:	4602      	mov	r2, r0
 8022844:	2184      	movs	r1, #132	; 0x84
 8022846:	e6a8      	b.n	802259a <__gethex+0x176>
 8022848:	6922      	ldr	r2, [r4, #16]
 802284a:	3202      	adds	r2, #2
 802284c:	f104 010c 	add.w	r1, r4, #12
 8022850:	0092      	lsls	r2, r2, #2
 8022852:	300c      	adds	r0, #12
 8022854:	f7fc ff2f 	bl	801f6b6 <memcpy>
 8022858:	4621      	mov	r1, r4
 802285a:	ee18 0a10 	vmov	r0, s16
 802285e:	f000 f965 	bl	8022b2c <_Bfree>
 8022862:	464c      	mov	r4, r9
 8022864:	6923      	ldr	r3, [r4, #16]
 8022866:	1c5a      	adds	r2, r3, #1
 8022868:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 802286c:	6122      	str	r2, [r4, #16]
 802286e:	2201      	movs	r2, #1
 8022870:	615a      	str	r2, [r3, #20]
 8022872:	e7bb      	b.n	80227ec <__gethex+0x3c8>
 8022874:	6922      	ldr	r2, [r4, #16]
 8022876:	455a      	cmp	r2, fp
 8022878:	dd0b      	ble.n	8022892 <__gethex+0x46e>
 802287a:	2101      	movs	r1, #1
 802287c:	4620      	mov	r0, r4
 802287e:	f7ff fd69 	bl	8022354 <rshift>
 8022882:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8022886:	3501      	adds	r5, #1
 8022888:	42ab      	cmp	r3, r5
 802288a:	f6ff aed0 	blt.w	802262e <__gethex+0x20a>
 802288e:	2701      	movs	r7, #1
 8022890:	e7c0      	b.n	8022814 <__gethex+0x3f0>
 8022892:	f016 061f 	ands.w	r6, r6, #31
 8022896:	d0fa      	beq.n	802288e <__gethex+0x46a>
 8022898:	4453      	add	r3, sl
 802289a:	f1c6 0620 	rsb	r6, r6, #32
 802289e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80228a2:	f000 f9f5 	bl	8022c90 <__hi0bits>
 80228a6:	42b0      	cmp	r0, r6
 80228a8:	dbe7      	blt.n	802287a <__gethex+0x456>
 80228aa:	e7f0      	b.n	802288e <__gethex+0x46a>
 80228ac:	08027298 	.word	0x08027298

080228b0 <L_shift>:
 80228b0:	f1c2 0208 	rsb	r2, r2, #8
 80228b4:	0092      	lsls	r2, r2, #2
 80228b6:	b570      	push	{r4, r5, r6, lr}
 80228b8:	f1c2 0620 	rsb	r6, r2, #32
 80228bc:	6843      	ldr	r3, [r0, #4]
 80228be:	6804      	ldr	r4, [r0, #0]
 80228c0:	fa03 f506 	lsl.w	r5, r3, r6
 80228c4:	432c      	orrs	r4, r5
 80228c6:	40d3      	lsrs	r3, r2
 80228c8:	6004      	str	r4, [r0, #0]
 80228ca:	f840 3f04 	str.w	r3, [r0, #4]!
 80228ce:	4288      	cmp	r0, r1
 80228d0:	d3f4      	bcc.n	80228bc <L_shift+0xc>
 80228d2:	bd70      	pop	{r4, r5, r6, pc}

080228d4 <__match>:
 80228d4:	b530      	push	{r4, r5, lr}
 80228d6:	6803      	ldr	r3, [r0, #0]
 80228d8:	3301      	adds	r3, #1
 80228da:	f811 4b01 	ldrb.w	r4, [r1], #1
 80228de:	b914      	cbnz	r4, 80228e6 <__match+0x12>
 80228e0:	6003      	str	r3, [r0, #0]
 80228e2:	2001      	movs	r0, #1
 80228e4:	bd30      	pop	{r4, r5, pc}
 80228e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80228ea:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80228ee:	2d19      	cmp	r5, #25
 80228f0:	bf98      	it	ls
 80228f2:	3220      	addls	r2, #32
 80228f4:	42a2      	cmp	r2, r4
 80228f6:	d0f0      	beq.n	80228da <__match+0x6>
 80228f8:	2000      	movs	r0, #0
 80228fa:	e7f3      	b.n	80228e4 <__match+0x10>

080228fc <__hexnan>:
 80228fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022900:	680b      	ldr	r3, [r1, #0]
 8022902:	115e      	asrs	r6, r3, #5
 8022904:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8022908:	f013 031f 	ands.w	r3, r3, #31
 802290c:	b087      	sub	sp, #28
 802290e:	bf18      	it	ne
 8022910:	3604      	addne	r6, #4
 8022912:	2500      	movs	r5, #0
 8022914:	1f37      	subs	r7, r6, #4
 8022916:	4690      	mov	r8, r2
 8022918:	6802      	ldr	r2, [r0, #0]
 802291a:	9301      	str	r3, [sp, #4]
 802291c:	4682      	mov	sl, r0
 802291e:	f846 5c04 	str.w	r5, [r6, #-4]
 8022922:	46b9      	mov	r9, r7
 8022924:	463c      	mov	r4, r7
 8022926:	9502      	str	r5, [sp, #8]
 8022928:	46ab      	mov	fp, r5
 802292a:	7851      	ldrb	r1, [r2, #1]
 802292c:	1c53      	adds	r3, r2, #1
 802292e:	9303      	str	r3, [sp, #12]
 8022930:	b341      	cbz	r1, 8022984 <__hexnan+0x88>
 8022932:	4608      	mov	r0, r1
 8022934:	9205      	str	r2, [sp, #20]
 8022936:	9104      	str	r1, [sp, #16]
 8022938:	f7ff fd5e 	bl	80223f8 <__hexdig_fun>
 802293c:	2800      	cmp	r0, #0
 802293e:	d14f      	bne.n	80229e0 <__hexnan+0xe4>
 8022940:	9904      	ldr	r1, [sp, #16]
 8022942:	9a05      	ldr	r2, [sp, #20]
 8022944:	2920      	cmp	r1, #32
 8022946:	d818      	bhi.n	802297a <__hexnan+0x7e>
 8022948:	9b02      	ldr	r3, [sp, #8]
 802294a:	459b      	cmp	fp, r3
 802294c:	dd13      	ble.n	8022976 <__hexnan+0x7a>
 802294e:	454c      	cmp	r4, r9
 8022950:	d206      	bcs.n	8022960 <__hexnan+0x64>
 8022952:	2d07      	cmp	r5, #7
 8022954:	dc04      	bgt.n	8022960 <__hexnan+0x64>
 8022956:	462a      	mov	r2, r5
 8022958:	4649      	mov	r1, r9
 802295a:	4620      	mov	r0, r4
 802295c:	f7ff ffa8 	bl	80228b0 <L_shift>
 8022960:	4544      	cmp	r4, r8
 8022962:	d950      	bls.n	8022a06 <__hexnan+0x10a>
 8022964:	2300      	movs	r3, #0
 8022966:	f1a4 0904 	sub.w	r9, r4, #4
 802296a:	f844 3c04 	str.w	r3, [r4, #-4]
 802296e:	f8cd b008 	str.w	fp, [sp, #8]
 8022972:	464c      	mov	r4, r9
 8022974:	461d      	mov	r5, r3
 8022976:	9a03      	ldr	r2, [sp, #12]
 8022978:	e7d7      	b.n	802292a <__hexnan+0x2e>
 802297a:	2929      	cmp	r1, #41	; 0x29
 802297c:	d156      	bne.n	8022a2c <__hexnan+0x130>
 802297e:	3202      	adds	r2, #2
 8022980:	f8ca 2000 	str.w	r2, [sl]
 8022984:	f1bb 0f00 	cmp.w	fp, #0
 8022988:	d050      	beq.n	8022a2c <__hexnan+0x130>
 802298a:	454c      	cmp	r4, r9
 802298c:	d206      	bcs.n	802299c <__hexnan+0xa0>
 802298e:	2d07      	cmp	r5, #7
 8022990:	dc04      	bgt.n	802299c <__hexnan+0xa0>
 8022992:	462a      	mov	r2, r5
 8022994:	4649      	mov	r1, r9
 8022996:	4620      	mov	r0, r4
 8022998:	f7ff ff8a 	bl	80228b0 <L_shift>
 802299c:	4544      	cmp	r4, r8
 802299e:	d934      	bls.n	8022a0a <__hexnan+0x10e>
 80229a0:	f1a8 0204 	sub.w	r2, r8, #4
 80229a4:	4623      	mov	r3, r4
 80229a6:	f853 1b04 	ldr.w	r1, [r3], #4
 80229aa:	f842 1f04 	str.w	r1, [r2, #4]!
 80229ae:	429f      	cmp	r7, r3
 80229b0:	d2f9      	bcs.n	80229a6 <__hexnan+0xaa>
 80229b2:	1b3b      	subs	r3, r7, r4
 80229b4:	f023 0303 	bic.w	r3, r3, #3
 80229b8:	3304      	adds	r3, #4
 80229ba:	3401      	adds	r4, #1
 80229bc:	3e03      	subs	r6, #3
 80229be:	42b4      	cmp	r4, r6
 80229c0:	bf88      	it	hi
 80229c2:	2304      	movhi	r3, #4
 80229c4:	4443      	add	r3, r8
 80229c6:	2200      	movs	r2, #0
 80229c8:	f843 2b04 	str.w	r2, [r3], #4
 80229cc:	429f      	cmp	r7, r3
 80229ce:	d2fb      	bcs.n	80229c8 <__hexnan+0xcc>
 80229d0:	683b      	ldr	r3, [r7, #0]
 80229d2:	b91b      	cbnz	r3, 80229dc <__hexnan+0xe0>
 80229d4:	4547      	cmp	r7, r8
 80229d6:	d127      	bne.n	8022a28 <__hexnan+0x12c>
 80229d8:	2301      	movs	r3, #1
 80229da:	603b      	str	r3, [r7, #0]
 80229dc:	2005      	movs	r0, #5
 80229de:	e026      	b.n	8022a2e <__hexnan+0x132>
 80229e0:	3501      	adds	r5, #1
 80229e2:	2d08      	cmp	r5, #8
 80229e4:	f10b 0b01 	add.w	fp, fp, #1
 80229e8:	dd06      	ble.n	80229f8 <__hexnan+0xfc>
 80229ea:	4544      	cmp	r4, r8
 80229ec:	d9c3      	bls.n	8022976 <__hexnan+0x7a>
 80229ee:	2300      	movs	r3, #0
 80229f0:	f844 3c04 	str.w	r3, [r4, #-4]
 80229f4:	2501      	movs	r5, #1
 80229f6:	3c04      	subs	r4, #4
 80229f8:	6822      	ldr	r2, [r4, #0]
 80229fa:	f000 000f 	and.w	r0, r0, #15
 80229fe:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8022a02:	6022      	str	r2, [r4, #0]
 8022a04:	e7b7      	b.n	8022976 <__hexnan+0x7a>
 8022a06:	2508      	movs	r5, #8
 8022a08:	e7b5      	b.n	8022976 <__hexnan+0x7a>
 8022a0a:	9b01      	ldr	r3, [sp, #4]
 8022a0c:	2b00      	cmp	r3, #0
 8022a0e:	d0df      	beq.n	80229d0 <__hexnan+0xd4>
 8022a10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8022a14:	f1c3 0320 	rsb	r3, r3, #32
 8022a18:	fa22 f303 	lsr.w	r3, r2, r3
 8022a1c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8022a20:	401a      	ands	r2, r3
 8022a22:	f846 2c04 	str.w	r2, [r6, #-4]
 8022a26:	e7d3      	b.n	80229d0 <__hexnan+0xd4>
 8022a28:	3f04      	subs	r7, #4
 8022a2a:	e7d1      	b.n	80229d0 <__hexnan+0xd4>
 8022a2c:	2004      	movs	r0, #4
 8022a2e:	b007      	add	sp, #28
 8022a30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022a34 <_localeconv_r>:
 8022a34:	4800      	ldr	r0, [pc, #0]	; (8022a38 <_localeconv_r+0x4>)
 8022a36:	4770      	bx	lr
 8022a38:	200002a8 	.word	0x200002a8

08022a3c <_lseek_r>:
 8022a3c:	b538      	push	{r3, r4, r5, lr}
 8022a3e:	4d07      	ldr	r5, [pc, #28]	; (8022a5c <_lseek_r+0x20>)
 8022a40:	4604      	mov	r4, r0
 8022a42:	4608      	mov	r0, r1
 8022a44:	4611      	mov	r1, r2
 8022a46:	2200      	movs	r2, #0
 8022a48:	602a      	str	r2, [r5, #0]
 8022a4a:	461a      	mov	r2, r3
 8022a4c:	f003 feb6 	bl	80267bc <_lseek>
 8022a50:	1c43      	adds	r3, r0, #1
 8022a52:	d102      	bne.n	8022a5a <_lseek_r+0x1e>
 8022a54:	682b      	ldr	r3, [r5, #0]
 8022a56:	b103      	cbz	r3, 8022a5a <_lseek_r+0x1e>
 8022a58:	6023      	str	r3, [r4, #0]
 8022a5a:	bd38      	pop	{r3, r4, r5, pc}
 8022a5c:	2000f584 	.word	0x2000f584

08022a60 <malloc>:
 8022a60:	4b02      	ldr	r3, [pc, #8]	; (8022a6c <malloc+0xc>)
 8022a62:	4601      	mov	r1, r0
 8022a64:	6818      	ldr	r0, [r3, #0]
 8022a66:	f7fc be5d 	b.w	801f724 <_malloc_r>
 8022a6a:	bf00      	nop
 8022a6c:	20000150 	.word	0x20000150

08022a70 <__ascii_mbtowc>:
 8022a70:	b082      	sub	sp, #8
 8022a72:	b901      	cbnz	r1, 8022a76 <__ascii_mbtowc+0x6>
 8022a74:	a901      	add	r1, sp, #4
 8022a76:	b142      	cbz	r2, 8022a8a <__ascii_mbtowc+0x1a>
 8022a78:	b14b      	cbz	r3, 8022a8e <__ascii_mbtowc+0x1e>
 8022a7a:	7813      	ldrb	r3, [r2, #0]
 8022a7c:	600b      	str	r3, [r1, #0]
 8022a7e:	7812      	ldrb	r2, [r2, #0]
 8022a80:	1e10      	subs	r0, r2, #0
 8022a82:	bf18      	it	ne
 8022a84:	2001      	movne	r0, #1
 8022a86:	b002      	add	sp, #8
 8022a88:	4770      	bx	lr
 8022a8a:	4610      	mov	r0, r2
 8022a8c:	e7fb      	b.n	8022a86 <__ascii_mbtowc+0x16>
 8022a8e:	f06f 0001 	mvn.w	r0, #1
 8022a92:	e7f8      	b.n	8022a86 <__ascii_mbtowc+0x16>

08022a94 <__malloc_lock>:
 8022a94:	4801      	ldr	r0, [pc, #4]	; (8022a9c <__malloc_lock+0x8>)
 8022a96:	f7fc be0c 	b.w	801f6b2 <__retarget_lock_acquire_recursive>
 8022a9a:	bf00      	nop
 8022a9c:	2000f578 	.word	0x2000f578

08022aa0 <__malloc_unlock>:
 8022aa0:	4801      	ldr	r0, [pc, #4]	; (8022aa8 <__malloc_unlock+0x8>)
 8022aa2:	f7fc be07 	b.w	801f6b4 <__retarget_lock_release_recursive>
 8022aa6:	bf00      	nop
 8022aa8:	2000f578 	.word	0x2000f578

08022aac <_Balloc>:
 8022aac:	b570      	push	{r4, r5, r6, lr}
 8022aae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8022ab0:	4604      	mov	r4, r0
 8022ab2:	460d      	mov	r5, r1
 8022ab4:	b976      	cbnz	r6, 8022ad4 <_Balloc+0x28>
 8022ab6:	2010      	movs	r0, #16
 8022ab8:	f7ff ffd2 	bl	8022a60 <malloc>
 8022abc:	4602      	mov	r2, r0
 8022abe:	6260      	str	r0, [r4, #36]	; 0x24
 8022ac0:	b920      	cbnz	r0, 8022acc <_Balloc+0x20>
 8022ac2:	4b18      	ldr	r3, [pc, #96]	; (8022b24 <_Balloc+0x78>)
 8022ac4:	4818      	ldr	r0, [pc, #96]	; (8022b28 <_Balloc+0x7c>)
 8022ac6:	2166      	movs	r1, #102	; 0x66
 8022ac8:	f000 feac 	bl	8023824 <__assert_func>
 8022acc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8022ad0:	6006      	str	r6, [r0, #0]
 8022ad2:	60c6      	str	r6, [r0, #12]
 8022ad4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8022ad6:	68f3      	ldr	r3, [r6, #12]
 8022ad8:	b183      	cbz	r3, 8022afc <_Balloc+0x50>
 8022ada:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8022adc:	68db      	ldr	r3, [r3, #12]
 8022ade:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8022ae2:	b9b8      	cbnz	r0, 8022b14 <_Balloc+0x68>
 8022ae4:	2101      	movs	r1, #1
 8022ae6:	fa01 f605 	lsl.w	r6, r1, r5
 8022aea:	1d72      	adds	r2, r6, #5
 8022aec:	0092      	lsls	r2, r2, #2
 8022aee:	4620      	mov	r0, r4
 8022af0:	f000 fc9d 	bl	802342e <_calloc_r>
 8022af4:	b160      	cbz	r0, 8022b10 <_Balloc+0x64>
 8022af6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8022afa:	e00e      	b.n	8022b1a <_Balloc+0x6e>
 8022afc:	2221      	movs	r2, #33	; 0x21
 8022afe:	2104      	movs	r1, #4
 8022b00:	4620      	mov	r0, r4
 8022b02:	f000 fc94 	bl	802342e <_calloc_r>
 8022b06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8022b08:	60f0      	str	r0, [r6, #12]
 8022b0a:	68db      	ldr	r3, [r3, #12]
 8022b0c:	2b00      	cmp	r3, #0
 8022b0e:	d1e4      	bne.n	8022ada <_Balloc+0x2e>
 8022b10:	2000      	movs	r0, #0
 8022b12:	bd70      	pop	{r4, r5, r6, pc}
 8022b14:	6802      	ldr	r2, [r0, #0]
 8022b16:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8022b1a:	2300      	movs	r3, #0
 8022b1c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8022b20:	e7f7      	b.n	8022b12 <_Balloc+0x66>
 8022b22:	bf00      	nop
 8022b24:	08027226 	.word	0x08027226
 8022b28:	08027324 	.word	0x08027324

08022b2c <_Bfree>:
 8022b2c:	b570      	push	{r4, r5, r6, lr}
 8022b2e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8022b30:	4605      	mov	r5, r0
 8022b32:	460c      	mov	r4, r1
 8022b34:	b976      	cbnz	r6, 8022b54 <_Bfree+0x28>
 8022b36:	2010      	movs	r0, #16
 8022b38:	f7ff ff92 	bl	8022a60 <malloc>
 8022b3c:	4602      	mov	r2, r0
 8022b3e:	6268      	str	r0, [r5, #36]	; 0x24
 8022b40:	b920      	cbnz	r0, 8022b4c <_Bfree+0x20>
 8022b42:	4b09      	ldr	r3, [pc, #36]	; (8022b68 <_Bfree+0x3c>)
 8022b44:	4809      	ldr	r0, [pc, #36]	; (8022b6c <_Bfree+0x40>)
 8022b46:	218a      	movs	r1, #138	; 0x8a
 8022b48:	f000 fe6c 	bl	8023824 <__assert_func>
 8022b4c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8022b50:	6006      	str	r6, [r0, #0]
 8022b52:	60c6      	str	r6, [r0, #12]
 8022b54:	b13c      	cbz	r4, 8022b66 <_Bfree+0x3a>
 8022b56:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8022b58:	6862      	ldr	r2, [r4, #4]
 8022b5a:	68db      	ldr	r3, [r3, #12]
 8022b5c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022b60:	6021      	str	r1, [r4, #0]
 8022b62:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8022b66:	bd70      	pop	{r4, r5, r6, pc}
 8022b68:	08027226 	.word	0x08027226
 8022b6c:	08027324 	.word	0x08027324

08022b70 <__multadd>:
 8022b70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022b74:	690d      	ldr	r5, [r1, #16]
 8022b76:	4607      	mov	r7, r0
 8022b78:	460c      	mov	r4, r1
 8022b7a:	461e      	mov	r6, r3
 8022b7c:	f101 0c14 	add.w	ip, r1, #20
 8022b80:	2000      	movs	r0, #0
 8022b82:	f8dc 3000 	ldr.w	r3, [ip]
 8022b86:	b299      	uxth	r1, r3
 8022b88:	fb02 6101 	mla	r1, r2, r1, r6
 8022b8c:	0c1e      	lsrs	r6, r3, #16
 8022b8e:	0c0b      	lsrs	r3, r1, #16
 8022b90:	fb02 3306 	mla	r3, r2, r6, r3
 8022b94:	b289      	uxth	r1, r1
 8022b96:	3001      	adds	r0, #1
 8022b98:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8022b9c:	4285      	cmp	r5, r0
 8022b9e:	f84c 1b04 	str.w	r1, [ip], #4
 8022ba2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8022ba6:	dcec      	bgt.n	8022b82 <__multadd+0x12>
 8022ba8:	b30e      	cbz	r6, 8022bee <__multadd+0x7e>
 8022baa:	68a3      	ldr	r3, [r4, #8]
 8022bac:	42ab      	cmp	r3, r5
 8022bae:	dc19      	bgt.n	8022be4 <__multadd+0x74>
 8022bb0:	6861      	ldr	r1, [r4, #4]
 8022bb2:	4638      	mov	r0, r7
 8022bb4:	3101      	adds	r1, #1
 8022bb6:	f7ff ff79 	bl	8022aac <_Balloc>
 8022bba:	4680      	mov	r8, r0
 8022bbc:	b928      	cbnz	r0, 8022bca <__multadd+0x5a>
 8022bbe:	4602      	mov	r2, r0
 8022bc0:	4b0c      	ldr	r3, [pc, #48]	; (8022bf4 <__multadd+0x84>)
 8022bc2:	480d      	ldr	r0, [pc, #52]	; (8022bf8 <__multadd+0x88>)
 8022bc4:	21b5      	movs	r1, #181	; 0xb5
 8022bc6:	f000 fe2d 	bl	8023824 <__assert_func>
 8022bca:	6922      	ldr	r2, [r4, #16]
 8022bcc:	3202      	adds	r2, #2
 8022bce:	f104 010c 	add.w	r1, r4, #12
 8022bd2:	0092      	lsls	r2, r2, #2
 8022bd4:	300c      	adds	r0, #12
 8022bd6:	f7fc fd6e 	bl	801f6b6 <memcpy>
 8022bda:	4621      	mov	r1, r4
 8022bdc:	4638      	mov	r0, r7
 8022bde:	f7ff ffa5 	bl	8022b2c <_Bfree>
 8022be2:	4644      	mov	r4, r8
 8022be4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8022be8:	3501      	adds	r5, #1
 8022bea:	615e      	str	r6, [r3, #20]
 8022bec:	6125      	str	r5, [r4, #16]
 8022bee:	4620      	mov	r0, r4
 8022bf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022bf4:	08027298 	.word	0x08027298
 8022bf8:	08027324 	.word	0x08027324

08022bfc <__s2b>:
 8022bfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022c00:	460c      	mov	r4, r1
 8022c02:	4615      	mov	r5, r2
 8022c04:	461f      	mov	r7, r3
 8022c06:	2209      	movs	r2, #9
 8022c08:	3308      	adds	r3, #8
 8022c0a:	4606      	mov	r6, r0
 8022c0c:	fb93 f3f2 	sdiv	r3, r3, r2
 8022c10:	2100      	movs	r1, #0
 8022c12:	2201      	movs	r2, #1
 8022c14:	429a      	cmp	r2, r3
 8022c16:	db09      	blt.n	8022c2c <__s2b+0x30>
 8022c18:	4630      	mov	r0, r6
 8022c1a:	f7ff ff47 	bl	8022aac <_Balloc>
 8022c1e:	b940      	cbnz	r0, 8022c32 <__s2b+0x36>
 8022c20:	4602      	mov	r2, r0
 8022c22:	4b19      	ldr	r3, [pc, #100]	; (8022c88 <__s2b+0x8c>)
 8022c24:	4819      	ldr	r0, [pc, #100]	; (8022c8c <__s2b+0x90>)
 8022c26:	21ce      	movs	r1, #206	; 0xce
 8022c28:	f000 fdfc 	bl	8023824 <__assert_func>
 8022c2c:	0052      	lsls	r2, r2, #1
 8022c2e:	3101      	adds	r1, #1
 8022c30:	e7f0      	b.n	8022c14 <__s2b+0x18>
 8022c32:	9b08      	ldr	r3, [sp, #32]
 8022c34:	6143      	str	r3, [r0, #20]
 8022c36:	2d09      	cmp	r5, #9
 8022c38:	f04f 0301 	mov.w	r3, #1
 8022c3c:	6103      	str	r3, [r0, #16]
 8022c3e:	dd16      	ble.n	8022c6e <__s2b+0x72>
 8022c40:	f104 0909 	add.w	r9, r4, #9
 8022c44:	46c8      	mov	r8, r9
 8022c46:	442c      	add	r4, r5
 8022c48:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022c4c:	4601      	mov	r1, r0
 8022c4e:	3b30      	subs	r3, #48	; 0x30
 8022c50:	220a      	movs	r2, #10
 8022c52:	4630      	mov	r0, r6
 8022c54:	f7ff ff8c 	bl	8022b70 <__multadd>
 8022c58:	45a0      	cmp	r8, r4
 8022c5a:	d1f5      	bne.n	8022c48 <__s2b+0x4c>
 8022c5c:	f1a5 0408 	sub.w	r4, r5, #8
 8022c60:	444c      	add	r4, r9
 8022c62:	1b2d      	subs	r5, r5, r4
 8022c64:	1963      	adds	r3, r4, r5
 8022c66:	42bb      	cmp	r3, r7
 8022c68:	db04      	blt.n	8022c74 <__s2b+0x78>
 8022c6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022c6e:	340a      	adds	r4, #10
 8022c70:	2509      	movs	r5, #9
 8022c72:	e7f6      	b.n	8022c62 <__s2b+0x66>
 8022c74:	f814 3b01 	ldrb.w	r3, [r4], #1
 8022c78:	4601      	mov	r1, r0
 8022c7a:	3b30      	subs	r3, #48	; 0x30
 8022c7c:	220a      	movs	r2, #10
 8022c7e:	4630      	mov	r0, r6
 8022c80:	f7ff ff76 	bl	8022b70 <__multadd>
 8022c84:	e7ee      	b.n	8022c64 <__s2b+0x68>
 8022c86:	bf00      	nop
 8022c88:	08027298 	.word	0x08027298
 8022c8c:	08027324 	.word	0x08027324

08022c90 <__hi0bits>:
 8022c90:	0c03      	lsrs	r3, r0, #16
 8022c92:	041b      	lsls	r3, r3, #16
 8022c94:	b9d3      	cbnz	r3, 8022ccc <__hi0bits+0x3c>
 8022c96:	0400      	lsls	r0, r0, #16
 8022c98:	2310      	movs	r3, #16
 8022c9a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8022c9e:	bf04      	itt	eq
 8022ca0:	0200      	lsleq	r0, r0, #8
 8022ca2:	3308      	addeq	r3, #8
 8022ca4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8022ca8:	bf04      	itt	eq
 8022caa:	0100      	lsleq	r0, r0, #4
 8022cac:	3304      	addeq	r3, #4
 8022cae:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8022cb2:	bf04      	itt	eq
 8022cb4:	0080      	lsleq	r0, r0, #2
 8022cb6:	3302      	addeq	r3, #2
 8022cb8:	2800      	cmp	r0, #0
 8022cba:	db05      	blt.n	8022cc8 <__hi0bits+0x38>
 8022cbc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8022cc0:	f103 0301 	add.w	r3, r3, #1
 8022cc4:	bf08      	it	eq
 8022cc6:	2320      	moveq	r3, #32
 8022cc8:	4618      	mov	r0, r3
 8022cca:	4770      	bx	lr
 8022ccc:	2300      	movs	r3, #0
 8022cce:	e7e4      	b.n	8022c9a <__hi0bits+0xa>

08022cd0 <__lo0bits>:
 8022cd0:	6803      	ldr	r3, [r0, #0]
 8022cd2:	f013 0207 	ands.w	r2, r3, #7
 8022cd6:	4601      	mov	r1, r0
 8022cd8:	d00b      	beq.n	8022cf2 <__lo0bits+0x22>
 8022cda:	07da      	lsls	r2, r3, #31
 8022cdc:	d423      	bmi.n	8022d26 <__lo0bits+0x56>
 8022cde:	0798      	lsls	r0, r3, #30
 8022ce0:	bf49      	itett	mi
 8022ce2:	085b      	lsrmi	r3, r3, #1
 8022ce4:	089b      	lsrpl	r3, r3, #2
 8022ce6:	2001      	movmi	r0, #1
 8022ce8:	600b      	strmi	r3, [r1, #0]
 8022cea:	bf5c      	itt	pl
 8022cec:	600b      	strpl	r3, [r1, #0]
 8022cee:	2002      	movpl	r0, #2
 8022cf0:	4770      	bx	lr
 8022cf2:	b298      	uxth	r0, r3
 8022cf4:	b9a8      	cbnz	r0, 8022d22 <__lo0bits+0x52>
 8022cf6:	0c1b      	lsrs	r3, r3, #16
 8022cf8:	2010      	movs	r0, #16
 8022cfa:	b2da      	uxtb	r2, r3
 8022cfc:	b90a      	cbnz	r2, 8022d02 <__lo0bits+0x32>
 8022cfe:	3008      	adds	r0, #8
 8022d00:	0a1b      	lsrs	r3, r3, #8
 8022d02:	071a      	lsls	r2, r3, #28
 8022d04:	bf04      	itt	eq
 8022d06:	091b      	lsreq	r3, r3, #4
 8022d08:	3004      	addeq	r0, #4
 8022d0a:	079a      	lsls	r2, r3, #30
 8022d0c:	bf04      	itt	eq
 8022d0e:	089b      	lsreq	r3, r3, #2
 8022d10:	3002      	addeq	r0, #2
 8022d12:	07da      	lsls	r2, r3, #31
 8022d14:	d403      	bmi.n	8022d1e <__lo0bits+0x4e>
 8022d16:	085b      	lsrs	r3, r3, #1
 8022d18:	f100 0001 	add.w	r0, r0, #1
 8022d1c:	d005      	beq.n	8022d2a <__lo0bits+0x5a>
 8022d1e:	600b      	str	r3, [r1, #0]
 8022d20:	4770      	bx	lr
 8022d22:	4610      	mov	r0, r2
 8022d24:	e7e9      	b.n	8022cfa <__lo0bits+0x2a>
 8022d26:	2000      	movs	r0, #0
 8022d28:	4770      	bx	lr
 8022d2a:	2020      	movs	r0, #32
 8022d2c:	4770      	bx	lr
	...

08022d30 <__i2b>:
 8022d30:	b510      	push	{r4, lr}
 8022d32:	460c      	mov	r4, r1
 8022d34:	2101      	movs	r1, #1
 8022d36:	f7ff feb9 	bl	8022aac <_Balloc>
 8022d3a:	4602      	mov	r2, r0
 8022d3c:	b928      	cbnz	r0, 8022d4a <__i2b+0x1a>
 8022d3e:	4b05      	ldr	r3, [pc, #20]	; (8022d54 <__i2b+0x24>)
 8022d40:	4805      	ldr	r0, [pc, #20]	; (8022d58 <__i2b+0x28>)
 8022d42:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8022d46:	f000 fd6d 	bl	8023824 <__assert_func>
 8022d4a:	2301      	movs	r3, #1
 8022d4c:	6144      	str	r4, [r0, #20]
 8022d4e:	6103      	str	r3, [r0, #16]
 8022d50:	bd10      	pop	{r4, pc}
 8022d52:	bf00      	nop
 8022d54:	08027298 	.word	0x08027298
 8022d58:	08027324 	.word	0x08027324

08022d5c <__multiply>:
 8022d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d60:	4691      	mov	r9, r2
 8022d62:	690a      	ldr	r2, [r1, #16]
 8022d64:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8022d68:	429a      	cmp	r2, r3
 8022d6a:	bfb8      	it	lt
 8022d6c:	460b      	movlt	r3, r1
 8022d6e:	460c      	mov	r4, r1
 8022d70:	bfbc      	itt	lt
 8022d72:	464c      	movlt	r4, r9
 8022d74:	4699      	movlt	r9, r3
 8022d76:	6927      	ldr	r7, [r4, #16]
 8022d78:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8022d7c:	68a3      	ldr	r3, [r4, #8]
 8022d7e:	6861      	ldr	r1, [r4, #4]
 8022d80:	eb07 060a 	add.w	r6, r7, sl
 8022d84:	42b3      	cmp	r3, r6
 8022d86:	b085      	sub	sp, #20
 8022d88:	bfb8      	it	lt
 8022d8a:	3101      	addlt	r1, #1
 8022d8c:	f7ff fe8e 	bl	8022aac <_Balloc>
 8022d90:	b930      	cbnz	r0, 8022da0 <__multiply+0x44>
 8022d92:	4602      	mov	r2, r0
 8022d94:	4b44      	ldr	r3, [pc, #272]	; (8022ea8 <__multiply+0x14c>)
 8022d96:	4845      	ldr	r0, [pc, #276]	; (8022eac <__multiply+0x150>)
 8022d98:	f240 115d 	movw	r1, #349	; 0x15d
 8022d9c:	f000 fd42 	bl	8023824 <__assert_func>
 8022da0:	f100 0514 	add.w	r5, r0, #20
 8022da4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8022da8:	462b      	mov	r3, r5
 8022daa:	2200      	movs	r2, #0
 8022dac:	4543      	cmp	r3, r8
 8022dae:	d321      	bcc.n	8022df4 <__multiply+0x98>
 8022db0:	f104 0314 	add.w	r3, r4, #20
 8022db4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8022db8:	f109 0314 	add.w	r3, r9, #20
 8022dbc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8022dc0:	9202      	str	r2, [sp, #8]
 8022dc2:	1b3a      	subs	r2, r7, r4
 8022dc4:	3a15      	subs	r2, #21
 8022dc6:	f022 0203 	bic.w	r2, r2, #3
 8022dca:	3204      	adds	r2, #4
 8022dcc:	f104 0115 	add.w	r1, r4, #21
 8022dd0:	428f      	cmp	r7, r1
 8022dd2:	bf38      	it	cc
 8022dd4:	2204      	movcc	r2, #4
 8022dd6:	9201      	str	r2, [sp, #4]
 8022dd8:	9a02      	ldr	r2, [sp, #8]
 8022dda:	9303      	str	r3, [sp, #12]
 8022ddc:	429a      	cmp	r2, r3
 8022dde:	d80c      	bhi.n	8022dfa <__multiply+0x9e>
 8022de0:	2e00      	cmp	r6, #0
 8022de2:	dd03      	ble.n	8022dec <__multiply+0x90>
 8022de4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8022de8:	2b00      	cmp	r3, #0
 8022dea:	d05a      	beq.n	8022ea2 <__multiply+0x146>
 8022dec:	6106      	str	r6, [r0, #16]
 8022dee:	b005      	add	sp, #20
 8022df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022df4:	f843 2b04 	str.w	r2, [r3], #4
 8022df8:	e7d8      	b.n	8022dac <__multiply+0x50>
 8022dfa:	f8b3 a000 	ldrh.w	sl, [r3]
 8022dfe:	f1ba 0f00 	cmp.w	sl, #0
 8022e02:	d024      	beq.n	8022e4e <__multiply+0xf2>
 8022e04:	f104 0e14 	add.w	lr, r4, #20
 8022e08:	46a9      	mov	r9, r5
 8022e0a:	f04f 0c00 	mov.w	ip, #0
 8022e0e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8022e12:	f8d9 1000 	ldr.w	r1, [r9]
 8022e16:	fa1f fb82 	uxth.w	fp, r2
 8022e1a:	b289      	uxth	r1, r1
 8022e1c:	fb0a 110b 	mla	r1, sl, fp, r1
 8022e20:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8022e24:	f8d9 2000 	ldr.w	r2, [r9]
 8022e28:	4461      	add	r1, ip
 8022e2a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8022e2e:	fb0a c20b 	mla	r2, sl, fp, ip
 8022e32:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8022e36:	b289      	uxth	r1, r1
 8022e38:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8022e3c:	4577      	cmp	r7, lr
 8022e3e:	f849 1b04 	str.w	r1, [r9], #4
 8022e42:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8022e46:	d8e2      	bhi.n	8022e0e <__multiply+0xb2>
 8022e48:	9a01      	ldr	r2, [sp, #4]
 8022e4a:	f845 c002 	str.w	ip, [r5, r2]
 8022e4e:	9a03      	ldr	r2, [sp, #12]
 8022e50:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8022e54:	3304      	adds	r3, #4
 8022e56:	f1b9 0f00 	cmp.w	r9, #0
 8022e5a:	d020      	beq.n	8022e9e <__multiply+0x142>
 8022e5c:	6829      	ldr	r1, [r5, #0]
 8022e5e:	f104 0c14 	add.w	ip, r4, #20
 8022e62:	46ae      	mov	lr, r5
 8022e64:	f04f 0a00 	mov.w	sl, #0
 8022e68:	f8bc b000 	ldrh.w	fp, [ip]
 8022e6c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8022e70:	fb09 220b 	mla	r2, r9, fp, r2
 8022e74:	4492      	add	sl, r2
 8022e76:	b289      	uxth	r1, r1
 8022e78:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8022e7c:	f84e 1b04 	str.w	r1, [lr], #4
 8022e80:	f85c 2b04 	ldr.w	r2, [ip], #4
 8022e84:	f8be 1000 	ldrh.w	r1, [lr]
 8022e88:	0c12      	lsrs	r2, r2, #16
 8022e8a:	fb09 1102 	mla	r1, r9, r2, r1
 8022e8e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8022e92:	4567      	cmp	r7, ip
 8022e94:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8022e98:	d8e6      	bhi.n	8022e68 <__multiply+0x10c>
 8022e9a:	9a01      	ldr	r2, [sp, #4]
 8022e9c:	50a9      	str	r1, [r5, r2]
 8022e9e:	3504      	adds	r5, #4
 8022ea0:	e79a      	b.n	8022dd8 <__multiply+0x7c>
 8022ea2:	3e01      	subs	r6, #1
 8022ea4:	e79c      	b.n	8022de0 <__multiply+0x84>
 8022ea6:	bf00      	nop
 8022ea8:	08027298 	.word	0x08027298
 8022eac:	08027324 	.word	0x08027324

08022eb0 <__pow5mult>:
 8022eb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022eb4:	4615      	mov	r5, r2
 8022eb6:	f012 0203 	ands.w	r2, r2, #3
 8022eba:	4606      	mov	r6, r0
 8022ebc:	460f      	mov	r7, r1
 8022ebe:	d007      	beq.n	8022ed0 <__pow5mult+0x20>
 8022ec0:	4c25      	ldr	r4, [pc, #148]	; (8022f58 <__pow5mult+0xa8>)
 8022ec2:	3a01      	subs	r2, #1
 8022ec4:	2300      	movs	r3, #0
 8022ec6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8022eca:	f7ff fe51 	bl	8022b70 <__multadd>
 8022ece:	4607      	mov	r7, r0
 8022ed0:	10ad      	asrs	r5, r5, #2
 8022ed2:	d03d      	beq.n	8022f50 <__pow5mult+0xa0>
 8022ed4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8022ed6:	b97c      	cbnz	r4, 8022ef8 <__pow5mult+0x48>
 8022ed8:	2010      	movs	r0, #16
 8022eda:	f7ff fdc1 	bl	8022a60 <malloc>
 8022ede:	4602      	mov	r2, r0
 8022ee0:	6270      	str	r0, [r6, #36]	; 0x24
 8022ee2:	b928      	cbnz	r0, 8022ef0 <__pow5mult+0x40>
 8022ee4:	4b1d      	ldr	r3, [pc, #116]	; (8022f5c <__pow5mult+0xac>)
 8022ee6:	481e      	ldr	r0, [pc, #120]	; (8022f60 <__pow5mult+0xb0>)
 8022ee8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8022eec:	f000 fc9a 	bl	8023824 <__assert_func>
 8022ef0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8022ef4:	6004      	str	r4, [r0, #0]
 8022ef6:	60c4      	str	r4, [r0, #12]
 8022ef8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8022efc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8022f00:	b94c      	cbnz	r4, 8022f16 <__pow5mult+0x66>
 8022f02:	f240 2171 	movw	r1, #625	; 0x271
 8022f06:	4630      	mov	r0, r6
 8022f08:	f7ff ff12 	bl	8022d30 <__i2b>
 8022f0c:	2300      	movs	r3, #0
 8022f0e:	f8c8 0008 	str.w	r0, [r8, #8]
 8022f12:	4604      	mov	r4, r0
 8022f14:	6003      	str	r3, [r0, #0]
 8022f16:	f04f 0900 	mov.w	r9, #0
 8022f1a:	07eb      	lsls	r3, r5, #31
 8022f1c:	d50a      	bpl.n	8022f34 <__pow5mult+0x84>
 8022f1e:	4639      	mov	r1, r7
 8022f20:	4622      	mov	r2, r4
 8022f22:	4630      	mov	r0, r6
 8022f24:	f7ff ff1a 	bl	8022d5c <__multiply>
 8022f28:	4639      	mov	r1, r7
 8022f2a:	4680      	mov	r8, r0
 8022f2c:	4630      	mov	r0, r6
 8022f2e:	f7ff fdfd 	bl	8022b2c <_Bfree>
 8022f32:	4647      	mov	r7, r8
 8022f34:	106d      	asrs	r5, r5, #1
 8022f36:	d00b      	beq.n	8022f50 <__pow5mult+0xa0>
 8022f38:	6820      	ldr	r0, [r4, #0]
 8022f3a:	b938      	cbnz	r0, 8022f4c <__pow5mult+0x9c>
 8022f3c:	4622      	mov	r2, r4
 8022f3e:	4621      	mov	r1, r4
 8022f40:	4630      	mov	r0, r6
 8022f42:	f7ff ff0b 	bl	8022d5c <__multiply>
 8022f46:	6020      	str	r0, [r4, #0]
 8022f48:	f8c0 9000 	str.w	r9, [r0]
 8022f4c:	4604      	mov	r4, r0
 8022f4e:	e7e4      	b.n	8022f1a <__pow5mult+0x6a>
 8022f50:	4638      	mov	r0, r7
 8022f52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022f56:	bf00      	nop
 8022f58:	08027470 	.word	0x08027470
 8022f5c:	08027226 	.word	0x08027226
 8022f60:	08027324 	.word	0x08027324

08022f64 <__lshift>:
 8022f64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022f68:	460c      	mov	r4, r1
 8022f6a:	6849      	ldr	r1, [r1, #4]
 8022f6c:	6923      	ldr	r3, [r4, #16]
 8022f6e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8022f72:	68a3      	ldr	r3, [r4, #8]
 8022f74:	4607      	mov	r7, r0
 8022f76:	4691      	mov	r9, r2
 8022f78:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8022f7c:	f108 0601 	add.w	r6, r8, #1
 8022f80:	42b3      	cmp	r3, r6
 8022f82:	db0b      	blt.n	8022f9c <__lshift+0x38>
 8022f84:	4638      	mov	r0, r7
 8022f86:	f7ff fd91 	bl	8022aac <_Balloc>
 8022f8a:	4605      	mov	r5, r0
 8022f8c:	b948      	cbnz	r0, 8022fa2 <__lshift+0x3e>
 8022f8e:	4602      	mov	r2, r0
 8022f90:	4b2a      	ldr	r3, [pc, #168]	; (802303c <__lshift+0xd8>)
 8022f92:	482b      	ldr	r0, [pc, #172]	; (8023040 <__lshift+0xdc>)
 8022f94:	f240 11d9 	movw	r1, #473	; 0x1d9
 8022f98:	f000 fc44 	bl	8023824 <__assert_func>
 8022f9c:	3101      	adds	r1, #1
 8022f9e:	005b      	lsls	r3, r3, #1
 8022fa0:	e7ee      	b.n	8022f80 <__lshift+0x1c>
 8022fa2:	2300      	movs	r3, #0
 8022fa4:	f100 0114 	add.w	r1, r0, #20
 8022fa8:	f100 0210 	add.w	r2, r0, #16
 8022fac:	4618      	mov	r0, r3
 8022fae:	4553      	cmp	r3, sl
 8022fb0:	db37      	blt.n	8023022 <__lshift+0xbe>
 8022fb2:	6920      	ldr	r0, [r4, #16]
 8022fb4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8022fb8:	f104 0314 	add.w	r3, r4, #20
 8022fbc:	f019 091f 	ands.w	r9, r9, #31
 8022fc0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022fc4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8022fc8:	d02f      	beq.n	802302a <__lshift+0xc6>
 8022fca:	f1c9 0e20 	rsb	lr, r9, #32
 8022fce:	468a      	mov	sl, r1
 8022fd0:	f04f 0c00 	mov.w	ip, #0
 8022fd4:	681a      	ldr	r2, [r3, #0]
 8022fd6:	fa02 f209 	lsl.w	r2, r2, r9
 8022fda:	ea42 020c 	orr.w	r2, r2, ip
 8022fde:	f84a 2b04 	str.w	r2, [sl], #4
 8022fe2:	f853 2b04 	ldr.w	r2, [r3], #4
 8022fe6:	4298      	cmp	r0, r3
 8022fe8:	fa22 fc0e 	lsr.w	ip, r2, lr
 8022fec:	d8f2      	bhi.n	8022fd4 <__lshift+0x70>
 8022fee:	1b03      	subs	r3, r0, r4
 8022ff0:	3b15      	subs	r3, #21
 8022ff2:	f023 0303 	bic.w	r3, r3, #3
 8022ff6:	3304      	adds	r3, #4
 8022ff8:	f104 0215 	add.w	r2, r4, #21
 8022ffc:	4290      	cmp	r0, r2
 8022ffe:	bf38      	it	cc
 8023000:	2304      	movcc	r3, #4
 8023002:	f841 c003 	str.w	ip, [r1, r3]
 8023006:	f1bc 0f00 	cmp.w	ip, #0
 802300a:	d001      	beq.n	8023010 <__lshift+0xac>
 802300c:	f108 0602 	add.w	r6, r8, #2
 8023010:	3e01      	subs	r6, #1
 8023012:	4638      	mov	r0, r7
 8023014:	612e      	str	r6, [r5, #16]
 8023016:	4621      	mov	r1, r4
 8023018:	f7ff fd88 	bl	8022b2c <_Bfree>
 802301c:	4628      	mov	r0, r5
 802301e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023022:	f842 0f04 	str.w	r0, [r2, #4]!
 8023026:	3301      	adds	r3, #1
 8023028:	e7c1      	b.n	8022fae <__lshift+0x4a>
 802302a:	3904      	subs	r1, #4
 802302c:	f853 2b04 	ldr.w	r2, [r3], #4
 8023030:	f841 2f04 	str.w	r2, [r1, #4]!
 8023034:	4298      	cmp	r0, r3
 8023036:	d8f9      	bhi.n	802302c <__lshift+0xc8>
 8023038:	e7ea      	b.n	8023010 <__lshift+0xac>
 802303a:	bf00      	nop
 802303c:	08027298 	.word	0x08027298
 8023040:	08027324 	.word	0x08027324

08023044 <__mcmp>:
 8023044:	b530      	push	{r4, r5, lr}
 8023046:	6902      	ldr	r2, [r0, #16]
 8023048:	690c      	ldr	r4, [r1, #16]
 802304a:	1b12      	subs	r2, r2, r4
 802304c:	d10e      	bne.n	802306c <__mcmp+0x28>
 802304e:	f100 0314 	add.w	r3, r0, #20
 8023052:	3114      	adds	r1, #20
 8023054:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8023058:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802305c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8023060:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8023064:	42a5      	cmp	r5, r4
 8023066:	d003      	beq.n	8023070 <__mcmp+0x2c>
 8023068:	d305      	bcc.n	8023076 <__mcmp+0x32>
 802306a:	2201      	movs	r2, #1
 802306c:	4610      	mov	r0, r2
 802306e:	bd30      	pop	{r4, r5, pc}
 8023070:	4283      	cmp	r3, r0
 8023072:	d3f3      	bcc.n	802305c <__mcmp+0x18>
 8023074:	e7fa      	b.n	802306c <__mcmp+0x28>
 8023076:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802307a:	e7f7      	b.n	802306c <__mcmp+0x28>

0802307c <__mdiff>:
 802307c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023080:	460c      	mov	r4, r1
 8023082:	4606      	mov	r6, r0
 8023084:	4611      	mov	r1, r2
 8023086:	4620      	mov	r0, r4
 8023088:	4690      	mov	r8, r2
 802308a:	f7ff ffdb 	bl	8023044 <__mcmp>
 802308e:	1e05      	subs	r5, r0, #0
 8023090:	d110      	bne.n	80230b4 <__mdiff+0x38>
 8023092:	4629      	mov	r1, r5
 8023094:	4630      	mov	r0, r6
 8023096:	f7ff fd09 	bl	8022aac <_Balloc>
 802309a:	b930      	cbnz	r0, 80230aa <__mdiff+0x2e>
 802309c:	4b3a      	ldr	r3, [pc, #232]	; (8023188 <__mdiff+0x10c>)
 802309e:	4602      	mov	r2, r0
 80230a0:	f240 2132 	movw	r1, #562	; 0x232
 80230a4:	4839      	ldr	r0, [pc, #228]	; (802318c <__mdiff+0x110>)
 80230a6:	f000 fbbd 	bl	8023824 <__assert_func>
 80230aa:	2301      	movs	r3, #1
 80230ac:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80230b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230b4:	bfa4      	itt	ge
 80230b6:	4643      	movge	r3, r8
 80230b8:	46a0      	movge	r8, r4
 80230ba:	4630      	mov	r0, r6
 80230bc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80230c0:	bfa6      	itte	ge
 80230c2:	461c      	movge	r4, r3
 80230c4:	2500      	movge	r5, #0
 80230c6:	2501      	movlt	r5, #1
 80230c8:	f7ff fcf0 	bl	8022aac <_Balloc>
 80230cc:	b920      	cbnz	r0, 80230d8 <__mdiff+0x5c>
 80230ce:	4b2e      	ldr	r3, [pc, #184]	; (8023188 <__mdiff+0x10c>)
 80230d0:	4602      	mov	r2, r0
 80230d2:	f44f 7110 	mov.w	r1, #576	; 0x240
 80230d6:	e7e5      	b.n	80230a4 <__mdiff+0x28>
 80230d8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80230dc:	6926      	ldr	r6, [r4, #16]
 80230de:	60c5      	str	r5, [r0, #12]
 80230e0:	f104 0914 	add.w	r9, r4, #20
 80230e4:	f108 0514 	add.w	r5, r8, #20
 80230e8:	f100 0e14 	add.w	lr, r0, #20
 80230ec:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80230f0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80230f4:	f108 0210 	add.w	r2, r8, #16
 80230f8:	46f2      	mov	sl, lr
 80230fa:	2100      	movs	r1, #0
 80230fc:	f859 3b04 	ldr.w	r3, [r9], #4
 8023100:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8023104:	fa1f f883 	uxth.w	r8, r3
 8023108:	fa11 f18b 	uxtah	r1, r1, fp
 802310c:	0c1b      	lsrs	r3, r3, #16
 802310e:	eba1 0808 	sub.w	r8, r1, r8
 8023112:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8023116:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802311a:	fa1f f888 	uxth.w	r8, r8
 802311e:	1419      	asrs	r1, r3, #16
 8023120:	454e      	cmp	r6, r9
 8023122:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8023126:	f84a 3b04 	str.w	r3, [sl], #4
 802312a:	d8e7      	bhi.n	80230fc <__mdiff+0x80>
 802312c:	1b33      	subs	r3, r6, r4
 802312e:	3b15      	subs	r3, #21
 8023130:	f023 0303 	bic.w	r3, r3, #3
 8023134:	3304      	adds	r3, #4
 8023136:	3415      	adds	r4, #21
 8023138:	42a6      	cmp	r6, r4
 802313a:	bf38      	it	cc
 802313c:	2304      	movcc	r3, #4
 802313e:	441d      	add	r5, r3
 8023140:	4473      	add	r3, lr
 8023142:	469e      	mov	lr, r3
 8023144:	462e      	mov	r6, r5
 8023146:	4566      	cmp	r6, ip
 8023148:	d30e      	bcc.n	8023168 <__mdiff+0xec>
 802314a:	f10c 0203 	add.w	r2, ip, #3
 802314e:	1b52      	subs	r2, r2, r5
 8023150:	f022 0203 	bic.w	r2, r2, #3
 8023154:	3d03      	subs	r5, #3
 8023156:	45ac      	cmp	ip, r5
 8023158:	bf38      	it	cc
 802315a:	2200      	movcc	r2, #0
 802315c:	441a      	add	r2, r3
 802315e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8023162:	b17b      	cbz	r3, 8023184 <__mdiff+0x108>
 8023164:	6107      	str	r7, [r0, #16]
 8023166:	e7a3      	b.n	80230b0 <__mdiff+0x34>
 8023168:	f856 8b04 	ldr.w	r8, [r6], #4
 802316c:	fa11 f288 	uxtah	r2, r1, r8
 8023170:	1414      	asrs	r4, r2, #16
 8023172:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8023176:	b292      	uxth	r2, r2
 8023178:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802317c:	f84e 2b04 	str.w	r2, [lr], #4
 8023180:	1421      	asrs	r1, r4, #16
 8023182:	e7e0      	b.n	8023146 <__mdiff+0xca>
 8023184:	3f01      	subs	r7, #1
 8023186:	e7ea      	b.n	802315e <__mdiff+0xe2>
 8023188:	08027298 	.word	0x08027298
 802318c:	08027324 	.word	0x08027324

08023190 <__ulp>:
 8023190:	b082      	sub	sp, #8
 8023192:	ed8d 0b00 	vstr	d0, [sp]
 8023196:	9b01      	ldr	r3, [sp, #4]
 8023198:	4912      	ldr	r1, [pc, #72]	; (80231e4 <__ulp+0x54>)
 802319a:	4019      	ands	r1, r3
 802319c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 80231a0:	2900      	cmp	r1, #0
 80231a2:	dd05      	ble.n	80231b0 <__ulp+0x20>
 80231a4:	2200      	movs	r2, #0
 80231a6:	460b      	mov	r3, r1
 80231a8:	ec43 2b10 	vmov	d0, r2, r3
 80231ac:	b002      	add	sp, #8
 80231ae:	4770      	bx	lr
 80231b0:	4249      	negs	r1, r1
 80231b2:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 80231b6:	ea4f 5021 	mov.w	r0, r1, asr #20
 80231ba:	f04f 0200 	mov.w	r2, #0
 80231be:	f04f 0300 	mov.w	r3, #0
 80231c2:	da04      	bge.n	80231ce <__ulp+0x3e>
 80231c4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80231c8:	fa41 f300 	asr.w	r3, r1, r0
 80231cc:	e7ec      	b.n	80231a8 <__ulp+0x18>
 80231ce:	f1a0 0114 	sub.w	r1, r0, #20
 80231d2:	291e      	cmp	r1, #30
 80231d4:	bfda      	itte	le
 80231d6:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 80231da:	fa20 f101 	lsrle.w	r1, r0, r1
 80231de:	2101      	movgt	r1, #1
 80231e0:	460a      	mov	r2, r1
 80231e2:	e7e1      	b.n	80231a8 <__ulp+0x18>
 80231e4:	7ff00000 	.word	0x7ff00000

080231e8 <__b2d>:
 80231e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80231ea:	6905      	ldr	r5, [r0, #16]
 80231ec:	f100 0714 	add.w	r7, r0, #20
 80231f0:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80231f4:	1f2e      	subs	r6, r5, #4
 80231f6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80231fa:	4620      	mov	r0, r4
 80231fc:	f7ff fd48 	bl	8022c90 <__hi0bits>
 8023200:	f1c0 0320 	rsb	r3, r0, #32
 8023204:	280a      	cmp	r0, #10
 8023206:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8023284 <__b2d+0x9c>
 802320a:	600b      	str	r3, [r1, #0]
 802320c:	dc14      	bgt.n	8023238 <__b2d+0x50>
 802320e:	f1c0 0e0b 	rsb	lr, r0, #11
 8023212:	fa24 f10e 	lsr.w	r1, r4, lr
 8023216:	42b7      	cmp	r7, r6
 8023218:	ea41 030c 	orr.w	r3, r1, ip
 802321c:	bf34      	ite	cc
 802321e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8023222:	2100      	movcs	r1, #0
 8023224:	3015      	adds	r0, #21
 8023226:	fa04 f000 	lsl.w	r0, r4, r0
 802322a:	fa21 f10e 	lsr.w	r1, r1, lr
 802322e:	ea40 0201 	orr.w	r2, r0, r1
 8023232:	ec43 2b10 	vmov	d0, r2, r3
 8023236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023238:	42b7      	cmp	r7, r6
 802323a:	bf3a      	itte	cc
 802323c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8023240:	f1a5 0608 	subcc.w	r6, r5, #8
 8023244:	2100      	movcs	r1, #0
 8023246:	380b      	subs	r0, #11
 8023248:	d017      	beq.n	802327a <__b2d+0x92>
 802324a:	f1c0 0c20 	rsb	ip, r0, #32
 802324e:	fa04 f500 	lsl.w	r5, r4, r0
 8023252:	42be      	cmp	r6, r7
 8023254:	fa21 f40c 	lsr.w	r4, r1, ip
 8023258:	ea45 0504 	orr.w	r5, r5, r4
 802325c:	bf8c      	ite	hi
 802325e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8023262:	2400      	movls	r4, #0
 8023264:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8023268:	fa01 f000 	lsl.w	r0, r1, r0
 802326c:	fa24 f40c 	lsr.w	r4, r4, ip
 8023270:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8023274:	ea40 0204 	orr.w	r2, r0, r4
 8023278:	e7db      	b.n	8023232 <__b2d+0x4a>
 802327a:	ea44 030c 	orr.w	r3, r4, ip
 802327e:	460a      	mov	r2, r1
 8023280:	e7d7      	b.n	8023232 <__b2d+0x4a>
 8023282:	bf00      	nop
 8023284:	3ff00000 	.word	0x3ff00000

08023288 <__d2b>:
 8023288:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802328c:	4689      	mov	r9, r1
 802328e:	2101      	movs	r1, #1
 8023290:	ec57 6b10 	vmov	r6, r7, d0
 8023294:	4690      	mov	r8, r2
 8023296:	f7ff fc09 	bl	8022aac <_Balloc>
 802329a:	4604      	mov	r4, r0
 802329c:	b930      	cbnz	r0, 80232ac <__d2b+0x24>
 802329e:	4602      	mov	r2, r0
 80232a0:	4b25      	ldr	r3, [pc, #148]	; (8023338 <__d2b+0xb0>)
 80232a2:	4826      	ldr	r0, [pc, #152]	; (802333c <__d2b+0xb4>)
 80232a4:	f240 310a 	movw	r1, #778	; 0x30a
 80232a8:	f000 fabc 	bl	8023824 <__assert_func>
 80232ac:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80232b0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80232b4:	bb35      	cbnz	r5, 8023304 <__d2b+0x7c>
 80232b6:	2e00      	cmp	r6, #0
 80232b8:	9301      	str	r3, [sp, #4]
 80232ba:	d028      	beq.n	802330e <__d2b+0x86>
 80232bc:	4668      	mov	r0, sp
 80232be:	9600      	str	r6, [sp, #0]
 80232c0:	f7ff fd06 	bl	8022cd0 <__lo0bits>
 80232c4:	9900      	ldr	r1, [sp, #0]
 80232c6:	b300      	cbz	r0, 802330a <__d2b+0x82>
 80232c8:	9a01      	ldr	r2, [sp, #4]
 80232ca:	f1c0 0320 	rsb	r3, r0, #32
 80232ce:	fa02 f303 	lsl.w	r3, r2, r3
 80232d2:	430b      	orrs	r3, r1
 80232d4:	40c2      	lsrs	r2, r0
 80232d6:	6163      	str	r3, [r4, #20]
 80232d8:	9201      	str	r2, [sp, #4]
 80232da:	9b01      	ldr	r3, [sp, #4]
 80232dc:	61a3      	str	r3, [r4, #24]
 80232de:	2b00      	cmp	r3, #0
 80232e0:	bf14      	ite	ne
 80232e2:	2202      	movne	r2, #2
 80232e4:	2201      	moveq	r2, #1
 80232e6:	6122      	str	r2, [r4, #16]
 80232e8:	b1d5      	cbz	r5, 8023320 <__d2b+0x98>
 80232ea:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80232ee:	4405      	add	r5, r0
 80232f0:	f8c9 5000 	str.w	r5, [r9]
 80232f4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80232f8:	f8c8 0000 	str.w	r0, [r8]
 80232fc:	4620      	mov	r0, r4
 80232fe:	b003      	add	sp, #12
 8023300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023304:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8023308:	e7d5      	b.n	80232b6 <__d2b+0x2e>
 802330a:	6161      	str	r1, [r4, #20]
 802330c:	e7e5      	b.n	80232da <__d2b+0x52>
 802330e:	a801      	add	r0, sp, #4
 8023310:	f7ff fcde 	bl	8022cd0 <__lo0bits>
 8023314:	9b01      	ldr	r3, [sp, #4]
 8023316:	6163      	str	r3, [r4, #20]
 8023318:	2201      	movs	r2, #1
 802331a:	6122      	str	r2, [r4, #16]
 802331c:	3020      	adds	r0, #32
 802331e:	e7e3      	b.n	80232e8 <__d2b+0x60>
 8023320:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8023324:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8023328:	f8c9 0000 	str.w	r0, [r9]
 802332c:	6918      	ldr	r0, [r3, #16]
 802332e:	f7ff fcaf 	bl	8022c90 <__hi0bits>
 8023332:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8023336:	e7df      	b.n	80232f8 <__d2b+0x70>
 8023338:	08027298 	.word	0x08027298
 802333c:	08027324 	.word	0x08027324

08023340 <__ratio>:
 8023340:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023344:	4688      	mov	r8, r1
 8023346:	4669      	mov	r1, sp
 8023348:	4681      	mov	r9, r0
 802334a:	f7ff ff4d 	bl	80231e8 <__b2d>
 802334e:	a901      	add	r1, sp, #4
 8023350:	4640      	mov	r0, r8
 8023352:	ec55 4b10 	vmov	r4, r5, d0
 8023356:	f7ff ff47 	bl	80231e8 <__b2d>
 802335a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802335e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8023362:	eba3 0c02 	sub.w	ip, r3, r2
 8023366:	e9dd 3200 	ldrd	r3, r2, [sp]
 802336a:	1a9b      	subs	r3, r3, r2
 802336c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8023370:	ec51 0b10 	vmov	r0, r1, d0
 8023374:	2b00      	cmp	r3, #0
 8023376:	bfd6      	itet	le
 8023378:	460a      	movle	r2, r1
 802337a:	462a      	movgt	r2, r5
 802337c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8023380:	468b      	mov	fp, r1
 8023382:	462f      	mov	r7, r5
 8023384:	bfd4      	ite	le
 8023386:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 802338a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 802338e:	4620      	mov	r0, r4
 8023390:	ee10 2a10 	vmov	r2, s0
 8023394:	465b      	mov	r3, fp
 8023396:	4639      	mov	r1, r7
 8023398:	f7dd fa58 	bl	800084c <__aeabi_ddiv>
 802339c:	ec41 0b10 	vmov	d0, r0, r1
 80233a0:	b003      	add	sp, #12
 80233a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080233a6 <__copybits>:
 80233a6:	3901      	subs	r1, #1
 80233a8:	b570      	push	{r4, r5, r6, lr}
 80233aa:	1149      	asrs	r1, r1, #5
 80233ac:	6914      	ldr	r4, [r2, #16]
 80233ae:	3101      	adds	r1, #1
 80233b0:	f102 0314 	add.w	r3, r2, #20
 80233b4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80233b8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80233bc:	1f05      	subs	r5, r0, #4
 80233be:	42a3      	cmp	r3, r4
 80233c0:	d30c      	bcc.n	80233dc <__copybits+0x36>
 80233c2:	1aa3      	subs	r3, r4, r2
 80233c4:	3b11      	subs	r3, #17
 80233c6:	f023 0303 	bic.w	r3, r3, #3
 80233ca:	3211      	adds	r2, #17
 80233cc:	42a2      	cmp	r2, r4
 80233ce:	bf88      	it	hi
 80233d0:	2300      	movhi	r3, #0
 80233d2:	4418      	add	r0, r3
 80233d4:	2300      	movs	r3, #0
 80233d6:	4288      	cmp	r0, r1
 80233d8:	d305      	bcc.n	80233e6 <__copybits+0x40>
 80233da:	bd70      	pop	{r4, r5, r6, pc}
 80233dc:	f853 6b04 	ldr.w	r6, [r3], #4
 80233e0:	f845 6f04 	str.w	r6, [r5, #4]!
 80233e4:	e7eb      	b.n	80233be <__copybits+0x18>
 80233e6:	f840 3b04 	str.w	r3, [r0], #4
 80233ea:	e7f4      	b.n	80233d6 <__copybits+0x30>

080233ec <__any_on>:
 80233ec:	f100 0214 	add.w	r2, r0, #20
 80233f0:	6900      	ldr	r0, [r0, #16]
 80233f2:	114b      	asrs	r3, r1, #5
 80233f4:	4298      	cmp	r0, r3
 80233f6:	b510      	push	{r4, lr}
 80233f8:	db11      	blt.n	802341e <__any_on+0x32>
 80233fa:	dd0a      	ble.n	8023412 <__any_on+0x26>
 80233fc:	f011 011f 	ands.w	r1, r1, #31
 8023400:	d007      	beq.n	8023412 <__any_on+0x26>
 8023402:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8023406:	fa24 f001 	lsr.w	r0, r4, r1
 802340a:	fa00 f101 	lsl.w	r1, r0, r1
 802340e:	428c      	cmp	r4, r1
 8023410:	d10b      	bne.n	802342a <__any_on+0x3e>
 8023412:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8023416:	4293      	cmp	r3, r2
 8023418:	d803      	bhi.n	8023422 <__any_on+0x36>
 802341a:	2000      	movs	r0, #0
 802341c:	bd10      	pop	{r4, pc}
 802341e:	4603      	mov	r3, r0
 8023420:	e7f7      	b.n	8023412 <__any_on+0x26>
 8023422:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8023426:	2900      	cmp	r1, #0
 8023428:	d0f5      	beq.n	8023416 <__any_on+0x2a>
 802342a:	2001      	movs	r0, #1
 802342c:	e7f6      	b.n	802341c <__any_on+0x30>

0802342e <_calloc_r>:
 802342e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023430:	fba1 2402 	umull	r2, r4, r1, r2
 8023434:	b94c      	cbnz	r4, 802344a <_calloc_r+0x1c>
 8023436:	4611      	mov	r1, r2
 8023438:	9201      	str	r2, [sp, #4]
 802343a:	f7fc f973 	bl	801f724 <_malloc_r>
 802343e:	9a01      	ldr	r2, [sp, #4]
 8023440:	4605      	mov	r5, r0
 8023442:	b930      	cbnz	r0, 8023452 <_calloc_r+0x24>
 8023444:	4628      	mov	r0, r5
 8023446:	b003      	add	sp, #12
 8023448:	bd30      	pop	{r4, r5, pc}
 802344a:	220c      	movs	r2, #12
 802344c:	6002      	str	r2, [r0, #0]
 802344e:	2500      	movs	r5, #0
 8023450:	e7f8      	b.n	8023444 <_calloc_r+0x16>
 8023452:	4621      	mov	r1, r4
 8023454:	f7fc f93d 	bl	801f6d2 <memset>
 8023458:	e7f4      	b.n	8023444 <_calloc_r+0x16>
	...

0802345c <_free_r>:
 802345c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802345e:	2900      	cmp	r1, #0
 8023460:	d044      	beq.n	80234ec <_free_r+0x90>
 8023462:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023466:	9001      	str	r0, [sp, #4]
 8023468:	2b00      	cmp	r3, #0
 802346a:	f1a1 0404 	sub.w	r4, r1, #4
 802346e:	bfb8      	it	lt
 8023470:	18e4      	addlt	r4, r4, r3
 8023472:	f7ff fb0f 	bl	8022a94 <__malloc_lock>
 8023476:	4a1e      	ldr	r2, [pc, #120]	; (80234f0 <_free_r+0x94>)
 8023478:	9801      	ldr	r0, [sp, #4]
 802347a:	6813      	ldr	r3, [r2, #0]
 802347c:	b933      	cbnz	r3, 802348c <_free_r+0x30>
 802347e:	6063      	str	r3, [r4, #4]
 8023480:	6014      	str	r4, [r2, #0]
 8023482:	b003      	add	sp, #12
 8023484:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023488:	f7ff bb0a 	b.w	8022aa0 <__malloc_unlock>
 802348c:	42a3      	cmp	r3, r4
 802348e:	d908      	bls.n	80234a2 <_free_r+0x46>
 8023490:	6825      	ldr	r5, [r4, #0]
 8023492:	1961      	adds	r1, r4, r5
 8023494:	428b      	cmp	r3, r1
 8023496:	bf01      	itttt	eq
 8023498:	6819      	ldreq	r1, [r3, #0]
 802349a:	685b      	ldreq	r3, [r3, #4]
 802349c:	1949      	addeq	r1, r1, r5
 802349e:	6021      	streq	r1, [r4, #0]
 80234a0:	e7ed      	b.n	802347e <_free_r+0x22>
 80234a2:	461a      	mov	r2, r3
 80234a4:	685b      	ldr	r3, [r3, #4]
 80234a6:	b10b      	cbz	r3, 80234ac <_free_r+0x50>
 80234a8:	42a3      	cmp	r3, r4
 80234aa:	d9fa      	bls.n	80234a2 <_free_r+0x46>
 80234ac:	6811      	ldr	r1, [r2, #0]
 80234ae:	1855      	adds	r5, r2, r1
 80234b0:	42a5      	cmp	r5, r4
 80234b2:	d10b      	bne.n	80234cc <_free_r+0x70>
 80234b4:	6824      	ldr	r4, [r4, #0]
 80234b6:	4421      	add	r1, r4
 80234b8:	1854      	adds	r4, r2, r1
 80234ba:	42a3      	cmp	r3, r4
 80234bc:	6011      	str	r1, [r2, #0]
 80234be:	d1e0      	bne.n	8023482 <_free_r+0x26>
 80234c0:	681c      	ldr	r4, [r3, #0]
 80234c2:	685b      	ldr	r3, [r3, #4]
 80234c4:	6053      	str	r3, [r2, #4]
 80234c6:	4421      	add	r1, r4
 80234c8:	6011      	str	r1, [r2, #0]
 80234ca:	e7da      	b.n	8023482 <_free_r+0x26>
 80234cc:	d902      	bls.n	80234d4 <_free_r+0x78>
 80234ce:	230c      	movs	r3, #12
 80234d0:	6003      	str	r3, [r0, #0]
 80234d2:	e7d6      	b.n	8023482 <_free_r+0x26>
 80234d4:	6825      	ldr	r5, [r4, #0]
 80234d6:	1961      	adds	r1, r4, r5
 80234d8:	428b      	cmp	r3, r1
 80234da:	bf04      	itt	eq
 80234dc:	6819      	ldreq	r1, [r3, #0]
 80234de:	685b      	ldreq	r3, [r3, #4]
 80234e0:	6063      	str	r3, [r4, #4]
 80234e2:	bf04      	itt	eq
 80234e4:	1949      	addeq	r1, r1, r5
 80234e6:	6021      	streq	r1, [r4, #0]
 80234e8:	6054      	str	r4, [r2, #4]
 80234ea:	e7ca      	b.n	8023482 <_free_r+0x26>
 80234ec:	b003      	add	sp, #12
 80234ee:	bd30      	pop	{r4, r5, pc}
 80234f0:	2000f57c 	.word	0x2000f57c

080234f4 <__ssputs_r>:
 80234f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80234f8:	688e      	ldr	r6, [r1, #8]
 80234fa:	429e      	cmp	r6, r3
 80234fc:	4682      	mov	sl, r0
 80234fe:	460c      	mov	r4, r1
 8023500:	4690      	mov	r8, r2
 8023502:	461f      	mov	r7, r3
 8023504:	d838      	bhi.n	8023578 <__ssputs_r+0x84>
 8023506:	898a      	ldrh	r2, [r1, #12]
 8023508:	f412 6f90 	tst.w	r2, #1152	; 0x480
 802350c:	d032      	beq.n	8023574 <__ssputs_r+0x80>
 802350e:	6825      	ldr	r5, [r4, #0]
 8023510:	6909      	ldr	r1, [r1, #16]
 8023512:	eba5 0901 	sub.w	r9, r5, r1
 8023516:	6965      	ldr	r5, [r4, #20]
 8023518:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802351c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8023520:	3301      	adds	r3, #1
 8023522:	444b      	add	r3, r9
 8023524:	106d      	asrs	r5, r5, #1
 8023526:	429d      	cmp	r5, r3
 8023528:	bf38      	it	cc
 802352a:	461d      	movcc	r5, r3
 802352c:	0553      	lsls	r3, r2, #21
 802352e:	d531      	bpl.n	8023594 <__ssputs_r+0xa0>
 8023530:	4629      	mov	r1, r5
 8023532:	f7fc f8f7 	bl	801f724 <_malloc_r>
 8023536:	4606      	mov	r6, r0
 8023538:	b950      	cbnz	r0, 8023550 <__ssputs_r+0x5c>
 802353a:	230c      	movs	r3, #12
 802353c:	f8ca 3000 	str.w	r3, [sl]
 8023540:	89a3      	ldrh	r3, [r4, #12]
 8023542:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8023546:	81a3      	strh	r3, [r4, #12]
 8023548:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802354c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023550:	6921      	ldr	r1, [r4, #16]
 8023552:	464a      	mov	r2, r9
 8023554:	f7fc f8af 	bl	801f6b6 <memcpy>
 8023558:	89a3      	ldrh	r3, [r4, #12]
 802355a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802355e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023562:	81a3      	strh	r3, [r4, #12]
 8023564:	6126      	str	r6, [r4, #16]
 8023566:	6165      	str	r5, [r4, #20]
 8023568:	444e      	add	r6, r9
 802356a:	eba5 0509 	sub.w	r5, r5, r9
 802356e:	6026      	str	r6, [r4, #0]
 8023570:	60a5      	str	r5, [r4, #8]
 8023572:	463e      	mov	r6, r7
 8023574:	42be      	cmp	r6, r7
 8023576:	d900      	bls.n	802357a <__ssputs_r+0x86>
 8023578:	463e      	mov	r6, r7
 802357a:	6820      	ldr	r0, [r4, #0]
 802357c:	4632      	mov	r2, r6
 802357e:	4641      	mov	r1, r8
 8023580:	f000 f980 	bl	8023884 <memmove>
 8023584:	68a3      	ldr	r3, [r4, #8]
 8023586:	1b9b      	subs	r3, r3, r6
 8023588:	60a3      	str	r3, [r4, #8]
 802358a:	6823      	ldr	r3, [r4, #0]
 802358c:	4433      	add	r3, r6
 802358e:	6023      	str	r3, [r4, #0]
 8023590:	2000      	movs	r0, #0
 8023592:	e7db      	b.n	802354c <__ssputs_r+0x58>
 8023594:	462a      	mov	r2, r5
 8023596:	f000 f98f 	bl	80238b8 <_realloc_r>
 802359a:	4606      	mov	r6, r0
 802359c:	2800      	cmp	r0, #0
 802359e:	d1e1      	bne.n	8023564 <__ssputs_r+0x70>
 80235a0:	6921      	ldr	r1, [r4, #16]
 80235a2:	4650      	mov	r0, sl
 80235a4:	f7ff ff5a 	bl	802345c <_free_r>
 80235a8:	e7c7      	b.n	802353a <__ssputs_r+0x46>
	...

080235ac <_svfiprintf_r>:
 80235ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235b0:	4698      	mov	r8, r3
 80235b2:	898b      	ldrh	r3, [r1, #12]
 80235b4:	061b      	lsls	r3, r3, #24
 80235b6:	b09d      	sub	sp, #116	; 0x74
 80235b8:	4607      	mov	r7, r0
 80235ba:	460d      	mov	r5, r1
 80235bc:	4614      	mov	r4, r2
 80235be:	d50e      	bpl.n	80235de <_svfiprintf_r+0x32>
 80235c0:	690b      	ldr	r3, [r1, #16]
 80235c2:	b963      	cbnz	r3, 80235de <_svfiprintf_r+0x32>
 80235c4:	2140      	movs	r1, #64	; 0x40
 80235c6:	f7fc f8ad 	bl	801f724 <_malloc_r>
 80235ca:	6028      	str	r0, [r5, #0]
 80235cc:	6128      	str	r0, [r5, #16]
 80235ce:	b920      	cbnz	r0, 80235da <_svfiprintf_r+0x2e>
 80235d0:	230c      	movs	r3, #12
 80235d2:	603b      	str	r3, [r7, #0]
 80235d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80235d8:	e0d1      	b.n	802377e <_svfiprintf_r+0x1d2>
 80235da:	2340      	movs	r3, #64	; 0x40
 80235dc:	616b      	str	r3, [r5, #20]
 80235de:	2300      	movs	r3, #0
 80235e0:	9309      	str	r3, [sp, #36]	; 0x24
 80235e2:	2320      	movs	r3, #32
 80235e4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80235e8:	f8cd 800c 	str.w	r8, [sp, #12]
 80235ec:	2330      	movs	r3, #48	; 0x30
 80235ee:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8023798 <_svfiprintf_r+0x1ec>
 80235f2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80235f6:	f04f 0901 	mov.w	r9, #1
 80235fa:	4623      	mov	r3, r4
 80235fc:	469a      	mov	sl, r3
 80235fe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023602:	b10a      	cbz	r2, 8023608 <_svfiprintf_r+0x5c>
 8023604:	2a25      	cmp	r2, #37	; 0x25
 8023606:	d1f9      	bne.n	80235fc <_svfiprintf_r+0x50>
 8023608:	ebba 0b04 	subs.w	fp, sl, r4
 802360c:	d00b      	beq.n	8023626 <_svfiprintf_r+0x7a>
 802360e:	465b      	mov	r3, fp
 8023610:	4622      	mov	r2, r4
 8023612:	4629      	mov	r1, r5
 8023614:	4638      	mov	r0, r7
 8023616:	f7ff ff6d 	bl	80234f4 <__ssputs_r>
 802361a:	3001      	adds	r0, #1
 802361c:	f000 80aa 	beq.w	8023774 <_svfiprintf_r+0x1c8>
 8023620:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023622:	445a      	add	r2, fp
 8023624:	9209      	str	r2, [sp, #36]	; 0x24
 8023626:	f89a 3000 	ldrb.w	r3, [sl]
 802362a:	2b00      	cmp	r3, #0
 802362c:	f000 80a2 	beq.w	8023774 <_svfiprintf_r+0x1c8>
 8023630:	2300      	movs	r3, #0
 8023632:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8023636:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802363a:	f10a 0a01 	add.w	sl, sl, #1
 802363e:	9304      	str	r3, [sp, #16]
 8023640:	9307      	str	r3, [sp, #28]
 8023642:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023646:	931a      	str	r3, [sp, #104]	; 0x68
 8023648:	4654      	mov	r4, sl
 802364a:	2205      	movs	r2, #5
 802364c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023650:	4851      	ldr	r0, [pc, #324]	; (8023798 <_svfiprintf_r+0x1ec>)
 8023652:	f7dc fdc5 	bl	80001e0 <memchr>
 8023656:	9a04      	ldr	r2, [sp, #16]
 8023658:	b9d8      	cbnz	r0, 8023692 <_svfiprintf_r+0xe6>
 802365a:	06d0      	lsls	r0, r2, #27
 802365c:	bf44      	itt	mi
 802365e:	2320      	movmi	r3, #32
 8023660:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023664:	0711      	lsls	r1, r2, #28
 8023666:	bf44      	itt	mi
 8023668:	232b      	movmi	r3, #43	; 0x2b
 802366a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802366e:	f89a 3000 	ldrb.w	r3, [sl]
 8023672:	2b2a      	cmp	r3, #42	; 0x2a
 8023674:	d015      	beq.n	80236a2 <_svfiprintf_r+0xf6>
 8023676:	9a07      	ldr	r2, [sp, #28]
 8023678:	4654      	mov	r4, sl
 802367a:	2000      	movs	r0, #0
 802367c:	f04f 0c0a 	mov.w	ip, #10
 8023680:	4621      	mov	r1, r4
 8023682:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023686:	3b30      	subs	r3, #48	; 0x30
 8023688:	2b09      	cmp	r3, #9
 802368a:	d94e      	bls.n	802372a <_svfiprintf_r+0x17e>
 802368c:	b1b0      	cbz	r0, 80236bc <_svfiprintf_r+0x110>
 802368e:	9207      	str	r2, [sp, #28]
 8023690:	e014      	b.n	80236bc <_svfiprintf_r+0x110>
 8023692:	eba0 0308 	sub.w	r3, r0, r8
 8023696:	fa09 f303 	lsl.w	r3, r9, r3
 802369a:	4313      	orrs	r3, r2
 802369c:	9304      	str	r3, [sp, #16]
 802369e:	46a2      	mov	sl, r4
 80236a0:	e7d2      	b.n	8023648 <_svfiprintf_r+0x9c>
 80236a2:	9b03      	ldr	r3, [sp, #12]
 80236a4:	1d19      	adds	r1, r3, #4
 80236a6:	681b      	ldr	r3, [r3, #0]
 80236a8:	9103      	str	r1, [sp, #12]
 80236aa:	2b00      	cmp	r3, #0
 80236ac:	bfbb      	ittet	lt
 80236ae:	425b      	neglt	r3, r3
 80236b0:	f042 0202 	orrlt.w	r2, r2, #2
 80236b4:	9307      	strge	r3, [sp, #28]
 80236b6:	9307      	strlt	r3, [sp, #28]
 80236b8:	bfb8      	it	lt
 80236ba:	9204      	strlt	r2, [sp, #16]
 80236bc:	7823      	ldrb	r3, [r4, #0]
 80236be:	2b2e      	cmp	r3, #46	; 0x2e
 80236c0:	d10c      	bne.n	80236dc <_svfiprintf_r+0x130>
 80236c2:	7863      	ldrb	r3, [r4, #1]
 80236c4:	2b2a      	cmp	r3, #42	; 0x2a
 80236c6:	d135      	bne.n	8023734 <_svfiprintf_r+0x188>
 80236c8:	9b03      	ldr	r3, [sp, #12]
 80236ca:	1d1a      	adds	r2, r3, #4
 80236cc:	681b      	ldr	r3, [r3, #0]
 80236ce:	9203      	str	r2, [sp, #12]
 80236d0:	2b00      	cmp	r3, #0
 80236d2:	bfb8      	it	lt
 80236d4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80236d8:	3402      	adds	r4, #2
 80236da:	9305      	str	r3, [sp, #20]
 80236dc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80237a8 <_svfiprintf_r+0x1fc>
 80236e0:	7821      	ldrb	r1, [r4, #0]
 80236e2:	2203      	movs	r2, #3
 80236e4:	4650      	mov	r0, sl
 80236e6:	f7dc fd7b 	bl	80001e0 <memchr>
 80236ea:	b140      	cbz	r0, 80236fe <_svfiprintf_r+0x152>
 80236ec:	2340      	movs	r3, #64	; 0x40
 80236ee:	eba0 000a 	sub.w	r0, r0, sl
 80236f2:	fa03 f000 	lsl.w	r0, r3, r0
 80236f6:	9b04      	ldr	r3, [sp, #16]
 80236f8:	4303      	orrs	r3, r0
 80236fa:	3401      	adds	r4, #1
 80236fc:	9304      	str	r3, [sp, #16]
 80236fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023702:	4826      	ldr	r0, [pc, #152]	; (802379c <_svfiprintf_r+0x1f0>)
 8023704:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8023708:	2206      	movs	r2, #6
 802370a:	f7dc fd69 	bl	80001e0 <memchr>
 802370e:	2800      	cmp	r0, #0
 8023710:	d038      	beq.n	8023784 <_svfiprintf_r+0x1d8>
 8023712:	4b23      	ldr	r3, [pc, #140]	; (80237a0 <_svfiprintf_r+0x1f4>)
 8023714:	bb1b      	cbnz	r3, 802375e <_svfiprintf_r+0x1b2>
 8023716:	9b03      	ldr	r3, [sp, #12]
 8023718:	3307      	adds	r3, #7
 802371a:	f023 0307 	bic.w	r3, r3, #7
 802371e:	3308      	adds	r3, #8
 8023720:	9303      	str	r3, [sp, #12]
 8023722:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023724:	4433      	add	r3, r6
 8023726:	9309      	str	r3, [sp, #36]	; 0x24
 8023728:	e767      	b.n	80235fa <_svfiprintf_r+0x4e>
 802372a:	fb0c 3202 	mla	r2, ip, r2, r3
 802372e:	460c      	mov	r4, r1
 8023730:	2001      	movs	r0, #1
 8023732:	e7a5      	b.n	8023680 <_svfiprintf_r+0xd4>
 8023734:	2300      	movs	r3, #0
 8023736:	3401      	adds	r4, #1
 8023738:	9305      	str	r3, [sp, #20]
 802373a:	4619      	mov	r1, r3
 802373c:	f04f 0c0a 	mov.w	ip, #10
 8023740:	4620      	mov	r0, r4
 8023742:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023746:	3a30      	subs	r2, #48	; 0x30
 8023748:	2a09      	cmp	r2, #9
 802374a:	d903      	bls.n	8023754 <_svfiprintf_r+0x1a8>
 802374c:	2b00      	cmp	r3, #0
 802374e:	d0c5      	beq.n	80236dc <_svfiprintf_r+0x130>
 8023750:	9105      	str	r1, [sp, #20]
 8023752:	e7c3      	b.n	80236dc <_svfiprintf_r+0x130>
 8023754:	fb0c 2101 	mla	r1, ip, r1, r2
 8023758:	4604      	mov	r4, r0
 802375a:	2301      	movs	r3, #1
 802375c:	e7f0      	b.n	8023740 <_svfiprintf_r+0x194>
 802375e:	ab03      	add	r3, sp, #12
 8023760:	9300      	str	r3, [sp, #0]
 8023762:	462a      	mov	r2, r5
 8023764:	4b0f      	ldr	r3, [pc, #60]	; (80237a4 <_svfiprintf_r+0x1f8>)
 8023766:	a904      	add	r1, sp, #16
 8023768:	4638      	mov	r0, r7
 802376a:	f7fc f8ef 	bl	801f94c <_printf_float>
 802376e:	1c42      	adds	r2, r0, #1
 8023770:	4606      	mov	r6, r0
 8023772:	d1d6      	bne.n	8023722 <_svfiprintf_r+0x176>
 8023774:	89ab      	ldrh	r3, [r5, #12]
 8023776:	065b      	lsls	r3, r3, #25
 8023778:	f53f af2c 	bmi.w	80235d4 <_svfiprintf_r+0x28>
 802377c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802377e:	b01d      	add	sp, #116	; 0x74
 8023780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023784:	ab03      	add	r3, sp, #12
 8023786:	9300      	str	r3, [sp, #0]
 8023788:	462a      	mov	r2, r5
 802378a:	4b06      	ldr	r3, [pc, #24]	; (80237a4 <_svfiprintf_r+0x1f8>)
 802378c:	a904      	add	r1, sp, #16
 802378e:	4638      	mov	r0, r7
 8023790:	f7fc fb80 	bl	801fe94 <_printf_i>
 8023794:	e7eb      	b.n	802376e <_svfiprintf_r+0x1c2>
 8023796:	bf00      	nop
 8023798:	0802747c 	.word	0x0802747c
 802379c:	08027486 	.word	0x08027486
 80237a0:	0801f94d 	.word	0x0801f94d
 80237a4:	080234f5 	.word	0x080234f5
 80237a8:	08027482 	.word	0x08027482

080237ac <_read_r>:
 80237ac:	b538      	push	{r3, r4, r5, lr}
 80237ae:	4d07      	ldr	r5, [pc, #28]	; (80237cc <_read_r+0x20>)
 80237b0:	4604      	mov	r4, r0
 80237b2:	4608      	mov	r0, r1
 80237b4:	4611      	mov	r1, r2
 80237b6:	2200      	movs	r2, #0
 80237b8:	602a      	str	r2, [r5, #0]
 80237ba:	461a      	mov	r2, r3
 80237bc:	f003 f806 	bl	80267cc <_read>
 80237c0:	1c43      	adds	r3, r0, #1
 80237c2:	d102      	bne.n	80237ca <_read_r+0x1e>
 80237c4:	682b      	ldr	r3, [r5, #0]
 80237c6:	b103      	cbz	r3, 80237ca <_read_r+0x1e>
 80237c8:	6023      	str	r3, [r4, #0]
 80237ca:	bd38      	pop	{r3, r4, r5, pc}
 80237cc:	2000f584 	.word	0x2000f584

080237d0 <nan>:
 80237d0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80237d8 <nan+0x8>
 80237d4:	4770      	bx	lr
 80237d6:	bf00      	nop
 80237d8:	00000000 	.word	0x00000000
 80237dc:	7ff80000 	.word	0x7ff80000

080237e0 <strncmp>:
 80237e0:	b510      	push	{r4, lr}
 80237e2:	b17a      	cbz	r2, 8023804 <strncmp+0x24>
 80237e4:	4603      	mov	r3, r0
 80237e6:	3901      	subs	r1, #1
 80237e8:	1884      	adds	r4, r0, r2
 80237ea:	f813 0b01 	ldrb.w	r0, [r3], #1
 80237ee:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80237f2:	4290      	cmp	r0, r2
 80237f4:	d101      	bne.n	80237fa <strncmp+0x1a>
 80237f6:	42a3      	cmp	r3, r4
 80237f8:	d101      	bne.n	80237fe <strncmp+0x1e>
 80237fa:	1a80      	subs	r0, r0, r2
 80237fc:	bd10      	pop	{r4, pc}
 80237fe:	2800      	cmp	r0, #0
 8023800:	d1f3      	bne.n	80237ea <strncmp+0xa>
 8023802:	e7fa      	b.n	80237fa <strncmp+0x1a>
 8023804:	4610      	mov	r0, r2
 8023806:	e7f9      	b.n	80237fc <strncmp+0x1c>

08023808 <__ascii_wctomb>:
 8023808:	b149      	cbz	r1, 802381e <__ascii_wctomb+0x16>
 802380a:	2aff      	cmp	r2, #255	; 0xff
 802380c:	bf85      	ittet	hi
 802380e:	238a      	movhi	r3, #138	; 0x8a
 8023810:	6003      	strhi	r3, [r0, #0]
 8023812:	700a      	strbls	r2, [r1, #0]
 8023814:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8023818:	bf98      	it	ls
 802381a:	2001      	movls	r0, #1
 802381c:	4770      	bx	lr
 802381e:	4608      	mov	r0, r1
 8023820:	4770      	bx	lr
	...

08023824 <__assert_func>:
 8023824:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023826:	4614      	mov	r4, r2
 8023828:	461a      	mov	r2, r3
 802382a:	4b09      	ldr	r3, [pc, #36]	; (8023850 <__assert_func+0x2c>)
 802382c:	681b      	ldr	r3, [r3, #0]
 802382e:	4605      	mov	r5, r0
 8023830:	68d8      	ldr	r0, [r3, #12]
 8023832:	b14c      	cbz	r4, 8023848 <__assert_func+0x24>
 8023834:	4b07      	ldr	r3, [pc, #28]	; (8023854 <__assert_func+0x30>)
 8023836:	9100      	str	r1, [sp, #0]
 8023838:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802383c:	4906      	ldr	r1, [pc, #24]	; (8023858 <__assert_func+0x34>)
 802383e:	462b      	mov	r3, r5
 8023840:	f000 f80e 	bl	8023860 <fiprintf>
 8023844:	f000 fa80 	bl	8023d48 <abort>
 8023848:	4b04      	ldr	r3, [pc, #16]	; (802385c <__assert_func+0x38>)
 802384a:	461c      	mov	r4, r3
 802384c:	e7f3      	b.n	8023836 <__assert_func+0x12>
 802384e:	bf00      	nop
 8023850:	20000150 	.word	0x20000150
 8023854:	0802748d 	.word	0x0802748d
 8023858:	0802749a 	.word	0x0802749a
 802385c:	080274c8 	.word	0x080274c8

08023860 <fiprintf>:
 8023860:	b40e      	push	{r1, r2, r3}
 8023862:	b503      	push	{r0, r1, lr}
 8023864:	4601      	mov	r1, r0
 8023866:	ab03      	add	r3, sp, #12
 8023868:	4805      	ldr	r0, [pc, #20]	; (8023880 <fiprintf+0x20>)
 802386a:	f853 2b04 	ldr.w	r2, [r3], #4
 802386e:	6800      	ldr	r0, [r0, #0]
 8023870:	9301      	str	r3, [sp, #4]
 8023872:	f000 f879 	bl	8023968 <_vfiprintf_r>
 8023876:	b002      	add	sp, #8
 8023878:	f85d eb04 	ldr.w	lr, [sp], #4
 802387c:	b003      	add	sp, #12
 802387e:	4770      	bx	lr
 8023880:	20000150 	.word	0x20000150

08023884 <memmove>:
 8023884:	4288      	cmp	r0, r1
 8023886:	b510      	push	{r4, lr}
 8023888:	eb01 0402 	add.w	r4, r1, r2
 802388c:	d902      	bls.n	8023894 <memmove+0x10>
 802388e:	4284      	cmp	r4, r0
 8023890:	4623      	mov	r3, r4
 8023892:	d807      	bhi.n	80238a4 <memmove+0x20>
 8023894:	1e43      	subs	r3, r0, #1
 8023896:	42a1      	cmp	r1, r4
 8023898:	d008      	beq.n	80238ac <memmove+0x28>
 802389a:	f811 2b01 	ldrb.w	r2, [r1], #1
 802389e:	f803 2f01 	strb.w	r2, [r3, #1]!
 80238a2:	e7f8      	b.n	8023896 <memmove+0x12>
 80238a4:	4402      	add	r2, r0
 80238a6:	4601      	mov	r1, r0
 80238a8:	428a      	cmp	r2, r1
 80238aa:	d100      	bne.n	80238ae <memmove+0x2a>
 80238ac:	bd10      	pop	{r4, pc}
 80238ae:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80238b2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80238b6:	e7f7      	b.n	80238a8 <memmove+0x24>

080238b8 <_realloc_r>:
 80238b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80238bc:	4680      	mov	r8, r0
 80238be:	4614      	mov	r4, r2
 80238c0:	460e      	mov	r6, r1
 80238c2:	b921      	cbnz	r1, 80238ce <_realloc_r+0x16>
 80238c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80238c8:	4611      	mov	r1, r2
 80238ca:	f7fb bf2b 	b.w	801f724 <_malloc_r>
 80238ce:	b92a      	cbnz	r2, 80238dc <_realloc_r+0x24>
 80238d0:	f7ff fdc4 	bl	802345c <_free_r>
 80238d4:	4625      	mov	r5, r4
 80238d6:	4628      	mov	r0, r5
 80238d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80238dc:	f000 faa0 	bl	8023e20 <_malloc_usable_size_r>
 80238e0:	4284      	cmp	r4, r0
 80238e2:	4607      	mov	r7, r0
 80238e4:	d802      	bhi.n	80238ec <_realloc_r+0x34>
 80238e6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80238ea:	d812      	bhi.n	8023912 <_realloc_r+0x5a>
 80238ec:	4621      	mov	r1, r4
 80238ee:	4640      	mov	r0, r8
 80238f0:	f7fb ff18 	bl	801f724 <_malloc_r>
 80238f4:	4605      	mov	r5, r0
 80238f6:	2800      	cmp	r0, #0
 80238f8:	d0ed      	beq.n	80238d6 <_realloc_r+0x1e>
 80238fa:	42bc      	cmp	r4, r7
 80238fc:	4622      	mov	r2, r4
 80238fe:	4631      	mov	r1, r6
 8023900:	bf28      	it	cs
 8023902:	463a      	movcs	r2, r7
 8023904:	f7fb fed7 	bl	801f6b6 <memcpy>
 8023908:	4631      	mov	r1, r6
 802390a:	4640      	mov	r0, r8
 802390c:	f7ff fda6 	bl	802345c <_free_r>
 8023910:	e7e1      	b.n	80238d6 <_realloc_r+0x1e>
 8023912:	4635      	mov	r5, r6
 8023914:	e7df      	b.n	80238d6 <_realloc_r+0x1e>

08023916 <__sfputc_r>:
 8023916:	6893      	ldr	r3, [r2, #8]
 8023918:	3b01      	subs	r3, #1
 802391a:	2b00      	cmp	r3, #0
 802391c:	b410      	push	{r4}
 802391e:	6093      	str	r3, [r2, #8]
 8023920:	da08      	bge.n	8023934 <__sfputc_r+0x1e>
 8023922:	6994      	ldr	r4, [r2, #24]
 8023924:	42a3      	cmp	r3, r4
 8023926:	db01      	blt.n	802392c <__sfputc_r+0x16>
 8023928:	290a      	cmp	r1, #10
 802392a:	d103      	bne.n	8023934 <__sfputc_r+0x1e>
 802392c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023930:	f000 b94a 	b.w	8023bc8 <__swbuf_r>
 8023934:	6813      	ldr	r3, [r2, #0]
 8023936:	1c58      	adds	r0, r3, #1
 8023938:	6010      	str	r0, [r2, #0]
 802393a:	7019      	strb	r1, [r3, #0]
 802393c:	4608      	mov	r0, r1
 802393e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023942:	4770      	bx	lr

08023944 <__sfputs_r>:
 8023944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023946:	4606      	mov	r6, r0
 8023948:	460f      	mov	r7, r1
 802394a:	4614      	mov	r4, r2
 802394c:	18d5      	adds	r5, r2, r3
 802394e:	42ac      	cmp	r4, r5
 8023950:	d101      	bne.n	8023956 <__sfputs_r+0x12>
 8023952:	2000      	movs	r0, #0
 8023954:	e007      	b.n	8023966 <__sfputs_r+0x22>
 8023956:	f814 1b01 	ldrb.w	r1, [r4], #1
 802395a:	463a      	mov	r2, r7
 802395c:	4630      	mov	r0, r6
 802395e:	f7ff ffda 	bl	8023916 <__sfputc_r>
 8023962:	1c43      	adds	r3, r0, #1
 8023964:	d1f3      	bne.n	802394e <__sfputs_r+0xa>
 8023966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08023968 <_vfiprintf_r>:
 8023968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802396c:	460d      	mov	r5, r1
 802396e:	b09d      	sub	sp, #116	; 0x74
 8023970:	4614      	mov	r4, r2
 8023972:	4698      	mov	r8, r3
 8023974:	4606      	mov	r6, r0
 8023976:	b118      	cbz	r0, 8023980 <_vfiprintf_r+0x18>
 8023978:	6983      	ldr	r3, [r0, #24]
 802397a:	b90b      	cbnz	r3, 8023980 <_vfiprintf_r+0x18>
 802397c:	f7fb fdd6 	bl	801f52c <__sinit>
 8023980:	4b89      	ldr	r3, [pc, #548]	; (8023ba8 <_vfiprintf_r+0x240>)
 8023982:	429d      	cmp	r5, r3
 8023984:	d11b      	bne.n	80239be <_vfiprintf_r+0x56>
 8023986:	6875      	ldr	r5, [r6, #4]
 8023988:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802398a:	07d9      	lsls	r1, r3, #31
 802398c:	d405      	bmi.n	802399a <_vfiprintf_r+0x32>
 802398e:	89ab      	ldrh	r3, [r5, #12]
 8023990:	059a      	lsls	r2, r3, #22
 8023992:	d402      	bmi.n	802399a <_vfiprintf_r+0x32>
 8023994:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023996:	f7fb fe8c 	bl	801f6b2 <__retarget_lock_acquire_recursive>
 802399a:	89ab      	ldrh	r3, [r5, #12]
 802399c:	071b      	lsls	r3, r3, #28
 802399e:	d501      	bpl.n	80239a4 <_vfiprintf_r+0x3c>
 80239a0:	692b      	ldr	r3, [r5, #16]
 80239a2:	b9eb      	cbnz	r3, 80239e0 <_vfiprintf_r+0x78>
 80239a4:	4629      	mov	r1, r5
 80239a6:	4630      	mov	r0, r6
 80239a8:	f000 f960 	bl	8023c6c <__swsetup_r>
 80239ac:	b1c0      	cbz	r0, 80239e0 <_vfiprintf_r+0x78>
 80239ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80239b0:	07dc      	lsls	r4, r3, #31
 80239b2:	d50e      	bpl.n	80239d2 <_vfiprintf_r+0x6a>
 80239b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80239b8:	b01d      	add	sp, #116	; 0x74
 80239ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239be:	4b7b      	ldr	r3, [pc, #492]	; (8023bac <_vfiprintf_r+0x244>)
 80239c0:	429d      	cmp	r5, r3
 80239c2:	d101      	bne.n	80239c8 <_vfiprintf_r+0x60>
 80239c4:	68b5      	ldr	r5, [r6, #8]
 80239c6:	e7df      	b.n	8023988 <_vfiprintf_r+0x20>
 80239c8:	4b79      	ldr	r3, [pc, #484]	; (8023bb0 <_vfiprintf_r+0x248>)
 80239ca:	429d      	cmp	r5, r3
 80239cc:	bf08      	it	eq
 80239ce:	68f5      	ldreq	r5, [r6, #12]
 80239d0:	e7da      	b.n	8023988 <_vfiprintf_r+0x20>
 80239d2:	89ab      	ldrh	r3, [r5, #12]
 80239d4:	0598      	lsls	r0, r3, #22
 80239d6:	d4ed      	bmi.n	80239b4 <_vfiprintf_r+0x4c>
 80239d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80239da:	f7fb fe6b 	bl	801f6b4 <__retarget_lock_release_recursive>
 80239de:	e7e9      	b.n	80239b4 <_vfiprintf_r+0x4c>
 80239e0:	2300      	movs	r3, #0
 80239e2:	9309      	str	r3, [sp, #36]	; 0x24
 80239e4:	2320      	movs	r3, #32
 80239e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80239ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80239ee:	2330      	movs	r3, #48	; 0x30
 80239f0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8023bb4 <_vfiprintf_r+0x24c>
 80239f4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80239f8:	f04f 0901 	mov.w	r9, #1
 80239fc:	4623      	mov	r3, r4
 80239fe:	469a      	mov	sl, r3
 8023a00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023a04:	b10a      	cbz	r2, 8023a0a <_vfiprintf_r+0xa2>
 8023a06:	2a25      	cmp	r2, #37	; 0x25
 8023a08:	d1f9      	bne.n	80239fe <_vfiprintf_r+0x96>
 8023a0a:	ebba 0b04 	subs.w	fp, sl, r4
 8023a0e:	d00b      	beq.n	8023a28 <_vfiprintf_r+0xc0>
 8023a10:	465b      	mov	r3, fp
 8023a12:	4622      	mov	r2, r4
 8023a14:	4629      	mov	r1, r5
 8023a16:	4630      	mov	r0, r6
 8023a18:	f7ff ff94 	bl	8023944 <__sfputs_r>
 8023a1c:	3001      	adds	r0, #1
 8023a1e:	f000 80aa 	beq.w	8023b76 <_vfiprintf_r+0x20e>
 8023a22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023a24:	445a      	add	r2, fp
 8023a26:	9209      	str	r2, [sp, #36]	; 0x24
 8023a28:	f89a 3000 	ldrb.w	r3, [sl]
 8023a2c:	2b00      	cmp	r3, #0
 8023a2e:	f000 80a2 	beq.w	8023b76 <_vfiprintf_r+0x20e>
 8023a32:	2300      	movs	r3, #0
 8023a34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8023a38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023a3c:	f10a 0a01 	add.w	sl, sl, #1
 8023a40:	9304      	str	r3, [sp, #16]
 8023a42:	9307      	str	r3, [sp, #28]
 8023a44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023a48:	931a      	str	r3, [sp, #104]	; 0x68
 8023a4a:	4654      	mov	r4, sl
 8023a4c:	2205      	movs	r2, #5
 8023a4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023a52:	4858      	ldr	r0, [pc, #352]	; (8023bb4 <_vfiprintf_r+0x24c>)
 8023a54:	f7dc fbc4 	bl	80001e0 <memchr>
 8023a58:	9a04      	ldr	r2, [sp, #16]
 8023a5a:	b9d8      	cbnz	r0, 8023a94 <_vfiprintf_r+0x12c>
 8023a5c:	06d1      	lsls	r1, r2, #27
 8023a5e:	bf44      	itt	mi
 8023a60:	2320      	movmi	r3, #32
 8023a62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023a66:	0713      	lsls	r3, r2, #28
 8023a68:	bf44      	itt	mi
 8023a6a:	232b      	movmi	r3, #43	; 0x2b
 8023a6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023a70:	f89a 3000 	ldrb.w	r3, [sl]
 8023a74:	2b2a      	cmp	r3, #42	; 0x2a
 8023a76:	d015      	beq.n	8023aa4 <_vfiprintf_r+0x13c>
 8023a78:	9a07      	ldr	r2, [sp, #28]
 8023a7a:	4654      	mov	r4, sl
 8023a7c:	2000      	movs	r0, #0
 8023a7e:	f04f 0c0a 	mov.w	ip, #10
 8023a82:	4621      	mov	r1, r4
 8023a84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023a88:	3b30      	subs	r3, #48	; 0x30
 8023a8a:	2b09      	cmp	r3, #9
 8023a8c:	d94e      	bls.n	8023b2c <_vfiprintf_r+0x1c4>
 8023a8e:	b1b0      	cbz	r0, 8023abe <_vfiprintf_r+0x156>
 8023a90:	9207      	str	r2, [sp, #28]
 8023a92:	e014      	b.n	8023abe <_vfiprintf_r+0x156>
 8023a94:	eba0 0308 	sub.w	r3, r0, r8
 8023a98:	fa09 f303 	lsl.w	r3, r9, r3
 8023a9c:	4313      	orrs	r3, r2
 8023a9e:	9304      	str	r3, [sp, #16]
 8023aa0:	46a2      	mov	sl, r4
 8023aa2:	e7d2      	b.n	8023a4a <_vfiprintf_r+0xe2>
 8023aa4:	9b03      	ldr	r3, [sp, #12]
 8023aa6:	1d19      	adds	r1, r3, #4
 8023aa8:	681b      	ldr	r3, [r3, #0]
 8023aaa:	9103      	str	r1, [sp, #12]
 8023aac:	2b00      	cmp	r3, #0
 8023aae:	bfbb      	ittet	lt
 8023ab0:	425b      	neglt	r3, r3
 8023ab2:	f042 0202 	orrlt.w	r2, r2, #2
 8023ab6:	9307      	strge	r3, [sp, #28]
 8023ab8:	9307      	strlt	r3, [sp, #28]
 8023aba:	bfb8      	it	lt
 8023abc:	9204      	strlt	r2, [sp, #16]
 8023abe:	7823      	ldrb	r3, [r4, #0]
 8023ac0:	2b2e      	cmp	r3, #46	; 0x2e
 8023ac2:	d10c      	bne.n	8023ade <_vfiprintf_r+0x176>
 8023ac4:	7863      	ldrb	r3, [r4, #1]
 8023ac6:	2b2a      	cmp	r3, #42	; 0x2a
 8023ac8:	d135      	bne.n	8023b36 <_vfiprintf_r+0x1ce>
 8023aca:	9b03      	ldr	r3, [sp, #12]
 8023acc:	1d1a      	adds	r2, r3, #4
 8023ace:	681b      	ldr	r3, [r3, #0]
 8023ad0:	9203      	str	r2, [sp, #12]
 8023ad2:	2b00      	cmp	r3, #0
 8023ad4:	bfb8      	it	lt
 8023ad6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8023ada:	3402      	adds	r4, #2
 8023adc:	9305      	str	r3, [sp, #20]
 8023ade:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8023bc4 <_vfiprintf_r+0x25c>
 8023ae2:	7821      	ldrb	r1, [r4, #0]
 8023ae4:	2203      	movs	r2, #3
 8023ae6:	4650      	mov	r0, sl
 8023ae8:	f7dc fb7a 	bl	80001e0 <memchr>
 8023aec:	b140      	cbz	r0, 8023b00 <_vfiprintf_r+0x198>
 8023aee:	2340      	movs	r3, #64	; 0x40
 8023af0:	eba0 000a 	sub.w	r0, r0, sl
 8023af4:	fa03 f000 	lsl.w	r0, r3, r0
 8023af8:	9b04      	ldr	r3, [sp, #16]
 8023afa:	4303      	orrs	r3, r0
 8023afc:	3401      	adds	r4, #1
 8023afe:	9304      	str	r3, [sp, #16]
 8023b00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023b04:	482c      	ldr	r0, [pc, #176]	; (8023bb8 <_vfiprintf_r+0x250>)
 8023b06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8023b0a:	2206      	movs	r2, #6
 8023b0c:	f7dc fb68 	bl	80001e0 <memchr>
 8023b10:	2800      	cmp	r0, #0
 8023b12:	d03f      	beq.n	8023b94 <_vfiprintf_r+0x22c>
 8023b14:	4b29      	ldr	r3, [pc, #164]	; (8023bbc <_vfiprintf_r+0x254>)
 8023b16:	bb1b      	cbnz	r3, 8023b60 <_vfiprintf_r+0x1f8>
 8023b18:	9b03      	ldr	r3, [sp, #12]
 8023b1a:	3307      	adds	r3, #7
 8023b1c:	f023 0307 	bic.w	r3, r3, #7
 8023b20:	3308      	adds	r3, #8
 8023b22:	9303      	str	r3, [sp, #12]
 8023b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b26:	443b      	add	r3, r7
 8023b28:	9309      	str	r3, [sp, #36]	; 0x24
 8023b2a:	e767      	b.n	80239fc <_vfiprintf_r+0x94>
 8023b2c:	fb0c 3202 	mla	r2, ip, r2, r3
 8023b30:	460c      	mov	r4, r1
 8023b32:	2001      	movs	r0, #1
 8023b34:	e7a5      	b.n	8023a82 <_vfiprintf_r+0x11a>
 8023b36:	2300      	movs	r3, #0
 8023b38:	3401      	adds	r4, #1
 8023b3a:	9305      	str	r3, [sp, #20]
 8023b3c:	4619      	mov	r1, r3
 8023b3e:	f04f 0c0a 	mov.w	ip, #10
 8023b42:	4620      	mov	r0, r4
 8023b44:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023b48:	3a30      	subs	r2, #48	; 0x30
 8023b4a:	2a09      	cmp	r2, #9
 8023b4c:	d903      	bls.n	8023b56 <_vfiprintf_r+0x1ee>
 8023b4e:	2b00      	cmp	r3, #0
 8023b50:	d0c5      	beq.n	8023ade <_vfiprintf_r+0x176>
 8023b52:	9105      	str	r1, [sp, #20]
 8023b54:	e7c3      	b.n	8023ade <_vfiprintf_r+0x176>
 8023b56:	fb0c 2101 	mla	r1, ip, r1, r2
 8023b5a:	4604      	mov	r4, r0
 8023b5c:	2301      	movs	r3, #1
 8023b5e:	e7f0      	b.n	8023b42 <_vfiprintf_r+0x1da>
 8023b60:	ab03      	add	r3, sp, #12
 8023b62:	9300      	str	r3, [sp, #0]
 8023b64:	462a      	mov	r2, r5
 8023b66:	4b16      	ldr	r3, [pc, #88]	; (8023bc0 <_vfiprintf_r+0x258>)
 8023b68:	a904      	add	r1, sp, #16
 8023b6a:	4630      	mov	r0, r6
 8023b6c:	f7fb feee 	bl	801f94c <_printf_float>
 8023b70:	4607      	mov	r7, r0
 8023b72:	1c78      	adds	r0, r7, #1
 8023b74:	d1d6      	bne.n	8023b24 <_vfiprintf_r+0x1bc>
 8023b76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023b78:	07d9      	lsls	r1, r3, #31
 8023b7a:	d405      	bmi.n	8023b88 <_vfiprintf_r+0x220>
 8023b7c:	89ab      	ldrh	r3, [r5, #12]
 8023b7e:	059a      	lsls	r2, r3, #22
 8023b80:	d402      	bmi.n	8023b88 <_vfiprintf_r+0x220>
 8023b82:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023b84:	f7fb fd96 	bl	801f6b4 <__retarget_lock_release_recursive>
 8023b88:	89ab      	ldrh	r3, [r5, #12]
 8023b8a:	065b      	lsls	r3, r3, #25
 8023b8c:	f53f af12 	bmi.w	80239b4 <_vfiprintf_r+0x4c>
 8023b90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023b92:	e711      	b.n	80239b8 <_vfiprintf_r+0x50>
 8023b94:	ab03      	add	r3, sp, #12
 8023b96:	9300      	str	r3, [sp, #0]
 8023b98:	462a      	mov	r2, r5
 8023b9a:	4b09      	ldr	r3, [pc, #36]	; (8023bc0 <_vfiprintf_r+0x258>)
 8023b9c:	a904      	add	r1, sp, #16
 8023b9e:	4630      	mov	r0, r6
 8023ba0:	f7fc f978 	bl	801fe94 <_printf_i>
 8023ba4:	e7e4      	b.n	8023b70 <_vfiprintf_r+0x208>
 8023ba6:	bf00      	nop
 8023ba8:	08027048 	.word	0x08027048
 8023bac:	08027068 	.word	0x08027068
 8023bb0:	08027028 	.word	0x08027028
 8023bb4:	0802747c 	.word	0x0802747c
 8023bb8:	08027486 	.word	0x08027486
 8023bbc:	0801f94d 	.word	0x0801f94d
 8023bc0:	08023945 	.word	0x08023945
 8023bc4:	08027482 	.word	0x08027482

08023bc8 <__swbuf_r>:
 8023bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023bca:	460e      	mov	r6, r1
 8023bcc:	4614      	mov	r4, r2
 8023bce:	4605      	mov	r5, r0
 8023bd0:	b118      	cbz	r0, 8023bda <__swbuf_r+0x12>
 8023bd2:	6983      	ldr	r3, [r0, #24]
 8023bd4:	b90b      	cbnz	r3, 8023bda <__swbuf_r+0x12>
 8023bd6:	f7fb fca9 	bl	801f52c <__sinit>
 8023bda:	4b21      	ldr	r3, [pc, #132]	; (8023c60 <__swbuf_r+0x98>)
 8023bdc:	429c      	cmp	r4, r3
 8023bde:	d12b      	bne.n	8023c38 <__swbuf_r+0x70>
 8023be0:	686c      	ldr	r4, [r5, #4]
 8023be2:	69a3      	ldr	r3, [r4, #24]
 8023be4:	60a3      	str	r3, [r4, #8]
 8023be6:	89a3      	ldrh	r3, [r4, #12]
 8023be8:	071a      	lsls	r2, r3, #28
 8023bea:	d52f      	bpl.n	8023c4c <__swbuf_r+0x84>
 8023bec:	6923      	ldr	r3, [r4, #16]
 8023bee:	b36b      	cbz	r3, 8023c4c <__swbuf_r+0x84>
 8023bf0:	6923      	ldr	r3, [r4, #16]
 8023bf2:	6820      	ldr	r0, [r4, #0]
 8023bf4:	1ac0      	subs	r0, r0, r3
 8023bf6:	6963      	ldr	r3, [r4, #20]
 8023bf8:	b2f6      	uxtb	r6, r6
 8023bfa:	4283      	cmp	r3, r0
 8023bfc:	4637      	mov	r7, r6
 8023bfe:	dc04      	bgt.n	8023c0a <__swbuf_r+0x42>
 8023c00:	4621      	mov	r1, r4
 8023c02:	4628      	mov	r0, r5
 8023c04:	f7fe fb6a 	bl	80222dc <_fflush_r>
 8023c08:	bb30      	cbnz	r0, 8023c58 <__swbuf_r+0x90>
 8023c0a:	68a3      	ldr	r3, [r4, #8]
 8023c0c:	3b01      	subs	r3, #1
 8023c0e:	60a3      	str	r3, [r4, #8]
 8023c10:	6823      	ldr	r3, [r4, #0]
 8023c12:	1c5a      	adds	r2, r3, #1
 8023c14:	6022      	str	r2, [r4, #0]
 8023c16:	701e      	strb	r6, [r3, #0]
 8023c18:	6963      	ldr	r3, [r4, #20]
 8023c1a:	3001      	adds	r0, #1
 8023c1c:	4283      	cmp	r3, r0
 8023c1e:	d004      	beq.n	8023c2a <__swbuf_r+0x62>
 8023c20:	89a3      	ldrh	r3, [r4, #12]
 8023c22:	07db      	lsls	r3, r3, #31
 8023c24:	d506      	bpl.n	8023c34 <__swbuf_r+0x6c>
 8023c26:	2e0a      	cmp	r6, #10
 8023c28:	d104      	bne.n	8023c34 <__swbuf_r+0x6c>
 8023c2a:	4621      	mov	r1, r4
 8023c2c:	4628      	mov	r0, r5
 8023c2e:	f7fe fb55 	bl	80222dc <_fflush_r>
 8023c32:	b988      	cbnz	r0, 8023c58 <__swbuf_r+0x90>
 8023c34:	4638      	mov	r0, r7
 8023c36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023c38:	4b0a      	ldr	r3, [pc, #40]	; (8023c64 <__swbuf_r+0x9c>)
 8023c3a:	429c      	cmp	r4, r3
 8023c3c:	d101      	bne.n	8023c42 <__swbuf_r+0x7a>
 8023c3e:	68ac      	ldr	r4, [r5, #8]
 8023c40:	e7cf      	b.n	8023be2 <__swbuf_r+0x1a>
 8023c42:	4b09      	ldr	r3, [pc, #36]	; (8023c68 <__swbuf_r+0xa0>)
 8023c44:	429c      	cmp	r4, r3
 8023c46:	bf08      	it	eq
 8023c48:	68ec      	ldreq	r4, [r5, #12]
 8023c4a:	e7ca      	b.n	8023be2 <__swbuf_r+0x1a>
 8023c4c:	4621      	mov	r1, r4
 8023c4e:	4628      	mov	r0, r5
 8023c50:	f000 f80c 	bl	8023c6c <__swsetup_r>
 8023c54:	2800      	cmp	r0, #0
 8023c56:	d0cb      	beq.n	8023bf0 <__swbuf_r+0x28>
 8023c58:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8023c5c:	e7ea      	b.n	8023c34 <__swbuf_r+0x6c>
 8023c5e:	bf00      	nop
 8023c60:	08027048 	.word	0x08027048
 8023c64:	08027068 	.word	0x08027068
 8023c68:	08027028 	.word	0x08027028

08023c6c <__swsetup_r>:
 8023c6c:	4b32      	ldr	r3, [pc, #200]	; (8023d38 <__swsetup_r+0xcc>)
 8023c6e:	b570      	push	{r4, r5, r6, lr}
 8023c70:	681d      	ldr	r5, [r3, #0]
 8023c72:	4606      	mov	r6, r0
 8023c74:	460c      	mov	r4, r1
 8023c76:	b125      	cbz	r5, 8023c82 <__swsetup_r+0x16>
 8023c78:	69ab      	ldr	r3, [r5, #24]
 8023c7a:	b913      	cbnz	r3, 8023c82 <__swsetup_r+0x16>
 8023c7c:	4628      	mov	r0, r5
 8023c7e:	f7fb fc55 	bl	801f52c <__sinit>
 8023c82:	4b2e      	ldr	r3, [pc, #184]	; (8023d3c <__swsetup_r+0xd0>)
 8023c84:	429c      	cmp	r4, r3
 8023c86:	d10f      	bne.n	8023ca8 <__swsetup_r+0x3c>
 8023c88:	686c      	ldr	r4, [r5, #4]
 8023c8a:	89a3      	ldrh	r3, [r4, #12]
 8023c8c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023c90:	0719      	lsls	r1, r3, #28
 8023c92:	d42c      	bmi.n	8023cee <__swsetup_r+0x82>
 8023c94:	06dd      	lsls	r5, r3, #27
 8023c96:	d411      	bmi.n	8023cbc <__swsetup_r+0x50>
 8023c98:	2309      	movs	r3, #9
 8023c9a:	6033      	str	r3, [r6, #0]
 8023c9c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8023ca0:	81a3      	strh	r3, [r4, #12]
 8023ca2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023ca6:	e03e      	b.n	8023d26 <__swsetup_r+0xba>
 8023ca8:	4b25      	ldr	r3, [pc, #148]	; (8023d40 <__swsetup_r+0xd4>)
 8023caa:	429c      	cmp	r4, r3
 8023cac:	d101      	bne.n	8023cb2 <__swsetup_r+0x46>
 8023cae:	68ac      	ldr	r4, [r5, #8]
 8023cb0:	e7eb      	b.n	8023c8a <__swsetup_r+0x1e>
 8023cb2:	4b24      	ldr	r3, [pc, #144]	; (8023d44 <__swsetup_r+0xd8>)
 8023cb4:	429c      	cmp	r4, r3
 8023cb6:	bf08      	it	eq
 8023cb8:	68ec      	ldreq	r4, [r5, #12]
 8023cba:	e7e6      	b.n	8023c8a <__swsetup_r+0x1e>
 8023cbc:	0758      	lsls	r0, r3, #29
 8023cbe:	d512      	bpl.n	8023ce6 <__swsetup_r+0x7a>
 8023cc0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8023cc2:	b141      	cbz	r1, 8023cd6 <__swsetup_r+0x6a>
 8023cc4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8023cc8:	4299      	cmp	r1, r3
 8023cca:	d002      	beq.n	8023cd2 <__swsetup_r+0x66>
 8023ccc:	4630      	mov	r0, r6
 8023cce:	f7ff fbc5 	bl	802345c <_free_r>
 8023cd2:	2300      	movs	r3, #0
 8023cd4:	6363      	str	r3, [r4, #52]	; 0x34
 8023cd6:	89a3      	ldrh	r3, [r4, #12]
 8023cd8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8023cdc:	81a3      	strh	r3, [r4, #12]
 8023cde:	2300      	movs	r3, #0
 8023ce0:	6063      	str	r3, [r4, #4]
 8023ce2:	6923      	ldr	r3, [r4, #16]
 8023ce4:	6023      	str	r3, [r4, #0]
 8023ce6:	89a3      	ldrh	r3, [r4, #12]
 8023ce8:	f043 0308 	orr.w	r3, r3, #8
 8023cec:	81a3      	strh	r3, [r4, #12]
 8023cee:	6923      	ldr	r3, [r4, #16]
 8023cf0:	b94b      	cbnz	r3, 8023d06 <__swsetup_r+0x9a>
 8023cf2:	89a3      	ldrh	r3, [r4, #12]
 8023cf4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8023cf8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8023cfc:	d003      	beq.n	8023d06 <__swsetup_r+0x9a>
 8023cfe:	4621      	mov	r1, r4
 8023d00:	4630      	mov	r0, r6
 8023d02:	f000 f84d 	bl	8023da0 <__smakebuf_r>
 8023d06:	89a0      	ldrh	r0, [r4, #12]
 8023d08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023d0c:	f010 0301 	ands.w	r3, r0, #1
 8023d10:	d00a      	beq.n	8023d28 <__swsetup_r+0xbc>
 8023d12:	2300      	movs	r3, #0
 8023d14:	60a3      	str	r3, [r4, #8]
 8023d16:	6963      	ldr	r3, [r4, #20]
 8023d18:	425b      	negs	r3, r3
 8023d1a:	61a3      	str	r3, [r4, #24]
 8023d1c:	6923      	ldr	r3, [r4, #16]
 8023d1e:	b943      	cbnz	r3, 8023d32 <__swsetup_r+0xc6>
 8023d20:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8023d24:	d1ba      	bne.n	8023c9c <__swsetup_r+0x30>
 8023d26:	bd70      	pop	{r4, r5, r6, pc}
 8023d28:	0781      	lsls	r1, r0, #30
 8023d2a:	bf58      	it	pl
 8023d2c:	6963      	ldrpl	r3, [r4, #20]
 8023d2e:	60a3      	str	r3, [r4, #8]
 8023d30:	e7f4      	b.n	8023d1c <__swsetup_r+0xb0>
 8023d32:	2000      	movs	r0, #0
 8023d34:	e7f7      	b.n	8023d26 <__swsetup_r+0xba>
 8023d36:	bf00      	nop
 8023d38:	20000150 	.word	0x20000150
 8023d3c:	08027048 	.word	0x08027048
 8023d40:	08027068 	.word	0x08027068
 8023d44:	08027028 	.word	0x08027028

08023d48 <abort>:
 8023d48:	b508      	push	{r3, lr}
 8023d4a:	2006      	movs	r0, #6
 8023d4c:	f000 f898 	bl	8023e80 <raise>
 8023d50:	2001      	movs	r0, #1
 8023d52:	f002 fd59 	bl	8026808 <_exit>

08023d56 <__swhatbuf_r>:
 8023d56:	b570      	push	{r4, r5, r6, lr}
 8023d58:	460e      	mov	r6, r1
 8023d5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d5e:	2900      	cmp	r1, #0
 8023d60:	b096      	sub	sp, #88	; 0x58
 8023d62:	4614      	mov	r4, r2
 8023d64:	461d      	mov	r5, r3
 8023d66:	da08      	bge.n	8023d7a <__swhatbuf_r+0x24>
 8023d68:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8023d6c:	2200      	movs	r2, #0
 8023d6e:	602a      	str	r2, [r5, #0]
 8023d70:	061a      	lsls	r2, r3, #24
 8023d72:	d410      	bmi.n	8023d96 <__swhatbuf_r+0x40>
 8023d74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8023d78:	e00e      	b.n	8023d98 <__swhatbuf_r+0x42>
 8023d7a:	466a      	mov	r2, sp
 8023d7c:	f000 f89c 	bl	8023eb8 <_fstat_r>
 8023d80:	2800      	cmp	r0, #0
 8023d82:	dbf1      	blt.n	8023d68 <__swhatbuf_r+0x12>
 8023d84:	9a01      	ldr	r2, [sp, #4]
 8023d86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8023d8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8023d8e:	425a      	negs	r2, r3
 8023d90:	415a      	adcs	r2, r3
 8023d92:	602a      	str	r2, [r5, #0]
 8023d94:	e7ee      	b.n	8023d74 <__swhatbuf_r+0x1e>
 8023d96:	2340      	movs	r3, #64	; 0x40
 8023d98:	2000      	movs	r0, #0
 8023d9a:	6023      	str	r3, [r4, #0]
 8023d9c:	b016      	add	sp, #88	; 0x58
 8023d9e:	bd70      	pop	{r4, r5, r6, pc}

08023da0 <__smakebuf_r>:
 8023da0:	898b      	ldrh	r3, [r1, #12]
 8023da2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023da4:	079d      	lsls	r5, r3, #30
 8023da6:	4606      	mov	r6, r0
 8023da8:	460c      	mov	r4, r1
 8023daa:	d507      	bpl.n	8023dbc <__smakebuf_r+0x1c>
 8023dac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8023db0:	6023      	str	r3, [r4, #0]
 8023db2:	6123      	str	r3, [r4, #16]
 8023db4:	2301      	movs	r3, #1
 8023db6:	6163      	str	r3, [r4, #20]
 8023db8:	b002      	add	sp, #8
 8023dba:	bd70      	pop	{r4, r5, r6, pc}
 8023dbc:	ab01      	add	r3, sp, #4
 8023dbe:	466a      	mov	r2, sp
 8023dc0:	f7ff ffc9 	bl	8023d56 <__swhatbuf_r>
 8023dc4:	9900      	ldr	r1, [sp, #0]
 8023dc6:	4605      	mov	r5, r0
 8023dc8:	4630      	mov	r0, r6
 8023dca:	f7fb fcab 	bl	801f724 <_malloc_r>
 8023dce:	b948      	cbnz	r0, 8023de4 <__smakebuf_r+0x44>
 8023dd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023dd4:	059a      	lsls	r2, r3, #22
 8023dd6:	d4ef      	bmi.n	8023db8 <__smakebuf_r+0x18>
 8023dd8:	f023 0303 	bic.w	r3, r3, #3
 8023ddc:	f043 0302 	orr.w	r3, r3, #2
 8023de0:	81a3      	strh	r3, [r4, #12]
 8023de2:	e7e3      	b.n	8023dac <__smakebuf_r+0xc>
 8023de4:	4b0d      	ldr	r3, [pc, #52]	; (8023e1c <__smakebuf_r+0x7c>)
 8023de6:	62b3      	str	r3, [r6, #40]	; 0x28
 8023de8:	89a3      	ldrh	r3, [r4, #12]
 8023dea:	6020      	str	r0, [r4, #0]
 8023dec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023df0:	81a3      	strh	r3, [r4, #12]
 8023df2:	9b00      	ldr	r3, [sp, #0]
 8023df4:	6163      	str	r3, [r4, #20]
 8023df6:	9b01      	ldr	r3, [sp, #4]
 8023df8:	6120      	str	r0, [r4, #16]
 8023dfa:	b15b      	cbz	r3, 8023e14 <__smakebuf_r+0x74>
 8023dfc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023e00:	4630      	mov	r0, r6
 8023e02:	f000 f86b 	bl	8023edc <_isatty_r>
 8023e06:	b128      	cbz	r0, 8023e14 <__smakebuf_r+0x74>
 8023e08:	89a3      	ldrh	r3, [r4, #12]
 8023e0a:	f023 0303 	bic.w	r3, r3, #3
 8023e0e:	f043 0301 	orr.w	r3, r3, #1
 8023e12:	81a3      	strh	r3, [r4, #12]
 8023e14:	89a0      	ldrh	r0, [r4, #12]
 8023e16:	4305      	orrs	r5, r0
 8023e18:	81a5      	strh	r5, [r4, #12]
 8023e1a:	e7cd      	b.n	8023db8 <__smakebuf_r+0x18>
 8023e1c:	0801f4c5 	.word	0x0801f4c5

08023e20 <_malloc_usable_size_r>:
 8023e20:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023e24:	1f18      	subs	r0, r3, #4
 8023e26:	2b00      	cmp	r3, #0
 8023e28:	bfbc      	itt	lt
 8023e2a:	580b      	ldrlt	r3, [r1, r0]
 8023e2c:	18c0      	addlt	r0, r0, r3
 8023e2e:	4770      	bx	lr

08023e30 <_raise_r>:
 8023e30:	291f      	cmp	r1, #31
 8023e32:	b538      	push	{r3, r4, r5, lr}
 8023e34:	4604      	mov	r4, r0
 8023e36:	460d      	mov	r5, r1
 8023e38:	d904      	bls.n	8023e44 <_raise_r+0x14>
 8023e3a:	2316      	movs	r3, #22
 8023e3c:	6003      	str	r3, [r0, #0]
 8023e3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8023e42:	bd38      	pop	{r3, r4, r5, pc}
 8023e44:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8023e46:	b112      	cbz	r2, 8023e4e <_raise_r+0x1e>
 8023e48:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023e4c:	b94b      	cbnz	r3, 8023e62 <_raise_r+0x32>
 8023e4e:	4620      	mov	r0, r4
 8023e50:	f000 f830 	bl	8023eb4 <_getpid_r>
 8023e54:	462a      	mov	r2, r5
 8023e56:	4601      	mov	r1, r0
 8023e58:	4620      	mov	r0, r4
 8023e5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023e5e:	f000 b817 	b.w	8023e90 <_kill_r>
 8023e62:	2b01      	cmp	r3, #1
 8023e64:	d00a      	beq.n	8023e7c <_raise_r+0x4c>
 8023e66:	1c59      	adds	r1, r3, #1
 8023e68:	d103      	bne.n	8023e72 <_raise_r+0x42>
 8023e6a:	2316      	movs	r3, #22
 8023e6c:	6003      	str	r3, [r0, #0]
 8023e6e:	2001      	movs	r0, #1
 8023e70:	e7e7      	b.n	8023e42 <_raise_r+0x12>
 8023e72:	2400      	movs	r4, #0
 8023e74:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8023e78:	4628      	mov	r0, r5
 8023e7a:	4798      	blx	r3
 8023e7c:	2000      	movs	r0, #0
 8023e7e:	e7e0      	b.n	8023e42 <_raise_r+0x12>

08023e80 <raise>:
 8023e80:	4b02      	ldr	r3, [pc, #8]	; (8023e8c <raise+0xc>)
 8023e82:	4601      	mov	r1, r0
 8023e84:	6818      	ldr	r0, [r3, #0]
 8023e86:	f7ff bfd3 	b.w	8023e30 <_raise_r>
 8023e8a:	bf00      	nop
 8023e8c:	20000150 	.word	0x20000150

08023e90 <_kill_r>:
 8023e90:	b538      	push	{r3, r4, r5, lr}
 8023e92:	4d07      	ldr	r5, [pc, #28]	; (8023eb0 <_kill_r+0x20>)
 8023e94:	2300      	movs	r3, #0
 8023e96:	4604      	mov	r4, r0
 8023e98:	4608      	mov	r0, r1
 8023e9a:	4611      	mov	r1, r2
 8023e9c:	602b      	str	r3, [r5, #0]
 8023e9e:	f002 fc85 	bl	80267ac <_kill>
 8023ea2:	1c43      	adds	r3, r0, #1
 8023ea4:	d102      	bne.n	8023eac <_kill_r+0x1c>
 8023ea6:	682b      	ldr	r3, [r5, #0]
 8023ea8:	b103      	cbz	r3, 8023eac <_kill_r+0x1c>
 8023eaa:	6023      	str	r3, [r4, #0]
 8023eac:	bd38      	pop	{r3, r4, r5, pc}
 8023eae:	bf00      	nop
 8023eb0:	2000f584 	.word	0x2000f584

08023eb4 <_getpid_r>:
 8023eb4:	f002 bc6a 	b.w	802678c <_getpid>

08023eb8 <_fstat_r>:
 8023eb8:	b538      	push	{r3, r4, r5, lr}
 8023eba:	4d07      	ldr	r5, [pc, #28]	; (8023ed8 <_fstat_r+0x20>)
 8023ebc:	2300      	movs	r3, #0
 8023ebe:	4604      	mov	r4, r0
 8023ec0:	4608      	mov	r0, r1
 8023ec2:	4611      	mov	r1, r2
 8023ec4:	602b      	str	r3, [r5, #0]
 8023ec6:	f002 fc59 	bl	802677c <_fstat>
 8023eca:	1c43      	adds	r3, r0, #1
 8023ecc:	d102      	bne.n	8023ed4 <_fstat_r+0x1c>
 8023ece:	682b      	ldr	r3, [r5, #0]
 8023ed0:	b103      	cbz	r3, 8023ed4 <_fstat_r+0x1c>
 8023ed2:	6023      	str	r3, [r4, #0]
 8023ed4:	bd38      	pop	{r3, r4, r5, pc}
 8023ed6:	bf00      	nop
 8023ed8:	2000f584 	.word	0x2000f584

08023edc <_isatty_r>:
 8023edc:	b538      	push	{r3, r4, r5, lr}
 8023ede:	4d06      	ldr	r5, [pc, #24]	; (8023ef8 <_isatty_r+0x1c>)
 8023ee0:	2300      	movs	r3, #0
 8023ee2:	4604      	mov	r4, r0
 8023ee4:	4608      	mov	r0, r1
 8023ee6:	602b      	str	r3, [r5, #0]
 8023ee8:	f002 fc58 	bl	802679c <_isatty>
 8023eec:	1c43      	adds	r3, r0, #1
 8023eee:	d102      	bne.n	8023ef6 <_isatty_r+0x1a>
 8023ef0:	682b      	ldr	r3, [r5, #0]
 8023ef2:	b103      	cbz	r3, 8023ef6 <_isatty_r+0x1a>
 8023ef4:	6023      	str	r3, [r4, #0]
 8023ef6:	bd38      	pop	{r3, r4, r5, pc}
 8023ef8:	2000f584 	.word	0x2000f584
 8023efc:	00000000 	.word	0x00000000

08023f00 <atan>:
 8023f00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f04:	ec55 4b10 	vmov	r4, r5, d0
 8023f08:	4bc3      	ldr	r3, [pc, #780]	; (8024218 <atan+0x318>)
 8023f0a:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8023f0e:	429e      	cmp	r6, r3
 8023f10:	46ab      	mov	fp, r5
 8023f12:	dd18      	ble.n	8023f46 <atan+0x46>
 8023f14:	4bc1      	ldr	r3, [pc, #772]	; (802421c <atan+0x31c>)
 8023f16:	429e      	cmp	r6, r3
 8023f18:	dc01      	bgt.n	8023f1e <atan+0x1e>
 8023f1a:	d109      	bne.n	8023f30 <atan+0x30>
 8023f1c:	b144      	cbz	r4, 8023f30 <atan+0x30>
 8023f1e:	4622      	mov	r2, r4
 8023f20:	462b      	mov	r3, r5
 8023f22:	4620      	mov	r0, r4
 8023f24:	4629      	mov	r1, r5
 8023f26:	f7dc f9b1 	bl	800028c <__adddf3>
 8023f2a:	4604      	mov	r4, r0
 8023f2c:	460d      	mov	r5, r1
 8023f2e:	e006      	b.n	8023f3e <atan+0x3e>
 8023f30:	f1bb 0f00 	cmp.w	fp, #0
 8023f34:	f300 8131 	bgt.w	802419a <atan+0x29a>
 8023f38:	a59b      	add	r5, pc, #620	; (adr r5, 80241a8 <atan+0x2a8>)
 8023f3a:	e9d5 4500 	ldrd	r4, r5, [r5]
 8023f3e:	ec45 4b10 	vmov	d0, r4, r5
 8023f42:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f46:	4bb6      	ldr	r3, [pc, #728]	; (8024220 <atan+0x320>)
 8023f48:	429e      	cmp	r6, r3
 8023f4a:	dc14      	bgt.n	8023f76 <atan+0x76>
 8023f4c:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8023f50:	429e      	cmp	r6, r3
 8023f52:	dc0d      	bgt.n	8023f70 <atan+0x70>
 8023f54:	a396      	add	r3, pc, #600	; (adr r3, 80241b0 <atan+0x2b0>)
 8023f56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f5a:	ee10 0a10 	vmov	r0, s0
 8023f5e:	4629      	mov	r1, r5
 8023f60:	f7dc f994 	bl	800028c <__adddf3>
 8023f64:	4baf      	ldr	r3, [pc, #700]	; (8024224 <atan+0x324>)
 8023f66:	2200      	movs	r2, #0
 8023f68:	f7dc fdd6 	bl	8000b18 <__aeabi_dcmpgt>
 8023f6c:	2800      	cmp	r0, #0
 8023f6e:	d1e6      	bne.n	8023f3e <atan+0x3e>
 8023f70:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8023f74:	e02b      	b.n	8023fce <atan+0xce>
 8023f76:	f000 f9b7 	bl	80242e8 <fabs>
 8023f7a:	4bab      	ldr	r3, [pc, #684]	; (8024228 <atan+0x328>)
 8023f7c:	429e      	cmp	r6, r3
 8023f7e:	ec55 4b10 	vmov	r4, r5, d0
 8023f82:	f300 80bf 	bgt.w	8024104 <atan+0x204>
 8023f86:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8023f8a:	429e      	cmp	r6, r3
 8023f8c:	f300 80a0 	bgt.w	80240d0 <atan+0x1d0>
 8023f90:	ee10 2a10 	vmov	r2, s0
 8023f94:	ee10 0a10 	vmov	r0, s0
 8023f98:	462b      	mov	r3, r5
 8023f9a:	4629      	mov	r1, r5
 8023f9c:	f7dc f976 	bl	800028c <__adddf3>
 8023fa0:	4ba0      	ldr	r3, [pc, #640]	; (8024224 <atan+0x324>)
 8023fa2:	2200      	movs	r2, #0
 8023fa4:	f7dc f970 	bl	8000288 <__aeabi_dsub>
 8023fa8:	2200      	movs	r2, #0
 8023faa:	4606      	mov	r6, r0
 8023fac:	460f      	mov	r7, r1
 8023fae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8023fb2:	4620      	mov	r0, r4
 8023fb4:	4629      	mov	r1, r5
 8023fb6:	f7dc f969 	bl	800028c <__adddf3>
 8023fba:	4602      	mov	r2, r0
 8023fbc:	460b      	mov	r3, r1
 8023fbe:	4630      	mov	r0, r6
 8023fc0:	4639      	mov	r1, r7
 8023fc2:	f7dc fc43 	bl	800084c <__aeabi_ddiv>
 8023fc6:	f04f 0a00 	mov.w	sl, #0
 8023fca:	4604      	mov	r4, r0
 8023fcc:	460d      	mov	r5, r1
 8023fce:	4622      	mov	r2, r4
 8023fd0:	462b      	mov	r3, r5
 8023fd2:	4620      	mov	r0, r4
 8023fd4:	4629      	mov	r1, r5
 8023fd6:	f7dc fb0f 	bl	80005f8 <__aeabi_dmul>
 8023fda:	4602      	mov	r2, r0
 8023fdc:	460b      	mov	r3, r1
 8023fde:	4680      	mov	r8, r0
 8023fe0:	4689      	mov	r9, r1
 8023fe2:	f7dc fb09 	bl	80005f8 <__aeabi_dmul>
 8023fe6:	a374      	add	r3, pc, #464	; (adr r3, 80241b8 <atan+0x2b8>)
 8023fe8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fec:	4606      	mov	r6, r0
 8023fee:	460f      	mov	r7, r1
 8023ff0:	f7dc fb02 	bl	80005f8 <__aeabi_dmul>
 8023ff4:	a372      	add	r3, pc, #456	; (adr r3, 80241c0 <atan+0x2c0>)
 8023ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ffa:	f7dc f947 	bl	800028c <__adddf3>
 8023ffe:	4632      	mov	r2, r6
 8024000:	463b      	mov	r3, r7
 8024002:	f7dc faf9 	bl	80005f8 <__aeabi_dmul>
 8024006:	a370      	add	r3, pc, #448	; (adr r3, 80241c8 <atan+0x2c8>)
 8024008:	e9d3 2300 	ldrd	r2, r3, [r3]
 802400c:	f7dc f93e 	bl	800028c <__adddf3>
 8024010:	4632      	mov	r2, r6
 8024012:	463b      	mov	r3, r7
 8024014:	f7dc faf0 	bl	80005f8 <__aeabi_dmul>
 8024018:	a36d      	add	r3, pc, #436	; (adr r3, 80241d0 <atan+0x2d0>)
 802401a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802401e:	f7dc f935 	bl	800028c <__adddf3>
 8024022:	4632      	mov	r2, r6
 8024024:	463b      	mov	r3, r7
 8024026:	f7dc fae7 	bl	80005f8 <__aeabi_dmul>
 802402a:	a36b      	add	r3, pc, #428	; (adr r3, 80241d8 <atan+0x2d8>)
 802402c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024030:	f7dc f92c 	bl	800028c <__adddf3>
 8024034:	4632      	mov	r2, r6
 8024036:	463b      	mov	r3, r7
 8024038:	f7dc fade 	bl	80005f8 <__aeabi_dmul>
 802403c:	a368      	add	r3, pc, #416	; (adr r3, 80241e0 <atan+0x2e0>)
 802403e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024042:	f7dc f923 	bl	800028c <__adddf3>
 8024046:	4642      	mov	r2, r8
 8024048:	464b      	mov	r3, r9
 802404a:	f7dc fad5 	bl	80005f8 <__aeabi_dmul>
 802404e:	a366      	add	r3, pc, #408	; (adr r3, 80241e8 <atan+0x2e8>)
 8024050:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024054:	4680      	mov	r8, r0
 8024056:	4689      	mov	r9, r1
 8024058:	4630      	mov	r0, r6
 802405a:	4639      	mov	r1, r7
 802405c:	f7dc facc 	bl	80005f8 <__aeabi_dmul>
 8024060:	a363      	add	r3, pc, #396	; (adr r3, 80241f0 <atan+0x2f0>)
 8024062:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024066:	f7dc f90f 	bl	8000288 <__aeabi_dsub>
 802406a:	4632      	mov	r2, r6
 802406c:	463b      	mov	r3, r7
 802406e:	f7dc fac3 	bl	80005f8 <__aeabi_dmul>
 8024072:	a361      	add	r3, pc, #388	; (adr r3, 80241f8 <atan+0x2f8>)
 8024074:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024078:	f7dc f906 	bl	8000288 <__aeabi_dsub>
 802407c:	4632      	mov	r2, r6
 802407e:	463b      	mov	r3, r7
 8024080:	f7dc faba 	bl	80005f8 <__aeabi_dmul>
 8024084:	a35e      	add	r3, pc, #376	; (adr r3, 8024200 <atan+0x300>)
 8024086:	e9d3 2300 	ldrd	r2, r3, [r3]
 802408a:	f7dc f8fd 	bl	8000288 <__aeabi_dsub>
 802408e:	4632      	mov	r2, r6
 8024090:	463b      	mov	r3, r7
 8024092:	f7dc fab1 	bl	80005f8 <__aeabi_dmul>
 8024096:	a35c      	add	r3, pc, #368	; (adr r3, 8024208 <atan+0x308>)
 8024098:	e9d3 2300 	ldrd	r2, r3, [r3]
 802409c:	f7dc f8f4 	bl	8000288 <__aeabi_dsub>
 80240a0:	4632      	mov	r2, r6
 80240a2:	463b      	mov	r3, r7
 80240a4:	f7dc faa8 	bl	80005f8 <__aeabi_dmul>
 80240a8:	4602      	mov	r2, r0
 80240aa:	460b      	mov	r3, r1
 80240ac:	4640      	mov	r0, r8
 80240ae:	4649      	mov	r1, r9
 80240b0:	f7dc f8ec 	bl	800028c <__adddf3>
 80240b4:	4622      	mov	r2, r4
 80240b6:	462b      	mov	r3, r5
 80240b8:	f7dc fa9e 	bl	80005f8 <__aeabi_dmul>
 80240bc:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 80240c0:	4602      	mov	r2, r0
 80240c2:	460b      	mov	r3, r1
 80240c4:	d14b      	bne.n	802415e <atan+0x25e>
 80240c6:	4620      	mov	r0, r4
 80240c8:	4629      	mov	r1, r5
 80240ca:	f7dc f8dd 	bl	8000288 <__aeabi_dsub>
 80240ce:	e72c      	b.n	8023f2a <atan+0x2a>
 80240d0:	ee10 0a10 	vmov	r0, s0
 80240d4:	4b53      	ldr	r3, [pc, #332]	; (8024224 <atan+0x324>)
 80240d6:	2200      	movs	r2, #0
 80240d8:	4629      	mov	r1, r5
 80240da:	f7dc f8d5 	bl	8000288 <__aeabi_dsub>
 80240de:	4b51      	ldr	r3, [pc, #324]	; (8024224 <atan+0x324>)
 80240e0:	4606      	mov	r6, r0
 80240e2:	460f      	mov	r7, r1
 80240e4:	2200      	movs	r2, #0
 80240e6:	4620      	mov	r0, r4
 80240e8:	4629      	mov	r1, r5
 80240ea:	f7dc f8cf 	bl	800028c <__adddf3>
 80240ee:	4602      	mov	r2, r0
 80240f0:	460b      	mov	r3, r1
 80240f2:	4630      	mov	r0, r6
 80240f4:	4639      	mov	r1, r7
 80240f6:	f7dc fba9 	bl	800084c <__aeabi_ddiv>
 80240fa:	f04f 0a01 	mov.w	sl, #1
 80240fe:	4604      	mov	r4, r0
 8024100:	460d      	mov	r5, r1
 8024102:	e764      	b.n	8023fce <atan+0xce>
 8024104:	4b49      	ldr	r3, [pc, #292]	; (802422c <atan+0x32c>)
 8024106:	429e      	cmp	r6, r3
 8024108:	da1d      	bge.n	8024146 <atan+0x246>
 802410a:	ee10 0a10 	vmov	r0, s0
 802410e:	4b48      	ldr	r3, [pc, #288]	; (8024230 <atan+0x330>)
 8024110:	2200      	movs	r2, #0
 8024112:	4629      	mov	r1, r5
 8024114:	f7dc f8b8 	bl	8000288 <__aeabi_dsub>
 8024118:	4b45      	ldr	r3, [pc, #276]	; (8024230 <atan+0x330>)
 802411a:	4606      	mov	r6, r0
 802411c:	460f      	mov	r7, r1
 802411e:	2200      	movs	r2, #0
 8024120:	4620      	mov	r0, r4
 8024122:	4629      	mov	r1, r5
 8024124:	f7dc fa68 	bl	80005f8 <__aeabi_dmul>
 8024128:	4b3e      	ldr	r3, [pc, #248]	; (8024224 <atan+0x324>)
 802412a:	2200      	movs	r2, #0
 802412c:	f7dc f8ae 	bl	800028c <__adddf3>
 8024130:	4602      	mov	r2, r0
 8024132:	460b      	mov	r3, r1
 8024134:	4630      	mov	r0, r6
 8024136:	4639      	mov	r1, r7
 8024138:	f7dc fb88 	bl	800084c <__aeabi_ddiv>
 802413c:	f04f 0a02 	mov.w	sl, #2
 8024140:	4604      	mov	r4, r0
 8024142:	460d      	mov	r5, r1
 8024144:	e743      	b.n	8023fce <atan+0xce>
 8024146:	462b      	mov	r3, r5
 8024148:	ee10 2a10 	vmov	r2, s0
 802414c:	4939      	ldr	r1, [pc, #228]	; (8024234 <atan+0x334>)
 802414e:	2000      	movs	r0, #0
 8024150:	f7dc fb7c 	bl	800084c <__aeabi_ddiv>
 8024154:	f04f 0a03 	mov.w	sl, #3
 8024158:	4604      	mov	r4, r0
 802415a:	460d      	mov	r5, r1
 802415c:	e737      	b.n	8023fce <atan+0xce>
 802415e:	4b36      	ldr	r3, [pc, #216]	; (8024238 <atan+0x338>)
 8024160:	4e36      	ldr	r6, [pc, #216]	; (802423c <atan+0x33c>)
 8024162:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 8024166:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 802416a:	e9da 2300 	ldrd	r2, r3, [sl]
 802416e:	f7dc f88b 	bl	8000288 <__aeabi_dsub>
 8024172:	4622      	mov	r2, r4
 8024174:	462b      	mov	r3, r5
 8024176:	f7dc f887 	bl	8000288 <__aeabi_dsub>
 802417a:	4602      	mov	r2, r0
 802417c:	460b      	mov	r3, r1
 802417e:	e9d6 0100 	ldrd	r0, r1, [r6]
 8024182:	f7dc f881 	bl	8000288 <__aeabi_dsub>
 8024186:	f1bb 0f00 	cmp.w	fp, #0
 802418a:	4604      	mov	r4, r0
 802418c:	460d      	mov	r5, r1
 802418e:	f6bf aed6 	bge.w	8023f3e <atan+0x3e>
 8024192:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024196:	461d      	mov	r5, r3
 8024198:	e6d1      	b.n	8023f3e <atan+0x3e>
 802419a:	a51d      	add	r5, pc, #116	; (adr r5, 8024210 <atan+0x310>)
 802419c:	e9d5 4500 	ldrd	r4, r5, [r5]
 80241a0:	e6cd      	b.n	8023f3e <atan+0x3e>
 80241a2:	bf00      	nop
 80241a4:	f3af 8000 	nop.w
 80241a8:	54442d18 	.word	0x54442d18
 80241ac:	bff921fb 	.word	0xbff921fb
 80241b0:	8800759c 	.word	0x8800759c
 80241b4:	7e37e43c 	.word	0x7e37e43c
 80241b8:	e322da11 	.word	0xe322da11
 80241bc:	3f90ad3a 	.word	0x3f90ad3a
 80241c0:	24760deb 	.word	0x24760deb
 80241c4:	3fa97b4b 	.word	0x3fa97b4b
 80241c8:	a0d03d51 	.word	0xa0d03d51
 80241cc:	3fb10d66 	.word	0x3fb10d66
 80241d0:	c54c206e 	.word	0xc54c206e
 80241d4:	3fb745cd 	.word	0x3fb745cd
 80241d8:	920083ff 	.word	0x920083ff
 80241dc:	3fc24924 	.word	0x3fc24924
 80241e0:	5555550d 	.word	0x5555550d
 80241e4:	3fd55555 	.word	0x3fd55555
 80241e8:	2c6a6c2f 	.word	0x2c6a6c2f
 80241ec:	bfa2b444 	.word	0xbfa2b444
 80241f0:	52defd9a 	.word	0x52defd9a
 80241f4:	3fadde2d 	.word	0x3fadde2d
 80241f8:	af749a6d 	.word	0xaf749a6d
 80241fc:	3fb3b0f2 	.word	0x3fb3b0f2
 8024200:	fe231671 	.word	0xfe231671
 8024204:	3fbc71c6 	.word	0x3fbc71c6
 8024208:	9998ebc4 	.word	0x9998ebc4
 802420c:	3fc99999 	.word	0x3fc99999
 8024210:	54442d18 	.word	0x54442d18
 8024214:	3ff921fb 	.word	0x3ff921fb
 8024218:	440fffff 	.word	0x440fffff
 802421c:	7ff00000 	.word	0x7ff00000
 8024220:	3fdbffff 	.word	0x3fdbffff
 8024224:	3ff00000 	.word	0x3ff00000
 8024228:	3ff2ffff 	.word	0x3ff2ffff
 802422c:	40038000 	.word	0x40038000
 8024230:	3ff80000 	.word	0x3ff80000
 8024234:	bff00000 	.word	0xbff00000
 8024238:	080274f0 	.word	0x080274f0
 802423c:	080274d0 	.word	0x080274d0

08024240 <cos>:
 8024240:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8024242:	ec53 2b10 	vmov	r2, r3, d0
 8024246:	4826      	ldr	r0, [pc, #152]	; (80242e0 <cos+0xa0>)
 8024248:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802424c:	4281      	cmp	r1, r0
 802424e:	dc06      	bgt.n	802425e <cos+0x1e>
 8024250:	ed9f 1b21 	vldr	d1, [pc, #132]	; 80242d8 <cos+0x98>
 8024254:	b005      	add	sp, #20
 8024256:	f85d eb04 	ldr.w	lr, [sp], #4
 802425a:	f001 bced 	b.w	8025c38 <__kernel_cos>
 802425e:	4821      	ldr	r0, [pc, #132]	; (80242e4 <cos+0xa4>)
 8024260:	4281      	cmp	r1, r0
 8024262:	dd09      	ble.n	8024278 <cos+0x38>
 8024264:	ee10 0a10 	vmov	r0, s0
 8024268:	4619      	mov	r1, r3
 802426a:	f7dc f80d 	bl	8000288 <__aeabi_dsub>
 802426e:	ec41 0b10 	vmov	d0, r0, r1
 8024272:	b005      	add	sp, #20
 8024274:	f85d fb04 	ldr.w	pc, [sp], #4
 8024278:	4668      	mov	r0, sp
 802427a:	f001 fa19 	bl	80256b0 <__ieee754_rem_pio2>
 802427e:	f000 0003 	and.w	r0, r0, #3
 8024282:	2801      	cmp	r0, #1
 8024284:	d00b      	beq.n	802429e <cos+0x5e>
 8024286:	2802      	cmp	r0, #2
 8024288:	d016      	beq.n	80242b8 <cos+0x78>
 802428a:	b9e0      	cbnz	r0, 80242c6 <cos+0x86>
 802428c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024290:	ed9d 0b00 	vldr	d0, [sp]
 8024294:	f001 fcd0 	bl	8025c38 <__kernel_cos>
 8024298:	ec51 0b10 	vmov	r0, r1, d0
 802429c:	e7e7      	b.n	802426e <cos+0x2e>
 802429e:	ed9d 1b02 	vldr	d1, [sp, #8]
 80242a2:	ed9d 0b00 	vldr	d0, [sp]
 80242a6:	f002 f8df 	bl	8026468 <__kernel_sin>
 80242aa:	ec53 2b10 	vmov	r2, r3, d0
 80242ae:	ee10 0a10 	vmov	r0, s0
 80242b2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80242b6:	e7da      	b.n	802426e <cos+0x2e>
 80242b8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80242bc:	ed9d 0b00 	vldr	d0, [sp]
 80242c0:	f001 fcba 	bl	8025c38 <__kernel_cos>
 80242c4:	e7f1      	b.n	80242aa <cos+0x6a>
 80242c6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80242ca:	ed9d 0b00 	vldr	d0, [sp]
 80242ce:	2001      	movs	r0, #1
 80242d0:	f002 f8ca 	bl	8026468 <__kernel_sin>
 80242d4:	e7e0      	b.n	8024298 <cos+0x58>
 80242d6:	bf00      	nop
	...
 80242e0:	3fe921fb 	.word	0x3fe921fb
 80242e4:	7fefffff 	.word	0x7fefffff

080242e8 <fabs>:
 80242e8:	ec51 0b10 	vmov	r0, r1, d0
 80242ec:	ee10 2a10 	vmov	r2, s0
 80242f0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80242f4:	ec43 2b10 	vmov	d0, r2, r3
 80242f8:	4770      	bx	lr
 80242fa:	0000      	movs	r0, r0
 80242fc:	0000      	movs	r0, r0
	...

08024300 <floor>:
 8024300:	ec51 0b10 	vmov	r0, r1, d0
 8024304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024308:	f3c1 570a 	ubfx	r7, r1, #20, #11
 802430c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8024310:	2e13      	cmp	r6, #19
 8024312:	ee10 5a10 	vmov	r5, s0
 8024316:	ee10 8a10 	vmov	r8, s0
 802431a:	460c      	mov	r4, r1
 802431c:	dc32      	bgt.n	8024384 <floor+0x84>
 802431e:	2e00      	cmp	r6, #0
 8024320:	da14      	bge.n	802434c <floor+0x4c>
 8024322:	a333      	add	r3, pc, #204	; (adr r3, 80243f0 <floor+0xf0>)
 8024324:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024328:	f7db ffb0 	bl	800028c <__adddf3>
 802432c:	2200      	movs	r2, #0
 802432e:	2300      	movs	r3, #0
 8024330:	f7dc fbf2 	bl	8000b18 <__aeabi_dcmpgt>
 8024334:	b138      	cbz	r0, 8024346 <floor+0x46>
 8024336:	2c00      	cmp	r4, #0
 8024338:	da57      	bge.n	80243ea <floor+0xea>
 802433a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 802433e:	431d      	orrs	r5, r3
 8024340:	d001      	beq.n	8024346 <floor+0x46>
 8024342:	4c2d      	ldr	r4, [pc, #180]	; (80243f8 <floor+0xf8>)
 8024344:	2500      	movs	r5, #0
 8024346:	4621      	mov	r1, r4
 8024348:	4628      	mov	r0, r5
 802434a:	e025      	b.n	8024398 <floor+0x98>
 802434c:	4f2b      	ldr	r7, [pc, #172]	; (80243fc <floor+0xfc>)
 802434e:	4137      	asrs	r7, r6
 8024350:	ea01 0307 	and.w	r3, r1, r7
 8024354:	4303      	orrs	r3, r0
 8024356:	d01f      	beq.n	8024398 <floor+0x98>
 8024358:	a325      	add	r3, pc, #148	; (adr r3, 80243f0 <floor+0xf0>)
 802435a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802435e:	f7db ff95 	bl	800028c <__adddf3>
 8024362:	2200      	movs	r2, #0
 8024364:	2300      	movs	r3, #0
 8024366:	f7dc fbd7 	bl	8000b18 <__aeabi_dcmpgt>
 802436a:	2800      	cmp	r0, #0
 802436c:	d0eb      	beq.n	8024346 <floor+0x46>
 802436e:	2c00      	cmp	r4, #0
 8024370:	bfbe      	ittt	lt
 8024372:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8024376:	fa43 f606 	asrlt.w	r6, r3, r6
 802437a:	19a4      	addlt	r4, r4, r6
 802437c:	ea24 0407 	bic.w	r4, r4, r7
 8024380:	2500      	movs	r5, #0
 8024382:	e7e0      	b.n	8024346 <floor+0x46>
 8024384:	2e33      	cmp	r6, #51	; 0x33
 8024386:	dd0b      	ble.n	80243a0 <floor+0xa0>
 8024388:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 802438c:	d104      	bne.n	8024398 <floor+0x98>
 802438e:	ee10 2a10 	vmov	r2, s0
 8024392:	460b      	mov	r3, r1
 8024394:	f7db ff7a 	bl	800028c <__adddf3>
 8024398:	ec41 0b10 	vmov	d0, r0, r1
 802439c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80243a0:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 80243a4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80243a8:	fa23 f707 	lsr.w	r7, r3, r7
 80243ac:	4207      	tst	r7, r0
 80243ae:	d0f3      	beq.n	8024398 <floor+0x98>
 80243b0:	a30f      	add	r3, pc, #60	; (adr r3, 80243f0 <floor+0xf0>)
 80243b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80243b6:	f7db ff69 	bl	800028c <__adddf3>
 80243ba:	2200      	movs	r2, #0
 80243bc:	2300      	movs	r3, #0
 80243be:	f7dc fbab 	bl	8000b18 <__aeabi_dcmpgt>
 80243c2:	2800      	cmp	r0, #0
 80243c4:	d0bf      	beq.n	8024346 <floor+0x46>
 80243c6:	2c00      	cmp	r4, #0
 80243c8:	da02      	bge.n	80243d0 <floor+0xd0>
 80243ca:	2e14      	cmp	r6, #20
 80243cc:	d103      	bne.n	80243d6 <floor+0xd6>
 80243ce:	3401      	adds	r4, #1
 80243d0:	ea25 0507 	bic.w	r5, r5, r7
 80243d4:	e7b7      	b.n	8024346 <floor+0x46>
 80243d6:	2301      	movs	r3, #1
 80243d8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80243dc:	fa03 f606 	lsl.w	r6, r3, r6
 80243e0:	4435      	add	r5, r6
 80243e2:	4545      	cmp	r5, r8
 80243e4:	bf38      	it	cc
 80243e6:	18e4      	addcc	r4, r4, r3
 80243e8:	e7f2      	b.n	80243d0 <floor+0xd0>
 80243ea:	2500      	movs	r5, #0
 80243ec:	462c      	mov	r4, r5
 80243ee:	e7aa      	b.n	8024346 <floor+0x46>
 80243f0:	8800759c 	.word	0x8800759c
 80243f4:	7e37e43c 	.word	0x7e37e43c
 80243f8:	bff00000 	.word	0xbff00000
 80243fc:	000fffff 	.word	0x000fffff

08024400 <sin>:
 8024400:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8024402:	ec53 2b10 	vmov	r2, r3, d0
 8024406:	4828      	ldr	r0, [pc, #160]	; (80244a8 <sin+0xa8>)
 8024408:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802440c:	4281      	cmp	r1, r0
 802440e:	dc07      	bgt.n	8024420 <sin+0x20>
 8024410:	ed9f 1b23 	vldr	d1, [pc, #140]	; 80244a0 <sin+0xa0>
 8024414:	2000      	movs	r0, #0
 8024416:	b005      	add	sp, #20
 8024418:	f85d eb04 	ldr.w	lr, [sp], #4
 802441c:	f002 b824 	b.w	8026468 <__kernel_sin>
 8024420:	4822      	ldr	r0, [pc, #136]	; (80244ac <sin+0xac>)
 8024422:	4281      	cmp	r1, r0
 8024424:	dd09      	ble.n	802443a <sin+0x3a>
 8024426:	ee10 0a10 	vmov	r0, s0
 802442a:	4619      	mov	r1, r3
 802442c:	f7db ff2c 	bl	8000288 <__aeabi_dsub>
 8024430:	ec41 0b10 	vmov	d0, r0, r1
 8024434:	b005      	add	sp, #20
 8024436:	f85d fb04 	ldr.w	pc, [sp], #4
 802443a:	4668      	mov	r0, sp
 802443c:	f001 f938 	bl	80256b0 <__ieee754_rem_pio2>
 8024440:	f000 0003 	and.w	r0, r0, #3
 8024444:	2801      	cmp	r0, #1
 8024446:	d00c      	beq.n	8024462 <sin+0x62>
 8024448:	2802      	cmp	r0, #2
 802444a:	d011      	beq.n	8024470 <sin+0x70>
 802444c:	b9f0      	cbnz	r0, 802448c <sin+0x8c>
 802444e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024452:	ed9d 0b00 	vldr	d0, [sp]
 8024456:	2001      	movs	r0, #1
 8024458:	f002 f806 	bl	8026468 <__kernel_sin>
 802445c:	ec51 0b10 	vmov	r0, r1, d0
 8024460:	e7e6      	b.n	8024430 <sin+0x30>
 8024462:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024466:	ed9d 0b00 	vldr	d0, [sp]
 802446a:	f001 fbe5 	bl	8025c38 <__kernel_cos>
 802446e:	e7f5      	b.n	802445c <sin+0x5c>
 8024470:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024474:	ed9d 0b00 	vldr	d0, [sp]
 8024478:	2001      	movs	r0, #1
 802447a:	f001 fff5 	bl	8026468 <__kernel_sin>
 802447e:	ec53 2b10 	vmov	r2, r3, d0
 8024482:	ee10 0a10 	vmov	r0, s0
 8024486:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802448a:	e7d1      	b.n	8024430 <sin+0x30>
 802448c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8024490:	ed9d 0b00 	vldr	d0, [sp]
 8024494:	f001 fbd0 	bl	8025c38 <__kernel_cos>
 8024498:	e7f1      	b.n	802447e <sin+0x7e>
 802449a:	bf00      	nop
 802449c:	f3af 8000 	nop.w
	...
 80244a8:	3fe921fb 	.word	0x3fe921fb
 80244ac:	7fefffff 	.word	0x7fefffff

080244b0 <asin>:
 80244b0:	b538      	push	{r3, r4, r5, lr}
 80244b2:	ed2d 8b02 	vpush	{d8}
 80244b6:	ec55 4b10 	vmov	r4, r5, d0
 80244ba:	f000 f8e9 	bl	8024690 <__ieee754_asin>
 80244be:	4622      	mov	r2, r4
 80244c0:	462b      	mov	r3, r5
 80244c2:	4620      	mov	r0, r4
 80244c4:	4629      	mov	r1, r5
 80244c6:	eeb0 8a40 	vmov.f32	s16, s0
 80244ca:	eef0 8a60 	vmov.f32	s17, s1
 80244ce:	f7dc fb2d 	bl	8000b2c <__aeabi_dcmpun>
 80244d2:	b9a8      	cbnz	r0, 8024500 <asin+0x50>
 80244d4:	ec45 4b10 	vmov	d0, r4, r5
 80244d8:	f7ff ff06 	bl	80242e8 <fabs>
 80244dc:	4b0c      	ldr	r3, [pc, #48]	; (8024510 <asin+0x60>)
 80244de:	ec51 0b10 	vmov	r0, r1, d0
 80244e2:	2200      	movs	r2, #0
 80244e4:	f7dc fb18 	bl	8000b18 <__aeabi_dcmpgt>
 80244e8:	b150      	cbz	r0, 8024500 <asin+0x50>
 80244ea:	f7fd fe6b 	bl	80221c4 <__errno>
 80244ee:	ecbd 8b02 	vpop	{d8}
 80244f2:	2321      	movs	r3, #33	; 0x21
 80244f4:	6003      	str	r3, [r0, #0]
 80244f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80244fa:	4806      	ldr	r0, [pc, #24]	; (8024514 <asin+0x64>)
 80244fc:	f7ff b968 	b.w	80237d0 <nan>
 8024500:	eeb0 0a48 	vmov.f32	s0, s16
 8024504:	eef0 0a68 	vmov.f32	s1, s17
 8024508:	ecbd 8b02 	vpop	{d8}
 802450c:	bd38      	pop	{r3, r4, r5, pc}
 802450e:	bf00      	nop
 8024510:	3ff00000 	.word	0x3ff00000
 8024514:	080274c8 	.word	0x080274c8

08024518 <atan2>:
 8024518:	f000 bace 	b.w	8024ab8 <__ieee754_atan2>

0802451c <pow>:
 802451c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802451e:	ed2d 8b02 	vpush	{d8}
 8024522:	eeb0 8a40 	vmov.f32	s16, s0
 8024526:	eef0 8a60 	vmov.f32	s17, s1
 802452a:	ec55 4b11 	vmov	r4, r5, d1
 802452e:	f000 fb8f 	bl	8024c50 <__ieee754_pow>
 8024532:	4622      	mov	r2, r4
 8024534:	462b      	mov	r3, r5
 8024536:	4620      	mov	r0, r4
 8024538:	4629      	mov	r1, r5
 802453a:	ec57 6b10 	vmov	r6, r7, d0
 802453e:	f7dc faf5 	bl	8000b2c <__aeabi_dcmpun>
 8024542:	2800      	cmp	r0, #0
 8024544:	d13b      	bne.n	80245be <pow+0xa2>
 8024546:	ec51 0b18 	vmov	r0, r1, d8
 802454a:	2200      	movs	r2, #0
 802454c:	2300      	movs	r3, #0
 802454e:	f7dc fabb 	bl	8000ac8 <__aeabi_dcmpeq>
 8024552:	b1b8      	cbz	r0, 8024584 <pow+0x68>
 8024554:	2200      	movs	r2, #0
 8024556:	2300      	movs	r3, #0
 8024558:	4620      	mov	r0, r4
 802455a:	4629      	mov	r1, r5
 802455c:	f7dc fab4 	bl	8000ac8 <__aeabi_dcmpeq>
 8024560:	2800      	cmp	r0, #0
 8024562:	d146      	bne.n	80245f2 <pow+0xd6>
 8024564:	ec45 4b10 	vmov	d0, r4, r5
 8024568:	f002 f86c 	bl	8026644 <finite>
 802456c:	b338      	cbz	r0, 80245be <pow+0xa2>
 802456e:	2200      	movs	r2, #0
 8024570:	2300      	movs	r3, #0
 8024572:	4620      	mov	r0, r4
 8024574:	4629      	mov	r1, r5
 8024576:	f7dc fab1 	bl	8000adc <__aeabi_dcmplt>
 802457a:	b300      	cbz	r0, 80245be <pow+0xa2>
 802457c:	f7fd fe22 	bl	80221c4 <__errno>
 8024580:	2322      	movs	r3, #34	; 0x22
 8024582:	e01b      	b.n	80245bc <pow+0xa0>
 8024584:	ec47 6b10 	vmov	d0, r6, r7
 8024588:	f002 f85c 	bl	8026644 <finite>
 802458c:	b9e0      	cbnz	r0, 80245c8 <pow+0xac>
 802458e:	eeb0 0a48 	vmov.f32	s0, s16
 8024592:	eef0 0a68 	vmov.f32	s1, s17
 8024596:	f002 f855 	bl	8026644 <finite>
 802459a:	b1a8      	cbz	r0, 80245c8 <pow+0xac>
 802459c:	ec45 4b10 	vmov	d0, r4, r5
 80245a0:	f002 f850 	bl	8026644 <finite>
 80245a4:	b180      	cbz	r0, 80245c8 <pow+0xac>
 80245a6:	4632      	mov	r2, r6
 80245a8:	463b      	mov	r3, r7
 80245aa:	4630      	mov	r0, r6
 80245ac:	4639      	mov	r1, r7
 80245ae:	f7dc fabd 	bl	8000b2c <__aeabi_dcmpun>
 80245b2:	2800      	cmp	r0, #0
 80245b4:	d0e2      	beq.n	802457c <pow+0x60>
 80245b6:	f7fd fe05 	bl	80221c4 <__errno>
 80245ba:	2321      	movs	r3, #33	; 0x21
 80245bc:	6003      	str	r3, [r0, #0]
 80245be:	ecbd 8b02 	vpop	{d8}
 80245c2:	ec47 6b10 	vmov	d0, r6, r7
 80245c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80245c8:	2200      	movs	r2, #0
 80245ca:	2300      	movs	r3, #0
 80245cc:	4630      	mov	r0, r6
 80245ce:	4639      	mov	r1, r7
 80245d0:	f7dc fa7a 	bl	8000ac8 <__aeabi_dcmpeq>
 80245d4:	2800      	cmp	r0, #0
 80245d6:	d0f2      	beq.n	80245be <pow+0xa2>
 80245d8:	eeb0 0a48 	vmov.f32	s0, s16
 80245dc:	eef0 0a68 	vmov.f32	s1, s17
 80245e0:	f002 f830 	bl	8026644 <finite>
 80245e4:	2800      	cmp	r0, #0
 80245e6:	d0ea      	beq.n	80245be <pow+0xa2>
 80245e8:	ec45 4b10 	vmov	d0, r4, r5
 80245ec:	f002 f82a 	bl	8026644 <finite>
 80245f0:	e7c3      	b.n	802457a <pow+0x5e>
 80245f2:	4f01      	ldr	r7, [pc, #4]	; (80245f8 <pow+0xdc>)
 80245f4:	2600      	movs	r6, #0
 80245f6:	e7e2      	b.n	80245be <pow+0xa2>
 80245f8:	3ff00000 	.word	0x3ff00000

080245fc <sqrt>:
 80245fc:	b538      	push	{r3, r4, r5, lr}
 80245fe:	ed2d 8b02 	vpush	{d8}
 8024602:	ec55 4b10 	vmov	r4, r5, d0
 8024606:	f001 fa5f 	bl	8025ac8 <__ieee754_sqrt>
 802460a:	4622      	mov	r2, r4
 802460c:	462b      	mov	r3, r5
 802460e:	4620      	mov	r0, r4
 8024610:	4629      	mov	r1, r5
 8024612:	eeb0 8a40 	vmov.f32	s16, s0
 8024616:	eef0 8a60 	vmov.f32	s17, s1
 802461a:	f7dc fa87 	bl	8000b2c <__aeabi_dcmpun>
 802461e:	b990      	cbnz	r0, 8024646 <sqrt+0x4a>
 8024620:	2200      	movs	r2, #0
 8024622:	2300      	movs	r3, #0
 8024624:	4620      	mov	r0, r4
 8024626:	4629      	mov	r1, r5
 8024628:	f7dc fa58 	bl	8000adc <__aeabi_dcmplt>
 802462c:	b158      	cbz	r0, 8024646 <sqrt+0x4a>
 802462e:	f7fd fdc9 	bl	80221c4 <__errno>
 8024632:	2321      	movs	r3, #33	; 0x21
 8024634:	6003      	str	r3, [r0, #0]
 8024636:	2200      	movs	r2, #0
 8024638:	2300      	movs	r3, #0
 802463a:	4610      	mov	r0, r2
 802463c:	4619      	mov	r1, r3
 802463e:	f7dc f905 	bl	800084c <__aeabi_ddiv>
 8024642:	ec41 0b18 	vmov	d8, r0, r1
 8024646:	eeb0 0a48 	vmov.f32	s0, s16
 802464a:	eef0 0a68 	vmov.f32	s1, s17
 802464e:	ecbd 8b02 	vpop	{d8}
 8024652:	bd38      	pop	{r3, r4, r5, pc}

08024654 <sqrtf>:
 8024654:	b508      	push	{r3, lr}
 8024656:	ed2d 8b02 	vpush	{d8}
 802465a:	eeb0 8a40 	vmov.f32	s16, s0
 802465e:	f001 fae5 	bl	8025c2c <__ieee754_sqrtf>
 8024662:	eeb4 8a48 	vcmp.f32	s16, s16
 8024666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802466a:	d60c      	bvs.n	8024686 <sqrtf+0x32>
 802466c:	eddf 8a07 	vldr	s17, [pc, #28]	; 802468c <sqrtf+0x38>
 8024670:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8024674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024678:	d505      	bpl.n	8024686 <sqrtf+0x32>
 802467a:	f7fd fda3 	bl	80221c4 <__errno>
 802467e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8024682:	2321      	movs	r3, #33	; 0x21
 8024684:	6003      	str	r3, [r0, #0]
 8024686:	ecbd 8b02 	vpop	{d8}
 802468a:	bd08      	pop	{r3, pc}
 802468c:	00000000 	.word	0x00000000

08024690 <__ieee754_asin>:
 8024690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024694:	ed2d 8b04 	vpush	{d8-d9}
 8024698:	ec55 4b10 	vmov	r4, r5, d0
 802469c:	4bcc      	ldr	r3, [pc, #816]	; (80249d0 <__ieee754_asin+0x340>)
 802469e:	b083      	sub	sp, #12
 80246a0:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80246a4:	4598      	cmp	r8, r3
 80246a6:	9501      	str	r5, [sp, #4]
 80246a8:	dd35      	ble.n	8024716 <__ieee754_asin+0x86>
 80246aa:	ee10 3a10 	vmov	r3, s0
 80246ae:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 80246b2:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 80246b6:	ea58 0303 	orrs.w	r3, r8, r3
 80246ba:	d117      	bne.n	80246ec <__ieee754_asin+0x5c>
 80246bc:	a3aa      	add	r3, pc, #680	; (adr r3, 8024968 <__ieee754_asin+0x2d8>)
 80246be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246c2:	ee10 0a10 	vmov	r0, s0
 80246c6:	4629      	mov	r1, r5
 80246c8:	f7db ff96 	bl	80005f8 <__aeabi_dmul>
 80246cc:	a3a8      	add	r3, pc, #672	; (adr r3, 8024970 <__ieee754_asin+0x2e0>)
 80246ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246d2:	4606      	mov	r6, r0
 80246d4:	460f      	mov	r7, r1
 80246d6:	4620      	mov	r0, r4
 80246d8:	4629      	mov	r1, r5
 80246da:	f7db ff8d 	bl	80005f8 <__aeabi_dmul>
 80246de:	4602      	mov	r2, r0
 80246e0:	460b      	mov	r3, r1
 80246e2:	4630      	mov	r0, r6
 80246e4:	4639      	mov	r1, r7
 80246e6:	f7db fdd1 	bl	800028c <__adddf3>
 80246ea:	e00b      	b.n	8024704 <__ieee754_asin+0x74>
 80246ec:	ee10 2a10 	vmov	r2, s0
 80246f0:	462b      	mov	r3, r5
 80246f2:	ee10 0a10 	vmov	r0, s0
 80246f6:	4629      	mov	r1, r5
 80246f8:	f7db fdc6 	bl	8000288 <__aeabi_dsub>
 80246fc:	4602      	mov	r2, r0
 80246fe:	460b      	mov	r3, r1
 8024700:	f7dc f8a4 	bl	800084c <__aeabi_ddiv>
 8024704:	4604      	mov	r4, r0
 8024706:	460d      	mov	r5, r1
 8024708:	ec45 4b10 	vmov	d0, r4, r5
 802470c:	b003      	add	sp, #12
 802470e:	ecbd 8b04 	vpop	{d8-d9}
 8024712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024716:	4baf      	ldr	r3, [pc, #700]	; (80249d4 <__ieee754_asin+0x344>)
 8024718:	4598      	cmp	r8, r3
 802471a:	dc11      	bgt.n	8024740 <__ieee754_asin+0xb0>
 802471c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8024720:	f280 80ae 	bge.w	8024880 <__ieee754_asin+0x1f0>
 8024724:	a394      	add	r3, pc, #592	; (adr r3, 8024978 <__ieee754_asin+0x2e8>)
 8024726:	e9d3 2300 	ldrd	r2, r3, [r3]
 802472a:	ee10 0a10 	vmov	r0, s0
 802472e:	4629      	mov	r1, r5
 8024730:	f7db fdac 	bl	800028c <__adddf3>
 8024734:	4ba8      	ldr	r3, [pc, #672]	; (80249d8 <__ieee754_asin+0x348>)
 8024736:	2200      	movs	r2, #0
 8024738:	f7dc f9ee 	bl	8000b18 <__aeabi_dcmpgt>
 802473c:	2800      	cmp	r0, #0
 802473e:	d1e3      	bne.n	8024708 <__ieee754_asin+0x78>
 8024740:	ec45 4b10 	vmov	d0, r4, r5
 8024744:	f7ff fdd0 	bl	80242e8 <fabs>
 8024748:	49a3      	ldr	r1, [pc, #652]	; (80249d8 <__ieee754_asin+0x348>)
 802474a:	ec53 2b10 	vmov	r2, r3, d0
 802474e:	2000      	movs	r0, #0
 8024750:	f7db fd9a 	bl	8000288 <__aeabi_dsub>
 8024754:	4ba1      	ldr	r3, [pc, #644]	; (80249dc <__ieee754_asin+0x34c>)
 8024756:	2200      	movs	r2, #0
 8024758:	f7db ff4e 	bl	80005f8 <__aeabi_dmul>
 802475c:	a388      	add	r3, pc, #544	; (adr r3, 8024980 <__ieee754_asin+0x2f0>)
 802475e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024762:	4604      	mov	r4, r0
 8024764:	460d      	mov	r5, r1
 8024766:	f7db ff47 	bl	80005f8 <__aeabi_dmul>
 802476a:	a387      	add	r3, pc, #540	; (adr r3, 8024988 <__ieee754_asin+0x2f8>)
 802476c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024770:	f7db fd8c 	bl	800028c <__adddf3>
 8024774:	4622      	mov	r2, r4
 8024776:	462b      	mov	r3, r5
 8024778:	f7db ff3e 	bl	80005f8 <__aeabi_dmul>
 802477c:	a384      	add	r3, pc, #528	; (adr r3, 8024990 <__ieee754_asin+0x300>)
 802477e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024782:	f7db fd81 	bl	8000288 <__aeabi_dsub>
 8024786:	4622      	mov	r2, r4
 8024788:	462b      	mov	r3, r5
 802478a:	f7db ff35 	bl	80005f8 <__aeabi_dmul>
 802478e:	a382      	add	r3, pc, #520	; (adr r3, 8024998 <__ieee754_asin+0x308>)
 8024790:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024794:	f7db fd7a 	bl	800028c <__adddf3>
 8024798:	4622      	mov	r2, r4
 802479a:	462b      	mov	r3, r5
 802479c:	f7db ff2c 	bl	80005f8 <__aeabi_dmul>
 80247a0:	a37f      	add	r3, pc, #508	; (adr r3, 80249a0 <__ieee754_asin+0x310>)
 80247a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247a6:	f7db fd6f 	bl	8000288 <__aeabi_dsub>
 80247aa:	4622      	mov	r2, r4
 80247ac:	462b      	mov	r3, r5
 80247ae:	f7db ff23 	bl	80005f8 <__aeabi_dmul>
 80247b2:	a37d      	add	r3, pc, #500	; (adr r3, 80249a8 <__ieee754_asin+0x318>)
 80247b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247b8:	f7db fd68 	bl	800028c <__adddf3>
 80247bc:	4622      	mov	r2, r4
 80247be:	462b      	mov	r3, r5
 80247c0:	f7db ff1a 	bl	80005f8 <__aeabi_dmul>
 80247c4:	a37a      	add	r3, pc, #488	; (adr r3, 80249b0 <__ieee754_asin+0x320>)
 80247c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247ca:	ec41 0b18 	vmov	d8, r0, r1
 80247ce:	4620      	mov	r0, r4
 80247d0:	4629      	mov	r1, r5
 80247d2:	f7db ff11 	bl	80005f8 <__aeabi_dmul>
 80247d6:	a378      	add	r3, pc, #480	; (adr r3, 80249b8 <__ieee754_asin+0x328>)
 80247d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247dc:	f7db fd54 	bl	8000288 <__aeabi_dsub>
 80247e0:	4622      	mov	r2, r4
 80247e2:	462b      	mov	r3, r5
 80247e4:	f7db ff08 	bl	80005f8 <__aeabi_dmul>
 80247e8:	a375      	add	r3, pc, #468	; (adr r3, 80249c0 <__ieee754_asin+0x330>)
 80247ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80247ee:	f7db fd4d 	bl	800028c <__adddf3>
 80247f2:	4622      	mov	r2, r4
 80247f4:	462b      	mov	r3, r5
 80247f6:	f7db feff 	bl	80005f8 <__aeabi_dmul>
 80247fa:	a373      	add	r3, pc, #460	; (adr r3, 80249c8 <__ieee754_asin+0x338>)
 80247fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024800:	f7db fd42 	bl	8000288 <__aeabi_dsub>
 8024804:	4622      	mov	r2, r4
 8024806:	462b      	mov	r3, r5
 8024808:	f7db fef6 	bl	80005f8 <__aeabi_dmul>
 802480c:	4b72      	ldr	r3, [pc, #456]	; (80249d8 <__ieee754_asin+0x348>)
 802480e:	2200      	movs	r2, #0
 8024810:	f7db fd3c 	bl	800028c <__adddf3>
 8024814:	ec45 4b10 	vmov	d0, r4, r5
 8024818:	4606      	mov	r6, r0
 802481a:	460f      	mov	r7, r1
 802481c:	f001 f954 	bl	8025ac8 <__ieee754_sqrt>
 8024820:	4b6f      	ldr	r3, [pc, #444]	; (80249e0 <__ieee754_asin+0x350>)
 8024822:	4598      	cmp	r8, r3
 8024824:	ec5b ab10 	vmov	sl, fp, d0
 8024828:	f340 80dc 	ble.w	80249e4 <__ieee754_asin+0x354>
 802482c:	4632      	mov	r2, r6
 802482e:	463b      	mov	r3, r7
 8024830:	ec51 0b18 	vmov	r0, r1, d8
 8024834:	f7dc f80a 	bl	800084c <__aeabi_ddiv>
 8024838:	4652      	mov	r2, sl
 802483a:	465b      	mov	r3, fp
 802483c:	f7db fedc 	bl	80005f8 <__aeabi_dmul>
 8024840:	4652      	mov	r2, sl
 8024842:	465b      	mov	r3, fp
 8024844:	f7db fd22 	bl	800028c <__adddf3>
 8024848:	4602      	mov	r2, r0
 802484a:	460b      	mov	r3, r1
 802484c:	f7db fd1e 	bl	800028c <__adddf3>
 8024850:	a347      	add	r3, pc, #284	; (adr r3, 8024970 <__ieee754_asin+0x2e0>)
 8024852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024856:	f7db fd17 	bl	8000288 <__aeabi_dsub>
 802485a:	4602      	mov	r2, r0
 802485c:	460b      	mov	r3, r1
 802485e:	a142      	add	r1, pc, #264	; (adr r1, 8024968 <__ieee754_asin+0x2d8>)
 8024860:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024864:	f7db fd10 	bl	8000288 <__aeabi_dsub>
 8024868:	9b01      	ldr	r3, [sp, #4]
 802486a:	2b00      	cmp	r3, #0
 802486c:	bfdc      	itt	le
 802486e:	4602      	movle	r2, r0
 8024870:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 8024874:	4604      	mov	r4, r0
 8024876:	460d      	mov	r5, r1
 8024878:	bfdc      	itt	le
 802487a:	4614      	movle	r4, r2
 802487c:	461d      	movle	r5, r3
 802487e:	e743      	b.n	8024708 <__ieee754_asin+0x78>
 8024880:	ee10 2a10 	vmov	r2, s0
 8024884:	ee10 0a10 	vmov	r0, s0
 8024888:	462b      	mov	r3, r5
 802488a:	4629      	mov	r1, r5
 802488c:	f7db feb4 	bl	80005f8 <__aeabi_dmul>
 8024890:	a33b      	add	r3, pc, #236	; (adr r3, 8024980 <__ieee754_asin+0x2f0>)
 8024892:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024896:	4606      	mov	r6, r0
 8024898:	460f      	mov	r7, r1
 802489a:	f7db fead 	bl	80005f8 <__aeabi_dmul>
 802489e:	a33a      	add	r3, pc, #232	; (adr r3, 8024988 <__ieee754_asin+0x2f8>)
 80248a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248a4:	f7db fcf2 	bl	800028c <__adddf3>
 80248a8:	4632      	mov	r2, r6
 80248aa:	463b      	mov	r3, r7
 80248ac:	f7db fea4 	bl	80005f8 <__aeabi_dmul>
 80248b0:	a337      	add	r3, pc, #220	; (adr r3, 8024990 <__ieee754_asin+0x300>)
 80248b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248b6:	f7db fce7 	bl	8000288 <__aeabi_dsub>
 80248ba:	4632      	mov	r2, r6
 80248bc:	463b      	mov	r3, r7
 80248be:	f7db fe9b 	bl	80005f8 <__aeabi_dmul>
 80248c2:	a335      	add	r3, pc, #212	; (adr r3, 8024998 <__ieee754_asin+0x308>)
 80248c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248c8:	f7db fce0 	bl	800028c <__adddf3>
 80248cc:	4632      	mov	r2, r6
 80248ce:	463b      	mov	r3, r7
 80248d0:	f7db fe92 	bl	80005f8 <__aeabi_dmul>
 80248d4:	a332      	add	r3, pc, #200	; (adr r3, 80249a0 <__ieee754_asin+0x310>)
 80248d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248da:	f7db fcd5 	bl	8000288 <__aeabi_dsub>
 80248de:	4632      	mov	r2, r6
 80248e0:	463b      	mov	r3, r7
 80248e2:	f7db fe89 	bl	80005f8 <__aeabi_dmul>
 80248e6:	a330      	add	r3, pc, #192	; (adr r3, 80249a8 <__ieee754_asin+0x318>)
 80248e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248ec:	f7db fcce 	bl	800028c <__adddf3>
 80248f0:	4632      	mov	r2, r6
 80248f2:	463b      	mov	r3, r7
 80248f4:	f7db fe80 	bl	80005f8 <__aeabi_dmul>
 80248f8:	a32d      	add	r3, pc, #180	; (adr r3, 80249b0 <__ieee754_asin+0x320>)
 80248fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80248fe:	4680      	mov	r8, r0
 8024900:	4689      	mov	r9, r1
 8024902:	4630      	mov	r0, r6
 8024904:	4639      	mov	r1, r7
 8024906:	f7db fe77 	bl	80005f8 <__aeabi_dmul>
 802490a:	a32b      	add	r3, pc, #172	; (adr r3, 80249b8 <__ieee754_asin+0x328>)
 802490c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024910:	f7db fcba 	bl	8000288 <__aeabi_dsub>
 8024914:	4632      	mov	r2, r6
 8024916:	463b      	mov	r3, r7
 8024918:	f7db fe6e 	bl	80005f8 <__aeabi_dmul>
 802491c:	a328      	add	r3, pc, #160	; (adr r3, 80249c0 <__ieee754_asin+0x330>)
 802491e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024922:	f7db fcb3 	bl	800028c <__adddf3>
 8024926:	4632      	mov	r2, r6
 8024928:	463b      	mov	r3, r7
 802492a:	f7db fe65 	bl	80005f8 <__aeabi_dmul>
 802492e:	a326      	add	r3, pc, #152	; (adr r3, 80249c8 <__ieee754_asin+0x338>)
 8024930:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024934:	f7db fca8 	bl	8000288 <__aeabi_dsub>
 8024938:	4632      	mov	r2, r6
 802493a:	463b      	mov	r3, r7
 802493c:	f7db fe5c 	bl	80005f8 <__aeabi_dmul>
 8024940:	4b25      	ldr	r3, [pc, #148]	; (80249d8 <__ieee754_asin+0x348>)
 8024942:	2200      	movs	r2, #0
 8024944:	f7db fca2 	bl	800028c <__adddf3>
 8024948:	4602      	mov	r2, r0
 802494a:	460b      	mov	r3, r1
 802494c:	4640      	mov	r0, r8
 802494e:	4649      	mov	r1, r9
 8024950:	f7db ff7c 	bl	800084c <__aeabi_ddiv>
 8024954:	4622      	mov	r2, r4
 8024956:	462b      	mov	r3, r5
 8024958:	f7db fe4e 	bl	80005f8 <__aeabi_dmul>
 802495c:	4602      	mov	r2, r0
 802495e:	460b      	mov	r3, r1
 8024960:	4620      	mov	r0, r4
 8024962:	4629      	mov	r1, r5
 8024964:	e6bf      	b.n	80246e6 <__ieee754_asin+0x56>
 8024966:	bf00      	nop
 8024968:	54442d18 	.word	0x54442d18
 802496c:	3ff921fb 	.word	0x3ff921fb
 8024970:	33145c07 	.word	0x33145c07
 8024974:	3c91a626 	.word	0x3c91a626
 8024978:	8800759c 	.word	0x8800759c
 802497c:	7e37e43c 	.word	0x7e37e43c
 8024980:	0dfdf709 	.word	0x0dfdf709
 8024984:	3f023de1 	.word	0x3f023de1
 8024988:	7501b288 	.word	0x7501b288
 802498c:	3f49efe0 	.word	0x3f49efe0
 8024990:	b5688f3b 	.word	0xb5688f3b
 8024994:	3fa48228 	.word	0x3fa48228
 8024998:	0e884455 	.word	0x0e884455
 802499c:	3fc9c155 	.word	0x3fc9c155
 80249a0:	03eb6f7d 	.word	0x03eb6f7d
 80249a4:	3fd4d612 	.word	0x3fd4d612
 80249a8:	55555555 	.word	0x55555555
 80249ac:	3fc55555 	.word	0x3fc55555
 80249b0:	b12e9282 	.word	0xb12e9282
 80249b4:	3fb3b8c5 	.word	0x3fb3b8c5
 80249b8:	1b8d0159 	.word	0x1b8d0159
 80249bc:	3fe6066c 	.word	0x3fe6066c
 80249c0:	9c598ac8 	.word	0x9c598ac8
 80249c4:	40002ae5 	.word	0x40002ae5
 80249c8:	1c8a2d4b 	.word	0x1c8a2d4b
 80249cc:	40033a27 	.word	0x40033a27
 80249d0:	3fefffff 	.word	0x3fefffff
 80249d4:	3fdfffff 	.word	0x3fdfffff
 80249d8:	3ff00000 	.word	0x3ff00000
 80249dc:	3fe00000 	.word	0x3fe00000
 80249e0:	3fef3332 	.word	0x3fef3332
 80249e4:	ee10 2a10 	vmov	r2, s0
 80249e8:	ee10 0a10 	vmov	r0, s0
 80249ec:	465b      	mov	r3, fp
 80249ee:	4659      	mov	r1, fp
 80249f0:	f7db fc4c 	bl	800028c <__adddf3>
 80249f4:	4632      	mov	r2, r6
 80249f6:	463b      	mov	r3, r7
 80249f8:	ec41 0b19 	vmov	d9, r0, r1
 80249fc:	ec51 0b18 	vmov	r0, r1, d8
 8024a00:	f7db ff24 	bl	800084c <__aeabi_ddiv>
 8024a04:	4602      	mov	r2, r0
 8024a06:	460b      	mov	r3, r1
 8024a08:	ec51 0b19 	vmov	r0, r1, d9
 8024a0c:	f7db fdf4 	bl	80005f8 <__aeabi_dmul>
 8024a10:	f04f 0800 	mov.w	r8, #0
 8024a14:	4606      	mov	r6, r0
 8024a16:	460f      	mov	r7, r1
 8024a18:	4642      	mov	r2, r8
 8024a1a:	465b      	mov	r3, fp
 8024a1c:	4640      	mov	r0, r8
 8024a1e:	4659      	mov	r1, fp
 8024a20:	f7db fdea 	bl	80005f8 <__aeabi_dmul>
 8024a24:	4602      	mov	r2, r0
 8024a26:	460b      	mov	r3, r1
 8024a28:	4620      	mov	r0, r4
 8024a2a:	4629      	mov	r1, r5
 8024a2c:	f7db fc2c 	bl	8000288 <__aeabi_dsub>
 8024a30:	4642      	mov	r2, r8
 8024a32:	4604      	mov	r4, r0
 8024a34:	460d      	mov	r5, r1
 8024a36:	465b      	mov	r3, fp
 8024a38:	4650      	mov	r0, sl
 8024a3a:	4659      	mov	r1, fp
 8024a3c:	f7db fc26 	bl	800028c <__adddf3>
 8024a40:	4602      	mov	r2, r0
 8024a42:	460b      	mov	r3, r1
 8024a44:	4620      	mov	r0, r4
 8024a46:	4629      	mov	r1, r5
 8024a48:	f7db ff00 	bl	800084c <__aeabi_ddiv>
 8024a4c:	4602      	mov	r2, r0
 8024a4e:	460b      	mov	r3, r1
 8024a50:	f7db fc1c 	bl	800028c <__adddf3>
 8024a54:	4602      	mov	r2, r0
 8024a56:	460b      	mov	r3, r1
 8024a58:	a113      	add	r1, pc, #76	; (adr r1, 8024aa8 <__ieee754_asin+0x418>)
 8024a5a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a5e:	f7db fc13 	bl	8000288 <__aeabi_dsub>
 8024a62:	4602      	mov	r2, r0
 8024a64:	460b      	mov	r3, r1
 8024a66:	4630      	mov	r0, r6
 8024a68:	4639      	mov	r1, r7
 8024a6a:	f7db fc0d 	bl	8000288 <__aeabi_dsub>
 8024a6e:	4642      	mov	r2, r8
 8024a70:	4604      	mov	r4, r0
 8024a72:	460d      	mov	r5, r1
 8024a74:	465b      	mov	r3, fp
 8024a76:	4640      	mov	r0, r8
 8024a78:	4659      	mov	r1, fp
 8024a7a:	f7db fc07 	bl	800028c <__adddf3>
 8024a7e:	4602      	mov	r2, r0
 8024a80:	460b      	mov	r3, r1
 8024a82:	a10b      	add	r1, pc, #44	; (adr r1, 8024ab0 <__ieee754_asin+0x420>)
 8024a84:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a88:	f7db fbfe 	bl	8000288 <__aeabi_dsub>
 8024a8c:	4602      	mov	r2, r0
 8024a8e:	460b      	mov	r3, r1
 8024a90:	4620      	mov	r0, r4
 8024a92:	4629      	mov	r1, r5
 8024a94:	f7db fbf8 	bl	8000288 <__aeabi_dsub>
 8024a98:	4602      	mov	r2, r0
 8024a9a:	460b      	mov	r3, r1
 8024a9c:	a104      	add	r1, pc, #16	; (adr r1, 8024ab0 <__ieee754_asin+0x420>)
 8024a9e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024aa2:	e6df      	b.n	8024864 <__ieee754_asin+0x1d4>
 8024aa4:	f3af 8000 	nop.w
 8024aa8:	33145c07 	.word	0x33145c07
 8024aac:	3c91a626 	.word	0x3c91a626
 8024ab0:	54442d18 	.word	0x54442d18
 8024ab4:	3fe921fb 	.word	0x3fe921fb

08024ab8 <__ieee754_atan2>:
 8024ab8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024abc:	ec57 6b11 	vmov	r6, r7, d1
 8024ac0:	4273      	negs	r3, r6
 8024ac2:	f8df e184 	ldr.w	lr, [pc, #388]	; 8024c48 <__ieee754_atan2+0x190>
 8024ac6:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 8024aca:	4333      	orrs	r3, r6
 8024acc:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8024ad0:	4573      	cmp	r3, lr
 8024ad2:	ec51 0b10 	vmov	r0, r1, d0
 8024ad6:	ee11 8a10 	vmov	r8, s2
 8024ada:	d80a      	bhi.n	8024af2 <__ieee754_atan2+0x3a>
 8024adc:	4244      	negs	r4, r0
 8024ade:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024ae2:	4304      	orrs	r4, r0
 8024ae4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 8024ae8:	4574      	cmp	r4, lr
 8024aea:	ee10 9a10 	vmov	r9, s0
 8024aee:	468c      	mov	ip, r1
 8024af0:	d907      	bls.n	8024b02 <__ieee754_atan2+0x4a>
 8024af2:	4632      	mov	r2, r6
 8024af4:	463b      	mov	r3, r7
 8024af6:	f7db fbc9 	bl	800028c <__adddf3>
 8024afa:	ec41 0b10 	vmov	d0, r0, r1
 8024afe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024b02:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 8024b06:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8024b0a:	4334      	orrs	r4, r6
 8024b0c:	d103      	bne.n	8024b16 <__ieee754_atan2+0x5e>
 8024b0e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024b12:	f7ff b9f5 	b.w	8023f00 <atan>
 8024b16:	17bc      	asrs	r4, r7, #30
 8024b18:	f004 0402 	and.w	r4, r4, #2
 8024b1c:	ea53 0909 	orrs.w	r9, r3, r9
 8024b20:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 8024b24:	d107      	bne.n	8024b36 <__ieee754_atan2+0x7e>
 8024b26:	2c02      	cmp	r4, #2
 8024b28:	d060      	beq.n	8024bec <__ieee754_atan2+0x134>
 8024b2a:	2c03      	cmp	r4, #3
 8024b2c:	d1e5      	bne.n	8024afa <__ieee754_atan2+0x42>
 8024b2e:	a142      	add	r1, pc, #264	; (adr r1, 8024c38 <__ieee754_atan2+0x180>)
 8024b30:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024b34:	e7e1      	b.n	8024afa <__ieee754_atan2+0x42>
 8024b36:	ea52 0808 	orrs.w	r8, r2, r8
 8024b3a:	d106      	bne.n	8024b4a <__ieee754_atan2+0x92>
 8024b3c:	f1bc 0f00 	cmp.w	ip, #0
 8024b40:	da5f      	bge.n	8024c02 <__ieee754_atan2+0x14a>
 8024b42:	a13f      	add	r1, pc, #252	; (adr r1, 8024c40 <__ieee754_atan2+0x188>)
 8024b44:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024b48:	e7d7      	b.n	8024afa <__ieee754_atan2+0x42>
 8024b4a:	4572      	cmp	r2, lr
 8024b4c:	d10f      	bne.n	8024b6e <__ieee754_atan2+0xb6>
 8024b4e:	4293      	cmp	r3, r2
 8024b50:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8024b54:	d107      	bne.n	8024b66 <__ieee754_atan2+0xae>
 8024b56:	2c02      	cmp	r4, #2
 8024b58:	d84c      	bhi.n	8024bf4 <__ieee754_atan2+0x13c>
 8024b5a:	4b35      	ldr	r3, [pc, #212]	; (8024c30 <__ieee754_atan2+0x178>)
 8024b5c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8024b60:	e9d4 0100 	ldrd	r0, r1, [r4]
 8024b64:	e7c9      	b.n	8024afa <__ieee754_atan2+0x42>
 8024b66:	2c02      	cmp	r4, #2
 8024b68:	d848      	bhi.n	8024bfc <__ieee754_atan2+0x144>
 8024b6a:	4b32      	ldr	r3, [pc, #200]	; (8024c34 <__ieee754_atan2+0x17c>)
 8024b6c:	e7f6      	b.n	8024b5c <__ieee754_atan2+0xa4>
 8024b6e:	4573      	cmp	r3, lr
 8024b70:	d0e4      	beq.n	8024b3c <__ieee754_atan2+0x84>
 8024b72:	1a9b      	subs	r3, r3, r2
 8024b74:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8024b78:	ea4f 5223 	mov.w	r2, r3, asr #20
 8024b7c:	da1e      	bge.n	8024bbc <__ieee754_atan2+0x104>
 8024b7e:	2f00      	cmp	r7, #0
 8024b80:	da01      	bge.n	8024b86 <__ieee754_atan2+0xce>
 8024b82:	323c      	adds	r2, #60	; 0x3c
 8024b84:	db1e      	blt.n	8024bc4 <__ieee754_atan2+0x10c>
 8024b86:	4632      	mov	r2, r6
 8024b88:	463b      	mov	r3, r7
 8024b8a:	f7db fe5f 	bl	800084c <__aeabi_ddiv>
 8024b8e:	ec41 0b10 	vmov	d0, r0, r1
 8024b92:	f7ff fba9 	bl	80242e8 <fabs>
 8024b96:	f7ff f9b3 	bl	8023f00 <atan>
 8024b9a:	ec51 0b10 	vmov	r0, r1, d0
 8024b9e:	2c01      	cmp	r4, #1
 8024ba0:	d013      	beq.n	8024bca <__ieee754_atan2+0x112>
 8024ba2:	2c02      	cmp	r4, #2
 8024ba4:	d015      	beq.n	8024bd2 <__ieee754_atan2+0x11a>
 8024ba6:	2c00      	cmp	r4, #0
 8024ba8:	d0a7      	beq.n	8024afa <__ieee754_atan2+0x42>
 8024baa:	a319      	add	r3, pc, #100	; (adr r3, 8024c10 <__ieee754_atan2+0x158>)
 8024bac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bb0:	f7db fb6a 	bl	8000288 <__aeabi_dsub>
 8024bb4:	a318      	add	r3, pc, #96	; (adr r3, 8024c18 <__ieee754_atan2+0x160>)
 8024bb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bba:	e014      	b.n	8024be6 <__ieee754_atan2+0x12e>
 8024bbc:	a118      	add	r1, pc, #96	; (adr r1, 8024c20 <__ieee754_atan2+0x168>)
 8024bbe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024bc2:	e7ec      	b.n	8024b9e <__ieee754_atan2+0xe6>
 8024bc4:	2000      	movs	r0, #0
 8024bc6:	2100      	movs	r1, #0
 8024bc8:	e7e9      	b.n	8024b9e <__ieee754_atan2+0xe6>
 8024bca:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024bce:	4619      	mov	r1, r3
 8024bd0:	e793      	b.n	8024afa <__ieee754_atan2+0x42>
 8024bd2:	a30f      	add	r3, pc, #60	; (adr r3, 8024c10 <__ieee754_atan2+0x158>)
 8024bd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bd8:	f7db fb56 	bl	8000288 <__aeabi_dsub>
 8024bdc:	4602      	mov	r2, r0
 8024bde:	460b      	mov	r3, r1
 8024be0:	a10d      	add	r1, pc, #52	; (adr r1, 8024c18 <__ieee754_atan2+0x160>)
 8024be2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024be6:	f7db fb4f 	bl	8000288 <__aeabi_dsub>
 8024bea:	e786      	b.n	8024afa <__ieee754_atan2+0x42>
 8024bec:	a10a      	add	r1, pc, #40	; (adr r1, 8024c18 <__ieee754_atan2+0x160>)
 8024bee:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024bf2:	e782      	b.n	8024afa <__ieee754_atan2+0x42>
 8024bf4:	a10c      	add	r1, pc, #48	; (adr r1, 8024c28 <__ieee754_atan2+0x170>)
 8024bf6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024bfa:	e77e      	b.n	8024afa <__ieee754_atan2+0x42>
 8024bfc:	2000      	movs	r0, #0
 8024bfe:	2100      	movs	r1, #0
 8024c00:	e77b      	b.n	8024afa <__ieee754_atan2+0x42>
 8024c02:	a107      	add	r1, pc, #28	; (adr r1, 8024c20 <__ieee754_atan2+0x168>)
 8024c04:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024c08:	e777      	b.n	8024afa <__ieee754_atan2+0x42>
 8024c0a:	bf00      	nop
 8024c0c:	f3af 8000 	nop.w
 8024c10:	33145c07 	.word	0x33145c07
 8024c14:	3ca1a626 	.word	0x3ca1a626
 8024c18:	54442d18 	.word	0x54442d18
 8024c1c:	400921fb 	.word	0x400921fb
 8024c20:	54442d18 	.word	0x54442d18
 8024c24:	3ff921fb 	.word	0x3ff921fb
 8024c28:	54442d18 	.word	0x54442d18
 8024c2c:	3fe921fb 	.word	0x3fe921fb
 8024c30:	08027510 	.word	0x08027510
 8024c34:	08027528 	.word	0x08027528
 8024c38:	54442d18 	.word	0x54442d18
 8024c3c:	c00921fb 	.word	0xc00921fb
 8024c40:	54442d18 	.word	0x54442d18
 8024c44:	bff921fb 	.word	0xbff921fb
 8024c48:	7ff00000 	.word	0x7ff00000
 8024c4c:	00000000 	.word	0x00000000

08024c50 <__ieee754_pow>:
 8024c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c54:	ed2d 8b06 	vpush	{d8-d10}
 8024c58:	b089      	sub	sp, #36	; 0x24
 8024c5a:	ed8d 1b00 	vstr	d1, [sp]
 8024c5e:	e9dd 2900 	ldrd	r2, r9, [sp]
 8024c62:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8024c66:	ea58 0102 	orrs.w	r1, r8, r2
 8024c6a:	ec57 6b10 	vmov	r6, r7, d0
 8024c6e:	d115      	bne.n	8024c9c <__ieee754_pow+0x4c>
 8024c70:	19b3      	adds	r3, r6, r6
 8024c72:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8024c76:	4152      	adcs	r2, r2
 8024c78:	4299      	cmp	r1, r3
 8024c7a:	4b89      	ldr	r3, [pc, #548]	; (8024ea0 <__ieee754_pow+0x250>)
 8024c7c:	4193      	sbcs	r3, r2
 8024c7e:	f080 84d2 	bcs.w	8025626 <__ieee754_pow+0x9d6>
 8024c82:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024c86:	4630      	mov	r0, r6
 8024c88:	4639      	mov	r1, r7
 8024c8a:	f7db faff 	bl	800028c <__adddf3>
 8024c8e:	ec41 0b10 	vmov	d0, r0, r1
 8024c92:	b009      	add	sp, #36	; 0x24
 8024c94:	ecbd 8b06 	vpop	{d8-d10}
 8024c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024c9c:	4b81      	ldr	r3, [pc, #516]	; (8024ea4 <__ieee754_pow+0x254>)
 8024c9e:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8024ca2:	429c      	cmp	r4, r3
 8024ca4:	ee10 aa10 	vmov	sl, s0
 8024ca8:	463d      	mov	r5, r7
 8024caa:	dc06      	bgt.n	8024cba <__ieee754_pow+0x6a>
 8024cac:	d101      	bne.n	8024cb2 <__ieee754_pow+0x62>
 8024cae:	2e00      	cmp	r6, #0
 8024cb0:	d1e7      	bne.n	8024c82 <__ieee754_pow+0x32>
 8024cb2:	4598      	cmp	r8, r3
 8024cb4:	dc01      	bgt.n	8024cba <__ieee754_pow+0x6a>
 8024cb6:	d10f      	bne.n	8024cd8 <__ieee754_pow+0x88>
 8024cb8:	b172      	cbz	r2, 8024cd8 <__ieee754_pow+0x88>
 8024cba:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8024cbe:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8024cc2:	ea55 050a 	orrs.w	r5, r5, sl
 8024cc6:	d1dc      	bne.n	8024c82 <__ieee754_pow+0x32>
 8024cc8:	e9dd 3200 	ldrd	r3, r2, [sp]
 8024ccc:	18db      	adds	r3, r3, r3
 8024cce:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8024cd2:	4152      	adcs	r2, r2
 8024cd4:	429d      	cmp	r5, r3
 8024cd6:	e7d0      	b.n	8024c7a <__ieee754_pow+0x2a>
 8024cd8:	2d00      	cmp	r5, #0
 8024cda:	da3b      	bge.n	8024d54 <__ieee754_pow+0x104>
 8024cdc:	4b72      	ldr	r3, [pc, #456]	; (8024ea8 <__ieee754_pow+0x258>)
 8024cde:	4598      	cmp	r8, r3
 8024ce0:	dc51      	bgt.n	8024d86 <__ieee754_pow+0x136>
 8024ce2:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8024ce6:	4598      	cmp	r8, r3
 8024ce8:	f340 84ac 	ble.w	8025644 <__ieee754_pow+0x9f4>
 8024cec:	ea4f 5328 	mov.w	r3, r8, asr #20
 8024cf0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8024cf4:	2b14      	cmp	r3, #20
 8024cf6:	dd0f      	ble.n	8024d18 <__ieee754_pow+0xc8>
 8024cf8:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8024cfc:	fa22 f103 	lsr.w	r1, r2, r3
 8024d00:	fa01 f303 	lsl.w	r3, r1, r3
 8024d04:	4293      	cmp	r3, r2
 8024d06:	f040 849d 	bne.w	8025644 <__ieee754_pow+0x9f4>
 8024d0a:	f001 0101 	and.w	r1, r1, #1
 8024d0e:	f1c1 0302 	rsb	r3, r1, #2
 8024d12:	9304      	str	r3, [sp, #16]
 8024d14:	b182      	cbz	r2, 8024d38 <__ieee754_pow+0xe8>
 8024d16:	e05f      	b.n	8024dd8 <__ieee754_pow+0x188>
 8024d18:	2a00      	cmp	r2, #0
 8024d1a:	d15b      	bne.n	8024dd4 <__ieee754_pow+0x184>
 8024d1c:	f1c3 0314 	rsb	r3, r3, #20
 8024d20:	fa48 f103 	asr.w	r1, r8, r3
 8024d24:	fa01 f303 	lsl.w	r3, r1, r3
 8024d28:	4543      	cmp	r3, r8
 8024d2a:	f040 8488 	bne.w	802563e <__ieee754_pow+0x9ee>
 8024d2e:	f001 0101 	and.w	r1, r1, #1
 8024d32:	f1c1 0302 	rsb	r3, r1, #2
 8024d36:	9304      	str	r3, [sp, #16]
 8024d38:	4b5c      	ldr	r3, [pc, #368]	; (8024eac <__ieee754_pow+0x25c>)
 8024d3a:	4598      	cmp	r8, r3
 8024d3c:	d132      	bne.n	8024da4 <__ieee754_pow+0x154>
 8024d3e:	f1b9 0f00 	cmp.w	r9, #0
 8024d42:	f280 8478 	bge.w	8025636 <__ieee754_pow+0x9e6>
 8024d46:	4959      	ldr	r1, [pc, #356]	; (8024eac <__ieee754_pow+0x25c>)
 8024d48:	4632      	mov	r2, r6
 8024d4a:	463b      	mov	r3, r7
 8024d4c:	2000      	movs	r0, #0
 8024d4e:	f7db fd7d 	bl	800084c <__aeabi_ddiv>
 8024d52:	e79c      	b.n	8024c8e <__ieee754_pow+0x3e>
 8024d54:	2300      	movs	r3, #0
 8024d56:	9304      	str	r3, [sp, #16]
 8024d58:	2a00      	cmp	r2, #0
 8024d5a:	d13d      	bne.n	8024dd8 <__ieee754_pow+0x188>
 8024d5c:	4b51      	ldr	r3, [pc, #324]	; (8024ea4 <__ieee754_pow+0x254>)
 8024d5e:	4598      	cmp	r8, r3
 8024d60:	d1ea      	bne.n	8024d38 <__ieee754_pow+0xe8>
 8024d62:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8024d66:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8024d6a:	ea53 030a 	orrs.w	r3, r3, sl
 8024d6e:	f000 845a 	beq.w	8025626 <__ieee754_pow+0x9d6>
 8024d72:	4b4f      	ldr	r3, [pc, #316]	; (8024eb0 <__ieee754_pow+0x260>)
 8024d74:	429c      	cmp	r4, r3
 8024d76:	dd08      	ble.n	8024d8a <__ieee754_pow+0x13a>
 8024d78:	f1b9 0f00 	cmp.w	r9, #0
 8024d7c:	f2c0 8457 	blt.w	802562e <__ieee754_pow+0x9de>
 8024d80:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024d84:	e783      	b.n	8024c8e <__ieee754_pow+0x3e>
 8024d86:	2302      	movs	r3, #2
 8024d88:	e7e5      	b.n	8024d56 <__ieee754_pow+0x106>
 8024d8a:	f1b9 0f00 	cmp.w	r9, #0
 8024d8e:	f04f 0000 	mov.w	r0, #0
 8024d92:	f04f 0100 	mov.w	r1, #0
 8024d96:	f6bf af7a 	bge.w	8024c8e <__ieee754_pow+0x3e>
 8024d9a:	e9dd 0300 	ldrd	r0, r3, [sp]
 8024d9e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8024da2:	e774      	b.n	8024c8e <__ieee754_pow+0x3e>
 8024da4:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8024da8:	d106      	bne.n	8024db8 <__ieee754_pow+0x168>
 8024daa:	4632      	mov	r2, r6
 8024dac:	463b      	mov	r3, r7
 8024dae:	4630      	mov	r0, r6
 8024db0:	4639      	mov	r1, r7
 8024db2:	f7db fc21 	bl	80005f8 <__aeabi_dmul>
 8024db6:	e76a      	b.n	8024c8e <__ieee754_pow+0x3e>
 8024db8:	4b3e      	ldr	r3, [pc, #248]	; (8024eb4 <__ieee754_pow+0x264>)
 8024dba:	4599      	cmp	r9, r3
 8024dbc:	d10c      	bne.n	8024dd8 <__ieee754_pow+0x188>
 8024dbe:	2d00      	cmp	r5, #0
 8024dc0:	db0a      	blt.n	8024dd8 <__ieee754_pow+0x188>
 8024dc2:	ec47 6b10 	vmov	d0, r6, r7
 8024dc6:	b009      	add	sp, #36	; 0x24
 8024dc8:	ecbd 8b06 	vpop	{d8-d10}
 8024dcc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024dd0:	f000 be7a 	b.w	8025ac8 <__ieee754_sqrt>
 8024dd4:	2300      	movs	r3, #0
 8024dd6:	9304      	str	r3, [sp, #16]
 8024dd8:	ec47 6b10 	vmov	d0, r6, r7
 8024ddc:	f7ff fa84 	bl	80242e8 <fabs>
 8024de0:	ec51 0b10 	vmov	r0, r1, d0
 8024de4:	f1ba 0f00 	cmp.w	sl, #0
 8024de8:	d129      	bne.n	8024e3e <__ieee754_pow+0x1ee>
 8024dea:	b124      	cbz	r4, 8024df6 <__ieee754_pow+0x1a6>
 8024dec:	4b2f      	ldr	r3, [pc, #188]	; (8024eac <__ieee754_pow+0x25c>)
 8024dee:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8024df2:	429a      	cmp	r2, r3
 8024df4:	d123      	bne.n	8024e3e <__ieee754_pow+0x1ee>
 8024df6:	f1b9 0f00 	cmp.w	r9, #0
 8024dfa:	da05      	bge.n	8024e08 <__ieee754_pow+0x1b8>
 8024dfc:	4602      	mov	r2, r0
 8024dfe:	460b      	mov	r3, r1
 8024e00:	2000      	movs	r0, #0
 8024e02:	492a      	ldr	r1, [pc, #168]	; (8024eac <__ieee754_pow+0x25c>)
 8024e04:	f7db fd22 	bl	800084c <__aeabi_ddiv>
 8024e08:	2d00      	cmp	r5, #0
 8024e0a:	f6bf af40 	bge.w	8024c8e <__ieee754_pow+0x3e>
 8024e0e:	9b04      	ldr	r3, [sp, #16]
 8024e10:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8024e14:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8024e18:	4323      	orrs	r3, r4
 8024e1a:	d108      	bne.n	8024e2e <__ieee754_pow+0x1de>
 8024e1c:	4602      	mov	r2, r0
 8024e1e:	460b      	mov	r3, r1
 8024e20:	4610      	mov	r0, r2
 8024e22:	4619      	mov	r1, r3
 8024e24:	f7db fa30 	bl	8000288 <__aeabi_dsub>
 8024e28:	4602      	mov	r2, r0
 8024e2a:	460b      	mov	r3, r1
 8024e2c:	e78f      	b.n	8024d4e <__ieee754_pow+0xfe>
 8024e2e:	9b04      	ldr	r3, [sp, #16]
 8024e30:	2b01      	cmp	r3, #1
 8024e32:	f47f af2c 	bne.w	8024c8e <__ieee754_pow+0x3e>
 8024e36:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024e3a:	4619      	mov	r1, r3
 8024e3c:	e727      	b.n	8024c8e <__ieee754_pow+0x3e>
 8024e3e:	0feb      	lsrs	r3, r5, #31
 8024e40:	3b01      	subs	r3, #1
 8024e42:	9306      	str	r3, [sp, #24]
 8024e44:	9a06      	ldr	r2, [sp, #24]
 8024e46:	9b04      	ldr	r3, [sp, #16]
 8024e48:	4313      	orrs	r3, r2
 8024e4a:	d102      	bne.n	8024e52 <__ieee754_pow+0x202>
 8024e4c:	4632      	mov	r2, r6
 8024e4e:	463b      	mov	r3, r7
 8024e50:	e7e6      	b.n	8024e20 <__ieee754_pow+0x1d0>
 8024e52:	4b19      	ldr	r3, [pc, #100]	; (8024eb8 <__ieee754_pow+0x268>)
 8024e54:	4598      	cmp	r8, r3
 8024e56:	f340 80fb 	ble.w	8025050 <__ieee754_pow+0x400>
 8024e5a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8024e5e:	4598      	cmp	r8, r3
 8024e60:	4b13      	ldr	r3, [pc, #76]	; (8024eb0 <__ieee754_pow+0x260>)
 8024e62:	dd0c      	ble.n	8024e7e <__ieee754_pow+0x22e>
 8024e64:	429c      	cmp	r4, r3
 8024e66:	dc0f      	bgt.n	8024e88 <__ieee754_pow+0x238>
 8024e68:	f1b9 0f00 	cmp.w	r9, #0
 8024e6c:	da0f      	bge.n	8024e8e <__ieee754_pow+0x23e>
 8024e6e:	2000      	movs	r0, #0
 8024e70:	b009      	add	sp, #36	; 0x24
 8024e72:	ecbd 8b06 	vpop	{d8-d10}
 8024e76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e7a:	f001 bbda 	b.w	8026632 <__math_oflow>
 8024e7e:	429c      	cmp	r4, r3
 8024e80:	dbf2      	blt.n	8024e68 <__ieee754_pow+0x218>
 8024e82:	4b0a      	ldr	r3, [pc, #40]	; (8024eac <__ieee754_pow+0x25c>)
 8024e84:	429c      	cmp	r4, r3
 8024e86:	dd19      	ble.n	8024ebc <__ieee754_pow+0x26c>
 8024e88:	f1b9 0f00 	cmp.w	r9, #0
 8024e8c:	dcef      	bgt.n	8024e6e <__ieee754_pow+0x21e>
 8024e8e:	2000      	movs	r0, #0
 8024e90:	b009      	add	sp, #36	; 0x24
 8024e92:	ecbd 8b06 	vpop	{d8-d10}
 8024e96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e9a:	f001 bbc1 	b.w	8026620 <__math_uflow>
 8024e9e:	bf00      	nop
 8024ea0:	fff00000 	.word	0xfff00000
 8024ea4:	7ff00000 	.word	0x7ff00000
 8024ea8:	433fffff 	.word	0x433fffff
 8024eac:	3ff00000 	.word	0x3ff00000
 8024eb0:	3fefffff 	.word	0x3fefffff
 8024eb4:	3fe00000 	.word	0x3fe00000
 8024eb8:	41e00000 	.word	0x41e00000
 8024ebc:	4b60      	ldr	r3, [pc, #384]	; (8025040 <__ieee754_pow+0x3f0>)
 8024ebe:	2200      	movs	r2, #0
 8024ec0:	f7db f9e2 	bl	8000288 <__aeabi_dsub>
 8024ec4:	a354      	add	r3, pc, #336	; (adr r3, 8025018 <__ieee754_pow+0x3c8>)
 8024ec6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024eca:	4604      	mov	r4, r0
 8024ecc:	460d      	mov	r5, r1
 8024ece:	f7db fb93 	bl	80005f8 <__aeabi_dmul>
 8024ed2:	a353      	add	r3, pc, #332	; (adr r3, 8025020 <__ieee754_pow+0x3d0>)
 8024ed4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024ed8:	4606      	mov	r6, r0
 8024eda:	460f      	mov	r7, r1
 8024edc:	4620      	mov	r0, r4
 8024ede:	4629      	mov	r1, r5
 8024ee0:	f7db fb8a 	bl	80005f8 <__aeabi_dmul>
 8024ee4:	4b57      	ldr	r3, [pc, #348]	; (8025044 <__ieee754_pow+0x3f4>)
 8024ee6:	4682      	mov	sl, r0
 8024ee8:	468b      	mov	fp, r1
 8024eea:	2200      	movs	r2, #0
 8024eec:	4620      	mov	r0, r4
 8024eee:	4629      	mov	r1, r5
 8024ef0:	f7db fb82 	bl	80005f8 <__aeabi_dmul>
 8024ef4:	4602      	mov	r2, r0
 8024ef6:	460b      	mov	r3, r1
 8024ef8:	a14b      	add	r1, pc, #300	; (adr r1, 8025028 <__ieee754_pow+0x3d8>)
 8024efa:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024efe:	f7db f9c3 	bl	8000288 <__aeabi_dsub>
 8024f02:	4622      	mov	r2, r4
 8024f04:	462b      	mov	r3, r5
 8024f06:	f7db fb77 	bl	80005f8 <__aeabi_dmul>
 8024f0a:	4602      	mov	r2, r0
 8024f0c:	460b      	mov	r3, r1
 8024f0e:	2000      	movs	r0, #0
 8024f10:	494d      	ldr	r1, [pc, #308]	; (8025048 <__ieee754_pow+0x3f8>)
 8024f12:	f7db f9b9 	bl	8000288 <__aeabi_dsub>
 8024f16:	4622      	mov	r2, r4
 8024f18:	4680      	mov	r8, r0
 8024f1a:	4689      	mov	r9, r1
 8024f1c:	462b      	mov	r3, r5
 8024f1e:	4620      	mov	r0, r4
 8024f20:	4629      	mov	r1, r5
 8024f22:	f7db fb69 	bl	80005f8 <__aeabi_dmul>
 8024f26:	4602      	mov	r2, r0
 8024f28:	460b      	mov	r3, r1
 8024f2a:	4640      	mov	r0, r8
 8024f2c:	4649      	mov	r1, r9
 8024f2e:	f7db fb63 	bl	80005f8 <__aeabi_dmul>
 8024f32:	a33f      	add	r3, pc, #252	; (adr r3, 8025030 <__ieee754_pow+0x3e0>)
 8024f34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024f38:	f7db fb5e 	bl	80005f8 <__aeabi_dmul>
 8024f3c:	4602      	mov	r2, r0
 8024f3e:	460b      	mov	r3, r1
 8024f40:	4650      	mov	r0, sl
 8024f42:	4659      	mov	r1, fp
 8024f44:	f7db f9a0 	bl	8000288 <__aeabi_dsub>
 8024f48:	4602      	mov	r2, r0
 8024f4a:	460b      	mov	r3, r1
 8024f4c:	4680      	mov	r8, r0
 8024f4e:	4689      	mov	r9, r1
 8024f50:	4630      	mov	r0, r6
 8024f52:	4639      	mov	r1, r7
 8024f54:	f7db f99a 	bl	800028c <__adddf3>
 8024f58:	2000      	movs	r0, #0
 8024f5a:	4632      	mov	r2, r6
 8024f5c:	463b      	mov	r3, r7
 8024f5e:	4604      	mov	r4, r0
 8024f60:	460d      	mov	r5, r1
 8024f62:	f7db f991 	bl	8000288 <__aeabi_dsub>
 8024f66:	4602      	mov	r2, r0
 8024f68:	460b      	mov	r3, r1
 8024f6a:	4640      	mov	r0, r8
 8024f6c:	4649      	mov	r1, r9
 8024f6e:	f7db f98b 	bl	8000288 <__aeabi_dsub>
 8024f72:	9b04      	ldr	r3, [sp, #16]
 8024f74:	9a06      	ldr	r2, [sp, #24]
 8024f76:	3b01      	subs	r3, #1
 8024f78:	4313      	orrs	r3, r2
 8024f7a:	4682      	mov	sl, r0
 8024f7c:	468b      	mov	fp, r1
 8024f7e:	f040 81e7 	bne.w	8025350 <__ieee754_pow+0x700>
 8024f82:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8025038 <__ieee754_pow+0x3e8>
 8024f86:	eeb0 8a47 	vmov.f32	s16, s14
 8024f8a:	eef0 8a67 	vmov.f32	s17, s15
 8024f8e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8024f92:	2600      	movs	r6, #0
 8024f94:	4632      	mov	r2, r6
 8024f96:	463b      	mov	r3, r7
 8024f98:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024f9c:	f7db f974 	bl	8000288 <__aeabi_dsub>
 8024fa0:	4622      	mov	r2, r4
 8024fa2:	462b      	mov	r3, r5
 8024fa4:	f7db fb28 	bl	80005f8 <__aeabi_dmul>
 8024fa8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024fac:	4680      	mov	r8, r0
 8024fae:	4689      	mov	r9, r1
 8024fb0:	4650      	mov	r0, sl
 8024fb2:	4659      	mov	r1, fp
 8024fb4:	f7db fb20 	bl	80005f8 <__aeabi_dmul>
 8024fb8:	4602      	mov	r2, r0
 8024fba:	460b      	mov	r3, r1
 8024fbc:	4640      	mov	r0, r8
 8024fbe:	4649      	mov	r1, r9
 8024fc0:	f7db f964 	bl	800028c <__adddf3>
 8024fc4:	4632      	mov	r2, r6
 8024fc6:	463b      	mov	r3, r7
 8024fc8:	4680      	mov	r8, r0
 8024fca:	4689      	mov	r9, r1
 8024fcc:	4620      	mov	r0, r4
 8024fce:	4629      	mov	r1, r5
 8024fd0:	f7db fb12 	bl	80005f8 <__aeabi_dmul>
 8024fd4:	460b      	mov	r3, r1
 8024fd6:	4604      	mov	r4, r0
 8024fd8:	460d      	mov	r5, r1
 8024fda:	4602      	mov	r2, r0
 8024fdc:	4649      	mov	r1, r9
 8024fde:	4640      	mov	r0, r8
 8024fe0:	f7db f954 	bl	800028c <__adddf3>
 8024fe4:	4b19      	ldr	r3, [pc, #100]	; (802504c <__ieee754_pow+0x3fc>)
 8024fe6:	4299      	cmp	r1, r3
 8024fe8:	ec45 4b19 	vmov	d9, r4, r5
 8024fec:	4606      	mov	r6, r0
 8024fee:	460f      	mov	r7, r1
 8024ff0:	468b      	mov	fp, r1
 8024ff2:	f340 82f1 	ble.w	80255d8 <__ieee754_pow+0x988>
 8024ff6:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8024ffa:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8024ffe:	4303      	orrs	r3, r0
 8025000:	f000 81e4 	beq.w	80253cc <__ieee754_pow+0x77c>
 8025004:	ec51 0b18 	vmov	r0, r1, d8
 8025008:	2200      	movs	r2, #0
 802500a:	2300      	movs	r3, #0
 802500c:	f7db fd66 	bl	8000adc <__aeabi_dcmplt>
 8025010:	3800      	subs	r0, #0
 8025012:	bf18      	it	ne
 8025014:	2001      	movne	r0, #1
 8025016:	e72b      	b.n	8024e70 <__ieee754_pow+0x220>
 8025018:	60000000 	.word	0x60000000
 802501c:	3ff71547 	.word	0x3ff71547
 8025020:	f85ddf44 	.word	0xf85ddf44
 8025024:	3e54ae0b 	.word	0x3e54ae0b
 8025028:	55555555 	.word	0x55555555
 802502c:	3fd55555 	.word	0x3fd55555
 8025030:	652b82fe 	.word	0x652b82fe
 8025034:	3ff71547 	.word	0x3ff71547
 8025038:	00000000 	.word	0x00000000
 802503c:	bff00000 	.word	0xbff00000
 8025040:	3ff00000 	.word	0x3ff00000
 8025044:	3fd00000 	.word	0x3fd00000
 8025048:	3fe00000 	.word	0x3fe00000
 802504c:	408fffff 	.word	0x408fffff
 8025050:	4bd5      	ldr	r3, [pc, #852]	; (80253a8 <__ieee754_pow+0x758>)
 8025052:	402b      	ands	r3, r5
 8025054:	2200      	movs	r2, #0
 8025056:	b92b      	cbnz	r3, 8025064 <__ieee754_pow+0x414>
 8025058:	4bd4      	ldr	r3, [pc, #848]	; (80253ac <__ieee754_pow+0x75c>)
 802505a:	f7db facd 	bl	80005f8 <__aeabi_dmul>
 802505e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8025062:	460c      	mov	r4, r1
 8025064:	1523      	asrs	r3, r4, #20
 8025066:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802506a:	4413      	add	r3, r2
 802506c:	9305      	str	r3, [sp, #20]
 802506e:	4bd0      	ldr	r3, [pc, #832]	; (80253b0 <__ieee754_pow+0x760>)
 8025070:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8025074:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8025078:	429c      	cmp	r4, r3
 802507a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 802507e:	dd08      	ble.n	8025092 <__ieee754_pow+0x442>
 8025080:	4bcc      	ldr	r3, [pc, #816]	; (80253b4 <__ieee754_pow+0x764>)
 8025082:	429c      	cmp	r4, r3
 8025084:	f340 8162 	ble.w	802534c <__ieee754_pow+0x6fc>
 8025088:	9b05      	ldr	r3, [sp, #20]
 802508a:	3301      	adds	r3, #1
 802508c:	9305      	str	r3, [sp, #20]
 802508e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8025092:	2400      	movs	r4, #0
 8025094:	00e3      	lsls	r3, r4, #3
 8025096:	9307      	str	r3, [sp, #28]
 8025098:	4bc7      	ldr	r3, [pc, #796]	; (80253b8 <__ieee754_pow+0x768>)
 802509a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 802509e:	ed93 7b00 	vldr	d7, [r3]
 80250a2:	4629      	mov	r1, r5
 80250a4:	ec53 2b17 	vmov	r2, r3, d7
 80250a8:	eeb0 9a47 	vmov.f32	s18, s14
 80250ac:	eef0 9a67 	vmov.f32	s19, s15
 80250b0:	4682      	mov	sl, r0
 80250b2:	f7db f8e9 	bl	8000288 <__aeabi_dsub>
 80250b6:	4652      	mov	r2, sl
 80250b8:	4606      	mov	r6, r0
 80250ba:	460f      	mov	r7, r1
 80250bc:	462b      	mov	r3, r5
 80250be:	ec51 0b19 	vmov	r0, r1, d9
 80250c2:	f7db f8e3 	bl	800028c <__adddf3>
 80250c6:	4602      	mov	r2, r0
 80250c8:	460b      	mov	r3, r1
 80250ca:	2000      	movs	r0, #0
 80250cc:	49bb      	ldr	r1, [pc, #748]	; (80253bc <__ieee754_pow+0x76c>)
 80250ce:	f7db fbbd 	bl	800084c <__aeabi_ddiv>
 80250d2:	ec41 0b1a 	vmov	d10, r0, r1
 80250d6:	4602      	mov	r2, r0
 80250d8:	460b      	mov	r3, r1
 80250da:	4630      	mov	r0, r6
 80250dc:	4639      	mov	r1, r7
 80250de:	f7db fa8b 	bl	80005f8 <__aeabi_dmul>
 80250e2:	2300      	movs	r3, #0
 80250e4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80250e8:	9302      	str	r3, [sp, #8]
 80250ea:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80250ee:	46ab      	mov	fp, r5
 80250f0:	106d      	asrs	r5, r5, #1
 80250f2:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80250f6:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80250fa:	ec41 0b18 	vmov	d8, r0, r1
 80250fe:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8025102:	2200      	movs	r2, #0
 8025104:	4640      	mov	r0, r8
 8025106:	4649      	mov	r1, r9
 8025108:	4614      	mov	r4, r2
 802510a:	461d      	mov	r5, r3
 802510c:	f7db fa74 	bl	80005f8 <__aeabi_dmul>
 8025110:	4602      	mov	r2, r0
 8025112:	460b      	mov	r3, r1
 8025114:	4630      	mov	r0, r6
 8025116:	4639      	mov	r1, r7
 8025118:	f7db f8b6 	bl	8000288 <__aeabi_dsub>
 802511c:	ec53 2b19 	vmov	r2, r3, d9
 8025120:	4606      	mov	r6, r0
 8025122:	460f      	mov	r7, r1
 8025124:	4620      	mov	r0, r4
 8025126:	4629      	mov	r1, r5
 8025128:	f7db f8ae 	bl	8000288 <__aeabi_dsub>
 802512c:	4602      	mov	r2, r0
 802512e:	460b      	mov	r3, r1
 8025130:	4650      	mov	r0, sl
 8025132:	4659      	mov	r1, fp
 8025134:	f7db f8a8 	bl	8000288 <__aeabi_dsub>
 8025138:	4642      	mov	r2, r8
 802513a:	464b      	mov	r3, r9
 802513c:	f7db fa5c 	bl	80005f8 <__aeabi_dmul>
 8025140:	4602      	mov	r2, r0
 8025142:	460b      	mov	r3, r1
 8025144:	4630      	mov	r0, r6
 8025146:	4639      	mov	r1, r7
 8025148:	f7db f89e 	bl	8000288 <__aeabi_dsub>
 802514c:	ec53 2b1a 	vmov	r2, r3, d10
 8025150:	f7db fa52 	bl	80005f8 <__aeabi_dmul>
 8025154:	ec53 2b18 	vmov	r2, r3, d8
 8025158:	ec41 0b19 	vmov	d9, r0, r1
 802515c:	ec51 0b18 	vmov	r0, r1, d8
 8025160:	f7db fa4a 	bl	80005f8 <__aeabi_dmul>
 8025164:	a37c      	add	r3, pc, #496	; (adr r3, 8025358 <__ieee754_pow+0x708>)
 8025166:	e9d3 2300 	ldrd	r2, r3, [r3]
 802516a:	4604      	mov	r4, r0
 802516c:	460d      	mov	r5, r1
 802516e:	f7db fa43 	bl	80005f8 <__aeabi_dmul>
 8025172:	a37b      	add	r3, pc, #492	; (adr r3, 8025360 <__ieee754_pow+0x710>)
 8025174:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025178:	f7db f888 	bl	800028c <__adddf3>
 802517c:	4622      	mov	r2, r4
 802517e:	462b      	mov	r3, r5
 8025180:	f7db fa3a 	bl	80005f8 <__aeabi_dmul>
 8025184:	a378      	add	r3, pc, #480	; (adr r3, 8025368 <__ieee754_pow+0x718>)
 8025186:	e9d3 2300 	ldrd	r2, r3, [r3]
 802518a:	f7db f87f 	bl	800028c <__adddf3>
 802518e:	4622      	mov	r2, r4
 8025190:	462b      	mov	r3, r5
 8025192:	f7db fa31 	bl	80005f8 <__aeabi_dmul>
 8025196:	a376      	add	r3, pc, #472	; (adr r3, 8025370 <__ieee754_pow+0x720>)
 8025198:	e9d3 2300 	ldrd	r2, r3, [r3]
 802519c:	f7db f876 	bl	800028c <__adddf3>
 80251a0:	4622      	mov	r2, r4
 80251a2:	462b      	mov	r3, r5
 80251a4:	f7db fa28 	bl	80005f8 <__aeabi_dmul>
 80251a8:	a373      	add	r3, pc, #460	; (adr r3, 8025378 <__ieee754_pow+0x728>)
 80251aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80251ae:	f7db f86d 	bl	800028c <__adddf3>
 80251b2:	4622      	mov	r2, r4
 80251b4:	462b      	mov	r3, r5
 80251b6:	f7db fa1f 	bl	80005f8 <__aeabi_dmul>
 80251ba:	a371      	add	r3, pc, #452	; (adr r3, 8025380 <__ieee754_pow+0x730>)
 80251bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80251c0:	f7db f864 	bl	800028c <__adddf3>
 80251c4:	4622      	mov	r2, r4
 80251c6:	4606      	mov	r6, r0
 80251c8:	460f      	mov	r7, r1
 80251ca:	462b      	mov	r3, r5
 80251cc:	4620      	mov	r0, r4
 80251ce:	4629      	mov	r1, r5
 80251d0:	f7db fa12 	bl	80005f8 <__aeabi_dmul>
 80251d4:	4602      	mov	r2, r0
 80251d6:	460b      	mov	r3, r1
 80251d8:	4630      	mov	r0, r6
 80251da:	4639      	mov	r1, r7
 80251dc:	f7db fa0c 	bl	80005f8 <__aeabi_dmul>
 80251e0:	4642      	mov	r2, r8
 80251e2:	4604      	mov	r4, r0
 80251e4:	460d      	mov	r5, r1
 80251e6:	464b      	mov	r3, r9
 80251e8:	ec51 0b18 	vmov	r0, r1, d8
 80251ec:	f7db f84e 	bl	800028c <__adddf3>
 80251f0:	ec53 2b19 	vmov	r2, r3, d9
 80251f4:	f7db fa00 	bl	80005f8 <__aeabi_dmul>
 80251f8:	4622      	mov	r2, r4
 80251fa:	462b      	mov	r3, r5
 80251fc:	f7db f846 	bl	800028c <__adddf3>
 8025200:	4642      	mov	r2, r8
 8025202:	4682      	mov	sl, r0
 8025204:	468b      	mov	fp, r1
 8025206:	464b      	mov	r3, r9
 8025208:	4640      	mov	r0, r8
 802520a:	4649      	mov	r1, r9
 802520c:	f7db f9f4 	bl	80005f8 <__aeabi_dmul>
 8025210:	4b6b      	ldr	r3, [pc, #428]	; (80253c0 <__ieee754_pow+0x770>)
 8025212:	2200      	movs	r2, #0
 8025214:	4606      	mov	r6, r0
 8025216:	460f      	mov	r7, r1
 8025218:	f7db f838 	bl	800028c <__adddf3>
 802521c:	4652      	mov	r2, sl
 802521e:	465b      	mov	r3, fp
 8025220:	f7db f834 	bl	800028c <__adddf3>
 8025224:	2000      	movs	r0, #0
 8025226:	4604      	mov	r4, r0
 8025228:	460d      	mov	r5, r1
 802522a:	4602      	mov	r2, r0
 802522c:	460b      	mov	r3, r1
 802522e:	4640      	mov	r0, r8
 8025230:	4649      	mov	r1, r9
 8025232:	f7db f9e1 	bl	80005f8 <__aeabi_dmul>
 8025236:	4b62      	ldr	r3, [pc, #392]	; (80253c0 <__ieee754_pow+0x770>)
 8025238:	4680      	mov	r8, r0
 802523a:	4689      	mov	r9, r1
 802523c:	2200      	movs	r2, #0
 802523e:	4620      	mov	r0, r4
 8025240:	4629      	mov	r1, r5
 8025242:	f7db f821 	bl	8000288 <__aeabi_dsub>
 8025246:	4632      	mov	r2, r6
 8025248:	463b      	mov	r3, r7
 802524a:	f7db f81d 	bl	8000288 <__aeabi_dsub>
 802524e:	4602      	mov	r2, r0
 8025250:	460b      	mov	r3, r1
 8025252:	4650      	mov	r0, sl
 8025254:	4659      	mov	r1, fp
 8025256:	f7db f817 	bl	8000288 <__aeabi_dsub>
 802525a:	ec53 2b18 	vmov	r2, r3, d8
 802525e:	f7db f9cb 	bl	80005f8 <__aeabi_dmul>
 8025262:	4622      	mov	r2, r4
 8025264:	4606      	mov	r6, r0
 8025266:	460f      	mov	r7, r1
 8025268:	462b      	mov	r3, r5
 802526a:	ec51 0b19 	vmov	r0, r1, d9
 802526e:	f7db f9c3 	bl	80005f8 <__aeabi_dmul>
 8025272:	4602      	mov	r2, r0
 8025274:	460b      	mov	r3, r1
 8025276:	4630      	mov	r0, r6
 8025278:	4639      	mov	r1, r7
 802527a:	f7db f807 	bl	800028c <__adddf3>
 802527e:	4606      	mov	r6, r0
 8025280:	460f      	mov	r7, r1
 8025282:	4602      	mov	r2, r0
 8025284:	460b      	mov	r3, r1
 8025286:	4640      	mov	r0, r8
 8025288:	4649      	mov	r1, r9
 802528a:	f7da ffff 	bl	800028c <__adddf3>
 802528e:	a33e      	add	r3, pc, #248	; (adr r3, 8025388 <__ieee754_pow+0x738>)
 8025290:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025294:	2000      	movs	r0, #0
 8025296:	4604      	mov	r4, r0
 8025298:	460d      	mov	r5, r1
 802529a:	f7db f9ad 	bl	80005f8 <__aeabi_dmul>
 802529e:	4642      	mov	r2, r8
 80252a0:	ec41 0b18 	vmov	d8, r0, r1
 80252a4:	464b      	mov	r3, r9
 80252a6:	4620      	mov	r0, r4
 80252a8:	4629      	mov	r1, r5
 80252aa:	f7da ffed 	bl	8000288 <__aeabi_dsub>
 80252ae:	4602      	mov	r2, r0
 80252b0:	460b      	mov	r3, r1
 80252b2:	4630      	mov	r0, r6
 80252b4:	4639      	mov	r1, r7
 80252b6:	f7da ffe7 	bl	8000288 <__aeabi_dsub>
 80252ba:	a335      	add	r3, pc, #212	; (adr r3, 8025390 <__ieee754_pow+0x740>)
 80252bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80252c0:	f7db f99a 	bl	80005f8 <__aeabi_dmul>
 80252c4:	a334      	add	r3, pc, #208	; (adr r3, 8025398 <__ieee754_pow+0x748>)
 80252c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80252ca:	4606      	mov	r6, r0
 80252cc:	460f      	mov	r7, r1
 80252ce:	4620      	mov	r0, r4
 80252d0:	4629      	mov	r1, r5
 80252d2:	f7db f991 	bl	80005f8 <__aeabi_dmul>
 80252d6:	4602      	mov	r2, r0
 80252d8:	460b      	mov	r3, r1
 80252da:	4630      	mov	r0, r6
 80252dc:	4639      	mov	r1, r7
 80252de:	f7da ffd5 	bl	800028c <__adddf3>
 80252e2:	9a07      	ldr	r2, [sp, #28]
 80252e4:	4b37      	ldr	r3, [pc, #220]	; (80253c4 <__ieee754_pow+0x774>)
 80252e6:	4413      	add	r3, r2
 80252e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80252ec:	f7da ffce 	bl	800028c <__adddf3>
 80252f0:	4682      	mov	sl, r0
 80252f2:	9805      	ldr	r0, [sp, #20]
 80252f4:	468b      	mov	fp, r1
 80252f6:	f7db f915 	bl	8000524 <__aeabi_i2d>
 80252fa:	9a07      	ldr	r2, [sp, #28]
 80252fc:	4b32      	ldr	r3, [pc, #200]	; (80253c8 <__ieee754_pow+0x778>)
 80252fe:	4413      	add	r3, r2
 8025300:	e9d3 8900 	ldrd	r8, r9, [r3]
 8025304:	4606      	mov	r6, r0
 8025306:	460f      	mov	r7, r1
 8025308:	4652      	mov	r2, sl
 802530a:	465b      	mov	r3, fp
 802530c:	ec51 0b18 	vmov	r0, r1, d8
 8025310:	f7da ffbc 	bl	800028c <__adddf3>
 8025314:	4642      	mov	r2, r8
 8025316:	464b      	mov	r3, r9
 8025318:	f7da ffb8 	bl	800028c <__adddf3>
 802531c:	4632      	mov	r2, r6
 802531e:	463b      	mov	r3, r7
 8025320:	f7da ffb4 	bl	800028c <__adddf3>
 8025324:	2000      	movs	r0, #0
 8025326:	4632      	mov	r2, r6
 8025328:	463b      	mov	r3, r7
 802532a:	4604      	mov	r4, r0
 802532c:	460d      	mov	r5, r1
 802532e:	f7da ffab 	bl	8000288 <__aeabi_dsub>
 8025332:	4642      	mov	r2, r8
 8025334:	464b      	mov	r3, r9
 8025336:	f7da ffa7 	bl	8000288 <__aeabi_dsub>
 802533a:	ec53 2b18 	vmov	r2, r3, d8
 802533e:	f7da ffa3 	bl	8000288 <__aeabi_dsub>
 8025342:	4602      	mov	r2, r0
 8025344:	460b      	mov	r3, r1
 8025346:	4650      	mov	r0, sl
 8025348:	4659      	mov	r1, fp
 802534a:	e610      	b.n	8024f6e <__ieee754_pow+0x31e>
 802534c:	2401      	movs	r4, #1
 802534e:	e6a1      	b.n	8025094 <__ieee754_pow+0x444>
 8025350:	ed9f 7b13 	vldr	d7, [pc, #76]	; 80253a0 <__ieee754_pow+0x750>
 8025354:	e617      	b.n	8024f86 <__ieee754_pow+0x336>
 8025356:	bf00      	nop
 8025358:	4a454eef 	.word	0x4a454eef
 802535c:	3fca7e28 	.word	0x3fca7e28
 8025360:	93c9db65 	.word	0x93c9db65
 8025364:	3fcd864a 	.word	0x3fcd864a
 8025368:	a91d4101 	.word	0xa91d4101
 802536c:	3fd17460 	.word	0x3fd17460
 8025370:	518f264d 	.word	0x518f264d
 8025374:	3fd55555 	.word	0x3fd55555
 8025378:	db6fabff 	.word	0xdb6fabff
 802537c:	3fdb6db6 	.word	0x3fdb6db6
 8025380:	33333303 	.word	0x33333303
 8025384:	3fe33333 	.word	0x3fe33333
 8025388:	e0000000 	.word	0xe0000000
 802538c:	3feec709 	.word	0x3feec709
 8025390:	dc3a03fd 	.word	0xdc3a03fd
 8025394:	3feec709 	.word	0x3feec709
 8025398:	145b01f5 	.word	0x145b01f5
 802539c:	be3e2fe0 	.word	0xbe3e2fe0
 80253a0:	00000000 	.word	0x00000000
 80253a4:	3ff00000 	.word	0x3ff00000
 80253a8:	7ff00000 	.word	0x7ff00000
 80253ac:	43400000 	.word	0x43400000
 80253b0:	0003988e 	.word	0x0003988e
 80253b4:	000bb679 	.word	0x000bb679
 80253b8:	08027540 	.word	0x08027540
 80253bc:	3ff00000 	.word	0x3ff00000
 80253c0:	40080000 	.word	0x40080000
 80253c4:	08027560 	.word	0x08027560
 80253c8:	08027550 	.word	0x08027550
 80253cc:	a3b5      	add	r3, pc, #724	; (adr r3, 80256a4 <__ieee754_pow+0xa54>)
 80253ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80253d2:	4640      	mov	r0, r8
 80253d4:	4649      	mov	r1, r9
 80253d6:	f7da ff59 	bl	800028c <__adddf3>
 80253da:	4622      	mov	r2, r4
 80253dc:	ec41 0b1a 	vmov	d10, r0, r1
 80253e0:	462b      	mov	r3, r5
 80253e2:	4630      	mov	r0, r6
 80253e4:	4639      	mov	r1, r7
 80253e6:	f7da ff4f 	bl	8000288 <__aeabi_dsub>
 80253ea:	4602      	mov	r2, r0
 80253ec:	460b      	mov	r3, r1
 80253ee:	ec51 0b1a 	vmov	r0, r1, d10
 80253f2:	f7db fb91 	bl	8000b18 <__aeabi_dcmpgt>
 80253f6:	2800      	cmp	r0, #0
 80253f8:	f47f ae04 	bne.w	8025004 <__ieee754_pow+0x3b4>
 80253fc:	4aa4      	ldr	r2, [pc, #656]	; (8025690 <__ieee754_pow+0xa40>)
 80253fe:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8025402:	4293      	cmp	r3, r2
 8025404:	f340 8108 	ble.w	8025618 <__ieee754_pow+0x9c8>
 8025408:	151b      	asrs	r3, r3, #20
 802540a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802540e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8025412:	fa4a f303 	asr.w	r3, sl, r3
 8025416:	445b      	add	r3, fp
 8025418:	f3c3 520a 	ubfx	r2, r3, #20, #11
 802541c:	4e9d      	ldr	r6, [pc, #628]	; (8025694 <__ieee754_pow+0xa44>)
 802541e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8025422:	4116      	asrs	r6, r2
 8025424:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8025428:	2000      	movs	r0, #0
 802542a:	ea23 0106 	bic.w	r1, r3, r6
 802542e:	f1c2 0214 	rsb	r2, r2, #20
 8025432:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8025436:	fa4a fa02 	asr.w	sl, sl, r2
 802543a:	f1bb 0f00 	cmp.w	fp, #0
 802543e:	4602      	mov	r2, r0
 8025440:	460b      	mov	r3, r1
 8025442:	4620      	mov	r0, r4
 8025444:	4629      	mov	r1, r5
 8025446:	bfb8      	it	lt
 8025448:	f1ca 0a00 	rsblt	sl, sl, #0
 802544c:	f7da ff1c 	bl	8000288 <__aeabi_dsub>
 8025450:	ec41 0b19 	vmov	d9, r0, r1
 8025454:	4642      	mov	r2, r8
 8025456:	464b      	mov	r3, r9
 8025458:	ec51 0b19 	vmov	r0, r1, d9
 802545c:	f7da ff16 	bl	800028c <__adddf3>
 8025460:	a37b      	add	r3, pc, #492	; (adr r3, 8025650 <__ieee754_pow+0xa00>)
 8025462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025466:	2000      	movs	r0, #0
 8025468:	4604      	mov	r4, r0
 802546a:	460d      	mov	r5, r1
 802546c:	f7db f8c4 	bl	80005f8 <__aeabi_dmul>
 8025470:	ec53 2b19 	vmov	r2, r3, d9
 8025474:	4606      	mov	r6, r0
 8025476:	460f      	mov	r7, r1
 8025478:	4620      	mov	r0, r4
 802547a:	4629      	mov	r1, r5
 802547c:	f7da ff04 	bl	8000288 <__aeabi_dsub>
 8025480:	4602      	mov	r2, r0
 8025482:	460b      	mov	r3, r1
 8025484:	4640      	mov	r0, r8
 8025486:	4649      	mov	r1, r9
 8025488:	f7da fefe 	bl	8000288 <__aeabi_dsub>
 802548c:	a372      	add	r3, pc, #456	; (adr r3, 8025658 <__ieee754_pow+0xa08>)
 802548e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025492:	f7db f8b1 	bl	80005f8 <__aeabi_dmul>
 8025496:	a372      	add	r3, pc, #456	; (adr r3, 8025660 <__ieee754_pow+0xa10>)
 8025498:	e9d3 2300 	ldrd	r2, r3, [r3]
 802549c:	4680      	mov	r8, r0
 802549e:	4689      	mov	r9, r1
 80254a0:	4620      	mov	r0, r4
 80254a2:	4629      	mov	r1, r5
 80254a4:	f7db f8a8 	bl	80005f8 <__aeabi_dmul>
 80254a8:	4602      	mov	r2, r0
 80254aa:	460b      	mov	r3, r1
 80254ac:	4640      	mov	r0, r8
 80254ae:	4649      	mov	r1, r9
 80254b0:	f7da feec 	bl	800028c <__adddf3>
 80254b4:	4604      	mov	r4, r0
 80254b6:	460d      	mov	r5, r1
 80254b8:	4602      	mov	r2, r0
 80254ba:	460b      	mov	r3, r1
 80254bc:	4630      	mov	r0, r6
 80254be:	4639      	mov	r1, r7
 80254c0:	f7da fee4 	bl	800028c <__adddf3>
 80254c4:	4632      	mov	r2, r6
 80254c6:	463b      	mov	r3, r7
 80254c8:	4680      	mov	r8, r0
 80254ca:	4689      	mov	r9, r1
 80254cc:	f7da fedc 	bl	8000288 <__aeabi_dsub>
 80254d0:	4602      	mov	r2, r0
 80254d2:	460b      	mov	r3, r1
 80254d4:	4620      	mov	r0, r4
 80254d6:	4629      	mov	r1, r5
 80254d8:	f7da fed6 	bl	8000288 <__aeabi_dsub>
 80254dc:	4642      	mov	r2, r8
 80254de:	4606      	mov	r6, r0
 80254e0:	460f      	mov	r7, r1
 80254e2:	464b      	mov	r3, r9
 80254e4:	4640      	mov	r0, r8
 80254e6:	4649      	mov	r1, r9
 80254e8:	f7db f886 	bl	80005f8 <__aeabi_dmul>
 80254ec:	a35e      	add	r3, pc, #376	; (adr r3, 8025668 <__ieee754_pow+0xa18>)
 80254ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80254f2:	4604      	mov	r4, r0
 80254f4:	460d      	mov	r5, r1
 80254f6:	f7db f87f 	bl	80005f8 <__aeabi_dmul>
 80254fa:	a35d      	add	r3, pc, #372	; (adr r3, 8025670 <__ieee754_pow+0xa20>)
 80254fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025500:	f7da fec2 	bl	8000288 <__aeabi_dsub>
 8025504:	4622      	mov	r2, r4
 8025506:	462b      	mov	r3, r5
 8025508:	f7db f876 	bl	80005f8 <__aeabi_dmul>
 802550c:	a35a      	add	r3, pc, #360	; (adr r3, 8025678 <__ieee754_pow+0xa28>)
 802550e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025512:	f7da febb 	bl	800028c <__adddf3>
 8025516:	4622      	mov	r2, r4
 8025518:	462b      	mov	r3, r5
 802551a:	f7db f86d 	bl	80005f8 <__aeabi_dmul>
 802551e:	a358      	add	r3, pc, #352	; (adr r3, 8025680 <__ieee754_pow+0xa30>)
 8025520:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025524:	f7da feb0 	bl	8000288 <__aeabi_dsub>
 8025528:	4622      	mov	r2, r4
 802552a:	462b      	mov	r3, r5
 802552c:	f7db f864 	bl	80005f8 <__aeabi_dmul>
 8025530:	a355      	add	r3, pc, #340	; (adr r3, 8025688 <__ieee754_pow+0xa38>)
 8025532:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025536:	f7da fea9 	bl	800028c <__adddf3>
 802553a:	4622      	mov	r2, r4
 802553c:	462b      	mov	r3, r5
 802553e:	f7db f85b 	bl	80005f8 <__aeabi_dmul>
 8025542:	4602      	mov	r2, r0
 8025544:	460b      	mov	r3, r1
 8025546:	4640      	mov	r0, r8
 8025548:	4649      	mov	r1, r9
 802554a:	f7da fe9d 	bl	8000288 <__aeabi_dsub>
 802554e:	4604      	mov	r4, r0
 8025550:	460d      	mov	r5, r1
 8025552:	4602      	mov	r2, r0
 8025554:	460b      	mov	r3, r1
 8025556:	4640      	mov	r0, r8
 8025558:	4649      	mov	r1, r9
 802555a:	f7db f84d 	bl	80005f8 <__aeabi_dmul>
 802555e:	2200      	movs	r2, #0
 8025560:	ec41 0b19 	vmov	d9, r0, r1
 8025564:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8025568:	4620      	mov	r0, r4
 802556a:	4629      	mov	r1, r5
 802556c:	f7da fe8c 	bl	8000288 <__aeabi_dsub>
 8025570:	4602      	mov	r2, r0
 8025572:	460b      	mov	r3, r1
 8025574:	ec51 0b19 	vmov	r0, r1, d9
 8025578:	f7db f968 	bl	800084c <__aeabi_ddiv>
 802557c:	4632      	mov	r2, r6
 802557e:	4604      	mov	r4, r0
 8025580:	460d      	mov	r5, r1
 8025582:	463b      	mov	r3, r7
 8025584:	4640      	mov	r0, r8
 8025586:	4649      	mov	r1, r9
 8025588:	f7db f836 	bl	80005f8 <__aeabi_dmul>
 802558c:	4632      	mov	r2, r6
 802558e:	463b      	mov	r3, r7
 8025590:	f7da fe7c 	bl	800028c <__adddf3>
 8025594:	4602      	mov	r2, r0
 8025596:	460b      	mov	r3, r1
 8025598:	4620      	mov	r0, r4
 802559a:	4629      	mov	r1, r5
 802559c:	f7da fe74 	bl	8000288 <__aeabi_dsub>
 80255a0:	4642      	mov	r2, r8
 80255a2:	464b      	mov	r3, r9
 80255a4:	f7da fe70 	bl	8000288 <__aeabi_dsub>
 80255a8:	460b      	mov	r3, r1
 80255aa:	4602      	mov	r2, r0
 80255ac:	493a      	ldr	r1, [pc, #232]	; (8025698 <__ieee754_pow+0xa48>)
 80255ae:	2000      	movs	r0, #0
 80255b0:	f7da fe6a 	bl	8000288 <__aeabi_dsub>
 80255b4:	ec41 0b10 	vmov	d0, r0, r1
 80255b8:	ee10 3a90 	vmov	r3, s1
 80255bc:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80255c0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80255c4:	da2b      	bge.n	802561e <__ieee754_pow+0x9ce>
 80255c6:	4650      	mov	r0, sl
 80255c8:	f001 f84a 	bl	8026660 <scalbn>
 80255cc:	ec51 0b10 	vmov	r0, r1, d0
 80255d0:	ec53 2b18 	vmov	r2, r3, d8
 80255d4:	f7ff bbed 	b.w	8024db2 <__ieee754_pow+0x162>
 80255d8:	4b30      	ldr	r3, [pc, #192]	; (802569c <__ieee754_pow+0xa4c>)
 80255da:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80255de:	429e      	cmp	r6, r3
 80255e0:	f77f af0c 	ble.w	80253fc <__ieee754_pow+0x7ac>
 80255e4:	4b2e      	ldr	r3, [pc, #184]	; (80256a0 <__ieee754_pow+0xa50>)
 80255e6:	440b      	add	r3, r1
 80255e8:	4303      	orrs	r3, r0
 80255ea:	d009      	beq.n	8025600 <__ieee754_pow+0x9b0>
 80255ec:	ec51 0b18 	vmov	r0, r1, d8
 80255f0:	2200      	movs	r2, #0
 80255f2:	2300      	movs	r3, #0
 80255f4:	f7db fa72 	bl	8000adc <__aeabi_dcmplt>
 80255f8:	3800      	subs	r0, #0
 80255fa:	bf18      	it	ne
 80255fc:	2001      	movne	r0, #1
 80255fe:	e447      	b.n	8024e90 <__ieee754_pow+0x240>
 8025600:	4622      	mov	r2, r4
 8025602:	462b      	mov	r3, r5
 8025604:	f7da fe40 	bl	8000288 <__aeabi_dsub>
 8025608:	4642      	mov	r2, r8
 802560a:	464b      	mov	r3, r9
 802560c:	f7db fa7a 	bl	8000b04 <__aeabi_dcmpge>
 8025610:	2800      	cmp	r0, #0
 8025612:	f43f aef3 	beq.w	80253fc <__ieee754_pow+0x7ac>
 8025616:	e7e9      	b.n	80255ec <__ieee754_pow+0x99c>
 8025618:	f04f 0a00 	mov.w	sl, #0
 802561c:	e71a      	b.n	8025454 <__ieee754_pow+0x804>
 802561e:	ec51 0b10 	vmov	r0, r1, d0
 8025622:	4619      	mov	r1, r3
 8025624:	e7d4      	b.n	80255d0 <__ieee754_pow+0x980>
 8025626:	491c      	ldr	r1, [pc, #112]	; (8025698 <__ieee754_pow+0xa48>)
 8025628:	2000      	movs	r0, #0
 802562a:	f7ff bb30 	b.w	8024c8e <__ieee754_pow+0x3e>
 802562e:	2000      	movs	r0, #0
 8025630:	2100      	movs	r1, #0
 8025632:	f7ff bb2c 	b.w	8024c8e <__ieee754_pow+0x3e>
 8025636:	4630      	mov	r0, r6
 8025638:	4639      	mov	r1, r7
 802563a:	f7ff bb28 	b.w	8024c8e <__ieee754_pow+0x3e>
 802563e:	9204      	str	r2, [sp, #16]
 8025640:	f7ff bb7a 	b.w	8024d38 <__ieee754_pow+0xe8>
 8025644:	2300      	movs	r3, #0
 8025646:	f7ff bb64 	b.w	8024d12 <__ieee754_pow+0xc2>
 802564a:	bf00      	nop
 802564c:	f3af 8000 	nop.w
 8025650:	00000000 	.word	0x00000000
 8025654:	3fe62e43 	.word	0x3fe62e43
 8025658:	fefa39ef 	.word	0xfefa39ef
 802565c:	3fe62e42 	.word	0x3fe62e42
 8025660:	0ca86c39 	.word	0x0ca86c39
 8025664:	be205c61 	.word	0xbe205c61
 8025668:	72bea4d0 	.word	0x72bea4d0
 802566c:	3e663769 	.word	0x3e663769
 8025670:	c5d26bf1 	.word	0xc5d26bf1
 8025674:	3ebbbd41 	.word	0x3ebbbd41
 8025678:	af25de2c 	.word	0xaf25de2c
 802567c:	3f11566a 	.word	0x3f11566a
 8025680:	16bebd93 	.word	0x16bebd93
 8025684:	3f66c16c 	.word	0x3f66c16c
 8025688:	5555553e 	.word	0x5555553e
 802568c:	3fc55555 	.word	0x3fc55555
 8025690:	3fe00000 	.word	0x3fe00000
 8025694:	000fffff 	.word	0x000fffff
 8025698:	3ff00000 	.word	0x3ff00000
 802569c:	4090cbff 	.word	0x4090cbff
 80256a0:	3f6f3400 	.word	0x3f6f3400
 80256a4:	652b82fe 	.word	0x652b82fe
 80256a8:	3c971547 	.word	0x3c971547
 80256ac:	00000000 	.word	0x00000000

080256b0 <__ieee754_rem_pio2>:
 80256b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80256b4:	ed2d 8b02 	vpush	{d8}
 80256b8:	ec55 4b10 	vmov	r4, r5, d0
 80256bc:	4bca      	ldr	r3, [pc, #808]	; (80259e8 <__ieee754_rem_pio2+0x338>)
 80256be:	b08b      	sub	sp, #44	; 0x2c
 80256c0:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80256c4:	4598      	cmp	r8, r3
 80256c6:	4682      	mov	sl, r0
 80256c8:	9502      	str	r5, [sp, #8]
 80256ca:	dc08      	bgt.n	80256de <__ieee754_rem_pio2+0x2e>
 80256cc:	2200      	movs	r2, #0
 80256ce:	2300      	movs	r3, #0
 80256d0:	ed80 0b00 	vstr	d0, [r0]
 80256d4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80256d8:	f04f 0b00 	mov.w	fp, #0
 80256dc:	e028      	b.n	8025730 <__ieee754_rem_pio2+0x80>
 80256de:	4bc3      	ldr	r3, [pc, #780]	; (80259ec <__ieee754_rem_pio2+0x33c>)
 80256e0:	4598      	cmp	r8, r3
 80256e2:	dc78      	bgt.n	80257d6 <__ieee754_rem_pio2+0x126>
 80256e4:	9b02      	ldr	r3, [sp, #8]
 80256e6:	4ec2      	ldr	r6, [pc, #776]	; (80259f0 <__ieee754_rem_pio2+0x340>)
 80256e8:	2b00      	cmp	r3, #0
 80256ea:	ee10 0a10 	vmov	r0, s0
 80256ee:	a3b0      	add	r3, pc, #704	; (adr r3, 80259b0 <__ieee754_rem_pio2+0x300>)
 80256f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80256f4:	4629      	mov	r1, r5
 80256f6:	dd39      	ble.n	802576c <__ieee754_rem_pio2+0xbc>
 80256f8:	f7da fdc6 	bl	8000288 <__aeabi_dsub>
 80256fc:	45b0      	cmp	r8, r6
 80256fe:	4604      	mov	r4, r0
 8025700:	460d      	mov	r5, r1
 8025702:	d01b      	beq.n	802573c <__ieee754_rem_pio2+0x8c>
 8025704:	a3ac      	add	r3, pc, #688	; (adr r3, 80259b8 <__ieee754_rem_pio2+0x308>)
 8025706:	e9d3 2300 	ldrd	r2, r3, [r3]
 802570a:	f7da fdbd 	bl	8000288 <__aeabi_dsub>
 802570e:	4602      	mov	r2, r0
 8025710:	460b      	mov	r3, r1
 8025712:	e9ca 2300 	strd	r2, r3, [sl]
 8025716:	4620      	mov	r0, r4
 8025718:	4629      	mov	r1, r5
 802571a:	f7da fdb5 	bl	8000288 <__aeabi_dsub>
 802571e:	a3a6      	add	r3, pc, #664	; (adr r3, 80259b8 <__ieee754_rem_pio2+0x308>)
 8025720:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025724:	f7da fdb0 	bl	8000288 <__aeabi_dsub>
 8025728:	e9ca 0102 	strd	r0, r1, [sl, #8]
 802572c:	f04f 0b01 	mov.w	fp, #1
 8025730:	4658      	mov	r0, fp
 8025732:	b00b      	add	sp, #44	; 0x2c
 8025734:	ecbd 8b02 	vpop	{d8}
 8025738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802573c:	a3a0      	add	r3, pc, #640	; (adr r3, 80259c0 <__ieee754_rem_pio2+0x310>)
 802573e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025742:	f7da fda1 	bl	8000288 <__aeabi_dsub>
 8025746:	a3a0      	add	r3, pc, #640	; (adr r3, 80259c8 <__ieee754_rem_pio2+0x318>)
 8025748:	e9d3 2300 	ldrd	r2, r3, [r3]
 802574c:	4604      	mov	r4, r0
 802574e:	460d      	mov	r5, r1
 8025750:	f7da fd9a 	bl	8000288 <__aeabi_dsub>
 8025754:	4602      	mov	r2, r0
 8025756:	460b      	mov	r3, r1
 8025758:	e9ca 2300 	strd	r2, r3, [sl]
 802575c:	4620      	mov	r0, r4
 802575e:	4629      	mov	r1, r5
 8025760:	f7da fd92 	bl	8000288 <__aeabi_dsub>
 8025764:	a398      	add	r3, pc, #608	; (adr r3, 80259c8 <__ieee754_rem_pio2+0x318>)
 8025766:	e9d3 2300 	ldrd	r2, r3, [r3]
 802576a:	e7db      	b.n	8025724 <__ieee754_rem_pio2+0x74>
 802576c:	f7da fd8e 	bl	800028c <__adddf3>
 8025770:	45b0      	cmp	r8, r6
 8025772:	4604      	mov	r4, r0
 8025774:	460d      	mov	r5, r1
 8025776:	d016      	beq.n	80257a6 <__ieee754_rem_pio2+0xf6>
 8025778:	a38f      	add	r3, pc, #572	; (adr r3, 80259b8 <__ieee754_rem_pio2+0x308>)
 802577a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802577e:	f7da fd85 	bl	800028c <__adddf3>
 8025782:	4602      	mov	r2, r0
 8025784:	460b      	mov	r3, r1
 8025786:	e9ca 2300 	strd	r2, r3, [sl]
 802578a:	4620      	mov	r0, r4
 802578c:	4629      	mov	r1, r5
 802578e:	f7da fd7b 	bl	8000288 <__aeabi_dsub>
 8025792:	a389      	add	r3, pc, #548	; (adr r3, 80259b8 <__ieee754_rem_pio2+0x308>)
 8025794:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025798:	f7da fd78 	bl	800028c <__adddf3>
 802579c:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 80257a0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80257a4:	e7c4      	b.n	8025730 <__ieee754_rem_pio2+0x80>
 80257a6:	a386      	add	r3, pc, #536	; (adr r3, 80259c0 <__ieee754_rem_pio2+0x310>)
 80257a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80257ac:	f7da fd6e 	bl	800028c <__adddf3>
 80257b0:	a385      	add	r3, pc, #532	; (adr r3, 80259c8 <__ieee754_rem_pio2+0x318>)
 80257b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80257b6:	4604      	mov	r4, r0
 80257b8:	460d      	mov	r5, r1
 80257ba:	f7da fd67 	bl	800028c <__adddf3>
 80257be:	4602      	mov	r2, r0
 80257c0:	460b      	mov	r3, r1
 80257c2:	e9ca 2300 	strd	r2, r3, [sl]
 80257c6:	4620      	mov	r0, r4
 80257c8:	4629      	mov	r1, r5
 80257ca:	f7da fd5d 	bl	8000288 <__aeabi_dsub>
 80257ce:	a37e      	add	r3, pc, #504	; (adr r3, 80259c8 <__ieee754_rem_pio2+0x318>)
 80257d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80257d4:	e7e0      	b.n	8025798 <__ieee754_rem_pio2+0xe8>
 80257d6:	4b87      	ldr	r3, [pc, #540]	; (80259f4 <__ieee754_rem_pio2+0x344>)
 80257d8:	4598      	cmp	r8, r3
 80257da:	f300 80d9 	bgt.w	8025990 <__ieee754_rem_pio2+0x2e0>
 80257de:	f7fe fd83 	bl	80242e8 <fabs>
 80257e2:	ec55 4b10 	vmov	r4, r5, d0
 80257e6:	ee10 0a10 	vmov	r0, s0
 80257ea:	a379      	add	r3, pc, #484	; (adr r3, 80259d0 <__ieee754_rem_pio2+0x320>)
 80257ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80257f0:	4629      	mov	r1, r5
 80257f2:	f7da ff01 	bl	80005f8 <__aeabi_dmul>
 80257f6:	4b80      	ldr	r3, [pc, #512]	; (80259f8 <__ieee754_rem_pio2+0x348>)
 80257f8:	2200      	movs	r2, #0
 80257fa:	f7da fd47 	bl	800028c <__adddf3>
 80257fe:	f7db f9ab 	bl	8000b58 <__aeabi_d2iz>
 8025802:	4683      	mov	fp, r0
 8025804:	f7da fe8e 	bl	8000524 <__aeabi_i2d>
 8025808:	4602      	mov	r2, r0
 802580a:	460b      	mov	r3, r1
 802580c:	ec43 2b18 	vmov	d8, r2, r3
 8025810:	a367      	add	r3, pc, #412	; (adr r3, 80259b0 <__ieee754_rem_pio2+0x300>)
 8025812:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025816:	f7da feef 	bl	80005f8 <__aeabi_dmul>
 802581a:	4602      	mov	r2, r0
 802581c:	460b      	mov	r3, r1
 802581e:	4620      	mov	r0, r4
 8025820:	4629      	mov	r1, r5
 8025822:	f7da fd31 	bl	8000288 <__aeabi_dsub>
 8025826:	a364      	add	r3, pc, #400	; (adr r3, 80259b8 <__ieee754_rem_pio2+0x308>)
 8025828:	e9d3 2300 	ldrd	r2, r3, [r3]
 802582c:	4606      	mov	r6, r0
 802582e:	460f      	mov	r7, r1
 8025830:	ec51 0b18 	vmov	r0, r1, d8
 8025834:	f7da fee0 	bl	80005f8 <__aeabi_dmul>
 8025838:	f1bb 0f1f 	cmp.w	fp, #31
 802583c:	4604      	mov	r4, r0
 802583e:	460d      	mov	r5, r1
 8025840:	dc0d      	bgt.n	802585e <__ieee754_rem_pio2+0x1ae>
 8025842:	4b6e      	ldr	r3, [pc, #440]	; (80259fc <__ieee754_rem_pio2+0x34c>)
 8025844:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
 8025848:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802584c:	4543      	cmp	r3, r8
 802584e:	d006      	beq.n	802585e <__ieee754_rem_pio2+0x1ae>
 8025850:	4622      	mov	r2, r4
 8025852:	462b      	mov	r3, r5
 8025854:	4630      	mov	r0, r6
 8025856:	4639      	mov	r1, r7
 8025858:	f7da fd16 	bl	8000288 <__aeabi_dsub>
 802585c:	e00f      	b.n	802587e <__ieee754_rem_pio2+0x1ce>
 802585e:	462b      	mov	r3, r5
 8025860:	4622      	mov	r2, r4
 8025862:	4630      	mov	r0, r6
 8025864:	4639      	mov	r1, r7
 8025866:	f7da fd0f 	bl	8000288 <__aeabi_dsub>
 802586a:	ea4f 5328 	mov.w	r3, r8, asr #20
 802586e:	9303      	str	r3, [sp, #12]
 8025870:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8025874:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8025878:	f1b8 0f10 	cmp.w	r8, #16
 802587c:	dc02      	bgt.n	8025884 <__ieee754_rem_pio2+0x1d4>
 802587e:	e9ca 0100 	strd	r0, r1, [sl]
 8025882:	e039      	b.n	80258f8 <__ieee754_rem_pio2+0x248>
 8025884:	a34e      	add	r3, pc, #312	; (adr r3, 80259c0 <__ieee754_rem_pio2+0x310>)
 8025886:	e9d3 2300 	ldrd	r2, r3, [r3]
 802588a:	ec51 0b18 	vmov	r0, r1, d8
 802588e:	f7da feb3 	bl	80005f8 <__aeabi_dmul>
 8025892:	4604      	mov	r4, r0
 8025894:	460d      	mov	r5, r1
 8025896:	4602      	mov	r2, r0
 8025898:	460b      	mov	r3, r1
 802589a:	4630      	mov	r0, r6
 802589c:	4639      	mov	r1, r7
 802589e:	f7da fcf3 	bl	8000288 <__aeabi_dsub>
 80258a2:	4602      	mov	r2, r0
 80258a4:	460b      	mov	r3, r1
 80258a6:	4680      	mov	r8, r0
 80258a8:	4689      	mov	r9, r1
 80258aa:	4630      	mov	r0, r6
 80258ac:	4639      	mov	r1, r7
 80258ae:	f7da fceb 	bl	8000288 <__aeabi_dsub>
 80258b2:	4622      	mov	r2, r4
 80258b4:	462b      	mov	r3, r5
 80258b6:	f7da fce7 	bl	8000288 <__aeabi_dsub>
 80258ba:	a343      	add	r3, pc, #268	; (adr r3, 80259c8 <__ieee754_rem_pio2+0x318>)
 80258bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80258c0:	4604      	mov	r4, r0
 80258c2:	460d      	mov	r5, r1
 80258c4:	ec51 0b18 	vmov	r0, r1, d8
 80258c8:	f7da fe96 	bl	80005f8 <__aeabi_dmul>
 80258cc:	4622      	mov	r2, r4
 80258ce:	462b      	mov	r3, r5
 80258d0:	f7da fcda 	bl	8000288 <__aeabi_dsub>
 80258d4:	4602      	mov	r2, r0
 80258d6:	460b      	mov	r3, r1
 80258d8:	4604      	mov	r4, r0
 80258da:	460d      	mov	r5, r1
 80258dc:	4640      	mov	r0, r8
 80258de:	4649      	mov	r1, r9
 80258e0:	f7da fcd2 	bl	8000288 <__aeabi_dsub>
 80258e4:	9a03      	ldr	r2, [sp, #12]
 80258e6:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80258ea:	1ad3      	subs	r3, r2, r3
 80258ec:	2b31      	cmp	r3, #49	; 0x31
 80258ee:	dc24      	bgt.n	802593a <__ieee754_rem_pio2+0x28a>
 80258f0:	e9ca 0100 	strd	r0, r1, [sl]
 80258f4:	4646      	mov	r6, r8
 80258f6:	464f      	mov	r7, r9
 80258f8:	e9da 8900 	ldrd	r8, r9, [sl]
 80258fc:	4630      	mov	r0, r6
 80258fe:	4642      	mov	r2, r8
 8025900:	464b      	mov	r3, r9
 8025902:	4639      	mov	r1, r7
 8025904:	f7da fcc0 	bl	8000288 <__aeabi_dsub>
 8025908:	462b      	mov	r3, r5
 802590a:	4622      	mov	r2, r4
 802590c:	f7da fcbc 	bl	8000288 <__aeabi_dsub>
 8025910:	9b02      	ldr	r3, [sp, #8]
 8025912:	2b00      	cmp	r3, #0
 8025914:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8025918:	f6bf af0a 	bge.w	8025730 <__ieee754_rem_pio2+0x80>
 802591c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8025920:	f8ca 3004 	str.w	r3, [sl, #4]
 8025924:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8025928:	f8ca 8000 	str.w	r8, [sl]
 802592c:	f8ca 0008 	str.w	r0, [sl, #8]
 8025930:	f8ca 300c 	str.w	r3, [sl, #12]
 8025934:	f1cb 0b00 	rsb	fp, fp, #0
 8025938:	e6fa      	b.n	8025730 <__ieee754_rem_pio2+0x80>
 802593a:	a327      	add	r3, pc, #156	; (adr r3, 80259d8 <__ieee754_rem_pio2+0x328>)
 802593c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025940:	ec51 0b18 	vmov	r0, r1, d8
 8025944:	f7da fe58 	bl	80005f8 <__aeabi_dmul>
 8025948:	4604      	mov	r4, r0
 802594a:	460d      	mov	r5, r1
 802594c:	4602      	mov	r2, r0
 802594e:	460b      	mov	r3, r1
 8025950:	4640      	mov	r0, r8
 8025952:	4649      	mov	r1, r9
 8025954:	f7da fc98 	bl	8000288 <__aeabi_dsub>
 8025958:	4602      	mov	r2, r0
 802595a:	460b      	mov	r3, r1
 802595c:	4606      	mov	r6, r0
 802595e:	460f      	mov	r7, r1
 8025960:	4640      	mov	r0, r8
 8025962:	4649      	mov	r1, r9
 8025964:	f7da fc90 	bl	8000288 <__aeabi_dsub>
 8025968:	4622      	mov	r2, r4
 802596a:	462b      	mov	r3, r5
 802596c:	f7da fc8c 	bl	8000288 <__aeabi_dsub>
 8025970:	a31b      	add	r3, pc, #108	; (adr r3, 80259e0 <__ieee754_rem_pio2+0x330>)
 8025972:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025976:	4604      	mov	r4, r0
 8025978:	460d      	mov	r5, r1
 802597a:	ec51 0b18 	vmov	r0, r1, d8
 802597e:	f7da fe3b 	bl	80005f8 <__aeabi_dmul>
 8025982:	4622      	mov	r2, r4
 8025984:	462b      	mov	r3, r5
 8025986:	f7da fc7f 	bl	8000288 <__aeabi_dsub>
 802598a:	4604      	mov	r4, r0
 802598c:	460d      	mov	r5, r1
 802598e:	e75f      	b.n	8025850 <__ieee754_rem_pio2+0x1a0>
 8025990:	4b1b      	ldr	r3, [pc, #108]	; (8025a00 <__ieee754_rem_pio2+0x350>)
 8025992:	4598      	cmp	r8, r3
 8025994:	dd36      	ble.n	8025a04 <__ieee754_rem_pio2+0x354>
 8025996:	ee10 2a10 	vmov	r2, s0
 802599a:	462b      	mov	r3, r5
 802599c:	4620      	mov	r0, r4
 802599e:	4629      	mov	r1, r5
 80259a0:	f7da fc72 	bl	8000288 <__aeabi_dsub>
 80259a4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80259a8:	e9ca 0100 	strd	r0, r1, [sl]
 80259ac:	e694      	b.n	80256d8 <__ieee754_rem_pio2+0x28>
 80259ae:	bf00      	nop
 80259b0:	54400000 	.word	0x54400000
 80259b4:	3ff921fb 	.word	0x3ff921fb
 80259b8:	1a626331 	.word	0x1a626331
 80259bc:	3dd0b461 	.word	0x3dd0b461
 80259c0:	1a600000 	.word	0x1a600000
 80259c4:	3dd0b461 	.word	0x3dd0b461
 80259c8:	2e037073 	.word	0x2e037073
 80259cc:	3ba3198a 	.word	0x3ba3198a
 80259d0:	6dc9c883 	.word	0x6dc9c883
 80259d4:	3fe45f30 	.word	0x3fe45f30
 80259d8:	2e000000 	.word	0x2e000000
 80259dc:	3ba3198a 	.word	0x3ba3198a
 80259e0:	252049c1 	.word	0x252049c1
 80259e4:	397b839a 	.word	0x397b839a
 80259e8:	3fe921fb 	.word	0x3fe921fb
 80259ec:	4002d97b 	.word	0x4002d97b
 80259f0:	3ff921fb 	.word	0x3ff921fb
 80259f4:	413921fb 	.word	0x413921fb
 80259f8:	3fe00000 	.word	0x3fe00000
 80259fc:	08027570 	.word	0x08027570
 8025a00:	7fefffff 	.word	0x7fefffff
 8025a04:	ea4f 5428 	mov.w	r4, r8, asr #20
 8025a08:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8025a0c:	ee10 0a10 	vmov	r0, s0
 8025a10:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8025a14:	ee10 6a10 	vmov	r6, s0
 8025a18:	460f      	mov	r7, r1
 8025a1a:	f7db f89d 	bl	8000b58 <__aeabi_d2iz>
 8025a1e:	f7da fd81 	bl	8000524 <__aeabi_i2d>
 8025a22:	4602      	mov	r2, r0
 8025a24:	460b      	mov	r3, r1
 8025a26:	4630      	mov	r0, r6
 8025a28:	4639      	mov	r1, r7
 8025a2a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8025a2e:	f7da fc2b 	bl	8000288 <__aeabi_dsub>
 8025a32:	4b23      	ldr	r3, [pc, #140]	; (8025ac0 <__ieee754_rem_pio2+0x410>)
 8025a34:	2200      	movs	r2, #0
 8025a36:	f7da fddf 	bl	80005f8 <__aeabi_dmul>
 8025a3a:	460f      	mov	r7, r1
 8025a3c:	4606      	mov	r6, r0
 8025a3e:	f7db f88b 	bl	8000b58 <__aeabi_d2iz>
 8025a42:	f7da fd6f 	bl	8000524 <__aeabi_i2d>
 8025a46:	4602      	mov	r2, r0
 8025a48:	460b      	mov	r3, r1
 8025a4a:	4630      	mov	r0, r6
 8025a4c:	4639      	mov	r1, r7
 8025a4e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025a52:	f7da fc19 	bl	8000288 <__aeabi_dsub>
 8025a56:	4b1a      	ldr	r3, [pc, #104]	; (8025ac0 <__ieee754_rem_pio2+0x410>)
 8025a58:	2200      	movs	r2, #0
 8025a5a:	f7da fdcd 	bl	80005f8 <__aeabi_dmul>
 8025a5e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8025a62:	ad04      	add	r5, sp, #16
 8025a64:	f04f 0803 	mov.w	r8, #3
 8025a68:	46a9      	mov	r9, r5
 8025a6a:	2600      	movs	r6, #0
 8025a6c:	2700      	movs	r7, #0
 8025a6e:	4632      	mov	r2, r6
 8025a70:	463b      	mov	r3, r7
 8025a72:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8025a76:	46c3      	mov	fp, r8
 8025a78:	3d08      	subs	r5, #8
 8025a7a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8025a7e:	f7db f823 	bl	8000ac8 <__aeabi_dcmpeq>
 8025a82:	2800      	cmp	r0, #0
 8025a84:	d1f3      	bne.n	8025a6e <__ieee754_rem_pio2+0x3be>
 8025a86:	4b0f      	ldr	r3, [pc, #60]	; (8025ac4 <__ieee754_rem_pio2+0x414>)
 8025a88:	9301      	str	r3, [sp, #4]
 8025a8a:	2302      	movs	r3, #2
 8025a8c:	9300      	str	r3, [sp, #0]
 8025a8e:	4622      	mov	r2, r4
 8025a90:	465b      	mov	r3, fp
 8025a92:	4651      	mov	r1, sl
 8025a94:	4648      	mov	r0, r9
 8025a96:	f000 f997 	bl	8025dc8 <__kernel_rem_pio2>
 8025a9a:	9b02      	ldr	r3, [sp, #8]
 8025a9c:	2b00      	cmp	r3, #0
 8025a9e:	4683      	mov	fp, r0
 8025aa0:	f6bf ae46 	bge.w	8025730 <__ieee754_rem_pio2+0x80>
 8025aa4:	e9da 2100 	ldrd	r2, r1, [sl]
 8025aa8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8025aac:	e9ca 2300 	strd	r2, r3, [sl]
 8025ab0:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8025ab4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8025ab8:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8025abc:	e73a      	b.n	8025934 <__ieee754_rem_pio2+0x284>
 8025abe:	bf00      	nop
 8025ac0:	41700000 	.word	0x41700000
 8025ac4:	080275f0 	.word	0x080275f0

08025ac8 <__ieee754_sqrt>:
 8025ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025acc:	ec55 4b10 	vmov	r4, r5, d0
 8025ad0:	4e55      	ldr	r6, [pc, #340]	; (8025c28 <__ieee754_sqrt+0x160>)
 8025ad2:	43ae      	bics	r6, r5
 8025ad4:	ee10 0a10 	vmov	r0, s0
 8025ad8:	ee10 3a10 	vmov	r3, s0
 8025adc:	462a      	mov	r2, r5
 8025ade:	4629      	mov	r1, r5
 8025ae0:	d110      	bne.n	8025b04 <__ieee754_sqrt+0x3c>
 8025ae2:	ee10 2a10 	vmov	r2, s0
 8025ae6:	462b      	mov	r3, r5
 8025ae8:	f7da fd86 	bl	80005f8 <__aeabi_dmul>
 8025aec:	4602      	mov	r2, r0
 8025aee:	460b      	mov	r3, r1
 8025af0:	4620      	mov	r0, r4
 8025af2:	4629      	mov	r1, r5
 8025af4:	f7da fbca 	bl	800028c <__adddf3>
 8025af8:	4604      	mov	r4, r0
 8025afa:	460d      	mov	r5, r1
 8025afc:	ec45 4b10 	vmov	d0, r4, r5
 8025b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b04:	2d00      	cmp	r5, #0
 8025b06:	dc10      	bgt.n	8025b2a <__ieee754_sqrt+0x62>
 8025b08:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8025b0c:	4330      	orrs	r0, r6
 8025b0e:	d0f5      	beq.n	8025afc <__ieee754_sqrt+0x34>
 8025b10:	b15d      	cbz	r5, 8025b2a <__ieee754_sqrt+0x62>
 8025b12:	ee10 2a10 	vmov	r2, s0
 8025b16:	462b      	mov	r3, r5
 8025b18:	ee10 0a10 	vmov	r0, s0
 8025b1c:	f7da fbb4 	bl	8000288 <__aeabi_dsub>
 8025b20:	4602      	mov	r2, r0
 8025b22:	460b      	mov	r3, r1
 8025b24:	f7da fe92 	bl	800084c <__aeabi_ddiv>
 8025b28:	e7e6      	b.n	8025af8 <__ieee754_sqrt+0x30>
 8025b2a:	1512      	asrs	r2, r2, #20
 8025b2c:	d074      	beq.n	8025c18 <__ieee754_sqrt+0x150>
 8025b2e:	07d4      	lsls	r4, r2, #31
 8025b30:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8025b34:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 8025b38:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8025b3c:	bf5e      	ittt	pl
 8025b3e:	0fda      	lsrpl	r2, r3, #31
 8025b40:	005b      	lslpl	r3, r3, #1
 8025b42:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 8025b46:	2400      	movs	r4, #0
 8025b48:	0fda      	lsrs	r2, r3, #31
 8025b4a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8025b4e:	107f      	asrs	r7, r7, #1
 8025b50:	005b      	lsls	r3, r3, #1
 8025b52:	2516      	movs	r5, #22
 8025b54:	4620      	mov	r0, r4
 8025b56:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8025b5a:	1886      	adds	r6, r0, r2
 8025b5c:	428e      	cmp	r6, r1
 8025b5e:	bfde      	ittt	le
 8025b60:	1b89      	suble	r1, r1, r6
 8025b62:	18b0      	addle	r0, r6, r2
 8025b64:	18a4      	addle	r4, r4, r2
 8025b66:	0049      	lsls	r1, r1, #1
 8025b68:	3d01      	subs	r5, #1
 8025b6a:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8025b6e:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8025b72:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8025b76:	d1f0      	bne.n	8025b5a <__ieee754_sqrt+0x92>
 8025b78:	462a      	mov	r2, r5
 8025b7a:	f04f 0e20 	mov.w	lr, #32
 8025b7e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8025b82:	4281      	cmp	r1, r0
 8025b84:	eb06 0c05 	add.w	ip, r6, r5
 8025b88:	dc02      	bgt.n	8025b90 <__ieee754_sqrt+0xc8>
 8025b8a:	d113      	bne.n	8025bb4 <__ieee754_sqrt+0xec>
 8025b8c:	459c      	cmp	ip, r3
 8025b8e:	d811      	bhi.n	8025bb4 <__ieee754_sqrt+0xec>
 8025b90:	f1bc 0f00 	cmp.w	ip, #0
 8025b94:	eb0c 0506 	add.w	r5, ip, r6
 8025b98:	da43      	bge.n	8025c22 <__ieee754_sqrt+0x15a>
 8025b9a:	2d00      	cmp	r5, #0
 8025b9c:	db41      	blt.n	8025c22 <__ieee754_sqrt+0x15a>
 8025b9e:	f100 0801 	add.w	r8, r0, #1
 8025ba2:	1a09      	subs	r1, r1, r0
 8025ba4:	459c      	cmp	ip, r3
 8025ba6:	bf88      	it	hi
 8025ba8:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 8025bac:	eba3 030c 	sub.w	r3, r3, ip
 8025bb0:	4432      	add	r2, r6
 8025bb2:	4640      	mov	r0, r8
 8025bb4:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 8025bb8:	f1be 0e01 	subs.w	lr, lr, #1
 8025bbc:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8025bc0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8025bc4:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8025bc8:	d1db      	bne.n	8025b82 <__ieee754_sqrt+0xba>
 8025bca:	430b      	orrs	r3, r1
 8025bcc:	d006      	beq.n	8025bdc <__ieee754_sqrt+0x114>
 8025bce:	1c50      	adds	r0, r2, #1
 8025bd0:	bf13      	iteet	ne
 8025bd2:	3201      	addne	r2, #1
 8025bd4:	3401      	addeq	r4, #1
 8025bd6:	4672      	moveq	r2, lr
 8025bd8:	f022 0201 	bicne.w	r2, r2, #1
 8025bdc:	1063      	asrs	r3, r4, #1
 8025bde:	0852      	lsrs	r2, r2, #1
 8025be0:	07e1      	lsls	r1, r4, #31
 8025be2:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8025be6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8025bea:	bf48      	it	mi
 8025bec:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8025bf0:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 8025bf4:	4614      	mov	r4, r2
 8025bf6:	e781      	b.n	8025afc <__ieee754_sqrt+0x34>
 8025bf8:	0ad9      	lsrs	r1, r3, #11
 8025bfa:	3815      	subs	r0, #21
 8025bfc:	055b      	lsls	r3, r3, #21
 8025bfe:	2900      	cmp	r1, #0
 8025c00:	d0fa      	beq.n	8025bf8 <__ieee754_sqrt+0x130>
 8025c02:	02cd      	lsls	r5, r1, #11
 8025c04:	d50a      	bpl.n	8025c1c <__ieee754_sqrt+0x154>
 8025c06:	f1c2 0420 	rsb	r4, r2, #32
 8025c0a:	fa23 f404 	lsr.w	r4, r3, r4
 8025c0e:	1e55      	subs	r5, r2, #1
 8025c10:	4093      	lsls	r3, r2
 8025c12:	4321      	orrs	r1, r4
 8025c14:	1b42      	subs	r2, r0, r5
 8025c16:	e78a      	b.n	8025b2e <__ieee754_sqrt+0x66>
 8025c18:	4610      	mov	r0, r2
 8025c1a:	e7f0      	b.n	8025bfe <__ieee754_sqrt+0x136>
 8025c1c:	0049      	lsls	r1, r1, #1
 8025c1e:	3201      	adds	r2, #1
 8025c20:	e7ef      	b.n	8025c02 <__ieee754_sqrt+0x13a>
 8025c22:	4680      	mov	r8, r0
 8025c24:	e7bd      	b.n	8025ba2 <__ieee754_sqrt+0xda>
 8025c26:	bf00      	nop
 8025c28:	7ff00000 	.word	0x7ff00000

08025c2c <__ieee754_sqrtf>:
 8025c2c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8025c30:	4770      	bx	lr
 8025c32:	0000      	movs	r0, r0
 8025c34:	0000      	movs	r0, r0
	...

08025c38 <__kernel_cos>:
 8025c38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c3c:	ec57 6b10 	vmov	r6, r7, d0
 8025c40:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8025c44:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8025c48:	ed8d 1b00 	vstr	d1, [sp]
 8025c4c:	da07      	bge.n	8025c5e <__kernel_cos+0x26>
 8025c4e:	ee10 0a10 	vmov	r0, s0
 8025c52:	4639      	mov	r1, r7
 8025c54:	f7da ff80 	bl	8000b58 <__aeabi_d2iz>
 8025c58:	2800      	cmp	r0, #0
 8025c5a:	f000 8088 	beq.w	8025d6e <__kernel_cos+0x136>
 8025c5e:	4632      	mov	r2, r6
 8025c60:	463b      	mov	r3, r7
 8025c62:	4630      	mov	r0, r6
 8025c64:	4639      	mov	r1, r7
 8025c66:	f7da fcc7 	bl	80005f8 <__aeabi_dmul>
 8025c6a:	4b51      	ldr	r3, [pc, #324]	; (8025db0 <__kernel_cos+0x178>)
 8025c6c:	2200      	movs	r2, #0
 8025c6e:	4604      	mov	r4, r0
 8025c70:	460d      	mov	r5, r1
 8025c72:	f7da fcc1 	bl	80005f8 <__aeabi_dmul>
 8025c76:	a340      	add	r3, pc, #256	; (adr r3, 8025d78 <__kernel_cos+0x140>)
 8025c78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025c7c:	4682      	mov	sl, r0
 8025c7e:	468b      	mov	fp, r1
 8025c80:	4620      	mov	r0, r4
 8025c82:	4629      	mov	r1, r5
 8025c84:	f7da fcb8 	bl	80005f8 <__aeabi_dmul>
 8025c88:	a33d      	add	r3, pc, #244	; (adr r3, 8025d80 <__kernel_cos+0x148>)
 8025c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025c8e:	f7da fafd 	bl	800028c <__adddf3>
 8025c92:	4622      	mov	r2, r4
 8025c94:	462b      	mov	r3, r5
 8025c96:	f7da fcaf 	bl	80005f8 <__aeabi_dmul>
 8025c9a:	a33b      	add	r3, pc, #236	; (adr r3, 8025d88 <__kernel_cos+0x150>)
 8025c9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025ca0:	f7da faf2 	bl	8000288 <__aeabi_dsub>
 8025ca4:	4622      	mov	r2, r4
 8025ca6:	462b      	mov	r3, r5
 8025ca8:	f7da fca6 	bl	80005f8 <__aeabi_dmul>
 8025cac:	a338      	add	r3, pc, #224	; (adr r3, 8025d90 <__kernel_cos+0x158>)
 8025cae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025cb2:	f7da faeb 	bl	800028c <__adddf3>
 8025cb6:	4622      	mov	r2, r4
 8025cb8:	462b      	mov	r3, r5
 8025cba:	f7da fc9d 	bl	80005f8 <__aeabi_dmul>
 8025cbe:	a336      	add	r3, pc, #216	; (adr r3, 8025d98 <__kernel_cos+0x160>)
 8025cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025cc4:	f7da fae0 	bl	8000288 <__aeabi_dsub>
 8025cc8:	4622      	mov	r2, r4
 8025cca:	462b      	mov	r3, r5
 8025ccc:	f7da fc94 	bl	80005f8 <__aeabi_dmul>
 8025cd0:	a333      	add	r3, pc, #204	; (adr r3, 8025da0 <__kernel_cos+0x168>)
 8025cd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025cd6:	f7da fad9 	bl	800028c <__adddf3>
 8025cda:	4622      	mov	r2, r4
 8025cdc:	462b      	mov	r3, r5
 8025cde:	f7da fc8b 	bl	80005f8 <__aeabi_dmul>
 8025ce2:	4622      	mov	r2, r4
 8025ce4:	462b      	mov	r3, r5
 8025ce6:	f7da fc87 	bl	80005f8 <__aeabi_dmul>
 8025cea:	e9dd 2300 	ldrd	r2, r3, [sp]
 8025cee:	4604      	mov	r4, r0
 8025cf0:	460d      	mov	r5, r1
 8025cf2:	4630      	mov	r0, r6
 8025cf4:	4639      	mov	r1, r7
 8025cf6:	f7da fc7f 	bl	80005f8 <__aeabi_dmul>
 8025cfa:	460b      	mov	r3, r1
 8025cfc:	4602      	mov	r2, r0
 8025cfe:	4629      	mov	r1, r5
 8025d00:	4620      	mov	r0, r4
 8025d02:	f7da fac1 	bl	8000288 <__aeabi_dsub>
 8025d06:	4b2b      	ldr	r3, [pc, #172]	; (8025db4 <__kernel_cos+0x17c>)
 8025d08:	4598      	cmp	r8, r3
 8025d0a:	4606      	mov	r6, r0
 8025d0c:	460f      	mov	r7, r1
 8025d0e:	dc10      	bgt.n	8025d32 <__kernel_cos+0xfa>
 8025d10:	4602      	mov	r2, r0
 8025d12:	460b      	mov	r3, r1
 8025d14:	4650      	mov	r0, sl
 8025d16:	4659      	mov	r1, fp
 8025d18:	f7da fab6 	bl	8000288 <__aeabi_dsub>
 8025d1c:	460b      	mov	r3, r1
 8025d1e:	4926      	ldr	r1, [pc, #152]	; (8025db8 <__kernel_cos+0x180>)
 8025d20:	4602      	mov	r2, r0
 8025d22:	2000      	movs	r0, #0
 8025d24:	f7da fab0 	bl	8000288 <__aeabi_dsub>
 8025d28:	ec41 0b10 	vmov	d0, r0, r1
 8025d2c:	b003      	add	sp, #12
 8025d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d32:	4b22      	ldr	r3, [pc, #136]	; (8025dbc <__kernel_cos+0x184>)
 8025d34:	4920      	ldr	r1, [pc, #128]	; (8025db8 <__kernel_cos+0x180>)
 8025d36:	4598      	cmp	r8, r3
 8025d38:	bfcc      	ite	gt
 8025d3a:	4d21      	ldrgt	r5, [pc, #132]	; (8025dc0 <__kernel_cos+0x188>)
 8025d3c:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8025d40:	2400      	movs	r4, #0
 8025d42:	4622      	mov	r2, r4
 8025d44:	462b      	mov	r3, r5
 8025d46:	2000      	movs	r0, #0
 8025d48:	f7da fa9e 	bl	8000288 <__aeabi_dsub>
 8025d4c:	4622      	mov	r2, r4
 8025d4e:	4680      	mov	r8, r0
 8025d50:	4689      	mov	r9, r1
 8025d52:	462b      	mov	r3, r5
 8025d54:	4650      	mov	r0, sl
 8025d56:	4659      	mov	r1, fp
 8025d58:	f7da fa96 	bl	8000288 <__aeabi_dsub>
 8025d5c:	4632      	mov	r2, r6
 8025d5e:	463b      	mov	r3, r7
 8025d60:	f7da fa92 	bl	8000288 <__aeabi_dsub>
 8025d64:	4602      	mov	r2, r0
 8025d66:	460b      	mov	r3, r1
 8025d68:	4640      	mov	r0, r8
 8025d6a:	4649      	mov	r1, r9
 8025d6c:	e7da      	b.n	8025d24 <__kernel_cos+0xec>
 8025d6e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8025da8 <__kernel_cos+0x170>
 8025d72:	e7db      	b.n	8025d2c <__kernel_cos+0xf4>
 8025d74:	f3af 8000 	nop.w
 8025d78:	be8838d4 	.word	0xbe8838d4
 8025d7c:	bda8fae9 	.word	0xbda8fae9
 8025d80:	bdb4b1c4 	.word	0xbdb4b1c4
 8025d84:	3e21ee9e 	.word	0x3e21ee9e
 8025d88:	809c52ad 	.word	0x809c52ad
 8025d8c:	3e927e4f 	.word	0x3e927e4f
 8025d90:	19cb1590 	.word	0x19cb1590
 8025d94:	3efa01a0 	.word	0x3efa01a0
 8025d98:	16c15177 	.word	0x16c15177
 8025d9c:	3f56c16c 	.word	0x3f56c16c
 8025da0:	5555554c 	.word	0x5555554c
 8025da4:	3fa55555 	.word	0x3fa55555
 8025da8:	00000000 	.word	0x00000000
 8025dac:	3ff00000 	.word	0x3ff00000
 8025db0:	3fe00000 	.word	0x3fe00000
 8025db4:	3fd33332 	.word	0x3fd33332
 8025db8:	3ff00000 	.word	0x3ff00000
 8025dbc:	3fe90000 	.word	0x3fe90000
 8025dc0:	3fd20000 	.word	0x3fd20000
 8025dc4:	00000000 	.word	0x00000000

08025dc8 <__kernel_rem_pio2>:
 8025dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dcc:	ed2d 8b02 	vpush	{d8}
 8025dd0:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8025dd4:	f112 0f14 	cmn.w	r2, #20
 8025dd8:	9308      	str	r3, [sp, #32]
 8025dda:	9101      	str	r1, [sp, #4]
 8025ddc:	4bc4      	ldr	r3, [pc, #784]	; (80260f0 <__kernel_rem_pio2+0x328>)
 8025dde:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8025de0:	900b      	str	r0, [sp, #44]	; 0x2c
 8025de2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8025de6:	9302      	str	r3, [sp, #8]
 8025de8:	9b08      	ldr	r3, [sp, #32]
 8025dea:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8025dee:	bfa8      	it	ge
 8025df0:	1ed4      	subge	r4, r2, #3
 8025df2:	9306      	str	r3, [sp, #24]
 8025df4:	bfb2      	itee	lt
 8025df6:	2400      	movlt	r4, #0
 8025df8:	2318      	movge	r3, #24
 8025dfa:	fb94 f4f3 	sdivge	r4, r4, r3
 8025dfe:	f06f 0317 	mvn.w	r3, #23
 8025e02:	fb04 3303 	mla	r3, r4, r3, r3
 8025e06:	eb03 0a02 	add.w	sl, r3, r2
 8025e0a:	9b02      	ldr	r3, [sp, #8]
 8025e0c:	9a06      	ldr	r2, [sp, #24]
 8025e0e:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 80260e0 <__kernel_rem_pio2+0x318>
 8025e12:	eb03 0802 	add.w	r8, r3, r2
 8025e16:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8025e18:	1aa7      	subs	r7, r4, r2
 8025e1a:	ae22      	add	r6, sp, #136	; 0x88
 8025e1c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8025e20:	2500      	movs	r5, #0
 8025e22:	4545      	cmp	r5, r8
 8025e24:	dd13      	ble.n	8025e4e <__kernel_rem_pio2+0x86>
 8025e26:	9b08      	ldr	r3, [sp, #32]
 8025e28:	ed9f 8bad 	vldr	d8, [pc, #692]	; 80260e0 <__kernel_rem_pio2+0x318>
 8025e2c:	aa22      	add	r2, sp, #136	; 0x88
 8025e2e:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8025e32:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8025e36:	f04f 0800 	mov.w	r8, #0
 8025e3a:	9b02      	ldr	r3, [sp, #8]
 8025e3c:	4598      	cmp	r8, r3
 8025e3e:	dc2f      	bgt.n	8025ea0 <__kernel_rem_pio2+0xd8>
 8025e40:	ed8d 8b04 	vstr	d8, [sp, #16]
 8025e44:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8025e48:	462f      	mov	r7, r5
 8025e4a:	2600      	movs	r6, #0
 8025e4c:	e01b      	b.n	8025e86 <__kernel_rem_pio2+0xbe>
 8025e4e:	42ef      	cmn	r7, r5
 8025e50:	d407      	bmi.n	8025e62 <__kernel_rem_pio2+0x9a>
 8025e52:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8025e56:	f7da fb65 	bl	8000524 <__aeabi_i2d>
 8025e5a:	e8e6 0102 	strd	r0, r1, [r6], #8
 8025e5e:	3501      	adds	r5, #1
 8025e60:	e7df      	b.n	8025e22 <__kernel_rem_pio2+0x5a>
 8025e62:	ec51 0b18 	vmov	r0, r1, d8
 8025e66:	e7f8      	b.n	8025e5a <__kernel_rem_pio2+0x92>
 8025e68:	e9d7 2300 	ldrd	r2, r3, [r7]
 8025e6c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8025e70:	f7da fbc2 	bl	80005f8 <__aeabi_dmul>
 8025e74:	4602      	mov	r2, r0
 8025e76:	460b      	mov	r3, r1
 8025e78:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8025e7c:	f7da fa06 	bl	800028c <__adddf3>
 8025e80:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8025e84:	3601      	adds	r6, #1
 8025e86:	9b06      	ldr	r3, [sp, #24]
 8025e88:	429e      	cmp	r6, r3
 8025e8a:	f1a7 0708 	sub.w	r7, r7, #8
 8025e8e:	ddeb      	ble.n	8025e68 <__kernel_rem_pio2+0xa0>
 8025e90:	ed9d 7b04 	vldr	d7, [sp, #16]
 8025e94:	f108 0801 	add.w	r8, r8, #1
 8025e98:	ecab 7b02 	vstmia	fp!, {d7}
 8025e9c:	3508      	adds	r5, #8
 8025e9e:	e7cc      	b.n	8025e3a <__kernel_rem_pio2+0x72>
 8025ea0:	9b02      	ldr	r3, [sp, #8]
 8025ea2:	aa0e      	add	r2, sp, #56	; 0x38
 8025ea4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8025ea8:	930d      	str	r3, [sp, #52]	; 0x34
 8025eaa:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8025eac:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8025eb0:	9c02      	ldr	r4, [sp, #8]
 8025eb2:	930c      	str	r3, [sp, #48]	; 0x30
 8025eb4:	00e3      	lsls	r3, r4, #3
 8025eb6:	930a      	str	r3, [sp, #40]	; 0x28
 8025eb8:	ab9a      	add	r3, sp, #616	; 0x268
 8025eba:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8025ebe:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8025ec2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8025ec6:	ab72      	add	r3, sp, #456	; 0x1c8
 8025ec8:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8025ecc:	46c3      	mov	fp, r8
 8025ece:	46a1      	mov	r9, r4
 8025ed0:	f1b9 0f00 	cmp.w	r9, #0
 8025ed4:	f1a5 0508 	sub.w	r5, r5, #8
 8025ed8:	dc77      	bgt.n	8025fca <__kernel_rem_pio2+0x202>
 8025eda:	ec47 6b10 	vmov	d0, r6, r7
 8025ede:	4650      	mov	r0, sl
 8025ee0:	f000 fbbe 	bl	8026660 <scalbn>
 8025ee4:	ec57 6b10 	vmov	r6, r7, d0
 8025ee8:	2200      	movs	r2, #0
 8025eea:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8025eee:	ee10 0a10 	vmov	r0, s0
 8025ef2:	4639      	mov	r1, r7
 8025ef4:	f7da fb80 	bl	80005f8 <__aeabi_dmul>
 8025ef8:	ec41 0b10 	vmov	d0, r0, r1
 8025efc:	f7fe fa00 	bl	8024300 <floor>
 8025f00:	4b7c      	ldr	r3, [pc, #496]	; (80260f4 <__kernel_rem_pio2+0x32c>)
 8025f02:	ec51 0b10 	vmov	r0, r1, d0
 8025f06:	2200      	movs	r2, #0
 8025f08:	f7da fb76 	bl	80005f8 <__aeabi_dmul>
 8025f0c:	4602      	mov	r2, r0
 8025f0e:	460b      	mov	r3, r1
 8025f10:	4630      	mov	r0, r6
 8025f12:	4639      	mov	r1, r7
 8025f14:	f7da f9b8 	bl	8000288 <__aeabi_dsub>
 8025f18:	460f      	mov	r7, r1
 8025f1a:	4606      	mov	r6, r0
 8025f1c:	f7da fe1c 	bl	8000b58 <__aeabi_d2iz>
 8025f20:	9004      	str	r0, [sp, #16]
 8025f22:	f7da faff 	bl	8000524 <__aeabi_i2d>
 8025f26:	4602      	mov	r2, r0
 8025f28:	460b      	mov	r3, r1
 8025f2a:	4630      	mov	r0, r6
 8025f2c:	4639      	mov	r1, r7
 8025f2e:	f7da f9ab 	bl	8000288 <__aeabi_dsub>
 8025f32:	f1ba 0f00 	cmp.w	sl, #0
 8025f36:	4606      	mov	r6, r0
 8025f38:	460f      	mov	r7, r1
 8025f3a:	dd6d      	ble.n	8026018 <__kernel_rem_pio2+0x250>
 8025f3c:	1e62      	subs	r2, r4, #1
 8025f3e:	ab0e      	add	r3, sp, #56	; 0x38
 8025f40:	9d04      	ldr	r5, [sp, #16]
 8025f42:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8025f46:	f1ca 0118 	rsb	r1, sl, #24
 8025f4a:	fa40 f301 	asr.w	r3, r0, r1
 8025f4e:	441d      	add	r5, r3
 8025f50:	408b      	lsls	r3, r1
 8025f52:	1ac0      	subs	r0, r0, r3
 8025f54:	ab0e      	add	r3, sp, #56	; 0x38
 8025f56:	9504      	str	r5, [sp, #16]
 8025f58:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8025f5c:	f1ca 0317 	rsb	r3, sl, #23
 8025f60:	fa40 fb03 	asr.w	fp, r0, r3
 8025f64:	f1bb 0f00 	cmp.w	fp, #0
 8025f68:	dd65      	ble.n	8026036 <__kernel_rem_pio2+0x26e>
 8025f6a:	9b04      	ldr	r3, [sp, #16]
 8025f6c:	2200      	movs	r2, #0
 8025f6e:	3301      	adds	r3, #1
 8025f70:	9304      	str	r3, [sp, #16]
 8025f72:	4615      	mov	r5, r2
 8025f74:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8025f78:	4294      	cmp	r4, r2
 8025f7a:	f300 809c 	bgt.w	80260b6 <__kernel_rem_pio2+0x2ee>
 8025f7e:	f1ba 0f00 	cmp.w	sl, #0
 8025f82:	dd07      	ble.n	8025f94 <__kernel_rem_pio2+0x1cc>
 8025f84:	f1ba 0f01 	cmp.w	sl, #1
 8025f88:	f000 80c0 	beq.w	802610c <__kernel_rem_pio2+0x344>
 8025f8c:	f1ba 0f02 	cmp.w	sl, #2
 8025f90:	f000 80c6 	beq.w	8026120 <__kernel_rem_pio2+0x358>
 8025f94:	f1bb 0f02 	cmp.w	fp, #2
 8025f98:	d14d      	bne.n	8026036 <__kernel_rem_pio2+0x26e>
 8025f9a:	4632      	mov	r2, r6
 8025f9c:	463b      	mov	r3, r7
 8025f9e:	4956      	ldr	r1, [pc, #344]	; (80260f8 <__kernel_rem_pio2+0x330>)
 8025fa0:	2000      	movs	r0, #0
 8025fa2:	f7da f971 	bl	8000288 <__aeabi_dsub>
 8025fa6:	4606      	mov	r6, r0
 8025fa8:	460f      	mov	r7, r1
 8025faa:	2d00      	cmp	r5, #0
 8025fac:	d043      	beq.n	8026036 <__kernel_rem_pio2+0x26e>
 8025fae:	4650      	mov	r0, sl
 8025fb0:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 80260e8 <__kernel_rem_pio2+0x320>
 8025fb4:	f000 fb54 	bl	8026660 <scalbn>
 8025fb8:	4630      	mov	r0, r6
 8025fba:	4639      	mov	r1, r7
 8025fbc:	ec53 2b10 	vmov	r2, r3, d0
 8025fc0:	f7da f962 	bl	8000288 <__aeabi_dsub>
 8025fc4:	4606      	mov	r6, r0
 8025fc6:	460f      	mov	r7, r1
 8025fc8:	e035      	b.n	8026036 <__kernel_rem_pio2+0x26e>
 8025fca:	4b4c      	ldr	r3, [pc, #304]	; (80260fc <__kernel_rem_pio2+0x334>)
 8025fcc:	2200      	movs	r2, #0
 8025fce:	4630      	mov	r0, r6
 8025fd0:	4639      	mov	r1, r7
 8025fd2:	f7da fb11 	bl	80005f8 <__aeabi_dmul>
 8025fd6:	f7da fdbf 	bl	8000b58 <__aeabi_d2iz>
 8025fda:	f7da faa3 	bl	8000524 <__aeabi_i2d>
 8025fde:	4602      	mov	r2, r0
 8025fe0:	460b      	mov	r3, r1
 8025fe2:	ec43 2b18 	vmov	d8, r2, r3
 8025fe6:	4b46      	ldr	r3, [pc, #280]	; (8026100 <__kernel_rem_pio2+0x338>)
 8025fe8:	2200      	movs	r2, #0
 8025fea:	f7da fb05 	bl	80005f8 <__aeabi_dmul>
 8025fee:	4602      	mov	r2, r0
 8025ff0:	460b      	mov	r3, r1
 8025ff2:	4630      	mov	r0, r6
 8025ff4:	4639      	mov	r1, r7
 8025ff6:	f7da f947 	bl	8000288 <__aeabi_dsub>
 8025ffa:	f7da fdad 	bl	8000b58 <__aeabi_d2iz>
 8025ffe:	e9d5 2300 	ldrd	r2, r3, [r5]
 8026002:	f84b 0b04 	str.w	r0, [fp], #4
 8026006:	ec51 0b18 	vmov	r0, r1, d8
 802600a:	f7da f93f 	bl	800028c <__adddf3>
 802600e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8026012:	4606      	mov	r6, r0
 8026014:	460f      	mov	r7, r1
 8026016:	e75b      	b.n	8025ed0 <__kernel_rem_pio2+0x108>
 8026018:	d106      	bne.n	8026028 <__kernel_rem_pio2+0x260>
 802601a:	1e63      	subs	r3, r4, #1
 802601c:	aa0e      	add	r2, sp, #56	; 0x38
 802601e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8026022:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8026026:	e79d      	b.n	8025f64 <__kernel_rem_pio2+0x19c>
 8026028:	4b36      	ldr	r3, [pc, #216]	; (8026104 <__kernel_rem_pio2+0x33c>)
 802602a:	2200      	movs	r2, #0
 802602c:	f7da fd6a 	bl	8000b04 <__aeabi_dcmpge>
 8026030:	2800      	cmp	r0, #0
 8026032:	d13d      	bne.n	80260b0 <__kernel_rem_pio2+0x2e8>
 8026034:	4683      	mov	fp, r0
 8026036:	2200      	movs	r2, #0
 8026038:	2300      	movs	r3, #0
 802603a:	4630      	mov	r0, r6
 802603c:	4639      	mov	r1, r7
 802603e:	f7da fd43 	bl	8000ac8 <__aeabi_dcmpeq>
 8026042:	2800      	cmp	r0, #0
 8026044:	f000 80c0 	beq.w	80261c8 <__kernel_rem_pio2+0x400>
 8026048:	1e65      	subs	r5, r4, #1
 802604a:	462b      	mov	r3, r5
 802604c:	2200      	movs	r2, #0
 802604e:	9902      	ldr	r1, [sp, #8]
 8026050:	428b      	cmp	r3, r1
 8026052:	da6c      	bge.n	802612e <__kernel_rem_pio2+0x366>
 8026054:	2a00      	cmp	r2, #0
 8026056:	f000 8089 	beq.w	802616c <__kernel_rem_pio2+0x3a4>
 802605a:	ab0e      	add	r3, sp, #56	; 0x38
 802605c:	f1aa 0a18 	sub.w	sl, sl, #24
 8026060:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8026064:	2b00      	cmp	r3, #0
 8026066:	f000 80ad 	beq.w	80261c4 <__kernel_rem_pio2+0x3fc>
 802606a:	4650      	mov	r0, sl
 802606c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 80260e8 <__kernel_rem_pio2+0x320>
 8026070:	f000 faf6 	bl	8026660 <scalbn>
 8026074:	ab9a      	add	r3, sp, #616	; 0x268
 8026076:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 802607a:	ec57 6b10 	vmov	r6, r7, d0
 802607e:	00ec      	lsls	r4, r5, #3
 8026080:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 8026084:	46aa      	mov	sl, r5
 8026086:	f1ba 0f00 	cmp.w	sl, #0
 802608a:	f280 80d6 	bge.w	802623a <__kernel_rem_pio2+0x472>
 802608e:	ed9f 8b14 	vldr	d8, [pc, #80]	; 80260e0 <__kernel_rem_pio2+0x318>
 8026092:	462e      	mov	r6, r5
 8026094:	2e00      	cmp	r6, #0
 8026096:	f2c0 8104 	blt.w	80262a2 <__kernel_rem_pio2+0x4da>
 802609a:	ab72      	add	r3, sp, #456	; 0x1c8
 802609c:	ed8d 8b06 	vstr	d8, [sp, #24]
 80260a0:	f8df a064 	ldr.w	sl, [pc, #100]	; 8026108 <__kernel_rem_pio2+0x340>
 80260a4:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 80260a8:	f04f 0800 	mov.w	r8, #0
 80260ac:	1baf      	subs	r7, r5, r6
 80260ae:	e0ea      	b.n	8026286 <__kernel_rem_pio2+0x4be>
 80260b0:	f04f 0b02 	mov.w	fp, #2
 80260b4:	e759      	b.n	8025f6a <__kernel_rem_pio2+0x1a2>
 80260b6:	f8d8 3000 	ldr.w	r3, [r8]
 80260ba:	b955      	cbnz	r5, 80260d2 <__kernel_rem_pio2+0x30a>
 80260bc:	b123      	cbz	r3, 80260c8 <__kernel_rem_pio2+0x300>
 80260be:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80260c2:	f8c8 3000 	str.w	r3, [r8]
 80260c6:	2301      	movs	r3, #1
 80260c8:	3201      	adds	r2, #1
 80260ca:	f108 0804 	add.w	r8, r8, #4
 80260ce:	461d      	mov	r5, r3
 80260d0:	e752      	b.n	8025f78 <__kernel_rem_pio2+0x1b0>
 80260d2:	1acb      	subs	r3, r1, r3
 80260d4:	f8c8 3000 	str.w	r3, [r8]
 80260d8:	462b      	mov	r3, r5
 80260da:	e7f5      	b.n	80260c8 <__kernel_rem_pio2+0x300>
 80260dc:	f3af 8000 	nop.w
	...
 80260ec:	3ff00000 	.word	0x3ff00000
 80260f0:	08027738 	.word	0x08027738
 80260f4:	40200000 	.word	0x40200000
 80260f8:	3ff00000 	.word	0x3ff00000
 80260fc:	3e700000 	.word	0x3e700000
 8026100:	41700000 	.word	0x41700000
 8026104:	3fe00000 	.word	0x3fe00000
 8026108:	080276f8 	.word	0x080276f8
 802610c:	1e62      	subs	r2, r4, #1
 802610e:	ab0e      	add	r3, sp, #56	; 0x38
 8026110:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8026114:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8026118:	a90e      	add	r1, sp, #56	; 0x38
 802611a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 802611e:	e739      	b.n	8025f94 <__kernel_rem_pio2+0x1cc>
 8026120:	1e62      	subs	r2, r4, #1
 8026122:	ab0e      	add	r3, sp, #56	; 0x38
 8026124:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8026128:	f3c3 0315 	ubfx	r3, r3, #0, #22
 802612c:	e7f4      	b.n	8026118 <__kernel_rem_pio2+0x350>
 802612e:	a90e      	add	r1, sp, #56	; 0x38
 8026130:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8026134:	3b01      	subs	r3, #1
 8026136:	430a      	orrs	r2, r1
 8026138:	e789      	b.n	802604e <__kernel_rem_pio2+0x286>
 802613a:	3301      	adds	r3, #1
 802613c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8026140:	2900      	cmp	r1, #0
 8026142:	d0fa      	beq.n	802613a <__kernel_rem_pio2+0x372>
 8026144:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026146:	f502 721a 	add.w	r2, r2, #616	; 0x268
 802614a:	446a      	add	r2, sp
 802614c:	3a98      	subs	r2, #152	; 0x98
 802614e:	920a      	str	r2, [sp, #40]	; 0x28
 8026150:	9a08      	ldr	r2, [sp, #32]
 8026152:	18e3      	adds	r3, r4, r3
 8026154:	18a5      	adds	r5, r4, r2
 8026156:	aa22      	add	r2, sp, #136	; 0x88
 8026158:	f104 0801 	add.w	r8, r4, #1
 802615c:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8026160:	9304      	str	r3, [sp, #16]
 8026162:	9b04      	ldr	r3, [sp, #16]
 8026164:	4543      	cmp	r3, r8
 8026166:	da04      	bge.n	8026172 <__kernel_rem_pio2+0x3aa>
 8026168:	461c      	mov	r4, r3
 802616a:	e6a3      	b.n	8025eb4 <__kernel_rem_pio2+0xec>
 802616c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802616e:	2301      	movs	r3, #1
 8026170:	e7e4      	b.n	802613c <__kernel_rem_pio2+0x374>
 8026172:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026174:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8026178:	f7da f9d4 	bl	8000524 <__aeabi_i2d>
 802617c:	e8e5 0102 	strd	r0, r1, [r5], #8
 8026180:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026182:	46ab      	mov	fp, r5
 8026184:	461c      	mov	r4, r3
 8026186:	f04f 0900 	mov.w	r9, #0
 802618a:	2600      	movs	r6, #0
 802618c:	2700      	movs	r7, #0
 802618e:	9b06      	ldr	r3, [sp, #24]
 8026190:	4599      	cmp	r9, r3
 8026192:	dd06      	ble.n	80261a2 <__kernel_rem_pio2+0x3da>
 8026194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026196:	e8e3 6702 	strd	r6, r7, [r3], #8
 802619a:	f108 0801 	add.w	r8, r8, #1
 802619e:	930a      	str	r3, [sp, #40]	; 0x28
 80261a0:	e7df      	b.n	8026162 <__kernel_rem_pio2+0x39a>
 80261a2:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 80261a6:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80261aa:	f7da fa25 	bl	80005f8 <__aeabi_dmul>
 80261ae:	4602      	mov	r2, r0
 80261b0:	460b      	mov	r3, r1
 80261b2:	4630      	mov	r0, r6
 80261b4:	4639      	mov	r1, r7
 80261b6:	f7da f869 	bl	800028c <__adddf3>
 80261ba:	f109 0901 	add.w	r9, r9, #1
 80261be:	4606      	mov	r6, r0
 80261c0:	460f      	mov	r7, r1
 80261c2:	e7e4      	b.n	802618e <__kernel_rem_pio2+0x3c6>
 80261c4:	3d01      	subs	r5, #1
 80261c6:	e748      	b.n	802605a <__kernel_rem_pio2+0x292>
 80261c8:	ec47 6b10 	vmov	d0, r6, r7
 80261cc:	f1ca 0000 	rsb	r0, sl, #0
 80261d0:	f000 fa46 	bl	8026660 <scalbn>
 80261d4:	ec57 6b10 	vmov	r6, r7, d0
 80261d8:	4ba0      	ldr	r3, [pc, #640]	; (802645c <__kernel_rem_pio2+0x694>)
 80261da:	ee10 0a10 	vmov	r0, s0
 80261de:	2200      	movs	r2, #0
 80261e0:	4639      	mov	r1, r7
 80261e2:	f7da fc8f 	bl	8000b04 <__aeabi_dcmpge>
 80261e6:	b1f8      	cbz	r0, 8026228 <__kernel_rem_pio2+0x460>
 80261e8:	4b9d      	ldr	r3, [pc, #628]	; (8026460 <__kernel_rem_pio2+0x698>)
 80261ea:	2200      	movs	r2, #0
 80261ec:	4630      	mov	r0, r6
 80261ee:	4639      	mov	r1, r7
 80261f0:	f7da fa02 	bl	80005f8 <__aeabi_dmul>
 80261f4:	f7da fcb0 	bl	8000b58 <__aeabi_d2iz>
 80261f8:	4680      	mov	r8, r0
 80261fa:	f7da f993 	bl	8000524 <__aeabi_i2d>
 80261fe:	4b97      	ldr	r3, [pc, #604]	; (802645c <__kernel_rem_pio2+0x694>)
 8026200:	2200      	movs	r2, #0
 8026202:	f7da f9f9 	bl	80005f8 <__aeabi_dmul>
 8026206:	460b      	mov	r3, r1
 8026208:	4602      	mov	r2, r0
 802620a:	4639      	mov	r1, r7
 802620c:	4630      	mov	r0, r6
 802620e:	f7da f83b 	bl	8000288 <__aeabi_dsub>
 8026212:	f7da fca1 	bl	8000b58 <__aeabi_d2iz>
 8026216:	1c65      	adds	r5, r4, #1
 8026218:	ab0e      	add	r3, sp, #56	; 0x38
 802621a:	f10a 0a18 	add.w	sl, sl, #24
 802621e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8026222:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8026226:	e720      	b.n	802606a <__kernel_rem_pio2+0x2a2>
 8026228:	4630      	mov	r0, r6
 802622a:	4639      	mov	r1, r7
 802622c:	f7da fc94 	bl	8000b58 <__aeabi_d2iz>
 8026230:	ab0e      	add	r3, sp, #56	; 0x38
 8026232:	4625      	mov	r5, r4
 8026234:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8026238:	e717      	b.n	802606a <__kernel_rem_pio2+0x2a2>
 802623a:	ab0e      	add	r3, sp, #56	; 0x38
 802623c:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8026240:	f7da f970 	bl	8000524 <__aeabi_i2d>
 8026244:	4632      	mov	r2, r6
 8026246:	463b      	mov	r3, r7
 8026248:	f7da f9d6 	bl	80005f8 <__aeabi_dmul>
 802624c:	4b84      	ldr	r3, [pc, #528]	; (8026460 <__kernel_rem_pio2+0x698>)
 802624e:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8026252:	2200      	movs	r2, #0
 8026254:	4630      	mov	r0, r6
 8026256:	4639      	mov	r1, r7
 8026258:	f7da f9ce 	bl	80005f8 <__aeabi_dmul>
 802625c:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8026260:	4606      	mov	r6, r0
 8026262:	460f      	mov	r7, r1
 8026264:	e70f      	b.n	8026086 <__kernel_rem_pio2+0x2be>
 8026266:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 802626a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 802626e:	f7da f9c3 	bl	80005f8 <__aeabi_dmul>
 8026272:	4602      	mov	r2, r0
 8026274:	460b      	mov	r3, r1
 8026276:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802627a:	f7da f807 	bl	800028c <__adddf3>
 802627e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8026282:	f108 0801 	add.w	r8, r8, #1
 8026286:	9b02      	ldr	r3, [sp, #8]
 8026288:	4598      	cmp	r8, r3
 802628a:	dc01      	bgt.n	8026290 <__kernel_rem_pio2+0x4c8>
 802628c:	45b8      	cmp	r8, r7
 802628e:	ddea      	ble.n	8026266 <__kernel_rem_pio2+0x49e>
 8026290:	ed9d 7b06 	vldr	d7, [sp, #24]
 8026294:	ab4a      	add	r3, sp, #296	; 0x128
 8026296:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 802629a:	ed87 7b00 	vstr	d7, [r7]
 802629e:	3e01      	subs	r6, #1
 80262a0:	e6f8      	b.n	8026094 <__kernel_rem_pio2+0x2cc>
 80262a2:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80262a4:	2b02      	cmp	r3, #2
 80262a6:	dc0b      	bgt.n	80262c0 <__kernel_rem_pio2+0x4f8>
 80262a8:	2b00      	cmp	r3, #0
 80262aa:	dc35      	bgt.n	8026318 <__kernel_rem_pio2+0x550>
 80262ac:	d059      	beq.n	8026362 <__kernel_rem_pio2+0x59a>
 80262ae:	9b04      	ldr	r3, [sp, #16]
 80262b0:	f003 0007 	and.w	r0, r3, #7
 80262b4:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 80262b8:	ecbd 8b02 	vpop	{d8}
 80262bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262c0:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80262c2:	2b03      	cmp	r3, #3
 80262c4:	d1f3      	bne.n	80262ae <__kernel_rem_pio2+0x4e6>
 80262c6:	ab4a      	add	r3, sp, #296	; 0x128
 80262c8:	4423      	add	r3, r4
 80262ca:	9306      	str	r3, [sp, #24]
 80262cc:	461c      	mov	r4, r3
 80262ce:	469a      	mov	sl, r3
 80262d0:	9502      	str	r5, [sp, #8]
 80262d2:	9b02      	ldr	r3, [sp, #8]
 80262d4:	2b00      	cmp	r3, #0
 80262d6:	f1aa 0a08 	sub.w	sl, sl, #8
 80262da:	dc6b      	bgt.n	80263b4 <__kernel_rem_pio2+0x5ec>
 80262dc:	46aa      	mov	sl, r5
 80262de:	f1ba 0f01 	cmp.w	sl, #1
 80262e2:	f1a4 0408 	sub.w	r4, r4, #8
 80262e6:	f300 8085 	bgt.w	80263f4 <__kernel_rem_pio2+0x62c>
 80262ea:	9c06      	ldr	r4, [sp, #24]
 80262ec:	2000      	movs	r0, #0
 80262ee:	3408      	adds	r4, #8
 80262f0:	2100      	movs	r1, #0
 80262f2:	2d01      	cmp	r5, #1
 80262f4:	f300 809d 	bgt.w	8026432 <__kernel_rem_pio2+0x66a>
 80262f8:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 80262fc:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8026300:	f1bb 0f00 	cmp.w	fp, #0
 8026304:	f040 809b 	bne.w	802643e <__kernel_rem_pio2+0x676>
 8026308:	9b01      	ldr	r3, [sp, #4]
 802630a:	e9c3 5600 	strd	r5, r6, [r3]
 802630e:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8026312:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8026316:	e7ca      	b.n	80262ae <__kernel_rem_pio2+0x4e6>
 8026318:	3408      	adds	r4, #8
 802631a:	ab4a      	add	r3, sp, #296	; 0x128
 802631c:	441c      	add	r4, r3
 802631e:	462e      	mov	r6, r5
 8026320:	2000      	movs	r0, #0
 8026322:	2100      	movs	r1, #0
 8026324:	2e00      	cmp	r6, #0
 8026326:	da36      	bge.n	8026396 <__kernel_rem_pio2+0x5ce>
 8026328:	f1bb 0f00 	cmp.w	fp, #0
 802632c:	d039      	beq.n	80263a2 <__kernel_rem_pio2+0x5da>
 802632e:	4602      	mov	r2, r0
 8026330:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026334:	9c01      	ldr	r4, [sp, #4]
 8026336:	e9c4 2300 	strd	r2, r3, [r4]
 802633a:	4602      	mov	r2, r0
 802633c:	460b      	mov	r3, r1
 802633e:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8026342:	f7d9 ffa1 	bl	8000288 <__aeabi_dsub>
 8026346:	ae4c      	add	r6, sp, #304	; 0x130
 8026348:	2401      	movs	r4, #1
 802634a:	42a5      	cmp	r5, r4
 802634c:	da2c      	bge.n	80263a8 <__kernel_rem_pio2+0x5e0>
 802634e:	f1bb 0f00 	cmp.w	fp, #0
 8026352:	d002      	beq.n	802635a <__kernel_rem_pio2+0x592>
 8026354:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026358:	4619      	mov	r1, r3
 802635a:	9b01      	ldr	r3, [sp, #4]
 802635c:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8026360:	e7a5      	b.n	80262ae <__kernel_rem_pio2+0x4e6>
 8026362:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8026366:	eb0d 0403 	add.w	r4, sp, r3
 802636a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 802636e:	2000      	movs	r0, #0
 8026370:	2100      	movs	r1, #0
 8026372:	2d00      	cmp	r5, #0
 8026374:	da09      	bge.n	802638a <__kernel_rem_pio2+0x5c2>
 8026376:	f1bb 0f00 	cmp.w	fp, #0
 802637a:	d002      	beq.n	8026382 <__kernel_rem_pio2+0x5ba>
 802637c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026380:	4619      	mov	r1, r3
 8026382:	9b01      	ldr	r3, [sp, #4]
 8026384:	e9c3 0100 	strd	r0, r1, [r3]
 8026388:	e791      	b.n	80262ae <__kernel_rem_pio2+0x4e6>
 802638a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 802638e:	f7d9 ff7d 	bl	800028c <__adddf3>
 8026392:	3d01      	subs	r5, #1
 8026394:	e7ed      	b.n	8026372 <__kernel_rem_pio2+0x5aa>
 8026396:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 802639a:	f7d9 ff77 	bl	800028c <__adddf3>
 802639e:	3e01      	subs	r6, #1
 80263a0:	e7c0      	b.n	8026324 <__kernel_rem_pio2+0x55c>
 80263a2:	4602      	mov	r2, r0
 80263a4:	460b      	mov	r3, r1
 80263a6:	e7c5      	b.n	8026334 <__kernel_rem_pio2+0x56c>
 80263a8:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 80263ac:	f7d9 ff6e 	bl	800028c <__adddf3>
 80263b0:	3401      	adds	r4, #1
 80263b2:	e7ca      	b.n	802634a <__kernel_rem_pio2+0x582>
 80263b4:	e9da 8900 	ldrd	r8, r9, [sl]
 80263b8:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 80263bc:	9b02      	ldr	r3, [sp, #8]
 80263be:	3b01      	subs	r3, #1
 80263c0:	9302      	str	r3, [sp, #8]
 80263c2:	4632      	mov	r2, r6
 80263c4:	463b      	mov	r3, r7
 80263c6:	4640      	mov	r0, r8
 80263c8:	4649      	mov	r1, r9
 80263ca:	f7d9 ff5f 	bl	800028c <__adddf3>
 80263ce:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80263d2:	4602      	mov	r2, r0
 80263d4:	460b      	mov	r3, r1
 80263d6:	4640      	mov	r0, r8
 80263d8:	4649      	mov	r1, r9
 80263da:	f7d9 ff55 	bl	8000288 <__aeabi_dsub>
 80263de:	4632      	mov	r2, r6
 80263e0:	463b      	mov	r3, r7
 80263e2:	f7d9 ff53 	bl	800028c <__adddf3>
 80263e6:	ed9d 7b08 	vldr	d7, [sp, #32]
 80263ea:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80263ee:	ed8a 7b00 	vstr	d7, [sl]
 80263f2:	e76e      	b.n	80262d2 <__kernel_rem_pio2+0x50a>
 80263f4:	e9d4 8900 	ldrd	r8, r9, [r4]
 80263f8:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 80263fc:	4640      	mov	r0, r8
 80263fe:	4632      	mov	r2, r6
 8026400:	463b      	mov	r3, r7
 8026402:	4649      	mov	r1, r9
 8026404:	f7d9 ff42 	bl	800028c <__adddf3>
 8026408:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802640c:	4602      	mov	r2, r0
 802640e:	460b      	mov	r3, r1
 8026410:	4640      	mov	r0, r8
 8026412:	4649      	mov	r1, r9
 8026414:	f7d9 ff38 	bl	8000288 <__aeabi_dsub>
 8026418:	4632      	mov	r2, r6
 802641a:	463b      	mov	r3, r7
 802641c:	f7d9 ff36 	bl	800028c <__adddf3>
 8026420:	ed9d 7b02 	vldr	d7, [sp, #8]
 8026424:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8026428:	ed84 7b00 	vstr	d7, [r4]
 802642c:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8026430:	e755      	b.n	80262de <__kernel_rem_pio2+0x516>
 8026432:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8026436:	f7d9 ff29 	bl	800028c <__adddf3>
 802643a:	3d01      	subs	r5, #1
 802643c:	e759      	b.n	80262f2 <__kernel_rem_pio2+0x52a>
 802643e:	9b01      	ldr	r3, [sp, #4]
 8026440:	9a01      	ldr	r2, [sp, #4]
 8026442:	601d      	str	r5, [r3, #0]
 8026444:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8026448:	605c      	str	r4, [r3, #4]
 802644a:	609f      	str	r7, [r3, #8]
 802644c:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8026450:	60d3      	str	r3, [r2, #12]
 8026452:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026456:	6110      	str	r0, [r2, #16]
 8026458:	6153      	str	r3, [r2, #20]
 802645a:	e728      	b.n	80262ae <__kernel_rem_pio2+0x4e6>
 802645c:	41700000 	.word	0x41700000
 8026460:	3e700000 	.word	0x3e700000
 8026464:	00000000 	.word	0x00000000

08026468 <__kernel_sin>:
 8026468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802646c:	ed2d 8b04 	vpush	{d8-d9}
 8026470:	eeb0 8a41 	vmov.f32	s16, s2
 8026474:	eef0 8a61 	vmov.f32	s17, s3
 8026478:	ec55 4b10 	vmov	r4, r5, d0
 802647c:	b083      	sub	sp, #12
 802647e:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8026482:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8026486:	9001      	str	r0, [sp, #4]
 8026488:	da06      	bge.n	8026498 <__kernel_sin+0x30>
 802648a:	ee10 0a10 	vmov	r0, s0
 802648e:	4629      	mov	r1, r5
 8026490:	f7da fb62 	bl	8000b58 <__aeabi_d2iz>
 8026494:	2800      	cmp	r0, #0
 8026496:	d051      	beq.n	802653c <__kernel_sin+0xd4>
 8026498:	4622      	mov	r2, r4
 802649a:	462b      	mov	r3, r5
 802649c:	4620      	mov	r0, r4
 802649e:	4629      	mov	r1, r5
 80264a0:	f7da f8aa 	bl	80005f8 <__aeabi_dmul>
 80264a4:	4682      	mov	sl, r0
 80264a6:	468b      	mov	fp, r1
 80264a8:	4602      	mov	r2, r0
 80264aa:	460b      	mov	r3, r1
 80264ac:	4620      	mov	r0, r4
 80264ae:	4629      	mov	r1, r5
 80264b0:	f7da f8a2 	bl	80005f8 <__aeabi_dmul>
 80264b4:	a341      	add	r3, pc, #260	; (adr r3, 80265bc <__kernel_sin+0x154>)
 80264b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264ba:	4680      	mov	r8, r0
 80264bc:	4689      	mov	r9, r1
 80264be:	4650      	mov	r0, sl
 80264c0:	4659      	mov	r1, fp
 80264c2:	f7da f899 	bl	80005f8 <__aeabi_dmul>
 80264c6:	a33f      	add	r3, pc, #252	; (adr r3, 80265c4 <__kernel_sin+0x15c>)
 80264c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264cc:	f7d9 fedc 	bl	8000288 <__aeabi_dsub>
 80264d0:	4652      	mov	r2, sl
 80264d2:	465b      	mov	r3, fp
 80264d4:	f7da f890 	bl	80005f8 <__aeabi_dmul>
 80264d8:	a33c      	add	r3, pc, #240	; (adr r3, 80265cc <__kernel_sin+0x164>)
 80264da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264de:	f7d9 fed5 	bl	800028c <__adddf3>
 80264e2:	4652      	mov	r2, sl
 80264e4:	465b      	mov	r3, fp
 80264e6:	f7da f887 	bl	80005f8 <__aeabi_dmul>
 80264ea:	a33a      	add	r3, pc, #232	; (adr r3, 80265d4 <__kernel_sin+0x16c>)
 80264ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80264f0:	f7d9 feca 	bl	8000288 <__aeabi_dsub>
 80264f4:	4652      	mov	r2, sl
 80264f6:	465b      	mov	r3, fp
 80264f8:	f7da f87e 	bl	80005f8 <__aeabi_dmul>
 80264fc:	a337      	add	r3, pc, #220	; (adr r3, 80265dc <__kernel_sin+0x174>)
 80264fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026502:	f7d9 fec3 	bl	800028c <__adddf3>
 8026506:	9b01      	ldr	r3, [sp, #4]
 8026508:	4606      	mov	r6, r0
 802650a:	460f      	mov	r7, r1
 802650c:	b9eb      	cbnz	r3, 802654a <__kernel_sin+0xe2>
 802650e:	4602      	mov	r2, r0
 8026510:	460b      	mov	r3, r1
 8026512:	4650      	mov	r0, sl
 8026514:	4659      	mov	r1, fp
 8026516:	f7da f86f 	bl	80005f8 <__aeabi_dmul>
 802651a:	a325      	add	r3, pc, #148	; (adr r3, 80265b0 <__kernel_sin+0x148>)
 802651c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026520:	f7d9 feb2 	bl	8000288 <__aeabi_dsub>
 8026524:	4642      	mov	r2, r8
 8026526:	464b      	mov	r3, r9
 8026528:	f7da f866 	bl	80005f8 <__aeabi_dmul>
 802652c:	4602      	mov	r2, r0
 802652e:	460b      	mov	r3, r1
 8026530:	4620      	mov	r0, r4
 8026532:	4629      	mov	r1, r5
 8026534:	f7d9 feaa 	bl	800028c <__adddf3>
 8026538:	4604      	mov	r4, r0
 802653a:	460d      	mov	r5, r1
 802653c:	ec45 4b10 	vmov	d0, r4, r5
 8026540:	b003      	add	sp, #12
 8026542:	ecbd 8b04 	vpop	{d8-d9}
 8026546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802654a:	4b1b      	ldr	r3, [pc, #108]	; (80265b8 <__kernel_sin+0x150>)
 802654c:	ec51 0b18 	vmov	r0, r1, d8
 8026550:	2200      	movs	r2, #0
 8026552:	f7da f851 	bl	80005f8 <__aeabi_dmul>
 8026556:	4632      	mov	r2, r6
 8026558:	ec41 0b19 	vmov	d9, r0, r1
 802655c:	463b      	mov	r3, r7
 802655e:	4640      	mov	r0, r8
 8026560:	4649      	mov	r1, r9
 8026562:	f7da f849 	bl	80005f8 <__aeabi_dmul>
 8026566:	4602      	mov	r2, r0
 8026568:	460b      	mov	r3, r1
 802656a:	ec51 0b19 	vmov	r0, r1, d9
 802656e:	f7d9 fe8b 	bl	8000288 <__aeabi_dsub>
 8026572:	4652      	mov	r2, sl
 8026574:	465b      	mov	r3, fp
 8026576:	f7da f83f 	bl	80005f8 <__aeabi_dmul>
 802657a:	ec53 2b18 	vmov	r2, r3, d8
 802657e:	f7d9 fe83 	bl	8000288 <__aeabi_dsub>
 8026582:	a30b      	add	r3, pc, #44	; (adr r3, 80265b0 <__kernel_sin+0x148>)
 8026584:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026588:	4606      	mov	r6, r0
 802658a:	460f      	mov	r7, r1
 802658c:	4640      	mov	r0, r8
 802658e:	4649      	mov	r1, r9
 8026590:	f7da f832 	bl	80005f8 <__aeabi_dmul>
 8026594:	4602      	mov	r2, r0
 8026596:	460b      	mov	r3, r1
 8026598:	4630      	mov	r0, r6
 802659a:	4639      	mov	r1, r7
 802659c:	f7d9 fe76 	bl	800028c <__adddf3>
 80265a0:	4602      	mov	r2, r0
 80265a2:	460b      	mov	r3, r1
 80265a4:	4620      	mov	r0, r4
 80265a6:	4629      	mov	r1, r5
 80265a8:	f7d9 fe6e 	bl	8000288 <__aeabi_dsub>
 80265ac:	e7c4      	b.n	8026538 <__kernel_sin+0xd0>
 80265ae:	bf00      	nop
 80265b0:	55555549 	.word	0x55555549
 80265b4:	3fc55555 	.word	0x3fc55555
 80265b8:	3fe00000 	.word	0x3fe00000
 80265bc:	5acfd57c 	.word	0x5acfd57c
 80265c0:	3de5d93a 	.word	0x3de5d93a
 80265c4:	8a2b9ceb 	.word	0x8a2b9ceb
 80265c8:	3e5ae5e6 	.word	0x3e5ae5e6
 80265cc:	57b1fe7d 	.word	0x57b1fe7d
 80265d0:	3ec71de3 	.word	0x3ec71de3
 80265d4:	19c161d5 	.word	0x19c161d5
 80265d8:	3f2a01a0 	.word	0x3f2a01a0
 80265dc:	1110f8a6 	.word	0x1110f8a6
 80265e0:	3f811111 	.word	0x3f811111

080265e4 <with_errno>:
 80265e4:	b570      	push	{r4, r5, r6, lr}
 80265e6:	4604      	mov	r4, r0
 80265e8:	460d      	mov	r5, r1
 80265ea:	4616      	mov	r6, r2
 80265ec:	f7fb fdea 	bl	80221c4 <__errno>
 80265f0:	4629      	mov	r1, r5
 80265f2:	6006      	str	r6, [r0, #0]
 80265f4:	4620      	mov	r0, r4
 80265f6:	bd70      	pop	{r4, r5, r6, pc}

080265f8 <xflow>:
 80265f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80265fa:	4614      	mov	r4, r2
 80265fc:	461d      	mov	r5, r3
 80265fe:	b108      	cbz	r0, 8026604 <xflow+0xc>
 8026600:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026604:	e9cd 2300 	strd	r2, r3, [sp]
 8026608:	e9dd 2300 	ldrd	r2, r3, [sp]
 802660c:	4620      	mov	r0, r4
 802660e:	4629      	mov	r1, r5
 8026610:	f7d9 fff2 	bl	80005f8 <__aeabi_dmul>
 8026614:	2222      	movs	r2, #34	; 0x22
 8026616:	b003      	add	sp, #12
 8026618:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802661c:	f7ff bfe2 	b.w	80265e4 <with_errno>

08026620 <__math_uflow>:
 8026620:	b508      	push	{r3, lr}
 8026622:	2200      	movs	r2, #0
 8026624:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8026628:	f7ff ffe6 	bl	80265f8 <xflow>
 802662c:	ec41 0b10 	vmov	d0, r0, r1
 8026630:	bd08      	pop	{r3, pc}

08026632 <__math_oflow>:
 8026632:	b508      	push	{r3, lr}
 8026634:	2200      	movs	r2, #0
 8026636:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 802663a:	f7ff ffdd 	bl	80265f8 <xflow>
 802663e:	ec41 0b10 	vmov	d0, r0, r1
 8026642:	bd08      	pop	{r3, pc}

08026644 <finite>:
 8026644:	b082      	sub	sp, #8
 8026646:	ed8d 0b00 	vstr	d0, [sp]
 802664a:	9801      	ldr	r0, [sp, #4]
 802664c:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8026650:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8026654:	0fc0      	lsrs	r0, r0, #31
 8026656:	b002      	add	sp, #8
 8026658:	4770      	bx	lr
 802665a:	0000      	movs	r0, r0
 802665c:	0000      	movs	r0, r0
	...

08026660 <scalbn>:
 8026660:	b570      	push	{r4, r5, r6, lr}
 8026662:	ec55 4b10 	vmov	r4, r5, d0
 8026666:	f3c5 520a 	ubfx	r2, r5, #20, #11
 802666a:	4606      	mov	r6, r0
 802666c:	462b      	mov	r3, r5
 802666e:	b99a      	cbnz	r2, 8026698 <scalbn+0x38>
 8026670:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8026674:	4323      	orrs	r3, r4
 8026676:	d036      	beq.n	80266e6 <scalbn+0x86>
 8026678:	4b39      	ldr	r3, [pc, #228]	; (8026760 <scalbn+0x100>)
 802667a:	4629      	mov	r1, r5
 802667c:	ee10 0a10 	vmov	r0, s0
 8026680:	2200      	movs	r2, #0
 8026682:	f7d9 ffb9 	bl	80005f8 <__aeabi_dmul>
 8026686:	4b37      	ldr	r3, [pc, #220]	; (8026764 <scalbn+0x104>)
 8026688:	429e      	cmp	r6, r3
 802668a:	4604      	mov	r4, r0
 802668c:	460d      	mov	r5, r1
 802668e:	da10      	bge.n	80266b2 <scalbn+0x52>
 8026690:	a32b      	add	r3, pc, #172	; (adr r3, 8026740 <scalbn+0xe0>)
 8026692:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026696:	e03a      	b.n	802670e <scalbn+0xae>
 8026698:	f240 71ff 	movw	r1, #2047	; 0x7ff
 802669c:	428a      	cmp	r2, r1
 802669e:	d10c      	bne.n	80266ba <scalbn+0x5a>
 80266a0:	ee10 2a10 	vmov	r2, s0
 80266a4:	4620      	mov	r0, r4
 80266a6:	4629      	mov	r1, r5
 80266a8:	f7d9 fdf0 	bl	800028c <__adddf3>
 80266ac:	4604      	mov	r4, r0
 80266ae:	460d      	mov	r5, r1
 80266b0:	e019      	b.n	80266e6 <scalbn+0x86>
 80266b2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80266b6:	460b      	mov	r3, r1
 80266b8:	3a36      	subs	r2, #54	; 0x36
 80266ba:	4432      	add	r2, r6
 80266bc:	f240 71fe 	movw	r1, #2046	; 0x7fe
 80266c0:	428a      	cmp	r2, r1
 80266c2:	dd08      	ble.n	80266d6 <scalbn+0x76>
 80266c4:	2d00      	cmp	r5, #0
 80266c6:	a120      	add	r1, pc, #128	; (adr r1, 8026748 <scalbn+0xe8>)
 80266c8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80266cc:	da1c      	bge.n	8026708 <scalbn+0xa8>
 80266ce:	a120      	add	r1, pc, #128	; (adr r1, 8026750 <scalbn+0xf0>)
 80266d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80266d4:	e018      	b.n	8026708 <scalbn+0xa8>
 80266d6:	2a00      	cmp	r2, #0
 80266d8:	dd08      	ble.n	80266ec <scalbn+0x8c>
 80266da:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80266de:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80266e2:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80266e6:	ec45 4b10 	vmov	d0, r4, r5
 80266ea:	bd70      	pop	{r4, r5, r6, pc}
 80266ec:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80266f0:	da19      	bge.n	8026726 <scalbn+0xc6>
 80266f2:	f24c 3350 	movw	r3, #50000	; 0xc350
 80266f6:	429e      	cmp	r6, r3
 80266f8:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 80266fc:	dd0a      	ble.n	8026714 <scalbn+0xb4>
 80266fe:	a112      	add	r1, pc, #72	; (adr r1, 8026748 <scalbn+0xe8>)
 8026700:	e9d1 0100 	ldrd	r0, r1, [r1]
 8026704:	2b00      	cmp	r3, #0
 8026706:	d1e2      	bne.n	80266ce <scalbn+0x6e>
 8026708:	a30f      	add	r3, pc, #60	; (adr r3, 8026748 <scalbn+0xe8>)
 802670a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802670e:	f7d9 ff73 	bl	80005f8 <__aeabi_dmul>
 8026712:	e7cb      	b.n	80266ac <scalbn+0x4c>
 8026714:	a10a      	add	r1, pc, #40	; (adr r1, 8026740 <scalbn+0xe0>)
 8026716:	e9d1 0100 	ldrd	r0, r1, [r1]
 802671a:	2b00      	cmp	r3, #0
 802671c:	d0b8      	beq.n	8026690 <scalbn+0x30>
 802671e:	a10e      	add	r1, pc, #56	; (adr r1, 8026758 <scalbn+0xf8>)
 8026720:	e9d1 0100 	ldrd	r0, r1, [r1]
 8026724:	e7b4      	b.n	8026690 <scalbn+0x30>
 8026726:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802672a:	3236      	adds	r2, #54	; 0x36
 802672c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8026730:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8026734:	4620      	mov	r0, r4
 8026736:	4b0c      	ldr	r3, [pc, #48]	; (8026768 <scalbn+0x108>)
 8026738:	2200      	movs	r2, #0
 802673a:	e7e8      	b.n	802670e <scalbn+0xae>
 802673c:	f3af 8000 	nop.w
 8026740:	c2f8f359 	.word	0xc2f8f359
 8026744:	01a56e1f 	.word	0x01a56e1f
 8026748:	8800759c 	.word	0x8800759c
 802674c:	7e37e43c 	.word	0x7e37e43c
 8026750:	8800759c 	.word	0x8800759c
 8026754:	fe37e43c 	.word	0xfe37e43c
 8026758:	c2f8f359 	.word	0xc2f8f359
 802675c:	81a56e1f 	.word	0x81a56e1f
 8026760:	43500000 	.word	0x43500000
 8026764:	ffff3cb0 	.word	0xffff3cb0
 8026768:	3c900000 	.word	0x3c900000

0802676c <_close>:
 802676c:	4b02      	ldr	r3, [pc, #8]	; (8026778 <_close+0xc>)
 802676e:	2258      	movs	r2, #88	; 0x58
 8026770:	601a      	str	r2, [r3, #0]
 8026772:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026776:	4770      	bx	lr
 8026778:	2000f584 	.word	0x2000f584

0802677c <_fstat>:
 802677c:	4b02      	ldr	r3, [pc, #8]	; (8026788 <_fstat+0xc>)
 802677e:	2258      	movs	r2, #88	; 0x58
 8026780:	601a      	str	r2, [r3, #0]
 8026782:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026786:	4770      	bx	lr
 8026788:	2000f584 	.word	0x2000f584

0802678c <_getpid>:
 802678c:	4b02      	ldr	r3, [pc, #8]	; (8026798 <_getpid+0xc>)
 802678e:	2258      	movs	r2, #88	; 0x58
 8026790:	601a      	str	r2, [r3, #0]
 8026792:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026796:	4770      	bx	lr
 8026798:	2000f584 	.word	0x2000f584

0802679c <_isatty>:
 802679c:	4b02      	ldr	r3, [pc, #8]	; (80267a8 <_isatty+0xc>)
 802679e:	2258      	movs	r2, #88	; 0x58
 80267a0:	601a      	str	r2, [r3, #0]
 80267a2:	2000      	movs	r0, #0
 80267a4:	4770      	bx	lr
 80267a6:	bf00      	nop
 80267a8:	2000f584 	.word	0x2000f584

080267ac <_kill>:
 80267ac:	4b02      	ldr	r3, [pc, #8]	; (80267b8 <_kill+0xc>)
 80267ae:	2258      	movs	r2, #88	; 0x58
 80267b0:	601a      	str	r2, [r3, #0]
 80267b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80267b6:	4770      	bx	lr
 80267b8:	2000f584 	.word	0x2000f584

080267bc <_lseek>:
 80267bc:	4b02      	ldr	r3, [pc, #8]	; (80267c8 <_lseek+0xc>)
 80267be:	2258      	movs	r2, #88	; 0x58
 80267c0:	601a      	str	r2, [r3, #0]
 80267c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80267c6:	4770      	bx	lr
 80267c8:	2000f584 	.word	0x2000f584

080267cc <_read>:
 80267cc:	4b02      	ldr	r3, [pc, #8]	; (80267d8 <_read+0xc>)
 80267ce:	2258      	movs	r2, #88	; 0x58
 80267d0:	601a      	str	r2, [r3, #0]
 80267d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80267d6:	4770      	bx	lr
 80267d8:	2000f584 	.word	0x2000f584

080267dc <_sbrk>:
 80267dc:	4a04      	ldr	r2, [pc, #16]	; (80267f0 <_sbrk+0x14>)
 80267de:	6811      	ldr	r1, [r2, #0]
 80267e0:	4603      	mov	r3, r0
 80267e2:	b909      	cbnz	r1, 80267e8 <_sbrk+0xc>
 80267e4:	4903      	ldr	r1, [pc, #12]	; (80267f4 <_sbrk+0x18>)
 80267e6:	6011      	str	r1, [r2, #0]
 80267e8:	6810      	ldr	r0, [r2, #0]
 80267ea:	4403      	add	r3, r0
 80267ec:	6013      	str	r3, [r2, #0]
 80267ee:	4770      	bx	lr
 80267f0:	2000f588 	.word	0x2000f588
 80267f4:	2000f590 	.word	0x2000f590

080267f8 <_write>:
 80267f8:	4b02      	ldr	r3, [pc, #8]	; (8026804 <_write+0xc>)
 80267fa:	2258      	movs	r2, #88	; 0x58
 80267fc:	601a      	str	r2, [r3, #0]
 80267fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026802:	4770      	bx	lr
 8026804:	2000f584 	.word	0x2000f584

08026808 <_exit>:
 8026808:	e7fe      	b.n	8026808 <_exit>
	...

0802680c <_init>:
 802680c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802680e:	bf00      	nop
 8026810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026812:	bc08      	pop	{r3}
 8026814:	469e      	mov	lr, r3
 8026816:	4770      	bx	lr

08026818 <_fini>:
 8026818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802681a:	bf00      	nop
 802681c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802681e:	bc08      	pop	{r3}
 8026820:	469e      	mov	lr, r3
 8026822:	4770      	bx	lr
